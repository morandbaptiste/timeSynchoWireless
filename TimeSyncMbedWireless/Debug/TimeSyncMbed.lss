
TimeSyncMbed.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000f9e8  00000000  00000000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     000000c4  200000b0  0000f9e8  000180b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00004540  20000174  0000faac  00018174  2**2
                  ALLOC
  3 .heap         0000194c  200046b4  00013fec  00018174  2**0
                  ALLOC
  4 .stack        00002000  20006000  00015938  00018174  2**0
                  ALLOC
  5 .ARM.attributes 00000028  00000000  00000000  00018174  2**0
                  CONTENTS, READONLY
  6 .comment      000000cb  00000000  00000000  0001819c  2**0
                  CONTENTS, READONLY
  7 .debug_info   0003defc  00000000  00000000  00018267  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000060c6  00000000  00000000  00056163  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00005571  00000000  00000000  0005c229  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000790  00000000  00000000  0006179a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000006e0  00000000  00000000  00061f2a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00022165  00000000  00000000  0006260a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0001b343  00000000  00000000  0008476f  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00087f88  00000000  00000000  0009fab2  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00002aa0  00000000  00000000  00127a3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .stabstr      00000076  00000000  00000000  0012a4dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <_sfixed>:
       0:	20008000 	.word	0x20008000
       4:	00003c4d 	.word	0x00003c4d
       8:	00003c49 	.word	0x00003c49
       c:	00003c49 	.word	0x00003c49
	...
      2c:	00000ef5 	.word	0x00000ef5
	...
      38:	00000f61 	.word	0x00000f61
      3c:	00000fa5 	.word	0x00000fa5
      40:	00003c49 	.word	0x00003c49
      44:	00003c49 	.word	0x00003c49
      48:	00003c49 	.word	0x00003c49
      4c:	00001619 	.word	0x00001619
      50:	00003d0d 	.word	0x00003d0d
      54:	00003c49 	.word	0x00003c49
      58:	00003c49 	.word	0x00003c49
      5c:	00000000 	.word	0x00000000
      60:	00003c49 	.word	0x00003c49
      64:	00003c49 	.word	0x00003c49
      68:	00003c49 	.word	0x00003c49
      6c:	00003c49 	.word	0x00003c49
      70:	00003c49 	.word	0x00003c49
	...
      7c:	00003c49 	.word	0x00003c49
      80:	00003c49 	.word	0x00003c49
      84:	00003c49 	.word	0x00003c49
      88:	00005ec5 	.word	0x00005ec5
      8c:	00005ed1 	.word	0x00005ed1
      90:	00005edd 	.word	0x00005edd
	...
      ac:	00003c49 	.word	0x00003c49
      b0:	00000000 	.word	0x00000000

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	20000174 	.word	0x20000174
      d4:	00000000 	.word	0x00000000
      d8:	0000f9e8 	.word	0x0000f9e8

000000dc <frame_dummy>:
      dc:	b508      	push	{r3, lr}
      de:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4807      	ldr	r0, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4908      	ldr	r1, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd08      	pop	{r3, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	0000f9e8 	.word	0x0000f9e8
     108:	20000178 	.word	0x20000178
     10c:	0000f9e8 	.word	0x0000f9e8
     110:	00000000 	.word	0x00000000

00000114 <prvCopyDataToQueue>:

#endif /* configUSE_TRACE_FACILITY */
/*-----------------------------------------------------------*/

static void prvCopyDataToQueue( xQUEUE *pxQueue, const void *pvItemToQueue, portBASE_TYPE xPosition )
{
     114:	b510      	push	{r4, lr}
     116:	1c04      	adds	r4, r0, #0
	if( pxQueue->uxItemSize == ( unsigned portBASE_TYPE ) 0 )
     118:	6c03      	ldr	r3, [r0, #64]	; 0x40
     11a:	2b00      	cmp	r3, #0
     11c:	d108      	bne.n	130 <prvCopyDataToQueue+0x1c>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
     11e:	6803      	ldr	r3, [r0, #0]
     120:	2b00      	cmp	r3, #0
     122:	d126      	bne.n	172 <prvCopyDataToQueue+0x5e>
			{
				/* The mutex is no longer being held. */
				vTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
     124:	6840      	ldr	r0, [r0, #4]
     126:	4b15      	ldr	r3, [pc, #84]	; (17c <prvCopyDataToQueue+0x68>)
     128:	4798      	blx	r3
				pxQueue->pxMutexHolder = NULL;
     12a:	2300      	movs	r3, #0
     12c:	6063      	str	r3, [r4, #4]
     12e:	e020      	b.n	172 <prvCopyDataToQueue+0x5e>
			}
		}
		#endif
	}
	else if( xPosition == queueSEND_TO_BACK )
     130:	2a00      	cmp	r2, #0
     132:	d10e      	bne.n	152 <prvCopyDataToQueue+0x3e>
	{
		memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
     134:	6880      	ldr	r0, [r0, #8]
     136:	1c1a      	adds	r2, r3, #0
     138:	4b11      	ldr	r3, [pc, #68]	; (180 <prvCopyDataToQueue+0x6c>)
     13a:	4798      	blx	r3
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
     13c:	68a3      	ldr	r3, [r4, #8]
     13e:	6c22      	ldr	r2, [r4, #64]	; 0x40
     140:	4694      	mov	ip, r2
     142:	4463      	add	r3, ip
     144:	60a3      	str	r3, [r4, #8]
		if( pxQueue->pcWriteTo >= pxQueue->pcTail )
     146:	6862      	ldr	r2, [r4, #4]
     148:	4293      	cmp	r3, r2
     14a:	d312      	bcc.n	172 <prvCopyDataToQueue+0x5e>
		{
			pxQueue->pcWriteTo = pxQueue->pcHead;
     14c:	6823      	ldr	r3, [r4, #0]
     14e:	60a3      	str	r3, [r4, #8]
     150:	e00f      	b.n	172 <prvCopyDataToQueue+0x5e>
		}
	}
	else
	{
		memcpy( ( void * ) pxQueue->pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
     152:	68c0      	ldr	r0, [r0, #12]
     154:	1c1a      	adds	r2, r3, #0
     156:	4b0a      	ldr	r3, [pc, #40]	; (180 <prvCopyDataToQueue+0x6c>)
     158:	4798      	blx	r3
		pxQueue->pcReadFrom -= pxQueue->uxItemSize;
     15a:	6c23      	ldr	r3, [r4, #64]	; 0x40
     15c:	425b      	negs	r3, r3
     15e:	68e2      	ldr	r2, [r4, #12]
     160:	18d2      	adds	r2, r2, r3
     162:	60e2      	str	r2, [r4, #12]
		if( pxQueue->pcReadFrom < pxQueue->pcHead )
     164:	6821      	ldr	r1, [r4, #0]
     166:	428a      	cmp	r2, r1
     168:	d203      	bcs.n	172 <prvCopyDataToQueue+0x5e>
		{
			pxQueue->pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
     16a:	6862      	ldr	r2, [r4, #4]
     16c:	4694      	mov	ip, r2
     16e:	4463      	add	r3, ip
     170:	60e3      	str	r3, [r4, #12]
		}
	}

	++( pxQueue->uxMessagesWaiting );
     172:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     174:	3301      	adds	r3, #1
     176:	63a3      	str	r3, [r4, #56]	; 0x38
}
     178:	bd10      	pop	{r4, pc}
     17a:	46c0      	nop			; (mov r8, r8)
     17c:	00000e6d 	.word	0x00000e6d
     180:	00009a6b 	.word	0x00009a6b

00000184 <prvCopyDataFromQueue>:
/*-----------------------------------------------------------*/

static void prvCopyDataFromQueue( xQUEUE * const pxQueue, const void *pvBuffer )
{
     184:	b538      	push	{r3, r4, r5, lr}
	if( pxQueue->uxQueueType != queueQUEUE_IS_MUTEX )
     186:	6804      	ldr	r4, [r0, #0]
     188:	2c00      	cmp	r4, #0
     18a:	d00c      	beq.n	1a6 <prvCopyDataFromQueue+0x22>
	{
		pxQueue->pcReadFrom += pxQueue->uxItemSize;
     18c:	6c02      	ldr	r2, [r0, #64]	; 0x40
     18e:	68c3      	ldr	r3, [r0, #12]
     190:	189b      	adds	r3, r3, r2
     192:	60c3      	str	r3, [r0, #12]
		if( pxQueue->pcReadFrom >= pxQueue->pcTail )
     194:	6845      	ldr	r5, [r0, #4]
     196:	42ab      	cmp	r3, r5
     198:	d300      	bcc.n	19c <prvCopyDataFromQueue+0x18>
		{
			pxQueue->pcReadFrom = pxQueue->pcHead;
     19a:	60c4      	str	r4, [r0, #12]
     19c:	1c0b      	adds	r3, r1, #0
		}
		memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->pcReadFrom, ( size_t ) pxQueue->uxItemSize );
     19e:	68c1      	ldr	r1, [r0, #12]
     1a0:	1c18      	adds	r0, r3, #0
     1a2:	4b01      	ldr	r3, [pc, #4]	; (1a8 <prvCopyDataFromQueue+0x24>)
     1a4:	4798      	blx	r3
	}
}
     1a6:	bd38      	pop	{r3, r4, r5, pc}
     1a8:	00009a6b 	.word	0x00009a6b

000001ac <prvUnlockQueue>:
/*-----------------------------------------------------------*/

static void prvUnlockQueue( xQUEUE *pxQueue )
{
     1ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     1ae:	1c04      	adds	r4, r0, #0

	/* The lock counts contains the number of extra data items placed or
	removed from the queue while the queue was locked.  When a queue is
	locked items can be added or removed, but the event lists cannot be
	updated. */
	taskENTER_CRITICAL();
     1b0:	4b21      	ldr	r3, [pc, #132]	; (238 <prvUnlockQueue+0x8c>)
     1b2:	4798      	blx	r3
	{
		/* See if data was added to the queue while it was locked. */
		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
     1b4:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     1b6:	2b00      	cmp	r3, #0
     1b8:	dd16      	ble.n	1e8 <prvUnlockQueue+0x3c>
			}
			#else /* configUSE_QUEUE_SETS */
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     1ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
     1bc:	2b00      	cmp	r3, #0
     1be:	d104      	bne.n	1ca <prvUnlockQueue+0x1e>
     1c0:	e012      	b.n	1e8 <prvUnlockQueue+0x3c>
     1c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
     1c4:	2b00      	cmp	r3, #0
     1c6:	d104      	bne.n	1d2 <prvUnlockQueue+0x26>
     1c8:	e00e      	b.n	1e8 <prvUnlockQueue+0x3c>
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     1ca:	1c25      	adds	r5, r4, #0
     1cc:	3524      	adds	r5, #36	; 0x24
     1ce:	4f1b      	ldr	r7, [pc, #108]	; (23c <prvUnlockQueue+0x90>)
					{
						/* The task waiting has a higher priority so record that a
						context	switch is required. */
						vTaskMissedYield();
     1d0:	4e1b      	ldr	r6, [pc, #108]	; (240 <prvUnlockQueue+0x94>)
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     1d2:	1c28      	adds	r0, r5, #0
     1d4:	47b8      	blx	r7
     1d6:	2800      	cmp	r0, #0
     1d8:	d000      	beq.n	1dc <prvUnlockQueue+0x30>
					{
						/* The task waiting has a higher priority so record that a
						context	switch is required. */
						vTaskMissedYield();
     1da:	47b0      	blx	r6
					break;
				}
			}
			#endif /* configUSE_QUEUE_SETS */

			--( pxQueue->xTxLock );
     1dc:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     1de:	3b01      	subs	r3, #1
     1e0:	64a3      	str	r3, [r4, #72]	; 0x48
	locked items can be added or removed, but the event lists cannot be
	updated. */
	taskENTER_CRITICAL();
	{
		/* See if data was added to the queue while it was locked. */
		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
     1e2:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     1e4:	2b00      	cmp	r3, #0
     1e6:	dcec      	bgt.n	1c2 <prvUnlockQueue+0x16>
			#endif /* configUSE_QUEUE_SETS */

			--( pxQueue->xTxLock );
		}

		pxQueue->xTxLock = queueUNLOCKED;
     1e8:	2301      	movs	r3, #1
     1ea:	425b      	negs	r3, r3
     1ec:	64a3      	str	r3, [r4, #72]	; 0x48
	}
	taskEXIT_CRITICAL();
     1ee:	4b15      	ldr	r3, [pc, #84]	; (244 <prvUnlockQueue+0x98>)
     1f0:	4798      	blx	r3

	/* Do the same for the Rx lock. */
	taskENTER_CRITICAL();
     1f2:	4b11      	ldr	r3, [pc, #68]	; (238 <prvUnlockQueue+0x8c>)
     1f4:	4798      	blx	r3
	{
		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
     1f6:	6c63      	ldr	r3, [r4, #68]	; 0x44
     1f8:	2b00      	cmp	r3, #0
     1fa:	dd16      	ble.n	22a <prvUnlockQueue+0x7e>
		{
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     1fc:	6923      	ldr	r3, [r4, #16]
     1fe:	2b00      	cmp	r3, #0
     200:	d104      	bne.n	20c <prvUnlockQueue+0x60>
     202:	e012      	b.n	22a <prvUnlockQueue+0x7e>
     204:	6923      	ldr	r3, [r4, #16]
     206:	2b00      	cmp	r3, #0
     208:	d104      	bne.n	214 <prvUnlockQueue+0x68>
     20a:	e00e      	b.n	22a <prvUnlockQueue+0x7e>
			{
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     20c:	1c25      	adds	r5, r4, #0
     20e:	3510      	adds	r5, #16
     210:	4f0a      	ldr	r7, [pc, #40]	; (23c <prvUnlockQueue+0x90>)
				{
					vTaskMissedYield();
     212:	4e0b      	ldr	r6, [pc, #44]	; (240 <prvUnlockQueue+0x94>)
	{
		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
		{
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
			{
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     214:	1c28      	adds	r0, r5, #0
     216:	47b8      	blx	r7
     218:	2800      	cmp	r0, #0
     21a:	d000      	beq.n	21e <prvUnlockQueue+0x72>
				{
					vTaskMissedYield();
     21c:	47b0      	blx	r6
				}

				--( pxQueue->xRxLock );
     21e:	6c63      	ldr	r3, [r4, #68]	; 0x44
     220:	3b01      	subs	r3, #1
     222:	6463      	str	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();

	/* Do the same for the Rx lock. */
	taskENTER_CRITICAL();
	{
		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
     224:	6c63      	ldr	r3, [r4, #68]	; 0x44
     226:	2b00      	cmp	r3, #0
     228:	dcec      	bgt.n	204 <prvUnlockQueue+0x58>
			{
				break;
			}
		}

		pxQueue->xRxLock = queueUNLOCKED;
     22a:	2301      	movs	r3, #1
     22c:	425b      	negs	r3, r3
     22e:	6463      	str	r3, [r4, #68]	; 0x44
	}
	taskEXIT_CRITICAL();
     230:	4b04      	ldr	r3, [pc, #16]	; (244 <prvUnlockQueue+0x98>)
     232:	4798      	blx	r3
}
     234:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     236:	46c0      	nop			; (mov r8, r8)
     238:	00000f35 	.word	0x00000f35
     23c:	00000ccd 	.word	0x00000ccd
     240:	00000dd9 	.word	0x00000dd9
     244:	00000f4d 	.word	0x00000f4d

00000248 <xQueueGenericReset>:
	}														\
	taskEXIT_CRITICAL()
/*-----------------------------------------------------------*/

portBASE_TYPE xQueueGenericReset( xQueueHandle xQueue, portBASE_TYPE xNewQueue )
{
     248:	b538      	push	{r3, r4, r5, lr}
xQUEUE *pxQueue;

	pxQueue = ( xQUEUE * ) xQueue;
	configASSERT( pxQueue );
     24a:	2800      	cmp	r0, #0
     24c:	d101      	bne.n	252 <xQueueGenericReset+0xa>
     24e:	b672      	cpsid	i
     250:	e7fe      	b.n	250 <xQueueGenericReset+0x8>
     252:	1c0d      	adds	r5, r1, #0
     254:	1c04      	adds	r4, r0, #0

	taskENTER_CRITICAL();
     256:	4b15      	ldr	r3, [pc, #84]	; (2ac <xQueueGenericReset+0x64>)
     258:	4798      	blx	r3
	{
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
     25a:	6822      	ldr	r2, [r4, #0]
     25c:	6c21      	ldr	r1, [r4, #64]	; 0x40
     25e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     260:	434b      	muls	r3, r1
     262:	18d0      	adds	r0, r2, r3
     264:	6060      	str	r0, [r4, #4]
		pxQueue->uxMessagesWaiting = ( unsigned portBASE_TYPE ) 0U;
     266:	2000      	movs	r0, #0
     268:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
     26a:	60a2      	str	r2, [r4, #8]
		pxQueue->pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( unsigned portBASE_TYPE ) 1U ) * pxQueue->uxItemSize );
     26c:	1a5b      	subs	r3, r3, r1
     26e:	18d3      	adds	r3, r2, r3
     270:	60e3      	str	r3, [r4, #12]
		pxQueue->xRxLock = queueUNLOCKED;
     272:	2301      	movs	r3, #1
     274:	425b      	negs	r3, r3
     276:	6463      	str	r3, [r4, #68]	; 0x44
		pxQueue->xTxLock = queueUNLOCKED;
     278:	64a3      	str	r3, [r4, #72]	; 0x48

		if( xNewQueue == pdFALSE )
     27a:	2d00      	cmp	r5, #0
     27c:	d10b      	bne.n	296 <xQueueGenericReset+0x4e>
			/* If there are tasks blocked waiting to read from the queue, then
			the tasks will remain blocked as after this function exits the queue
			will still be empty.  If there are tasks blocked waiting to	write to
			the queue, then one should be unblocked as after this function exits
			it will be possible to write to it. */
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     27e:	6923      	ldr	r3, [r4, #16]
     280:	2b00      	cmp	r3, #0
     282:	d00f      	beq.n	2a4 <xQueueGenericReset+0x5c>
			{
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
     284:	1c20      	adds	r0, r4, #0
     286:	3010      	adds	r0, #16
     288:	4b09      	ldr	r3, [pc, #36]	; (2b0 <xQueueGenericReset+0x68>)
     28a:	4798      	blx	r3
     28c:	2801      	cmp	r0, #1
     28e:	d109      	bne.n	2a4 <xQueueGenericReset+0x5c>
				{
					portYIELD_WITHIN_API();
     290:	4b08      	ldr	r3, [pc, #32]	; (2b4 <xQueueGenericReset+0x6c>)
     292:	4798      	blx	r3
     294:	e006      	b.n	2a4 <xQueueGenericReset+0x5c>
			}
		}
		else
		{
			/* Ensure the event queues start in the correct state. */
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
     296:	1c20      	adds	r0, r4, #0
     298:	3010      	adds	r0, #16
     29a:	4d07      	ldr	r5, [pc, #28]	; (2b8 <xQueueGenericReset+0x70>)
     29c:	47a8      	blx	r5
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
     29e:	1c20      	adds	r0, r4, #0
     2a0:	3024      	adds	r0, #36	; 0x24
     2a2:	47a8      	blx	r5
		}
	}
	taskEXIT_CRITICAL();
     2a4:	4b05      	ldr	r3, [pc, #20]	; (2bc <xQueueGenericReset+0x74>)
     2a6:	4798      	blx	r3

	/* A value is returned for calling semantic consistency with previous
	versions. */
	return pdPASS;
}
     2a8:	2001      	movs	r0, #1
     2aa:	bd38      	pop	{r3, r4, r5, pc}
     2ac:	00000f35 	.word	0x00000f35
     2b0:	00000ccd 	.word	0x00000ccd
     2b4:	00000f1d 	.word	0x00000f1d
     2b8:	00000611 	.word	0x00000611
     2bc:	00000f4d 	.word	0x00000f4d

000002c0 <xQueueGenericCreate>:
/*-----------------------------------------------------------*/

xQueueHandle xQueueGenericCreate( unsigned portBASE_TYPE uxQueueLength, unsigned portBASE_TYPE uxItemSize, unsigned char ucQueueType )
{
     2c0:	b570      	push	{r4, r5, r6, lr}
	/* Remove compiler warnings about unused parameters should
	configUSE_TRACE_FACILITY not be set to 1. */
	( void ) ucQueueType;

	/* Allocate the new queue structure. */
	if( uxQueueLength > ( unsigned portBASE_TYPE ) 0 )
     2c2:	2800      	cmp	r0, #0
     2c4:	d013      	beq.n	2ee <xQueueGenericCreate+0x2e>
     2c6:	1c0e      	adds	r6, r1, #0
     2c8:	1c05      	adds	r5, r0, #0
	{
		pxNewQueue = ( xQUEUE * ) pvPortMalloc( sizeof( xQUEUE ) );
     2ca:	204c      	movs	r0, #76	; 0x4c
     2cc:	4b0d      	ldr	r3, [pc, #52]	; (304 <xQueueGenericCreate+0x44>)
     2ce:	4798      	blx	r3
     2d0:	1e04      	subs	r4, r0, #0
		if( pxNewQueue != NULL )
     2d2:	d00c      	beq.n	2ee <xQueueGenericCreate+0x2e>
		{
			/* Create the list of pointers to queue items.  The queue is one byte
			longer than asked for to make wrap checking easier/faster. */
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ) + ( size_t ) 1;
     2d4:	1c30      	adds	r0, r6, #0
     2d6:	4368      	muls	r0, r5
     2d8:	3001      	adds	r0, #1

			pxNewQueue->pcHead = ( signed char * ) pvPortMalloc( xQueueSizeInBytes );
     2da:	4b0a      	ldr	r3, [pc, #40]	; (304 <xQueueGenericCreate+0x44>)
     2dc:	4798      	blx	r3
     2de:	6020      	str	r0, [r4, #0]
			if( pxNewQueue->pcHead != NULL )
     2e0:	2800      	cmp	r0, #0
     2e2:	d106      	bne.n	2f2 <xQueueGenericCreate+0x32>
				xReturn = pxNewQueue;
			}
			else
			{
				traceQUEUE_CREATE_FAILED( ucQueueType );
				vPortFree( pxNewQueue );
     2e4:	1c20      	adds	r0, r4, #0
     2e6:	4b08      	ldr	r3, [pc, #32]	; (308 <xQueueGenericCreate+0x48>)
     2e8:	4798      	blx	r3
     2ea:	e000      	b.n	2ee <xQueueGenericCreate+0x2e>
			}
		}
	}

	configASSERT( xReturn );
     2ec:	e7fe      	b.n	2ec <xQueueGenericCreate+0x2c>
     2ee:	b672      	cpsid	i
     2f0:	e7fc      	b.n	2ec <xQueueGenericCreate+0x2c>
			pxNewQueue->pcHead = ( signed char * ) pvPortMalloc( xQueueSizeInBytes );
			if( pxNewQueue->pcHead != NULL )
			{
				/* Initialise the queue members as described above where the
				queue type is defined. */
				pxNewQueue->uxLength = uxQueueLength;
     2f2:	63e5      	str	r5, [r4, #60]	; 0x3c
				pxNewQueue->uxItemSize = uxItemSize;
     2f4:	6426      	str	r6, [r4, #64]	; 0x40
				xQueueGenericReset( pxNewQueue, pdTRUE );
     2f6:	1c20      	adds	r0, r4, #0
     2f8:	2101      	movs	r1, #1
     2fa:	4b04      	ldr	r3, [pc, #16]	; (30c <xQueueGenericCreate+0x4c>)
     2fc:	4798      	blx	r3
	}

	configASSERT( xReturn );

	return xReturn;
}
     2fe:	1c20      	adds	r0, r4, #0
     300:	bd70      	pop	{r4, r5, r6, pc}
     302:	46c0      	nop			; (mov r8, r8)
     304:	00001029 	.word	0x00001029
     308:	00001091 	.word	0x00001091
     30c:	00000249 	.word	0x00000249

00000310 <xQueueGenericSend>:

#endif /* configUSE_COUNTING_SEMAPHORES */
/*-----------------------------------------------------------*/

signed portBASE_TYPE xQueueGenericSend( xQueueHandle xQueue, const void * const pvItemToQueue, portTickType xTicksToWait, portBASE_TYPE xCopyPosition )
{
     310:	b5f0      	push	{r4, r5, r6, r7, lr}
     312:	4657      	mov	r7, sl
     314:	b480      	push	{r7}
     316:	b086      	sub	sp, #24
     318:	9203      	str	r2, [sp, #12]
signed portBASE_TYPE xEntryTimeSet = pdFALSE;
xTimeOutType xTimeOut;
xQUEUE *pxQueue;

	pxQueue = ( xQUEUE * ) xQueue;
	configASSERT( pxQueue );
     31a:	2800      	cmp	r0, #0
     31c:	d101      	bne.n	322 <xQueueGenericSend+0x12>
     31e:	b672      	cpsid	i
     320:	e7fe      	b.n	320 <xQueueGenericSend+0x10>
     322:	2700      	movs	r7, #0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U ) ) );
     324:	2900      	cmp	r1, #0
     326:	d105      	bne.n	334 <xQueueGenericSend+0x24>
     328:	6c02      	ldr	r2, [r0, #64]	; 0x40
     32a:	2a00      	cmp	r2, #0
     32c:	d001      	beq.n	332 <xQueueGenericSend+0x22>
     32e:	b672      	cpsid	i
     330:	e7fe      	b.n	330 <xQueueGenericSend+0x20>
     332:	2700      	movs	r7, #0
     334:	9302      	str	r3, [sp, #8]
     336:	9101      	str	r1, [sp, #4]
     338:	1c04      	adds	r4, r0, #0
	/* This function relaxes the coding standard somewhat to allow return
	statements within the function itself.  This is done in the interest
	of execution time efficiency. */
	for( ;; )
	{
		taskENTER_CRITICAL();
     33a:	4d33      	ldr	r5, [pc, #204]	; (408 <xQueueGenericSend+0xf8>)
     33c:	47a8      	blx	r5
		{
			/* Is there room on the queue now?  To be running we must be
			the highest priority task wanting to access the queue. */
			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
     33e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     340:	6be2      	ldr	r2, [r4, #60]	; 0x3c
     342:	4293      	cmp	r3, r2
     344:	d213      	bcs.n	36e <xQueueGenericSend+0x5e>
			{
				traceQUEUE_SEND( pxQueue );
				prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
     346:	1c20      	adds	r0, r4, #0
     348:	9901      	ldr	r1, [sp, #4]
     34a:	9a02      	ldr	r2, [sp, #8]
     34c:	4b2f      	ldr	r3, [pc, #188]	; (40c <xQueueGenericSend+0xfc>)
     34e:	4798      	blx	r3
				}
				#else /* configUSE_QUEUE_SETS */
				{
					/* If there was a task waiting for data to arrive on the
					queue then unblock it now. */
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     350:	6a63      	ldr	r3, [r4, #36]	; 0x24
     352:	2b00      	cmp	r3, #0
     354:	d007      	beq.n	366 <xQueueGenericSend+0x56>
					{
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
     356:	1c20      	adds	r0, r4, #0
     358:	3024      	adds	r0, #36	; 0x24
     35a:	4b2d      	ldr	r3, [pc, #180]	; (410 <xQueueGenericSend+0x100>)
     35c:	4798      	blx	r3
     35e:	2801      	cmp	r0, #1
     360:	d101      	bne.n	366 <xQueueGenericSend+0x56>
						{
							/* The unblocked task has a priority higher than
							our own so yield immediately.  Yes it is ok to do
							this from within the critical section - the kernel
							takes care of that. */
							portYIELD_WITHIN_API();
     362:	4b2c      	ldr	r3, [pc, #176]	; (414 <xQueueGenericSend+0x104>)
     364:	4798      	blx	r3
						}
					}
				}
				#endif /* configUSE_QUEUE_SETS */

				taskEXIT_CRITICAL();
     366:	4b2c      	ldr	r3, [pc, #176]	; (418 <xQueueGenericSend+0x108>)
     368:	4798      	blx	r3

				/* Return to the original privilege level before exiting the
				function. */
				return pdPASS;
     36a:	2001      	movs	r0, #1
     36c:	e048      	b.n	400 <xQueueGenericSend+0xf0>
			}
			else
			{
				if( xTicksToWait == ( portTickType ) 0 )
     36e:	9b03      	ldr	r3, [sp, #12]
     370:	2b00      	cmp	r3, #0
     372:	d103      	bne.n	37c <xQueueGenericSend+0x6c>
				{
					/* The queue was full and no block time is specified (or
					the block time has expired) so leave now. */
					taskEXIT_CRITICAL();
     374:	4b28      	ldr	r3, [pc, #160]	; (418 <xQueueGenericSend+0x108>)
     376:	4798      	blx	r3

					/* Return to the original privilege level before exiting
					the function. */
					traceQUEUE_SEND_FAILED( pxQueue );
					return errQUEUE_FULL;
     378:	2000      	movs	r0, #0
     37a:	e041      	b.n	400 <xQueueGenericSend+0xf0>
				}
				else if( xEntryTimeSet == pdFALSE )
     37c:	2f00      	cmp	r7, #0
     37e:	d103      	bne.n	388 <xQueueGenericSend+0x78>
				{
					/* The queue was full and a block time was specified so
					configure the timeout structure. */
					vTaskSetTimeOutState( &xTimeOut );
     380:	a804      	add	r0, sp, #16
     382:	4b26      	ldr	r3, [pc, #152]	; (41c <xQueueGenericSend+0x10c>)
     384:	4798      	blx	r3
					xEntryTimeSet = pdTRUE;
     386:	3701      	adds	r7, #1
				}
			}
		}
		taskEXIT_CRITICAL();
     388:	4b23      	ldr	r3, [pc, #140]	; (418 <xQueueGenericSend+0x108>)
     38a:	4798      	blx	r3

		/* Interrupts and other tasks can send to and receive from the queue
		now the critical section has been exited. */

		vTaskSuspendAll();
     38c:	4b24      	ldr	r3, [pc, #144]	; (420 <xQueueGenericSend+0x110>)
     38e:	4798      	blx	r3
		prvLockQueue( pxQueue );
     390:	4b1d      	ldr	r3, [pc, #116]	; (408 <xQueueGenericSend+0xf8>)
     392:	4798      	blx	r3
     394:	6c63      	ldr	r3, [r4, #68]	; 0x44
     396:	3301      	adds	r3, #1
     398:	d101      	bne.n	39e <xQueueGenericSend+0x8e>
     39a:	2300      	movs	r3, #0
     39c:	6463      	str	r3, [r4, #68]	; 0x44
     39e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     3a0:	3301      	adds	r3, #1
     3a2:	d101      	bne.n	3a8 <xQueueGenericSend+0x98>
     3a4:	2300      	movs	r3, #0
     3a6:	64a3      	str	r3, [r4, #72]	; 0x48
     3a8:	4b1b      	ldr	r3, [pc, #108]	; (418 <xQueueGenericSend+0x108>)
     3aa:	4798      	blx	r3

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
     3ac:	a804      	add	r0, sp, #16
     3ae:	a903      	add	r1, sp, #12
     3b0:	4b1c      	ldr	r3, [pc, #112]	; (424 <xQueueGenericSend+0x114>)
     3b2:	4798      	blx	r3
     3b4:	2800      	cmp	r0, #0
     3b6:	d11d      	bne.n	3f4 <xQueueGenericSend+0xe4>

static signed portBASE_TYPE prvIsQueueFull( const xQUEUE *pxQueue )
{
signed portBASE_TYPE xReturn;

	taskENTER_CRITICAL();
     3b8:	4b13      	ldr	r3, [pc, #76]	; (408 <xQueueGenericSend+0xf8>)
     3ba:	4798      	blx	r3
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
     3bc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     3be:	469a      	mov	sl, r3
     3c0:	6be6      	ldr	r6, [r4, #60]	; 0x3c
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
     3c2:	4b15      	ldr	r3, [pc, #84]	; (418 <xQueueGenericSend+0x108>)
     3c4:	4798      	blx	r3
		prvLockQueue( pxQueue );

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
		{
			if( prvIsQueueFull( pxQueue ) != pdFALSE )
     3c6:	45b2      	cmp	sl, r6
     3c8:	d10e      	bne.n	3e8 <xQueueGenericSend+0xd8>
			{
				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
     3ca:	1c20      	adds	r0, r4, #0
     3cc:	3010      	adds	r0, #16
     3ce:	9903      	ldr	r1, [sp, #12]
     3d0:	4b15      	ldr	r3, [pc, #84]	; (428 <xQueueGenericSend+0x118>)
     3d2:	4798      	blx	r3
				/* Unlocking the queue means queue events can effect the
				event list.  It is possible	that interrupts occurring now
				remove this task from the event	list again - but as the
				scheduler is suspended the task will go onto the pending
				ready last instead of the actual ready list. */
				prvUnlockQueue( pxQueue );
     3d4:	1c20      	adds	r0, r4, #0
     3d6:	4b15      	ldr	r3, [pc, #84]	; (42c <xQueueGenericSend+0x11c>)
     3d8:	4798      	blx	r3
				/* Resuming the scheduler will move tasks from the pending
				ready list into the ready list - so it is feasible that this
				task is already in a ready list before it yields - in which
				case the yield will not cause a context switch unless there
				is also a higher priority task in the pending ready list. */
				if( xTaskResumeAll() == pdFALSE )
     3da:	4b15      	ldr	r3, [pc, #84]	; (430 <xQueueGenericSend+0x120>)
     3dc:	4798      	blx	r3
     3de:	2800      	cmp	r0, #0
     3e0:	d1ac      	bne.n	33c <xQueueGenericSend+0x2c>
				{
					portYIELD_WITHIN_API();
     3e2:	4b0c      	ldr	r3, [pc, #48]	; (414 <xQueueGenericSend+0x104>)
     3e4:	4798      	blx	r3
     3e6:	e7a9      	b.n	33c <xQueueGenericSend+0x2c>
				}
			}
			else
			{
				/* Try again. */
				prvUnlockQueue( pxQueue );
     3e8:	1c20      	adds	r0, r4, #0
     3ea:	4b10      	ldr	r3, [pc, #64]	; (42c <xQueueGenericSend+0x11c>)
     3ec:	4798      	blx	r3
				( void ) xTaskResumeAll();
     3ee:	4b10      	ldr	r3, [pc, #64]	; (430 <xQueueGenericSend+0x120>)
     3f0:	4798      	blx	r3
     3f2:	e7a3      	b.n	33c <xQueueGenericSend+0x2c>
			}
		}
		else
		{
			/* The timeout has expired. */
			prvUnlockQueue( pxQueue );
     3f4:	1c20      	adds	r0, r4, #0
     3f6:	4b0d      	ldr	r3, [pc, #52]	; (42c <xQueueGenericSend+0x11c>)
     3f8:	4798      	blx	r3
			( void ) xTaskResumeAll();
     3fa:	4b0d      	ldr	r3, [pc, #52]	; (430 <xQueueGenericSend+0x120>)
     3fc:	4798      	blx	r3

			/* Return to the original privilege level before exiting the
			function. */
			traceQUEUE_SEND_FAILED( pxQueue );
			return errQUEUE_FULL;
     3fe:	2000      	movs	r0, #0
		}
	}
}
     400:	b006      	add	sp, #24
     402:	bc04      	pop	{r2}
     404:	4692      	mov	sl, r2
     406:	bdf0      	pop	{r4, r5, r6, r7, pc}
     408:	00000f35 	.word	0x00000f35
     40c:	00000115 	.word	0x00000115
     410:	00000ccd 	.word	0x00000ccd
     414:	00000f1d 	.word	0x00000f1d
     418:	00000f4d 	.word	0x00000f4d
     41c:	00000d49 	.word	0x00000d49
     420:	00000955 	.word	0x00000955
     424:	00000d69 	.word	0x00000d69
     428:	00000c8d 	.word	0x00000c8d
     42c:	000001ad 	.word	0x000001ad
     430:	00000aa1 	.word	0x00000aa1

00000434 <xQueueGenericSendFromISR>:

#endif /* configUSE_ALTERNATIVE_API */
/*-----------------------------------------------------------*/

signed portBASE_TYPE xQueueGenericSendFromISR( xQueueHandle xQueue, const void * const pvItemToQueue, signed portBASE_TYPE *pxHigherPriorityTaskWoken, portBASE_TYPE xCopyPosition )
{
     434:	b570      	push	{r4, r5, r6, lr}
signed portBASE_TYPE xReturn;
unsigned portBASE_TYPE uxSavedInterruptStatus;
xQUEUE *pxQueue;

	pxQueue = ( xQUEUE * ) xQueue;
	configASSERT( pxQueue );
     436:	2800      	cmp	r0, #0
     438:	d101      	bne.n	43e <xQueueGenericSendFromISR+0xa>
     43a:	b672      	cpsid	i
     43c:	e7fe      	b.n	43c <xQueueGenericSendFromISR+0x8>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U ) ) );
     43e:	2900      	cmp	r1, #0
     440:	d104      	bne.n	44c <xQueueGenericSendFromISR+0x18>
     442:	6c04      	ldr	r4, [r0, #64]	; 0x40
     444:	2c00      	cmp	r4, #0
     446:	d001      	beq.n	44c <xQueueGenericSendFromISR+0x18>
     448:	b672      	cpsid	i
     44a:	e7fe      	b.n	44a <xQueueGenericSendFromISR+0x16>
	/* Similar to xQueueGenericSend, except we don't block if there is no room
	in the queue.  Also we don't directly wake a task that was blocked on a
	queue read, instead we return a flag to say whether a context switch is
	required or not (i.e. has a task with a higher priority than us been woken
	by this	post). */
	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
     44c:	b672      	cpsid	i
	{
		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
     44e:	6b84      	ldr	r4, [r0, #56]	; 0x38
			xReturn = pdPASS;
		}
		else
		{
			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
			xReturn = errQUEUE_FULL;
     450:	2500      	movs	r5, #0
	queue read, instead we return a flag to say whether a context switch is
	required or not (i.e. has a task with a higher priority than us been woken
	by this	post). */
	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
	{
		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
     452:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
     454:	42b4      	cmp	r4, r6
     456:	d21c      	bcs.n	492 <xQueueGenericSendFromISR+0x5e>
     458:	1c16      	adds	r6, r2, #0
     45a:	1c04      	adds	r4, r0, #0
		{
			traceQUEUE_SEND_FROM_ISR( pxQueue );

			prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
     45c:	1c1a      	adds	r2, r3, #0
     45e:	4b0e      	ldr	r3, [pc, #56]	; (498 <xQueueGenericSendFromISR+0x64>)
     460:	4798      	blx	r3

			/* If the queue is locked we do not alter the event list.  This will
			be done when the queue is unlocked later. */
			if( pxQueue->xTxLock == queueUNLOCKED )
     462:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     464:	3301      	adds	r3, #1
     466:	d10e      	bne.n	486 <xQueueGenericSendFromISR+0x52>
						}
					}
				}
				#else /* configUSE_QUEUE_SETS */
				{
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     468:	6a63      	ldr	r3, [r4, #36]	; 0x24
				/* Increment the lock count so the task that unlocks the queue
				knows that data was posted while it was locked. */
				++( pxQueue->xTxLock );
			}

			xReturn = pdPASS;
     46a:	3501      	adds	r5, #1
						}
					}
				}
				#else /* configUSE_QUEUE_SETS */
				{
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     46c:	2b00      	cmp	r3, #0
     46e:	d010      	beq.n	492 <xQueueGenericSendFromISR+0x5e>
					{
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     470:	1c20      	adds	r0, r4, #0
     472:	3024      	adds	r0, #36	; 0x24
     474:	4b09      	ldr	r3, [pc, #36]	; (49c <xQueueGenericSendFromISR+0x68>)
     476:	4798      	blx	r3
     478:	2800      	cmp	r0, #0
     47a:	d00a      	beq.n	492 <xQueueGenericSendFromISR+0x5e>
						{
							/* The task waiting has a higher priority so record that a
							context	switch is required. */
							if( pxHigherPriorityTaskWoken != NULL )
     47c:	2e00      	cmp	r6, #0
     47e:	d007      	beq.n	490 <xQueueGenericSendFromISR+0x5c>
							{
								*pxHigherPriorityTaskWoken = pdTRUE;
     480:	2301      	movs	r3, #1
     482:	6033      	str	r3, [r6, #0]
     484:	e005      	b.n	492 <xQueueGenericSendFromISR+0x5e>
			}
			else
			{
				/* Increment the lock count so the task that unlocks the queue
				knows that data was posted while it was locked. */
				++( pxQueue->xTxLock );
     486:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     488:	3301      	adds	r3, #1
     48a:	64a3      	str	r3, [r4, #72]	; 0x48
			}

			xReturn = pdPASS;
     48c:	2501      	movs	r5, #1
     48e:	e000      	b.n	492 <xQueueGenericSendFromISR+0x5e>
     490:	2501      	movs	r5, #1
		{
			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
			xReturn = errQUEUE_FULL;
		}
	}
	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
     492:	b662      	cpsie	i

	return xReturn;
}
     494:	1c28      	adds	r0, r5, #0
     496:	bd70      	pop	{r4, r5, r6, pc}
     498:	00000115 	.word	0x00000115
     49c:	00000ccd 	.word	0x00000ccd

000004a0 <xQueueGenericReceive>:
/*-----------------------------------------------------------*/

signed portBASE_TYPE xQueueGenericReceive( xQueueHandle xQueue, void * const pvBuffer, portTickType xTicksToWait, portBASE_TYPE xJustPeeking )
{
     4a0:	b5f0      	push	{r4, r5, r6, r7, lr}
     4a2:	464f      	mov	r7, r9
     4a4:	b480      	push	{r7}
     4a6:	b084      	sub	sp, #16
     4a8:	9201      	str	r2, [sp, #4]
xTimeOutType xTimeOut;
signed char *pcOriginalReadPosition;
xQUEUE *pxQueue;

	pxQueue = ( xQUEUE * ) xQueue;
	configASSERT( pxQueue );
     4aa:	2800      	cmp	r0, #0
     4ac:	d101      	bne.n	4b2 <xQueueGenericReceive+0x12>
     4ae:	b672      	cpsid	i
     4b0:	e7fe      	b.n	4b0 <xQueueGenericReceive+0x10>
     4b2:	2700      	movs	r7, #0
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U ) ) );
     4b4:	2900      	cmp	r1, #0
     4b6:	d105      	bne.n	4c4 <xQueueGenericReceive+0x24>
     4b8:	6c02      	ldr	r2, [r0, #64]	; 0x40
     4ba:	2a00      	cmp	r2, #0
     4bc:	d001      	beq.n	4c2 <xQueueGenericReceive+0x22>
     4be:	b672      	cpsid	i
     4c0:	e7fe      	b.n	4c0 <xQueueGenericReceive+0x20>
     4c2:	2700      	movs	r7, #0
     4c4:	1c1d      	adds	r5, r3, #0
     4c6:	9100      	str	r1, [sp, #0]
     4c8:	1c04      	adds	r4, r0, #0
	statements within the function itself.  This is done in the interest
	of execution time efficiency. */

	for( ;; )
	{
		taskENTER_CRITICAL();
     4ca:	4e44      	ldr	r6, [pc, #272]	; (5dc <xQueueGenericReceive+0x13c>)
     4cc:	47b0      	blx	r6
		{
			/* Is there data in the queue now?  To be running we must be
			the highest priority task wanting to access the queue. */
			if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
     4ce:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     4d0:	2b00      	cmp	r3, #0
     4d2:	d02b      	beq.n	52c <xQueueGenericReceive+0x8c>
			{
				/* Remember our read position in case we are just peeking. */
				pcOriginalReadPosition = pxQueue->pcReadFrom;
     4d4:	68e7      	ldr	r7, [r4, #12]

				prvCopyDataFromQueue( pxQueue, pvBuffer );
     4d6:	1c20      	adds	r0, r4, #0
     4d8:	9900      	ldr	r1, [sp, #0]
     4da:	4b41      	ldr	r3, [pc, #260]	; (5e0 <xQueueGenericReceive+0x140>)
     4dc:	4798      	blx	r3

				if( xJustPeeking == pdFALSE )
     4de:	2d00      	cmp	r5, #0
     4e0:	d114      	bne.n	50c <xQueueGenericReceive+0x6c>
				{
					traceQUEUE_RECEIVE( pxQueue );

					/* We are actually removing data. */
					--( pxQueue->uxMessagesWaiting );
     4e2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     4e4:	3b01      	subs	r3, #1
     4e6:	63a3      	str	r3, [r4, #56]	; 0x38

					#if ( configUSE_MUTEXES == 1 )
					{
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
     4e8:	6823      	ldr	r3, [r4, #0]
     4ea:	2b00      	cmp	r3, #0
     4ec:	d102      	bne.n	4f4 <xQueueGenericReceive+0x54>
						{
							/* Record the information required to implement
							priority inheritance should it become necessary. */
							pxQueue->pxMutexHolder = xTaskGetCurrentTaskHandle();
     4ee:	4b3d      	ldr	r3, [pc, #244]	; (5e4 <xQueueGenericReceive+0x144>)
     4f0:	4798      	blx	r3
     4f2:	6060      	str	r0, [r4, #4]
						}
					}
					#endif

					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     4f4:	6923      	ldr	r3, [r4, #16]
     4f6:	2b00      	cmp	r3, #0
     4f8:	d014      	beq.n	524 <xQueueGenericReceive+0x84>
					{
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
     4fa:	1c20      	adds	r0, r4, #0
     4fc:	3010      	adds	r0, #16
     4fe:	4b3a      	ldr	r3, [pc, #232]	; (5e8 <xQueueGenericReceive+0x148>)
     500:	4798      	blx	r3
     502:	2801      	cmp	r0, #1
     504:	d10e      	bne.n	524 <xQueueGenericReceive+0x84>
						{
							portYIELD_WITHIN_API();
     506:	4b39      	ldr	r3, [pc, #228]	; (5ec <xQueueGenericReceive+0x14c>)
     508:	4798      	blx	r3
     50a:	e00b      	b.n	524 <xQueueGenericReceive+0x84>
				{
					traceQUEUE_PEEK( pxQueue );

					/* The data is not being removed, so reset the read
					pointer. */
					pxQueue->pcReadFrom = pcOriginalReadPosition;
     50c:	60e7      	str	r7, [r4, #12]

					/* The data is being left in the queue, so see if there are
					any other tasks waiting for the data. */
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     50e:	6a63      	ldr	r3, [r4, #36]	; 0x24
     510:	2b00      	cmp	r3, #0
     512:	d007      	beq.n	524 <xQueueGenericReceive+0x84>
					{
						/* Tasks that are removed from the event list will get added to
						the pending ready list as the scheduler is still suspended. */
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     514:	1c20      	adds	r0, r4, #0
     516:	3024      	adds	r0, #36	; 0x24
     518:	4b33      	ldr	r3, [pc, #204]	; (5e8 <xQueueGenericReceive+0x148>)
     51a:	4798      	blx	r3
     51c:	2800      	cmp	r0, #0
     51e:	d001      	beq.n	524 <xQueueGenericReceive+0x84>
						{
							/* The task waiting has a higher priority than this task. */
							portYIELD_WITHIN_API();
     520:	4b32      	ldr	r3, [pc, #200]	; (5ec <xQueueGenericReceive+0x14c>)
     522:	4798      	blx	r3
						}
					}
				}

				taskEXIT_CRITICAL();
     524:	4b32      	ldr	r3, [pc, #200]	; (5f0 <xQueueGenericReceive+0x150>)
     526:	4798      	blx	r3
				return pdPASS;
     528:	2001      	movs	r0, #1
     52a:	e052      	b.n	5d2 <xQueueGenericReceive+0x132>
			}
			else
			{
				if( xTicksToWait == ( portTickType ) 0 )
     52c:	9b01      	ldr	r3, [sp, #4]
     52e:	2b00      	cmp	r3, #0
     530:	d103      	bne.n	53a <xQueueGenericReceive+0x9a>
				{
					/* The queue was empty and no block time is specified (or
					the block time has expired) so leave now. */
					taskEXIT_CRITICAL();
     532:	4b2f      	ldr	r3, [pc, #188]	; (5f0 <xQueueGenericReceive+0x150>)
     534:	4798      	blx	r3
					traceQUEUE_RECEIVE_FAILED( pxQueue );
					return errQUEUE_EMPTY;
     536:	2000      	movs	r0, #0
     538:	e04b      	b.n	5d2 <xQueueGenericReceive+0x132>
				}
				else if( xEntryTimeSet == pdFALSE )
     53a:	2f00      	cmp	r7, #0
     53c:	d103      	bne.n	546 <xQueueGenericReceive+0xa6>
				{
					/* The queue was empty and a block time was specified so
					configure the timeout structure. */
					vTaskSetTimeOutState( &xTimeOut );
     53e:	a802      	add	r0, sp, #8
     540:	4b2c      	ldr	r3, [pc, #176]	; (5f4 <xQueueGenericReceive+0x154>)
     542:	4798      	blx	r3
					xEntryTimeSet = pdTRUE;
     544:	3701      	adds	r7, #1
				}
			}
		}
		taskEXIT_CRITICAL();
     546:	4b2a      	ldr	r3, [pc, #168]	; (5f0 <xQueueGenericReceive+0x150>)
     548:	4798      	blx	r3

		/* Interrupts and other tasks can send to and receive from the queue
		now the critical section has been exited. */

		vTaskSuspendAll();
     54a:	4b2b      	ldr	r3, [pc, #172]	; (5f8 <xQueueGenericReceive+0x158>)
     54c:	4798      	blx	r3
		prvLockQueue( pxQueue );
     54e:	4b23      	ldr	r3, [pc, #140]	; (5dc <xQueueGenericReceive+0x13c>)
     550:	4798      	blx	r3
     552:	6c63      	ldr	r3, [r4, #68]	; 0x44
     554:	3301      	adds	r3, #1
     556:	d101      	bne.n	55c <xQueueGenericReceive+0xbc>
     558:	2300      	movs	r3, #0
     55a:	6463      	str	r3, [r4, #68]	; 0x44
     55c:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     55e:	3301      	adds	r3, #1
     560:	d101      	bne.n	566 <xQueueGenericReceive+0xc6>
     562:	2300      	movs	r3, #0
     564:	64a3      	str	r3, [r4, #72]	; 0x48
     566:	4b22      	ldr	r3, [pc, #136]	; (5f0 <xQueueGenericReceive+0x150>)
     568:	4798      	blx	r3

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
     56a:	a802      	add	r0, sp, #8
     56c:	a901      	add	r1, sp, #4
     56e:	4b23      	ldr	r3, [pc, #140]	; (5fc <xQueueGenericReceive+0x15c>)
     570:	4798      	blx	r3
     572:	2800      	cmp	r0, #0
     574:	d127      	bne.n	5c6 <xQueueGenericReceive+0x126>

static signed portBASE_TYPE prvIsQueueEmpty( const xQUEUE *pxQueue )
{
signed portBASE_TYPE xReturn;

	taskENTER_CRITICAL();
     576:	4b19      	ldr	r3, [pc, #100]	; (5dc <xQueueGenericReceive+0x13c>)
     578:	4798      	blx	r3
	{
		if( pxQueue->uxMessagesWaiting == 0 )
     57a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     57c:	4699      	mov	r9, r3
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
     57e:	4b1c      	ldr	r3, [pc, #112]	; (5f0 <xQueueGenericReceive+0x150>)
     580:	4798      	blx	r3
		prvLockQueue( pxQueue );

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
		{
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
     582:	464b      	mov	r3, r9
     584:	2b00      	cmp	r3, #0
     586:	d118      	bne.n	5ba <xQueueGenericReceive+0x11a>
			{
				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );

				#if ( configUSE_MUTEXES == 1 )
				{
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
     588:	6823      	ldr	r3, [r4, #0]
     58a:	2b00      	cmp	r3, #0
     58c:	d106      	bne.n	59c <xQueueGenericReceive+0xfc>
					{
						portENTER_CRITICAL();
     58e:	4b13      	ldr	r3, [pc, #76]	; (5dc <xQueueGenericReceive+0x13c>)
     590:	4798      	blx	r3
						{
							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
     592:	6860      	ldr	r0, [r4, #4]
     594:	4b1a      	ldr	r3, [pc, #104]	; (600 <xQueueGenericReceive+0x160>)
     596:	4798      	blx	r3
						}
						portEXIT_CRITICAL();
     598:	4b15      	ldr	r3, [pc, #84]	; (5f0 <xQueueGenericReceive+0x150>)
     59a:	4798      	blx	r3
					}
				}
				#endif

				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
     59c:	1c20      	adds	r0, r4, #0
     59e:	3024      	adds	r0, #36	; 0x24
     5a0:	9901      	ldr	r1, [sp, #4]
     5a2:	4b18      	ldr	r3, [pc, #96]	; (604 <xQueueGenericReceive+0x164>)
     5a4:	4798      	blx	r3
				prvUnlockQueue( pxQueue );
     5a6:	1c20      	adds	r0, r4, #0
     5a8:	4b17      	ldr	r3, [pc, #92]	; (608 <xQueueGenericReceive+0x168>)
     5aa:	4798      	blx	r3
				if( xTaskResumeAll() == pdFALSE )
     5ac:	4b17      	ldr	r3, [pc, #92]	; (60c <xQueueGenericReceive+0x16c>)
     5ae:	4798      	blx	r3
     5b0:	2800      	cmp	r0, #0
     5b2:	d18b      	bne.n	4cc <xQueueGenericReceive+0x2c>
				{
					portYIELD_WITHIN_API();
     5b4:	4b0d      	ldr	r3, [pc, #52]	; (5ec <xQueueGenericReceive+0x14c>)
     5b6:	4798      	blx	r3
     5b8:	e788      	b.n	4cc <xQueueGenericReceive+0x2c>
				}
			}
			else
			{
				/* Try again. */
				prvUnlockQueue( pxQueue );
     5ba:	1c20      	adds	r0, r4, #0
     5bc:	4b12      	ldr	r3, [pc, #72]	; (608 <xQueueGenericReceive+0x168>)
     5be:	4798      	blx	r3
				( void ) xTaskResumeAll();
     5c0:	4b12      	ldr	r3, [pc, #72]	; (60c <xQueueGenericReceive+0x16c>)
     5c2:	4798      	blx	r3
     5c4:	e782      	b.n	4cc <xQueueGenericReceive+0x2c>
			}
		}
		else
		{
			prvUnlockQueue( pxQueue );
     5c6:	1c20      	adds	r0, r4, #0
     5c8:	4b0f      	ldr	r3, [pc, #60]	; (608 <xQueueGenericReceive+0x168>)
     5ca:	4798      	blx	r3
			( void ) xTaskResumeAll();
     5cc:	4b0f      	ldr	r3, [pc, #60]	; (60c <xQueueGenericReceive+0x16c>)
     5ce:	4798      	blx	r3
			traceQUEUE_RECEIVE_FAILED( pxQueue );
			return errQUEUE_EMPTY;
     5d0:	2000      	movs	r0, #0
		}
	}
}
     5d2:	b004      	add	sp, #16
     5d4:	bc04      	pop	{r2}
     5d6:	4691      	mov	r9, r2
     5d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
     5da:	46c0      	nop			; (mov r8, r8)
     5dc:	00000f35 	.word	0x00000f35
     5e0:	00000185 	.word	0x00000185
     5e4:	00000de5 	.word	0x00000de5
     5e8:	00000ccd 	.word	0x00000ccd
     5ec:	00000f1d 	.word	0x00000f1d
     5f0:	00000f4d 	.word	0x00000f4d
     5f4:	00000d49 	.word	0x00000d49
     5f8:	00000955 	.word	0x00000955
     5fc:	00000d69 	.word	0x00000d69
     600:	00000df1 	.word	0x00000df1
     604:	00000c8d 	.word	0x00000c8d
     608:	000001ad 	.word	0x000001ad
     60c:	00000aa1 	.word	0x00000aa1

00000610 <vListInitialise>:
void vListInitialise( xList *pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( xListItem * ) &( pxList->xListEnd );
     610:	1c03      	adds	r3, r0, #0
     612:	3308      	adds	r3, #8
     614:	6043      	str	r3, [r0, #4]

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
     616:	2201      	movs	r2, #1
     618:	4252      	negs	r2, r2
     61a:	6082      	str	r2, [r0, #8]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( xListItem * ) &( pxList->xListEnd );
     61c:	60c3      	str	r3, [r0, #12]
	pxList->xListEnd.pxPrevious = ( xListItem * ) &( pxList->xListEnd );
     61e:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( unsigned portBASE_TYPE ) 0U;
     620:	2300      	movs	r3, #0
     622:	6003      	str	r3, [r0, #0]
}
     624:	4770      	bx	lr
     626:	46c0      	nop			; (mov r8, r8)

00000628 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( xListItem *pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pvContainer = NULL;
     628:	2300      	movs	r3, #0
     62a:	6103      	str	r3, [r0, #16]
}
     62c:	4770      	bx	lr
     62e:	46c0      	nop			; (mov r8, r8)

00000630 <vListInsertEnd>:

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	pvListGetOwnerOfNextEntry.  This means it has to be the item pointed to by
	the pxIndex member. */
	pxIndex = pxList->pxIndex;
     630:	6843      	ldr	r3, [r0, #4]

	pxNewListItem->pxNext = pxIndex->pxNext;
     632:	685a      	ldr	r2, [r3, #4]
     634:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxPrevious = pxList->pxIndex;
     636:	6842      	ldr	r2, [r0, #4]
     638:	608a      	str	r2, [r1, #8]
	pxIndex->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
     63a:	685a      	ldr	r2, [r3, #4]
     63c:	6091      	str	r1, [r2, #8]
	pxIndex->pxNext = ( volatile xListItem * ) pxNewListItem;
     63e:	6059      	str	r1, [r3, #4]
	pxList->pxIndex = ( volatile xListItem * ) pxNewListItem;
     640:	6041      	str	r1, [r0, #4]

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;
     642:	6108      	str	r0, [r1, #16]

	( pxList->uxNumberOfItems )++;
     644:	6803      	ldr	r3, [r0, #0]
     646:	3301      	adds	r3, #1
     648:	6003      	str	r3, [r0, #0]
}
     64a:	4770      	bx	lr

0000064c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( xList *pxList, xListItem *pxNewListItem )
{
     64c:	b510      	push	{r4, lr}
volatile xListItem *pxIterator;
portTickType xValueOfInsertion;

	/* Insert the new list item into the list, sorted in ulListItem order. */
	xValueOfInsertion = pxNewListItem->xItemValue;
     64e:	680c      	ldr	r4, [r1, #0]
	are stored in ready lists (all of which have the same ulListItem value)
	get an equal share of the CPU.  However, if the xItemValue is the same as
	the back marker the iteration loop below will not end.  This means we need
	to guard against this by checking the value first and modifying the
	algorithm slightly if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
     650:	1c63      	adds	r3, r4, #1
     652:	d101      	bne.n	658 <vListInsert+0xc>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
     654:	6903      	ldr	r3, [r0, #16]
     656:	e00a      	b.n	66e <vListInsert+0x22>
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		See http://www.freertos.org/FAQHelp.html for more tips.
		**********************************************************************/

		for( pxIterator = ( xListItem * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext )
     658:	1c03      	adds	r3, r0, #0
     65a:	3308      	adds	r3, #8
     65c:	68c2      	ldr	r2, [r0, #12]
     65e:	6812      	ldr	r2, [r2, #0]
     660:	4294      	cmp	r4, r2
     662:	d304      	bcc.n	66e <vListInsert+0x22>
     664:	685b      	ldr	r3, [r3, #4]
     666:	685a      	ldr	r2, [r3, #4]
     668:	6812      	ldr	r2, [r2, #0]
     66a:	4294      	cmp	r4, r2
     66c:	d2fa      	bcs.n	664 <vListInsert+0x18>
			/* There is nothing to do here, we are just iterating to the
			wanted insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
     66e:	685a      	ldr	r2, [r3, #4]
     670:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
     672:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
     674:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = ( volatile xListItem * ) pxNewListItem;
     676:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;
     678:	6108      	str	r0, [r1, #16]

	( pxList->uxNumberOfItems )++;
     67a:	6803      	ldr	r3, [r0, #0]
     67c:	3301      	adds	r3, #1
     67e:	6003      	str	r3, [r0, #0]
}
     680:	bd10      	pop	{r4, pc}
     682:	46c0      	nop			; (mov r8, r8)

00000684 <uxListRemove>:

unsigned portBASE_TYPE uxListRemove( xListItem *pxItemToRemove )
{
xList * pxList;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
     684:	6843      	ldr	r3, [r0, #4]
     686:	6882      	ldr	r2, [r0, #8]
     688:	609a      	str	r2, [r3, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
     68a:	6883      	ldr	r3, [r0, #8]
     68c:	6842      	ldr	r2, [r0, #4]
     68e:	605a      	str	r2, [r3, #4]

	/* The list item knows which list it is in.  Obtain the list from the list
	item. */
	pxList = ( xList * ) pxItemToRemove->pvContainer;
     690:	6903      	ldr	r3, [r0, #16]

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
     692:	685a      	ldr	r2, [r3, #4]
     694:	4282      	cmp	r2, r0
     696:	d101      	bne.n	69c <uxListRemove+0x18>
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
     698:	6882      	ldr	r2, [r0, #8]
     69a:	605a      	str	r2, [r3, #4]
	}

	pxItemToRemove->pvContainer = NULL;
     69c:	2200      	movs	r2, #0
     69e:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
     6a0:	681a      	ldr	r2, [r3, #0]
     6a2:	3a01      	subs	r2, #1
     6a4:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
     6a6:	6818      	ldr	r0, [r3, #0]
}
     6a8:	4770      	bx	lr
     6aa:	46c0      	nop			; (mov r8, r8)

000006ac <prvIdleTask>:
 *
 * void prvIdleTask( void *pvParameters );
 *
 */
static portTASK_FUNCTION( prvIdleTask, pvParameters )
{
     6ac:	b510      	push	{r4, lr}
		{
			/* If we are not using preemption we keep forcing a task switch to
			see if any other task has become available.  If we are using
			preemption we don't need to do this as any task becoming available
			will automatically get the processor anyway. */
			taskYIELD();
     6ae:	4c01      	ldr	r4, [pc, #4]	; (6b4 <prvIdleTask+0x8>)
     6b0:	47a0      	blx	r4
				}
				xTaskResumeAll();
			}
		}
		#endif /* configUSE_TICKLESS_IDLE */
	}
     6b2:	e7fd      	b.n	6b0 <prvIdleTask+0x4>
     6b4:	00000f1d 	.word	0x00000f1d

000006b8 <prvAddCurrentTaskToDelayedList>:
	#endif /* vTaskDelete */
}
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( portTickType xTimeToWake )
{
     6b8:	b510      	push	{r4, lr}
     6ba:	1e04      	subs	r4, r0, #0
	/* The list item will be inserted in wake time order. */
	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
     6bc:	4b0e      	ldr	r3, [pc, #56]	; (6f8 <prvAddCurrentTaskToDelayedList+0x40>)
     6be:	681b      	ldr	r3, [r3, #0]
     6c0:	6058      	str	r0, [r3, #4]

	if( xTimeToWake < xTickCount )
     6c2:	4b0e      	ldr	r3, [pc, #56]	; (6fc <prvAddCurrentTaskToDelayedList+0x44>)
     6c4:	681b      	ldr	r3, [r3, #0]
     6c6:	429c      	cmp	r4, r3
     6c8:	d207      	bcs.n	6da <prvAddCurrentTaskToDelayedList+0x22>
	{
		/* Wake time has overflowed.  Place this item in the overflow list. */
		vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
     6ca:	4b0d      	ldr	r3, [pc, #52]	; (700 <prvAddCurrentTaskToDelayedList+0x48>)
     6cc:	6818      	ldr	r0, [r3, #0]
     6ce:	4b0a      	ldr	r3, [pc, #40]	; (6f8 <prvAddCurrentTaskToDelayedList+0x40>)
     6d0:	6819      	ldr	r1, [r3, #0]
     6d2:	3104      	adds	r1, #4
     6d4:	4b0b      	ldr	r3, [pc, #44]	; (704 <prvAddCurrentTaskToDelayedList+0x4c>)
     6d6:	4798      	blx	r3
     6d8:	e00c      	b.n	6f4 <prvAddCurrentTaskToDelayedList+0x3c>
	}
	else
	{
		/* The wake time has not overflowed, so we can use the current block list. */
		vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
     6da:	4b0b      	ldr	r3, [pc, #44]	; (708 <prvAddCurrentTaskToDelayedList+0x50>)
     6dc:	6818      	ldr	r0, [r3, #0]
     6de:	4b06      	ldr	r3, [pc, #24]	; (6f8 <prvAddCurrentTaskToDelayedList+0x40>)
     6e0:	6819      	ldr	r1, [r3, #0]
     6e2:	3104      	adds	r1, #4
     6e4:	4b07      	ldr	r3, [pc, #28]	; (704 <prvAddCurrentTaskToDelayedList+0x4c>)
     6e6:	4798      	blx	r3

		/* If the task entering the blocked state was placed at the head of the
		list of blocked tasks then xNextTaskUnblockTime needs to be updated
		too. */
		if( xTimeToWake < xNextTaskUnblockTime )
     6e8:	4b08      	ldr	r3, [pc, #32]	; (70c <prvAddCurrentTaskToDelayedList+0x54>)
     6ea:	681b      	ldr	r3, [r3, #0]
     6ec:	429c      	cmp	r4, r3
     6ee:	d201      	bcs.n	6f4 <prvAddCurrentTaskToDelayedList+0x3c>
		{
			xNextTaskUnblockTime = xTimeToWake;
     6f0:	4b06      	ldr	r3, [pc, #24]	; (70c <prvAddCurrentTaskToDelayedList+0x54>)
     6f2:	601c      	str	r4, [r3, #0]
		}
	}
}
     6f4:	bd10      	pop	{r4, pc}
     6f6:	46c0      	nop			; (mov r8, r8)
     6f8:	20000230 	.word	0x20000230
     6fc:	20000248 	.word	0x20000248
     700:	2000024c 	.word	0x2000024c
     704:	0000064d 	.word	0x0000064d
     708:	20000194 	.word	0x20000194
     70c:	200000b4 	.word	0x200000b4

00000710 <xTaskGenericCreate>:
#endif

/*lint +e956 */

signed portBASE_TYPE xTaskGenericCreate( pdTASK_CODE pxTaskCode, const signed char * const pcName, unsigned short usStackDepth, void *pvParameters, unsigned portBASE_TYPE uxPriority, xTaskHandle *pxCreatedTask, portSTACK_TYPE *puxStackBuffer, const xMemoryRegion * const xRegions )
{
     710:	b5f0      	push	{r4, r5, r6, r7, lr}
     712:	464f      	mov	r7, r9
     714:	4646      	mov	r6, r8
     716:	b4c0      	push	{r6, r7}
     718:	b085      	sub	sp, #20
     71a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
signed portBASE_TYPE xReturn;
tskTCB * pxNewTCB;

	configASSERT( pxTaskCode );
     71c:	2800      	cmp	r0, #0
     71e:	d101      	bne.n	724 <xTaskGenericCreate+0x14>
     720:	b672      	cpsid	i
     722:	e7fe      	b.n	722 <xTaskGenericCreate+0x12>
	configASSERT( ( ( uxPriority & ( ~portPRIVILEGE_BIT ) ) < configMAX_PRIORITIES ) );
     724:	2c05      	cmp	r4, #5
     726:	d901      	bls.n	72c <xTaskGenericCreate+0x1c>
     728:	b672      	cpsid	i
     72a:	e7fe      	b.n	72a <xTaskGenericCreate+0x1a>
     72c:	9303      	str	r3, [sp, #12]
     72e:	1c16      	adds	r6, r2, #0
     730:	1c0f      	adds	r7, r1, #0
     732:	9002      	str	r0, [sp, #8]
{
tskTCB *pxNewTCB;

	/* Allocate space for the TCB.  Where the memory comes from depends on
	the implementation of the port malloc function. */
	pxNewTCB = ( tskTCB * ) pvPortMalloc( sizeof( tskTCB ) );
     734:	2040      	movs	r0, #64	; 0x40
     736:	4b59      	ldr	r3, [pc, #356]	; (89c <xTaskGenericCreate+0x18c>)
     738:	4798      	blx	r3
     73a:	1e05      	subs	r5, r0, #0

	if( pxNewTCB != NULL )
     73c:	d100      	bne.n	740 <xTaskGenericCreate+0x30>
     73e:	e0a5      	b.n	88c <xTaskGenericCreate+0x17c>
	{
		/* Allocate space for the stack used by the task being created.
		The base of the stack memory stored in the TCB so the task can
		be deleted later if required. */
		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMallocAligned( ( ( ( size_t )usStackDepth ) * sizeof( portSTACK_TYPE ) ), puxStackBuffer );
     740:	9b0e      	ldr	r3, [sp, #56]	; 0x38
     742:	2b00      	cmp	r3, #0
     744:	d000      	beq.n	748 <xTaskGenericCreate+0x38>
     746:	e09d      	b.n	884 <xTaskGenericCreate+0x174>
     748:	00b0      	lsls	r0, r6, #2
     74a:	4b54      	ldr	r3, [pc, #336]	; (89c <xTaskGenericCreate+0x18c>)
     74c:	4798      	blx	r3
     74e:	6328      	str	r0, [r5, #48]	; 0x30

		if( pxNewTCB->pxStack == NULL )
     750:	2800      	cmp	r0, #0
     752:	d103      	bne.n	75c <xTaskGenericCreate+0x4c>
		{
			/* Could not allocate the stack.  Delete the allocated TCB. */
			vPortFree( pxNewTCB );
     754:	1c28      	adds	r0, r5, #0
     756:	4b52      	ldr	r3, [pc, #328]	; (8a0 <xTaskGenericCreate+0x190>)
     758:	4798      	blx	r3
     75a:	e097      	b.n	88c <xTaskGenericCreate+0x17c>
			pxNewTCB = NULL;
		}
		else
		{
			/* Just to help debugging. */
			memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) usStackDepth * sizeof( portSTACK_TYPE ) );
     75c:	00b2      	lsls	r2, r6, #2
     75e:	21a5      	movs	r1, #165	; 0xa5
     760:	4b50      	ldr	r3, [pc, #320]	; (8a4 <xTaskGenericCreate+0x194>)
     762:	4798      	blx	r3
		stack grows from high memory to low (as per the 80x86) or visa versa.
		portSTACK_GROWTH is used to make the result positive or negative as
		required by the port. */
		#if( portSTACK_GROWTH < 0 )
		{
			pxTopOfStack = pxNewTCB->pxStack + ( usStackDepth - ( unsigned short ) 1 );
     764:	4b50      	ldr	r3, [pc, #320]	; (8a8 <xTaskGenericCreate+0x198>)
     766:	18f3      	adds	r3, r6, r3
     768:	009b      	lsls	r3, r3, #2
     76a:	6b2a      	ldr	r2, [r5, #48]	; 0x30
     76c:	4694      	mov	ip, r2
     76e:	4463      	add	r3, ip
			pxTopOfStack = ( portSTACK_TYPE * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ( portPOINTER_SIZE_TYPE ) ~portBYTE_ALIGNMENT_MASK  ) );
     770:	2207      	movs	r2, #7
     772:	4393      	bics	r3, r2
     774:	4698      	mov	r8, r3
{
	/* Store the function name in the TCB. */
	#if configMAX_TASK_NAME_LEN > 1
	{
		/* Don't bring strncpy into the build unnecessarily. */
		strncpy( ( char * ) pxTCB->pcTaskName, ( const char * ) pcName, ( unsigned short ) configMAX_TASK_NAME_LEN );
     776:	1c28      	adds	r0, r5, #0
     778:	3034      	adds	r0, #52	; 0x34
     77a:	1c39      	adds	r1, r7, #0
     77c:	3201      	adds	r2, #1
     77e:	4b4b      	ldr	r3, [pc, #300]	; (8ac <xTaskGenericCreate+0x19c>)
     780:	4798      	blx	r3
	}
	#endif /* configMAX_TASK_NAME_LEN */
	pxTCB->pcTaskName[ ( unsigned short ) configMAX_TASK_NAME_LEN - ( unsigned short ) 1 ] = ( signed char ) '\0';
     782:	2200      	movs	r2, #0
     784:	233b      	movs	r3, #59	; 0x3b
     786:	54ea      	strb	r2, [r5, r3]
     788:	1e27      	subs	r7, r4, #0
     78a:	2f05      	cmp	r7, #5
     78c:	d900      	bls.n	790 <xTaskGenericCreate+0x80>
     78e:	2705      	movs	r7, #5
	if( uxPriority >= configMAX_PRIORITIES )
	{
		uxPriority = configMAX_PRIORITIES - ( unsigned portBASE_TYPE ) 1U;
	}

	pxTCB->uxPriority = uxPriority;
     790:	62ef      	str	r7, [r5, #44]	; 0x2c
	#if ( configUSE_MUTEXES == 1 )
	{
		pxTCB->uxBasePriority = uxPriority;
     792:	63ef      	str	r7, [r5, #60]	; 0x3c
	}
	#endif /* configUSE_MUTEXES */

	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
     794:	1d2b      	adds	r3, r5, #4
     796:	9301      	str	r3, [sp, #4]
     798:	1c18      	adds	r0, r3, #0
     79a:	4e45      	ldr	r6, [pc, #276]	; (8b0 <xTaskGenericCreate+0x1a0>)
     79c:	47b0      	blx	r6
	vListInitialiseItem( &( pxTCB->xEventListItem ) );
     79e:	1c28      	adds	r0, r5, #0
     7a0:	3018      	adds	r0, #24
     7a2:	47b0      	blx	r6

	/* Set the pxTCB as a link back from the xListItem.  This is so we can get
	back to	the containing TCB from a generic item in a list. */
	listSET_LIST_ITEM_OWNER( &( pxTCB->xGenericListItem ), pxTCB );
     7a4:	612d      	str	r5, [r5, #16]

	/* Event lists are always in priority order. */
	listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) uxPriority );
     7a6:	2306      	movs	r3, #6
     7a8:	1bdb      	subs	r3, r3, r7
     7aa:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxTCB->xEventListItem ), pxTCB );
     7ac:	626d      	str	r5, [r5, #36]	; 0x24
		{
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivileged );
		}
		#else /* portUSING_MPU_WRAPPERS */
		{
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
     7ae:	4640      	mov	r0, r8
     7b0:	9902      	ldr	r1, [sp, #8]
     7b2:	9a03      	ldr	r2, [sp, #12]
     7b4:	4b3f      	ldr	r3, [pc, #252]	; (8b4 <xTaskGenericCreate+0x1a4>)
     7b6:	4798      	blx	r3
     7b8:	6028      	str	r0, [r5, #0]
		}
		#endif /* portUSING_MPU_WRAPPERS */

		/* Check the alignment of the initialised stack. */
		portALIGNMENT_ASSERT_pxCurrentTCB( ( ( ( unsigned long ) pxNewTCB->pxTopOfStack & ( unsigned long ) portBYTE_ALIGNMENT_MASK ) == 0UL ) );
     7ba:	0743      	lsls	r3, r0, #29
     7bc:	d001      	beq.n	7c2 <xTaskGenericCreate+0xb2>
     7be:	b672      	cpsid	i
     7c0:	e7fe      	b.n	7c0 <xTaskGenericCreate+0xb0>

		if( ( void * ) pxCreatedTask != NULL )
     7c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
     7c4:	2b00      	cmp	r3, #0
     7c6:	d000      	beq.n	7ca <xTaskGenericCreate+0xba>
		{
			/* Pass the TCB out - in an anonymous way.  The calling function/
			task can use this as a handle to delete the task later if
			required.*/
			*pxCreatedTask = ( xTaskHandle ) pxNewTCB;
     7c8:	601d      	str	r5, [r3, #0]
		}

		/* We are going to manipulate the task queues to add this task to a
		ready list, so must make sure no interrupts occur. */
		taskENTER_CRITICAL();
     7ca:	4b3b      	ldr	r3, [pc, #236]	; (8b8 <xTaskGenericCreate+0x1a8>)
     7cc:	4798      	blx	r3
		{
			uxCurrentNumberOfTasks++;
     7ce:	4a3b      	ldr	r2, [pc, #236]	; (8bc <xTaskGenericCreate+0x1ac>)
     7d0:	6813      	ldr	r3, [r2, #0]
     7d2:	3301      	adds	r3, #1
     7d4:	6013      	str	r3, [r2, #0]
			if( pxCurrentTCB == NULL )
     7d6:	4b3a      	ldr	r3, [pc, #232]	; (8c0 <xTaskGenericCreate+0x1b0>)
     7d8:	681b      	ldr	r3, [r3, #0]
     7da:	2b00      	cmp	r3, #0
     7dc:	d11e      	bne.n	81c <xTaskGenericCreate+0x10c>
			{
				/* There are no other tasks, or all the other tasks are in
				the suspended state - make this the current task. */
				pxCurrentTCB =  pxNewTCB;
     7de:	4b38      	ldr	r3, [pc, #224]	; (8c0 <xTaskGenericCreate+0x1b0>)
     7e0:	601d      	str	r5, [r3, #0]

				if( uxCurrentNumberOfTasks == ( unsigned portBASE_TYPE ) 1 )
     7e2:	6813      	ldr	r3, [r2, #0]
     7e4:	2b01      	cmp	r3, #1
     7e6:	d124      	bne.n	832 <xTaskGenericCreate+0x122>
     7e8:	4e36      	ldr	r6, [pc, #216]	; (8c4 <xTaskGenericCreate+0x1b4>)
     7ea:	3377      	adds	r3, #119	; 0x77
     7ec:	4699      	mov	r9, r3
     7ee:	44b1      	add	r9, r6
{
unsigned portBASE_TYPE uxPriority;

	for( uxPriority = ( unsigned portBASE_TYPE ) 0U; uxPriority < configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
     7f0:	4f35      	ldr	r7, [pc, #212]	; (8c8 <xTaskGenericCreate+0x1b8>)
     7f2:	1c30      	adds	r0, r6, #0
     7f4:	47b8      	blx	r7
     7f6:	3614      	adds	r6, #20

static void prvInitialiseTaskLists( void )
{
unsigned portBASE_TYPE uxPriority;

	for( uxPriority = ( unsigned portBASE_TYPE ) 0U; uxPriority < configMAX_PRIORITIES; uxPriority++ )
     7f8:	454e      	cmp	r6, r9
     7fa:	d1fa      	bne.n	7f2 <xTaskGenericCreate+0xe2>
	{
		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
	}

	vListInitialise( ( xList * ) &xDelayedTaskList1 );
     7fc:	4b33      	ldr	r3, [pc, #204]	; (8cc <xTaskGenericCreate+0x1bc>)
     7fe:	4699      	mov	r9, r3
     800:	1c18      	adds	r0, r3, #0
     802:	4e31      	ldr	r6, [pc, #196]	; (8c8 <xTaskGenericCreate+0x1b8>)
     804:	47b0      	blx	r6
	vListInitialise( ( xList * ) &xDelayedTaskList2 );
     806:	4f32      	ldr	r7, [pc, #200]	; (8d0 <xTaskGenericCreate+0x1c0>)
     808:	1c38      	adds	r0, r7, #0
     80a:	47b0      	blx	r6
	vListInitialise( ( xList * ) &xPendingReadyList );
     80c:	4831      	ldr	r0, [pc, #196]	; (8d4 <xTaskGenericCreate+0x1c4>)
     80e:	47b0      	blx	r6
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
     810:	4b31      	ldr	r3, [pc, #196]	; (8d8 <xTaskGenericCreate+0x1c8>)
     812:	464a      	mov	r2, r9
     814:	601a      	str	r2, [r3, #0]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
     816:	4b31      	ldr	r3, [pc, #196]	; (8dc <xTaskGenericCreate+0x1cc>)
     818:	601f      	str	r7, [r3, #0]
     81a:	e00a      	b.n	832 <xTaskGenericCreate+0x122>
			else
			{
				/* If the scheduler is not already running, make this task the
				current task if it is the highest priority task to be created
				so far. */
				if( xSchedulerRunning == pdFALSE )
     81c:	4b30      	ldr	r3, [pc, #192]	; (8e0 <xTaskGenericCreate+0x1d0>)
     81e:	681b      	ldr	r3, [r3, #0]
     820:	2b00      	cmp	r3, #0
     822:	d106      	bne.n	832 <xTaskGenericCreate+0x122>
				{
					if( pxCurrentTCB->uxPriority <= uxPriority )
     824:	4b26      	ldr	r3, [pc, #152]	; (8c0 <xTaskGenericCreate+0x1b0>)
     826:	681b      	ldr	r3, [r3, #0]
     828:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     82a:	429c      	cmp	r4, r3
     82c:	d301      	bcc.n	832 <xTaskGenericCreate+0x122>
					{
						pxCurrentTCB = pxNewTCB;
     82e:	4b24      	ldr	r3, [pc, #144]	; (8c0 <xTaskGenericCreate+0x1b0>)
     830:	601d      	str	r5, [r3, #0]
				}
			}

			/* Remember the top priority to make context switching faster.  Use
			the priority in pxNewTCB as this has been capped to a valid value. */
			if( pxNewTCB->uxPriority > uxTopUsedPriority )
     832:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
     834:	4a2b      	ldr	r2, [pc, #172]	; (8e4 <xTaskGenericCreate+0x1d4>)
     836:	6812      	ldr	r2, [r2, #0]
     838:	4293      	cmp	r3, r2
     83a:	d901      	bls.n	840 <xTaskGenericCreate+0x130>
			{
				uxTopUsedPriority = pxNewTCB->uxPriority;
     83c:	4a29      	ldr	r2, [pc, #164]	; (8e4 <xTaskGenericCreate+0x1d4>)
     83e:	6013      	str	r3, [r2, #0]
			}

			uxTaskNumber++;
     840:	4929      	ldr	r1, [pc, #164]	; (8e8 <xTaskGenericCreate+0x1d8>)
     842:	680a      	ldr	r2, [r1, #0]
     844:	3201      	adds	r2, #1
     846:	600a      	str	r2, [r1, #0]
				pxNewTCB->uxTCBNumber = uxTaskNumber;
			}
			#endif /* configUSE_TRACE_FACILITY */
			traceTASK_CREATE( pxNewTCB );

			prvAddTaskToReadyQueue( pxNewTCB );
     848:	4a28      	ldr	r2, [pc, #160]	; (8ec <xTaskGenericCreate+0x1dc>)
     84a:	6812      	ldr	r2, [r2, #0]
     84c:	4293      	cmp	r3, r2
     84e:	d901      	bls.n	854 <xTaskGenericCreate+0x144>
     850:	4a26      	ldr	r2, [pc, #152]	; (8ec <xTaskGenericCreate+0x1dc>)
     852:	6013      	str	r3, [r2, #0]
     854:	0098      	lsls	r0, r3, #2
     856:	18c3      	adds	r3, r0, r3
     858:	009b      	lsls	r3, r3, #2
     85a:	481a      	ldr	r0, [pc, #104]	; (8c4 <xTaskGenericCreate+0x1b4>)
     85c:	18c0      	adds	r0, r0, r3
     85e:	9901      	ldr	r1, [sp, #4]
     860:	4b23      	ldr	r3, [pc, #140]	; (8f0 <xTaskGenericCreate+0x1e0>)
     862:	4798      	blx	r3

			xReturn = pdPASS;
			portSETUP_TCB( pxNewTCB );
		}
		taskEXIT_CRITICAL();
     864:	4b23      	ldr	r3, [pc, #140]	; (8f4 <xTaskGenericCreate+0x1e4>)
     866:	4798      	blx	r3
		traceTASK_CREATE_FAILED();
	}

	if( xReturn == pdPASS )
	{
		if( xSchedulerRunning != pdFALSE )
     868:	4b1d      	ldr	r3, [pc, #116]	; (8e0 <xTaskGenericCreate+0x1d0>)
     86a:	681b      	ldr	r3, [r3, #0]
     86c:	2001      	movs	r0, #1
     86e:	2b00      	cmp	r3, #0
     870:	d00e      	beq.n	890 <xTaskGenericCreate+0x180>
		{
			/* If the created task is of a higher priority than the current task
			then it should run now. */
			if( pxCurrentTCB->uxPriority < uxPriority )
     872:	4b13      	ldr	r3, [pc, #76]	; (8c0 <xTaskGenericCreate+0x1b0>)
     874:	681b      	ldr	r3, [r3, #0]
     876:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     878:	429c      	cmp	r4, r3
     87a:	d909      	bls.n	890 <xTaskGenericCreate+0x180>
			{
				portYIELD_WITHIN_API();
     87c:	4b1e      	ldr	r3, [pc, #120]	; (8f8 <xTaskGenericCreate+0x1e8>)
     87e:	4798      	blx	r3
     880:	2001      	movs	r0, #1
     882:	e005      	b.n	890 <xTaskGenericCreate+0x180>
	if( pxNewTCB != NULL )
	{
		/* Allocate space for the stack used by the task being created.
		The base of the stack memory stored in the TCB so the task can
		be deleted later if required. */
		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMallocAligned( ( ( ( size_t )usStackDepth ) * sizeof( portSTACK_TYPE ) ), puxStackBuffer );
     884:	9b0e      	ldr	r3, [sp, #56]	; 0x38
     886:	6303      	str	r3, [r0, #48]	; 0x30
     888:	1c18      	adds	r0, r3, #0
     88a:	e767      	b.n	75c <xTaskGenericCreate+0x4c>
		}
		taskEXIT_CRITICAL();
	}
	else
	{
		xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
     88c:	2001      	movs	r0, #1
     88e:	4240      	negs	r0, r0
			}
		}
	}

	return xReturn;
}
     890:	b005      	add	sp, #20
     892:	bc0c      	pop	{r2, r3}
     894:	4690      	mov	r8, r2
     896:	4699      	mov	r9, r3
     898:	bdf0      	pop	{r4, r5, r6, r7, pc}
     89a:	46c0      	nop			; (mov r8, r8)
     89c:	00001029 	.word	0x00001029
     8a0:	00001091 	.word	0x00001091
     8a4:	00009a7d 	.word	0x00009a7d
     8a8:	3fffffff 	.word	0x3fffffff
     8ac:	0000b207 	.word	0x0000b207
     8b0:	00000629 	.word	0x00000629
     8b4:	00000edd 	.word	0x00000edd
     8b8:	00000f35 	.word	0x00000f35
     8bc:	20000270 	.word	0x20000270
     8c0:	20000230 	.word	0x20000230
     8c4:	200001b4 	.word	0x200001b4
     8c8:	00000611 	.word	0x00000611
     8cc:	20000258 	.word	0x20000258
     8d0:	200001a0 	.word	0x200001a0
     8d4:	20000234 	.word	0x20000234
     8d8:	20000194 	.word	0x20000194
     8dc:	2000024c 	.word	0x2000024c
     8e0:	20000198 	.word	0x20000198
     8e4:	20000274 	.word	0x20000274
     8e8:	20000254 	.word	0x20000254
     8ec:	20000250 	.word	0x20000250
     8f0:	00000631 	.word	0x00000631
     8f4:	00000f4d 	.word	0x00000f4d
     8f8:	00000f1d 	.word	0x00000f1d

000008fc <vTaskStartScheduler>:

#endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
/*-----------------------------------------------------------*/

void vTaskStartScheduler( void )
{
     8fc:	b510      	push	{r4, lr}
     8fe:	b084      	sub	sp, #16
		xReturn = xTaskCreate( prvIdleTask, ( signed char * ) "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL, ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), &xIdleTaskHandle );
	}
	#else
	{
		/* Create the idle task without storing its handle. */
		xReturn = xTaskCreate( prvIdleTask, ( signed char * ) "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL, ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), NULL );
     900:	2300      	movs	r3, #0
     902:	9300      	str	r3, [sp, #0]
     904:	9301      	str	r3, [sp, #4]
     906:	9302      	str	r3, [sp, #8]
     908:	9303      	str	r3, [sp, #12]
     90a:	480c      	ldr	r0, [pc, #48]	; (93c <vTaskStartScheduler+0x40>)
     90c:	490c      	ldr	r1, [pc, #48]	; (940 <vTaskStartScheduler+0x44>)
     90e:	2296      	movs	r2, #150	; 0x96
     910:	0052      	lsls	r2, r2, #1
     912:	4c0c      	ldr	r4, [pc, #48]	; (944 <vTaskStartScheduler+0x48>)
     914:	47a0      	blx	r4
			xReturn = xTimerCreateTimerTask();
		}
	}
	#endif /* configUSE_TIMERS */

	if( xReturn == pdPASS )
     916:	2801      	cmp	r0, #1
     918:	d109      	bne.n	92e <vTaskStartScheduler+0x32>
		so interrupts will automatically get re-enabled when the first task
		starts to run.

		STEPPING THROUGH HERE USING A DEBUGGER CAN CAUSE BIG PROBLEMS IF THE
		DEBUGGER ALLOWS INTERRUPTS TO BE PROCESSED. */
		portDISABLE_INTERRUPTS();
     91a:	b672      	cpsid	i

		xSchedulerRunning = pdTRUE;
     91c:	2201      	movs	r2, #1
     91e:	4b0a      	ldr	r3, [pc, #40]	; (948 <vTaskStartScheduler+0x4c>)
     920:	601a      	str	r2, [r3, #0]
		xTickCount = ( portTickType ) 0U;
     922:	2200      	movs	r2, #0
     924:	4b09      	ldr	r3, [pc, #36]	; (94c <vTaskStartScheduler+0x50>)
     926:	601a      	str	r2, [r3, #0]
		the run time counter time base. */
		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();

		/* Setting up the timer tick is hardware specific and thus in the
		portable interface. */
		if( xPortStartScheduler() != pdFALSE )
     928:	4b09      	ldr	r3, [pc, #36]	; (950 <vTaskStartScheduler+0x54>)
     92a:	4798      	blx	r3
     92c:	e003      	b.n	936 <vTaskStartScheduler+0x3a>
	else
	{
		/* This line will only be reached if the kernel could not be started,
		because there was not enough FreeRTOS heap to create the idle task
		or the timer task. */
		configASSERT( xReturn );
     92e:	2800      	cmp	r0, #0
     930:	d101      	bne.n	936 <vTaskStartScheduler+0x3a>
     932:	b672      	cpsid	i
     934:	e7fe      	b.n	934 <vTaskStartScheduler+0x38>
	}
}
     936:	b004      	add	sp, #16
     938:	bd10      	pop	{r4, pc}
     93a:	46c0      	nop			; (mov r8, r8)
     93c:	000006ad 	.word	0x000006ad
     940:	0000e6a4 	.word	0x0000e6a4
     944:	00000711 	.word	0x00000711
     948:	20000198 	.word	0x20000198
     94c:	20000248 	.word	0x20000248
     950:	00000fed 	.word	0x00000fed

00000954 <vTaskSuspendAll>:

void vTaskSuspendAll( void )
{
	/* A critical section is not required as the variable is of type
	portBASE_TYPE. */
	++uxSchedulerSuspended;
     954:	4a02      	ldr	r2, [pc, #8]	; (960 <vTaskSuspendAll+0xc>)
     956:	6813      	ldr	r3, [r2, #0]
     958:	3301      	adds	r3, #1
     95a:	6013      	str	r3, [r2, #0]
}
     95c:	4770      	bx	lr
     95e:	46c0      	nop			; (mov r8, r8)
     960:	2000022c 	.word	0x2000022c

00000964 <xTaskGetTickCount>:
	return xAlreadyYielded;
}
/*-----------------------------------------------------------*/

portTickType xTaskGetTickCount( void )
{
     964:	b510      	push	{r4, lr}
portTickType xTicks;

	/* Critical section required if running on a 16 bit processor. */
	taskENTER_CRITICAL();
     966:	4b04      	ldr	r3, [pc, #16]	; (978 <xTaskGetTickCount+0x14>)
     968:	4798      	blx	r3
	{
		xTicks = xTickCount;
     96a:	4b04      	ldr	r3, [pc, #16]	; (97c <xTaskGetTickCount+0x18>)
     96c:	681c      	ldr	r4, [r3, #0]
	}
	taskEXIT_CRITICAL();
     96e:	4b04      	ldr	r3, [pc, #16]	; (980 <xTaskGetTickCount+0x1c>)
     970:	4798      	blx	r3

	return xTicks;
}
     972:	1c20      	adds	r0, r4, #0
     974:	bd10      	pop	{r4, pc}
     976:	46c0      	nop			; (mov r8, r8)
     978:	00000f35 	.word	0x00000f35
     97c:	20000248 	.word	0x20000248
     980:	00000f4d 	.word	0x00000f4d

00000984 <vTaskIncrementTick>:

#endif /* configUSE_TICKLESS_IDLE */
/*----------------------------------------------------------*/

void vTaskIncrementTick( void )
{
     984:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

	/* Called by the portable layer each time a tick interrupt occurs.
	Increments the tick then checks to see if the new tick value will cause any
	tasks to be unblocked. */
	traceTASK_INCREMENT_TICK( xTickCount );
	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
     986:	4b3b      	ldr	r3, [pc, #236]	; (a74 <vTaskIncrementTick+0xf0>)
     988:	681b      	ldr	r3, [r3, #0]
     98a:	2b00      	cmp	r3, #0
     98c:	d16d      	bne.n	a6a <vTaskIncrementTick+0xe6>
	{
		++xTickCount;
     98e:	4b3a      	ldr	r3, [pc, #232]	; (a78 <vTaskIncrementTick+0xf4>)
     990:	681a      	ldr	r2, [r3, #0]
     992:	3201      	adds	r2, #1
     994:	601a      	str	r2, [r3, #0]
		if( xTickCount == ( portTickType ) 0U )
     996:	681b      	ldr	r3, [r3, #0]
     998:	2b00      	cmp	r3, #0
     99a:	d120      	bne.n	9de <vTaskIncrementTick+0x5a>
			xList *pxTemp;

			/* Tick count has overflowed so we need to swap the delay lists.
			If there are any items in pxDelayedTaskList here then there is
			an error! */
			configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );
     99c:	4b37      	ldr	r3, [pc, #220]	; (a7c <vTaskIncrementTick+0xf8>)
     99e:	681b      	ldr	r3, [r3, #0]
     9a0:	681b      	ldr	r3, [r3, #0]
     9a2:	2b00      	cmp	r3, #0
     9a4:	d001      	beq.n	9aa <vTaskIncrementTick+0x26>
     9a6:	b672      	cpsid	i
     9a8:	e7fe      	b.n	9a8 <vTaskIncrementTick+0x24>

			pxTemp = pxDelayedTaskList;
     9aa:	4b34      	ldr	r3, [pc, #208]	; (a7c <vTaskIncrementTick+0xf8>)
     9ac:	6819      	ldr	r1, [r3, #0]
			pxDelayedTaskList = pxOverflowDelayedTaskList;
     9ae:	4a34      	ldr	r2, [pc, #208]	; (a80 <vTaskIncrementTick+0xfc>)
     9b0:	6810      	ldr	r0, [r2, #0]
     9b2:	6018      	str	r0, [r3, #0]
			pxOverflowDelayedTaskList = pxTemp;
     9b4:	6011      	str	r1, [r2, #0]
			xNumOfOverflows++;
     9b6:	4933      	ldr	r1, [pc, #204]	; (a84 <vTaskIncrementTick+0x100>)
     9b8:	680a      	ldr	r2, [r1, #0]
     9ba:	3201      	adds	r2, #1
     9bc:	600a      	str	r2, [r1, #0]

			if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
     9be:	681b      	ldr	r3, [r3, #0]
     9c0:	681b      	ldr	r3, [r3, #0]
     9c2:	2b00      	cmp	r3, #0
     9c4:	d104      	bne.n	9d0 <vTaskIncrementTick+0x4c>
				/* The new current delayed list is empty.  Set
				xNextTaskUnblockTime to the maximum possible value so it is
				extremely unlikely that the
				if( xTickCount >= xNextTaskUnblockTime ) test will pass until
				there is an item in the delayed list. */
				xNextTaskUnblockTime = portMAX_DELAY;
     9c6:	2201      	movs	r2, #1
     9c8:	4252      	negs	r2, r2
     9ca:	4b2f      	ldr	r3, [pc, #188]	; (a88 <vTaskIncrementTick+0x104>)
     9cc:	601a      	str	r2, [r3, #0]
     9ce:	e006      	b.n	9de <vTaskIncrementTick+0x5a>
			{
				/* The new current delayed list is not empty, get the value of
				the item at the head of the delayed list.  This is the time at
				which the task at the head of the delayed list should be removed
				from the Blocked state. */
				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
     9d0:	4b2a      	ldr	r3, [pc, #168]	; (a7c <vTaskIncrementTick+0xf8>)
     9d2:	681b      	ldr	r3, [r3, #0]
     9d4:	68db      	ldr	r3, [r3, #12]
     9d6:	68db      	ldr	r3, [r3, #12]
				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
     9d8:	685a      	ldr	r2, [r3, #4]
     9da:	4b2b      	ldr	r3, [pc, #172]	; (a88 <vTaskIncrementTick+0x104>)
     9dc:	601a      	str	r2, [r3, #0]
			}
		}

		/* See if this tick has made a timeout expire. */
		prvCheckDelayedTasks();
     9de:	4b26      	ldr	r3, [pc, #152]	; (a78 <vTaskIncrementTick+0xf4>)
     9e0:	681a      	ldr	r2, [r3, #0]
     9e2:	4b29      	ldr	r3, [pc, #164]	; (a88 <vTaskIncrementTick+0x104>)
     9e4:	681b      	ldr	r3, [r3, #0]
     9e6:	429a      	cmp	r2, r3
     9e8:	d343      	bcc.n	a72 <vTaskIncrementTick+0xee>
     9ea:	4b24      	ldr	r3, [pc, #144]	; (a7c <vTaskIncrementTick+0xf8>)
     9ec:	681b      	ldr	r3, [r3, #0]
     9ee:	681b      	ldr	r3, [r3, #0]
     9f0:	2b00      	cmp	r3, #0
     9f2:	d00b      	beq.n	a0c <vTaskIncrementTick+0x88>
     9f4:	4b21      	ldr	r3, [pc, #132]	; (a7c <vTaskIncrementTick+0xf8>)
     9f6:	681b      	ldr	r3, [r3, #0]
     9f8:	68db      	ldr	r3, [r3, #12]
     9fa:	68dd      	ldr	r5, [r3, #12]
     9fc:	686b      	ldr	r3, [r5, #4]
     9fe:	4a1e      	ldr	r2, [pc, #120]	; (a78 <vTaskIncrementTick+0xf4>)
     a00:	6812      	ldr	r2, [r2, #0]
     a02:	4293      	cmp	r3, r2
     a04:	d810      	bhi.n	a28 <vTaskIncrementTick+0xa4>
     a06:	4f21      	ldr	r7, [pc, #132]	; (a8c <vTaskIncrementTick+0x108>)
     a08:	4e21      	ldr	r6, [pc, #132]	; (a90 <vTaskIncrementTick+0x10c>)
     a0a:	e010      	b.n	a2e <vTaskIncrementTick+0xaa>
     a0c:	2201      	movs	r2, #1
     a0e:	4252      	negs	r2, r2
     a10:	4b1d      	ldr	r3, [pc, #116]	; (a88 <vTaskIncrementTick+0x104>)
     a12:	601a      	str	r2, [r3, #0]
     a14:	e02d      	b.n	a72 <vTaskIncrementTick+0xee>
     a16:	4b19      	ldr	r3, [pc, #100]	; (a7c <vTaskIncrementTick+0xf8>)
     a18:	681b      	ldr	r3, [r3, #0]
     a1a:	68db      	ldr	r3, [r3, #12]
     a1c:	68dd      	ldr	r5, [r3, #12]
     a1e:	686b      	ldr	r3, [r5, #4]
     a20:	4a15      	ldr	r2, [pc, #84]	; (a78 <vTaskIncrementTick+0xf4>)
     a22:	6812      	ldr	r2, [r2, #0]
     a24:	4293      	cmp	r3, r2
     a26:	d902      	bls.n	a2e <vTaskIncrementTick+0xaa>
     a28:	4a17      	ldr	r2, [pc, #92]	; (a88 <vTaskIncrementTick+0x104>)
     a2a:	6013      	str	r3, [r2, #0]
     a2c:	e021      	b.n	a72 <vTaskIncrementTick+0xee>
     a2e:	1d2c      	adds	r4, r5, #4
     a30:	1c20      	adds	r0, r4, #0
     a32:	47b8      	blx	r7
     a34:	6aab      	ldr	r3, [r5, #40]	; 0x28
     a36:	2b00      	cmp	r3, #0
     a38:	d003      	beq.n	a42 <vTaskIncrementTick+0xbe>
     a3a:	1c28      	adds	r0, r5, #0
     a3c:	3018      	adds	r0, #24
     a3e:	4b13      	ldr	r3, [pc, #76]	; (a8c <vTaskIncrementTick+0x108>)
     a40:	4798      	blx	r3
     a42:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
     a44:	6832      	ldr	r2, [r6, #0]
     a46:	4293      	cmp	r3, r2
     a48:	d901      	bls.n	a4e <vTaskIncrementTick+0xca>
     a4a:	4a11      	ldr	r2, [pc, #68]	; (a90 <vTaskIncrementTick+0x10c>)
     a4c:	6013      	str	r3, [r2, #0]
     a4e:	0098      	lsls	r0, r3, #2
     a50:	18c3      	adds	r3, r0, r3
     a52:	009b      	lsls	r3, r3, #2
     a54:	480f      	ldr	r0, [pc, #60]	; (a94 <vTaskIncrementTick+0x110>)
     a56:	18c0      	adds	r0, r0, r3
     a58:	1c21      	adds	r1, r4, #0
     a5a:	4b0f      	ldr	r3, [pc, #60]	; (a98 <vTaskIncrementTick+0x114>)
     a5c:	4798      	blx	r3
     a5e:	4b07      	ldr	r3, [pc, #28]	; (a7c <vTaskIncrementTick+0xf8>)
     a60:	681b      	ldr	r3, [r3, #0]
     a62:	681b      	ldr	r3, [r3, #0]
     a64:	2b00      	cmp	r3, #0
     a66:	d1d6      	bne.n	a16 <vTaskIncrementTick+0x92>
     a68:	e7d0      	b.n	a0c <vTaskIncrementTick+0x88>
	}
	else
	{
		++uxMissedTicks;
     a6a:	4a0c      	ldr	r2, [pc, #48]	; (a9c <vTaskIncrementTick+0x118>)
     a6c:	6813      	ldr	r3, [r2, #0]
     a6e:	3301      	adds	r3, #1
     a70:	6013      	str	r3, [r2, #0]
		{
			vApplicationTickHook();
		}
	}
	#endif /* configUSE_TICK_HOOK */
}
     a72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     a74:	2000022c 	.word	0x2000022c
     a78:	20000248 	.word	0x20000248
     a7c:	20000194 	.word	0x20000194
     a80:	2000024c 	.word	0x2000024c
     a84:	2000019c 	.word	0x2000019c
     a88:	200000b4 	.word	0x200000b4
     a8c:	00000685 	.word	0x00000685
     a90:	20000250 	.word	0x20000250
     a94:	200001b4 	.word	0x200001b4
     a98:	00000631 	.word	0x00000631
     a9c:	20000190 	.word	0x20000190

00000aa0 <xTaskResumeAll>:

#endif /* configUSE_TICKLESS_IDLE */
/*----------------------------------------------------------*/

signed portBASE_TYPE xTaskResumeAll( void )
{
     aa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
register tskTCB *pxTCB;
signed portBASE_TYPE xAlreadyYielded = pdFALSE;

	/* If uxSchedulerSuspended is zero then this function does not match a
	previous call to vTaskSuspendAll(). */
	configASSERT( uxSchedulerSuspended );
     aa2:	4b2f      	ldr	r3, [pc, #188]	; (b60 <xTaskResumeAll+0xc0>)
     aa4:	681b      	ldr	r3, [r3, #0]
     aa6:	2b00      	cmp	r3, #0
     aa8:	d101      	bne.n	aae <xTaskResumeAll+0xe>
     aaa:	b672      	cpsid	i
     aac:	e7fe      	b.n	aac <xTaskResumeAll+0xc>
	/* It is possible that an ISR caused a task to be removed from an event
	list while the scheduler was suspended.  If this was the case then the
	removed task will have been added to the xPendingReadyList.  Once the
	scheduler has been resumed it is safe to move all the pending ready
	tasks from this list into their appropriate ready list. */
	taskENTER_CRITICAL();
     aae:	4b2d      	ldr	r3, [pc, #180]	; (b64 <xTaskResumeAll+0xc4>)
     ab0:	4798      	blx	r3
	{
		--uxSchedulerSuspended;
     ab2:	4b2b      	ldr	r3, [pc, #172]	; (b60 <xTaskResumeAll+0xc0>)
     ab4:	681a      	ldr	r2, [r3, #0]
     ab6:	3a01      	subs	r2, #1
     ab8:	601a      	str	r2, [r3, #0]

		if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
     aba:	681b      	ldr	r3, [r3, #0]
/*----------------------------------------------------------*/

signed portBASE_TYPE xTaskResumeAll( void )
{
register tskTCB *pxTCB;
signed portBASE_TYPE xAlreadyYielded = pdFALSE;
     abc:	2400      	movs	r4, #0
	tasks from this list into their appropriate ready list. */
	taskENTER_CRITICAL();
	{
		--uxSchedulerSuspended;

		if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
     abe:	2b00      	cmp	r3, #0
     ac0:	d149      	bne.n	b56 <xTaskResumeAll+0xb6>
		{
			if( uxCurrentNumberOfTasks > ( unsigned portBASE_TYPE ) 0U )
     ac2:	4b29      	ldr	r3, [pc, #164]	; (b68 <xTaskResumeAll+0xc8>)
     ac4:	681b      	ldr	r3, [r3, #0]
     ac6:	2600      	movs	r6, #0
     ac8:	2b00      	cmp	r3, #0
     aca:	d122      	bne.n	b12 <xTaskResumeAll+0x72>
     acc:	e043      	b.n	b56 <xTaskResumeAll+0xb6>

				/* Move any readied tasks from the pending list into the
				appropriate ready list. */
				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
				{
					pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY(  ( ( xList * ) &xPendingReadyList ) );
     ace:	4b27      	ldr	r3, [pc, #156]	; (b6c <xTaskResumeAll+0xcc>)
     ad0:	68db      	ldr	r3, [r3, #12]
     ad2:	68df      	ldr	r7, [r3, #12]
					uxListRemove( &( pxTCB->xEventListItem ) );
     ad4:	1c38      	adds	r0, r7, #0
     ad6:	3018      	adds	r0, #24
     ad8:	4b25      	ldr	r3, [pc, #148]	; (b70 <xTaskResumeAll+0xd0>)
     ada:	4798      	blx	r3
					uxListRemove( &( pxTCB->xGenericListItem ) );
     adc:	1d3d      	adds	r5, r7, #4
     ade:	1c28      	adds	r0, r5, #0
     ae0:	4b23      	ldr	r3, [pc, #140]	; (b70 <xTaskResumeAll+0xd0>)
     ae2:	4798      	blx	r3
					prvAddTaskToReadyQueue( pxTCB );
     ae4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
     ae6:	4a23      	ldr	r2, [pc, #140]	; (b74 <xTaskResumeAll+0xd4>)
     ae8:	6812      	ldr	r2, [r2, #0]
     aea:	4293      	cmp	r3, r2
     aec:	d901      	bls.n	af2 <xTaskResumeAll+0x52>
     aee:	4a21      	ldr	r2, [pc, #132]	; (b74 <xTaskResumeAll+0xd4>)
     af0:	6013      	str	r3, [r2, #0]
     af2:	0098      	lsls	r0, r3, #2
     af4:	18c3      	adds	r3, r0, r3
     af6:	009b      	lsls	r3, r3, #2
     af8:	481f      	ldr	r0, [pc, #124]	; (b78 <xTaskResumeAll+0xd8>)
     afa:	18c0      	adds	r0, r0, r3
     afc:	1c29      	adds	r1, r5, #0
     afe:	4b1f      	ldr	r3, [pc, #124]	; (b7c <xTaskResumeAll+0xdc>)
     b00:	4798      	blx	r3

					/* If we have moved a task that has a priority higher than
					the current task then we should yield. */
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
     b02:	4b1f      	ldr	r3, [pc, #124]	; (b80 <xTaskResumeAll+0xe0>)
     b04:	681b      	ldr	r3, [r3, #0]
     b06:	6afa      	ldr	r2, [r7, #44]	; 0x2c
     b08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     b0a:	429a      	cmp	r2, r3
     b0c:	d302      	bcc.n	b14 <xTaskResumeAll+0x74>
					{
						xYieldRequired = pdTRUE;
     b0e:	2601      	movs	r6, #1
     b10:	e000      	b.n	b14 <xTaskResumeAll+0x74>
			{
				portBASE_TYPE xYieldRequired = pdFALSE;

				/* Move any readied tasks from the pending list into the
				appropriate ready list. */
				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
     b12:	4c16      	ldr	r4, [pc, #88]	; (b6c <xTaskResumeAll+0xcc>)
     b14:	6823      	ldr	r3, [r4, #0]
     b16:	2b00      	cmp	r3, #0
     b18:	d1d9      	bne.n	ace <xTaskResumeAll+0x2e>
				}

				/* If any ticks occurred while the scheduler was suspended then
				they should be processed now.  This ensures the tick count does not
				slip, and that any delayed tasks are resumed at the correct time. */
				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
     b1a:	4b1a      	ldr	r3, [pc, #104]	; (b84 <xTaskResumeAll+0xe4>)
     b1c:	681b      	ldr	r3, [r3, #0]
     b1e:	2b00      	cmp	r3, #0
     b20:	d00c      	beq.n	b3c <xTaskResumeAll+0x9c>
				{
					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
     b22:	4b18      	ldr	r3, [pc, #96]	; (b84 <xTaskResumeAll+0xe4>)
     b24:	681b      	ldr	r3, [r3, #0]
     b26:	2b00      	cmp	r3, #0
     b28:	d008      	beq.n	b3c <xTaskResumeAll+0x9c>
					{
						vTaskIncrementTick();
     b2a:	4d17      	ldr	r5, [pc, #92]	; (b88 <xTaskResumeAll+0xe8>)
						--uxMissedTicks;
     b2c:	4c15      	ldr	r4, [pc, #84]	; (b84 <xTaskResumeAll+0xe4>)
				slip, and that any delayed tasks are resumed at the correct time. */
				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
				{
					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
					{
						vTaskIncrementTick();
     b2e:	47a8      	blx	r5
						--uxMissedTicks;
     b30:	6823      	ldr	r3, [r4, #0]
     b32:	3b01      	subs	r3, #1
     b34:	6023      	str	r3, [r4, #0]
				/* If any ticks occurred while the scheduler was suspended then
				they should be processed now.  This ensures the tick count does not
				slip, and that any delayed tasks are resumed at the correct time. */
				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
				{
					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
     b36:	6823      	ldr	r3, [r4, #0]
     b38:	2b00      	cmp	r3, #0
     b3a:	d1f8      	bne.n	b2e <xTaskResumeAll+0x8e>
						xYieldRequired = pdTRUE;
					}
					#endif
				}

				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
     b3c:	2e01      	cmp	r6, #1
     b3e:	d004      	beq.n	b4a <xTaskResumeAll+0xaa>
     b40:	4b12      	ldr	r3, [pc, #72]	; (b8c <xTaskResumeAll+0xec>)
     b42:	681b      	ldr	r3, [r3, #0]
/*----------------------------------------------------------*/

signed portBASE_TYPE xTaskResumeAll( void )
{
register tskTCB *pxTCB;
signed portBASE_TYPE xAlreadyYielded = pdFALSE;
     b44:	2400      	movs	r4, #0
						xYieldRequired = pdTRUE;
					}
					#endif
				}

				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
     b46:	2b01      	cmp	r3, #1
     b48:	d105      	bne.n	b56 <xTaskResumeAll+0xb6>
				{
					xAlreadyYielded = pdTRUE;
					xMissedYield = pdFALSE;
     b4a:	2200      	movs	r2, #0
     b4c:	4b0f      	ldr	r3, [pc, #60]	; (b8c <xTaskResumeAll+0xec>)
     b4e:	601a      	str	r2, [r3, #0]
					portYIELD_WITHIN_API();
     b50:	4b0f      	ldr	r3, [pc, #60]	; (b90 <xTaskResumeAll+0xf0>)
     b52:	4798      	blx	r3
					#endif
				}

				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
				{
					xAlreadyYielded = pdTRUE;
     b54:	2401      	movs	r4, #1
					portYIELD_WITHIN_API();
				}
			}
		}
	}
	taskEXIT_CRITICAL();
     b56:	4b0f      	ldr	r3, [pc, #60]	; (b94 <xTaskResumeAll+0xf4>)
     b58:	4798      	blx	r3

	return xAlreadyYielded;
}
     b5a:	1c20      	adds	r0, r4, #0
     b5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     b5e:	46c0      	nop			; (mov r8, r8)
     b60:	2000022c 	.word	0x2000022c
     b64:	00000f35 	.word	0x00000f35
     b68:	20000270 	.word	0x20000270
     b6c:	20000234 	.word	0x20000234
     b70:	00000685 	.word	0x00000685
     b74:	20000250 	.word	0x20000250
     b78:	200001b4 	.word	0x200001b4
     b7c:	00000631 	.word	0x00000631
     b80:	20000230 	.word	0x20000230
     b84:	20000190 	.word	0x20000190
     b88:	00000985 	.word	0x00000985
     b8c:	2000026c 	.word	0x2000026c
     b90:	00000f1d 	.word	0x00000f1d
     b94:	00000f4d 	.word	0x00000f4d

00000b98 <vTaskDelay>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelay == 1 )

	void vTaskDelay( portTickType xTicksToDelay )
	{
     b98:	b510      	push	{r4, lr}
     b9a:	1e04      	subs	r4, r0, #0
	portTickType xTimeToWake;
	signed portBASE_TYPE xAlreadyYielded = pdFALSE;

		/* A delay time of zero just forces a reschedule. */
		if( xTicksToDelay > ( portTickType ) 0U )
     b9c:	d010      	beq.n	bc0 <vTaskDelay+0x28>
		{
			vTaskSuspendAll();
     b9e:	4b0a      	ldr	r3, [pc, #40]	; (bc8 <vTaskDelay+0x30>)
     ba0:	4798      	blx	r3
				This task cannot be in an event list as it is the currently
				executing task. */

				/* Calculate the time to wake - this may overflow but this is
				not a problem. */
				xTimeToWake = xTickCount + xTicksToDelay;
     ba2:	4b0a      	ldr	r3, [pc, #40]	; (bcc <vTaskDelay+0x34>)
     ba4:	681b      	ldr	r3, [r3, #0]
     ba6:	18e4      	adds	r4, r4, r3

				/* We must remove ourselves from the ready list before adding
				ourselves to the blocked list as the same list item is used for
				both lists. */
				if( uxListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) ) == 0 )
     ba8:	4b09      	ldr	r3, [pc, #36]	; (bd0 <vTaskDelay+0x38>)
     baa:	6818      	ldr	r0, [r3, #0]
     bac:	3004      	adds	r0, #4
     bae:	4b09      	ldr	r3, [pc, #36]	; (bd4 <vTaskDelay+0x3c>)
     bb0:	4798      	blx	r3
					/* The current task must be in a ready list, so there is
					no need to check, and the port reset macro can be called
					directly. */
					portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
				}
				prvAddCurrentTaskToDelayedList( xTimeToWake );
     bb2:	1c20      	adds	r0, r4, #0
     bb4:	4b08      	ldr	r3, [pc, #32]	; (bd8 <vTaskDelay+0x40>)
     bb6:	4798      	blx	r3
			}
			xAlreadyYielded = xTaskResumeAll();
     bb8:	4b08      	ldr	r3, [pc, #32]	; (bdc <vTaskDelay+0x44>)
     bba:	4798      	blx	r3
		}

		/* Force a reschedule if xTaskResumeAll has not already done so, we may
		have put ourselves to sleep. */
		if( xAlreadyYielded == pdFALSE )
     bbc:	2800      	cmp	r0, #0
     bbe:	d101      	bne.n	bc4 <vTaskDelay+0x2c>
		{
			portYIELD_WITHIN_API();
     bc0:	4b07      	ldr	r3, [pc, #28]	; (be0 <vTaskDelay+0x48>)
     bc2:	4798      	blx	r3
		}
	}
     bc4:	bd10      	pop	{r4, pc}
     bc6:	46c0      	nop			; (mov r8, r8)
     bc8:	00000955 	.word	0x00000955
     bcc:	20000248 	.word	0x20000248
     bd0:	20000230 	.word	0x20000230
     bd4:	00000685 	.word	0x00000685
     bd8:	000006b9 	.word	0x000006b9
     bdc:	00000aa1 	.word	0x00000aa1
     be0:	00000f1d 	.word	0x00000f1d

00000be4 <vTaskSwitchContext>:

#endif /* configUSE_APPLICATION_TASK_TAG */
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
     be4:	b510      	push	{r4, lr}
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
     be6:	4b24      	ldr	r3, [pc, #144]	; (c78 <vTaskSwitchContext+0x94>)
     be8:	681b      	ldr	r3, [r3, #0]
     bea:	2b00      	cmp	r3, #0
     bec:	d110      	bne.n	c10 <vTaskSwitchContext+0x2c>
		#endif /* configGENERATE_RUN_TIME_STATS */

		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();

		taskSELECT_HIGHEST_PRIORITY_TASK();
     bee:	4b23      	ldr	r3, [pc, #140]	; (c7c <vTaskSwitchContext+0x98>)
     bf0:	681b      	ldr	r3, [r3, #0]
     bf2:	009a      	lsls	r2, r3, #2
     bf4:	18d3      	adds	r3, r2, r3
     bf6:	009b      	lsls	r3, r3, #2
     bf8:	4a21      	ldr	r2, [pc, #132]	; (c80 <vTaskSwitchContext+0x9c>)
     bfa:	589b      	ldr	r3, [r3, r2]
     bfc:	2b00      	cmp	r3, #0
     bfe:	d11a      	bne.n	c36 <vTaskSwitchContext+0x52>
     c00:	4b1e      	ldr	r3, [pc, #120]	; (c7c <vTaskSwitchContext+0x98>)
     c02:	681b      	ldr	r3, [r3, #0]
     c04:	2b00      	cmp	r3, #0
     c06:	d00a      	beq.n	c1e <vTaskSwitchContext+0x3a>
     c08:	4a1c      	ldr	r2, [pc, #112]	; (c7c <vTaskSwitchContext+0x98>)
     c0a:	4c1d      	ldr	r4, [pc, #116]	; (c80 <vTaskSwitchContext+0x9c>)
     c0c:	1c10      	adds	r0, r2, #0
     c0e:	e008      	b.n	c22 <vTaskSwitchContext+0x3e>
{
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
	{
		/* The scheduler is currently suspended - do not allow a context
		switch. */
		xMissedYield = pdTRUE;
     c10:	2201      	movs	r2, #1
     c12:	4b1c      	ldr	r3, [pc, #112]	; (c84 <vTaskSwitchContext+0xa0>)
     c14:	601a      	str	r2, [r3, #0]
     c16:	e02d      	b.n	c74 <vTaskSwitchContext+0x90>
		#endif /* configGENERATE_RUN_TIME_STATS */

		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();

		taskSELECT_HIGHEST_PRIORITY_TASK();
     c18:	6803      	ldr	r3, [r0, #0]
     c1a:	2b00      	cmp	r3, #0
     c1c:	d101      	bne.n	c22 <vTaskSwitchContext+0x3e>
     c1e:	b672      	cpsid	i
     c20:	e7fe      	b.n	c20 <vTaskSwitchContext+0x3c>
     c22:	6813      	ldr	r3, [r2, #0]
     c24:	3b01      	subs	r3, #1
     c26:	6013      	str	r3, [r2, #0]
     c28:	6813      	ldr	r3, [r2, #0]
     c2a:	0099      	lsls	r1, r3, #2
     c2c:	18cb      	adds	r3, r1, r3
     c2e:	009b      	lsls	r3, r3, #2
     c30:	591b      	ldr	r3, [r3, r4]
     c32:	2b00      	cmp	r3, #0
     c34:	d0f0      	beq.n	c18 <vTaskSwitchContext+0x34>
     c36:	4b11      	ldr	r3, [pc, #68]	; (c7c <vTaskSwitchContext+0x98>)
     c38:	681b      	ldr	r3, [r3, #0]
     c3a:	4c11      	ldr	r4, [pc, #68]	; (c80 <vTaskSwitchContext+0x9c>)
     c3c:	009a      	lsls	r2, r3, #2
     c3e:	18d1      	adds	r1, r2, r3
     c40:	0089      	lsls	r1, r1, #2
     c42:	1861      	adds	r1, r4, r1
     c44:	6848      	ldr	r0, [r1, #4]
     c46:	6840      	ldr	r0, [r0, #4]
     c48:	6048      	str	r0, [r1, #4]
     c4a:	18d2      	adds	r2, r2, r3
     c4c:	0092      	lsls	r2, r2, #2
     c4e:	3208      	adds	r2, #8
     c50:	18a2      	adds	r2, r4, r2
     c52:	4290      	cmp	r0, r2
     c54:	d105      	bne.n	c62 <vTaskSwitchContext+0x7e>
     c56:	6841      	ldr	r1, [r0, #4]
     c58:	009a      	lsls	r2, r3, #2
     c5a:	18d2      	adds	r2, r2, r3
     c5c:	0092      	lsls	r2, r2, #2
     c5e:	18a2      	adds	r2, r4, r2
     c60:	6051      	str	r1, [r2, #4]
     c62:	009a      	lsls	r2, r3, #2
     c64:	18d3      	adds	r3, r2, r3
     c66:	009b      	lsls	r3, r3, #2
     c68:	4a05      	ldr	r2, [pc, #20]	; (c80 <vTaskSwitchContext+0x9c>)
     c6a:	18d3      	adds	r3, r2, r3
     c6c:	685b      	ldr	r3, [r3, #4]
     c6e:	68da      	ldr	r2, [r3, #12]
     c70:	4b05      	ldr	r3, [pc, #20]	; (c88 <vTaskSwitchContext+0xa4>)
     c72:	601a      	str	r2, [r3, #0]

		traceTASK_SWITCHED_IN();
	}
}
     c74:	bd10      	pop	{r4, pc}
     c76:	46c0      	nop			; (mov r8, r8)
     c78:	2000022c 	.word	0x2000022c
     c7c:	20000250 	.word	0x20000250
     c80:	200001b4 	.word	0x200001b4
     c84:	2000026c 	.word	0x2000026c
     c88:	20000230 	.word	0x20000230

00000c8c <vTaskPlaceOnEventList>:
/*-----------------------------------------------------------*/

void vTaskPlaceOnEventList( const xList * const pxEventList, portTickType xTicksToWait )
{
     c8c:	b538      	push	{r3, r4, r5, lr}
portTickType xTimeToWake;

	configASSERT( pxEventList );
     c8e:	2800      	cmp	r0, #0
     c90:	d101      	bne.n	c96 <vTaskPlaceOnEventList+0xa>
     c92:	b672      	cpsid	i
     c94:	e7fe      	b.n	c94 <vTaskPlaceOnEventList+0x8>
     c96:	1c0c      	adds	r4, r1, #0
	SCHEDULER SUSPENDED. */

	/* Place the event list item of the TCB in the appropriate event list.
	This is placed in the list in priority order so the highest priority task
	is the first to be woken by the event. */
	vListInsert( ( xList * ) pxEventList, ( xListItem * ) &( pxCurrentTCB->xEventListItem ) );
     c98:	4d07      	ldr	r5, [pc, #28]	; (cb8 <vTaskPlaceOnEventList+0x2c>)
     c9a:	6829      	ldr	r1, [r5, #0]
     c9c:	3118      	adds	r1, #24
     c9e:	4b07      	ldr	r3, [pc, #28]	; (cbc <vTaskPlaceOnEventList+0x30>)
     ca0:	4798      	blx	r3

	/* We must remove ourselves from the ready list before adding ourselves
	to the blocked list as the same list item is used for both lists.  We have
	exclusive access to the ready lists as the scheduler is locked. */
	if( uxListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) ) == 0 )
     ca2:	6828      	ldr	r0, [r5, #0]
     ca4:	3004      	adds	r0, #4
     ca6:	4b06      	ldr	r3, [pc, #24]	; (cc0 <vTaskPlaceOnEventList+0x34>)
     ca8:	4798      	blx	r3
	}
	#else /* INCLUDE_vTaskSuspend */
	{
			/* Calculate the time at which the task should be woken if the event does
			not occur.  This may overflow but this doesn't matter. */
			xTimeToWake = xTickCount + xTicksToWait;
     caa:	4b06      	ldr	r3, [pc, #24]	; (cc4 <vTaskPlaceOnEventList+0x38>)
     cac:	6818      	ldr	r0, [r3, #0]
     cae:	1820      	adds	r0, r4, r0
			prvAddCurrentTaskToDelayedList( xTimeToWake );
     cb0:	4b05      	ldr	r3, [pc, #20]	; (cc8 <vTaskPlaceOnEventList+0x3c>)
     cb2:	4798      	blx	r3
	}
	#endif /* INCLUDE_vTaskSuspend */
}
     cb4:	bd38      	pop	{r3, r4, r5, pc}
     cb6:	46c0      	nop			; (mov r8, r8)
     cb8:	20000230 	.word	0x20000230
     cbc:	0000064d 	.word	0x0000064d
     cc0:	00000685 	.word	0x00000685
     cc4:	20000248 	.word	0x20000248
     cc8:	000006b9 	.word	0x000006b9

00000ccc <xTaskRemoveFromEventList>:

#endif /* configUSE_TIMERS */
/*-----------------------------------------------------------*/

signed portBASE_TYPE xTaskRemoveFromEventList( const xList * const pxEventList )
{
     ccc:	b538      	push	{r3, r4, r5, lr}
	get called - the lock count on the queue will get modified instead.  This
	means we can always expect exclusive access to the event list here.

	This function assumes that a check has already been made to ensure that
	pxEventList is not empty. */
	pxUnblockedTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
     cce:	68c3      	ldr	r3, [r0, #12]
     cd0:	68dd      	ldr	r5, [r3, #12]
	configASSERT( pxUnblockedTCB );
     cd2:	2d00      	cmp	r5, #0
     cd4:	d101      	bne.n	cda <xTaskRemoveFromEventList+0xe>
     cd6:	b672      	cpsid	i
     cd8:	e7fe      	b.n	cd8 <xTaskRemoveFromEventList+0xc>
	uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
     cda:	1c2c      	adds	r4, r5, #0
     cdc:	3418      	adds	r4, #24
     cde:	1c20      	adds	r0, r4, #0
     ce0:	4b12      	ldr	r3, [pc, #72]	; (d2c <xTaskRemoveFromEventList+0x60>)
     ce2:	4798      	blx	r3

	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
     ce4:	4b12      	ldr	r3, [pc, #72]	; (d30 <xTaskRemoveFromEventList+0x64>)
     ce6:	681b      	ldr	r3, [r3, #0]
     ce8:	2b00      	cmp	r3, #0
     cea:	d113      	bne.n	d14 <xTaskRemoveFromEventList+0x48>
	{
		uxListRemove( &( pxUnblockedTCB->xGenericListItem ) );
     cec:	1d2c      	adds	r4, r5, #4
     cee:	1c20      	adds	r0, r4, #0
     cf0:	4b0e      	ldr	r3, [pc, #56]	; (d2c <xTaskRemoveFromEventList+0x60>)
     cf2:	4798      	blx	r3
		prvAddTaskToReadyQueue( pxUnblockedTCB );
     cf4:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
     cf6:	4a0f      	ldr	r2, [pc, #60]	; (d34 <xTaskRemoveFromEventList+0x68>)
     cf8:	6812      	ldr	r2, [r2, #0]
     cfa:	4293      	cmp	r3, r2
     cfc:	d901      	bls.n	d02 <xTaskRemoveFromEventList+0x36>
     cfe:	4a0d      	ldr	r2, [pc, #52]	; (d34 <xTaskRemoveFromEventList+0x68>)
     d00:	6013      	str	r3, [r2, #0]
     d02:	0098      	lsls	r0, r3, #2
     d04:	18c3      	adds	r3, r0, r3
     d06:	009b      	lsls	r3, r3, #2
     d08:	480b      	ldr	r0, [pc, #44]	; (d38 <xTaskRemoveFromEventList+0x6c>)
     d0a:	18c0      	adds	r0, r0, r3
     d0c:	1c21      	adds	r1, r4, #0
     d0e:	4b0b      	ldr	r3, [pc, #44]	; (d3c <xTaskRemoveFromEventList+0x70>)
     d10:	4798      	blx	r3
     d12:	e003      	b.n	d1c <xTaskRemoveFromEventList+0x50>
	}
	else
	{
		/* We cannot access the delayed or ready lists, so will hold this
		task pending until the scheduler is resumed. */
		vListInsertEnd( ( xList * ) &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
     d14:	480a      	ldr	r0, [pc, #40]	; (d40 <xTaskRemoveFromEventList+0x74>)
     d16:	1c21      	adds	r1, r4, #0
     d18:	4b08      	ldr	r3, [pc, #32]	; (d3c <xTaskRemoveFromEventList+0x70>)
     d1a:	4798      	blx	r3
	}

	if( pxUnblockedTCB->uxPriority >= pxCurrentTCB->uxPriority )
     d1c:	4b09      	ldr	r3, [pc, #36]	; (d44 <xTaskRemoveFromEventList+0x78>)
     d1e:	681b      	ldr	r3, [r3, #0]
     d20:	6aea      	ldr	r2, [r5, #44]	; 0x2c
     d22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     d24:	2000      	movs	r0, #0
     d26:	429a      	cmp	r2, r3
     d28:	4140      	adcs	r0, r0
	{
		xReturn = pdFALSE;
	}

	return xReturn;
}
     d2a:	bd38      	pop	{r3, r4, r5, pc}
     d2c:	00000685 	.word	0x00000685
     d30:	2000022c 	.word	0x2000022c
     d34:	20000250 	.word	0x20000250
     d38:	200001b4 	.word	0x200001b4
     d3c:	00000631 	.word	0x00000631
     d40:	20000234 	.word	0x20000234
     d44:	20000230 	.word	0x20000230

00000d48 <vTaskSetTimeOutState>:
/*-----------------------------------------------------------*/

void vTaskSetTimeOutState( xTimeOutType * const pxTimeOut )
{
	configASSERT( pxTimeOut );
     d48:	2800      	cmp	r0, #0
     d4a:	d101      	bne.n	d50 <vTaskSetTimeOutState+0x8>
     d4c:	b672      	cpsid	i
     d4e:	e7fe      	b.n	d4e <vTaskSetTimeOutState+0x6>
	pxTimeOut->xOverflowCount = xNumOfOverflows;
     d50:	4b03      	ldr	r3, [pc, #12]	; (d60 <vTaskSetTimeOutState+0x18>)
     d52:	681b      	ldr	r3, [r3, #0]
     d54:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
     d56:	4b03      	ldr	r3, [pc, #12]	; (d64 <vTaskSetTimeOutState+0x1c>)
     d58:	681b      	ldr	r3, [r3, #0]
     d5a:	6043      	str	r3, [r0, #4]
}
     d5c:	4770      	bx	lr
     d5e:	46c0      	nop			; (mov r8, r8)
     d60:	2000019c 	.word	0x2000019c
     d64:	20000248 	.word	0x20000248

00000d68 <xTaskCheckForTimeOut>:
/*-----------------------------------------------------------*/

portBASE_TYPE xTaskCheckForTimeOut( xTimeOutType * const pxTimeOut, portTickType * const pxTicksToWait )
{
     d68:	b570      	push	{r4, r5, r6, lr}
portBASE_TYPE xReturn;

	configASSERT( pxTimeOut );
     d6a:	2800      	cmp	r0, #0
     d6c:	d101      	bne.n	d72 <xTaskCheckForTimeOut+0xa>
     d6e:	b672      	cpsid	i
     d70:	e7fe      	b.n	d70 <xTaskCheckForTimeOut+0x8>
	configASSERT( pxTicksToWait );
     d72:	2900      	cmp	r1, #0
     d74:	d101      	bne.n	d7a <xTaskCheckForTimeOut+0x12>
     d76:	b672      	cpsid	i
     d78:	e7fe      	b.n	d78 <xTaskCheckForTimeOut+0x10>
     d7a:	1c0d      	adds	r5, r1, #0
     d7c:	1c04      	adds	r4, r0, #0

	taskENTER_CRITICAL();
     d7e:	4b11      	ldr	r3, [pc, #68]	; (dc4 <xTaskCheckForTimeOut+0x5c>)
     d80:	4798      	blx	r3
				xReturn = pdFALSE;
			}
			else /* We are not blocking indefinitely, perform the checks below. */
		#endif

		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( ( portTickType ) xTickCount >= ( portTickType ) pxTimeOut->xTimeOnEntering ) )
     d82:	4b11      	ldr	r3, [pc, #68]	; (dc8 <xTaskCheckForTimeOut+0x60>)
     d84:	681b      	ldr	r3, [r3, #0]
     d86:	6822      	ldr	r2, [r4, #0]
     d88:	429a      	cmp	r2, r3
     d8a:	d005      	beq.n	d98 <xTaskCheckForTimeOut+0x30>
     d8c:	4b0f      	ldr	r3, [pc, #60]	; (dcc <xTaskCheckForTimeOut+0x64>)
     d8e:	681b      	ldr	r3, [r3, #0]
		{
			/* The tick count is greater than the time at which vTaskSetTimeout()
			was called, but has also overflowed since vTaskSetTimeOut() was called.
			It must have wrapped all the way around and gone past us again. This
			passed since vTaskSetTimeout() was called. */
			xReturn = pdTRUE;
     d90:	2601      	movs	r6, #1
				xReturn = pdFALSE;
			}
			else /* We are not blocking indefinitely, perform the checks below. */
		#endif

		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( ( portTickType ) xTickCount >= ( portTickType ) pxTimeOut->xTimeOnEntering ) )
     d92:	6862      	ldr	r2, [r4, #4]
     d94:	429a      	cmp	r2, r3
     d96:	d910      	bls.n	dba <xTaskCheckForTimeOut+0x52>
			was called, but has also overflowed since vTaskSetTimeOut() was called.
			It must have wrapped all the way around and gone past us again. This
			passed since vTaskSetTimeout() was called. */
			xReturn = pdTRUE;
		}
		else if( ( ( portTickType ) ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEntering ) ) < ( portTickType ) *pxTicksToWait )
     d98:	4b0c      	ldr	r3, [pc, #48]	; (dcc <xTaskCheckForTimeOut+0x64>)
     d9a:	6819      	ldr	r1, [r3, #0]
     d9c:	6860      	ldr	r0, [r4, #4]
     d9e:	682b      	ldr	r3, [r5, #0]
     da0:	1a09      	subs	r1, r1, r0
			vTaskSetTimeOutState( pxTimeOut );
			xReturn = pdFALSE;
		}
		else
		{
			xReturn = pdTRUE;
     da2:	2601      	movs	r6, #1
			was called, but has also overflowed since vTaskSetTimeOut() was called.
			It must have wrapped all the way around and gone past us again. This
			passed since vTaskSetTimeout() was called. */
			xReturn = pdTRUE;
		}
		else if( ( ( portTickType ) ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEntering ) ) < ( portTickType ) *pxTicksToWait )
     da4:	4299      	cmp	r1, r3
     da6:	d208      	bcs.n	dba <xTaskCheckForTimeOut+0x52>
		{
			/* Not a genuine timeout. Adjust parameters for time remaining. */
			*pxTicksToWait -= ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEntering );
     da8:	4a08      	ldr	r2, [pc, #32]	; (dcc <xTaskCheckForTimeOut+0x64>)
     daa:	6812      	ldr	r2, [r2, #0]
     dac:	1a12      	subs	r2, r2, r0
     dae:	1a9b      	subs	r3, r3, r2
     db0:	602b      	str	r3, [r5, #0]
			vTaskSetTimeOutState( pxTimeOut );
     db2:	1c20      	adds	r0, r4, #0
     db4:	4b06      	ldr	r3, [pc, #24]	; (dd0 <xTaskCheckForTimeOut+0x68>)
     db6:	4798      	blx	r3
			xReturn = pdFALSE;
     db8:	2600      	movs	r6, #0
		else
		{
			xReturn = pdTRUE;
		}
	}
	taskEXIT_CRITICAL();
     dba:	4b06      	ldr	r3, [pc, #24]	; (dd4 <xTaskCheckForTimeOut+0x6c>)
     dbc:	4798      	blx	r3

	return xReturn;
}
     dbe:	1c30      	adds	r0, r6, #0
     dc0:	bd70      	pop	{r4, r5, r6, pc}
     dc2:	46c0      	nop			; (mov r8, r8)
     dc4:	00000f35 	.word	0x00000f35
     dc8:	2000019c 	.word	0x2000019c
     dcc:	20000248 	.word	0x20000248
     dd0:	00000d49 	.word	0x00000d49
     dd4:	00000f4d 	.word	0x00000f4d

00000dd8 <vTaskMissedYield>:
/*-----------------------------------------------------------*/

void vTaskMissedYield( void )
{
	xMissedYield = pdTRUE;
     dd8:	2201      	movs	r2, #1
     dda:	4b01      	ldr	r3, [pc, #4]	; (de0 <vTaskMissedYield+0x8>)
     ddc:	601a      	str	r2, [r3, #0]
}
     dde:	4770      	bx	lr
     de0:	2000026c 	.word	0x2000026c

00000de4 <xTaskGetCurrentTaskHandle>:
	xTaskHandle xReturn;

		/* A critical section is not required as this is not called from
		an interrupt and the current TCB will always be the same for any
		individual execution thread. */
		xReturn = pxCurrentTCB;
     de4:	4b01      	ldr	r3, [pc, #4]	; (dec <xTaskGetCurrentTaskHandle+0x8>)
     de6:	6818      	ldr	r0, [r3, #0]

		return xReturn;
	}
     de8:	4770      	bx	lr
     dea:	46c0      	nop			; (mov r8, r8)
     dec:	20000230 	.word	0x20000230

00000df0 <vTaskPriorityInherit>:
/*-----------------------------------------------------------*/

#if ( configUSE_MUTEXES == 1 )

	void vTaskPriorityInherit( xTaskHandle * const pxMutexHolder )
	{
     df0:	b538      	push	{r3, r4, r5, lr}
	tskTCB * const pxTCB = ( tskTCB * ) pxMutexHolder;

		/* If the mutex was given back by an interrupt while the queue was
		locked then the mutex holder might now be NULL. */
		if( pxMutexHolder != NULL )
     df2:	2800      	cmp	r0, #0
     df4:	d02f      	beq.n	e56 <vTaskPriorityInherit+0x66>
		{
			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
     df6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
     df8:	4a17      	ldr	r2, [pc, #92]	; (e58 <vTaskPriorityInherit+0x68>)
     dfa:	6812      	ldr	r2, [r2, #0]
     dfc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
     dfe:	4293      	cmp	r3, r2
     e00:	d229      	bcs.n	e56 <vTaskPriorityInherit+0x66>
			{
				/* Adjust the mutex holder state to account for its new priority. */
				listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) pxCurrentTCB->uxPriority );
     e02:	4a15      	ldr	r2, [pc, #84]	; (e58 <vTaskPriorityInherit+0x68>)
     e04:	6812      	ldr	r2, [r2, #0]
     e06:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
     e08:	2206      	movs	r2, #6
     e0a:	1a52      	subs	r2, r2, r1
     e0c:	6182      	str	r2, [r0, #24]

				/* If the task being modified is in the ready state it will need to
				be moved into a new list. */
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xGenericListItem ) ) != pdFALSE )
     e0e:	009a      	lsls	r2, r3, #2
     e10:	18d3      	adds	r3, r2, r3
     e12:	009b      	lsls	r3, r3, #2
     e14:	4a11      	ldr	r2, [pc, #68]	; (e5c <vTaskPriorityInherit+0x6c>)
     e16:	18d3      	adds	r3, r2, r3
     e18:	6942      	ldr	r2, [r0, #20]
     e1a:	429a      	cmp	r2, r3
     e1c:	d117      	bne.n	e4e <vTaskPriorityInherit+0x5e>
     e1e:	1c05      	adds	r5, r0, #0
				{
					if( uxListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) ) == 0 )
     e20:	1d04      	adds	r4, r0, #4
     e22:	1c20      	adds	r0, r4, #0
     e24:	4b0e      	ldr	r3, [pc, #56]	; (e60 <vTaskPriorityInherit+0x70>)
     e26:	4798      	blx	r3
					{
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
					}

					/* Inherit the priority before being moved into the new list. */
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
     e28:	4b0b      	ldr	r3, [pc, #44]	; (e58 <vTaskPriorityInherit+0x68>)
     e2a:	681b      	ldr	r3, [r3, #0]
     e2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     e2e:	62eb      	str	r3, [r5, #44]	; 0x2c
					prvAddTaskToReadyQueue( pxTCB );
     e30:	4a0c      	ldr	r2, [pc, #48]	; (e64 <vTaskPriorityInherit+0x74>)
     e32:	6812      	ldr	r2, [r2, #0]
     e34:	4293      	cmp	r3, r2
     e36:	d901      	bls.n	e3c <vTaskPriorityInherit+0x4c>
     e38:	4a0a      	ldr	r2, [pc, #40]	; (e64 <vTaskPriorityInherit+0x74>)
     e3a:	6013      	str	r3, [r2, #0]
     e3c:	0098      	lsls	r0, r3, #2
     e3e:	18c0      	adds	r0, r0, r3
     e40:	0083      	lsls	r3, r0, #2
     e42:	4806      	ldr	r0, [pc, #24]	; (e5c <vTaskPriorityInherit+0x6c>)
     e44:	18c0      	adds	r0, r0, r3
     e46:	1c21      	adds	r1, r4, #0
     e48:	4b07      	ldr	r3, [pc, #28]	; (e68 <vTaskPriorityInherit+0x78>)
     e4a:	4798      	blx	r3
     e4c:	e003      	b.n	e56 <vTaskPriorityInherit+0x66>
				}
				else
				{
					/* Just inherit the priority. */
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
     e4e:	4b02      	ldr	r3, [pc, #8]	; (e58 <vTaskPriorityInherit+0x68>)
     e50:	681b      	ldr	r3, [r3, #0]
     e52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     e54:	62c3      	str	r3, [r0, #44]	; 0x2c
				}

				traceTASK_PRIORITY_INHERIT( pxTCB, pxCurrentTCB->uxPriority );
			}
		}
	}
     e56:	bd38      	pop	{r3, r4, r5, pc}
     e58:	20000230 	.word	0x20000230
     e5c:	200001b4 	.word	0x200001b4
     e60:	00000685 	.word	0x00000685
     e64:	20000250 	.word	0x20000250
     e68:	00000631 	.word	0x00000631

00000e6c <vTaskPriorityDisinherit>:
/*-----------------------------------------------------------*/

#if ( configUSE_MUTEXES == 1 )

	void vTaskPriorityDisinherit( xTaskHandle * const pxMutexHolder )
	{
     e6c:	b538      	push	{r3, r4, r5, lr}
	tskTCB * const pxTCB = ( tskTCB * ) pxMutexHolder;

		if( pxMutexHolder != NULL )
     e6e:	2800      	cmp	r0, #0
     e70:	d01b      	beq.n	eaa <vTaskPriorityDisinherit+0x3e>
		{
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
     e72:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
     e74:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
     e76:	4293      	cmp	r3, r2
     e78:	d017      	beq.n	eaa <vTaskPriorityDisinherit+0x3e>
     e7a:	1c04      	adds	r4, r0, #0
			{
				/* We must be the running task to be able to give the mutex back.
				Remove ourselves from the ready list we currently appear in. */
				if( uxListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) ) == 0 )
     e7c:	1d05      	adds	r5, r0, #4
     e7e:	1c28      	adds	r0, r5, #0
     e80:	4b0a      	ldr	r3, [pc, #40]	; (eac <vTaskPriorityDisinherit+0x40>)
     e82:	4798      	blx	r3
				}

				/* Disinherit the priority before adding the task into the new
				ready list. */
				traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
				pxTCB->uxPriority = pxTCB->uxBasePriority;
     e84:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     e86:	62e3      	str	r3, [r4, #44]	; 0x2c
				listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) pxTCB->uxPriority );
     e88:	2206      	movs	r2, #6
     e8a:	1ad2      	subs	r2, r2, r3
     e8c:	61a2      	str	r2, [r4, #24]
				prvAddTaskToReadyQueue( pxTCB );
     e8e:	4a08      	ldr	r2, [pc, #32]	; (eb0 <vTaskPriorityDisinherit+0x44>)
     e90:	6812      	ldr	r2, [r2, #0]
     e92:	4293      	cmp	r3, r2
     e94:	d901      	bls.n	e9a <vTaskPriorityDisinherit+0x2e>
     e96:	4a06      	ldr	r2, [pc, #24]	; (eb0 <vTaskPriorityDisinherit+0x44>)
     e98:	6013      	str	r3, [r2, #0]
     e9a:	0098      	lsls	r0, r3, #2
     e9c:	18c0      	adds	r0, r0, r3
     e9e:	0083      	lsls	r3, r0, #2
     ea0:	4804      	ldr	r0, [pc, #16]	; (eb4 <vTaskPriorityDisinherit+0x48>)
     ea2:	18c0      	adds	r0, r0, r3
     ea4:	1c29      	adds	r1, r5, #0
     ea6:	4b04      	ldr	r3, [pc, #16]	; (eb8 <vTaskPriorityDisinherit+0x4c>)
     ea8:	4798      	blx	r3
			}
		}
	}
     eaa:	bd38      	pop	{r3, r4, r5, pc}
     eac:	00000685 	.word	0x00000685
     eb0:	20000250 	.word	0x20000250
     eb4:	200001b4 	.word	0x200001b4
     eb8:	00000631 	.word	0x00000631

00000ebc <vPortStartFirstTask>:
void vPortStartFirstTask( void )
{
	/* The MSP stack is not reset as, unlike on M3/4 parts, there is no vector
	table offset register that can be used to locate the initial stack value.
	Not all M0 parts have the application vector table at address 0. */
	__asm volatile(
     ebc:	4a06      	ldr	r2, [pc, #24]	; (ed8 <pxCurrentTCBConst3>)
     ebe:	6813      	ldr	r3, [r2, #0]
     ec0:	6818      	ldr	r0, [r3, #0]
     ec2:	3020      	adds	r0, #32
     ec4:	f380 8809 	msr	PSP, r0
     ec8:	2002      	movs	r0, #2
     eca:	f380 8814 	msr	CONTROL, r0
     ece:	bc3f      	pop	{r0, r1, r2, r3, r4, r5}
     ed0:	46ae      	mov	lr, r5
     ed2:	b662      	cpsie	i
     ed4:	bd00      	pop	{pc}
     ed6:	46c0      	nop			; (mov r8, r8)

00000ed8 <pxCurrentTCBConst3>:
     ed8:	20000230 	.word	0x20000230

00000edc <pxPortInitialiseStack>:

/*
 * See header file for description.
 */
portSTACK_TYPE *pxPortInitialiseStack( portSTACK_TYPE *pxTopOfStack, pdTASK_CODE pxCode, void *pvParameters )
{
     edc:	b510      	push	{r4, lr}
	/* Simulate the stack frame as it would be created by a context switch
	interrupt. */
	pxTopOfStack--; /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
     ede:	1f03      	subs	r3, r0, #4
     ee0:	2480      	movs	r4, #128	; 0x80
     ee2:	0464      	lsls	r4, r4, #17
     ee4:	601c      	str	r4, [r3, #0]
	pxTopOfStack--;
	*pxTopOfStack = ( portSTACK_TYPE ) pxCode;	/* PC */
     ee6:	3b04      	subs	r3, #4
     ee8:	6019      	str	r1, [r3, #0]
	pxTopOfStack -= 6;	/* LR, R12, R3..R1 */
	*pxTopOfStack = ( portSTACK_TYPE ) pvParameters;	/* R0 */
     eea:	3b18      	subs	r3, #24
     eec:	601a      	str	r2, [r3, #0]
	pxTopOfStack -= 8; /* R11..R4. */
     eee:	3840      	subs	r0, #64	; 0x40

	return pxTopOfStack;
}
     ef0:	bd10      	pop	{r4, pc}
     ef2:	46c0      	nop			; (mov r8, r8)

00000ef4 <SVC_Handler>:
/*-----------------------------------------------------------*/

void vPortSVCHandler( void )
{
	__asm volatile (
     ef4:	4b08      	ldr	r3, [pc, #32]	; (f18 <pxCurrentTCBConst2>)
     ef6:	6819      	ldr	r1, [r3, #0]
     ef8:	6808      	ldr	r0, [r1, #0]
     efa:	3010      	adds	r0, #16
     efc:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
     efe:	46a0      	mov	r8, r4
     f00:	46a9      	mov	r9, r5
     f02:	46b2      	mov	sl, r6
     f04:	46bb      	mov	fp, r7
     f06:	f380 8809 	msr	PSP, r0
     f0a:	3820      	subs	r0, #32
     f0c:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
     f0e:	4671      	mov	r1, lr
     f10:	200d      	movs	r0, #13
     f12:	4301      	orrs	r1, r0
     f14:	4708      	bx	r1
     f16:	46c0      	nop			; (mov r8, r8)

00000f18 <pxCurrentTCBConst2>:
     f18:	20000230 	.word	0x20000230

00000f1c <vPortYield>:
/*-----------------------------------------------------------*/

void vPortYield( void )
{
	/* Set a PendSV to request a context switch. */
	*( portNVIC_INT_CTRL ) = portNVIC_PENDSVSET;
     f1c:	2280      	movs	r2, #128	; 0x80
     f1e:	0552      	lsls	r2, r2, #21
     f20:	4b03      	ldr	r3, [pc, #12]	; (f30 <vPortYield+0x14>)
     f22:	601a      	str	r2, [r3, #0]

	/* Barriers are normally not required but do ensure the code is completely
	within the specified behaviour for the architecture. */
	__asm volatile( "dsb" );
     f24:	f3bf 8f4f 	dsb	sy
	__asm volatile( "isb" );
     f28:	f3bf 8f6f 	isb	sy
}
     f2c:	4770      	bx	lr
     f2e:	46c0      	nop			; (mov r8, r8)
     f30:	e000ed04 	.word	0xe000ed04

00000f34 <vPortEnterCritical>:
/*-----------------------------------------------------------*/

void vPortEnterCritical( void )
{
    portDISABLE_INTERRUPTS();
     f34:	b672      	cpsid	i
    uxCriticalNesting++;
     f36:	4a04      	ldr	r2, [pc, #16]	; (f48 <vPortEnterCritical+0x14>)
     f38:	6813      	ldr	r3, [r2, #0]
     f3a:	3301      	adds	r3, #1
     f3c:	6013      	str	r3, [r2, #0]
	__asm volatile( "dsb" );
     f3e:	f3bf 8f4f 	dsb	sy
	__asm volatile( "isb" );
     f42:	f3bf 8f6f 	isb	sy
}
     f46:	4770      	bx	lr
     f48:	200000b8 	.word	0x200000b8

00000f4c <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void )
{
    uxCriticalNesting--;
     f4c:	4a03      	ldr	r2, [pc, #12]	; (f5c <vPortExitCritical+0x10>)
     f4e:	6813      	ldr	r3, [r2, #0]
     f50:	3b01      	subs	r3, #1
     f52:	6013      	str	r3, [r2, #0]
    if( uxCriticalNesting == 0 )
     f54:	2b00      	cmp	r3, #0
     f56:	d100      	bne.n	f5a <vPortExitCritical+0xe>
    {
        portENABLE_INTERRUPTS();
     f58:	b662      	cpsie	i
    }
}
     f5a:	4770      	bx	lr
     f5c:	200000b8 	.word	0x200000b8

00000f60 <PendSV_Handler>:

void xPortPendSVHandler( void )
{
	/* This is a naked function. */

	__asm volatile
     f60:	f3ef 8009 	mrs	r0, PSP
     f64:	4b0e      	ldr	r3, [pc, #56]	; (fa0 <pxCurrentTCBConst>)
     f66:	681a      	ldr	r2, [r3, #0]
     f68:	3820      	subs	r0, #32
     f6a:	6010      	str	r0, [r2, #0]
     f6c:	c0f0      	stmia	r0!, {r4, r5, r6, r7}
     f6e:	4644      	mov	r4, r8
     f70:	464d      	mov	r5, r9
     f72:	4656      	mov	r6, sl
     f74:	465f      	mov	r7, fp
     f76:	c0f0      	stmia	r0!, {r4, r5, r6, r7}
     f78:	b508      	push	{r3, lr}
     f7a:	b672      	cpsid	i
     f7c:	f7ff fe32 	bl	be4 <vTaskSwitchContext>
     f80:	b662      	cpsie	i
     f82:	bc0c      	pop	{r2, r3}
     f84:	6811      	ldr	r1, [r2, #0]
     f86:	6808      	ldr	r0, [r1, #0]
     f88:	3010      	adds	r0, #16
     f8a:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
     f8c:	46a0      	mov	r8, r4
     f8e:	46a9      	mov	r9, r5
     f90:	46b2      	mov	sl, r6
     f92:	46bb      	mov	fp, r7
     f94:	f380 8809 	msr	PSP, r0
     f98:	3820      	subs	r0, #32
     f9a:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
     f9c:	4718      	bx	r3
     f9e:	46c0      	nop			; (mov r8, r8)

00000fa0 <pxCurrentTCBConst>:
     fa0:	20000230 	.word	0x20000230

00000fa4 <SysTick_Handler>:
	);
}
/*-----------------------------------------------------------*/

void xPortSysTickHandler( void )
{
     fa4:	b508      	push	{r3, lr}
	/* If using preemption, also force a context switch. */
	#if configUSE_PREEMPTION == 1
		*(portNVIC_INT_CTRL) = portNVIC_PENDSVSET;
	#endif

	ulDummy = portSET_INTERRUPT_MASK_FROM_ISR();
     fa6:	b672      	cpsid	i
	{
		vTaskIncrementTick();
     fa8:	4b01      	ldr	r3, [pc, #4]	; (fb0 <SysTick_Handler+0xc>)
     faa:	4798      	blx	r3
	}
	portCLEAR_INTERRUPT_MASK_FROM_ISR( ulDummy );
     fac:	b662      	cpsie	i
}
     fae:	bd08      	pop	{r3, pc}
     fb0:	00000985 	.word	0x00000985

00000fb4 <vPortSetupTimerInterrupt>:
/*
 * Setup the systick timer to generate the tick interrupts at the required
 * frequency.
 */
__attribute__(( weak )) void vPortSetupTimerInterrupt( void )
{
     fb4:	b508      	push	{r3, lr}
	/* Configure SysTick to interrupt at the requested rate. */
	*(portNVIC_SYSTICK_VAL)  = 0; /* Load the SysTick Counter Value */
     fb6:	2200      	movs	r2, #0
     fb8:	4b07      	ldr	r3, [pc, #28]	; (fd8 <vPortSetupTimerInterrupt+0x24>)
     fba:	601a      	str	r2, [r3, #0]
	*(portNVIC_SYSTICK_LOAD) = ( configCPU_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
     fbc:	2000      	movs	r0, #0
     fbe:	4b07      	ldr	r3, [pc, #28]	; (fdc <vPortSetupTimerInterrupt+0x28>)
     fc0:	4798      	blx	r3
     fc2:	21fa      	movs	r1, #250	; 0xfa
     fc4:	0089      	lsls	r1, r1, #2
     fc6:	4b06      	ldr	r3, [pc, #24]	; (fe0 <vPortSetupTimerInterrupt+0x2c>)
     fc8:	4798      	blx	r3
     fca:	3801      	subs	r0, #1
     fcc:	4b05      	ldr	r3, [pc, #20]	; (fe4 <vPortSetupTimerInterrupt+0x30>)
     fce:	6018      	str	r0, [r3, #0]
	*(portNVIC_SYSTICK_CTRL) = portNVIC_SYSTICK_CLK | portNVIC_SYSTICK_INT | portNVIC_SYSTICK_ENABLE;
     fd0:	2207      	movs	r2, #7
     fd2:	4b05      	ldr	r3, [pc, #20]	; (fe8 <vPortSetupTimerInterrupt+0x34>)
     fd4:	601a      	str	r2, [r3, #0]
}
     fd6:	bd08      	pop	{r3, pc}
     fd8:	e000e018 	.word	0xe000e018
     fdc:	0000401d 	.word	0x0000401d
     fe0:	000062ad 	.word	0x000062ad
     fe4:	e000e014 	.word	0xe000e014
     fe8:	e000e010 	.word	0xe000e010

00000fec <xPortStartScheduler>:

/*
 * See header file for description.
 */
portBASE_TYPE xPortStartScheduler( void )
{
     fec:	b508      	push	{r3, lr}
	/* Make PendSV, CallSV and SysTick the same priroity as the kernel. */
	*(portNVIC_SYSPRI2) |= portNVIC_PENDSV_PRI;
     fee:	4b0a      	ldr	r3, [pc, #40]	; (1018 <xPortStartScheduler+0x2c>)
     ff0:	681a      	ldr	r2, [r3, #0]
     ff2:	21ff      	movs	r1, #255	; 0xff
     ff4:	0409      	lsls	r1, r1, #16
     ff6:	430a      	orrs	r2, r1
     ff8:	601a      	str	r2, [r3, #0]
	*(portNVIC_SYSPRI2) |= portNVIC_SYSTICK_PRI;
     ffa:	681a      	ldr	r2, [r3, #0]
     ffc:	21ff      	movs	r1, #255	; 0xff
     ffe:	0609      	lsls	r1, r1, #24
    1000:	430a      	orrs	r2, r1
    1002:	601a      	str	r2, [r3, #0]

	/* Start the timer that generates the tick ISR.  Interrupts are disabled
	here already. */
	vPortSetupTimerInterrupt();
    1004:	4b05      	ldr	r3, [pc, #20]	; (101c <xPortStartScheduler+0x30>)
    1006:	4798      	blx	r3

	/* Initialise the critical nesting count ready for the first task. */
	uxCriticalNesting = 0;
    1008:	2200      	movs	r2, #0
    100a:	4b05      	ldr	r3, [pc, #20]	; (1020 <xPortStartScheduler+0x34>)
    100c:	601a      	str	r2, [r3, #0]

	/* Start the first task. */
	vPortStartFirstTask();
    100e:	4b05      	ldr	r3, [pc, #20]	; (1024 <xPortStartScheduler+0x38>)
    1010:	4798      	blx	r3

	/* Should not get here! */
	return 0;
}
    1012:	2000      	movs	r0, #0
    1014:	bd08      	pop	{r3, pc}
    1016:	46c0      	nop			; (mov r8, r8)
    1018:	e000ed20 	.word	0xe000ed20
    101c:	00000fb5 	.word	0x00000fb5
    1020:	200000b8 	.word	0x200000b8
    1024:	00000ebd 	.word	0x00000ebd

00001028 <pvPortMalloc>:
static size_t xNextFreeByte = ( size_t ) 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
    1028:	b538      	push	{r3, r4, r5, lr}
    102a:	1c04      	adds	r4, r0, #0
void *pvReturn = NULL;
static unsigned char *pucAlignedHeap = NULL;

	/* Ensure that blocks are always aligned to the required number of bytes. */
	#if portBYTE_ALIGNMENT != 1
		if( xWantedSize & portBYTE_ALIGNMENT_MASK )
    102c:	0743      	lsls	r3, r0, #29
    102e:	d002      	beq.n	1036 <pvPortMalloc+0xe>
		{
			/* Byte alignment required. */
			xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
    1030:	2307      	movs	r3, #7
    1032:	439c      	bics	r4, r3
    1034:	3408      	adds	r4, #8
		}
	#endif

	vTaskSuspendAll();
    1036:	4b10      	ldr	r3, [pc, #64]	; (1078 <pvPortMalloc+0x50>)
    1038:	4798      	blx	r3
	{
		if( pucAlignedHeap == NULL )
    103a:	4b10      	ldr	r3, [pc, #64]	; (107c <pvPortMalloc+0x54>)
    103c:	681b      	ldr	r3, [r3, #0]
    103e:	2b00      	cmp	r3, #0
    1040:	d105      	bne.n	104e <pvPortMalloc+0x26>
		{
			/* Ensure the heap starts on a correctly aligned boundary. */
			pucAlignedHeap = ( unsigned char * ) ( ( ( portPOINTER_SIZE_TYPE ) &ucHeap[ portBYTE_ALIGNMENT ] ) & ( ( portPOINTER_SIZE_TYPE ) ~portBYTE_ALIGNMENT_MASK ) );
    1042:	2207      	movs	r2, #7
    1044:	4b0e      	ldr	r3, [pc, #56]	; (1080 <pvPortMalloc+0x58>)
    1046:	3308      	adds	r3, #8
    1048:	4393      	bics	r3, r2
    104a:	4a0c      	ldr	r2, [pc, #48]	; (107c <pvPortMalloc+0x54>)
    104c:	6013      	str	r3, [r2, #0]
		}

		/* Check there is enough room left for the allocation. */
		if( ( ( xNextFreeByte + xWantedSize ) < configADJUSTED_HEAP_SIZE ) &&
    104e:	4b0d      	ldr	r3, [pc, #52]	; (1084 <pvPortMalloc+0x5c>)
    1050:	681b      	ldr	r3, [r3, #0]
    1052:	18e4      	adds	r4, r4, r3
    1054:	4a0c      	ldr	r2, [pc, #48]	; (1088 <pvPortMalloc+0x60>)
    1056:	4294      	cmp	r4, r2
    1058:	d807      	bhi.n	106a <pvPortMalloc+0x42>
    105a:	42a3      	cmp	r3, r4
    105c:	d207      	bcs.n	106e <pvPortMalloc+0x46>
			( ( xNextFreeByte + xWantedSize ) > xNextFreeByte )	)/* Check for overflow. */
		{
			/* Return the next free byte then increment the index past this
			block. */
			pvReturn = pucAlignedHeap + xNextFreeByte;
    105e:	4a07      	ldr	r2, [pc, #28]	; (107c <pvPortMalloc+0x54>)
    1060:	6815      	ldr	r5, [r2, #0]
    1062:	18ed      	adds	r5, r5, r3
			xNextFreeByte += xWantedSize;
    1064:	4b07      	ldr	r3, [pc, #28]	; (1084 <pvPortMalloc+0x5c>)
    1066:	601c      	str	r4, [r3, #0]
    1068:	e002      	b.n	1070 <pvPortMalloc+0x48>

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
void *pvReturn = NULL;
    106a:	2500      	movs	r5, #0
    106c:	e000      	b.n	1070 <pvPortMalloc+0x48>
    106e:	2500      	movs	r5, #0
			block. */
			pvReturn = pucAlignedHeap + xNextFreeByte;
			xNextFreeByte += xWantedSize;
		}
	}
	xTaskResumeAll();
    1070:	4b06      	ldr	r3, [pc, #24]	; (108c <pvPortMalloc+0x64>)
    1072:	4798      	blx	r3
		}
	}
	#endif

	return pvReturn;
}
    1074:	1c28      	adds	r0, r5, #0
    1076:	bd38      	pop	{r3, r4, r5, pc}
    1078:	00000955 	.word	0x00000955
    107c:	20003d14 	.word	0x20003d14
    1080:	2000027c 	.word	0x2000027c
    1084:	20000278 	.word	0x20000278
    1088:	00003a8f 	.word	0x00003a8f
    108c:	00000aa1 	.word	0x00000aa1

00001090 <vPortFree>:
	heap_4.c for alternative implementations, and the memory management pages of
	http://www.FreeRTOS.org for more information. */
	( void ) pv;

	/* Force an assert as it is invalid to call this function. */
	configASSERT( pv == NULL );
    1090:	2800      	cmp	r0, #0
    1092:	d001      	beq.n	1098 <vPortFree+0x8>
    1094:	b672      	cpsid	i
    1096:	e7fe      	b.n	1096 <vPortFree+0x6>
}
    1098:	4770      	bx	lr
    109a:	46c0      	nop			; (mov r8, r8)

0000109c <_Z3sup11structClockS_>:



Clock timeManage={0,0,true};

bool sup(Clock clock1,Clock clock2){
    109c:	b082      	sub	sp, #8
    109e:	b084      	sub	sp, #16
    10a0:	9001      	str	r0, [sp, #4]
    10a2:	9102      	str	r1, [sp, #8]
    10a4:	9203      	str	r2, [sp, #12]
    10a6:	9305      	str	r3, [sp, #20]
		if(clock1.second>clock2.second){//clock1>clock2
    10a8:	9a01      	ldr	r2, [sp, #4]
    10aa:	9b05      	ldr	r3, [sp, #20]
			return true;
    10ac:	2001      	movs	r0, #1


Clock timeManage={0,0,true};

bool sup(Clock clock1,Clock clock2){
		if(clock1.second>clock2.second){//clock1>clock2
    10ae:	429a      	cmp	r2, r3
    10b0:	d809      	bhi.n	10c6 <_Z3sup11structClockS_+0x2a>
			return true;
		}
		else{
			if(clock1.second<clock2.second){
    10b2:	9a01      	ldr	r2, [sp, #4]
    10b4:	9b05      	ldr	r3, [sp, #20]
				return false;
    10b6:	2000      	movs	r0, #0
bool sup(Clock clock1,Clock clock2){
		if(clock1.second>clock2.second){//clock1>clock2
			return true;
		}
		else{
			if(clock1.second<clock2.second){
    10b8:	429a      	cmp	r2, r3
    10ba:	d304      	bcc.n	10c6 <_Z3sup11structClockS_+0x2a>
				return false;
			}
			else{//egual
				if(clock1.halfmillis>clock2.halfmillis){
    10bc:	9802      	ldr	r0, [sp, #8]
    10be:	9b06      	ldr	r3, [sp, #24]
    10c0:	4283      	cmp	r3, r0
    10c2:	4180      	sbcs	r0, r0
    10c4:	4240      	negs	r0, r0
					return false;
				}
			}
		}

}
    10c6:	b004      	add	sp, #16
    10c8:	b002      	add	sp, #8
    10ca:	4770      	bx	lr

000010cc <_Z11subClockPos11structClockS_>:
	}

	
	return ret;
}
Clock subClockPos(Clock clock1,Clock clock2 ){
    10cc:	b084      	sub	sp, #16
    10ce:	9101      	str	r1, [sp, #4]
    10d0:	9202      	str	r2, [sp, #8]
    10d2:	9303      	str	r3, [sp, #12]
	Clock ret={0,0,true};
    10d4:	2300      	movs	r3, #0
    10d6:	6003      	str	r3, [r0, #0]
    10d8:	6043      	str	r3, [r0, #4]
    10da:	3301      	adds	r3, #1
    10dc:	7203      	strb	r3, [r0, #8]
	//clock1.second+=clock1.halfmillis/RTC_FREQ;
	//clock1.halfmillis=clock1.halfmillis%RTC_FREQ;	
		
	//clock2.second+=clock2.halfmillis/RTC_FREQ;
	//clock2.halfmillis=clock2.halfmillis%RTC_FREQ;
	long int halfmillis=clock2.halfmillis;
    10de:	9905      	ldr	r1, [sp, #20]
	ret.second=clock1.second-clock2.second;
    10e0:	9a01      	ldr	r2, [sp, #4]
    10e2:	9b04      	ldr	r3, [sp, #16]
    10e4:	1ad2      	subs	r2, r2, r3
    10e6:	6002      	str	r2, [r0, #0]
	halfmillis=(long int)clock1.halfmillis-halfmillis;
    10e8:	9b02      	ldr	r3, [sp, #8]
    10ea:	1a5b      	subs	r3, r3, r1
	
	
	
	if(halfmillis<0){
    10ec:	d50b      	bpl.n	1106 <_Z11subClockPos11structClockS_+0x3a>
		
		if(ret.second!=0){
    10ee:	6802      	ldr	r2, [r0, #0]
    10f0:	2a00      	cmp	r2, #0
    10f2:	d009      	beq.n	1108 <_Z11subClockPos11structClockS_+0x3c>
				pc.printf("c1:%ld,%ld",clock1.second,clock1.halfmillis);
				pc.printf("c2:%ld,%ld",clock2.second,clock2.halfmillis);*/
				//sendHMI("error clock");
			}
			
			ret.second--;
    10f4:	6802      	ldr	r2, [r0, #0]
    10f6:	3a01      	subs	r2, #1
    10f8:	6002      	str	r2, [r0, #0]
			ret.halfmillis=(unsigned int)(halfmillis+RTC_FREQ);
    10fa:	22fa      	movs	r2, #250	; 0xfa
    10fc:	01d2      	lsls	r2, r2, #7
    10fe:	4694      	mov	ip, r2
    1100:	4463      	add	r3, ip
    1102:	6043      	str	r3, [r0, #4]
    1104:	e000      	b.n	1108 <_Z11subClockPos11structClockS_+0x3c>
		}
	}
	else{
		ret.halfmillis=halfmillis;
    1106:	6043      	str	r3, [r0, #4]
	}
			
	return ret;
    1108:	b004      	add	sp, #16
    110a:	4770      	bx	lr

0000110c <_Z8subClock11structClockS_>:
	if(clk.sign==false){
		clk.sign=true;
	}
	return clk;
}
Clock subClock(Clock clock1,Clock clock2 ){
    110c:	b570      	push	{r4, r5, r6, lr}
    110e:	b08e      	sub	sp, #56	; 0x38
    1110:	1c04      	adds	r4, r0, #0
    1112:	a805      	add	r0, sp, #20
    1114:	9105      	str	r1, [sp, #20]
    1116:	9206      	str	r2, [sp, #24]
    1118:	9307      	str	r3, [sp, #28]
	Clock ret={0,0,true};
    111a:	2300      	movs	r3, #0
    111c:	6023      	str	r3, [r4, #0]
    111e:	6063      	str	r3, [r4, #4]
    1120:	3301      	adds	r3, #1
    1122:	7223      	strb	r3, [r4, #8]
	if(clock1.sign!=clock2.sign){
    1124:	7a03      	ldrb	r3, [r0, #8]
    1126:	aa12      	add	r2, sp, #72	; 0x48
    1128:	7a12      	ldrb	r2, [r2, #8]
    112a:	b2db      	uxtb	r3, r3
    112c:	4293      	cmp	r3, r2
    112e:	d020      	beq.n	1172 <_Z8subClock11structClockS_+0x66>
		if(clock1.sign==true){// + - -
    1130:	7a03      	ldrb	r3, [r0, #8]
    1132:	2b00      	cmp	r3, #0
    1134:	d00d      	beq.n	1152 <_Z8subClock11structClockS_+0x46>
			clock2.sign=true;
    1136:	2201      	movs	r2, #1
    1138:	ab12      	add	r3, sp, #72	; 0x48
    113a:	721a      	strb	r2, [r3, #8]
			ret=sumClock(clock1,clock2);
    113c:	466b      	mov	r3, sp
    113e:	aa12      	add	r2, sp, #72	; 0x48
    1140:	ca23      	ldmia	r2!, {r0, r1, r5}
    1142:	c323      	stmia	r3!, {r0, r1, r5}
    1144:	1c20      	adds	r0, r4, #0
    1146:	9905      	ldr	r1, [sp, #20]
    1148:	9a06      	ldr	r2, [sp, #24]
    114a:	9b07      	ldr	r3, [sp, #28]
    114c:	4d2e      	ldr	r5, [pc, #184]	; (1208 <_Z8subClock11structClockS_+0xfc>)
    114e:	47a8      	blx	r5
    1150:	e056      	b.n	1200 <_Z8subClock11structClockS_+0xf4>
		}
		else{// - - +
			clock1.sign=true;
    1152:	ab05      	add	r3, sp, #20
    1154:	2201      	movs	r2, #1
    1156:	721a      	strb	r2, [r3, #8]
			ret=sumClock(clock1,clock2);
    1158:	466a      	mov	r2, sp
    115a:	a912      	add	r1, sp, #72	; 0x48
    115c:	c961      	ldmia	r1!, {r0, r5, r6}
    115e:	c261      	stmia	r2!, {r0, r5, r6}
    1160:	1c20      	adds	r0, r4, #0
    1162:	9905      	ldr	r1, [sp, #20]
    1164:	9a06      	ldr	r2, [sp, #24]
    1166:	9b07      	ldr	r3, [sp, #28]
    1168:	4d27      	ldr	r5, [pc, #156]	; (1208 <_Z8subClock11structClockS_+0xfc>)
    116a:	47a8      	blx	r5
			ret.sign=false;
    116c:	2300      	movs	r3, #0
    116e:	7223      	strb	r3, [r4, #8]
    1170:	e046      	b.n	1200 <_Z8subClock11structClockS_+0xf4>
		}
	}
	else{
		if(clock1.sign==true){ //+ - +
    1172:	ab05      	add	r3, sp, #20
    1174:	7a1b      	ldrb	r3, [r3, #8]
    1176:	2b00      	cmp	r3, #0
    1178:	d02b      	beq.n	11d2 <_Z8subClock11structClockS_+0xc6>
    117a:	aa08      	add	r2, sp, #32
    117c:	ab05      	add	r3, sp, #20
    117e:	cb23      	ldmia	r3!, {r0, r1, r5}
    1180:	c223      	stmia	r2!, {r0, r1, r5}
    1182:	ab0b      	add	r3, sp, #44	; 0x2c
    1184:	aa12      	add	r2, sp, #72	; 0x48
    1186:	ca23      	ldmia	r2!, {r0, r1, r5}
    1188:	c323      	stmia	r3!, {r0, r1, r5}


Clock timeManage={0,0,true};

bool sup(Clock clock1,Clock clock2){
		if(clock1.second>clock2.second){//clock1>clock2
    118a:	9a08      	ldr	r2, [sp, #32]
    118c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    118e:	429a      	cmp	r2, r3
    1190:	d807      	bhi.n	11a2 <_Z8subClock11structClockS_+0x96>
			return true;
		}
		else{
			if(clock1.second<clock2.second){
    1192:	9a08      	ldr	r2, [sp, #32]
    1194:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    1196:	429a      	cmp	r2, r3
    1198:	d30e      	bcc.n	11b8 <_Z8subClock11structClockS_+0xac>
				return false;
			}
			else{//egual
				if(clock1.halfmillis>clock2.halfmillis){
    119a:	9a09      	ldr	r2, [sp, #36]	; 0x24
    119c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
			ret.sign=false;
		}
	}
	else{
		if(clock1.sign==true){ //+ - +
			if(sup(clock1,clock2)){//clock1>Clock2
    119e:	429a      	cmp	r2, r3
    11a0:	d90a      	bls.n	11b8 <_Z8subClock11structClockS_+0xac>
				
				ret=subClockPos(clock1,clock2);
    11a2:	466b      	mov	r3, sp
    11a4:	aa12      	add	r2, sp, #72	; 0x48
    11a6:	ca23      	ldmia	r2!, {r0, r1, r5}
    11a8:	c323      	stmia	r3!, {r0, r1, r5}
    11aa:	1c20      	adds	r0, r4, #0
    11ac:	9905      	ldr	r1, [sp, #20]
    11ae:	9a06      	ldr	r2, [sp, #24]
    11b0:	9b07      	ldr	r3, [sp, #28]
    11b2:	4d16      	ldr	r5, [pc, #88]	; (120c <_Z8subClock11structClockS_+0x100>)
    11b4:	47a8      	blx	r5
    11b6:	e023      	b.n	1200 <_Z8subClock11structClockS_+0xf4>
			}
			else{
				ret=subClockPos(clock2,clock1);
    11b8:	ab05      	add	r3, sp, #20
    11ba:	466a      	mov	r2, sp
    11bc:	cb23      	ldmia	r3!, {r0, r1, r5}
    11be:	c223      	stmia	r2!, {r0, r1, r5}
    11c0:	1c20      	adds	r0, r4, #0
    11c2:	9912      	ldr	r1, [sp, #72]	; 0x48
    11c4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    11c6:	9b14      	ldr	r3, [sp, #80]	; 0x50
    11c8:	4d10      	ldr	r5, [pc, #64]	; (120c <_Z8subClock11structClockS_+0x100>)
    11ca:	47a8      	blx	r5
				ret.sign=false;
    11cc:	2300      	movs	r3, #0
    11ce:	7223      	strb	r3, [r4, #8]
    11d0:	e016      	b.n	1200 <_Z8subClock11structClockS_+0xf4>
			}
		}
		else{// - - - 
			clock2.sign=true;
    11d2:	2201      	movs	r2, #1
    11d4:	ab12      	add	r3, sp, #72	; 0x48
    11d6:	721a      	strb	r2, [r3, #8]
			clock1.sign=true;	
    11d8:	ab05      	add	r3, sp, #20
    11da:	721a      	strb	r2, [r3, #8]
			ret=subClock(clock1,clock2);
    11dc:	466a      	mov	r2, sp
    11de:	a912      	add	r1, sp, #72	; 0x48
    11e0:	c961      	ldmia	r1!, {r0, r5, r6}
    11e2:	c261      	stmia	r2!, {r0, r5, r6}
    11e4:	1c20      	adds	r0, r4, #0
    11e6:	9905      	ldr	r1, [sp, #20]
    11e8:	9a06      	ldr	r2, [sp, #24]
    11ea:	9b07      	ldr	r3, [sp, #28]
    11ec:	f7ff ff8e 	bl	110c <_Z8subClock11structClockS_>
			if(ret.sign==true){
    11f0:	7a23      	ldrb	r3, [r4, #8]
    11f2:	2b00      	cmp	r3, #0
    11f4:	d002      	beq.n	11fc <_Z8subClock11structClockS_+0xf0>
				ret.sign=false;
    11f6:	2300      	movs	r3, #0
    11f8:	7223      	strb	r3, [r4, #8]
    11fa:	e001      	b.n	1200 <_Z8subClock11structClockS_+0xf4>
			}
			else{
				ret.sign=true;
    11fc:	2301      	movs	r3, #1
    11fe:	7223      	strb	r3, [r4, #8]
		}
	}

	
	return ret;
}
    1200:	1c20      	adds	r0, r4, #0
    1202:	b00e      	add	sp, #56	; 0x38
    1204:	bd70      	pop	{r4, r5, r6, pc}
    1206:	46c0      	nop			; (mov r8, r8)
    1208:	00001211 	.word	0x00001211
    120c:	000010cd 	.word	0x000010cd

00001210 <_Z8sumClock11structClockS_>:
	ret.second=ret.second+(halfmillis/RTC_FREQ);
	ret.halfmillis=halfmillis%RTC_FREQ;
	return ret;
	
}
Clock sumClock(Clock clock1,Clock clock2 ){
    1210:	b5f0      	push	{r4, r5, r6, r7, lr}
    1212:	4647      	mov	r7, r8
    1214:	b480      	push	{r7}
    1216:	b09a      	sub	sp, #104	; 0x68
    1218:	1c04      	adds	r4, r0, #0
    121a:	a805      	add	r0, sp, #20
    121c:	9105      	str	r1, [sp, #20]
    121e:	9206      	str	r2, [sp, #24]
    1220:	9307      	str	r3, [sp, #28]
	Clock ret={0,0,true};
    1222:	2300      	movs	r3, #0
    1224:	6023      	str	r3, [r4, #0]
    1226:	6063      	str	r3, [r4, #4]
    1228:	3301      	adds	r3, #1
    122a:	7223      	strb	r3, [r4, #8]
		
	if((clock1.sign==true)&&(clock2.sign==true)){// + + +
    122c:	7a03      	ldrb	r3, [r0, #8]
    122e:	2b00      	cmp	r3, #0
    1230:	d013      	beq.n	125a <_Z8sumClock11structClockS_+0x4a>
    1232:	ab20      	add	r3, sp, #128	; 0x80
    1234:	7a1b      	ldrb	r3, [r3, #8]
    1236:	2b00      	cmp	r3, #0
    1238:	d114      	bne.n	1264 <_Z8sumClock11structClockS_+0x54>
    123a:	e00e      	b.n	125a <_Z8sumClock11structClockS_+0x4a>
		ret=sumClockPos(clock1,clock2);
	}
	else{
		if((clock1.sign==true)&&(clock2.sign==false)){ // + + -
    123c:	ab20      	add	r3, sp, #128	; 0x80
    123e:	7a1b      	ldrb	r3, [r3, #8]
    1240:	2b00      	cmp	r3, #0
    1242:	d146      	bne.n	12d2 <_Z8sumClock11structClockS_+0xc2>
    1244:	e037      	b.n	12b6 <_Z8sumClock11structClockS_+0xa6>
			clock2.sign=true;
			ret=subClock(clock1,clock2);
		}
		else{
					if((clock1.sign==false)&&(clock2.sign==true)){ // - + + 
    1246:	ab20      	add	r3, sp, #128	; 0x80
    1248:	7a1b      	ldrb	r3, [r3, #8]
    124a:	2b00      	cmp	r3, #0
    124c:	d146      	bne.n	12dc <_Z8sumClock11structClockS_+0xcc>
    124e:	e052      	b.n	12f6 <_Z8sumClock11structClockS_+0xe6>
						clock1.sign=true;
						ret=subClock(clock2,clock1);
					}
					else{
						if((clock1.sign==false)&&(clock2.sign==false)){ // - + -
    1250:	ab20      	add	r3, sp, #128	; 0x80
    1252:	7a1b      	ldrb	r3, [r3, #8]
    1254:	2b00      	cmp	r3, #0
    1256:	d053      	beq.n	1300 <_Z8sumClock11structClockS_+0xf0>
    1258:	e081      	b.n	135e <_Z8sumClock11structClockS_+0x14e>
		
	if((clock1.sign==true)&&(clock2.sign==true)){// + + +
		ret=sumClockPos(clock1,clock2);
	}
	else{
		if((clock1.sign==true)&&(clock2.sign==false)){ // + + -
    125a:	ab05      	add	r3, sp, #20
    125c:	7a1b      	ldrb	r3, [r3, #8]
    125e:	2b00      	cmp	r3, #0
    1260:	d1ec      	bne.n	123c <_Z8sumClock11structClockS_+0x2c>
    1262:	e036      	b.n	12d2 <_Z8sumClock11structClockS_+0xc2>
    1264:	aa08      	add	r2, sp, #32
    1266:	ab05      	add	r3, sp, #20
    1268:	1c11      	adds	r1, r2, #0
    126a:	cb61      	ldmia	r3!, {r0, r5, r6}
    126c:	c161      	stmia	r1!, {r0, r5, r6}
    126e:	ab0b      	add	r3, sp, #44	; 0x2c
    1270:	1c19      	adds	r1, r3, #0
    1272:	a820      	add	r0, sp, #128	; 0x80
    1274:	c8e0      	ldmia	r0!, {r5, r6, r7}
    1276:	c1e0      	stmia	r1!, {r5, r6, r7}
			}
		}

}
Clock sumClockPos(Clock clock1,Clock clock2 ){
	Clock ret={0,0,true};
    1278:	ad14      	add	r5, sp, #80	; 0x50
    127a:	2100      	movs	r1, #0
    127c:	9114      	str	r1, [sp, #80]	; 0x50
    127e:	9115      	str	r1, [sp, #84]	; 0x54
    1280:	3101      	adds	r1, #1
    1282:	7229      	strb	r1, [r5, #8]
	unsigned long int halfmillis=clock1.halfmillis;
    1284:	9909      	ldr	r1, [sp, #36]	; 0x24
	ret.second=clock1.second+clock2.second;
    1286:	9a08      	ldr	r2, [sp, #32]
    1288:	980b      	ldr	r0, [sp, #44]	; 0x2c
    128a:	1882      	adds	r2, r0, r2
    128c:	9214      	str	r2, [sp, #80]	; 0x50
	halfmillis=halfmillis+clock2.halfmillis;
    128e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
    1290:	1876      	adds	r6, r6, r1
	ret.second=ret.second+(halfmillis/RTC_FREQ);
    1292:	9f14      	ldr	r7, [sp, #80]	; 0x50
    1294:	1c30      	adds	r0, r6, #0
    1296:	21fa      	movs	r1, #250	; 0xfa
    1298:	01c9      	lsls	r1, r1, #7
    129a:	4b3a      	ldr	r3, [pc, #232]	; (1384 <_Z8sumClock11structClockS_+0x174>)
    129c:	4798      	blx	r3
    129e:	19c7      	adds	r7, r0, r7
    12a0:	9714      	str	r7, [sp, #80]	; 0x50
	ret.halfmillis=halfmillis%RTC_FREQ;
    12a2:	1c30      	adds	r0, r6, #0
    12a4:	21fa      	movs	r1, #250	; 0xfa
    12a6:	01c9      	lsls	r1, r1, #7
    12a8:	4b37      	ldr	r3, [pc, #220]	; (1388 <_Z8sumClock11structClockS_+0x178>)
    12aa:	4798      	blx	r3
    12ac:	6069      	str	r1, [r5, #4]
}
Clock sumClock(Clock clock1,Clock clock2 ){
	Clock ret={0,0,true};
		
	if((clock1.sign==true)&&(clock2.sign==true)){// + + +
		ret=sumClockPos(clock1,clock2);
    12ae:	1c23      	adds	r3, r4, #0
    12b0:	cd07      	ldmia	r5!, {r0, r1, r2}
    12b2:	c307      	stmia	r3!, {r0, r1, r2}
    12b4:	e053      	b.n	135e <_Z8sumClock11structClockS_+0x14e>
	}
	else{
		if((clock1.sign==true)&&(clock2.sign==false)){ // + + -
			clock2.sign=true;
    12b6:	2201      	movs	r2, #1
    12b8:	ab20      	add	r3, sp, #128	; 0x80
    12ba:	721a      	strb	r2, [r3, #8]
			ret=subClock(clock1,clock2);
    12bc:	466b      	mov	r3, sp
    12be:	aa20      	add	r2, sp, #128	; 0x80
    12c0:	ca23      	ldmia	r2!, {r0, r1, r5}
    12c2:	c323      	stmia	r3!, {r0, r1, r5}
    12c4:	1c20      	adds	r0, r4, #0
    12c6:	9905      	ldr	r1, [sp, #20]
    12c8:	9a06      	ldr	r2, [sp, #24]
    12ca:	9b07      	ldr	r3, [sp, #28]
    12cc:	4d2f      	ldr	r5, [pc, #188]	; (138c <_Z8sumClock11structClockS_+0x17c>)
    12ce:	47a8      	blx	r5
    12d0:	e045      	b.n	135e <_Z8sumClock11structClockS_+0x14e>
		}
		else{
					if((clock1.sign==false)&&(clock2.sign==true)){ // - + + 
    12d2:	ab05      	add	r3, sp, #20
    12d4:	7a1b      	ldrb	r3, [r3, #8]
    12d6:	2b00      	cmp	r3, #0
    12d8:	d10d      	bne.n	12f6 <_Z8sumClock11structClockS_+0xe6>
    12da:	e7b4      	b.n	1246 <_Z8sumClock11structClockS_+0x36>
						clock1.sign=true;
    12dc:	ab05      	add	r3, sp, #20
    12de:	2201      	movs	r2, #1
    12e0:	721a      	strb	r2, [r3, #8]
						ret=subClock(clock2,clock1);
    12e2:	466a      	mov	r2, sp
    12e4:	cb23      	ldmia	r3!, {r0, r1, r5}
    12e6:	c223      	stmia	r2!, {r0, r1, r5}
    12e8:	1c20      	adds	r0, r4, #0
    12ea:	9920      	ldr	r1, [sp, #128]	; 0x80
    12ec:	9a21      	ldr	r2, [sp, #132]	; 0x84
    12ee:	9b22      	ldr	r3, [sp, #136]	; 0x88
    12f0:	4d26      	ldr	r5, [pc, #152]	; (138c <_Z8sumClock11structClockS_+0x17c>)
    12f2:	47a8      	blx	r5
    12f4:	e033      	b.n	135e <_Z8sumClock11structClockS_+0x14e>
					}
					else{
						if((clock1.sign==false)&&(clock2.sign==false)){ // - + -
    12f6:	ab05      	add	r3, sp, #20
    12f8:	7a1b      	ldrb	r3, [r3, #8]
    12fa:	2b00      	cmp	r3, #0
    12fc:	d12f      	bne.n	135e <_Z8sumClock11structClockS_+0x14e>
    12fe:	e7a7      	b.n	1250 <_Z8sumClock11structClockS_+0x40>
							clock1.sign=true;
    1300:	ab05      	add	r3, sp, #20
    1302:	2101      	movs	r1, #1
    1304:	7219      	strb	r1, [r3, #8]
							clock2.sign=true;
    1306:	aa20      	add	r2, sp, #128	; 0x80
    1308:	7211      	strb	r1, [r2, #8]
    130a:	aa0e      	add	r2, sp, #56	; 0x38
    130c:	1c10      	adds	r0, r2, #0
    130e:	cbe0      	ldmia	r3!, {r5, r6, r7}
    1310:	c0e0      	stmia	r0!, {r5, r6, r7}
    1312:	ab11      	add	r3, sp, #68	; 0x44
    1314:	469c      	mov	ip, r3
    1316:	1c18      	adds	r0, r3, #0
    1318:	ad20      	add	r5, sp, #128	; 0x80
    131a:	cdc8      	ldmia	r5!, {r3, r6, r7}
    131c:	c0c8      	stmia	r0!, {r3, r6, r7}
			}
		}

}
Clock sumClockPos(Clock clock1,Clock clock2 ){
	Clock ret={0,0,true};
    131e:	ad17      	add	r5, sp, #92	; 0x5c
    1320:	2700      	movs	r7, #0
    1322:	9717      	str	r7, [sp, #92]	; 0x5c
    1324:	9718      	str	r7, [sp, #96]	; 0x60
    1326:	7229      	strb	r1, [r5, #8]
	unsigned long int halfmillis=clock1.halfmillis;
    1328:	990f      	ldr	r1, [sp, #60]	; 0x3c
	ret.second=clock1.second+clock2.second;
    132a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    132c:	9811      	ldr	r0, [sp, #68]	; 0x44
    132e:	1882      	adds	r2, r0, r2
    1330:	9217      	str	r2, [sp, #92]	; 0x5c
	halfmillis=halfmillis+clock2.halfmillis;
    1332:	4663      	mov	r3, ip
    1334:	685e      	ldr	r6, [r3, #4]
    1336:	1876      	adds	r6, r6, r1
	ret.second=ret.second+(halfmillis/RTC_FREQ);
    1338:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    133a:	4698      	mov	r8, r3
    133c:	1c30      	adds	r0, r6, #0
    133e:	21fa      	movs	r1, #250	; 0xfa
    1340:	01c9      	lsls	r1, r1, #7
    1342:	4b10      	ldr	r3, [pc, #64]	; (1384 <_Z8sumClock11structClockS_+0x174>)
    1344:	4798      	blx	r3
    1346:	4440      	add	r0, r8
    1348:	9017      	str	r0, [sp, #92]	; 0x5c
	ret.halfmillis=halfmillis%RTC_FREQ;
    134a:	1c30      	adds	r0, r6, #0
    134c:	21fa      	movs	r1, #250	; 0xfa
    134e:	01c9      	lsls	r1, r1, #7
    1350:	4b0d      	ldr	r3, [pc, #52]	; (1388 <_Z8sumClock11structClockS_+0x178>)
    1352:	4798      	blx	r3
    1354:	6069      	str	r1, [r5, #4]
					}
					else{
						if((clock1.sign==false)&&(clock2.sign==false)){ // - + -
							clock1.sign=true;
							clock2.sign=true;
							ret=sumClockPos(clock1,clock2);
    1356:	1c23      	adds	r3, r4, #0
    1358:	cd07      	ldmia	r5!, {r0, r1, r2}
    135a:	c307      	stmia	r3!, {r0, r1, r2}
							ret.sign=false;
    135c:	7227      	strb	r7, [r4, #8]
						}
					}
		}
		
	}
	ret.second+=ret.halfmillis/RTC_FREQ;
    135e:	6860      	ldr	r0, [r4, #4]
    1360:	6825      	ldr	r5, [r4, #0]
    1362:	21fa      	movs	r1, #250	; 0xfa
    1364:	01c9      	lsls	r1, r1, #7
    1366:	4b07      	ldr	r3, [pc, #28]	; (1384 <_Z8sumClock11structClockS_+0x174>)
    1368:	4798      	blx	r3
    136a:	1945      	adds	r5, r0, r5
    136c:	6025      	str	r5, [r4, #0]
	ret.halfmillis=ret.halfmillis%RTC_FREQ;
    136e:	6860      	ldr	r0, [r4, #4]
    1370:	21fa      	movs	r1, #250	; 0xfa
    1372:	01c9      	lsls	r1, r1, #7
    1374:	4b04      	ldr	r3, [pc, #16]	; (1388 <_Z8sumClock11structClockS_+0x178>)
    1376:	4798      	blx	r3
    1378:	6061      	str	r1, [r4, #4]
	return ret;
}
    137a:	1c20      	adds	r0, r4, #0
    137c:	b01a      	add	sp, #104	; 0x68
    137e:	bc04      	pop	{r2}
    1380:	4690      	mov	r8, r2
    1382:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1384:	000062ad 	.word	0x000062ad
    1388:	000063b9 	.word	0x000063b9
    138c:	0000110d 	.word	0x0000110d

00001390 <_Z9readClockP11structClock>:
volatile int timeCorr;
volatile bool stateLed=false;
DigitalOut led(LED1);
struct rtc_module rtc_instance;

uint32_t  readClock(Clock* timeClock){
    1390:	b570      	push	{r4, r5, r6, lr}
    1392:	1c04      	adds	r4, r0, #0
	//rtc_count_disable(&rtc_instance);
//	Disable_global_interrupt();
	uint32_t timeCounter=0;
	RTC->MODE0.CTRL.reg &=  0b1111111111111101;//disable timer
    1394:	4a13      	ldr	r2, [pc, #76]	; (13e4 <_Z9readClockP11structClock+0x54>)
    1396:	8813      	ldrh	r3, [r2, #0]
    1398:	2102      	movs	r1, #2
    139a:	438b      	bics	r3, r1
    139c:	8013      	strh	r3, [r2, #0]
	while(RTC->MODE0.STATUS.bit.SYNCBUSY==1);
    139e:	7a93      	ldrb	r3, [r2, #10]
    13a0:	09db      	lsrs	r3, r3, #7
    13a2:	d1fc      	bne.n	139e <_Z9readClockP11structClock+0xe>
	
	timeCounter=RTC->MODE0.COUNT.reg; 
    13a4:	4b0f      	ldr	r3, [pc, #60]	; (13e4 <_Z9readClockP11structClock+0x54>)
    13a6:	691e      	ldr	r6, [r3, #16]
	timeClock->second=timeManage.second;	
    13a8:	4a0f      	ldr	r2, [pc, #60]	; (13e8 <_Z9readClockP11structClock+0x58>)
    13aa:	6811      	ldr	r1, [r2, #0]
    13ac:	6021      	str	r1, [r4, #0]
	timeClock->halfmillis=timeManage.halfmillis;	
    13ae:	6852      	ldr	r2, [r2, #4]
    13b0:	6062      	str	r2, [r4, #4]
	//timeCounter=0;
	RTC->MODE0.CTRL.reg |= RTC_MODE0_CTRL_ENABLE; //enable timer
    13b2:	8819      	ldrh	r1, [r3, #0]
    13b4:	2202      	movs	r2, #2
    13b6:	430a      	orrs	r2, r1
    13b8:	801a      	strh	r2, [r3, #0]

	//Enable_global_interrupt();
	timeClock->sign=true;	
    13ba:	2301      	movs	r3, #1
    13bc:	7223      	strb	r3, [r4, #8]

	timeClock->halfmillis+=timeCounter;
    13be:	6863      	ldr	r3, [r4, #4]
    13c0:	199b      	adds	r3, r3, r6
    13c2:	6063      	str	r3, [r4, #4]
	timeClock->second+=timeClock->halfmillis/RTC_FREQ;
    13c4:	6860      	ldr	r0, [r4, #4]
    13c6:	6825      	ldr	r5, [r4, #0]
    13c8:	21fa      	movs	r1, #250	; 0xfa
    13ca:	01c9      	lsls	r1, r1, #7
    13cc:	4b07      	ldr	r3, [pc, #28]	; (13ec <_Z9readClockP11structClock+0x5c>)
    13ce:	4798      	blx	r3
    13d0:	1945      	adds	r5, r0, r5
    13d2:	6025      	str	r5, [r4, #0]
	timeClock->halfmillis=timeClock->halfmillis%RTC_FREQ;
    13d4:	6860      	ldr	r0, [r4, #4]
    13d6:	21fa      	movs	r1, #250	; 0xfa
    13d8:	01c9      	lsls	r1, r1, #7
    13da:	4b05      	ldr	r3, [pc, #20]	; (13f0 <_Z9readClockP11structClock+0x60>)
    13dc:	4798      	blx	r3
    13de:	6061      	str	r1, [r4, #4]
	return timeCounter;
}
    13e0:	1c30      	adds	r0, r6, #0
    13e2:	bd70      	pop	{r4, r5, r6, pc}
    13e4:	40001400 	.word	0x40001400
    13e8:	200000bc 	.word	0x200000bc
    13ec:	000062ad 	.word	0x000062ad
    13f0:	000063b9 	.word	0x000063b9

000013f4 <_Z10writeClock11structClock>:
void writeClock(Clock clk){
    13f4:	b5f0      	push	{r4, r5, r6, r7, lr}
    13f6:	4647      	mov	r7, r8
    13f8:	b480      	push	{r7}
    13fa:	b084      	sub	sp, #16
    13fc:	9001      	str	r0, [sp, #4]
    13fe:	9102      	str	r1, [sp, #8]
    1400:	9203      	str	r2, [sp, #12]
	//rtc_count_disable(&rtc_instance);
	//Disable_global_interrupt();

	RTC->MODE0.CTRL.reg &=  0b1111111111111101;//stop timer
    1402:	4a16      	ldr	r2, [pc, #88]	; (145c <_Z10writeClock11structClock+0x68>)
    1404:	8813      	ldrh	r3, [r2, #0]
    1406:	2102      	movs	r1, #2
    1408:	438b      	bics	r3, r1
    140a:	8013      	strh	r3, [r2, #0]
	
	while(RTC->MODE0.STATUS.bit.SYNCBUSY==1);
    140c:	7a93      	ldrb	r3, [r2, #10]
    140e:	09db      	lsrs	r3, r3, #7
    1410:	d1fc      	bne.n	140c <_Z10writeClock11structClock+0x18>
	RTC->MODE0.COUNT.reg=clk.halfmillis%VALUE_TIMER;
    1412:	9802      	ldr	r0, [sp, #8]
    1414:	4f12      	ldr	r7, [pc, #72]	; (1460 <_Z10writeClock11structClock+0x6c>)
    1416:	2196      	movs	r1, #150	; 0x96
    1418:	47b8      	blx	r7
    141a:	4d10      	ldr	r5, [pc, #64]	; (145c <_Z10writeClock11structClock+0x68>)
    141c:	6129      	str	r1, [r5, #16]
	timeManage.second=clk.second;
    141e:	9b01      	ldr	r3, [sp, #4]
    1420:	4c10      	ldr	r4, [pc, #64]	; (1464 <_Z10writeClock11structClock+0x70>)
    1422:	6023      	str	r3, [r4, #0]
	timeManage.halfmillis=(int)(clk.halfmillis/VALUE_TIMER)*VALUE_TIMER;
    1424:	9802      	ldr	r0, [sp, #8]
    1426:	4b10      	ldr	r3, [pc, #64]	; (1468 <_Z10writeClock11structClock+0x74>)
    1428:	4698      	mov	r8, r3
    142a:	2196      	movs	r1, #150	; 0x96
    142c:	4798      	blx	r3
    142e:	2396      	movs	r3, #150	; 0x96
    1430:	4358      	muls	r0, r3
    1432:	6060      	str	r0, [r4, #4]
	timeManage.second+=timeManage.halfmillis/RTC_FREQ;
    1434:	6860      	ldr	r0, [r4, #4]
    1436:	6826      	ldr	r6, [r4, #0]
    1438:	21fa      	movs	r1, #250	; 0xfa
    143a:	01c9      	lsls	r1, r1, #7
    143c:	47c0      	blx	r8
    143e:	1986      	adds	r6, r0, r6
    1440:	6026      	str	r6, [r4, #0]
	timeManage.halfmillis=timeManage.halfmillis%RTC_FREQ;
    1442:	6860      	ldr	r0, [r4, #4]
    1444:	21fa      	movs	r1, #250	; 0xfa
    1446:	01c9      	lsls	r1, r1, #7
    1448:	47b8      	blx	r7
    144a:	6061      	str	r1, [r4, #4]
	RTC->MODE0.CTRL.reg |= RTC_MODE0_CTRL_ENABLE; //enable timer
    144c:	882a      	ldrh	r2, [r5, #0]
    144e:	2302      	movs	r3, #2
    1450:	4313      	orrs	r3, r2
    1452:	802b      	strh	r3, [r5, #0]

	

	
	
}
    1454:	b004      	add	sp, #16
    1456:	bc04      	pop	{r2}
    1458:	4690      	mov	r8, r2
    145a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    145c:	40001400 	.word	0x40001400
    1460:	000063b9 	.word	0x000063b9
    1464:	200000bc 	.word	0x200000bc
    1468:	000062ad 	.word	0x000062ad

0000146c <_Z15isrInternalClokv>:
void isrInternalClok(void){
    146c:	b5f0      	push	{r4, r5, r6, r7, lr}
    146e:	b08d      	sub	sp, #52	; 0x34
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    1470:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
    1472:	f3bf 8f5f 	dmb	sy
			Disable_global_interrupt();
    1476:	2200      	movs	r2, #0
    1478:	4b57      	ldr	r3, [pc, #348]	; (15d8 <_Z15isrInternalClokv+0x16c>)
    147a:	701a      	strb	r2, [r3, #0]
			//printf("+");
			static bool state;
			state=stateLed;
    147c:	4b57      	ldr	r3, [pc, #348]	; (15dc <_Z15isrInternalClokv+0x170>)
    147e:	781a      	ldrb	r2, [r3, #0]
    1480:	4b57      	ldr	r3, [pc, #348]	; (15e0 <_Z15isrInternalClokv+0x174>)
    1482:	701a      	strb	r2, [r3, #0]
			

			timeManage.halfmillis+=VALUE_TIMER;
    1484:	4b57      	ldr	r3, [pc, #348]	; (15e4 <_Z15isrInternalClokv+0x178>)
    1486:	685a      	ldr	r2, [r3, #4]
    1488:	3296      	adds	r2, #150	; 0x96
    148a:	605a      	str	r2, [r3, #4]

		
			if(timeManage.halfmillis<(RTC_FREQ/2)){//all 500ms
    148c:	685a      	ldr	r2, [r3, #4]
    148e:	4b56      	ldr	r3, [pc, #344]	; (15e8 <_Z15isrInternalClokv+0x17c>)
    1490:	429a      	cmp	r2, r3
    1492:	d803      	bhi.n	149c <_Z15isrInternalClokv+0x30>
				stateLed=LOW;
    1494:	2200      	movs	r2, #0
    1496:	4b51      	ldr	r3, [pc, #324]	; (15dc <_Z15isrInternalClokv+0x170>)
    1498:	701a      	strb	r2, [r3, #0]
    149a:	e002      	b.n	14a2 <_Z15isrInternalClokv+0x36>
			}
			else{
				stateLed=HIGH;
    149c:	2201      	movs	r2, #1
    149e:	4b4f      	ldr	r3, [pc, #316]	; (15dc <_Z15isrInternalClokv+0x170>)
    14a0:	701a      	strb	r2, [r3, #0]
			}
			if(state!=stateLed){
    14a2:	4b4e      	ldr	r3, [pc, #312]	; (15dc <_Z15isrInternalClokv+0x170>)
    14a4:	781b      	ldrb	r3, [r3, #0]
    14a6:	b2db      	uxtb	r3, r3
    14a8:	4a4d      	ldr	r2, [pc, #308]	; (15e0 <_Z15isrInternalClokv+0x174>)
    14aa:	7812      	ldrb	r2, [r2, #0]
    14ac:	429a      	cmp	r2, r3
    14ae:	d017      	beq.n	14e0 <_Z15isrInternalClokv+0x74>
				led = stateLed;
    14b0:	4b4a      	ldr	r3, [pc, #296]	; (15dc <_Z15isrInternalClokv+0x170>)
    14b2:	781c      	ldrb	r4, [r3, #0]
    14b4:	b2e4      	uxtb	r4, r4
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    14b6:	4b4d      	ldr	r3, [pc, #308]	; (15ec <_Z15isrInternalClokv+0x180>)
    14b8:	781b      	ldrb	r3, [r3, #0]
    14ba:	b25b      	sxtb	r3, r3
    14bc:	3301      	adds	r3, #1
    14be:	d104      	bne.n	14ca <_Z15isrInternalClokv+0x5e>
    14c0:	484b      	ldr	r0, [pc, #300]	; (15f0 <_Z15isrInternalClokv+0x184>)
    14c2:	494c      	ldr	r1, [pc, #304]	; (15f4 <_Z15isrInternalClokv+0x188>)
    14c4:	2228      	movs	r2, #40	; 0x28
    14c6:	4b4c      	ldr	r3, [pc, #304]	; (15f8 <_Z15isrInternalClokv+0x18c>)
    14c8:	4798      	blx	r3
    if (value)
    14ca:	2c00      	cmp	r4, #0
    14cc:	d004      	beq.n	14d8 <_Z15isrInternalClokv+0x6c>
        *obj->OUTSET = obj->mask;
    14ce:	4b47      	ldr	r3, [pc, #284]	; (15ec <_Z15isrInternalClokv+0x180>)
    14d0:	691a      	ldr	r2, [r3, #16]
    14d2:	685b      	ldr	r3, [r3, #4]
    14d4:	6013      	str	r3, [r2, #0]
    14d6:	e003      	b.n	14e0 <_Z15isrInternalClokv+0x74>
    else
        *obj->OUTCLR = obj->mask;
    14d8:	4b44      	ldr	r3, [pc, #272]	; (15ec <_Z15isrInternalClokv+0x180>)
    14da:	68da      	ldr	r2, [r3, #12]
    14dc:	685b      	ldr	r3, [r3, #4]
    14de:	6013      	str	r3, [r2, #0]
				//		xSemaphoreGiveFromISR( synchroLed,NULL);
				//	}
			}

			
			timeManage.second+=timeManage.halfmillis/RTC_FREQ;
    14e0:	4c40      	ldr	r4, [pc, #256]	; (15e4 <_Z15isrInternalClokv+0x178>)
    14e2:	6860      	ldr	r0, [r4, #4]
    14e4:	6825      	ldr	r5, [r4, #0]
    14e6:	21fa      	movs	r1, #250	; 0xfa
    14e8:	01c9      	lsls	r1, r1, #7
    14ea:	4b44      	ldr	r3, [pc, #272]	; (15fc <_Z15isrInternalClokv+0x190>)
    14ec:	4798      	blx	r3
    14ee:	1945      	adds	r5, r0, r5
    14f0:	6025      	str	r5, [r4, #0]
			timeManage.halfmillis=timeManage.halfmillis%RTC_FREQ;
    14f2:	6860      	ldr	r0, [r4, #4]
    14f4:	21fa      	movs	r1, #250	; 0xfa
    14f6:	01c9      	lsls	r1, r1, #7
    14f8:	4b41      	ldr	r3, [pc, #260]	; (1600 <_Z15isrInternalClokv+0x194>)
    14fa:	4798      	blx	r3
    14fc:	6061      	str	r1, [r4, #4]
			if((valueCor!=0)){
    14fe:	4b41      	ldr	r3, [pc, #260]	; (1604 <_Z15isrInternalClokv+0x198>)
    1500:	681b      	ldr	r3, [r3, #0]
    1502:	2b00      	cmp	r3, #0
    1504:	d060      	beq.n	15c8 <_Z15isrInternalClokv+0x15c>
				if (timeCorr==0){
    1506:	4b40      	ldr	r3, [pc, #256]	; (1608 <_Z15isrInternalClokv+0x19c>)
    1508:	681b      	ldr	r3, [r3, #0]
    150a:	2b00      	cmp	r3, #0
    150c:	d13c      	bne.n	1588 <_Z15isrInternalClokv+0x11c>
					timeCorr=timeCorrection;
    150e:	4b3f      	ldr	r3, [pc, #252]	; (160c <_Z15isrInternalClokv+0x1a0>)
    1510:	681a      	ldr	r2, [r3, #0]
    1512:	4b3d      	ldr	r3, [pc, #244]	; (1608 <_Z15isrInternalClokv+0x19c>)
    1514:	601a      	str	r2, [r3, #0]
					Clock off;
					off.second=(unsigned int )abs(valueCor)/RTC_FREQ;
    1516:	4c3b      	ldr	r4, [pc, #236]	; (1604 <_Z15isrInternalClokv+0x198>)
    1518:	6820      	ldr	r0, [r4, #0]
    151a:	17c3      	asrs	r3, r0, #31
    151c:	18c0      	adds	r0, r0, r3
    151e:	4058      	eors	r0, r3
    1520:	21fa      	movs	r1, #250	; 0xfa
    1522:	01c9      	lsls	r1, r1, #7
    1524:	4b35      	ldr	r3, [pc, #212]	; (15fc <_Z15isrInternalClokv+0x190>)
    1526:	4798      	blx	r3
    1528:	9009      	str	r0, [sp, #36]	; 0x24
					off.halfmillis=(unsigned int)abs(valueCor)%RTC_FREQ;
    152a:	6820      	ldr	r0, [r4, #0]
    152c:	17c3      	asrs	r3, r0, #31
    152e:	18c0      	adds	r0, r0, r3
    1530:	4058      	eors	r0, r3
    1532:	21fa      	movs	r1, #250	; 0xfa
    1534:	01c9      	lsls	r1, r1, #7
    1536:	4b32      	ldr	r3, [pc, #200]	; (1600 <_Z15isrInternalClokv+0x194>)
    1538:	4798      	blx	r3
    153a:	910a      	str	r1, [sp, #40]	; 0x28
					if(valueCor<0){
    153c:	6823      	ldr	r3, [r4, #0]
    153e:	2b00      	cmp	r3, #0
    1540:	da03      	bge.n	154a <_Z15isrInternalClokv+0xde>
						off.sign=false;
    1542:	2200      	movs	r2, #0
    1544:	ab09      	add	r3, sp, #36	; 0x24
    1546:	721a      	strb	r2, [r3, #8]
    1548:	e002      	b.n	1550 <_Z15isrInternalClokv+0xe4>
					}
					else{
						off.sign=true;
    154a:	2201      	movs	r2, #1
    154c:	ab09      	add	r3, sp, #36	; 0x24
    154e:	721a      	strb	r2, [r3, #8]
					}
					//change the time
					timeManage=sumClock(timeManage,off);
    1550:	4e24      	ldr	r6, [pc, #144]	; (15e4 <_Z15isrInternalClokv+0x178>)
    1552:	ac04      	add	r4, sp, #16
    1554:	ad09      	add	r5, sp, #36	; 0x24
    1556:	466b      	mov	r3, sp
    1558:	1c2a      	adds	r2, r5, #0
    155a:	ca83      	ldmia	r2!, {r0, r1, r7}
    155c:	c383      	stmia	r3!, {r0, r1, r7}
    155e:	1c20      	adds	r0, r4, #0
    1560:	6831      	ldr	r1, [r6, #0]
    1562:	6872      	ldr	r2, [r6, #4]
    1564:	68b3      	ldr	r3, [r6, #8]
    1566:	4f2a      	ldr	r7, [pc, #168]	; (1610 <_Z15isrInternalClokv+0x1a4>)
    1568:	47b8      	blx	r7
    156a:	1c23      	adds	r3, r4, #0
    156c:	cb07      	ldmia	r3!, {r0, r1, r2}
    156e:	c607      	stmia	r6!, {r0, r1, r2}
					//change the correction offset
					sumOffset=sumClock(sumOffset,off);//ok
    1570:	4e28      	ldr	r6, [pc, #160]	; (1614 <_Z15isrInternalClokv+0x1a8>)
    1572:	466b      	mov	r3, sp
    1574:	cd07      	ldmia	r5!, {r0, r1, r2}
    1576:	c307      	stmia	r3!, {r0, r1, r2}
    1578:	1c20      	adds	r0, r4, #0
    157a:	6831      	ldr	r1, [r6, #0]
    157c:	6872      	ldr	r2, [r6, #4]
    157e:	68b3      	ldr	r3, [r6, #8]
    1580:	47b8      	blx	r7
    1582:	cc0e      	ldmia	r4!, {r1, r2, r3}
    1584:	c60e      	stmia	r6!, {r1, r2, r3}
    1586:	e003      	b.n	1590 <_Z15isrInternalClokv+0x124>
				}
				else{
					timeCorr--;
    1588:	4a1f      	ldr	r2, [pc, #124]	; (1608 <_Z15isrInternalClokv+0x19c>)
    158a:	6813      	ldr	r3, [r2, #0]
    158c:	3b01      	subs	r3, #1
    158e:	6013      	str	r3, [r2, #0]
				}	
				sumOffset.second+=sumOffset.halfmillis/RTC_FREQ;
    1590:	4c20      	ldr	r4, [pc, #128]	; (1614 <_Z15isrInternalClokv+0x1a8>)
    1592:	6860      	ldr	r0, [r4, #4]
    1594:	6825      	ldr	r5, [r4, #0]
    1596:	4f19      	ldr	r7, [pc, #100]	; (15fc <_Z15isrInternalClokv+0x190>)
    1598:	21fa      	movs	r1, #250	; 0xfa
    159a:	01c9      	lsls	r1, r1, #7
    159c:	47b8      	blx	r7
    159e:	1945      	adds	r5, r0, r5
    15a0:	6025      	str	r5, [r4, #0]
				sumOffset.halfmillis=sumOffset.halfmillis%RTC_FREQ;
    15a2:	6860      	ldr	r0, [r4, #4]
    15a4:	4e16      	ldr	r6, [pc, #88]	; (1600 <_Z15isrInternalClokv+0x194>)
    15a6:	21fa      	movs	r1, #250	; 0xfa
    15a8:	01c9      	lsls	r1, r1, #7
    15aa:	47b0      	blx	r6
    15ac:	6061      	str	r1, [r4, #4]
				timeManage.second+=timeManage.halfmillis/RTC_FREQ;
    15ae:	4c0d      	ldr	r4, [pc, #52]	; (15e4 <_Z15isrInternalClokv+0x178>)
    15b0:	6860      	ldr	r0, [r4, #4]
    15b2:	6825      	ldr	r5, [r4, #0]
    15b4:	21fa      	movs	r1, #250	; 0xfa
    15b6:	01c9      	lsls	r1, r1, #7
    15b8:	47b8      	blx	r7
    15ba:	1945      	adds	r5, r0, r5
    15bc:	6025      	str	r5, [r4, #0]
				timeManage.halfmillis=timeManage.halfmillis%RTC_FREQ;
    15be:	6860      	ldr	r0, [r4, #4]
    15c0:	21fa      	movs	r1, #250	; 0xfa
    15c2:	01c9      	lsls	r1, r1, #7
    15c4:	47b0      	blx	r6
    15c6:	6061      	str	r1, [r4, #4]
			
			}
			

			
	Enable_global_interrupt();
    15c8:	2201      	movs	r2, #1
    15ca:	4b03      	ldr	r3, [pc, #12]	; (15d8 <_Z15isrInternalClokv+0x16c>)
    15cc:	701a      	strb	r2, [r3, #0]
    15ce:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
    15d2:	b662      	cpsie	i
}
    15d4:	b00d      	add	sp, #52	; 0x34
    15d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    15d8:	200000d0 	.word	0x200000d0
    15dc:	20003d20 	.word	0x20003d20
    15e0:	20003d18 	.word	0x20003d18
    15e4:	200000bc 	.word	0x200000bc
    15e8:	00003e7f 	.word	0x00003e7f
    15ec:	20003d28 	.word	0x20003d28
    15f0:	0000e6ac 	.word	0x0000e6ac
    15f4:	0000e6c4 	.word	0x0000e6c4
    15f8:	00004bb1 	.word	0x00004bb1
    15fc:	000062ad 	.word	0x000062ad
    1600:	000063b9 	.word	0x000063b9
    1604:	20003d44 	.word	0x20003d44
    1608:	20003d24 	.word	0x20003d24
    160c:	20003d1c 	.word	0x20003d1c
    1610:	00001211 	.word	0x00001211
    1614:	20004134 	.word	0x20004134

00001618 <RTC_Handler>:
void RTC_Handler( void ){
    1618:	b508      	push	{r3, lr}
	//pc.printf("ISR");
	RTC->MODE0.INTFLAG.bit.CMP0=1;		//disable the flag COMPARE
    161a:	4b06      	ldr	r3, [pc, #24]	; (1634 <RTC_Handler+0x1c>)
    161c:	7a19      	ldrb	r1, [r3, #8]
    161e:	2201      	movs	r2, #1
    1620:	430a      	orrs	r2, r1
    1622:	721a      	strb	r2, [r3, #8]
	RTC->MODE0.INTFLAG.bit.OVF=1;		//disable the flag COMPARE
    1624:	7a1a      	ldrb	r2, [r3, #8]
    1626:	2180      	movs	r1, #128	; 0x80
    1628:	4249      	negs	r1, r1
    162a:	430a      	orrs	r2, r1
    162c:	721a      	strb	r2, [r3, #8]
	isrInternalClok();
    162e:	4b02      	ldr	r3, [pc, #8]	; (1638 <RTC_Handler+0x20>)
    1630:	4798      	blx	r3
}
    1632:	bd08      	pop	{r3, pc}
    1634:	40001400 	.word	0x40001400
    1638:	0000146d 	.word	0x0000146d

0000163c <_Z22configureInternalClockv>:

void configureInternalClock(void){
    163c:	b508      	push	{r3, lr}
	pc.printf("internal clock config\r\n");
    163e:	4821      	ldr	r0, [pc, #132]	; (16c4 <_Z22configureInternalClockv+0x88>)
    1640:	4921      	ldr	r1, [pc, #132]	; (16c8 <_Z22configureInternalClockv+0x8c>)
    1642:	4b22      	ldr	r3, [pc, #136]	; (16cc <_Z22configureInternalClockv+0x90>)
    1644:	4798      	blx	r3
	//gENERIC CLOCK GENRERATOR
	GCLK->GENCTRL.reg=0b00000000000000010000010000000010;
    1646:	4b22      	ldr	r3, [pc, #136]	; (16d0 <_Z22configureInternalClockv+0x94>)
    1648:	4a22      	ldr	r2, [pc, #136]	; (16d4 <_Z22configureInternalClockv+0x98>)
    164a:	605a      	str	r2, [r3, #4]
	//Generic Clock Generator Division
	GCLK->GENDIV.reg= 0b00000000000000000000000100000010;
    164c:	2281      	movs	r2, #129	; 0x81
    164e:	0052      	lsls	r2, r2, #1
    1650:	609a      	str	r2, [r3, #8]
	GCLK->CLKCTRL.reg=0x4204;
    1652:	4a21      	ldr	r2, [pc, #132]	; (16d8 <_Z22configureInternalClockv+0x9c>)
    1654:	805a      	strh	r2, [r3, #2]
	//peripheral configuration
	
	RTC->MODE0.CTRL.bit.PRESCALER=0x0;	//prescaller at 0
    1656:	4b21      	ldr	r3, [pc, #132]	; (16dc <_Z22configureInternalClockv+0xa0>)
    1658:	8819      	ldrh	r1, [r3, #0]
    165a:	4a21      	ldr	r2, [pc, #132]	; (16e0 <_Z22configureInternalClockv+0xa4>)
    165c:	400a      	ands	r2, r1
    165e:	801a      	strh	r2, [r3, #0]
	RTC->MODE0.CTRL.bit.MODE=0x0;			//mode 0 : 32 bit counter
    1660:	881a      	ldrh	r2, [r3, #0]
    1662:	210c      	movs	r1, #12
    1664:	438a      	bics	r2, r1
    1666:	801a      	strh	r2, [r3, #0]
	RTC->MODE0.CTRL.bit.SWRST=0;			//no software reset
    1668:	881a      	ldrh	r2, [r3, #0]
    166a:	390b      	subs	r1, #11
    166c:	438a      	bics	r2, r1
    166e:	801a      	strh	r2, [r3, #0]
	RTC->MODE0.CTRL.bit.MATCHCLR=1;			//automatic reset counter
    1670:	8819      	ldrh	r1, [r3, #0]
    1672:	2280      	movs	r2, #128	; 0x80
    1674:	430a      	orrs	r2, r1
    1676:	801a      	strh	r2, [r3, #0]
	
	//event configuration
	RTC->MODE0.INTENSET.bit.OVF=1;		//enable the event overflow
    1678:	79d9      	ldrb	r1, [r3, #7]
    167a:	2080      	movs	r0, #128	; 0x80
    167c:	4240      	negs	r0, r0
    167e:	4301      	orrs	r1, r0
    1680:	71d9      	strb	r1, [r3, #7]
	RTC->MODE0.INTENSET.bit.CMP0=1;		//enable the event compare
    1682:	79d9      	ldrb	r1, [r3, #7]
    1684:	2201      	movs	r2, #1
    1686:	4311      	orrs	r1, r2
    1688:	71d9      	strb	r1, [r3, #7]
	RTC->MODE0.INTFLAG.bit.CMP0=1;		//disable the flag COMPARE
    168a:	7a19      	ldrb	r1, [r3, #8]
    168c:	430a      	orrs	r2, r1
    168e:	721a      	strb	r2, [r3, #8]
	RTC->MODE0.INTFLAG.bit.OVF=1;		//disable the flag COMPARE
    1690:	7a1a      	ldrb	r2, [r3, #8]
    1692:	4302      	orrs	r2, r0
    1694:	721a      	strb	r2, [r3, #8]
	RTC->MODE0.COUNT.bit.COUNT=0;			//set the RTC value
    1696:	2200      	movs	r2, #0
    1698:	611a      	str	r2, [r3, #16]
	RTC->MODE0.COMP[0].reg = count_set_period;
    169a:	4a12      	ldr	r2, [pc, #72]	; (16e4 <_Z22configureInternalClockv+0xa8>)
    169c:	6812      	ldr	r2, [r2, #0]
    169e:	619a      	str	r2, [r3, #24]

	RTC->MODE0.CTRL.reg |= RTC_MODE0_CTRL_ENABLE;
    16a0:	8819      	ldrh	r1, [r3, #0]
    16a2:	2202      	movs	r2, #2
    16a4:	430a      	orrs	r2, r1
    16a6:	801a      	strh	r2, [r3, #0]
  if((int32_t)(IRQn) < 0) {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8 - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
  else {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
    16a8:	4a0f      	ldr	r2, [pc, #60]	; (16e8 <_Z22configureInternalClockv+0xac>)
    16aa:	21c0      	movs	r1, #192	; 0xc0
    16ac:	0089      	lsls	r1, r1, #2
    16ae:	5853      	ldr	r3, [r2, r1]
    16b0:	021b      	lsls	r3, r3, #8
    16b2:	0a1b      	lsrs	r3, r3, #8
    16b4:	20c0      	movs	r0, #192	; 0xc0
    16b6:	0600      	lsls	r0, r0, #24
    16b8:	4303      	orrs	r3, r0
       (((priority << (8 - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
    16ba:	5053      	str	r3, [r2, r1]

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[0] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
    16bc:	2308      	movs	r3, #8
    16be:	6013      	str	r3, [r2, #0]

	NVIC_SetPriority (RTC_IRQn, (1<<__NVIC_PRIO_BITS) - 1);
	NVIC_EnableIRQ(RTC_IRQn);
	
    16c0:	bd08      	pop	{r3, pc}
    16c2:	46c0      	nop			; (mov r8, r8)
    16c4:	2000447c 	.word	0x2000447c
    16c8:	0000e710 	.word	0x0000e710
    16cc:	00004b89 	.word	0x00004b89
    16d0:	40000c00 	.word	0x40000c00
    16d4:	00010402 	.word	0x00010402
    16d8:	00004204 	.word	0x00004204
    16dc:	40001400 	.word	0x40001400
    16e0:	fffff0ff 	.word	0xfffff0ff
    16e4:	200000c8 	.word	0x200000c8
    16e8:	e000e100 	.word	0xe000e100

000016ec <_GLOBAL__sub_I_count_set_period>:
    16ec:	b508      	push	{r3, lr}
public:
    /** Create a DigitalOut connected to the specified pin
     *
     *  @param pin DigitalOut pin to connect to
     */
    DigitalOut(PinName pin) : gpio() {
    16ee:	4807      	ldr	r0, [pc, #28]	; (170c <_GLOBAL__sub_I_count_set_period+0x20>)
    16f0:	2300      	movs	r3, #0
    16f2:	7003      	strb	r3, [r0, #0]
    16f4:	6043      	str	r3, [r0, #4]
    16f6:	7203      	strb	r3, [r0, #8]
    16f8:	7243      	strb	r3, [r0, #9]
    16fa:	7283      	strb	r3, [r0, #10]
    16fc:	60c3      	str	r3, [r0, #12]
    16fe:	6103      	str	r3, [r0, #16]
    1700:	6143      	str	r3, [r0, #20]
    1702:	6183      	str	r3, [r0, #24]
        gpio_init_out(&gpio, pin);
    1704:	2113      	movs	r1, #19
    1706:	4b02      	ldr	r3, [pc, #8]	; (1710 <_GLOBAL__sub_I_count_set_period+0x24>)
    1708:	4798      	blx	r3
    170a:	bd08      	pop	{r3, pc}
    170c:	20003d28 	.word	0x20003d28
    1710:	00004bd5 	.word	0x00004bd5

00001714 <_Z19ISRNetworkReceptionh>:
#endif
volatile circularBuffer buffer;
/************************************************************************/
/* GLOBAL FUNCTION                                                      */
/************************************************************************/
void ISRNetworkReception(uint8_t e){
    1714:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	 uint16_t rx;
	  if((e&TRX_IRQ_TRX_END)==TRX_IRQ_TRX_END){
			//pc.printf(" end \r\n");
	  }
	
	 if(e==8){
    1716:	2808      	cmp	r0, #8
    1718:	d154      	bne.n	17c4 <_Z19ISRNetworkReceptionh+0xb0>
    171a:	e04a      	b.n	17b2 <_Z19ISRNetworkReceptionh+0x9e>
			
			//Disable_global_interrupt();
			//pc.printf("mimi\r\n");
			//synchro semaphore with a task

			rx=radio.read();
    171c:	482a      	ldr	r0, [pc, #168]	; (17c8 <_Z19ISRNetworkReceptionh+0xb4>)
    171e:	4b2b      	ldr	r3, [pc, #172]	; (17cc <_Z19ISRNetworkReceptionh+0xb8>)
    1720:	4798      	blx	r3
    1722:	b287      	uxth	r7, r0
			buffer.buffer[buffer.indice]=rx;
    1724:	4b2a      	ldr	r3, [pc, #168]	; (17d0 <_Z19ISRNetworkReceptionh+0xbc>)
    1726:	2132      	movs	r1, #50	; 0x32
    1728:	5c5a      	ldrb	r2, [r3, r1]
    172a:	b2d2      	uxtb	r2, r2
    172c:	b2c0      	uxtb	r0, r0
    172e:	5498      	strb	r0, [r3, r2]
	
			buffer.indice++;
    1730:	5c5a      	ldrb	r2, [r3, r1]
    1732:	3201      	adds	r2, #1
    1734:	b2d2      	uxtb	r2, r2
    1736:	545a      	strb	r2, [r3, r1]
			if(buffer.indice>=CIRCULAR_BUFFER_LENGTH){
    1738:	5c5b      	ldrb	r3, [r3, r1]
    173a:	b2db      	uxtb	r3, r3
    173c:	2b31      	cmp	r3, #49	; 0x31
    173e:	d903      	bls.n	1748 <_Z19ISRNetworkReceptionh+0x34>
				buffer.indice=0;
    1740:	2100      	movs	r1, #0
    1742:	2332      	movs	r3, #50	; 0x32
    1744:	4a22      	ldr	r2, [pc, #136]	; (17d0 <_Z19ISRNetworkReceptionh+0xbc>)
    1746:	54d1      	strb	r1, [r2, r3]
			}

			if(rx==HEADER){
    1748:	2f55      	cmp	r7, #85	; 0x55
    174a:	d10f      	bne.n	176c <_Z19ISRNetworkReceptionh+0x58>
				if(timeProt.synchroTime!=NULL){
    174c:	4b21      	ldr	r3, [pc, #132]	; (17d4 <_Z19ISRNetworkReceptionh+0xc0>)
    174e:	6c18      	ldr	r0, [r3, #64]	; 0x40
    1750:	2800      	cmp	r0, #0
    1752:	d004      	beq.n	175e <_Z19ISRNetworkReceptionh+0x4a>
					xSemaphoreGiveFromISR(timeProt.synchroTime,NULL);
    1754:	2100      	movs	r1, #0
    1756:	2200      	movs	r2, #0
    1758:	2300      	movs	r3, #0
    175a:	4f1f      	ldr	r7, [pc, #124]	; (17d8 <_Z19ISRNetworkReceptionh+0xc4>)
    175c:	47b8      	blx	r7
				}
				timeProt.waitIdentifier=true;
    175e:	2201      	movs	r2, #1
    1760:	2330      	movs	r3, #48	; 0x30
    1762:	54ea      	strb	r2, [r5, r3]
					timeProt.saveTime[0].second=save.second;
					timeProt.saveTime[0].halfmillis=save.halfmillis;
					timeProt.saveTime[0].sign=save.sign;
		
				#else
					readClock(&timeProt.rx);
    1764:	1c30      	adds	r0, r6, #0
    1766:	4b1d      	ldr	r3, [pc, #116]	; (17dc <_Z19ISRNetworkReceptionh+0xc8>)
    1768:	4798      	blx	r3
				#endif
				continue;
    176a:	e026      	b.n	17ba <_Z19ISRNetworkReceptionh+0xa6>
				}
				continue;
			}
	
			#else
			if(timeProt.waitIdentifier==true){
    176c:	2330      	movs	r3, #48	; 0x30
    176e:	4a19      	ldr	r2, [pc, #100]	; (17d4 <_Z19ISRNetworkReceptionh+0xc0>)
    1770:	5cd3      	ldrb	r3, [r2, r3]
    1772:	2b00      	cmp	r3, #0
    1774:	d008      	beq.n	1788 <_Z19ISRNetworkReceptionh+0x74>
				timeProt.waitIdentifier=false;
    1776:	2100      	movs	r1, #0
    1778:	2330      	movs	r3, #48	; 0x30
    177a:	54d1      	strb	r1, [r2, r3]
				if(rx==0){
    177c:	2f00      	cmp	r7, #0
    177e:	d103      	bne.n	1788 <_Z19ISRNetworkReceptionh+0x74>
					timeProt.waitType=true;
    1780:	3101      	adds	r1, #1
    1782:	3301      	adds	r3, #1
    1784:	54d1      	strb	r1, [r2, r3]
    1786:	e018      	b.n	17ba <_Z19ISRNetworkReceptionh+0xa6>
				}
			}
			if(timeProt.waitType==true){
    1788:	2331      	movs	r3, #49	; 0x31
    178a:	4a12      	ldr	r2, [pc, #72]	; (17d4 <_Z19ISRNetworkReceptionh+0xc0>)
    178c:	5cd3      	ldrb	r3, [r2, r3]
    178e:	2b00      	cmp	r3, #0
    1790:	d013      	beq.n	17ba <_Z19ISRNetworkReceptionh+0xa6>
				if(rx==DELAYRESPONSE){
    1792:	2f03      	cmp	r7, #3
    1794:	d105      	bne.n	17a2 <_Z19ISRNetworkReceptionh+0x8e>
					timeProt.rxDelay.second=timeProt.rx.second;
    1796:	1c13      	adds	r3, r2, #0
    1798:	6a52      	ldr	r2, [r2, #36]	; 0x24
    179a:	619a      	str	r2, [r3, #24]
					timeProt.rxDelay.halfmillis=timeProt.rx.halfmillis;
    179c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    179e:	61da      	str	r2, [r3, #28]
    17a0:	e00b      	b.n	17ba <_Z19ISRNetworkReceptionh+0xa6>
				}
				else{
					if(rx==SYNC){
    17a2:	2f01      	cmp	r7, #1
    17a4:	d109      	bne.n	17ba <_Z19ISRNetworkReceptionh+0xa6>
						timeProt.rxSync.second=timeProt.rx.second;
    17a6:	4b0b      	ldr	r3, [pc, #44]	; (17d4 <_Z19ISRNetworkReceptionh+0xc0>)
    17a8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    17aa:	60da      	str	r2, [r3, #12]
						timeProt.rxSync.halfmillis=timeProt.rx.halfmillis;
    17ac:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    17ae:	611a      	str	r2, [r3, #16]
    17b0:	e003      	b.n	17ba <_Z19ISRNetworkReceptionh+0xa6>
	  }
	
	 if(e==8){

		#ifdef RADIO
		 while(radio.available()){
    17b2:	4c05      	ldr	r4, [pc, #20]	; (17c8 <_Z19ISRNetworkReceptionh+0xb4>)

			if(rx==HEADER){
				if(timeProt.synchroTime!=NULL){
					xSemaphoreGiveFromISR(timeProt.synchroTime,NULL);
				}
				timeProt.waitIdentifier=true;
    17b4:	4d07      	ldr	r5, [pc, #28]	; (17d4 <_Z19ISRNetworkReceptionh+0xc0>)
					timeProt.saveTime[0].second=save.second;
					timeProt.saveTime[0].halfmillis=save.halfmillis;
					timeProt.saveTime[0].sign=save.sign;
		
				#else
					readClock(&timeProt.rx);
    17b6:	1c2e      	adds	r6, r5, #0
    17b8:	3624      	adds	r6, #36	; 0x24
	  }
	
	 if(e==8){

		#ifdef RADIO
		 while(radio.available()){
    17ba:	1c20      	adds	r0, r4, #0
    17bc:	4b08      	ldr	r3, [pc, #32]	; (17e0 <_Z19ISRNetworkReceptionh+0xcc>)
    17be:	4798      	blx	r3
    17c0:	2800      	cmp	r0, #0
    17c2:	d1ab      	bne.n	171c <_Z19ISRNetworkReceptionh+0x8>
		 }
		 #endif
		 
	 }
	 
}
    17c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    17c6:	46c0      	nop			; (mov r8, r8)
    17c8:	20003d7c 	.word	0x20003d7c
    17cc:	00001cc5 	.word	0x00001cc5
    17d0:	20003d48 	.word	0x20003d48
    17d4:	20004208 	.word	0x20004208
    17d8:	00000435 	.word	0x00000435
    17dc:	00001391 	.word	0x00001391
    17e0:	00001cf9 	.word	0x00001cf9

000017e4 <_Z16networkAvailablev>:
}

bool networkAvailable(void){


	if(buffer.currentIndice!=buffer.indice){
    17e4:	4a04      	ldr	r2, [pc, #16]	; (17f8 <_Z16networkAvailablev+0x14>)
    17e6:	2333      	movs	r3, #51	; 0x33
    17e8:	5cd3      	ldrb	r3, [r2, r3]
    17ea:	2132      	movs	r1, #50	; 0x32
    17ec:	5c50      	ldrb	r0, [r2, r1]
    17ee:	1a18      	subs	r0, r3, r0
    17f0:	1e43      	subs	r3, r0, #1
    17f2:	4198      	sbcs	r0, r3
    17f4:	b2c0      	uxtb	r0, r0
	else{
			
		return false;
	}

}
    17f6:	4770      	bx	lr
    17f8:	20003d48 	.word	0x20003d48

000017fc <_Z12networkFlushv>:
void networkFlush(void){
	//usart_disable_callback(&usart_instance, USART_CALLBACK_BUFFER_RECEIVED);//momo
	buffer.currentIndice=buffer.indice;
    17fc:	4a03      	ldr	r2, [pc, #12]	; (180c <_Z12networkFlushv+0x10>)
    17fe:	2332      	movs	r3, #50	; 0x32
    1800:	5cd3      	ldrb	r3, [r2, r3]
    1802:	b2db      	uxtb	r3, r3
    1804:	2133      	movs	r1, #51	; 0x33
    1806:	5453      	strb	r3, [r2, r1]
	//usart_enable_callback(&usart_instance, USART_CALLBACK_BUFFER_RECEIVED); //momo
}
    1808:	4770      	bx	lr
    180a:	46c0      	nop			; (mov r8, r8)
    180c:	20003d48 	.word	0x20003d48

00001810 <_Z9networkTxPKhh>:
void networkTx(const uint8_t send[],const uint8_t length){
    1810:	b570      	push	{r4, r5, r6, lr}
    1812:	1c06      	adds	r6, r0, #0
    1814:	1c0d      	adds	r5, r1, #0
	#ifdef RADIO
		radio.beginTransmission();
    1816:	4c06      	ldr	r4, [pc, #24]	; (1830 <_Z9networkTxPKhh+0x20>)
    1818:	1c20      	adds	r0, r4, #0
    181a:	4b06      	ldr	r3, [pc, #24]	; (1834 <_Z9networkTxPKhh+0x24>)
    181c:	4798      	blx	r3
		radio.write((uint8_t*)send,length);
    181e:	1c20      	adds	r0, r4, #0
    1820:	1c31      	adds	r1, r6, #0
    1822:	1c2a      	adds	r2, r5, #0
    1824:	4b04      	ldr	r3, [pc, #16]	; (1838 <_Z9networkTxPKhh+0x28>)
    1826:	4798      	blx	r3
		radio.endTransmission();
    1828:	1c20      	adds	r0, r4, #0
    182a:	4b04      	ldr	r3, [pc, #16]	; (183c <_Z9networkTxPKhh+0x2c>)
    182c:	4798      	blx	r3
	#endif
}
    182e:	bd70      	pop	{r4, r5, r6, pc}
    1830:	20003d7c 	.word	0x20003d7c
    1834:	00001d19 	.word	0x00001d19
    1838:	00001f29 	.word	0x00001f29
    183c:	00001d71 	.word	0x00001d71

00001840 <_Z11networkReadv>:
uint8_t networkRead(void){
    1840:	b508      	push	{r3, lr}
	if(networkAvailable()){
    1842:	4b0d      	ldr	r3, [pc, #52]	; (1878 <_Z11networkReadv+0x38>)
    1844:	4798      	blx	r3
			buffer.currentIndice=0;
		}
		return recu; 
	}
	else{
		return 0;
    1846:	2300      	movs	r3, #0
		radio.write((uint8_t*)send,length);
		radio.endTransmission();
	#endif
}
uint8_t networkRead(void){
	if(networkAvailable()){
    1848:	2800      	cmp	r0, #0
    184a:	d013      	beq.n	1874 <_Z11networkReadv+0x34>
		uint8_t recu;
		recu=buffer.buffer[buffer.currentIndice];
    184c:	4b0b      	ldr	r3, [pc, #44]	; (187c <_Z11networkReadv+0x3c>)
    184e:	2133      	movs	r1, #51	; 0x33
    1850:	5c5a      	ldrb	r2, [r3, r1]
    1852:	b2d2      	uxtb	r2, r2
    1854:	5c98      	ldrb	r0, [r3, r2]
    1856:	b2c0      	uxtb	r0, r0
		buffer.currentIndice++;
    1858:	5c5a      	ldrb	r2, [r3, r1]
    185a:	3201      	adds	r2, #1
    185c:	b2d2      	uxtb	r2, r2
    185e:	545a      	strb	r2, [r3, r1]
		if(buffer.currentIndice>=CIRCULAR_BUFFER_LENGTH){
    1860:	5c5a      	ldrb	r2, [r3, r1]
    1862:	b2d2      	uxtb	r2, r2
			buffer.currentIndice=0;
		}
		return recu; 
    1864:	1c03      	adds	r3, r0, #0
uint8_t networkRead(void){
	if(networkAvailable()){
		uint8_t recu;
		recu=buffer.buffer[buffer.currentIndice];
		buffer.currentIndice++;
		if(buffer.currentIndice>=CIRCULAR_BUFFER_LENGTH){
    1866:	2a31      	cmp	r2, #49	; 0x31
    1868:	d904      	bls.n	1874 <_Z11networkReadv+0x34>
			buffer.currentIndice=0;
    186a:	2100      	movs	r1, #0
    186c:	2333      	movs	r3, #51	; 0x33
    186e:	4a03      	ldr	r2, [pc, #12]	; (187c <_Z11networkReadv+0x3c>)
    1870:	54d1      	strb	r1, [r2, r3]
		}
		return recu; 
    1872:	1c03      	adds	r3, r0, #0
	else{
		return 0;
	}

	
}
    1874:	1c18      	adds	r0, r3, #0
    1876:	bd08      	pop	{r3, pc}
    1878:	000017e5 	.word	0x000017e5
    187c:	20003d48 	.word	0x20003d48

00001880 <_Z20configurationNetworkv>:

void configurationNetwork(){
    1880:	b510      	push	{r4, lr}
	pc.printf("network config\r\n");
    1882:	480a      	ldr	r0, [pc, #40]	; (18ac <_Z20configurationNetworkv+0x2c>)
    1884:	490a      	ldr	r1, [pc, #40]	; (18b0 <_Z20configurationNetworkv+0x30>)
    1886:	4b0b      	ldr	r3, [pc, #44]	; (18b4 <_Z20configurationNetworkv+0x34>)
    1888:	4798      	blx	r3
	buffer.currentIndice=0;
    188a:	4b0b      	ldr	r3, [pc, #44]	; (18b8 <_Z20configurationNetworkv+0x38>)
    188c:	2200      	movs	r2, #0
    188e:	2133      	movs	r1, #51	; 0x33
    1890:	545a      	strb	r2, [r3, r1]
	buffer.indice=0;
    1892:	3901      	subs	r1, #1
    1894:	545a      	strb	r2, [r3, r1]
	#ifdef RADIO
	radio.attachIrq(ISRNetworkReception);
    1896:	4c09      	ldr	r4, [pc, #36]	; (18bc <_Z20configurationNetworkv+0x3c>)
    1898:	1c20      	adds	r0, r4, #0
    189a:	4909      	ldr	r1, [pc, #36]	; (18c0 <_Z20configurationNetworkv+0x40>)
    189c:	4b09      	ldr	r3, [pc, #36]	; (18c4 <_Z20configurationNetworkv+0x44>)
    189e:	4798      	blx	r3
    radio.begin(RADIO_CHANNEL);
    18a0:	1c20      	adds	r0, r4, #0
    18a2:	210c      	movs	r1, #12
    18a4:	4b08      	ldr	r3, [pc, #32]	; (18c8 <_Z20configurationNetworkv+0x48>)
    18a6:	4798      	blx	r3
	#endif
	

}
    18a8:	bd10      	pop	{r4, pc}
    18aa:	46c0      	nop			; (mov r8, r8)
    18ac:	2000447c 	.word	0x2000447c
    18b0:	0000e728 	.word	0x0000e728
    18b4:	00004b89 	.word	0x00004b89
    18b8:	20003d48 	.word	0x20003d48
    18bc:	20003d7c 	.word	0x20003d7c
    18c0:	00001715 	.word	0x00001715
    18c4:	00001cbd 	.word	0x00001cbd
    18c8:	00001cad 	.word	0x00001cad

000018cc <_GLOBAL__sub_I_radio>:
    18cc:	b530      	push	{r4, r5, lr}
    18ce:	b085      	sub	sp, #20
#include "network.h"
/************************************************************************/
/* GLOBAL                                                               */
/************************************************************************/
#ifdef RADIO
cMxRadio radio(PB30,PC19,PC18,PB31,PB15,PA20,PB00);
    18d0:	4c0a      	ldr	r4, [pc, #40]	; (18fc <_GLOBAL__sub_I_radio+0x30>)
    18d2:	233f      	movs	r3, #63	; 0x3f
    18d4:	9300      	str	r3, [sp, #0]
    18d6:	3b10      	subs	r3, #16
    18d8:	9301      	str	r3, [sp, #4]
    18da:	3b1b      	subs	r3, #27
    18dc:	9302      	str	r3, [sp, #8]
    18de:	330c      	adds	r3, #12
    18e0:	9303      	str	r3, [sp, #12]
    18e2:	1c20      	adds	r0, r4, #0
    18e4:	213e      	movs	r1, #62	; 0x3e
    18e6:	2253      	movs	r2, #83	; 0x53
    18e8:	3332      	adds	r3, #50	; 0x32
    18ea:	4d05      	ldr	r5, [pc, #20]	; (1900 <_GLOBAL__sub_I_radio+0x34>)
    18ec:	47a8      	blx	r5
    18ee:	1c20      	adds	r0, r4, #0
    18f0:	4904      	ldr	r1, [pc, #16]	; (1904 <_GLOBAL__sub_I_radio+0x38>)
    18f2:	4a05      	ldr	r2, [pc, #20]	; (1908 <_GLOBAL__sub_I_radio+0x3c>)
    18f4:	4b05      	ldr	r3, [pc, #20]	; (190c <_GLOBAL__sub_I_radio+0x40>)
    18f6:	4798      	blx	r3
	radio.attachIrq(ISRNetworkReception);
    radio.begin(RADIO_CHANNEL);
	#endif
	

}
    18f8:	b005      	add	sp, #20
    18fa:	bd30      	pop	{r4, r5, pc}
    18fc:	20003d7c 	.word	0x20003d7c
    1900:	00001ae9 	.word	0x00001ae9
    1904:	00001ae5 	.word	0x00001ae5
    1908:	200000b0 	.word	0x200000b0
    190c:	00006295 	.word	0x00006295

00001910 <main>:
#include <ktrap.h>
#include <internalClock.h>
#include <ppsGPS.h>
#include <network.h>

int main (void ){
    1910:	b570      	push	{r4, r5, r6, lr}
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    1912:	b672      	cpsid	i
    1914:	f3bf 8f5f 	dmb	sy
 * Disabled global interrupts in the device, preventing any enabled interrupt
 * handlers from executing.
 */
static inline void system_interrupt_disable_global(void)
{
    cpu_irq_disable();
    1918:	4c16      	ldr	r4, [pc, #88]	; (1974 <main+0x64>)
    191a:	2300      	movs	r3, #0
    191c:	7023      	strb	r3, [r4, #0]
	 system_interrupt_disable_global();
    //configure HMI
    configureHMI();
    191e:	4b16      	ldr	r3, [pc, #88]	; (1978 <main+0x68>)
    1920:	4798      	blx	r3
    //RTC configure
   configureInternalClock();
    1922:	4b16      	ldr	r3, [pc, #88]	; (197c <main+0x6c>)
    1924:	4798      	blx	r3
    //configure external intrerrupt for pps
    configurationPPS();
    1926:	4b16      	ldr	r3, [pc, #88]	; (1980 <main+0x70>)
    1928:	4798      	blx	r3
    //configure the network of the time SYNCHRONISATION
	
    configurationNetwork();
    192a:	4b16      	ldr	r3, [pc, #88]	; (1984 <main+0x74>)
    192c:	4798      	blx	r3
	
    // Initialize the demo..
    kernelConfig();
    192e:	4b16      	ldr	r3, [pc, #88]	; (1988 <main+0x78>)
    1930:	4798      	blx	r3
 *
 * Enables global interrupts in the device to fire any enabled interrupt handlers.
 */
static inline void system_interrupt_enable_global(void)
{
    cpu_irq_enable();
    1932:	2301      	movs	r3, #1
    1934:	7023      	strb	r3, [r4, #0]
    1936:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
    193a:	b662      	cpsie	i
    //demask global interrupt
    system_interrupt_enable_global();
    pc.printf("\r\n\r\n**********************************************************************\r\n");
    193c:	4d13      	ldr	r5, [pc, #76]	; (198c <main+0x7c>)
    193e:	1c28      	adds	r0, r5, #0
    1940:	4913      	ldr	r1, [pc, #76]	; (1990 <main+0x80>)
    1942:	4c14      	ldr	r4, [pc, #80]	; (1994 <main+0x84>)
    1944:	47a0      	blx	r4
    pc.printf("tick time: %lu ms\r\n",portTICK_RATE_MS);   
    1946:	1c28      	adds	r0, r5, #0
    1948:	4913      	ldr	r1, [pc, #76]	; (1998 <main+0x88>)
    194a:	2201      	movs	r2, #1
    194c:	47a0      	blx	r4
    #ifdef MASTERMODE
        pc.printf("Master clock\r\n");
    #else
        pc.printf("Slave Clock \r\n");
    194e:	1c28      	adds	r0, r5, #0
    1950:	4912      	ldr	r1, [pc, #72]	; (199c <main+0x8c>)
    1952:	47a0      	blx	r4
    #endif
    pc.printf("end config application begin\r\n");
    1954:	1c28      	adds	r0, r5, #0
    1956:	4912      	ldr	r1, [pc, #72]	; (19a0 <main+0x90>)
    1958:	47a0      	blx	r4
    printf("\r\n**********************************************************************\r\n\r\n");
    195a:	4812      	ldr	r0, [pc, #72]	; (19a4 <main+0x94>)
    195c:	4b12      	ldr	r3, [pc, #72]	; (19a8 <main+0x98>)
    195e:	4798      	blx	r3
    //start the scheduler
    vTaskStartScheduler();
    1960:	4b12      	ldr	r3, [pc, #72]	; (19ac <main+0x9c>)
    1962:	4798      	blx	r3
    while(1){//trap
		pc.printf("trap!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n");
    1964:	4e09      	ldr	r6, [pc, #36]	; (198c <main+0x7c>)
    1966:	4d12      	ldr	r5, [pc, #72]	; (19b0 <main+0xa0>)
    1968:	4c0a      	ldr	r4, [pc, #40]	; (1994 <main+0x84>)
    196a:	1c30      	adds	r0, r6, #0
    196c:	1c29      	adds	r1, r5, #0
    196e:	47a0      	blx	r4
#include <ktrap.h>
#include <internalClock.h>
#include <ppsGPS.h>
#include <network.h>

int main (void ){
    1970:	e7fb      	b.n	196a <main+0x5a>
    1972:	46c0      	nop			; (mov r8, r8)
    1974:	200000d0 	.word	0x200000d0
    1978:	000037a5 	.word	0x000037a5
    197c:	0000163d 	.word	0x0000163d
    1980:	000029f9 	.word	0x000029f9
    1984:	00001881 	.word	0x00001881
    1988:	000028e1 	.word	0x000028e1
    198c:	2000447c 	.word	0x2000447c
    1990:	0000e73c 	.word	0x0000e73c
    1994:	00004b89 	.word	0x00004b89
    1998:	0000e78c 	.word	0x0000e78c
    199c:	0000e7a0 	.word	0x0000e7a0
    19a0:	0000e7b0 	.word	0x0000e7b0
    19a4:	0000e7d0 	.word	0x0000e7d0
    19a8:	0000ae79 	.word	0x0000ae79
    19ac:	000008fd 	.word	0x000008fd
    19b0:	0000e81c 	.word	0x0000e81c

000019b4 <_ZN8cMxRadio14onReceiveFrameEhPhhah>:
 * @param frm array containing frame data
 * @param lqi link quality indicator
 * @param crc_fail boolean indicating whether the received frame failed FCS verification, not used
 */
uint8_t* cMxRadio::onReceiveFrame(uint8_t len, uint8_t* frm, uint8_t lqi, int8_t ed,uint8_t crc_fail)
{
    19b4:	b5f0      	push	{r4, r5, r6, r7, lr}
    19b6:	4657      	mov	r7, sl
    19b8:	464e      	mov	r6, r9
    19ba:	4645      	mov	r5, r8
    19bc:	b4e0      	push	{r5, r6, r7}
    19be:	b082      	sub	sp, #8
    19c0:	ac0a      	add	r4, sp, #40	; 0x28
    19c2:	2500      	movs	r5, #0
    19c4:	5765      	ldrsb	r5, [r4, r5]
    19c6:	ac0b      	add	r4, sp, #44	; 0x2c
    19c8:	7824      	ldrb	r4, [r4, #0]
	if (crc_fail)
    19ca:	2c00      	cmp	r4, #0
    19cc:	d002      	beq.n	19d4 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x20>
		return rxRingBuffer;
    19ce:	307c      	adds	r0, #124	; 0x7c
    19d0:	30ff      	adds	r0, #255	; 0xff
    19d2:	e06b      	b.n	1aac <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xf8>
	lastLqi = lqi;
    19d4:	4c38      	ldr	r4, [pc, #224]	; (1ab8 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x104>)
    19d6:	5503      	strb	r3, [r0, r4]
	//lastRssi=ed;
	if (hasAttachedRxEvent == 0)
    19d8:	4c38      	ldr	r4, [pc, #224]	; (1abc <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x108>)
    19da:	5d04      	ldrb	r4, [r0, r4]
    19dc:	2c00      	cmp	r4, #0
    19de:	d15b      	bne.n	1a98 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xe4>
	{
		// no event handler, so write it into the FIFO

		if (len >= HeadSize-1)
    19e0:	2907      	cmp	r1, #7
    19e2:	d817      	bhi.n	1a14 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x60>
		else
		{
			// frame header does not exist
			// copy everything

			for (uint8_t i = 0; i < len; i++)
    19e4:	2900      	cmp	r1, #0
    19e6:	d054      	beq.n	1a92 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xde>
			{
				uint16_t j = ((uint16_t)((uint16_t)rxRingBufferHead + 1)) % ZR_FIFO_SIZE;
    19e8:	23fc      	movs	r3, #252	; 0xfc
    19ea:	33ff      	adds	r3, #255	; 0xff
    19ec:	5cc3      	ldrb	r3, [r0, r3]
    19ee:	1c5c      	adds	r4, r3, #1
    19f0:	257f      	movs	r5, #127	; 0x7f
    19f2:	402c      	ands	r4, r5
				if (j != rxRingBufferTail)
    19f4:	357e      	adds	r5, #126	; 0x7e
    19f6:	35ff      	adds	r5, #255	; 0xff
    19f8:	5d45      	ldrb	r5, [r0, r5]
    19fa:	42a5      	cmp	r5, r4
    19fc:	d049      	beq.n	1a92 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xde>
    19fe:	1c17      	adds	r7, r2, #0
    1a00:	3901      	subs	r1, #1
    1a02:	b2c9      	uxtb	r1, r1
    1a04:	1852      	adds	r2, r2, r1
				{
					// push into FIFO
					rxRingBuffer[rxRingBufferHead] = frm[i];
					rxRingBufferHead = j;
    1a06:	21fc      	movs	r1, #252	; 0xfc
    1a08:	31ff      	adds	r1, #255	; 0xff
			// frame header does not exist
			// copy everything

			for (uint8_t i = 0; i < len; i++)
			{
				uint16_t j = ((uint16_t)((uint16_t)rxRingBufferHead + 1)) % ZR_FIFO_SIZE;
    1a0a:	257f      	movs	r5, #127	; 0x7f
    1a0c:	46ac      	mov	ip, r5
				if (j != rxRingBufferTail)
    1a0e:	26fe      	movs	r6, #254	; 0xfe
    1a10:	0076      	lsls	r6, r6, #1
    1a12:	e035      	b.n	1a80 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xcc>
		if (len >= HeadSize-1)
		{
			// frame header exists
			// copy only payload

			for (uint8_t i = HeadSize; i < len - 2; i++)
    1a14:	1e8e      	subs	r6, r1, #2
    1a16:	2e09      	cmp	r6, #9
    1a18:	dd3b      	ble.n	1a92 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xde>
			{
				uint16_t j = ((uint16_t)((uint16_t)rxRingBufferHead + 1)) % ZR_FIFO_SIZE;
    1a1a:	23fc      	movs	r3, #252	; 0xfc
    1a1c:	33ff      	adds	r3, #255	; 0xff
    1a1e:	5cc4      	ldrb	r4, [r0, r3]
    1a20:	1c63      	adds	r3, r4, #1
    1a22:	217f      	movs	r1, #127	; 0x7f
    1a24:	400b      	ands	r3, r1
				if (j != rxRingBufferTail)
    1a26:	317e      	adds	r1, #126	; 0x7e
    1a28:	31ff      	adds	r1, #255	; 0xff
    1a2a:	5c41      	ldrb	r1, [r0, r1]
    1a2c:	2509      	movs	r5, #9
    1a2e:	4299      	cmp	r1, r3
    1a30:	d10a      	bne.n	1a48 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x94>
    1a32:	e02e      	b.n	1a92 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xde>
			// frame header exists
			// copy only payload

			for (uint8_t i = HeadSize; i < len - 2; i++)
			{
				uint16_t j = ((uint16_t)((uint16_t)rxRingBufferHead + 1)) % ZR_FIFO_SIZE;
    1a34:	4647      	mov	r7, r8
    1a36:	403b      	ands	r3, r7
    1a38:	3301      	adds	r3, #1
    1a3a:	4667      	mov	r7, ip
    1a3c:	403b      	ands	r3, r7
				if (j != rxRingBufferTail)
    1a3e:	4657      	mov	r7, sl
    1a40:	5dc7      	ldrb	r7, [r0, r7]
    1a42:	429f      	cmp	r7, r3
    1a44:	d109      	bne.n	1a5a <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xa6>
    1a46:	e024      	b.n	1a92 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xde>
				{
					// push into FIFO
					rxRingBuffer[rxRingBufferHead] = frm[i];
					rxRingBufferHead = j;
    1a48:	21fc      	movs	r1, #252	; 0xfc
    1a4a:	31ff      	adds	r1, #255	; 0xff
			// frame header exists
			// copy only payload

			for (uint8_t i = HeadSize; i < len - 2; i++)
			{
				uint16_t j = ((uint16_t)((uint16_t)rxRingBufferHead + 1)) % ZR_FIFO_SIZE;
    1a4c:	27ff      	movs	r7, #255	; 0xff
    1a4e:	46b8      	mov	r8, r7
    1a50:	3f80      	subs	r7, #128	; 0x80
    1a52:	46bc      	mov	ip, r7
				if (j != rxRingBufferTail)
    1a54:	377e      	adds	r7, #126	; 0x7e
    1a56:	37ff      	adds	r7, #255	; 0xff
    1a58:	46ba      	mov	sl, r7
				{
					// push into FIFO
					rxRingBuffer[rxRingBufferHead] = frm[i];
    1a5a:	5d57      	ldrb	r7, [r2, r5]
    1a5c:	1904      	adds	r4, r0, r4
    1a5e:	3479      	adds	r4, #121	; 0x79
    1a60:	34ff      	adds	r4, #255	; 0xff
    1a62:	70e7      	strb	r7, [r4, #3]
					rxRingBufferHead = j;
    1a64:	b2dc      	uxtb	r4, r3
    1a66:	5444      	strb	r4, [r0, r1]
		if (len >= HeadSize-1)
		{
			// frame header exists
			// copy only payload

			for (uint8_t i = HeadSize; i < len - 2; i++)
    1a68:	3501      	adds	r5, #1
    1a6a:	b2ed      	uxtb	r5, r5
    1a6c:	42b5      	cmp	r5, r6
    1a6e:	dbe1      	blt.n	1a34 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x80>
    1a70:	e00f      	b.n	1a92 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xde>
			// frame header does not exist
			// copy everything

			for (uint8_t i = 0; i < len; i++)
			{
				uint16_t j = ((uint16_t)((uint16_t)rxRingBufferHead + 1)) % ZR_FIFO_SIZE;
    1a72:	3401      	adds	r4, #1
    1a74:	4665      	mov	r5, ip
    1a76:	402c      	ands	r4, r5
    1a78:	3701      	adds	r7, #1
				if (j != rxRingBufferTail)
    1a7a:	5d85      	ldrb	r5, [r0, r6]
    1a7c:	42a5      	cmp	r5, r4
    1a7e:	d008      	beq.n	1a92 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xde>
				{
					// push into FIFO
					rxRingBuffer[rxRingBufferHead] = frm[i];
    1a80:	783d      	ldrb	r5, [r7, #0]
    1a82:	18c3      	adds	r3, r0, r3
    1a84:	3379      	adds	r3, #121	; 0x79
    1a86:	33ff      	adds	r3, #255	; 0xff
    1a88:	70dd      	strb	r5, [r3, #3]
					rxRingBufferHead = j;
    1a8a:	b2e3      	uxtb	r3, r4
    1a8c:	5443      	strb	r3, [r0, r1]
		else
		{
			// frame header does not exist
			// copy everything

			for (uint8_t i = 0; i < len; i++)
    1a8e:	4297      	cmp	r7, r2
    1a90:	d1ef      	bne.n	1a72 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xbe>
					break;
				}
			}
		}

		return rxRingBuffer;
    1a92:	307c      	adds	r0, #124	; 0x7c
    1a94:	30ff      	adds	r0, #255	; 0xff
    1a96:	e009      	b.n	1aac <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xf8>
	}
	else
	{
		// user event is attached so call it
		return zrEventReceiveFrame(len, frm, lqi, ed,crc_fail);
    1a98:	2400      	movs	r4, #0
    1a9a:	9400      	str	r4, [sp, #0]
    1a9c:	24a1      	movs	r4, #161	; 0xa1
    1a9e:	00a4      	lsls	r4, r4, #2
    1aa0:	5904      	ldr	r4, [r0, r4]
    1aa2:	1c08      	adds	r0, r1, #0
    1aa4:	1c11      	adds	r1, r2, #0
    1aa6:	1c1a      	adds	r2, r3, #0
    1aa8:	1c2b      	adds	r3, r5, #0
    1aaa:	47a0      	blx	r4
	}
}
    1aac:	b002      	add	sp, #8
    1aae:	bc1c      	pop	{r2, r3, r4}
    1ab0:	4690      	mov	r8, r2
    1ab2:	4699      	mov	r9, r3
    1ab4:	46a2      	mov	sl, r4
    1ab6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1ab8:	0000027d 	.word	0x0000027d
    1abc:	0000027f 	.word	0x0000027f

00001ac0 <_ZN8cMxRadio8onTxDoneE15radio_tx_done_t>:
 * this should not be called by the user
 *
 * @param x one of the radio_tx_done_t enumerations indicating transmission success
 */
void cMxRadio::onTxDone(radio_tx_done_t x)
{
    1ac0:	b510      	push	{r4, lr}
    1ac2:	1c04      	adds	r4, r0, #0
	if (hasAttachedTxEvent)
    1ac4:	23a0      	movs	r3, #160	; 0xa0
    1ac6:	009b      	lsls	r3, r3, #2
    1ac8:	5cc3      	ldrb	r3, [r0, r3]
    1aca:	2b00      	cmp	r3, #0
    1acc:	d004      	beq.n	1ad8 <_ZN8cMxRadio8onTxDoneE15radio_tx_done_t+0x18>
	{
		zrEventTxDone(x);
    1ace:	23a2      	movs	r3, #162	; 0xa2
    1ad0:	009b      	lsls	r3, r3, #2
    1ad2:	58c3      	ldr	r3, [r0, r3]
    1ad4:	1c08      	adds	r0, r1, #0
    1ad6:	4798      	blx	r3
	}

	txIsBusy = 0;
    1ad8:	2200      	movs	r2, #0
    1ada:	4b01      	ldr	r3, [pc, #4]	; (1ae0 <_ZN8cMxRadio8onTxDoneE15radio_tx_done_t+0x20>)
    1adc:	54e2      	strb	r2, [r4, r3]
}
    1ade:	bd10      	pop	{r4, pc}
    1ae0:	00000282 	.word	0x00000282

00001ae4 <_ZN8cMxRadioD1Ev>:
volatile uint8_t txIsBusy = 0;


cMxRadio::~cMxRadio()
{
}
    1ae4:	4770      	bx	lr
    1ae6:	46c0      	nop			; (mov r8, r8)

00001ae8 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_>:
// empty constructor, should not be called by user
cMxRadio::cMxRadio(PinName mosi, PinName miso, PinName sclk, PinName cs, PinName rst, PinName slp, PinName irq)
    1ae8:	b5f0      	push	{r4, r5, r6, r7, lr}
    1aea:	4647      	mov	r7, r8
    1aec:	b480      	push	{r7}
    1aee:	b086      	sub	sp, #24
    1af0:	1c05      	adds	r5, r0, #0
    1af2:	a80c      	add	r0, sp, #48	; 0x30
    1af4:	2600      	movs	r6, #0
    1af6:	5786      	ldrsb	r6, [r0, r6]
    1af8:	a80d      	add	r0, sp, #52	; 0x34
    1afa:	2700      	movs	r7, #0
    1afc:	57c7      	ldrsb	r7, [r0, r7]
    1afe:	a80e      	add	r0, sp, #56	; 0x38
    1b00:	7800      	ldrb	r0, [r0, #0]
    1b02:	b240      	sxtb	r0, r0
    1b04:	4680      	mov	r8, r0
:m_spi(mosi, miso, sclk), m_cs(cs), reset_pin(rst), sleep_pin(slp)//,irq_pin(irq)
    1b06:	1c28      	adds	r0, r5, #0
    1b08:	3014      	adds	r0, #20
    1b0a:	2401      	movs	r4, #1
    1b0c:	4264      	negs	r4, r4
    1b0e:	9400      	str	r4, [sp, #0]
    1b10:	4c2c      	ldr	r4, [pc, #176]	; (1bc4 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xdc>)
    1b12:	47a0      	blx	r4
public:
    /** Create a DigitalOut connected to the specified pin
     *
     *  @param pin DigitalOut pin to connect to
     */
    DigitalOut(PinName pin) : gpio() {
    1b14:	2400      	movs	r4, #0
    1b16:	23a8      	movs	r3, #168	; 0xa8
    1b18:	54ec      	strb	r4, [r5, r3]
    1b1a:	1c28      	adds	r0, r5, #0
    1b1c:	30a8      	adds	r0, #168	; 0xa8
    1b1e:	6044      	str	r4, [r0, #4]
    1b20:	7204      	strb	r4, [r0, #8]
    1b22:	7244      	strb	r4, [r0, #9]
    1b24:	7284      	strb	r4, [r0, #10]
    1b26:	60c4      	str	r4, [r0, #12]
    1b28:	6104      	str	r4, [r0, #16]
    1b2a:	6144      	str	r4, [r0, #20]
    1b2c:	6184      	str	r4, [r0, #24]
        gpio_init_out(&gpio, pin);
    1b2e:	1c31      	adds	r1, r6, #0
    1b30:	4e25      	ldr	r6, [pc, #148]	; (1bc8 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xe0>)
    1b32:	47b0      	blx	r6
public:
    /** Create a DigitalOut connected to the specified pin
     *
     *  @param pin DigitalOut pin to connect to
     */
    DigitalOut(PinName pin) : gpio() {
    1b34:	23c4      	movs	r3, #196	; 0xc4
    1b36:	54ec      	strb	r4, [r5, r3]
    1b38:	1c28      	adds	r0, r5, #0
    1b3a:	30c4      	adds	r0, #196	; 0xc4
    1b3c:	6044      	str	r4, [r0, #4]
    1b3e:	7204      	strb	r4, [r0, #8]
    1b40:	7244      	strb	r4, [r0, #9]
    1b42:	7284      	strb	r4, [r0, #10]
    1b44:	60c4      	str	r4, [r0, #12]
    1b46:	6104      	str	r4, [r0, #16]
    1b48:	6144      	str	r4, [r0, #20]
    1b4a:	6184      	str	r4, [r0, #24]
        gpio_init_out(&gpio, pin);
    1b4c:	1c39      	adds	r1, r7, #0
    1b4e:	47b0      	blx	r6
public:
    /** Create a DigitalOut connected to the specified pin
     *
     *  @param pin DigitalOut pin to connect to
     */
    DigitalOut(PinName pin) : gpio() {
    1b50:	23e0      	movs	r3, #224	; 0xe0
    1b52:	54ec      	strb	r4, [r5, r3]
    1b54:	1c28      	adds	r0, r5, #0
    1b56:	30e0      	adds	r0, #224	; 0xe0
    1b58:	6044      	str	r4, [r0, #4]
    1b5a:	7204      	strb	r4, [r0, #8]
    1b5c:	7244      	strb	r4, [r0, #9]
    1b5e:	7284      	strb	r4, [r0, #10]
    1b60:	60c4      	str	r4, [r0, #12]
    1b62:	6104      	str	r4, [r0, #16]
    1b64:	6144      	str	r4, [r0, #20]
    1b66:	6184      	str	r4, [r0, #24]
        gpio_init_out(&gpio, pin);
    1b68:	4641      	mov	r1, r8
    1b6a:	47b0      	blx	r6
{
	// default event handlers
	
	zrEventTxDone=0;
    1b6c:	23a2      	movs	r3, #162	; 0xa2
    1b6e:	009b      	lsls	r3, r3, #2
    1b70:	50ec      	str	r4, [r5, r3]
	zrEventReceiveFrame=0;
    1b72:	3b04      	subs	r3, #4
    1b74:	50ec      	str	r4, [r5, r3]
	temprssi=0;
    1b76:	702c      	strb	r4, [r5, #0]
	setautotx=false;
    1b78:	3308      	adds	r3, #8
    1b7a:	54ec      	strb	r4, [r5, r3]
	setautorx=false;
    1b7c:	4b13      	ldr	r3, [pc, #76]	; (1bcc <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xe4>)
    1b7e:	54ec      	strb	r4, [r5, r3]
	needack=false;
    1b80:	4b13      	ldr	r3, [pc, #76]	; (1bd0 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xe8>)
    1b82:	54ec      	strb	r4, [r5, r3]
	usedBeginTransmission = 0;
    1b84:	4b13      	ldr	r3, [pc, #76]	; (1bd4 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xec>)
    1b86:	54ec      	strb	r4, [r5, r3]
	hasAttachedTxEvent = 0;
    1b88:	3b01      	subs	r3, #1
    1b8a:	54ec      	strb	r4, [r5, r3]
	hasAttachedRxEvent = 0;
    1b8c:	4b12      	ldr	r3, [pc, #72]	; (1bd8 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xf0>)
    1b8e:	54ec      	strb	r4, [r5, r3]
	lastLqi = 0;
    1b90:	4b12      	ldr	r3, [pc, #72]	; (1bdc <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xf4>)
    1b92:	54ec      	strb	r4, [r5, r3]
	lastRssi = 0;
    1b94:	4b12      	ldr	r3, [pc, #72]	; (1be0 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xf8>)
    1b96:	54ec      	strb	r4, [r5, r3]
	txTmpBufferLength = 0;
    1b98:	3b02      	subs	r3, #2
    1b9a:	54ec      	strb	r4, [r5, r3]
	rxRingBufferHead = 0;
    1b9c:	23fc      	movs	r3, #252	; 0xfc
    1b9e:	33ff      	adds	r3, #255	; 0xff
    1ba0:	54ec      	strb	r4, [r5, r3]
	rxRingBufferTail = 0;
    1ba2:	3301      	adds	r3, #1
    1ba4:	54ec      	strb	r4, [r5, r3]
	user_radio_tx_done=0;
	user_radio_receive_frame=0;
	user_radio_irq=0;
	user_radio_error=0;
	*/
	zr_attach_receive_frame(&cMxRadio::onReceiveFrame);
    1ba6:	1c28      	adds	r0, r5, #0
    1ba8:	490e      	ldr	r1, [pc, #56]	; (1be4 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xfc>)
    1baa:	2200      	movs	r2, #0
    1bac:	4b0e      	ldr	r3, [pc, #56]	; (1be8 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0x100>)
    1bae:	4798      	blx	r3
	zr_attach_tx_done(&cMxRadio::onTxDone);
    1bb0:	1c28      	adds	r0, r5, #0
    1bb2:	490e      	ldr	r1, [pc, #56]	; (1bec <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0x104>)
    1bb4:	2200      	movs	r2, #0
    1bb6:	4b0e      	ldr	r3, [pc, #56]	; (1bf0 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0x108>)
    1bb8:	4798      	blx	r3

}
    1bba:	1c28      	adds	r0, r5, #0
    1bbc:	b006      	add	sp, #24
    1bbe:	bc04      	pop	{r2}
    1bc0:	4690      	mov	r8, r2
    1bc2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1bc4:	000047e1 	.word	0x000047e1
    1bc8:	00004bd5 	.word	0x00004bd5
    1bcc:	0000028d 	.word	0x0000028d
    1bd0:	0000028e 	.word	0x0000028e
    1bd4:	00000281 	.word	0x00000281
    1bd8:	0000027f 	.word	0x0000027f
    1bdc:	0000027d 	.word	0x0000027d
    1be0:	0000027e 	.word	0x0000027e
    1be4:	000019b5 	.word	0x000019b5
    1be8:	00001f51 	.word	0x00001f51
    1bec:	00001ac1 	.word	0x00001ac1
    1bf0:	00001f69 	.word	0x00001f69

00001bf4 <_ZN8cMxRadio5beginEaPh>:
 *
 * @param chan channel number for the radio to use, 11 to 26
 * @param frameHeader HeadSize byte custom frame header
 */
void cMxRadio::begin(channel_t chan, uint8_t* frameHeader)
{
    1bf4:	b570      	push	{r4, r5, r6, lr}
    1bf6:	1c06      	adds	r6, r0, #0
    1bf8:	1c0d      	adds	r5, r1, #0
    1bfa:	1c14      	adds	r4, r2, #0
	radio_init(rxFrameBuffer, MAX_FRAME_SIZE);
    1bfc:	1c01      	adds	r1, r0, #0
    1bfe:	31fc      	adds	r1, #252	; 0xfc
    1c00:	227f      	movs	r2, #127	; 0x7f
    1c02:	4b20      	ldr	r3, [pc, #128]	; (1c84 <_ZN8cMxRadio5beginEaPh+0x90>)
    1c04:	4798      	blx	r3

	if (frameHeader)
    1c06:	2c00      	cmp	r4, #0
    1c08:	d00c      	beq.n	1c24 <_ZN8cMxRadio5beginEaPh+0x30>
    1c0a:	1c22      	adds	r2, r4, #0
    1c0c:	1c33      	adds	r3, r6, #0
    1c0e:	33fe      	adds	r3, #254	; 0xfe
    1c10:	33ff      	adds	r3, #255	; 0xff
    1c12:	491d      	ldr	r1, [pc, #116]	; (1c88 <_ZN8cMxRadio5beginEaPh+0x94>)
    1c14:	1870      	adds	r0, r6, r1
	{
		// copy custom frame header
		int i;
		for (i = 0; i < HeadSize; i++)
			txTmpBuffer[i] = frameHeader[i];
    1c16:	7811      	ldrb	r1, [r2, #0]
    1c18:	7019      	strb	r1, [r3, #0]
    1c1a:	3201      	adds	r2, #1
    1c1c:	3301      	adds	r3, #1

	if (frameHeader)
	{
		// copy custom frame header
		int i;
		for (i = 0; i < HeadSize; i++)
    1c1e:	4283      	cmp	r3, r0
    1c20:	d1f9      	bne.n	1c16 <_ZN8cMxRadio5beginEaPh+0x22>
    1c22:	e01b      	b.n	1c5c <_ZN8cMxRadio5beginEaPh+0x68>
			txTmpBuffer[i] = frameHeader[i];
	}
	else
	{
		txTmpBuffer[0] = 0x41;
    1c24:	2241      	movs	r2, #65	; 0x41
    1c26:	23fe      	movs	r3, #254	; 0xfe
    1c28:	33ff      	adds	r3, #255	; 0xff
    1c2a:	54f2      	strb	r2, [r6, r3]
		txTmpBuffer[1] = 0x88;
    1c2c:	3247      	adds	r2, #71	; 0x47
    1c2e:	3301      	adds	r3, #1
    1c30:	54f2      	strb	r2, [r6, r3]
		txTmpBuffer[2] =  0;
    1c32:	2300      	movs	r3, #0
    1c34:	4a15      	ldr	r2, [pc, #84]	; (1c8c <_ZN8cMxRadio5beginEaPh+0x98>)
    1c36:	54b3      	strb	r3, [r6, r2]
		txTmpBuffer[3]=0xCD;
    1c38:	21cd      	movs	r1, #205	; 0xcd
    1c3a:	3201      	adds	r2, #1
    1c3c:	54b1      	strb	r1, [r6, r2]
		txTmpBuffer[4]=0xAB;
    1c3e:	3922      	subs	r1, #34	; 0x22
    1c40:	4a13      	ldr	r2, [pc, #76]	; (1c90 <_ZN8cMxRadio5beginEaPh+0x9c>)
    1c42:	54b1      	strb	r1, [r6, r2]
		txTmpBuffer[5] = 0xFF; //dest address low byte
    1c44:	3a03      	subs	r2, #3
    1c46:	3aff      	subs	r2, #255	; 0xff
    1c48:	4912      	ldr	r1, [pc, #72]	; (1c94 <_ZN8cMxRadio5beginEaPh+0xa0>)
    1c4a:	5472      	strb	r2, [r6, r1]
		txTmpBuffer[6] = 0xFF; //dest address hight byte
    1c4c:	4912      	ldr	r1, [pc, #72]	; (1c98 <_ZN8cMxRadio5beginEaPh+0xa4>)
    1c4e:	5472      	strb	r2, [r6, r1]
		txTmpBuffer[7] = 0x01;;
    1c50:	2101      	movs	r1, #1
    1c52:	3206      	adds	r2, #6
    1c54:	32ff      	adds	r2, #255	; 0xff
    1c56:	54b1      	strb	r1, [r6, r2]
		txTmpBuffer[8] = 0x00;;
    1c58:	4a10      	ldr	r2, [pc, #64]	; (1c9c <_ZN8cMxRadio5beginEaPh+0xa8>)
    1c5a:	54b3      	strb	r3, [r6, r2]
 */
typedef union radio_param_t
{
#if defined __cplusplus
public:
    radio_param_t(int8_t c) { channel = c; } /* also used for txpwr_t */
    1c5c:	b2ea      	uxtb	r2, r5
	}

	// set the channel
	radio_set_param(RP_CHANNEL(chan));
    1c5e:	1c30      	adds	r0, r6, #0
    1c60:	2100      	movs	r1, #0
    1c62:	4b0f      	ldr	r3, [pc, #60]	; (1ca0 <_ZN8cMxRadio5beginEaPh+0xac>)
    1c64:	4798      	blx	r3

	// default to receiver
	if (setautorx)
    1c66:	4b0f      	ldr	r3, [pc, #60]	; (1ca4 <_ZN8cMxRadio5beginEaPh+0xb0>)
    1c68:	5cf3      	ldrb	r3, [r6, r3]
    1c6a:	2b00      	cmp	r3, #0
    1c6c:	d004      	beq.n	1c78 <_ZN8cMxRadio5beginEaPh+0x84>
		radio_set_state(STATE_RXAUTO);
    1c6e:	1c30      	adds	r0, r6, #0
    1c70:	2104      	movs	r1, #4
    1c72:	4b0d      	ldr	r3, [pc, #52]	; (1ca8 <_ZN8cMxRadio5beginEaPh+0xb4>)
    1c74:	4798      	blx	r3
    1c76:	e003      	b.n	1c80 <_ZN8cMxRadio5beginEaPh+0x8c>
	else
		radio_set_state(STATE_RX);
    1c78:	1c30      	adds	r0, r6, #0
    1c7a:	2102      	movs	r1, #2
    1c7c:	4b0a      	ldr	r3, [pc, #40]	; (1ca8 <_ZN8cMxRadio5beginEaPh+0xb4>)
    1c7e:	4798      	blx	r3

#ifdef ENABLE_DIG3_DIG4
	trx_bit_write(SR_PA_EXT_EN, 1);
#endif

}
    1c80:	bd70      	pop	{r4, r5, r6, pc}
    1c82:	46c0      	nop			; (mov r8, r8)
    1c84:	00002085 	.word	0x00002085
    1c88:	00000206 	.word	0x00000206
    1c8c:	000001ff 	.word	0x000001ff
    1c90:	00000201 	.word	0x00000201
    1c94:	00000202 	.word	0x00000202
    1c98:	00000203 	.word	0x00000203
    1c9c:	00000205 	.word	0x00000205
    1ca0:	000023c5 	.word	0x000023c5
    1ca4:	0000028d 	.word	0x0000028d
    1ca8:	00002175 	.word	0x00002175

00001cac <_ZN8cMxRadio5beginEa>:
 * Then it sets the channel number and defaults to RX state.
 *
 * @param chan the channel number for the radio to use, 11 to 26
 */
void cMxRadio::begin(channel_t chan)
{
    1cac:	b508      	push	{r3, lr}
	begin(chan, 0);
    1cae:	2200      	movs	r2, #0
    1cb0:	4b01      	ldr	r3, [pc, #4]	; (1cb8 <_ZN8cMxRadio5beginEa+0xc>)
    1cb2:	4798      	blx	r3
}
    1cb4:	bd08      	pop	{r3, pc}
    1cb6:	46c0      	nop			; (mov r8, r8)
    1cb8:	00001bf5 	.word	0x00001bf5

00001cbc <_ZN8cMxRadio9attachIrqEPFvhE>:
 *
 * @param funct the function pointer to the event handler
 */
void cMxRadio::attachIrq(void (*funct)(uint8_t))
{
	user_radio_irq = funct;
    1cbc:	23a5      	movs	r3, #165	; 0xa5
    1cbe:	009b      	lsls	r3, r3, #2
    1cc0:	50c1      	str	r1, [r0, r3]
}
    1cc2:	4770      	bx	lr

00001cc4 <_ZN8cMxRadio4readEv>:
 * @return the next byte, or -1 if buffer is empty
 */
int16_t cMxRadio::read()
{
	// if the head isn't ahead of the tail, we don't have any characters
	if (rxRingBufferHead == rxRingBufferTail)
    1cc4:	23fe      	movs	r3, #254	; 0xfe
    1cc6:	005b      	lsls	r3, r3, #1
    1cc8:	5cc3      	ldrb	r3, [r0, r3]
    1cca:	22fc      	movs	r2, #252	; 0xfc
    1ccc:	32ff      	adds	r2, #255	; 0xff
    1cce:	5c82      	ldrb	r2, [r0, r2]
    1cd0:	429a      	cmp	r2, r3
    1cd2:	d00b      	beq.n	1cec <_ZN8cMxRadio4readEv+0x28>
	{
		return -1;
	}
	else
	{
		uint8_t c = rxRingBuffer[rxRingBufferTail];
    1cd4:	18c2      	adds	r2, r0, r3
    1cd6:	3279      	adds	r2, #121	; 0x79
    1cd8:	32ff      	adds	r2, #255	; 0xff
    1cda:	78d2      	ldrb	r2, [r2, #3]
		rxRingBufferTail = (rxRingBufferTail + 1) % ZR_FIFO_SIZE; // pop
    1cdc:	3301      	adds	r3, #1
    1cde:	217f      	movs	r1, #127	; 0x7f
    1ce0:	400b      	ands	r3, r1
    1ce2:	317e      	adds	r1, #126	; 0x7e
    1ce4:	31ff      	adds	r1, #255	; 0xff
    1ce6:	5443      	strb	r3, [r0, r1]
		return c;
    1ce8:	b290      	uxth	r0, r2
    1cea:	e000      	b.n	1cee <_ZN8cMxRadio4readEv+0x2a>
int16_t cMxRadio::read()
{
	// if the head isn't ahead of the tail, we don't have any characters
	if (rxRingBufferHead == rxRingBufferTail)
	{
		return -1;
    1cec:	4801      	ldr	r0, [pc, #4]	; (1cf4 <_ZN8cMxRadio4readEv+0x30>)
    1cee:	b200      	sxth	r0, r0
	{
		uint8_t c = rxRingBuffer[rxRingBufferTail];
		rxRingBufferTail = (rxRingBufferTail + 1) % ZR_FIFO_SIZE; // pop
		return c;
	}
}
    1cf0:	4770      	bx	lr
    1cf2:	46c0      	nop			; (mov r8, r8)
    1cf4:	0000ffff 	.word	0x0000ffff

00001cf8 <_ZN8cMxRadio9availableEv>:
 *
 * @return how many bytes are in the RX FIFO ring buffer
 */
int8_t cMxRadio::available()
{
	return ((int16_t)((int16_t)ZR_FIFO_SIZE + (int16_t)rxRingBufferHead - (int16_t)rxRingBufferTail)) % ZR_FIFO_SIZE;
    1cf8:	23fc      	movs	r3, #252	; 0xfc
    1cfa:	33ff      	adds	r3, #255	; 0xff
    1cfc:	5cc3      	ldrb	r3, [r0, r3]
    1cfe:	3380      	adds	r3, #128	; 0x80
    1d00:	22fe      	movs	r2, #254	; 0xfe
    1d02:	0052      	lsls	r2, r2, #1
    1d04:	5c80      	ldrb	r0, [r0, r2]
    1d06:	1a1b      	subs	r3, r3, r0
    1d08:	17d8      	asrs	r0, r3, #31
    1d0a:	0e42      	lsrs	r2, r0, #25
    1d0c:	189b      	adds	r3, r3, r2
    1d0e:	207f      	movs	r0, #127	; 0x7f
    1d10:	4003      	ands	r3, r0
    1d12:	1a98      	subs	r0, r3, r2
    1d14:	b240      	sxtb	r0, r0
}
    1d16:	4770      	bx	lr

00001d18 <_ZN8cMxRadio17beginTransmissionEv>:
 * Non-immediate mode sends multiple bytes per frame
 *
 */
void cMxRadio::beginTransmission()
{
	usedBeginTransmission = 1;
    1d18:	2201      	movs	r2, #1
    1d1a:	4b07      	ldr	r3, [pc, #28]	; (1d38 <_ZN8cMxRadio17beginTransmissionEv+0x20>)
    1d1c:	54c2      	strb	r2, [r0, r3]
	txTmpBuffer[5]= 0xFF;
    1d1e:	3b83      	subs	r3, #131	; 0x83
    1d20:	3bff      	subs	r3, #255	; 0xff
    1d22:	4a06      	ldr	r2, [pc, #24]	; (1d3c <_ZN8cMxRadio17beginTransmissionEv+0x24>)
    1d24:	5483      	strb	r3, [r0, r2]
	txTmpBuffer[6]= 0XFF;
    1d26:	4a06      	ldr	r2, [pc, #24]	; (1d40 <_ZN8cMxRadio17beginTransmissionEv+0x28>)
    1d28:	5483      	strb	r3, [r0, r2]
	// add frame header
	txTmpBufferLength = HeadSize;
    1d2a:	3afb      	subs	r2, #251	; 0xfb
    1d2c:	3aff      	subs	r2, #255	; 0xff
    1d2e:	337e      	adds	r3, #126	; 0x7e
    1d30:	33ff      	adds	r3, #255	; 0xff
    1d32:	54c2      	strb	r2, [r0, r3]
}
    1d34:	4770      	bx	lr
    1d36:	46c0      	nop			; (mov r8, r8)
    1d38:	00000281 	.word	0x00000281
    1d3c:	00000202 	.word	0x00000202
    1d40:	00000203 	.word	0x00000203

00001d44 <_ZN8cMxRadio10waitTxDoneEt>:
 * waits until the last transmission is complete, or timed out
 *
 * @param timeout iterations to countdown before timeout
 */
void cMxRadio::waitTxDone(uint16_t timeout)
{
    1d44:	b510      	push	{r4, lr}
    1d46:	b082      	sub	sp, #8
	volatile uint16_t cnt = timeout;
    1d48:	466b      	mov	r3, sp
    1d4a:	80d9      	strh	r1, [r3, #6]
	while (txIsBusy && cnt--);
    1d4c:	4c07      	ldr	r4, [pc, #28]	; (1d6c <_ZN8cMxRadio10waitTxDoneEt+0x28>)
    1d4e:	466b      	mov	r3, sp
    1d50:	1d99      	adds	r1, r3, #6
    1d52:	5d03      	ldrb	r3, [r0, r4]
    1d54:	2b00      	cmp	r3, #0
    1d56:	d006      	beq.n	1d66 <_ZN8cMxRadio10waitTxDoneEt+0x22>
    1d58:	880b      	ldrh	r3, [r1, #0]
    1d5a:	b29b      	uxth	r3, r3
    1d5c:	1e5a      	subs	r2, r3, #1
    1d5e:	b292      	uxth	r2, r2
    1d60:	800a      	strh	r2, [r1, #0]
    1d62:	2b00      	cmp	r3, #0
    1d64:	d1f5      	bne.n	1d52 <_ZN8cMxRadio10waitTxDoneEt+0xe>
}
    1d66:	b002      	add	sp, #8
    1d68:	bd10      	pop	{r4, pc}
    1d6a:	46c0      	nop			; (mov r8, r8)
    1d6c:	00000282 	.word	0x00000282

00001d70 <_ZN8cMxRadio15endTransmissionEv>:
 *
 * Finalize the payload and transmits it when ready
 *
 */
void cMxRadio::endTransmission()
{
    1d70:	b538      	push	{r3, r4, r5, lr}
    1d72:	1c04      	adds	r4, r0, #0
	usedBeginTransmission = 0;
    1d74:	2200      	movs	r2, #0
    1d76:	4b28      	ldr	r3, [pc, #160]	; (1e18 <_ZN8cMxRadio15endTransmissionEv+0xa8>)
    1d78:	54c2      	strb	r2, [r0, r3]

	// empty FCS field
	txTmpBufferLength += 2;
    1d7a:	229f      	movs	r2, #159	; 0x9f
    1d7c:	0092      	lsls	r2, r2, #2
    1d7e:	5c83      	ldrb	r3, [r0, r2]
    1d80:	3302      	adds	r3, #2
    1d82:	5483      	strb	r3, [r0, r2]

#ifdef ZR_TXWAIT_BEFORE
	waitTxDone(0xFFFF);
    1d84:	4925      	ldr	r1, [pc, #148]	; (1e1c <_ZN8cMxRadio15endTransmissionEv+0xac>)
    1d86:	4b26      	ldr	r3, [pc, #152]	; (1e20 <_ZN8cMxRadio15endTransmissionEv+0xb0>)
    1d88:	4798      	blx	r3
#endif
	txIsBusy = 1;
    1d8a:	2201      	movs	r2, #1
    1d8c:	4b25      	ldr	r3, [pc, #148]	; (1e24 <_ZN8cMxRadio15endTransmissionEv+0xb4>)
    1d8e:	54e2      	strb	r2, [r4, r3]
	if (setautotx)
    1d90:	330a      	adds	r3, #10
    1d92:	5ce3      	ldrb	r3, [r4, r3]
    1d94:	2b00      	cmp	r3, #0
    1d96:	d004      	beq.n	1da2 <_ZN8cMxRadio15endTransmissionEv+0x32>
		radio_set_state(STATE_TXAUTO);
    1d98:	1c20      	adds	r0, r4, #0
    1d9a:	2103      	movs	r1, #3
    1d9c:	4b22      	ldr	r3, [pc, #136]	; (1e28 <_ZN8cMxRadio15endTransmissionEv+0xb8>)
    1d9e:	4798      	blx	r3
    1da0:	e003      	b.n	1daa <_ZN8cMxRadio15endTransmissionEv+0x3a>
	else
		radio_set_state(STATE_TX);
    1da2:	1c20      	adds	r0, r4, #0
    1da4:	2101      	movs	r1, #1
    1da6:	4b20      	ldr	r3, [pc, #128]	; (1e28 <_ZN8cMxRadio15endTransmissionEv+0xb8>)
    1da8:	4798      	blx	r3
	ZR_RFTX_LED_ON();
	//if broadcase ,cant need ack
	if(txTmpBuffer[5]==0xff && txTmpBuffer[5]==0xff)
    1daa:	4b20      	ldr	r3, [pc, #128]	; (1e2c <_ZN8cMxRadio15endTransmissionEv+0xbc>)
    1dac:	5ce3      	ldrb	r3, [r4, r3]
    1dae:	2bff      	cmp	r3, #255	; 0xff
    1db0:	d106      	bne.n	1dc0 <_ZN8cMxRadio15endTransmissionEv+0x50>
		txTmpBuffer[0]=txTmpBuffer[0]&0xdf;
    1db2:	22fe      	movs	r2, #254	; 0xfe
    1db4:	32ff      	adds	r2, #255	; 0xff
    1db6:	5ca3      	ldrb	r3, [r4, r2]
    1db8:	2120      	movs	r1, #32
    1dba:	438b      	bics	r3, r1
    1dbc:	54a3      	strb	r3, [r4, r2]
    1dbe:	e00c      	b.n	1dda <_ZN8cMxRadio15endTransmissionEv+0x6a>
	else
	{
		if(!needack)
    1dc0:	4b1b      	ldr	r3, [pc, #108]	; (1e30 <_ZN8cMxRadio15endTransmissionEv+0xc0>)
    1dc2:	5ce3      	ldrb	r3, [r4, r3]
    1dc4:	2b00      	cmp	r3, #0
    1dc6:	d104      	bne.n	1dd2 <_ZN8cMxRadio15endTransmissionEv+0x62>
			txTmpBuffer[0] = 0x41;
    1dc8:	2241      	movs	r2, #65	; 0x41
    1dca:	23fe      	movs	r3, #254	; 0xfe
    1dcc:	33ff      	adds	r3, #255	; 0xff
    1dce:	54e2      	strb	r2, [r4, r3]
    1dd0:	e003      	b.n	1dda <_ZN8cMxRadio15endTransmissionEv+0x6a>
		else
			txTmpBuffer[0] = 0x61; //ack required
    1dd2:	2261      	movs	r2, #97	; 0x61
    1dd4:	23fe      	movs	r3, #254	; 0xfe
    1dd6:	33ff      	adds	r3, #255	; 0xff
    1dd8:	54e2      	strb	r2, [r4, r3]
	}
	radio_send_frame(txTmpBufferLength, txTmpBuffer, 0);
    1dda:	239f      	movs	r3, #159	; 0x9f
    1ddc:	009b      	lsls	r3, r3, #2
    1dde:	5ce1      	ldrb	r1, [r4, r3]
    1de0:	1c20      	adds	r0, r4, #0
    1de2:	1c22      	adds	r2, r4, #0
    1de4:	32fe      	adds	r2, #254	; 0xfe
    1de6:	32ff      	adds	r2, #255	; 0xff
    1de8:	2300      	movs	r3, #0
    1dea:	4d12      	ldr	r5, [pc, #72]	; (1e34 <_ZN8cMxRadio15endTransmissionEv+0xc4>)
    1dec:	47a8      	blx	r5
#ifdef ZR_TXWAIT_AFTER
	waitTxDone(0xFFFF);
    1dee:	1c20      	adds	r0, r4, #0
    1df0:	490a      	ldr	r1, [pc, #40]	; (1e1c <_ZN8cMxRadio15endTransmissionEv+0xac>)
    1df2:	4b0b      	ldr	r3, [pc, #44]	; (1e20 <_ZN8cMxRadio15endTransmissionEv+0xb0>)
    1df4:	4798      	blx	r3
	if (setautorx)
    1df6:	4b10      	ldr	r3, [pc, #64]	; (1e38 <_ZN8cMxRadio15endTransmissionEv+0xc8>)
    1df8:	5ce3      	ldrb	r3, [r4, r3]
    1dfa:	2b00      	cmp	r3, #0
    1dfc:	d004      	beq.n	1e08 <_ZN8cMxRadio15endTransmissionEv+0x98>
		radio_set_state(STATE_RXAUTO);
    1dfe:	1c20      	adds	r0, r4, #0
    1e00:	2104      	movs	r1, #4
    1e02:	4b09      	ldr	r3, [pc, #36]	; (1e28 <_ZN8cMxRadio15endTransmissionEv+0xb8>)
    1e04:	4798      	blx	r3
    1e06:	e003      	b.n	1e10 <_ZN8cMxRadio15endTransmissionEv+0xa0>
	else
		radio_set_state(STATE_RX);
    1e08:	1c20      	adds	r0, r4, #0
    1e0a:	2102      	movs	r1, #2
    1e0c:	4b06      	ldr	r3, [pc, #24]	; (1e28 <_ZN8cMxRadio15endTransmissionEv+0xb8>)
    1e0e:	4798      	blx	r3
	txIsBusy = 0;
    1e10:	2200      	movs	r2, #0
    1e12:	4b04      	ldr	r3, [pc, #16]	; (1e24 <_ZN8cMxRadio15endTransmissionEv+0xb4>)
    1e14:	54e2      	strb	r2, [r4, r3]
#endif
}
    1e16:	bd38      	pop	{r3, r4, r5, pc}
    1e18:	00000281 	.word	0x00000281
    1e1c:	0000ffff 	.word	0x0000ffff
    1e20:	00001d45 	.word	0x00001d45
    1e24:	00000282 	.word	0x00000282
    1e28:	00002175 	.word	0x00002175
    1e2c:	00000202 	.word	0x00000202
    1e30:	0000028e 	.word	0x0000028e
    1e34:	000024c9 	.word	0x000024c9
    1e38:	0000028d 	.word	0x0000028d

00001e3c <_ZN8cMxRadio5writeEh>:
 * If "beginTrasmission" was not used, then it transmits the single byte immediately (slower for multiple bytes)
 *
 * @param c character to be sent
 */
void cMxRadio::write(uint8_t c)
{
    1e3c:	b538      	push	{r3, r4, r5, lr}
    1e3e:	1c04      	adds	r4, r0, #0
	if (usedBeginTransmission)
    1e40:	4b2d      	ldr	r3, [pc, #180]	; (1ef8 <_ZN8cMxRadio5writeEh+0xbc>)
    1e42:	5cc3      	ldrb	r3, [r0, r3]
    1e44:	2b00      	cmp	r3, #0
    1e46:	d020      	beq.n	1e8a <_ZN8cMxRadio5writeEh+0x4e>
	{
		if (txTmpBufferLength < ZR_TXTMPBUFF_SIZE - 2)
    1e48:	239f      	movs	r3, #159	; 0x9f
    1e4a:	009b      	lsls	r3, r3, #2
    1e4c:	5cc3      	ldrb	r3, [r0, r3]
    1e4e:	2b7c      	cmp	r3, #124	; 0x7c
    1e50:	d851      	bhi.n	1ef6 <_ZN8cMxRadio5writeEh+0xba>
		{
			txTmpBuffer[txTmpBufferLength] = c;
    1e52:	18c2      	adds	r2, r0, r3
    1e54:	32f9      	adds	r2, #249	; 0xf9
    1e56:	32ff      	adds	r2, #255	; 0xff
    1e58:	7151      	strb	r1, [r2, #5]
			txTmpBufferLength++;
    1e5a:	3301      	adds	r3, #1
    1e5c:	b2db      	uxtb	r3, r3
    1e5e:	229f      	movs	r2, #159	; 0x9f
    1e60:	0092      	lsls	r2, r2, #2
    1e62:	5483      	strb	r3, [r0, r2]

			if (txTmpBufferLength >= ZR_TXTMPBUFF_SIZE - 2)
    1e64:	2b7c      	cmp	r3, #124	; 0x7c
    1e66:	d946      	bls.n	1ef6 <_ZN8cMxRadio5writeEh+0xba>
			{
				// buffer is now full
				// just send it all out so we have more room
				endTransmission();
    1e68:	4b24      	ldr	r3, [pc, #144]	; (1efc <_ZN8cMxRadio5writeEh+0xc0>)
    1e6a:	4798      	blx	r3
 * Non-immediate mode sends multiple bytes per frame
 *
 */
void cMxRadio::beginTransmission()
{
	usedBeginTransmission = 1;
    1e6c:	2201      	movs	r2, #1
    1e6e:	4b22      	ldr	r3, [pc, #136]	; (1ef8 <_ZN8cMxRadio5writeEh+0xbc>)
    1e70:	54e2      	strb	r2, [r4, r3]
	txTmpBuffer[5]= 0xFF;
    1e72:	3b83      	subs	r3, #131	; 0x83
    1e74:	3bff      	subs	r3, #255	; 0xff
    1e76:	4a22      	ldr	r2, [pc, #136]	; (1f00 <_ZN8cMxRadio5writeEh+0xc4>)
    1e78:	54a3      	strb	r3, [r4, r2]
	txTmpBuffer[6]= 0XFF;
    1e7a:	4a22      	ldr	r2, [pc, #136]	; (1f04 <_ZN8cMxRadio5writeEh+0xc8>)
    1e7c:	54a3      	strb	r3, [r4, r2]
	// add frame header
	txTmpBufferLength = HeadSize;
    1e7e:	3afb      	subs	r2, #251	; 0xfb
    1e80:	3aff      	subs	r2, #255	; 0xff
    1e82:	337e      	adds	r3, #126	; 0x7e
    1e84:	33ff      	adds	r3, #255	; 0xff
    1e86:	54e2      	strb	r2, [r4, r3]
    1e88:	e035      	b.n	1ef6 <_ZN8cMxRadio5writeEh+0xba>
			}
		}
	}
	else
	{
		txTmpBuffer[HeadSize] = c; // set payload
    1e8a:	4b1f      	ldr	r3, [pc, #124]	; (1f08 <_ZN8cMxRadio5writeEh+0xcc>)
    1e8c:	54c1      	strb	r1, [r0, r3]
		txTmpBuffer[HeadSize+1] = 0; // empty FCS
    1e8e:	2300      	movs	r3, #0
    1e90:	4a1e      	ldr	r2, [pc, #120]	; (1f0c <_ZN8cMxRadio5writeEh+0xd0>)
    1e92:	5483      	strb	r3, [r0, r2]
		txTmpBuffer[HeadSize+2] = 0; // empty FCS
    1e94:	3201      	adds	r2, #1
    1e96:	5483      	strb	r3, [r0, r2]

#ifdef ZR_TXWAIT_BEFORE
		waitTxDone(0xFFFF);
    1e98:	491d      	ldr	r1, [pc, #116]	; (1f10 <_ZN8cMxRadio5writeEh+0xd4>)
    1e9a:	4b1e      	ldr	r3, [pc, #120]	; (1f14 <_ZN8cMxRadio5writeEh+0xd8>)
    1e9c:	4798      	blx	r3
#endif
		txIsBusy = 1;
    1e9e:	2201      	movs	r2, #1
    1ea0:	4b1d      	ldr	r3, [pc, #116]	; (1f18 <_ZN8cMxRadio5writeEh+0xdc>)
    1ea2:	54e2      	strb	r2, [r4, r3]
		if (setautotx)
    1ea4:	330a      	adds	r3, #10
    1ea6:	5ce3      	ldrb	r3, [r4, r3]
    1ea8:	2b00      	cmp	r3, #0
    1eaa:	d004      	beq.n	1eb6 <_ZN8cMxRadio5writeEh+0x7a>
			radio_set_state(STATE_TXAUTO);
    1eac:	1c20      	adds	r0, r4, #0
    1eae:	2103      	movs	r1, #3
    1eb0:	4b1a      	ldr	r3, [pc, #104]	; (1f1c <_ZN8cMxRadio5writeEh+0xe0>)
    1eb2:	4798      	blx	r3
    1eb4:	e003      	b.n	1ebe <_ZN8cMxRadio5writeEh+0x82>
		else
			radio_set_state(STATE_TX);
    1eb6:	1c20      	adds	r0, r4, #0
    1eb8:	2101      	movs	r1, #1
    1eba:	4b18      	ldr	r3, [pc, #96]	; (1f1c <_ZN8cMxRadio5writeEh+0xe0>)
    1ebc:	4798      	blx	r3
		ZR_RFTX_LED_ON();
		radio_send_frame(10, txTmpBuffer, 0);
    1ebe:	1c20      	adds	r0, r4, #0
    1ec0:	210a      	movs	r1, #10
    1ec2:	1c22      	adds	r2, r4, #0
    1ec4:	32fe      	adds	r2, #254	; 0xfe
    1ec6:	32ff      	adds	r2, #255	; 0xff
    1ec8:	2300      	movs	r3, #0
    1eca:	4d15      	ldr	r5, [pc, #84]	; (1f20 <_ZN8cMxRadio5writeEh+0xe4>)
    1ecc:	47a8      	blx	r5
#ifdef ZR_TXWAIT_AFTER
		waitTxDone(0xFFFF);
    1ece:	1c20      	adds	r0, r4, #0
    1ed0:	490f      	ldr	r1, [pc, #60]	; (1f10 <_ZN8cMxRadio5writeEh+0xd4>)
    1ed2:	4b10      	ldr	r3, [pc, #64]	; (1f14 <_ZN8cMxRadio5writeEh+0xd8>)
    1ed4:	4798      	blx	r3
		if (setautorx)
    1ed6:	4b13      	ldr	r3, [pc, #76]	; (1f24 <_ZN8cMxRadio5writeEh+0xe8>)
    1ed8:	5ce3      	ldrb	r3, [r4, r3]
    1eda:	2b00      	cmp	r3, #0
    1edc:	d004      	beq.n	1ee8 <_ZN8cMxRadio5writeEh+0xac>
			radio_set_state(STATE_RXAUTO);
    1ede:	1c20      	adds	r0, r4, #0
    1ee0:	2104      	movs	r1, #4
    1ee2:	4b0e      	ldr	r3, [pc, #56]	; (1f1c <_ZN8cMxRadio5writeEh+0xe0>)
    1ee4:	4798      	blx	r3
    1ee6:	e003      	b.n	1ef0 <_ZN8cMxRadio5writeEh+0xb4>
		else
			radio_set_state(STATE_RX);
    1ee8:	1c20      	adds	r0, r4, #0
    1eea:	2102      	movs	r1, #2
    1eec:	4b0b      	ldr	r3, [pc, #44]	; (1f1c <_ZN8cMxRadio5writeEh+0xe0>)
    1eee:	4798      	blx	r3
		txIsBusy = 0;
    1ef0:	2200      	movs	r2, #0
    1ef2:	4b09      	ldr	r3, [pc, #36]	; (1f18 <_ZN8cMxRadio5writeEh+0xdc>)
    1ef4:	54e2      	strb	r2, [r4, r3]
#endif
	}
}
    1ef6:	bd38      	pop	{r3, r4, r5, pc}
    1ef8:	00000281 	.word	0x00000281
    1efc:	00001d71 	.word	0x00001d71
    1f00:	00000202 	.word	0x00000202
    1f04:	00000203 	.word	0x00000203
    1f08:	00000206 	.word	0x00000206
    1f0c:	00000207 	.word	0x00000207
    1f10:	0000ffff 	.word	0x0000ffff
    1f14:	00001d45 	.word	0x00001d45
    1f18:	00000282 	.word	0x00000282
    1f1c:	00002175 	.word	0x00002175
    1f20:	000024c9 	.word	0x000024c9
    1f24:	0000028d 	.word	0x0000028d

00001f28 <_ZN8cMxRadio5writeEPhh>:
 *
 * @param arr data array to be sent
 * @param len length of data array
 */
void cMxRadio::write(uint8_t* arr, uint8_t len)
{
    1f28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint8_t i;
	for (i = 0; i < len; i++)
    1f2a:	2a00      	cmp	r2, #0
    1f2c:	d00c      	beq.n	1f48 <_ZN8cMxRadio5writeEPhh+0x20>
    1f2e:	1c06      	adds	r6, r0, #0
    1f30:	1c0c      	adds	r4, r1, #0
    1f32:	1e55      	subs	r5, r2, #1
    1f34:	b2ed      	uxtb	r5, r5
    1f36:	3501      	adds	r5, #1
    1f38:	194d      	adds	r5, r1, r5
		write(arr[i]);
    1f3a:	4f04      	ldr	r7, [pc, #16]	; (1f4c <_ZN8cMxRadio5writeEPhh+0x24>)
    1f3c:	7821      	ldrb	r1, [r4, #0]
    1f3e:	1c30      	adds	r0, r6, #0
    1f40:	47b8      	blx	r7
    1f42:	3401      	adds	r4, #1
 * @param len length of data array
 */
void cMxRadio::write(uint8_t* arr, uint8_t len)
{
	uint8_t i;
	for (i = 0; i < len; i++)
    1f44:	42ac      	cmp	r4, r5
    1f46:	d1f9      	bne.n	1f3c <_ZN8cMxRadio5writeEPhh+0x14>
		write(arr[i]);
}
    1f48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1f4a:	46c0      	nop			; (mov r8, r8)
    1f4c:	00001e3d 	.word	0x00001e3d

00001f50 <_ZN8cMxRadio23zr_attach_receive_frameEMS_FPhhS0_hahE>:
{
	user_radio_irq = funct;
}

void cMxRadio::zr_attach_receive_frame(uint8_t* (cMxRadio::*funct)(uint8_t, uint8_t*, uint8_t, int8_t, uint8_t))
{
    1f50:	b082      	sub	sp, #8
    1f52:	466b      	mov	r3, sp
    1f54:	9100      	str	r1, [sp, #0]
    1f56:	9201      	str	r2, [sp, #4]
	user_radio_receive_frame = funct;
    1f58:	22a6      	movs	r2, #166	; 0xa6
    1f5a:	0092      	lsls	r2, r2, #2
    1f5c:	4694      	mov	ip, r2
    1f5e:	4460      	add	r0, ip
    1f60:	cb06      	ldmia	r3!, {r1, r2}
    1f62:	c006      	stmia	r0!, {r1, r2}
}
    1f64:	b002      	add	sp, #8
    1f66:	4770      	bx	lr

00001f68 <_ZN8cMxRadio17zr_attach_tx_doneEMS_Fv15radio_tx_done_tE>:

void cMxRadio::zr_attach_tx_done(void (cMxRadio::*funct)(radio_tx_done_t))
{
    1f68:	b082      	sub	sp, #8
    1f6a:	466b      	mov	r3, sp
    1f6c:	9100      	str	r1, [sp, #0]
    1f6e:	9201      	str	r2, [sp, #4]
	user_radio_tx_done = funct;
    1f70:	22a8      	movs	r2, #168	; 0xa8
    1f72:	0092      	lsls	r2, r2, #2
    1f74:	4694      	mov	ip, r2
    1f76:	4460      	add	r0, ip
    1f78:	cb06      	ldmia	r3!, {r1, r2}
    1f7a:	c006      	stmia	r0!, {r1, r2}
}
    1f7c:	b002      	add	sp, #8
    1f7e:	4770      	bx	lr

00001f80 <_ZN8cMxRadio15usr_radio_errorE13radio_error_t>:
void cMxRadio::usr_radio_error(radio_error_t err)
{
    1f80:	b508      	push	{r3, lr}
	if (user_radio_error) user_radio_error(err);
    1f82:	23a4      	movs	r3, #164	; 0xa4
    1f84:	009b      	lsls	r3, r3, #2
    1f86:	58c3      	ldr	r3, [r0, r3]
    1f88:	2b00      	cmp	r3, #0
    1f8a:	d001      	beq.n	1f90 <_ZN8cMxRadio15usr_radio_errorE13radio_error_t+0x10>
    1f8c:	1c08      	adds	r0, r1, #0
    1f8e:	4798      	blx	r3
}
    1f90:	bd08      	pop	{r3, pc}
    1f92:	46c0      	nop			; (mov r8, r8)

00001f94 <_ZN8cMxRadio13usr_radio_irqEh>:

void cMxRadio::usr_radio_irq(uint8_t cause)
{
    1f94:	b508      	push	{r3, lr}
	if (user_radio_irq) user_radio_irq(cause);
    1f96:	23a5      	movs	r3, #165	; 0xa5
    1f98:	009b      	lsls	r3, r3, #2
    1f9a:	58c3      	ldr	r3, [r0, r3]
    1f9c:	2b00      	cmp	r3, #0
    1f9e:	d001      	beq.n	1fa4 <_ZN8cMxRadio13usr_radio_irqEh+0x10>
    1fa0:	1c08      	adds	r0, r1, #0
    1fa2:	4798      	blx	r3
}
    1fa4:	bd08      	pop	{r3, pc}
    1fa6:	46c0      	nop			; (mov r8, r8)

00001fa8 <_ZN8cMxRadio23usr_radio_receive_frameEhPhhah>:

uint8_t* cMxRadio::usr_radio_receive_frame(uint8_t len, uint8_t *frm, uint8_t lqi, int8_t ed,uint8_t crc_fail)
{
    1fa8:	b5f0      	push	{r4, r5, r6, r7, lr}
    1faa:	b085      	sub	sp, #20
    1fac:	9303      	str	r3, [sp, #12]
    1fae:	ac0a      	add	r4, sp, #40	; 0x28
    1fb0:	2700      	movs	r7, #0
    1fb2:	57e7      	ldrsb	r7, [r4, r7]
    1fb4:	ac0b      	add	r4, sp, #44	; 0x2c
    1fb6:	7826      	ldrb	r6, [r4, #0]
	if (user_radio_receive_frame)
    1fb8:	24a6      	movs	r4, #166	; 0xa6
    1fba:	00a4      	lsls	r4, r4, #2
    1fbc:	5905      	ldr	r5, [r0, r4]
    1fbe:	2d00      	cmp	r5, #0
    1fc0:	d105      	bne.n	1fce <_ZN8cMxRadio23usr_radio_receive_frameEhPhhah+0x26>
    1fc2:	3404      	adds	r4, #4
    1fc4:	5904      	ldr	r4, [r0, r4]
    1fc6:	07e3      	lsls	r3, r4, #31
    1fc8:	d406      	bmi.n	1fd8 <_ZN8cMxRadio23usr_radio_receive_frameEhPhhah+0x30>
		return (this->*user_radio_receive_frame)(len, frm, lqi,ed, crc_fail);
	else return frm;
    1fca:	1c10      	adds	r0, r2, #0
    1fcc:	e00d      	b.n	1fea <_ZN8cMxRadio23usr_radio_receive_frameEhPhhah+0x42>
}

uint8_t* cMxRadio::usr_radio_receive_frame(uint8_t len, uint8_t *frm, uint8_t lqi, int8_t ed,uint8_t crc_fail)
{
	if (user_radio_receive_frame)
		return (this->*user_radio_receive_frame)(len, frm, lqi,ed, crc_fail);
    1fce:	24a7      	movs	r4, #167	; 0xa7
    1fd0:	00a4      	lsls	r4, r4, #2
    1fd2:	5904      	ldr	r4, [r0, r4]
    1fd4:	07e3      	lsls	r3, r4, #31
    1fd6:	d502      	bpl.n	1fde <_ZN8cMxRadio23usr_radio_receive_frameEhPhhah+0x36>
    1fd8:	1063      	asrs	r3, r4, #1
    1fda:	58c3      	ldr	r3, [r0, r3]
    1fdc:	595d      	ldr	r5, [r3, r5]
    1fde:	9b03      	ldr	r3, [sp, #12]
    1fe0:	1064      	asrs	r4, r4, #1
    1fe2:	1900      	adds	r0, r0, r4
    1fe4:	9700      	str	r7, [sp, #0]
    1fe6:	9601      	str	r6, [sp, #4]
    1fe8:	47a8      	blx	r5
	else return frm;
}
    1fea:	b005      	add	sp, #20
    1fec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1fee:	46c0      	nop			; (mov r8, r8)

00001ff0 <_ZN8cMxRadio17usr_radio_tx_doneE15radio_tx_done_t>:

void cMxRadio::usr_radio_tx_done(radio_tx_done_t status)
{
    1ff0:	b510      	push	{r4, lr}
	if (user_radio_tx_done) (this->*user_radio_tx_done)(status);
    1ff2:	23a8      	movs	r3, #168	; 0xa8
    1ff4:	009b      	lsls	r3, r3, #2
    1ff6:	58c2      	ldr	r2, [r0, r3]
    1ff8:	2a00      	cmp	r2, #0
    1ffa:	d104      	bne.n	2006 <STACK_SIZE+0x6>
    1ffc:	3304      	adds	r3, #4
    1ffe:	58c3      	ldr	r3, [r0, r3]
    2000:	07dc      	lsls	r4, r3, #31
    2002:	d405      	bmi.n	2010 <STACK_SIZE+0x10>
    2004:	e00a      	b.n	201c <STACK_SIZE+0x1c>
    2006:	23a9      	movs	r3, #169	; 0xa9
    2008:	009b      	lsls	r3, r3, #2
    200a:	58c3      	ldr	r3, [r0, r3]
    200c:	07dc      	lsls	r4, r3, #31
    200e:	d502      	bpl.n	2016 <STACK_SIZE+0x16>
    2010:	105c      	asrs	r4, r3, #1
    2012:	5904      	ldr	r4, [r0, r4]
    2014:	58a2      	ldr	r2, [r4, r2]
    2016:	105b      	asrs	r3, r3, #1
    2018:	18c0      	adds	r0, r0, r3
    201a:	4790      	blx	r2
}
    201c:	bd10      	pop	{r4, pc}
    201e:	46c0      	nop			; (mov r8, r8)

00002020 <_ZN8cMxRadio19radio_receive_frameEv>:
/**
 * @brief Frame reception
 *
 */
void cMxRadio::radio_receive_frame(void)
{
    2020:	b5f0      	push	{r4, r5, r6, r7, lr}
    2022:	b087      	sub	sp, #28
    2024:	1c04      	adds	r4, r0, #0

	uint8_t len, lqi, crc_fail;
	int8_t ed;

	/* @todo add RSSI_BASE_VALUE to get a dBm value */
	ed = (int8_t)trx_reg_read(RG_PHY_ED_LEVEL);
    2026:	2107      	movs	r1, #7
    2028:	4b12      	ldr	r3, [pc, #72]	; (2074 <_ZN8cMxRadio19radio_receive_frameEv+0x54>)
    202a:	4798      	blx	r3
    202c:	9003      	str	r0, [sp, #12]
	len = trx_frame_read(radiostatus.rxframe, radiostatus.rxframesz, &lqi);
    202e:	7c22      	ldrb	r2, [r4, #16]
    2030:	270f      	movs	r7, #15
    2032:	ab02      	add	r3, sp, #8
    2034:	469c      	mov	ip, r3
    2036:	4467      	add	r7, ip
    2038:	1c20      	adds	r0, r4, #0
    203a:	68e1      	ldr	r1, [r4, #12]
    203c:	1c3b      	adds	r3, r7, #0
    203e:	4d0e      	ldr	r5, [pc, #56]	; (2078 <_ZN8cMxRadio19radio_receive_frameEv+0x58>)
    2040:	47a8      	blx	r5
    2042:	1c05      	adds	r5, r0, #0
	len &= ~0x80;

#if defined(SR_RX_CRC_VALID)
	crc_fail = trx_bit_read(SR_RX_CRC_VALID) ? 0 : 1;
    2044:	1c20      	adds	r0, r4, #0
    2046:	2106      	movs	r1, #6
    2048:	2280      	movs	r2, #128	; 0x80
    204a:	2307      	movs	r3, #7
    204c:	4e0b      	ldr	r6, [pc, #44]	; (207c <_ZN8cMxRadio19radio_receive_frameEv+0x5c>)
    204e:	47b0      	blx	r6
		crc = CRC_CCITT_UPDATE(crc, *frm++);
	}
	crc_fail = (crc == 0)? 0: 1;
#endif
radiostatus.rxframe = usr_radio_receive_frame(len, radiostatus.rxframe,
		lqi, ed, crc_fail);
    2050:	217f      	movs	r1, #127	; 0x7f
    2052:	4029      	ands	r1, r5
    2054:	783b      	ldrb	r3, [r7, #0]
    2056:	466a      	mov	r2, sp
    2058:	260c      	movs	r6, #12
    205a:	5796      	ldrsb	r6, [r2, r6]
    205c:	9600      	str	r6, [sp, #0]
	ed = (int8_t)trx_reg_read(RG_PHY_ED_LEVEL);
	len = trx_frame_read(radiostatus.rxframe, radiostatus.rxframesz, &lqi);
	len &= ~0x80;

#if defined(SR_RX_CRC_VALID)
	crc_fail = trx_bit_read(SR_RX_CRC_VALID) ? 0 : 1;
    205e:	4242      	negs	r2, r0
    2060:	4142      	adcs	r2, r0
		crc = CRC_CCITT_UPDATE(crc, *frm++);
	}
	crc_fail = (crc == 0)? 0: 1;
#endif
radiostatus.rxframe = usr_radio_receive_frame(len, radiostatus.rxframe,
		lqi, ed, crc_fail);
    2062:	9201      	str	r2, [sp, #4]
    2064:	1c20      	adds	r0, r4, #0
    2066:	68e2      	ldr	r2, [r4, #12]
    2068:	4d05      	ldr	r5, [pc, #20]	; (2080 <_ZN8cMxRadio19radio_receive_frameEv+0x60>)
    206a:	47a8      	blx	r5
    206c:	60e0      	str	r0, [r4, #12]
}
    206e:	b007      	add	sp, #28
    2070:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2072:	46c0      	nop			; (mov r8, r8)
    2074:	000026a5 	.word	0x000026a5
    2078:	000027e5 	.word	0x000027e5
    207c:	00002711 	.word	0x00002711
    2080:	00001fa9 	.word	0x00001fa9

00002084 <_ZN8cMxRadio10radio_initEPhh>:


/* === external functions ====================================================*/

void cMxRadio::radio_init(uint8_t * rxbuf, uint8_t rxbufsz)
{
    2084:	b530      	push	{r4, r5, lr}
    2086:	b083      	sub	sp, #12
    2088:	1c04      	adds	r4, r0, #0
	trx_regval_t status;
	/* init cpu peripherals and global IRQ enable */
	radiostatus.rxframe = rxbuf;
    208a:	60c1      	str	r1, [r0, #12]
	radiostatus.rxframesz = rxbufsz;
    208c:	7402      	strb	r2, [r0, #16]
	trx_io_init(1000000);
    208e:	492f      	ldr	r1, [pc, #188]	; (214c <_ZN8cMxRadio10radio_initEPhh+0xc8>)
    2090:	4b2f      	ldr	r3, [pc, #188]	; (2150 <_ZN8cMxRadio10radio_initEPhh+0xcc>)
    2092:	4798      	blx	r3
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    2094:	23c4      	movs	r3, #196	; 0xc4
    2096:	56e3      	ldrsb	r3, [r4, r3]
    2098:	3301      	adds	r3, #1
    209a:	d104      	bne.n	20a6 <_ZN8cMxRadio10radio_initEPhh+0x22>
    209c:	482d      	ldr	r0, [pc, #180]	; (2154 <_ZN8cMxRadio10radio_initEPhh+0xd0>)
    209e:	492e      	ldr	r1, [pc, #184]	; (2158 <_ZN8cMxRadio10radio_initEPhh+0xd4>)
    20a0:	2228      	movs	r2, #40	; 0x28
    20a2:	4b2e      	ldr	r3, [pc, #184]	; (215c <_ZN8cMxRadio10radio_initEPhh+0xd8>)
    20a4:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    20a6:	1c23      	adds	r3, r4, #0
    20a8:	33c4      	adds	r3, #196	; 0xc4
    20aa:	68da      	ldr	r2, [r3, #12]
    20ac:	685b      	ldr	r3, [r3, #4]
    20ae:	6013      	str	r3, [r2, #0]
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    20b0:	23e0      	movs	r3, #224	; 0xe0
    20b2:	56e3      	ldrsb	r3, [r4, r3]
    20b4:	3301      	adds	r3, #1
    20b6:	d104      	bne.n	20c2 <_ZN8cMxRadio10radio_initEPhh+0x3e>
    20b8:	4826      	ldr	r0, [pc, #152]	; (2154 <_ZN8cMxRadio10radio_initEPhh+0xd0>)
    20ba:	4927      	ldr	r1, [pc, #156]	; (2158 <_ZN8cMxRadio10radio_initEPhh+0xd4>)
    20bc:	2228      	movs	r2, #40	; 0x28
    20be:	4b27      	ldr	r3, [pc, #156]	; (215c <_ZN8cMxRadio10radio_initEPhh+0xd8>)
    20c0:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    20c2:	1c23      	adds	r3, r4, #0
    20c4:	33e0      	adds	r3, #224	; 0xe0
    20c6:	68da      	ldr	r2, [r3, #12]
    20c8:	685b      	ldr	r3, [r3, #4]
    20ca:	6013      	str	r3, [r2, #0]
	/* transceiver initialization */

	reset_pin=0;//TRX_RESET_LOW();
	sleep_pin=0;//TRX_SLPTR_LOW();
	DELAY_US(TRX_RESET_TIME_US);
    20cc:	2006      	movs	r0, #6
    20ce:	4b24      	ldr	r3, [pc, #144]	; (2160 <_ZN8cMxRadio10radio_initEPhh+0xdc>)
    20d0:	4798      	blx	r3
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    20d2:	23c4      	movs	r3, #196	; 0xc4
    20d4:	56e3      	ldrsb	r3, [r4, r3]
    20d6:	3301      	adds	r3, #1
    20d8:	d104      	bne.n	20e4 <_ZN8cMxRadio10radio_initEPhh+0x60>
    20da:	481e      	ldr	r0, [pc, #120]	; (2154 <_ZN8cMxRadio10radio_initEPhh+0xd0>)
    20dc:	491e      	ldr	r1, [pc, #120]	; (2158 <_ZN8cMxRadio10radio_initEPhh+0xd4>)
    20de:	2228      	movs	r2, #40	; 0x28
    20e0:	4b1e      	ldr	r3, [pc, #120]	; (215c <_ZN8cMxRadio10radio_initEPhh+0xd8>)
    20e2:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    20e4:	1c23      	adds	r3, r4, #0
    20e6:	33c4      	adds	r3, #196	; 0xc4
    20e8:	691a      	ldr	r2, [r3, #16]
    20ea:	685b      	ldr	r3, [r3, #4]
    20ec:	6013      	str	r3, [r2, #0]


//	if (trx_reg_read(RG_MAN_ID_0)==31) //atmel
//		m_myled=0;
	/* disable IRQ and clear any pending IRQs */
	trx_reg_write(RG_IRQ_MASK, 0);
    20ee:	1c20      	adds	r0, r4, #0
    20f0:	210e      	movs	r1, #14
    20f2:	2200      	movs	r2, #0
    20f4:	4b1b      	ldr	r3, [pc, #108]	; (2164 <_ZN8cMxRadio10radio_initEPhh+0xe0>)
    20f6:	4798      	blx	r3

	trx_reg_read(RG_IRQ_STATUS);
    20f8:	1c20      	adds	r0, r4, #0
    20fa:	210f      	movs	r1, #15
    20fc:	4b1a      	ldr	r3, [pc, #104]	; (2168 <_ZN8cMxRadio10radio_initEPhh+0xe4>)
    20fe:	4798      	blx	r3
	DELAY_US(510);
#endif
	trx_reg_write(RG_TRX_STATE, CMD_FORCE_TRX_OFF);
	DELAY_US(510);
#else
	trx_bit_write(SR_TRX_CMD, CMD_TRX_OFF);
    2100:	2308      	movs	r3, #8
    2102:	9300      	str	r3, [sp, #0]
    2104:	1c20      	adds	r0, r4, #0
    2106:	2102      	movs	r1, #2
    2108:	221f      	movs	r2, #31
    210a:	2300      	movs	r3, #0
    210c:	4d17      	ldr	r5, [pc, #92]	; (216c <_ZN8cMxRadio10radio_initEPhh+0xe8>)
    210e:	47a8      	blx	r5
	DELAY_US(510);
    2110:	20ff      	movs	r0, #255	; 0xff
    2112:	0040      	lsls	r0, r0, #1
    2114:	4b12      	ldr	r3, [pc, #72]	; (2160 <_ZN8cMxRadio10radio_initEPhh+0xdc>)
    2116:	4798      	blx	r3
#endif

	do
	{
		status = trx_bit_read(SR_TRX_STATUS);
    2118:	4d15      	ldr	r5, [pc, #84]	; (2170 <_ZN8cMxRadio10radio_initEPhh+0xec>)
    211a:	1c20      	adds	r0, r4, #0
    211c:	2101      	movs	r1, #1
    211e:	221f      	movs	r2, #31
    2120:	2300      	movs	r3, #0
    2122:	47a8      	blx	r5
#else
	trx_bit_write(SR_TRX_CMD, CMD_TRX_OFF);
	DELAY_US(510);
#endif

	do
    2124:	2808      	cmp	r0, #8
    2126:	d1f8      	bne.n	211a <_ZN8cMxRadio10radio_initEPhh+0x96>
	{
		status = trx_bit_read(SR_TRX_STATUS);
	}
	while (status != TRX_OFF);
	trx_bit_write(SR_TX_AUTO_CRC_ON, 1);
    2128:	2301      	movs	r3, #1
    212a:	9300      	str	r3, [sp, #0]
    212c:	1c20      	adds	r0, r4, #0
    212e:	2104      	movs	r1, #4
    2130:	2220      	movs	r2, #32
    2132:	3304      	adds	r3, #4
    2134:	4d0d      	ldr	r5, [pc, #52]	; (216c <_ZN8cMxRadio10radio_initEPhh+0xe8>)
    2136:	47a8      	blx	r5
	trx_reg_write(RG_IRQ_MASK, TRX_IRQ_RX_START | TRX_IRQ_TRX_END);
    2138:	1c20      	adds	r0, r4, #0
    213a:	210e      	movs	r1, #14
    213c:	220c      	movs	r2, #12
    213e:	4b09      	ldr	r3, [pc, #36]	; (2164 <_ZN8cMxRadio10radio_initEPhh+0xe0>)
    2140:	4798      	blx	r3

	radiostatus.state = STATE_OFF;
    2142:	2300      	movs	r3, #0
    2144:	71e3      	strb	r3, [r4, #7]
	radiostatus.idle_state = STATE_OFF;
    2146:	7223      	strb	r3, [r4, #8]
}
    2148:	b003      	add	sp, #12
    214a:	bd30      	pop	{r4, r5, pc}
    214c:	000f4240 	.word	0x000f4240
    2150:	0000259d 	.word	0x0000259d
    2154:	0000e6ac 	.word	0x0000e6ac
    2158:	0000e6c4 	.word	0x0000e6c4
    215c:	00004bb1 	.word	0x00004bb1
    2160:	00004c91 	.word	0x00004c91
    2164:	0000263d 	.word	0x0000263d
    2168:	000026a5 	.word	0x000026a5
    216c:	00002729 	.word	0x00002729
    2170:	00002711 	.word	0x00002711

00002174 <_ZN8cMxRadio15radio_set_stateEh>:
	trx_bit_write(SR_TRX_CMD, CMD_FORCE_TRX_OFF);
	radio_set_state(state);
}

void cMxRadio::radio_set_state(volatile radio_state_t state)
{
    2174:	b5f0      	push	{r4, r5, r6, r7, lr}
    2176:	464f      	mov	r7, r9
    2178:	b480      	push	{r7}
    217a:	b086      	sub	sp, #24
    217c:	9002      	str	r0, [sp, #8]
    217e:	230f      	movs	r3, #15
    2180:	446b      	add	r3, sp
    2182:	7019      	strb	r1, [r3, #0]
	volatile trx_regval_t cmd, expstatus, currstatus;
	uint8_t retries;
	bool do_sleep = false;

	switch(state)
    2184:	781b      	ldrb	r3, [r3, #0]
    2186:	b2db      	uxtb	r3, r3
    2188:	2b05      	cmp	r3, #5
    218a:	d83b      	bhi.n	2204 <_ZN8cMxRadio15radio_set_stateEh+0x90>
    218c:	009b      	lsls	r3, r3, #2
    218e:	4a65      	ldr	r2, [pc, #404]	; (2324 <_ZN8cMxRadio15radio_set_stateEh+0x1b0>)
    2190:	58d3      	ldr	r3, [r2, r3]
    2192:	469f      	mov	pc, r3
		TRX_TX_PA_DI();
#endif
#ifdef TRX_RX_LNA_EI
		TRX_RX_LNA_DI();
#endif
		expstatus = TRX_OFF;
    2194:	2308      	movs	r3, #8
    2196:	2216      	movs	r2, #22
    2198:	446a      	add	r2, sp
    219a:	7013      	strb	r3, [r2, #0]
		cmd = CMD_TRX_OFF;
    219c:	2215      	movs	r2, #21
    219e:	446a      	add	r2, sp
    21a0:	7013      	strb	r3, [r2, #0]
		break;
    21a2:	e0b4      	b.n	230e <_ZN8cMxRadio15radio_set_stateEh+0x19a>
		if (radiostatus.rx_lna)
		{
			TRX_RX_LNA_EI();
		}
#endif
expstatus = RX_ON;
    21a4:	2306      	movs	r3, #6
    21a6:	2216      	movs	r2, #22
    21a8:	446a      	add	r2, sp
    21aa:	7013      	strb	r3, [r2, #0]
cmd = CMD_RX_ON;
    21ac:	2215      	movs	r2, #21
    21ae:	446a      	add	r2, sp
    21b0:	7013      	strb	r3, [r2, #0]
break;
    21b2:	e0ac      	b.n	230e <_ZN8cMxRadio15radio_set_stateEh+0x19a>

	case STATE_TX:
		expstatus = PLL_ON;
    21b4:	2309      	movs	r3, #9
    21b6:	2216      	movs	r2, #22
    21b8:	446a      	add	r2, sp
    21ba:	7013      	strb	r3, [r2, #0]
		cmd = CMD_PLL_ON;
    21bc:	2215      	movs	r2, #21
    21be:	446a      	add	r2, sp
    21c0:	7013      	strb	r3, [r2, #0]
		break;
    21c2:	e0a4      	b.n	230e <_ZN8cMxRadio15radio_set_stateEh+0x19a>
if (radiostatus.rx_lna)
{
	TRX_RX_LNA_EI();
}
#endif
expstatus = RX_AACK_ON;
    21c4:	2316      	movs	r3, #22
    21c6:	2216      	movs	r2, #22
    21c8:	446a      	add	r2, sp
    21ca:	7013      	strb	r3, [r2, #0]
cmd = CMD_RX_AACK_ON;
    21cc:	2215      	movs	r2, #21
    21ce:	446a      	add	r2, sp
    21d0:	7013      	strb	r3, [r2, #0]
break;
    21d2:	e09c      	b.n	230e <_ZN8cMxRadio15radio_set_stateEh+0x19a>

	case STATE_TXAUTO:
		expstatus = TX_ARET_ON;
    21d4:	2319      	movs	r3, #25
    21d6:	2216      	movs	r2, #22
    21d8:	446a      	add	r2, sp
    21da:	7013      	strb	r3, [r2, #0]
		cmd = CMD_TX_ARET_ON;
    21dc:	2215      	movs	r2, #21
    21de:	446a      	add	r2, sp
    21e0:	7013      	strb	r3, [r2, #0]
		break;
    21e2:	e094      	b.n	230e <_ZN8cMxRadio15radio_set_stateEh+0x19a>
		TRX_TX_PA_DI();
#endif
#ifdef TRX_RX_LNA_EI
		TRX_RX_LNA_DI();
#endif
		expstatus = TRX_OFF;
    21e4:	2208      	movs	r2, #8
    21e6:	2316      	movs	r3, #22
    21e8:	446b      	add	r3, sp
    21ea:	701a      	strb	r2, [r3, #0]
		cmd = CMD_FORCE_TRX_OFF;
    21ec:	3a05      	subs	r2, #5
    21ee:	2315      	movs	r3, #21
    21f0:	446b      	add	r3, sp
    21f2:	701a      	strb	r2, [r3, #0]
		cmd = CMD_TRX_OFF;
		break;

	}

	if (STATE_SLEEP == radiostatus.state)
    21f4:	9b02      	ldr	r3, [sp, #8]
    21f6:	79db      	ldrb	r3, [r3, #7]
    21f8:	2b05      	cmp	r3, #5
    21fa:	d100      	bne.n	21fe <_ZN8cMxRadio15radio_set_stateEh+0x8a>
    21fc:	e08e      	b.n	231c <_ZN8cMxRadio15radio_set_stateEh+0x1a8>
#ifdef TRX_RX_LNA_EI
		TRX_RX_LNA_DI();
#endif
		expstatus = TRX_OFF;
		cmd = CMD_FORCE_TRX_OFF;
		do_sleep = true;
    21fe:	2301      	movs	r3, #1
    2200:	4699      	mov	r9, r3
    2202:	e03d      	b.n	2280 <_ZN8cMxRadio15radio_set_stateEh+0x10c>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    2204:	9802      	ldr	r0, [sp, #8]
    2206:	2104      	movs	r1, #4
    2208:	4b47      	ldr	r3, [pc, #284]	; (2328 <_ZN8cMxRadio15radio_set_stateEh+0x1b4>)
    220a:	4798      	blx	r3
		do_sleep = true;
		break;

	default:
		radio_error(GENERAL_ERROR);
		expstatus = TRX_OFF;
    220c:	2308      	movs	r3, #8
    220e:	2216      	movs	r2, #22
    2210:	446a      	add	r2, sp
    2212:	7013      	strb	r3, [r2, #0]
		cmd = CMD_TRX_OFF;
    2214:	2215      	movs	r2, #21
    2216:	446a      	add	r2, sp
    2218:	7013      	strb	r3, [r2, #0]
		break;
    221a:	e078      	b.n	230e <_ZN8cMxRadio15radio_set_stateEh+0x19a>
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    221c:	23e0      	movs	r3, #224	; 0xe0
    221e:	9a02      	ldr	r2, [sp, #8]
    2220:	56d3      	ldrsb	r3, [r2, r3]
    2222:	3301      	adds	r3, #1
    2224:	d104      	bne.n	2230 <_ZN8cMxRadio15radio_set_stateEh+0xbc>
    2226:	4841      	ldr	r0, [pc, #260]	; (232c <_ZN8cMxRadio15radio_set_stateEh+0x1b8>)
    2228:	4941      	ldr	r1, [pc, #260]	; (2330 <_ZN8cMxRadio15radio_set_stateEh+0x1bc>)
    222a:	2228      	movs	r2, #40	; 0x28
    222c:	4b41      	ldr	r3, [pc, #260]	; (2334 <_ZN8cMxRadio15radio_set_stateEh+0x1c0>)
    222e:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    2230:	9b02      	ldr	r3, [sp, #8]
    2232:	33e0      	adds	r3, #224	; 0xe0
    2234:	68da      	ldr	r2, [r3, #12]
    2236:	685b      	ldr	r3, [r3, #4]
    2238:	6013      	str	r3, [r2, #0]
		 * be polled.  The state reads as 0b0011111 ("state transition
		 * in progress") while the transceiver is still in its startup
		 * phase, which does not match any of the "expstatus" values,
		 * so polling just continues.
		 */
		DELAY_US(500);
    223a:	20fa      	movs	r0, #250	; 0xfa
    223c:	0040      	lsls	r0, r0, #1
    223e:	4b3e      	ldr	r3, [pc, #248]	; (2338 <_ZN8cMxRadio15radio_set_stateEh+0x1c4>)
    2240:	4798      	blx	r3
    2242:	2464      	movs	r4, #100	; 0x64
		 * to be enough under all circumstances.
		 */
		retries = 100;
		do
		{
			currstatus = trx_bit_read(SR_TRX_STATUS);
    2244:	4f3d      	ldr	r7, [pc, #244]	; (233c <_ZN8cMxRadio15radio_set_stateEh+0x1c8>)
    2246:	2517      	movs	r5, #23
    2248:	446d      	add	r5, sp
			 */
			if (TRX_OFF == currstatus)
			{
				break;
			}
			DELAY_US(50);
    224a:	4e3b      	ldr	r6, [pc, #236]	; (2338 <_ZN8cMxRadio15radio_set_stateEh+0x1c4>)
		 * to be enough under all circumstances.
		 */
		retries = 100;
		do
		{
			currstatus = trx_bit_read(SR_TRX_STATUS);
    224c:	9802      	ldr	r0, [sp, #8]
    224e:	2101      	movs	r1, #1
    2250:	221f      	movs	r2, #31
    2252:	2300      	movs	r3, #0
    2254:	47b8      	blx	r7
    2256:	7028      	strb	r0, [r5, #0]
			/*
			 * Sleep could only be entered from TRX_OFF, so that's
			 * what is expected again.
			 */
			if (TRX_OFF == currstatus)
    2258:	782b      	ldrb	r3, [r5, #0]
    225a:	2b08      	cmp	r3, #8
    225c:	d005      	beq.n	226a <_ZN8cMxRadio15radio_set_stateEh+0xf6>
			{
				break;
			}
			DELAY_US(50);
    225e:	2032      	movs	r0, #50	; 0x32
    2260:	47b0      	blx	r6
    2262:	3c01      	subs	r4, #1
    2264:	b2e4      	uxtb	r4, r4
		 * to be charged by the voltage regulator.  Give the crystal
		 * oscillator some time to start up.  5 ms (100 * 50 us) ought
		 * to be enough under all circumstances.
		 */
		retries = 100;
		do
    2266:	2c00      	cmp	r4, #0
    2268:	d1f0      	bne.n	224c <_ZN8cMxRadio15radio_set_stateEh+0xd8>
			}
			DELAY_US(50);
		}
		while (--retries);

		if (currstatus != TRX_OFF)
    226a:	2317      	movs	r3, #23
    226c:	446b      	add	r3, sp
    226e:	781b      	ldrb	r3, [r3, #0]
    2270:	2200      	movs	r2, #0
    2272:	4691      	mov	r9, r2
    2274:	2b08      	cmp	r3, #8
    2276:	d003      	beq.n	2280 <_ZN8cMxRadio15radio_set_stateEh+0x10c>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    2278:	9802      	ldr	r0, [sp, #8]
    227a:	2101      	movs	r1, #1
    227c:	4b2a      	ldr	r3, [pc, #168]	; (2328 <_ZN8cMxRadio15radio_set_stateEh+0x1b4>)
    227e:	4798      	blx	r3
		{
			/* radio didn't wake up */
			radio_error(STATE_SET_FAILED);
		}
	}
	trx_bit_write(SR_TRX_CMD, cmd);
    2280:	2315      	movs	r3, #21
    2282:	446b      	add	r3, sp
    2284:	781b      	ldrb	r3, [r3, #0]
    2286:	9300      	str	r3, [sp, #0]
    2288:	9802      	ldr	r0, [sp, #8]
    228a:	2102      	movs	r1, #2
    228c:	221f      	movs	r2, #31
    228e:	2300      	movs	r3, #0
    2290:	4c2b      	ldr	r4, [pc, #172]	; (2340 <_ZN8cMxRadio15radio_set_stateEh+0x1cc>)
    2292:	47a0      	blx	r4
    2294:	248c      	movs	r4, #140	; 0x8c

	retries = 140;              /* enough to await an ongoing frame
	 * reception */
	do
	{
		currstatus = trx_bit_read(SR_TRX_STATUS);
    2296:	4f29      	ldr	r7, [pc, #164]	; (233c <_ZN8cMxRadio15radio_set_stateEh+0x1c8>)
    2298:	2517      	movs	r5, #23
    229a:	446d      	add	r5, sp
		if (expstatus == currstatus)
		{
			break;
		}
		/** @todo must wait longer for 790/868/900 MHz radios */
		DELAY_US(32);
    229c:	4e26      	ldr	r6, [pc, #152]	; (2338 <_ZN8cMxRadio15radio_set_stateEh+0x1c4>)

	retries = 140;              /* enough to await an ongoing frame
	 * reception */
	do
	{
		currstatus = trx_bit_read(SR_TRX_STATUS);
    229e:	9802      	ldr	r0, [sp, #8]
    22a0:	2101      	movs	r1, #1
    22a2:	221f      	movs	r2, #31
    22a4:	2300      	movs	r3, #0
    22a6:	47b8      	blx	r7
    22a8:	7028      	strb	r0, [r5, #0]
		if (expstatus == currstatus)
    22aa:	2316      	movs	r3, #22
    22ac:	446b      	add	r3, sp
    22ae:	781b      	ldrb	r3, [r3, #0]
    22b0:	782a      	ldrb	r2, [r5, #0]
    22b2:	b2db      	uxtb	r3, r3
    22b4:	4293      	cmp	r3, r2
    22b6:	d005      	beq.n	22c4 <_ZN8cMxRadio15radio_set_stateEh+0x150>
		{
			break;
		}
		/** @todo must wait longer for 790/868/900 MHz radios */
		DELAY_US(32);
    22b8:	2020      	movs	r0, #32
    22ba:	47b0      	blx	r6
    22bc:	3c01      	subs	r4, #1
    22be:	b2e4      	uxtb	r4, r4
	}
	trx_bit_write(SR_TRX_CMD, cmd);

	retries = 140;              /* enough to await an ongoing frame
	 * reception */
	do
    22c0:	2c00      	cmp	r4, #0
    22c2:	d1ec      	bne.n	229e <_ZN8cMxRadio15radio_set_stateEh+0x12a>
		/** @todo must wait longer for 790/868/900 MHz radios */
		DELAY_US(32);
	}
	while (--retries);

	if (expstatus != currstatus)
    22c4:	2316      	movs	r3, #22
    22c6:	446b      	add	r3, sp
    22c8:	781b      	ldrb	r3, [r3, #0]
    22ca:	2217      	movs	r2, #23
    22cc:	446a      	add	r2, sp
    22ce:	7812      	ldrb	r2, [r2, #0]
    22d0:	b2db      	uxtb	r3, r3
    22d2:	4293      	cmp	r3, r2
    22d4:	d003      	beq.n	22de <_ZN8cMxRadio15radio_set_stateEh+0x16a>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    22d6:	9802      	ldr	r0, [sp, #8]
    22d8:	2101      	movs	r1, #1
    22da:	4b13      	ldr	r3, [pc, #76]	; (2328 <_ZN8cMxRadio15radio_set_stateEh+0x1b4>)
    22dc:	4798      	blx	r3
	if (expstatus != currstatus)
	{
		radio_error(STATE_SET_FAILED);
	}

	if (do_sleep)
    22de:	464b      	mov	r3, r9
    22e0:	2b00      	cmp	r3, #0
    22e2:	d00e      	beq.n	2302 <_ZN8cMxRadio15radio_set_stateEh+0x18e>
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    22e4:	23e0      	movs	r3, #224	; 0xe0
    22e6:	9a02      	ldr	r2, [sp, #8]
    22e8:	56d3      	ldrsb	r3, [r2, r3]
    22ea:	3301      	adds	r3, #1
    22ec:	d104      	bne.n	22f8 <_ZN8cMxRadio15radio_set_stateEh+0x184>
    22ee:	480f      	ldr	r0, [pc, #60]	; (232c <_ZN8cMxRadio15radio_set_stateEh+0x1b8>)
    22f0:	490f      	ldr	r1, [pc, #60]	; (2330 <_ZN8cMxRadio15radio_set_stateEh+0x1bc>)
    22f2:	2228      	movs	r2, #40	; 0x28
    22f4:	4b0f      	ldr	r3, [pc, #60]	; (2334 <_ZN8cMxRadio15radio_set_stateEh+0x1c0>)
    22f6:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    22f8:	9b02      	ldr	r3, [sp, #8]
    22fa:	33e0      	adds	r3, #224	; 0xe0
    22fc:	691a      	ldr	r2, [r3, #16]
    22fe:	685b      	ldr	r3, [r3, #4]
    2300:	6013      	str	r3, [r2, #0]
	{
		sleep_pin=1;//TRX_SLPTR_HIGH();
	}

	radiostatus.state = state;
    2302:	230f      	movs	r3, #15
    2304:	446b      	add	r3, sp
    2306:	781b      	ldrb	r3, [r3, #0]
    2308:	9a02      	ldr	r2, [sp, #8]
    230a:	71d3      	strb	r3, [r2, #7]
    230c:	e006      	b.n	231c <_ZN8cMxRadio15radio_set_stateEh+0x1a8>
		cmd = CMD_TRX_OFF;
		break;

	}

	if (STATE_SLEEP == radiostatus.state)
    230e:	9b02      	ldr	r3, [sp, #8]
    2310:	79db      	ldrb	r3, [r3, #7]
    2312:	2b05      	cmp	r3, #5
    2314:	d082      	beq.n	221c <_ZN8cMxRadio15radio_set_stateEh+0xa8>
    2316:	2300      	movs	r3, #0
    2318:	4699      	mov	r9, r3
    231a:	e7b1      	b.n	2280 <_ZN8cMxRadio15radio_set_stateEh+0x10c>
	{
		sleep_pin=1;//TRX_SLPTR_HIGH();
	}

	radiostatus.state = state;
}
    231c:	b006      	add	sp, #24
    231e:	bc04      	pop	{r2}
    2320:	4691      	mov	r9, r2
    2322:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2324:	0000e850 	.word	0x0000e850
    2328:	00001f81 	.word	0x00001f81
    232c:	0000e6ac 	.word	0x0000e6ac
    2330:	0000e6c4 	.word	0x0000e6c4
    2334:	00004bb1 	.word	0x00004bb1
    2338:	00004c91 	.word	0x00004c91
    233c:	00002711 	.word	0x00002711
    2340:	00002729 	.word	0x00002729

00002344 <_ZN8cMxRadio17radio_irq_handlerEh>:
 *
 * @parm cause  value of the interrupt status register
 *
 */
void cMxRadio::radio_irq_handler(uint8_t cause)
{
    2344:	b570      	push	{r4, r5, r6, lr}
    2346:	1c04      	adds	r4, r0, #0
    2348:	1c0d      	adds	r5, r1, #0
	if (cause & TRX_IRQ_TRX_END)
    234a:	070b      	lsls	r3, r1, #28
    234c:	d52b      	bpl.n	23a6 <_ZN8cMxRadio17radio_irq_handlerEh+0x62>
	{
		if (STATE_RX == radiostatus.state ||
    234e:	79c3      	ldrb	r3, [r0, #7]
    2350:	1e99      	subs	r1, r3, #2
    2352:	22fd      	movs	r2, #253	; 0xfd
    2354:	4211      	tst	r1, r2
    2356:	d102      	bne.n	235e <_ZN8cMxRadio17radio_irq_handlerEh+0x1a>
				STATE_RXAUTO == radiostatus.state)
		{
			radio_receive_frame();
    2358:	4b15      	ldr	r3, [pc, #84]	; (23b0 <_ZN8cMxRadio17radio_irq_handlerEh+0x6c>)
    235a:	4798      	blx	r3
    235c:	e023      	b.n	23a6 <_ZN8cMxRadio17radio_irq_handlerEh+0x62>
		}
		else if (STATE_TX == radiostatus.state)
    235e:	2b01      	cmp	r3, #1
    2360:	d107      	bne.n	2372 <_ZN8cMxRadio17radio_irq_handlerEh+0x2e>
		{
#ifdef TRX_TX_PA_EI
TRX_TX_PA_DI();
#endif
usr_radio_tx_done(TX_OK);
    2362:	2100      	movs	r1, #0
    2364:	4b13      	ldr	r3, [pc, #76]	; (23b4 <_ZN8cMxRadio17radio_irq_handlerEh+0x70>)
    2366:	4798      	blx	r3
radio_set_state(radiostatus.idle_state);
    2368:	7a21      	ldrb	r1, [r4, #8]
    236a:	1c20      	adds	r0, r4, #0
    236c:	4b12      	ldr	r3, [pc, #72]	; (23b8 <_ZN8cMxRadio17radio_irq_handlerEh+0x74>)
    236e:	4798      	blx	r3
    2370:	e019      	b.n	23a6 <_ZN8cMxRadio17radio_irq_handlerEh+0x62>
		}
		else if (STATE_TXAUTO == radiostatus.state)
    2372:	2b03      	cmp	r3, #3
    2374:	d117      	bne.n	23a6 <_ZN8cMxRadio17radio_irq_handlerEh+0x62>
		{
#ifdef TRX_TX_PA_EI
			TRX_TX_PA_DI();
#endif
			uint8_t trac_status = trx_bit_read(SR_TRAC_STATUS);
    2376:	2102      	movs	r1, #2
    2378:	22e0      	movs	r2, #224	; 0xe0
    237a:	3302      	adds	r3, #2
    237c:	4e0f      	ldr	r6, [pc, #60]	; (23bc <_ZN8cMxRadio17radio_irq_handlerEh+0x78>)
    237e:	47b0      	blx	r6
			radio_tx_done_t result;
			switch (trac_status)
    2380:	2803      	cmp	r0, #3
    2382:	d006      	beq.n	2392 <_ZN8cMxRadio17radio_irq_handlerEh+0x4e>
    2384:	d307      	bcc.n	2396 <_ZN8cMxRadio17radio_irq_handlerEh+0x52>
			case TRAC_NO_ACK:
				result = TX_NO_ACK;
				break;

			default:
				result = TX_FAIL;
    2386:	3805      	subs	r0, #5
    2388:	4243      	negs	r3, r0
    238a:	4143      	adcs	r3, r0
    238c:	2103      	movs	r1, #3
    238e:	1ac9      	subs	r1, r1, r3
    2390:	e002      	b.n	2398 <_ZN8cMxRadio17radio_irq_handlerEh+0x54>
#endif
				result = TX_OK;
				break;

			case TRAC_CHANNEL_ACCESS_FAILURE:
				result = TX_CCA_FAIL;
    2392:	2101      	movs	r1, #1
    2394:	e000      	b.n	2398 <_ZN8cMxRadio17radio_irq_handlerEh+0x54>
			case TRAC_SUCCESS_DATA_PENDING:
#endif
#if defined TRAC_SUCCESS_WAIT_FOR_ACK
			case TRAC_SUCCESS_WAIT_FOR_ACK:
#endif
				result = TX_OK;
    2396:	2100      	movs	r1, #0
				break;

			default:
				result = TX_FAIL;
			}
			usr_radio_tx_done(result);
    2398:	1c20      	adds	r0, r4, #0
    239a:	4b06      	ldr	r3, [pc, #24]	; (23b4 <_ZN8cMxRadio17radio_irq_handlerEh+0x70>)
    239c:	4798      	blx	r3
			radio_set_state(radiostatus.idle_state);
    239e:	7a21      	ldrb	r1, [r4, #8]
    23a0:	1c20      	adds	r0, r4, #0
    23a2:	4b05      	ldr	r3, [pc, #20]	; (23b8 <_ZN8cMxRadio17radio_irq_handlerEh+0x74>)
    23a4:	4798      	blx	r3
		}
	}
	usr_radio_irq(cause);
    23a6:	1c20      	adds	r0, r4, #0
    23a8:	1c29      	adds	r1, r5, #0
    23aa:	4b05      	ldr	r3, [pc, #20]	; (23c0 <_ZN8cMxRadio17radio_irq_handlerEh+0x7c>)
    23ac:	4798      	blx	r3
}
    23ae:	bd70      	pop	{r4, r5, r6, pc}
    23b0:	00002021 	.word	0x00002021
    23b4:	00001ff1 	.word	0x00001ff1
    23b8:	00002175 	.word	0x00002175
    23bc:	00002711 	.word	0x00002711
    23c0:	00001f95 	.word	0x00001f95

000023c4 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t>:

	radiostatus.state = state;
}

void cMxRadio::radio_set_param(radio_attribute_t attr, radio_param_t parm)
{
    23c4:	b5f0      	push	{r4, r5, r6, r7, lr}
    23c6:	4647      	mov	r7, r8
    23c8:	b480      	push	{r7}
    23ca:	b082      	sub	sp, #8
    23cc:	1c05      	adds	r5, r0, #0
	switch (attr)
    23ce:	2908      	cmp	r1, #8
    23d0:	d864      	bhi.n	249c <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xd8>
    23d2:	0089      	lsls	r1, r1, #2
    23d4:	4b35      	ldr	r3, [pc, #212]	; (24ac <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xe8>)
    23d6:	585b      	ldr	r3, [r3, r1]
    23d8:	469f      	mov	pc, r3
	{
	case phyCurrentChannel:
		if (((int)parm.channel >= TRX_MIN_CHANNEL) &&
    23da:	b2d4      	uxtb	r4, r2
    23dc:	1c23      	adds	r3, r4, #0
    23de:	3b0b      	subs	r3, #11
    23e0:	2b0f      	cmp	r3, #15
    23e2:	d807      	bhi.n	23f4 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0x30>
		{
#ifdef CHINABAND
			trx_reg_write(RG_CC_CTRL_1, CCBAND);
			trx_reg_write(RG_CC_CTRL_0, parm.channel*2+CCNUMBER);
#else
			trx_bit_write(SR_CHANNEL, parm.channel);
    23e4:	9400      	str	r4, [sp, #0]
    23e6:	2108      	movs	r1, #8
    23e8:	221f      	movs	r2, #31
    23ea:	2300      	movs	r3, #0
    23ec:	4e30      	ldr	r6, [pc, #192]	; (24b0 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xec>)
    23ee:	47b0      	blx	r6
#endif
			radiostatus.channel = parm.channel;
    23f0:	712c      	strb	r4, [r5, #4]
    23f2:	e056      	b.n	24a2 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    23f4:	2102      	movs	r1, #2
    23f6:	4b2f      	ldr	r3, [pc, #188]	; (24b4 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xf0>)
    23f8:	4798      	blx	r3
    23fa:	e052      	b.n	24a2 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
		{
			radio_error(SET_PARM_FAILED);
		}
#endif//chinaband
#else
		if (parm.tx_pwr >= -17 && parm.tx_pwr <= 3)
    23fc:	b2d2      	uxtb	r2, r2
    23fe:	1c13      	adds	r3, r2, #0
    2400:	3311      	adds	r3, #17
    2402:	b2db      	uxtb	r3, r3
    2404:	2b14      	cmp	r3, #20
    2406:	d809      	bhi.n	241c <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0x58>
					0x06,                         /* 0 dBm */
					0x04,                         /* 1 dBm */
					0x02,                         /* 2 dBm */
					0x00                          /* 3 dBm */
			};
			radiostatus.tx_pwr = parm.tx_pwr;
    2408:	7142      	strb	r2, [r0, #5]
			uint8_t idx = parm.tx_pwr + 17;
			uint8_t pwrval = pwrtable[idx];
    240a:	4a2b      	ldr	r2, [pc, #172]	; (24b8 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xf4>)
			trx_bit_write(SR_TX_PWR, pwrval);
    240c:	5cd3      	ldrb	r3, [r2, r3]
    240e:	9300      	str	r3, [sp, #0]
    2410:	2105      	movs	r1, #5
    2412:	220f      	movs	r2, #15
    2414:	2300      	movs	r3, #0
    2416:	4c26      	ldr	r4, [pc, #152]	; (24b0 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xec>)
    2418:	47a0      	blx	r4
    241a:	e042      	b.n	24a2 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    241c:	2102      	movs	r1, #2
    241e:	4b25      	ldr	r3, [pc, #148]	; (24b4 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xf0>)
    2420:	4798      	blx	r3
    2422:	e03e      	b.n	24a2 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
		}

#endif//rf212
		break;
	case phyCCAMode:
		if (parm.cca_mode <= 3)
    2424:	b2d2      	uxtb	r2, r2
    2426:	2a03      	cmp	r2, #3
    2428:	d807      	bhi.n	243a <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0x76>
		{
			radiostatus.cca_mode = parm.cca_mode;
    242a:	7182      	strb	r2, [r0, #6]
			trx_bit_write(SR_CCA_MODE, radiostatus.cca_mode);
    242c:	9200      	str	r2, [sp, #0]
    242e:	2108      	movs	r1, #8
    2430:	2260      	movs	r2, #96	; 0x60
    2432:	2305      	movs	r3, #5
    2434:	4c1e      	ldr	r4, [pc, #120]	; (24b0 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xec>)
    2436:	47a0      	blx	r4
    2438:	e033      	b.n	24a2 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    243a:	2102      	movs	r1, #2
    243c:	4b1d      	ldr	r3, [pc, #116]	; (24b4 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xf0>)
    243e:	4798      	blx	r3
    2440:	e02f      	b.n	24a2 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
			radio_error(SET_PARM_FAILED);
		}
		break;

	case phyIdleState:
		radiostatus.idle_state = parm.idle_state;
    2442:	b2d1      	uxtb	r1, r2
    2444:	7201      	strb	r1, [r0, #8]
		radio_set_state(parm.idle_state);
    2446:	4b1d      	ldr	r3, [pc, #116]	; (24bc <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xf8>)
    2448:	4798      	blx	r3
		break;
    244a:	e02a      	b.n	24a2 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>

	case phyChannelsSupported:
		break;

	case phyPanId:
		trx_set_panid(parm.pan_id);
    244c:	b294      	uxth	r4, r2
	/**
	 * @brief Write the PANID to the address filter registers
	 */
	 inline void trx_set_panid(uint16_t panid)
	{
	    trx_reg_write(RG_PAN_ID_0,(panid&0xff));
    244e:	b2e2      	uxtb	r2, r4
    2450:	2122      	movs	r1, #34	; 0x22
    2452:	4e1b      	ldr	r6, [pc, #108]	; (24c0 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xfc>)
    2454:	47b0      	blx	r6
	    trx_reg_write(RG_PAN_ID_1,(panid>>8));
    2456:	0a22      	lsrs	r2, r4, #8
    2458:	1c28      	adds	r0, r5, #0
    245a:	2123      	movs	r1, #35	; 0x23
    245c:	47b0      	blx	r6
    245e:	e020      	b.n	24a2 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
		break;

	case phyShortAddr:
		trx_set_shortaddr(parm.short_addr);
    2460:	b294      	uxth	r4, r2
	 * @brief Write the 16 bit short address to the
	 * address filter registers
	 */
	 inline void trx_set_shortaddr(uint16_t shortaddr)
	{
	    trx_reg_write(RG_SHORT_ADDR_0,(shortaddr&0xff));
    2462:	b2e2      	uxtb	r2, r4
    2464:	2120      	movs	r1, #32
    2466:	4e16      	ldr	r6, [pc, #88]	; (24c0 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xfc>)
    2468:	47b0      	blx	r6
	    trx_reg_write(RG_SHORT_ADDR_1,(shortaddr>>8));
    246a:	0a22      	lsrs	r2, r4, #8
    246c:	1c28      	adds	r0, r5, #0
    246e:	2121      	movs	r1, #33	; 0x21
    2470:	47b0      	blx	r6
    2472:	e016      	b.n	24a2 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
		break;

	case phyLongAddr:
	{
		uint8_t regno, *ap;
		for (regno = RG_IEEE_ADDR_0, ap = (uint8_t *)parm.long_addr;
    2474:	1c17      	adds	r7, r2, #0
    2476:	3208      	adds	r2, #8
    2478:	1c14      	adds	r4, r2, #0
    247a:	2624      	movs	r6, #36	; 0x24
				regno <= RG_IEEE_ADDR_7;
				regno++, ap++)
			trx_reg_write(regno, *ap);
    247c:	4b10      	ldr	r3, [pc, #64]	; (24c0 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xfc>)
    247e:	4698      	mov	r8, r3
    2480:	783a      	ldrb	r2, [r7, #0]
    2482:	1c28      	adds	r0, r5, #0
    2484:	1c31      	adds	r1, r6, #0
    2486:	47c0      	blx	r8
		break;

	case phyLongAddr:
	{
		uint8_t regno, *ap;
		for (regno = RG_IEEE_ADDR_0, ap = (uint8_t *)parm.long_addr;
    2488:	3601      	adds	r6, #1
    248a:	b2f6      	uxtb	r6, r6
    248c:	3701      	adds	r7, #1
    248e:	42a7      	cmp	r7, r4
    2490:	d1f6      	bne.n	2480 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xbc>
    2492:	e006      	b.n	24a2 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
			trx_reg_write(regno, *ap);
		break;
	}

	case phyDataRate:
		trx_set_datarate(parm.data_rate);
    2494:	b2d1      	uxtb	r1, r2
    2496:	4b0b      	ldr	r3, [pc, #44]	; (24c4 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0x100>)
    2498:	4798      	blx	r3
		break;
    249a:	e002      	b.n	24a2 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    249c:	2102      	movs	r1, #2
    249e:	4b05      	ldr	r3, [pc, #20]	; (24b4 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xf0>)
    24a0:	4798      	blx	r3

	default:
		radio_error(SET_PARM_FAILED);
		break;
	}
}
    24a2:	b002      	add	sp, #8
    24a4:	bc04      	pop	{r2}
    24a6:	4690      	mov	r8, r2
    24a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    24aa:	46c0      	nop			; (mov r8, r8)
    24ac:	0000e868 	.word	0x0000e868
    24b0:	00002729 	.word	0x00002729
    24b4:	00001f81 	.word	0x00001f81
    24b8:	0000e88c 	.word	0x0000e88c
    24bc:	00002175 	.word	0x00002175
    24c0:	0000263d 	.word	0x0000263d
    24c4:	0000252d 	.word	0x0000252d

000024c8 <_ZN8cMxRadio16radio_send_frameEhPhh>:


void cMxRadio::radio_send_frame(uint8_t len, uint8_t *frm, uint8_t compcrc)
{
    24c8:	b570      	push	{r4, r5, r6, lr}
    24ca:	1c04      	adds	r4, r0, #0
    24cc:	1c0e      	adds	r6, r1, #0
    24ce:	1c15      	adds	r5, r2, #0
	{
		TRX_TX_PA_EI();
	}
#endif
/* this block should be made atomic */
	frm[2]++;
    24d0:	7893      	ldrb	r3, [r2, #2]
    24d2:	3301      	adds	r3, #1
    24d4:	7093      	strb	r3, [r2, #2]
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    24d6:	23e0      	movs	r3, #224	; 0xe0
    24d8:	56c3      	ldrsb	r3, [r0, r3]
    24da:	3301      	adds	r3, #1
    24dc:	d104      	bne.n	24e8 <_ZN8cMxRadio16radio_send_frameEhPhh+0x20>
    24de:	480f      	ldr	r0, [pc, #60]	; (251c <_ZN8cMxRadio16radio_send_frameEhPhh+0x54>)
    24e0:	490f      	ldr	r1, [pc, #60]	; (2520 <_ZN8cMxRadio16radio_send_frameEhPhh+0x58>)
    24e2:	2228      	movs	r2, #40	; 0x28
    24e4:	4b0f      	ldr	r3, [pc, #60]	; (2524 <_ZN8cMxRadio16radio_send_frameEhPhh+0x5c>)
    24e6:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    24e8:	1c23      	adds	r3, r4, #0
    24ea:	33e0      	adds	r3, #224	; 0xe0
    24ec:	691a      	ldr	r2, [r3, #16]
    24ee:	685b      	ldr	r3, [r3, #4]
    24f0:	6013      	str	r3, [r2, #0]
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    24f2:	23e0      	movs	r3, #224	; 0xe0
    24f4:	56e3      	ldrsb	r3, [r4, r3]
    24f6:	3301      	adds	r3, #1
    24f8:	d104      	bne.n	2504 <_ZN8cMxRadio16radio_send_frameEhPhh+0x3c>
    24fa:	4808      	ldr	r0, [pc, #32]	; (251c <_ZN8cMxRadio16radio_send_frameEhPhh+0x54>)
    24fc:	4908      	ldr	r1, [pc, #32]	; (2520 <_ZN8cMxRadio16radio_send_frameEhPhh+0x58>)
    24fe:	2228      	movs	r2, #40	; 0x28
    2500:	4b08      	ldr	r3, [pc, #32]	; (2524 <_ZN8cMxRadio16radio_send_frameEhPhh+0x5c>)
    2502:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    2504:	1c23      	adds	r3, r4, #0
    2506:	33e0      	adds	r3, #224	; 0xe0
    2508:	68da      	ldr	r2, [r3, #12]
    250a:	685b      	ldr	r3, [r3, #4]
    250c:	6013      	str	r3, [r2, #0]
	sleep_pin=1;//TRX_SLPTR_HIGH();
	sleep_pin=0;//TRX_SLPTR_LOW();
	trx_frame_write(len, frm);
    250e:	1c20      	adds	r0, r4, #0
    2510:	1c31      	adds	r1, r6, #0
    2512:	1c2a      	adds	r2, r5, #0
    2514:	4b04      	ldr	r3, [pc, #16]	; (2528 <_ZN8cMxRadio16radio_send_frameEhPhh+0x60>)
    2516:	4798      	blx	r3
	/***********************************/
}
    2518:	bd70      	pop	{r4, r5, r6, pc}
    251a:	46c0      	nop			; (mov r8, r8)
    251c:	0000e6ac 	.word	0x0000e6ac
    2520:	0000e6c4 	.word	0x0000e6c4
    2524:	00004bb1 	.word	0x00004bb1
    2528:	0000275d 	.word	0x0000275d

0000252c <_ZN8cMxRadio16trx_set_datarateEh>:
}

#elif RADIO_TYPE == RADIO_AT86RF231

uint8_t cMxRadio::trx_set_datarate(uint8_t rate_type)
{
    252c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    252e:	1c06      	adds	r6, r0, #0
    2530:	1e0c      	subs	r4, r1, #0
trx_regval_t regval = TRX_NONE;

    switch(rate_type)
    2532:	2c34      	cmp	r4, #52	; 0x34
    2534:	d00f      	beq.n	2556 <_ZN8cMxRadio16trx_set_datarateEh+0x2a>
    2536:	2934      	cmp	r1, #52	; 0x34
    2538:	d803      	bhi.n	2542 <_ZN8cMxRadio16trx_set_datarateEh+0x16>
    {
        case OQPSK250: regval = TRX_OQPSK250; break;
    253a:	2500      	movs	r5, #0

uint8_t cMxRadio::trx_set_datarate(uint8_t rate_type)
{
trx_regval_t regval = TRX_NONE;

    switch(rate_type)
    253c:	2933      	cmp	r1, #51	; 0x33
    253e:	d00b      	beq.n	2558 <_ZN8cMxRadio16trx_set_datarateEh+0x2c>
    2540:	e007      	b.n	2552 <_ZN8cMxRadio16trx_set_datarateEh+0x26>
    2542:	2954      	cmp	r1, #84	; 0x54
    2544:	d003      	beq.n	254e <_ZN8cMxRadio16trx_set_datarateEh+0x22>
    {
        case OQPSK250: regval = TRX_OQPSK250; break;
        case OQPSK500: regval = TRX_OQPSK500; break;
    2546:	2501      	movs	r5, #1

uint8_t cMxRadio::trx_set_datarate(uint8_t rate_type)
{
trx_regval_t regval = TRX_NONE;

    switch(rate_type)
    2548:	2994      	cmp	r1, #148	; 0x94
    254a:	d005      	beq.n	2558 <_ZN8cMxRadio16trx_set_datarateEh+0x2c>
    254c:	e001      	b.n	2552 <_ZN8cMxRadio16trx_set_datarateEh+0x26>
    {
        case OQPSK250: regval = TRX_OQPSK250; break;
        case OQPSK500: regval = TRX_OQPSK500; break;
        case OQPSK1000: regval = TRX_OQPSK1000; break;
        case OQPSK2000: regval = TRX_OQPSK2000; break;
    254e:	2503      	movs	r5, #3
    2550:	e002      	b.n	2558 <_ZN8cMxRadio16trx_set_datarateEh+0x2c>
        regval |=  trx_reg_read(RG_TRX_CTRL_2) & 0xfc ;
        trx_reg_write(RG_TRX_CTRL_2, regval);
    }
    else
    {
        rate_type = TRX_NONE;
    2552:	24ff      	movs	r4, #255	; 0xff
    2554:	e011      	b.n	257a <_ZN8cMxRadio16trx_set_datarateEh+0x4e>

    switch(rate_type)
    {
        case OQPSK250: regval = TRX_OQPSK250; break;
        case OQPSK500: regval = TRX_OQPSK500; break;
        case OQPSK1000: regval = TRX_OQPSK1000; break;
    2556:	2502      	movs	r5, #2
        case OQPSK2000: regval = TRX_OQPSK2000; break;
        default: break;
    }
    if (regval != TRX_NONE)
    {
        trx_reg_write(RG_TRX_STATE, CMD_FORCE_TRX_OFF);
    2558:	1c30      	adds	r0, r6, #0
    255a:	2102      	movs	r1, #2
    255c:	2203      	movs	r2, #3
    255e:	4f08      	ldr	r7, [pc, #32]	; (2580 <_ZN8cMxRadio16trx_set_datarateEh+0x54>)
    2560:	47b8      	blx	r7
        regval |=  trx_reg_read(RG_TRX_CTRL_2) & 0xfc ;
    2562:	1c30      	adds	r0, r6, #0
    2564:	210c      	movs	r1, #12
    2566:	4b07      	ldr	r3, [pc, #28]	; (2584 <_ZN8cMxRadio16trx_set_datarateEh+0x58>)
    2568:	4798      	blx	r3
    256a:	2303      	movs	r3, #3
    256c:	1c02      	adds	r2, r0, #0
    256e:	439a      	bics	r2, r3
    2570:	4315      	orrs	r5, r2
        trx_reg_write(RG_TRX_CTRL_2, regval);
    2572:	b2ea      	uxtb	r2, r5
    2574:	1c30      	adds	r0, r6, #0
    2576:	210c      	movs	r1, #12
    2578:	47b8      	blx	r7
    else
    {
        rate_type = TRX_NONE;
    }
    return rate_type;
}
    257a:	1c20      	adds	r0, r4, #0
    257c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    257e:	46c0      	nop			; (mov r8, r8)
    2580:	0000263d 	.word	0x0000263d
    2584:	000026a5 	.word	0x000026a5

00002588 <_Z8IRQradiov>:
/* === Includes ============================================================ */
#include <MxRadio.h>

cMxRadio* gRadio = NULL;

void IRQradio(void){
    2588:	b508      	push	{r3, lr}
	gRadio->rf_irq_callback();
    258a:	4b02      	ldr	r3, [pc, #8]	; (2594 <_Z8IRQradiov+0xc>)
    258c:	6818      	ldr	r0, [r3, #0]
    258e:	4b02      	ldr	r3, [pc, #8]	; (2598 <_Z8IRQradiov+0x10>)
    2590:	4798      	blx	r3
}
    2592:	bd08      	pop	{r3, pc}
    2594:	20004024 	.word	0x20004024
    2598:	000028a1 	.word	0x000028a1

0000259c <_ZN8cMxRadio11trx_io_initEi>:
/* === external functions =================================================== */
void cMxRadio::trx_io_init (int spirate)
{
    259c:	b570      	push	{r4, r5, r6, lr}
    259e:	b084      	sub	sp, #16
    25a0:	1c05      	adds	r5, r0, #0
    25a2:	1c0e      	adds	r6, r1, #0
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    25a4:	23a8      	movs	r3, #168	; 0xa8
    25a6:	56c3      	ldrsb	r3, [r0, r3]
    25a8:	3301      	adds	r3, #1
    25aa:	d104      	bne.n	25b6 <_ZN8cMxRadio11trx_io_initEi+0x1a>
    25ac:	4818      	ldr	r0, [pc, #96]	; (2610 <_ZN8cMxRadio11trx_io_initEi+0x74>)
    25ae:	4919      	ldr	r1, [pc, #100]	; (2614 <_ZN8cMxRadio11trx_io_initEi+0x78>)
    25b0:	2228      	movs	r2, #40	; 0x28
    25b2:	4b19      	ldr	r3, [pc, #100]	; (2618 <_ZN8cMxRadio11trx_io_initEi+0x7c>)
    25b4:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    25b6:	1c2b      	adds	r3, r5, #0
    25b8:	33a8      	adds	r3, #168	; 0xa8
    25ba:	691a      	ldr	r2, [r3, #16]
    25bc:	685b      	ldr	r3, [r3, #4]
    25be:	6013      	str	r3, [r2, #0]

	m_cs = 1;
	m_spi.format(8, 0);
    25c0:	1c2c      	adds	r4, r5, #0
    25c2:	3414      	adds	r4, #20
    25c4:	1c20      	adds	r0, r4, #0
    25c6:	2108      	movs	r1, #8
    25c8:	2200      	movs	r2, #0
    25ca:	4b14      	ldr	r3, [pc, #80]	; (261c <_ZN8cMxRadio11trx_io_initEi+0x80>)
    25cc:	4798      	blx	r3
	m_spi.frequency(spirate);
    25ce:	1c20      	adds	r0, r4, #0
    25d0:	1c31      	adds	r1, r6, #0
    25d2:	4b13      	ldr	r3, [pc, #76]	; (2620 <_ZN8cMxRadio11trx_io_initEi+0x84>)
    25d4:	4798      	blx	r3
	/////////////////////////////////////////////////////////////////////
	/////modification BM irq_pin.rise(this,&cMxRadio::rf_irq_callback);
	//////////////////////////////////////////////////////////////////////
	struct extint_chan_conf eint_chan_conf;
	extint_chan_get_config_defaults(&eint_chan_conf);
    25d6:	ac01      	add	r4, sp, #4
    25d8:	1c20      	adds	r0, r4, #0
    25da:	4b12      	ldr	r3, [pc, #72]	; (2624 <_ZN8cMxRadio11trx_io_initEi+0x88>)
    25dc:	4798      	blx	r3
	// put the button as EXTINT
	eint_chan_conf.gpio_pin           = PIN_PB00A_EIC_EXTINT0;
    25de:	2320      	movs	r3, #32
    25e0:	9301      	str	r3, [sp, #4]
	eint_chan_conf.gpio_pin_mux       = MUX_PB00A_EIC_EXTINT0 ;
    25e2:	2300      	movs	r3, #0
    25e4:	6063      	str	r3, [r4, #4]
	eint_chan_conf.detection_criteria = EXTINT_DETECT_RISING;
    25e6:	2201      	movs	r2, #1
    25e8:	72e2      	strb	r2, [r4, #11]
	eint_chan_conf.filter_input_signal = false;
    25ea:	72a3      	strb	r3, [r4, #10]
		
	extint_chan_set_config(0, &eint_chan_conf);
    25ec:	2000      	movs	r0, #0
    25ee:	1c21      	adds	r1, r4, #0
    25f0:	4b0d      	ldr	r3, [pc, #52]	; (2628 <_ZN8cMxRadio11trx_io_initEi+0x8c>)
    25f2:	4798      	blx	r3
	//configuration callback
	gRadio = this;
    25f4:	4b0d      	ldr	r3, [pc, #52]	; (262c <_ZN8cMxRadio11trx_io_initEi+0x90>)
    25f6:	601d      	str	r5, [r3, #0]
	extint_register_callback(&IRQradio,0,EXTINT_CALLBACK_TYPE_DETECT);
    25f8:	480d      	ldr	r0, [pc, #52]	; (2630 <_ZN8cMxRadio11trx_io_initEi+0x94>)
    25fa:	2100      	movs	r1, #0
    25fc:	2200      	movs	r2, #0
    25fe:	4b0d      	ldr	r3, [pc, #52]	; (2634 <_ZN8cMxRadio11trx_io_initEi+0x98>)
    2600:	4798      	blx	r3
	//InterruptManager::get()->add_handler(ppsISR, EIC_IRQn);
	//ppsIsrr.attach(&ppsISR);
	//activation callback
		extint_chan_enable_callback(0,EXTINT_CALLBACK_TYPE_DETECT);		
    2602:	2000      	movs	r0, #0
    2604:	2100      	movs	r1, #0
    2606:	4b0c      	ldr	r3, [pc, #48]	; (2638 <_ZN8cMxRadio11trx_io_initEi+0x9c>)
    2608:	4798      	blx	r3
	TRX_SLPTR_INIT();
	SPI_INIT(spirate);
	TRX_IRQ_INIT();
	EI_TRX_IRQ();
	*/
}
    260a:	b004      	add	sp, #16
    260c:	bd70      	pop	{r4, r5, r6, pc}
    260e:	46c0      	nop			; (mov r8, r8)
    2610:	0000e6ac 	.word	0x0000e6ac
    2614:	0000e6c4 	.word	0x0000e6c4
    2618:	00004bb1 	.word	0x00004bb1
    261c:	000048e1 	.word	0x000048e1
    2620:	000048fd 	.word	0x000048fd
    2624:	00003dc5 	.word	0x00003dc5
    2628:	00003dd9 	.word	0x00003dd9
    262c:	20004024 	.word	0x20004024
    2630:	00002589 	.word	0x00002589
    2634:	00003cc5 	.word	0x00003cc5
    2638:	00003ced 	.word	0x00003ced

0000263c <_ZN8cMxRadio13trx_reg_writeEhh>:

void cMxRadio::trx_reg_write(uint8_t addr, trx_regval_t val)
{
    263c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    263e:	1c04      	adds	r4, r0, #0
    2640:	1c17      	adds	r7, r2, #0

	addr = TRX_CMD_RW | (TRX_CMD_RADDR_MASK & addr);
    2642:	23c0      	movs	r3, #192	; 0xc0
    2644:	4319      	orrs	r1, r3
    2646:	1c0d      	adds	r5, r1, #0
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    2648:	3b18      	subs	r3, #24
    264a:	56c3      	ldrsb	r3, [r0, r3]
    264c:	3301      	adds	r3, #1
    264e:	d104      	bne.n	265a <_ZN8cMxRadio13trx_reg_writeEhh+0x1e>
    2650:	4810      	ldr	r0, [pc, #64]	; (2694 <_ZN8cMxRadio13trx_reg_writeEhh+0x58>)
    2652:	4911      	ldr	r1, [pc, #68]	; (2698 <_ZN8cMxRadio13trx_reg_writeEhh+0x5c>)
    2654:	2228      	movs	r2, #40	; 0x28
    2656:	4b11      	ldr	r3, [pc, #68]	; (269c <_ZN8cMxRadio13trx_reg_writeEhh+0x60>)
    2658:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    265a:	1c23      	adds	r3, r4, #0
    265c:	33a8      	adds	r3, #168	; 0xa8
    265e:	68da      	ldr	r2, [r3, #12]
    2660:	685b      	ldr	r3, [r3, #4]
    2662:	6013      	str	r3, [r2, #0]

	m_cs = 0;//SPI_SELN_LOW();
	m_spi.write(addr);//SPI_DATA_REG = addr;
    2664:	1c26      	adds	r6, r4, #0
    2666:	3614      	adds	r6, #20
    2668:	1c30      	adds	r0, r6, #0
    266a:	1c29      	adds	r1, r5, #0
    266c:	4d0c      	ldr	r5, [pc, #48]	; (26a0 <_ZN8cMxRadio13trx_reg_writeEhh+0x64>)
    266e:	47a8      	blx	r5
	//SPI_WAITFOR();
	m_spi.write(val);//SPI_DATA_REG = val;
    2670:	1c30      	adds	r0, r6, #0
    2672:	1c39      	adds	r1, r7, #0
    2674:	47a8      	blx	r5
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    2676:	23a8      	movs	r3, #168	; 0xa8
    2678:	56e3      	ldrsb	r3, [r4, r3]
    267a:	3301      	adds	r3, #1
    267c:	d104      	bne.n	2688 <_ZN8cMxRadio13trx_reg_writeEhh+0x4c>
    267e:	4805      	ldr	r0, [pc, #20]	; (2694 <_ZN8cMxRadio13trx_reg_writeEhh+0x58>)
    2680:	4905      	ldr	r1, [pc, #20]	; (2698 <_ZN8cMxRadio13trx_reg_writeEhh+0x5c>)
    2682:	2228      	movs	r2, #40	; 0x28
    2684:	4b05      	ldr	r3, [pc, #20]	; (269c <_ZN8cMxRadio13trx_reg_writeEhh+0x60>)
    2686:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    2688:	34a8      	adds	r4, #168	; 0xa8
    268a:	6923      	ldr	r3, [r4, #16]
    268c:	6862      	ldr	r2, [r4, #4]
    268e:	601a      	str	r2, [r3, #0]
	//SPI_WAITFOR();
	m_cs = 1;//SPI_SELN_HIGH();
}
    2690:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2692:	46c0      	nop			; (mov r8, r8)
    2694:	0000e6ac 	.word	0x0000e6ac
    2698:	0000e6c4 	.word	0x0000e6c4
    269c:	00004bb1 	.word	0x00004bb1
    26a0:	00004915 	.word	0x00004915

000026a4 <_ZN8cMxRadio12trx_reg_readEh>:

trx_regval_t cMxRadio::trx_reg_read(uint8_t addr)
{
    26a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    26a6:	1c04      	adds	r4, r0, #0

	uint8_t val;

	addr=TRX_CMD_RR | (TRX_CMD_RADDR_MASK & addr);
    26a8:	253f      	movs	r5, #63	; 0x3f
    26aa:	4029      	ands	r1, r5
    26ac:	3541      	adds	r5, #65	; 0x41
    26ae:	430d      	orrs	r5, r1
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    26b0:	23a8      	movs	r3, #168	; 0xa8
    26b2:	56c3      	ldrsb	r3, [r0, r3]
    26b4:	3301      	adds	r3, #1
    26b6:	d104      	bne.n	26c2 <_ZN8cMxRadio12trx_reg_readEh+0x1e>
    26b8:	4811      	ldr	r0, [pc, #68]	; (2700 <_ZN8cMxRadio12trx_reg_readEh+0x5c>)
    26ba:	4912      	ldr	r1, [pc, #72]	; (2704 <_ZN8cMxRadio12trx_reg_readEh+0x60>)
    26bc:	2228      	movs	r2, #40	; 0x28
    26be:	4b12      	ldr	r3, [pc, #72]	; (2708 <_ZN8cMxRadio12trx_reg_readEh+0x64>)
    26c0:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    26c2:	1c23      	adds	r3, r4, #0
    26c4:	33a8      	adds	r3, #168	; 0xa8
    26c6:	68da      	ldr	r2, [r3, #12]
    26c8:	685b      	ldr	r3, [r3, #4]
    26ca:	6013      	str	r3, [r2, #0]

	// Select transceiver
	m_cs = 0;//SPI_SELN_LOW();

	m_spi.write(addr);//SPI_DATA_REG = addr;
    26cc:	1c27      	adds	r7, r4, #0
    26ce:	3714      	adds	r7, #20
    26d0:	1c38      	adds	r0, r7, #0
    26d2:	1c29      	adds	r1, r5, #0
    26d4:	4e0d      	ldr	r6, [pc, #52]	; (270c <_ZN8cMxRadio12trx_reg_readEh+0x68>)
    26d6:	47b0      	blx	r6
	//SPI_WAITFOR();
	val=m_spi.write(addr);//SPI_DATA_REG = addr;        /* dummy out */
    26d8:	1c38      	adds	r0, r7, #0
    26da:	1c29      	adds	r1, r5, #0
    26dc:	47b0      	blx	r6
    26de:	b2c5      	uxtb	r5, r0
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    26e0:	23a8      	movs	r3, #168	; 0xa8
    26e2:	56e3      	ldrsb	r3, [r4, r3]
    26e4:	3301      	adds	r3, #1
    26e6:	d104      	bne.n	26f2 <_ZN8cMxRadio12trx_reg_readEh+0x4e>
    26e8:	4805      	ldr	r0, [pc, #20]	; (2700 <_ZN8cMxRadio12trx_reg_readEh+0x5c>)
    26ea:	4906      	ldr	r1, [pc, #24]	; (2704 <_ZN8cMxRadio12trx_reg_readEh+0x60>)
    26ec:	2228      	movs	r2, #40	; 0x28
    26ee:	4b06      	ldr	r3, [pc, #24]	; (2708 <_ZN8cMxRadio12trx_reg_readEh+0x64>)
    26f0:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    26f2:	34a8      	adds	r4, #168	; 0xa8
    26f4:	6923      	ldr	r3, [r4, #16]
    26f6:	6862      	ldr	r2, [r4, #4]
    26f8:	601a      	str	r2, [r3, #0]
	//val = SPI_DATA_REG;

	m_cs=1;//SPI_SELN_HIGH();

	return (trx_regval_t)val;
}
    26fa:	1c28      	adds	r0, r5, #0
    26fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    26fe:	46c0      	nop			; (mov r8, r8)
    2700:	0000e6ac 	.word	0x0000e6ac
    2704:	0000e6c4 	.word	0x0000e6c4
    2708:	00004bb1 	.word	0x00004bb1
    270c:	00004915 	.word	0x00004915

00002710 <_ZN8cMxRadio12trx_bit_readEhhh>:
#include <MxRadio.h>


/* === functions ========================================= */
trx_regval_t cMxRadio::trx_bit_read(uint8_t addr, trx_regval_t mask, uint8_t pos)
{
    2710:	b538      	push	{r3, r4, r5, lr}
    2712:	1c15      	adds	r5, r2, #0
    2714:	1c1c      	adds	r4, r3, #0
trx_regval_t data;
    data = trx_reg_read(addr);
    2716:	4b03      	ldr	r3, [pc, #12]	; (2724 <_ZN8cMxRadio12trx_bit_readEhhh+0x14>)
    2718:	4798      	blx	r3
    data &= mask;
    data >>= pos;
    271a:	4028      	ands	r0, r5
    271c:	4120      	asrs	r0, r4
    return data;
    271e:	b2c0      	uxtb	r0, r0
}
    2720:	bd38      	pop	{r3, r4, r5, pc}
    2722:	46c0      	nop			; (mov r8, r8)
    2724:	000026a5 	.word	0x000026a5

00002728 <_ZN8cMxRadio13trx_bit_writeEhhhh>:

#include <MxRadio.h>

/* === functions ========================================= */
void cMxRadio::trx_bit_write(uint8_t addr, trx_regval_t mask, uint8_t pos, trx_regval_t value)
{
    2728:	b5f0      	push	{r4, r5, r6, r7, lr}
    272a:	b083      	sub	sp, #12
    272c:	1c05      	adds	r5, r0, #0
    272e:	1c16      	adds	r6, r2, #0
    2730:	1c1c      	adds	r4, r3, #0
    2732:	ab08      	add	r3, sp, #32
    2734:	781f      	ldrb	r7, [r3, #0]

trx_regval_t tmp;
    tmp = trx_reg_read(addr);
    2736:	9101      	str	r1, [sp, #4]
    2738:	4b06      	ldr	r3, [pc, #24]	; (2754 <_ZN8cMxRadio13trx_bit_writeEhhhh+0x2c>)
    273a:	4798      	blx	r3
    tmp &= ~mask;
    273c:	43b0      	bics	r0, r6
    273e:	b2c0      	uxtb	r0, r0
    value <<= pos;
    2740:	1c3a      	adds	r2, r7, #0
    2742:	40a2      	lsls	r2, r4
    value &=mask;
    2744:	4032      	ands	r2, r6
    value |= tmp;
    trx_reg_write(addr, value);
    2746:	4302      	orrs	r2, r0
    2748:	1c28      	adds	r0, r5, #0
    274a:	9901      	ldr	r1, [sp, #4]
    274c:	4b02      	ldr	r3, [pc, #8]	; (2758 <_ZN8cMxRadio13trx_bit_writeEhhhh+0x30>)
    274e:	4798      	blx	r3
    return;
}
    2750:	b003      	add	sp, #12
    2752:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2754:	000026a5 	.word	0x000026a5
    2758:	0000263d 	.word	0x0000263d

0000275c <_ZN8cMxRadio15trx_frame_writeEhPh>:
#include <MxRadio.h>

/* === functions ========================================= */

void cMxRadio::trx_frame_write(uint8_t length, uint8_t *data)
{
    275c:	b5f0      	push	{r4, r5, r6, r7, lr}
    275e:	b083      	sub	sp, #12
    2760:	1c06      	adds	r6, r0, #0
    2762:	1c0f      	adds	r7, r1, #0
    2764:	1c15      	adds	r5, r2, #0
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    2766:	23a8      	movs	r3, #168	; 0xa8
    2768:	56c3      	ldrsb	r3, [r0, r3]
    276a:	3301      	adds	r3, #1
    276c:	d104      	bne.n	2778 <_ZN8cMxRadio15trx_frame_writeEhPh+0x1c>
    276e:	4819      	ldr	r0, [pc, #100]	; (27d4 <_ZN8cMxRadio15trx_frame_writeEhPh+0x78>)
    2770:	4919      	ldr	r1, [pc, #100]	; (27d8 <_ZN8cMxRadio15trx_frame_writeEhPh+0x7c>)
    2772:	2228      	movs	r2, #40	; 0x28
    2774:	4b19      	ldr	r3, [pc, #100]	; (27dc <_ZN8cMxRadio15trx_frame_writeEhPh+0x80>)
    2776:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    2778:	1c33      	adds	r3, r6, #0
    277a:	33a8      	adds	r3, #168	; 0xa8
    277c:	68da      	ldr	r2, [r3, #12]
    277e:	685b      	ldr	r3, [r3, #4]
    2780:	6013      	str	r3, [r2, #0]

    // Select transceiver
    m_cs=0;//SPI_SELN_LOW();

    m_spi.write(TRX_CMD_FW);//SPI_DATA_REG = TRX_CMD_FW;
    2782:	2314      	movs	r3, #20
    2784:	469c      	mov	ip, r3
    2786:	44b4      	add	ip, r6
    2788:	4663      	mov	r3, ip
    278a:	9301      	str	r3, [sp, #4]
    278c:	4660      	mov	r0, ip
    278e:	2160      	movs	r1, #96	; 0x60
    2790:	4c13      	ldr	r4, [pc, #76]	; (27e0 <_ZN8cMxRadio15trx_frame_writeEhPh+0x84>)
    2792:	47a0      	blx	r4
    //SPI_WAITFOR();
    m_spi.write(length);//SPI_DATA_REG = length;
    2794:	9801      	ldr	r0, [sp, #4]
    2796:	1c39      	adds	r1, r7, #0
    2798:	47a0      	blx	r4
    279a:	1c2c      	adds	r4, r5, #0
    279c:	3f01      	subs	r7, #1
    279e:	b2ff      	uxtb	r7, r7
    27a0:	3701      	adds	r7, #1
    27a2:	19ed      	adds	r5, r5, r7

    do
    {
        //SPI_WAITFOR();
    	m_spi.write(*data++);//SPI_DATA_REG = *data++;
    27a4:	4f0e      	ldr	r7, [pc, #56]	; (27e0 <_ZN8cMxRadio15trx_frame_writeEhPh+0x84>)
    27a6:	7821      	ldrb	r1, [r4, #0]
    27a8:	9801      	ldr	r0, [sp, #4]
    27aa:	47b8      	blx	r7
    27ac:	3401      	adds	r4, #1

    m_spi.write(TRX_CMD_FW);//SPI_DATA_REG = TRX_CMD_FW;
    //SPI_WAITFOR();
    m_spi.write(length);//SPI_DATA_REG = length;

    do
    27ae:	42ac      	cmp	r4, r5
    27b0:	d1f9      	bne.n	27a6 <_ZN8cMxRadio15trx_frame_writeEhPh+0x4a>
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    27b2:	23a8      	movs	r3, #168	; 0xa8
    27b4:	56f3      	ldrsb	r3, [r6, r3]
    27b6:	3301      	adds	r3, #1
    27b8:	d104      	bne.n	27c4 <_ZN8cMxRadio15trx_frame_writeEhPh+0x68>
    27ba:	4806      	ldr	r0, [pc, #24]	; (27d4 <_ZN8cMxRadio15trx_frame_writeEhPh+0x78>)
    27bc:	4906      	ldr	r1, [pc, #24]	; (27d8 <_ZN8cMxRadio15trx_frame_writeEhPh+0x7c>)
    27be:	2228      	movs	r2, #40	; 0x28
    27c0:	4b06      	ldr	r3, [pc, #24]	; (27dc <_ZN8cMxRadio15trx_frame_writeEhPh+0x80>)
    27c2:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    27c4:	1c33      	adds	r3, r6, #0
    27c6:	33a8      	adds	r3, #168	; 0xa8
    27c8:	691a      	ldr	r2, [r3, #16]
    27ca:	685b      	ldr	r3, [r3, #4]
    27cc:	6013      	str	r3, [r2, #0]

    //SPI_WAITFOR(); /* wait here until last byte is out otherwise underrun irq */

    // Deselect Slave
    m_cs=1;//SPI_SELN_HIGH();
}
    27ce:	b003      	add	sp, #12
    27d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    27d2:	46c0      	nop			; (mov r8, r8)
    27d4:	0000e6ac 	.word	0x0000e6ac
    27d8:	0000e6c4 	.word	0x0000e6c4
    27dc:	00004bb1 	.word	0x00004bb1
    27e0:	00004915 	.word	0x00004915

000027e4 <_ZN8cMxRadio14trx_frame_readEPhhS0_>:

uint8_t cMxRadio::trx_frame_read(uint8_t *data, uint8_t datasz, uint8_t *lqi)
{
    27e4:	b5f0      	push	{r4, r5, r6, r7, lr}
    27e6:	4657      	mov	r7, sl
    27e8:	464e      	mov	r6, r9
    27ea:	b4c0      	push	{r6, r7}
    27ec:	b083      	sub	sp, #12
    27ee:	1c07      	adds	r7, r0, #0
    27f0:	9101      	str	r1, [sp, #4]
    27f2:	1c15      	adds	r5, r2, #0
    27f4:	4699      	mov	r9, r3
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    27f6:	23a8      	movs	r3, #168	; 0xa8
    27f8:	56c3      	ldrsb	r3, [r0, r3]
    27fa:	3301      	adds	r3, #1
    27fc:	d104      	bne.n	2808 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0x24>
    27fe:	4824      	ldr	r0, [pc, #144]	; (2890 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xac>)
    2800:	4924      	ldr	r1, [pc, #144]	; (2894 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb0>)
    2802:	2228      	movs	r2, #40	; 0x28
    2804:	4b24      	ldr	r3, [pc, #144]	; (2898 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb4>)
    2806:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    2808:	1c3b      	adds	r3, r7, #0
    280a:	33a8      	adds	r3, #168	; 0xa8
    280c:	68da      	ldr	r2, [r3, #12]
    280e:	685b      	ldr	r3, [r3, #4]
    2810:	6013      	str	r3, [r2, #0]

    /* Select transceiver */
    m_cs=0;//SPI_SELN_LOW();

    /* start frame read */
    m_spi.write(TRX_CMD_FR);//SPI_DATA_REG = TRX_CMD_FR;
    2812:	2314      	movs	r3, #20
    2814:	469c      	mov	ip, r3
    2816:	44bc      	add	ip, r7
    2818:	4663      	mov	r3, ip
    281a:	4666      	mov	r6, ip
    281c:	9300      	str	r3, [sp, #0]
    281e:	1c18      	adds	r0, r3, #0
    2820:	2120      	movs	r1, #32
    2822:	4c1e      	ldr	r4, [pc, #120]	; (289c <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb8>)
    2824:	47a0      	blx	r4
    //SPI_WAITFOR();

    /* read length */
    length= m_spi.write(0);//SPI_DATA_REG = 0;
    2826:	1c30      	adds	r0, r6, #0
    2828:	2100      	movs	r1, #0
    282a:	47a0      	blx	r4
    282c:	b2c6      	uxtb	r6, r0
    //SPI_WAITFOR();
    //length = SPI_DATA_REG;

    if (length <= datasz)
    282e:	42ae      	cmp	r6, r5
    2830:	d818      	bhi.n	2864 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0x80>
    2832:	9a01      	ldr	r2, [sp, #4]
    2834:	1c14      	adds	r4, r2, #0
    2836:	1e73      	subs	r3, r6, #1
    2838:	b2db      	uxtb	r3, r3
    283a:	3301      	adds	r3, #1
    283c:	18d5      	adds	r5, r2, r3
        i = length;
        do
        {
            //SPI_DATA_REG = 0;   /* dummy out */
            //SPI_WAITFOR();
            *data++ = m_spi.write(0);//SPI_DATA_REG;
    283e:	4b17      	ldr	r3, [pc, #92]	; (289c <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb8>)
    2840:	469a      	mov	sl, r3
    2842:	9800      	ldr	r0, [sp, #0]
    2844:	2100      	movs	r1, #0
    2846:	47d0      	blx	sl
    2848:	7020      	strb	r0, [r4, #0]
    284a:	3401      	adds	r4, #1
    //length = SPI_DATA_REG;

    if (length <= datasz)
    {
        i = length;
        do
    284c:	42ac      	cmp	r4, r5
    284e:	d1f8      	bne.n	2842 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0x5e>
            //SPI_WAITFOR();
            *data++ = m_spi.write(0);//SPI_DATA_REG;
        }
        while(--i);

        if (lqi!= NULL)
    2850:	464b      	mov	r3, r9
    2852:	2b00      	cmp	r3, #0
    2854:	d008      	beq.n	2868 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0x84>
        {
            //SPI_DATA_REG = 0;   /* dummy out */
            //SPI_WAITFOR();
            *lqi = m_spi.write(0);//SPI_DATA_REG;
    2856:	9800      	ldr	r0, [sp, #0]
    2858:	2100      	movs	r1, #0
    285a:	4b10      	ldr	r3, [pc, #64]	; (289c <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb8>)
    285c:	4798      	blx	r3
    285e:	464b      	mov	r3, r9
    2860:	7018      	strb	r0, [r3, #0]
    2862:	e001      	b.n	2868 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0x84>
        }
    }
    else
    {
        /* we drop the frame */
        length = 0x80 | length;
    2864:	2380      	movs	r3, #128	; 0x80
    2866:	431e      	orrs	r6, r3
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    2868:	23a8      	movs	r3, #168	; 0xa8
    286a:	56fb      	ldrsb	r3, [r7, r3]
    286c:	3301      	adds	r3, #1
    286e:	d104      	bne.n	287a <_ZN8cMxRadio14trx_frame_readEPhhS0_+0x96>
    2870:	4807      	ldr	r0, [pc, #28]	; (2890 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xac>)
    2872:	4908      	ldr	r1, [pc, #32]	; (2894 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb0>)
    2874:	2228      	movs	r2, #40	; 0x28
    2876:	4b08      	ldr	r3, [pc, #32]	; (2898 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb4>)
    2878:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    287a:	37a8      	adds	r7, #168	; 0xa8
    287c:	693b      	ldr	r3, [r7, #16]
    287e:	687a      	ldr	r2, [r7, #4]
    2880:	601a      	str	r2, [r3, #0]
    }
    m_cs=1;//SPI_SELN_HIGH();
    return length;
}
    2882:	1c30      	adds	r0, r6, #0
    2884:	b003      	add	sp, #12
    2886:	bc0c      	pop	{r2, r3}
    2888:	4691      	mov	r9, r2
    288a:	469a      	mov	sl, r3
    288c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    288e:	46c0      	nop			; (mov r8, r8)
    2890:	0000e6ac 	.word	0x0000e6ac
    2894:	0000e6c4 	.word	0x0000e6c4
    2898:	00004bb1 	.word	0x00004bb1
    289c:	00004915 	.word	0x00004915

000028a0 <_ZN8cMxRadio15rf_irq_callbackEv>:


/* === globals ============================================================= */

void cMxRadio::rf_irq_callback()
{
    28a0:	b538      	push	{r3, r4, r5, lr}
    28a2:	1c04      	adds	r4, r0, #0

uint8_t cause;
    //DI_TRX_IRQ();
    //sei();
    cause = trx_reg_read(RG_IRQ_STATUS);
    28a4:	210f      	movs	r1, #15
    28a6:	4b0c      	ldr	r3, [pc, #48]	; (28d8 <_ZN8cMxRadio15rf_irq_callbackEv+0x38>)
    28a8:	4798      	blx	r3
    28aa:	1c05      	adds	r5, r0, #0

    if (cause & TRX_IRQ_RX_START)
    28ac:	0743      	lsls	r3, r0, #29
    28ae:	d504      	bpl.n	28ba <_ZN8cMxRadio15rf_irq_callbackEv+0x1a>
    {
    	temprssi = trx_reg_read(RG_PHY_RSSI);
    28b0:	1c20      	adds	r0, r4, #0
    28b2:	2106      	movs	r1, #6
    28b4:	4b08      	ldr	r3, [pc, #32]	; (28d8 <_ZN8cMxRadio15rf_irq_callbackEv+0x38>)
    28b6:	4798      	blx	r3
    28b8:	7020      	strb	r0, [r4, #0]
    	//temped = trx_reg_read(RG_PHY_ED_LEVEL);
    }

    if (cause & TRX_IRQ_TRX_END)
    28ba:	072b      	lsls	r3, r5, #28
    28bc:	d507      	bpl.n	28ce <_ZN8cMxRadio15rf_irq_callbackEv+0x2e>
    {
    	if (temprssi==0)
    28be:	7823      	ldrb	r3, [r4, #0]
    28c0:	2b00      	cmp	r3, #0
    28c2:	d104      	bne.n	28ce <_ZN8cMxRadio15rf_irq_callbackEv+0x2e>
    		temprssi = trx_reg_read(RG_PHY_RSSI);
    28c4:	1c20      	adds	r0, r4, #0
    28c6:	2106      	movs	r1, #6
    28c8:	4b03      	ldr	r3, [pc, #12]	; (28d8 <_ZN8cMxRadio15rf_irq_callbackEv+0x38>)
    28ca:	4798      	blx	r3
    28cc:	7020      	strb	r0, [r4, #0]
    	//temped = trx_reg_read(RG_PHY_ED_LEVEL);
    }
    radio_irq_handler(cause);
    28ce:	1c20      	adds	r0, r4, #0
    28d0:	1c29      	adds	r1, r5, #0
    28d2:	4b02      	ldr	r3, [pc, #8]	; (28dc <_ZN8cMxRadio15rf_irq_callbackEv+0x3c>)
    28d4:	4798      	blx	r3
    //cli();
    //EI_TRX_IRQ();
}
    28d6:	bd38      	pop	{r3, r4, r5, pc}
    28d8:	000026a5 	.word	0x000026a5
    28dc:	00002345 	.word	0x00002345

000028e0 <_Z12kernelConfigv>:
 * Created: 13/05/2016 16:34:52
 *  Author: MORAND Baptiste
 */ 
#include "utask.h"

void kernelConfig(void){
    28e0:	b530      	push	{r4, r5, lr}
    28e2:	b085      	sub	sp, #20

	pc.printf("kernel config\r\n");
    28e4:	480e      	ldr	r0, [pc, #56]	; (2920 <_Z12kernelConfigv+0x40>)
    28e6:	490f      	ldr	r1, [pc, #60]	; (2924 <_Z12kernelConfigv+0x44>)
    28e8:	4b0f      	ldr	r3, [pc, #60]	; (2928 <_Z12kernelConfigv+0x48>)
    28ea:	4798      	blx	r3
	// tasks creations
	xTaskCreate((pdTASK_CODE)HMITask,(const signed char*)"HMI",configMINIMAL_STACK_SIZE,NULL, tskIDLE_PRIORITY +1, NULL);
    28ec:	2301      	movs	r3, #1
    28ee:	9300      	str	r3, [sp, #0]
    28f0:	2400      	movs	r4, #0
    28f2:	9401      	str	r4, [sp, #4]
    28f4:	9402      	str	r4, [sp, #8]
    28f6:	9403      	str	r4, [sp, #12]
    28f8:	480c      	ldr	r0, [pc, #48]	; (292c <_Z12kernelConfigv+0x4c>)
    28fa:	490d      	ldr	r1, [pc, #52]	; (2930 <_Z12kernelConfigv+0x50>)
    28fc:	2296      	movs	r2, #150	; 0x96
    28fe:	0052      	lsls	r2, r2, #1
    2900:	2300      	movs	r3, #0
    2902:	4d0c      	ldr	r5, [pc, #48]	; (2934 <_Z12kernelConfigv+0x54>)
    2904:	47a8      	blx	r5
	xTaskCreate((pdTASK_CODE)timeProtocolTask,(const signed char*)"time",configMINIMAL_STACK_SIZE+600,NULL, tskIDLE_PRIORITY +3, NULL);
    2906:	2303      	movs	r3, #3
    2908:	9300      	str	r3, [sp, #0]
    290a:	9401      	str	r4, [sp, #4]
    290c:	9402      	str	r4, [sp, #8]
    290e:	9403      	str	r4, [sp, #12]
    2910:	4809      	ldr	r0, [pc, #36]	; (2938 <_Z12kernelConfigv+0x58>)
    2912:	490a      	ldr	r1, [pc, #40]	; (293c <_Z12kernelConfigv+0x5c>)
    2914:	22e1      	movs	r2, #225	; 0xe1
    2916:	0092      	lsls	r2, r2, #2
    2918:	2300      	movs	r3, #0
    291a:	47a8      	blx	r5
	//xTaskCreate((pdTASK_CODE)ledBlinkTask,(const signed char*)"led",configMINIMAL_STACK_SIZE,NULL, tskIDLE_PRIORITY +4, NULL);
	//xTaskCreate((pdTASK_CODE)gpsUartTask,(const signed char*)"gps",configMINIMAL_STACK_SIZE,NULL, tskIDLE_PRIORITY +2, NULL);
}
    291c:	b005      	add	sp, #20
    291e:	bd30      	pop	{r4, r5, pc}
    2920:	2000447c 	.word	0x2000447c
    2924:	0000e8a4 	.word	0x0000e8a4
    2928:	00004b89 	.word	0x00004b89
    292c:	000037c1 	.word	0x000037c1
    2930:	0000e8b4 	.word	0x0000e8b4
    2934:	00000711 	.word	0x00000711
    2938:	00003675 	.word	0x00003675
    293c:	0000e8b8 	.word	0x0000e8b8

00002940 <_Z6ppsISRv>:
/** Callback function for the EXTINT driver, called when an external interrupt
 *  detection occurs.
 */

void ppsISR(void)
{	
    2940:	b570      	push	{r4, r5, r6, lr}
    2942:	b08e      	sub	sp, #56	; 0x38
	//pc.printf("pps\r\n");
		
	//Disable_global_interrupt();
	Clock timeCopy={0,0,true};
    2944:	ad08      	add	r5, sp, #32
    2946:	2300      	movs	r3, #0
    2948:	9308      	str	r3, [sp, #32]
    294a:	9309      	str	r3, [sp, #36]	; 0x24
    294c:	2201      	movs	r2, #1
    294e:	722a      	strb	r2, [r5, #8]
	//Disable_global_interrupt();
	Clock timeMaster={0,0,true};
    2950:	ac0b      	add	r4, sp, #44	; 0x2c
    2952:	930b      	str	r3, [sp, #44]	; 0x2c
    2954:	930c      	str	r3, [sp, #48]	; 0x30
    2956:	7222      	strb	r2, [r4, #8]
	readClock(&timeCopy);
    2958:	1c28      	adds	r0, r5, #0
    295a:	4b1e      	ldr	r3, [pc, #120]	; (29d4 <_Z6ppsISRv+0x94>)
    295c:	4798      	blx	r3
	//Enable_global_interrupt();
	timeMaster.second=timeCopy.second;
    295e:	9b08      	ldr	r3, [sp, #32]
    2960:	930b      	str	r3, [sp, #44]	; 0x2c
	timeMaster.halfmillis=timeCopy.halfmillis;
    2962:	686b      	ldr	r3, [r5, #4]
    2964:	6063      	str	r3, [r4, #4]
	if(timeMaster.halfmillis>=RTC_FREQ/2){//for the accurate 500ms
    2966:	6862      	ldr	r2, [r4, #4]
    2968:	4b1b      	ldr	r3, [pc, #108]	; (29d8 <_Z6ppsISRv+0x98>)
    296a:	429a      	cmp	r2, r3
    296c:	d902      	bls.n	2974 <_Z6ppsISRv+0x34>
		timeMaster.second++;
    296e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    2970:	3301      	adds	r3, #1
    2972:	930b      	str	r3, [sp, #44]	; 0x2c
	}
	timeMaster.halfmillis=0;
    2974:	2300      	movs	r3, #0
    2976:	930c      	str	r3, [sp, #48]	; 0x30
	if((timeCopy.halfmillis>RTC_FREQ)||(timeCopy.halfmillis<0)){
		printf("timeCopypps:'");
		printfClock(timeCopy);
	}
	*/
	timeProt.offset=subClock(timeMaster,timeCopy);
    2978:	4d18      	ldr	r5, [pc, #96]	; (29dc <_Z6ppsISRv+0x9c>)
    297a:	ac04      	add	r4, sp, #16
    297c:	ab08      	add	r3, sp, #32
    297e:	466a      	mov	r2, sp
    2980:	cb43      	ldmia	r3!, {r0, r1, r6}
    2982:	c243      	stmia	r2!, {r0, r1, r6}
    2984:	1c20      	adds	r0, r4, #0
    2986:	990b      	ldr	r1, [sp, #44]	; 0x2c
    2988:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    298a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    298c:	4e14      	ldr	r6, [pc, #80]	; (29e0 <_Z6ppsISRv+0xa0>)
    298e:	47b0      	blx	r6
    2990:	1c2b      	adds	r3, r5, #0
    2992:	3344      	adds	r3, #68	; 0x44
    2994:	cc07      	ldmia	r4!, {r0, r1, r2}
    2996:	c307      	stmia	r3!, {r0, r1, r2}
	//timeProt.offset.second=0;
	#ifdef MASTERMODE
		updateClock();
	#else
		if(timeProt.offset.sign==true){
    2998:	234c      	movs	r3, #76	; 0x4c
    299a:	5ceb      	ldrb	r3, [r5, r3]
    299c:	2b00      	cmp	r3, #0
    299e:	d00a      	beq.n	29b6 <_Z6ppsISRv+0x76>
			sprintf(messageHMIError,"		error pps: %lus %u	t:%lus",timeProt.offset.second,(unsigned int)(timeProt.offset.halfmillis/2),timeMaster.second);
    29a0:	4b0e      	ldr	r3, [pc, #56]	; (29dc <_Z6ppsISRv+0x9c>)
    29a2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    29a4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    29a6:	990b      	ldr	r1, [sp, #44]	; 0x2c
    29a8:	085b      	lsrs	r3, r3, #1
    29aa:	9100      	str	r1, [sp, #0]
    29ac:	480d      	ldr	r0, [pc, #52]	; (29e4 <_Z6ppsISRv+0xa4>)
    29ae:	490e      	ldr	r1, [pc, #56]	; (29e8 <_Z6ppsISRv+0xa8>)
    29b0:	4c0e      	ldr	r4, [pc, #56]	; (29ec <_Z6ppsISRv+0xac>)
    29b2:	47a0      	blx	r4
    29b4:	e009      	b.n	29ca <_Z6ppsISRv+0x8a>
		}
		else{
			sprintf(messageHMIError,"		error pps: -%lus %u	t:%lus",timeProt.offset.second,(unsigned int)(timeProt.offset.halfmillis/2),timeMaster.second);
    29b6:	4b09      	ldr	r3, [pc, #36]	; (29dc <_Z6ppsISRv+0x9c>)
    29b8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    29ba:	6c9b      	ldr	r3, [r3, #72]	; 0x48
    29bc:	990b      	ldr	r1, [sp, #44]	; 0x2c
    29be:	085b      	lsrs	r3, r3, #1
    29c0:	9100      	str	r1, [sp, #0]
    29c2:	4808      	ldr	r0, [pc, #32]	; (29e4 <_Z6ppsISRv+0xa4>)
    29c4:	490a      	ldr	r1, [pc, #40]	; (29f0 <_Z6ppsISRv+0xb0>)
    29c6:	4c09      	ldr	r4, [pc, #36]	; (29ec <_Z6ppsISRv+0xac>)
    29c8:	47a0      	blx	r4
		}
		sendHMI(messageHMIError);
    29ca:	4806      	ldr	r0, [pc, #24]	; (29e4 <_Z6ppsISRv+0xa4>)
    29cc:	4b09      	ldr	r3, [pc, #36]	; (29f4 <_Z6ppsISRv+0xb4>)
    29ce:	4798      	blx	r3
	#endif
	
//	Enable_global_interrupt();
}
    29d0:	b00e      	add	sp, #56	; 0x38
    29d2:	bd70      	pop	{r4, r5, r6, pc}
    29d4:	00001391 	.word	0x00001391
    29d8:	00003e7f 	.word	0x00003e7f
    29dc:	20004208 	.word	0x20004208
    29e0:	0000110d 	.word	0x0000110d
    29e4:	20004028 	.word	0x20004028
    29e8:	0000e8c0 	.word	0x0000e8c0
    29ec:	0000b08d 	.word	0x0000b08d
    29f0:	0000e8dc 	.word	0x0000e8dc
    29f4:	00003829 	.word	0x00003829

000029f8 <_Z16configurationPPSv>:

void configurationPPS(void){
    29f8:	b510      	push	{r4, lr}
    29fa:	b084      	sub	sp, #16
		pc.printf("confif pps\r\n");
    29fc:	480e      	ldr	r0, [pc, #56]	; (2a38 <_Z16configurationPPSv+0x40>)
    29fe:	490f      	ldr	r1, [pc, #60]	; (2a3c <_Z16configurationPPSv+0x44>)
    2a00:	4b0f      	ldr	r3, [pc, #60]	; (2a40 <_Z16configurationPPSv+0x48>)
    2a02:	4798      	blx	r3
	//	pps.rise(ppsISR);
		struct extint_chan_conf eint_chan_conf;
		extint_chan_get_config_defaults(&eint_chan_conf);
    2a04:	ac01      	add	r4, sp, #4
    2a06:	1c20      	adds	r0, r4, #0
    2a08:	4b0e      	ldr	r3, [pc, #56]	; (2a44 <_Z16configurationPPSv+0x4c>)
    2a0a:	4798      	blx	r3
		// put the button as EXTINT
		eint_chan_conf.gpio_pin           = PIN_PA28A_EIC_EXTINT8;
    2a0c:	231c      	movs	r3, #28
    2a0e:	9301      	str	r3, [sp, #4]
		eint_chan_conf.gpio_pin_mux       = MUX_PA28A_EIC_EXTINT8;
    2a10:	2300      	movs	r3, #0
    2a12:	6063      	str	r3, [r4, #4]
		eint_chan_conf.detection_criteria = EXTINT_DETECT_RISING;
    2a14:	2201      	movs	r2, #1
    2a16:	72e2      	strb	r2, [r4, #11]
		eint_chan_conf.filter_input_signal = false;
    2a18:	72a3      	strb	r3, [r4, #10]
		
		extint_chan_set_config(8, &eint_chan_conf);
    2a1a:	2008      	movs	r0, #8
    2a1c:	1c21      	adds	r1, r4, #0
    2a1e:	4b0a      	ldr	r3, [pc, #40]	; (2a48 <_Z16configurationPPSv+0x50>)
    2a20:	4798      	blx	r3
		//configuration callback
		extint_register_callback(&ppsISR,8,EXTINT_CALLBACK_TYPE_DETECT);
    2a22:	480a      	ldr	r0, [pc, #40]	; (2a4c <_Z16configurationPPSv+0x54>)
    2a24:	2108      	movs	r1, #8
    2a26:	2200      	movs	r2, #0
    2a28:	4b09      	ldr	r3, [pc, #36]	; (2a50 <_Z16configurationPPSv+0x58>)
    2a2a:	4798      	blx	r3
		//InterruptManager::get()->add_handler(ppsISR, EIC_IRQn);
		//ppsIsrr.attach(&ppsISR);
		//activation callback
		extint_chan_enable_callback(8,EXTINT_CALLBACK_TYPE_DETECT);		
    2a2c:	2008      	movs	r0, #8
    2a2e:	2100      	movs	r1, #0
    2a30:	4b08      	ldr	r3, [pc, #32]	; (2a54 <_Z16configurationPPSv+0x5c>)
    2a32:	4798      	blx	r3
		
		
    2a34:	b004      	add	sp, #16
    2a36:	bd10      	pop	{r4, pc}
    2a38:	2000447c 	.word	0x2000447c
    2a3c:	0000e8fc 	.word	0x0000e8fc
    2a40:	00004b89 	.word	0x00004b89
    2a44:	00003dc5 	.word	0x00003dc5
    2a48:	00003dd9 	.word	0x00003dd9
    2a4c:	00002941 	.word	0x00002941
    2a50:	00003cc5 	.word	0x00003cc5
    2a54:	00003ced 	.word	0x00003ced

00002a58 <_Z4pgcdii>:
	}
	
}


int pgcd( int a ,int b){
    2a58:	b510      	push	{r4, lr}
	int i=0;
	while ((!(a*b == 0))&&(i<1000)) {
    2a5a:	1c0b      	adds	r3, r1, #0
    2a5c:	4343      	muls	r3, r0
    2a5e:	2b00      	cmp	r3, #0
    2a60:	d013      	beq.n	2a8a <_Z4pgcdii+0x32>
    2a62:	2300      	movs	r3, #0
    2a64:	24fa      	movs	r4, #250	; 0xfa
    2a66:	00a4      	lsls	r4, r4, #2
		if (a>b) {
    2a68:	4288      	cmp	r0, r1
    2a6a:	dd01      	ble.n	2a70 <_Z4pgcdii+0x18>
			a = a - b ;
    2a6c:	1a40      	subs	r0, r0, r1
    2a6e:	e000      	b.n	2a72 <_Z4pgcdii+0x1a>
		}
		else{
			b = b - a ;
    2a70:	1a09      	subs	r1, r1, r0
		}
		i++;
    2a72:	3301      	adds	r3, #1
}


int pgcd( int a ,int b){
	int i=0;
	while ((!(a*b == 0))&&(i<1000)) {
    2a74:	1c0a      	adds	r2, r1, #0
    2a76:	4342      	muls	r2, r0
    2a78:	2a00      	cmp	r2, #0
    2a7a:	d003      	beq.n	2a84 <_Z4pgcdii+0x2c>
    2a7c:	42a3      	cmp	r3, r4
    2a7e:	d1f3      	bne.n	2a68 <_Z4pgcdii+0x10>
			b = b - a ;
		}
		i++;
	}
	if(i>=1000){
		return 1;
    2a80:	2101      	movs	r1, #1
    2a82:	e007      	b.n	2a94 <_Z4pgcdii+0x3c>
		else{
			b = b - a ;
		}
		i++;
	}
	if(i>=1000){
    2a84:	4a04      	ldr	r2, [pc, #16]	; (2a98 <_Z4pgcdii+0x40>)
    2a86:	4293      	cmp	r3, r2
    2a88:	dc03      	bgt.n	2a92 <_Z4pgcdii+0x3a>
		return 1;
	}
	if(a==0){
    2a8a:	2800      	cmp	r0, #0
    2a8c:	d002      	beq.n	2a94 <_Z4pgcdii+0x3c>
    2a8e:	1c01      	adds	r1, r0, #0
    2a90:	e000      	b.n	2a94 <_Z4pgcdii+0x3c>
			b = b - a ;
		}
		i++;
	}
	if(i>=1000){
		return 1;
    2a92:	2101      	movs	r1, #1
	}
	else{
		return a;
	}
	return a;
}
    2a94:	1c08      	adds	r0, r1, #0
    2a96:	bd10      	pop	{r4, pc}
    2a98:	000003e7 	.word	0x000003e7

00002a9c <_Z24resetSofftwareCorrectionv>:

void resetSofftwareCorrection(void){

		sumOffset.second=0;
    2a9c:	4a04      	ldr	r2, [pc, #16]	; (2ab0 <_Z24resetSofftwareCorrectionv+0x14>)
    2a9e:	2300      	movs	r3, #0
    2aa0:	6013      	str	r3, [r2, #0]
		sumOffset.halfmillis=0;
    2aa2:	6053      	str	r3, [r2, #4]
		timeProt.correction.nbCorrection=0;
    2aa4:	4a03      	ldr	r2, [pc, #12]	; (2ab4 <_Z24resetSofftwareCorrectionv+0x18>)
    2aa6:	6513      	str	r3, [r2, #80]	; 0x50
		timeProt.correction.sumTime.second=0;
    2aa8:	6713      	str	r3, [r2, #112]	; 0x70
		timeProt.correction.sumTime.halfmillis=0;
    2aaa:	6753      	str	r3, [r2, #116]	; 0x74
		timeProt.correction.currentTimeOffsetSync.second=0;// to not take the first value
    2aac:	6653      	str	r3, [r2, #100]	; 0x64
}
    2aae:	4770      	bx	lr
    2ab0:	20004134 	.word	0x20004134
    2ab4:	20004208 	.word	0x20004208

00002ab8 <_Z17sofwareCorrectionv>:
		
	}
	
}

void sofwareCorrection(){
    2ab8:	b5f0      	push	{r4, r5, r6, r7, lr}
    2aba:	465f      	mov	r7, fp
    2abc:	4656      	mov	r6, sl
    2abe:	464d      	mov	r5, r9
    2ac0:	4644      	mov	r4, r8
    2ac2:	b4f0      	push	{r4, r5, r6, r7}
    2ac4:	b091      	sub	sp, #68	; 0x44
	if(timeProt.correction.nbCorrection!=0){
    2ac6:	4bbe      	ldr	r3, [pc, #760]	; (2dc0 <_Z17sofwareCorrectionv+0x308>)
    2ac8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    2aca:	2b00      	cmp	r3, #0
    2acc:	d100      	bne.n	2ad0 <_Z17sofwareCorrectionv+0x18>
    2ace:	e16f      	b.n	2db0 <_Z17sofwareCorrectionv+0x2f8>
	//	printf("nb corr : %d",timeProt.correction.nbCorrection);
		sendHMI("	Software Correction ");
    2ad0:	48bc      	ldr	r0, [pc, #752]	; (2dc4 <_Z17sofwareCorrectionv+0x30c>)
    2ad2:	4bbd      	ldr	r3, [pc, #756]	; (2dc8 <_Z17sofwareCorrectionv+0x310>)
    2ad4:	4798      	blx	r3
		//interval of time
		Clock averageTime;
		Clock averageOffset;
		Clock sumOffsetl;
		float fcorr=0;
		int indice=timeProt.correction.indiceFull;
    2ad6:	49ba      	ldr	r1, [pc, #744]	; (2dc0 <_Z17sofwareCorrectionv+0x308>)
    2ad8:	23cd      	movs	r3, #205	; 0xcd
    2ada:	5cc8      	ldrb	r0, [r1, r3]
			

		sumOffsetl=sumOffset;
    2adc:	ab0d      	add	r3, sp, #52	; 0x34
    2ade:	4abb      	ldr	r2, [pc, #748]	; (2dcc <_Z17sofwareCorrectionv+0x314>)
    2ae0:	1c1c      	adds	r4, r3, #0
    2ae2:	cae0      	ldmia	r2!, {r5, r6, r7}
    2ae4:	c4e0      	stmia	r4!, {r5, r6, r7}

		
		//sign change
		if(timeProt.correction.valueCor!=sumOffsetl.sign){//if the sum of the offset change of sign error ze reset the software corection 
    2ae6:	2254      	movs	r2, #84	; 0x54
    2ae8:	5c8a      	ldrb	r2, [r1, r2]
    2aea:	7a19      	ldrb	r1, [r3, #8]
    2aec:	b2d3      	uxtb	r3, r2
		//interval of time
		Clock averageTime;
		Clock averageOffset;
		Clock sumOffsetl;
		float fcorr=0;
		int indice=timeProt.correction.indiceFull;
    2aee:	4680      	mov	r8, r0

		sumOffsetl=sumOffset;

		
		//sign change
		if(timeProt.correction.valueCor!=sumOffsetl.sign){//if the sum of the offset change of sign error ze reset the software corection 
    2af0:	428b      	cmp	r3, r1
    2af2:	d005      	beq.n	2b00 <_Z17sofwareCorrectionv+0x48>
			indice=0;
			timeProt.correction.indiceMoySoftCor=0;
    2af4:	2100      	movs	r1, #0
    2af6:	23cc      	movs	r3, #204	; 0xcc
    2af8:	4ab1      	ldr	r2, [pc, #708]	; (2dc0 <_Z17sofwareCorrectionv+0x308>)
    2afa:	54d1      	strb	r1, [r2, r3]
		sumOffsetl=sumOffset;

		
		//sign change
		if(timeProt.correction.valueCor!=sumOffsetl.sign){//if the sum of the offset change of sign error ze reset the software corection 
			indice=0;
    2afc:	2300      	movs	r3, #0
    2afe:	4698      	mov	r8, r3
			timeProt.correction.indiceMoySoftCor=0;
		
		}
		
		float second=(float)timeProt.correction.sumTime.second/timeProt.correction.nbCorrection;
    2b00:	4faf      	ldr	r7, [pc, #700]	; (2dc0 <_Z17sofwareCorrectionv+0x308>)
    2b02:	6f38      	ldr	r0, [r7, #112]	; 0x70
    2b04:	6d3c      	ldr	r4, [r7, #80]	; 0x50
    2b06:	4eb2      	ldr	r6, [pc, #712]	; (2dd0 <_Z17sofwareCorrectionv+0x318>)
    2b08:	47b0      	blx	r6
    2b0a:	1c05      	adds	r5, r0, #0
    2b0c:	1c20      	adds	r0, r4, #0
    2b0e:	47b0      	blx	r6
    2b10:	1c01      	adds	r1, r0, #0
    2b12:	1c28      	adds	r0, r5, #0
    2b14:	4baf      	ldr	r3, [pc, #700]	; (2dd4 <_Z17sofwareCorrectionv+0x31c>)
    2b16:	4798      	blx	r3
    2b18:	1c05      	adds	r5, r0, #0
		int secondi=(int)second;
    2b1a:	4baf      	ldr	r3, [pc, #700]	; (2dd8 <_Z17sofwareCorrectionv+0x320>)
    2b1c:	4798      	blx	r3
    2b1e:	1c06      	adds	r6, r0, #0
				//calcul average time
				//printf("second : %d,%d",secondi,(int)((second-secondi)*1000.0));
				
		averageTime.second=secondi;
    2b20:	9007      	str	r0, [sp, #28]
		averageTime.halfmillis=(timeProt.correction.sumTime.halfmillis/timeProt.correction.nbCorrection)+RTC_FREQ*1.0*((float)(second-secondi));
    2b22:	6f78      	ldr	r0, [r7, #116]	; 0x74
    2b24:	4fad      	ldr	r7, [pc, #692]	; (2ddc <_Z17sofwareCorrectionv+0x324>)
    2b26:	1c21      	adds	r1, r4, #0
    2b28:	47b8      	blx	r7
    2b2a:	4bad      	ldr	r3, [pc, #692]	; (2de0 <_Z17sofwareCorrectionv+0x328>)
    2b2c:	4798      	blx	r3
    2b2e:	9002      	str	r0, [sp, #8]
    2b30:	9103      	str	r1, [sp, #12]
    2b32:	1c30      	adds	r0, r6, #0
    2b34:	4bab      	ldr	r3, [pc, #684]	; (2de4 <_Z17sofwareCorrectionv+0x32c>)
    2b36:	4798      	blx	r3
    2b38:	1c01      	adds	r1, r0, #0
    2b3a:	1c28      	adds	r0, r5, #0
    2b3c:	4baa      	ldr	r3, [pc, #680]	; (2de8 <_Z17sofwareCorrectionv+0x330>)
    2b3e:	4798      	blx	r3
    2b40:	4baa      	ldr	r3, [pc, #680]	; (2dec <_Z17sofwareCorrectionv+0x334>)
    2b42:	4798      	blx	r3
    2b44:	2200      	movs	r2, #0
    2b46:	4baa      	ldr	r3, [pc, #680]	; (2df0 <_Z17sofwareCorrectionv+0x338>)
    2b48:	4daa      	ldr	r5, [pc, #680]	; (2df4 <_Z17sofwareCorrectionv+0x33c>)
    2b4a:	47a8      	blx	r5
    2b4c:	1c02      	adds	r2, r0, #0
    2b4e:	1c0b      	adds	r3, r1, #0
    2b50:	9802      	ldr	r0, [sp, #8]
    2b52:	9903      	ldr	r1, [sp, #12]
    2b54:	4da8      	ldr	r5, [pc, #672]	; (2df8 <_Z17sofwareCorrectionv+0x340>)
    2b56:	47a8      	blx	r5
    2b58:	4ba8      	ldr	r3, [pc, #672]	; (2dfc <_Z17sofwareCorrectionv+0x344>)
    2b5a:	4798      	blx	r3
    2b5c:	9008      	str	r0, [sp, #32]
		//unsigned long int averageTimeli=(averageTime.second*2000)+(averageTime.halfmillis);
		//calcul average offset
		averageOffset.second=sumOffset.second/timeProt.correction.nbCorrection;
    2b5e:	4e9b      	ldr	r6, [pc, #620]	; (2dcc <_Z17sofwareCorrectionv+0x314>)
    2b60:	6830      	ldr	r0, [r6, #0]
    2b62:	1c21      	adds	r1, r4, #0
    2b64:	47b8      	blx	r7
    2b66:	ad0a      	add	r5, sp, #40	; 0x28
    2b68:	900a      	str	r0, [sp, #40]	; 0x28
		averageOffset.halfmillis=sumOffset.halfmillis/timeProt.correction.nbCorrection;
    2b6a:	6870      	ldr	r0, [r6, #4]
    2b6c:	1c21      	adds	r1, r4, #0
    2b6e:	47b8      	blx	r7
    2b70:	6068      	str	r0, [r5, #4]
		averageOffset.sign=sumOffset.sign;
    2b72:	7a33      	ldrb	r3, [r6, #8]
    2b74:	b2db      	uxtb	r3, r3
    2b76:	722b      	strb	r3, [r5, #8]
		printfClock(averageTime);
		printf("averageOffseet: ");
		printfClock(averageOffset);*/
		
		//calcul of average time in hms
		unsigned long int diffhms=averageTime.second*RTC_FREQ+averageTime.halfmillis;
    2b78:	9807      	ldr	r0, [sp, #28]
    2b7a:	9a08      	ldr	r2, [sp, #32]
		//offset in hms
		long int offset=averageOffset.second*RTC_FREQ+averageOffset.halfmillis;
    2b7c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    2b7e:	6869      	ldr	r1, [r5, #4]
    2b80:	23fa      	movs	r3, #250	; 0xfa
    2b82:	01db      	lsls	r3, r3, #7
    2b84:	4363      	muls	r3, r4
    2b86:	185f      	adds	r7, r3, r1
		if (averageOffset.sign==false)
    2b88:	7a2b      	ldrb	r3, [r5, #8]
    2b8a:	2b00      	cmp	r3, #0
    2b8c:	d100      	bne.n	2b90 <_Z17sofwareCorrectionv+0xd8>
		{
			offset=-offset;
    2b8e:	427f      	negs	r7, r7
		float correctionTime=0.0;
		int corr;
		int corrTime;
		int nbwait;
		
		corr=valueCor;
    2b90:	4b9b      	ldr	r3, [pc, #620]	; (2e00 <_Z17sofwareCorrectionv+0x348>)
    2b92:	681b      	ldr	r3, [r3, #0]
		nbwait=timeCorrection;
    2b94:	4b9b      	ldr	r3, [pc, #620]	; (2e04 <_Z17sofwareCorrectionv+0x34c>)
    2b96:	681c      	ldr	r4, [r3, #0]
		corrTime=nbwait;		

		if(offset!=0){
    2b98:	2f00      	cmp	r7, #0
    2b9a:	d100      	bne.n	2b9e <_Z17sofwareCorrectionv+0xe6>
    2b9c:	e0f4      	b.n	2d88 <_Z17sofwareCorrectionv+0x2d0>
					//printf("correction need %d(%d)\r\n",(int)fcorr,nbwait);	
					if(fcorr<0){
						fcorr=-fcorr;
					}
					
					while((nbwait<1000)&&(fcorr<0.5)){
    2b9e:	4b9a      	ldr	r3, [pc, #616]	; (2e08 <_Z17sofwareCorrectionv+0x350>)
    2ba0:	429c      	cmp	r4, r3
    2ba2:	dc27      	bgt.n	2bf4 <_Z17sofwareCorrectionv+0x13c>
		printfClock(averageTime);
		printf("averageOffseet: ");
		printfClock(averageOffset);*/
		
		//calcul of average time in hms
		unsigned long int diffhms=averageTime.second*RTC_FREQ+averageTime.halfmillis;
    2ba4:	23fa      	movs	r3, #250	; 0xfa
    2ba6:	01db      	lsls	r3, r3, #7
    2ba8:	4358      	muls	r0, r3
    2baa:	1880      	adds	r0, r0, r2
					if(fcorr<0){
						fcorr=-fcorr;
					}
					
					while((nbwait<1000)&&(fcorr<0.5)){
						fcorr=(float)((float)VALUE_TIMER*nbwait*offset*1.0)/(diffhms);
    2bac:	4b88      	ldr	r3, [pc, #544]	; (2dd0 <_Z17sofwareCorrectionv+0x318>)
    2bae:	4798      	blx	r3
    2bb0:	9002      	str	r0, [sp, #8]
    2bb2:	4e8c      	ldr	r6, [pc, #560]	; (2de4 <_Z17sofwareCorrectionv+0x32c>)
    2bb4:	4d95      	ldr	r5, [pc, #596]	; (2e0c <_Z17sofwareCorrectionv+0x354>)
    2bb6:	4b87      	ldr	r3, [pc, #540]	; (2dd4 <_Z17sofwareCorrectionv+0x31c>)
    2bb8:	469a      	mov	sl, r3
					//printf("correction need %d(%d)\r\n",(int)fcorr,nbwait);	
					if(fcorr<0){
						fcorr=-fcorr;
					}
					
					while((nbwait<1000)&&(fcorr<0.5)){
    2bba:	23fa      	movs	r3, #250	; 0xfa
    2bbc:	009b      	lsls	r3, r3, #2
    2bbe:	4699      	mov	r9, r3
    2bc0:	4b93      	ldr	r3, [pc, #588]	; (2e10 <_Z17sofwareCorrectionv+0x358>)
    2bc2:	469b      	mov	fp, r3
    2bc4:	9704      	str	r7, [sp, #16]
						fcorr=(float)((float)VALUE_TIMER*nbwait*offset*1.0)/(diffhms);
    2bc6:	1c20      	adds	r0, r4, #0
    2bc8:	47b0      	blx	r6
    2bca:	4992      	ldr	r1, [pc, #584]	; (2e14 <_Z17sofwareCorrectionv+0x35c>)
    2bcc:	47a8      	blx	r5
    2bce:	1c07      	adds	r7, r0, #0
    2bd0:	9804      	ldr	r0, [sp, #16]
    2bd2:	47b0      	blx	r6
    2bd4:	1c01      	adds	r1, r0, #0
    2bd6:	1c38      	adds	r0, r7, #0
    2bd8:	47a8      	blx	r5
    2bda:	9902      	ldr	r1, [sp, #8]
    2bdc:	47d0      	blx	sl
    2bde:	1c07      	adds	r7, r0, #0
						nbwait++;
    2be0:	3401      	adds	r4, #1
					//printf("correction need %d(%d)\r\n",(int)fcorr,nbwait);	
					if(fcorr<0){
						fcorr=-fcorr;
					}
					
					while((nbwait<1000)&&(fcorr<0.5)){
    2be2:	454c      	cmp	r4, r9
    2be4:	d009      	beq.n	2bfa <_Z17sofwareCorrectionv+0x142>
    2be6:	21fc      	movs	r1, #252	; 0xfc
    2be8:	0589      	lsls	r1, r1, #22
    2bea:	47d8      	blx	fp
    2bec:	2800      	cmp	r0, #0
    2bee:	d1ea      	bne.n	2bc6 <_Z17sofwareCorrectionv+0x10e>
    2bf0:	1c3a      	adds	r2, r7, #0
    2bf2:	e003      	b.n	2bfc <_Z17sofwareCorrectionv+0x144>
    2bf4:	2300      	movs	r3, #0
    2bf6:	1c1a      	adds	r2, r3, #0
    2bf8:	e000      	b.n	2bfc <_Z17sofwareCorrectionv+0x144>
    2bfa:	1c02      	adds	r2, r0, #0
					//fcorr=fcorr*RTC_FREQ;	
					

				//	printf("correction need %d/10(%d)\r\n",(int)fcorr*10,nbwait);			
					int i;
					timeProt.correction.moySoftCor[timeProt.correction.indiceMoySoftCor][0]=fcorr;
    2bfc:	4e70      	ldr	r6, [pc, #448]	; (2dc0 <_Z17sofwareCorrectionv+0x308>)
    2bfe:	23cc      	movs	r3, #204	; 0xcc
    2c00:	5cf5      	ldrb	r5, [r6, r3]
    2c02:	1c2b      	adds	r3, r5, #0
    2c04:	330f      	adds	r3, #15
    2c06:	00db      	lsls	r3, r3, #3
    2c08:	18f3      	adds	r3, r6, r3
    2c0a:	605a      	str	r2, [r3, #4]
					timeProt.correction.moySoftCor[timeProt.correction.indiceMoySoftCor][1]=nbwait;
    2c0c:	00eb      	lsls	r3, r5, #3
    2c0e:	18f6      	adds	r6, r6, r3
    2c10:	367c      	adds	r6, #124	; 0x7c
    2c12:	1c20      	adds	r0, r4, #0
    2c14:	4b73      	ldr	r3, [pc, #460]	; (2de4 <_Z17sofwareCorrectionv+0x32c>)
    2c16:	4798      	blx	r3
    2c18:	6070      	str	r0, [r6, #4]
					timeProt.correction.indiceMoySoftCor++;
    2c1a:	3501      	adds	r5, #1
    2c1c:	b2ed      	uxtb	r5, r5
					if(indice<MOYCORLENGTH){//if ze have enougth space to sqve the value
						indice++;
    2c1e:	2209      	movs	r2, #9
    2c20:	4643      	mov	r3, r8
    2c22:	0fd9      	lsrs	r1, r3, #31
    2c24:	17d3      	asrs	r3, r2, #31
    2c26:	4640      	mov	r0, r8
    2c28:	4282      	cmp	r2, r0
    2c2a:	414b      	adcs	r3, r1
    2c2c:	4498      	add	r8, r3
					}
					if(timeProt.correction.indiceMoySoftCor>indice){
    2c2e:	45a8      	cmp	r8, r5
    2c30:	db03      	blt.n	2c3a <_Z17sofwareCorrectionv+0x182>

				//	printf("correction need %d/10(%d)\r\n",(int)fcorr*10,nbwait);			
					int i;
					timeProt.correction.moySoftCor[timeProt.correction.indiceMoySoftCor][0]=fcorr;
					timeProt.correction.moySoftCor[timeProt.correction.indiceMoySoftCor][1]=nbwait;
					timeProt.correction.indiceMoySoftCor++;
    2c32:	23cc      	movs	r3, #204	; 0xcc
    2c34:	4a62      	ldr	r2, [pc, #392]	; (2dc0 <_Z17sofwareCorrectionv+0x308>)
    2c36:	54d5      	strb	r5, [r2, r3]
    2c38:	e003      	b.n	2c42 <_Z17sofwareCorrectionv+0x18a>
					if(indice<MOYCORLENGTH){//if ze have enougth space to sqve the value
						indice++;
					}
					if(timeProt.correction.indiceMoySoftCor>indice){
						timeProt.correction.indiceMoySoftCor=0;
    2c3a:	2100      	movs	r1, #0
    2c3c:	23cc      	movs	r3, #204	; 0xcc
    2c3e:	4a60      	ldr	r2, [pc, #384]	; (2dc0 <_Z17sofwareCorrectionv+0x308>)
    2c40:	54d1      	strb	r1, [r2, r3]
					}
					
					
					for(i=0;i<indice;i++){//go to the maximum value save
    2c42:	4643      	mov	r3, r8
    2c44:	2b00      	cmp	r3, #0
    2c46:	dd18      	ble.n	2c7a <_Z17sofwareCorrectionv+0x1c2>
    2c48:	4a5d      	ldr	r2, [pc, #372]	; (2dc0 <_Z17sofwareCorrectionv+0x308>)
    2c4a:	1c16      	adds	r6, r2, #0
    2c4c:	367c      	adds	r6, #124	; 0x7c
    2c4e:	00db      	lsls	r3, r3, #3
    2c50:	337c      	adds	r3, #124	; 0x7c
    2c52:	18d5      	adds	r5, r2, r3
    2c54:	2400      	movs	r4, #0
    2c56:	9402      	str	r4, [sp, #8]
						//	printf("i : %d, value : %d\r\n",i,(int)timeProt.correction.moySoftCor[i]);
							correctionSoft+=timeProt.correction.moySoftCor[i][0];
    2c58:	4f6f      	ldr	r7, [pc, #444]	; (2e18 <_Z17sofwareCorrectionv+0x360>)
    2c5a:	1c2b      	adds	r3, r5, #0
    2c5c:	1c25      	adds	r5, r4, #0
    2c5e:	1c1c      	adds	r4, r3, #0
    2c60:	9802      	ldr	r0, [sp, #8]
    2c62:	6831      	ldr	r1, [r6, #0]
    2c64:	47b8      	blx	r7
    2c66:	9002      	str	r0, [sp, #8]
							correctionTime+=timeProt.correction.moySoftCor[i][1];
    2c68:	1c28      	adds	r0, r5, #0
    2c6a:	6871      	ldr	r1, [r6, #4]
    2c6c:	47b8      	blx	r7
    2c6e:	1c05      	adds	r5, r0, #0
    2c70:	3608      	adds	r6, #8
					if(timeProt.correction.indiceMoySoftCor>indice){
						timeProt.correction.indiceMoySoftCor=0;
					}
					
					
					for(i=0;i<indice;i++){//go to the maximum value save
    2c72:	42a6      	cmp	r6, r4
    2c74:	d1f4      	bne.n	2c60 <_Z17sofwareCorrectionv+0x1a8>
    2c76:	1c04      	adds	r4, r0, #0
    2c78:	e001      	b.n	2c7e <_Z17sofwareCorrectionv+0x1c6>
			offset=-offset;
		}
		//printf("offset : %lu\r\n",offset);
		//printf("diffhms : %lu\r\n",diffhms);
		float correctionSoft=0.0;
		float correctionTime=0.0;
    2c7a:	2400      	movs	r4, #0
		{
			offset=-offset;
		}
		//printf("offset : %lu\r\n",offset);
		//printf("diffhms : %lu\r\n",diffhms);
		float correctionSoft=0.0;
    2c7c:	9402      	str	r4, [sp, #8]
							correctionSoft+=timeProt.correction.moySoftCor[i][0];
							correctionTime+=timeProt.correction.moySoftCor[i][1];
					}
				//	printf("sumCorr : %d",(int)correctionSoft);
					
					correctionSoft=(float)(1.0*correctionSoft)/(indice*1.0);//calcul the average value of the software correction 
    2c7e:	4640      	mov	r0, r8
    2c80:	4b66      	ldr	r3, [pc, #408]	; (2e1c <_Z17sofwareCorrectionv+0x364>)
    2c82:	4798      	blx	r3
    2c84:	9004      	str	r0, [sp, #16]
    2c86:	9105      	str	r1, [sp, #20]
    2c88:	4f58      	ldr	r7, [pc, #352]	; (2dec <_Z17sofwareCorrectionv+0x334>)
    2c8a:	9802      	ldr	r0, [sp, #8]
    2c8c:	47b8      	blx	r7
    2c8e:	4e64      	ldr	r6, [pc, #400]	; (2e20 <_Z17sofwareCorrectionv+0x368>)
    2c90:	9a04      	ldr	r2, [sp, #16]
    2c92:	9b05      	ldr	r3, [sp, #20]
    2c94:	47b0      	blx	r6
    2c96:	4d63      	ldr	r5, [pc, #396]	; (2e24 <_Z17sofwareCorrectionv+0x36c>)
    2c98:	47a8      	blx	r5
    2c9a:	9002      	str	r0, [sp, #8]
					correctionTime=(float)(1.0*correctionTime)/(indice*1.0);//calcul the average value of the software correction 
    2c9c:	1c20      	adds	r0, r4, #0
    2c9e:	47b8      	blx	r7
    2ca0:	9a04      	ldr	r2, [sp, #16]
    2ca2:	9b05      	ldr	r3, [sp, #20]
    2ca4:	47b0      	blx	r6
    2ca6:	47a8      	blx	r5
    2ca8:	9004      	str	r0, [sp, #16]
					corr=(int)correctionSoft;//cast to int
					corrTime=(int)correctionTime;//cast to int
    2caa:	4a4b      	ldr	r2, [pc, #300]	; (2dd8 <_Z17sofwareCorrectionv+0x320>)
    2cac:	4693      	mov	fp, r2
    2cae:	4790      	blx	r2
    2cb0:	1c04      	adds	r4, r0, #0
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    2cb2:	b672      	cpsid	i
    2cb4:	f3bf 8f5f 	dmb	sy
					Disable_global_interrupt();
    2cb8:	4d5b      	ldr	r5, [pc, #364]	; (2e28 <_Z17sofwareCorrectionv+0x370>)
    2cba:	2300      	movs	r3, #0
    2cbc:	702b      	strb	r3, [r5, #0]
					corr=valueCor+Coef_Software_Correction*(corr-valueCor);
    2cbe:	4f50      	ldr	r7, [pc, #320]	; (2e00 <_Z17sofwareCorrectionv+0x348>)
    2cc0:	683e      	ldr	r6, [r7, #0]
					}
				//	printf("sumCorr : %d",(int)correctionSoft);
					
					correctionSoft=(float)(1.0*correctionSoft)/(indice*1.0);//calcul the average value of the software correction 
					correctionTime=(float)(1.0*correctionTime)/(indice*1.0);//calcul the average value of the software correction 
					corr=(int)correctionSoft;//cast to int
    2cc2:	9802      	ldr	r0, [sp, #8]
    2cc4:	47d8      	blx	fp
					corrTime=(int)correctionTime;//cast to int
					Disable_global_interrupt();
					corr=valueCor+Coef_Software_Correction*(corr-valueCor);
    2cc6:	1b80      	subs	r0, r0, r6
    2cc8:	683f      	ldr	r7, [r7, #0]
    2cca:	19c7      	adds	r7, r0, r7
					Enable_global_interrupt();
    2ccc:	2301      	movs	r3, #1
    2cce:	702b      	strb	r3, [r5, #0]
    2cd0:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
    2cd4:	b662      	cpsie	i
					if(corr<0){
    2cd6:	2f00      	cmp	r7, #0
    2cd8:	da0e      	bge.n	2cf8 <_Z17sofwareCorrectionv+0x240>
							if(correctionSoft-corr<-0.5){//calculate int the most close to the real value
    2cda:	1c38      	adds	r0, r7, #0
    2cdc:	4b41      	ldr	r3, [pc, #260]	; (2de4 <_Z17sofwareCorrectionv+0x32c>)
    2cde:	4798      	blx	r3
    2ce0:	1c01      	adds	r1, r0, #0
    2ce2:	9802      	ldr	r0, [sp, #8]
    2ce4:	4b40      	ldr	r3, [pc, #256]	; (2de8 <_Z17sofwareCorrectionv+0x330>)
    2ce6:	4798      	blx	r3
    2ce8:	21bf      	movs	r1, #191	; 0xbf
    2cea:	0609      	lsls	r1, r1, #24
    2cec:	4b48      	ldr	r3, [pc, #288]	; (2e10 <_Z17sofwareCorrectionv+0x358>)
    2cee:	4798      	blx	r3
								corr--;
    2cf0:	1e43      	subs	r3, r0, #1
    2cf2:	4198      	sbcs	r0, r3
    2cf4:	1a3f      	subs	r7, r7, r0
    2cf6:	e00d      	b.n	2d14 <_Z17sofwareCorrectionv+0x25c>
							}
					//		printf("corr<0");
					}
					else{
							if(correctionSoft-corr>0.5){//calculate int the most close to the real value
    2cf8:	1c38      	adds	r0, r7, #0
    2cfa:	4b3a      	ldr	r3, [pc, #232]	; (2de4 <_Z17sofwareCorrectionv+0x32c>)
    2cfc:	4798      	blx	r3
    2cfe:	1c01      	adds	r1, r0, #0
    2d00:	9802      	ldr	r0, [sp, #8]
    2d02:	4b39      	ldr	r3, [pc, #228]	; (2de8 <_Z17sofwareCorrectionv+0x330>)
    2d04:	4798      	blx	r3
    2d06:	21fc      	movs	r1, #252	; 0xfc
    2d08:	0589      	lsls	r1, r1, #22
    2d0a:	4b48      	ldr	r3, [pc, #288]	; (2e2c <_Z17sofwareCorrectionv+0x374>)
    2d0c:	4798      	blx	r3
								corr++;
    2d0e:	1e43      	subs	r3, r0, #1
    2d10:	4198      	sbcs	r0, r3
    2d12:	183f      	adds	r7, r7, r0
							}
					//		printf("corr>0");
					}
					
					if(correctionTime-corrTime>0.5){//calculate int the most close to the real value
    2d14:	1c20      	adds	r0, r4, #0
    2d16:	4b33      	ldr	r3, [pc, #204]	; (2de4 <_Z17sofwareCorrectionv+0x32c>)
    2d18:	4798      	blx	r3
    2d1a:	1c01      	adds	r1, r0, #0
    2d1c:	9804      	ldr	r0, [sp, #16]
    2d1e:	4b32      	ldr	r3, [pc, #200]	; (2de8 <_Z17sofwareCorrectionv+0x330>)
    2d20:	4798      	blx	r3
    2d22:	21fc      	movs	r1, #252	; 0xfc
    2d24:	0589      	lsls	r1, r1, #22
    2d26:	4b41      	ldr	r3, [pc, #260]	; (2e2c <_Z17sofwareCorrectionv+0x374>)
    2d28:	4798      	blx	r3
						corrTime++;
    2d2a:	1e43      	subs	r3, r0, #1
    2d2c:	4198      	sbcs	r0, r3
    2d2e:	1824      	adds	r4, r4, r0
					}
					//	printf("moy : %d",(int)correctionSoft*1000);
					//	printf("corr: %u",corr);
					int pgcdi =pgcd(corrTime,corr);
    2d30:	1c20      	adds	r0, r4, #0
    2d32:	1c39      	adds	r1, r7, #0
    2d34:	4b3e      	ldr	r3, [pc, #248]	; (2e30 <_Z17sofwareCorrectionv+0x378>)
    2d36:	4798      	blx	r3
    2d38:	1c03      	adds	r3, r0, #0
					corrTime=corrTime/pgcdi;
    2d3a:	4a3e      	ldr	r2, [pc, #248]	; (2e34 <_Z17sofwareCorrectionv+0x37c>)
    2d3c:	4692      	mov	sl, r2
    2d3e:	1c20      	adds	r0, r4, #0
    2d40:	9302      	str	r3, [sp, #8]
    2d42:	1c19      	adds	r1, r3, #0
    2d44:	4790      	blx	r2
    2d46:	1c04      	adds	r4, r0, #0
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    2d48:	b672      	cpsid	i
    2d4a:	f3bf 8f5f 	dmb	sy
					corr=corr/pgcdi;
					Disable_global_interrupt();
    2d4e:	4a36      	ldr	r2, [pc, #216]	; (2e28 <_Z17sofwareCorrectionv+0x370>)
    2d50:	4691      	mov	r9, r2
    2d52:	2300      	movs	r3, #0
    2d54:	7013      	strb	r3, [r2, #0]
					
					valueCor=valueCor+Coef_Software_Correction*(corr-valueCor);
    2d56:	4d2a      	ldr	r5, [pc, #168]	; (2e00 <_Z17sofwareCorrectionv+0x348>)
    2d58:	682a      	ldr	r2, [r5, #0]
    2d5a:	4693      	mov	fp, r2
    2d5c:	682e      	ldr	r6, [r5, #0]
					}
					//	printf("moy : %d",(int)correctionSoft*1000);
					//	printf("corr: %u",corr);
					int pgcdi =pgcd(corrTime,corr);
					corrTime=corrTime/pgcdi;
					corr=corr/pgcdi;
    2d5e:	1c38      	adds	r0, r7, #0
    2d60:	9902      	ldr	r1, [sp, #8]
    2d62:	47d0      	blx	sl
					Disable_global_interrupt();
					
					valueCor=valueCor+Coef_Software_Correction*(corr-valueCor);
    2d64:	465b      	mov	r3, fp
    2d66:	1ac0      	subs	r0, r0, r3
    2d68:	1986      	adds	r6, r0, r6
    2d6a:	602e      	str	r6, [r5, #0]
					timeCorrection=corrTime;
    2d6c:	4b25      	ldr	r3, [pc, #148]	; (2e04 <_Z17sofwareCorrectionv+0x34c>)
    2d6e:	601c      	str	r4, [r3, #0]
					timeCorr=corrTime;
    2d70:	4b31      	ldr	r3, [pc, #196]	; (2e38 <_Z17sofwareCorrectionv+0x380>)
    2d72:	601c      	str	r4, [r3, #0]
					Enable_global_interrupt();
    2d74:	2301      	movs	r3, #1
    2d76:	464a      	mov	r2, r9
    2d78:	7013      	strb	r3, [r2, #0]
    2d7a:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
    2d7e:	b662      	cpsie	i
						
					
					timeProt.correction.indiceFull=indice;
    2d80:	33cc      	adds	r3, #204	; 0xcc
    2d82:	4a0f      	ldr	r2, [pc, #60]	; (2dc0 <_Z17sofwareCorrectionv+0x308>)
    2d84:	4641      	mov	r1, r8
    2d86:	54d1      	strb	r1, [r2, r3]
		}
			
		resetSofftwareCorrection();
    2d88:	4b2c      	ldr	r3, [pc, #176]	; (2e3c <_Z17sofwareCorrectionv+0x384>)
    2d8a:	4798      	blx	r3
		sprintf(messageHMICor,"		update time corr: %d(%d) sign : %d with %d sample",(int)valueCor,corrTime,averageOffset.sign,indice);
    2d8c:	4b1c      	ldr	r3, [pc, #112]	; (2e00 <_Z17sofwareCorrectionv+0x348>)
    2d8e:	681a      	ldr	r2, [r3, #0]
    2d90:	ab0a      	add	r3, sp, #40	; 0x28
    2d92:	7a1b      	ldrb	r3, [r3, #8]
    2d94:	4d2a      	ldr	r5, [pc, #168]	; (2e40 <_Z17sofwareCorrectionv+0x388>)
    2d96:	9300      	str	r3, [sp, #0]
    2d98:	4643      	mov	r3, r8
    2d9a:	9301      	str	r3, [sp, #4]
    2d9c:	1c28      	adds	r0, r5, #0
    2d9e:	4929      	ldr	r1, [pc, #164]	; (2e44 <_Z17sofwareCorrectionv+0x38c>)
    2da0:	1c23      	adds	r3, r4, #0
    2da2:	4c29      	ldr	r4, [pc, #164]	; (2e48 <_Z17sofwareCorrectionv+0x390>)
    2da4:	47a0      	blx	r4
		sendHMI(messageHMICor);
    2da6:	1c28      	adds	r0, r5, #0
    2da8:	4c07      	ldr	r4, [pc, #28]	; (2dc8 <_Z17sofwareCorrectionv+0x310>)
    2daa:	47a0      	blx	r4
		sendHMI("	end Software correction");
    2dac:	4827      	ldr	r0, [pc, #156]	; (2e4c <_Z17sofwareCorrectionv+0x394>)
    2dae:	47a0      	blx	r4
	}
	
}
    2db0:	b011      	add	sp, #68	; 0x44
    2db2:	bc3c      	pop	{r2, r3, r4, r5}
    2db4:	4690      	mov	r8, r2
    2db6:	4699      	mov	r9, r3
    2db8:	46a2      	mov	sl, r4
    2dba:	46ab      	mov	fp, r5
    2dbc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2dbe:	46c0      	nop			; (mov r8, r8)
    2dc0:	20004208 	.word	0x20004208
    2dc4:	0000e90c 	.word	0x0000e90c
    2dc8:	00003829 	.word	0x00003829
    2dcc:	20004134 	.word	0x20004134
    2dd0:	0000743d 	.word	0x0000743d
    2dd4:	00006a29 	.word	0x00006a29
    2dd8:	0000736d 	.word	0x0000736d
    2ddc:	000062ad 	.word	0x000062ad
    2de0:	000090a5 	.word	0x000090a5
    2de4:	000073ad 	.word	0x000073ad
    2de8:	00007071 	.word	0x00007071
    2dec:	00009109 	.word	0x00009109
    2df0:	40df4000 	.word	0x40df4000
    2df4:	00008399 	.word	0x00008399
    2df8:	000074cd 	.word	0x000074cd
    2dfc:	000066f5 	.word	0x000066f5
    2e00:	20003d44 	.word	0x20003d44
    2e04:	20003d1c 	.word	0x20003d1c
    2e08:	000003e7 	.word	0x000003e7
    2e0c:	00006e0d 	.word	0x00006e0d
    2e10:	00006651 	.word	0x00006651
    2e14:	43160000 	.word	0x43160000
    2e18:	00006731 	.word	0x00006731
    2e1c:	0000902d 	.word	0x0000902d
    2e20:	00007b1d 	.word	0x00007b1d
    2e24:	000091b1 	.word	0x000091b1
    2e28:	200000d0 	.word	0x200000d0
    2e2c:	00006679 	.word	0x00006679
    2e30:	00002a59 	.word	0x00002a59
    2e34:	000063cd 	.word	0x000063cd
    2e38:	20003d24 	.word	0x20003d24
    2e3c:	00002a9d 	.word	0x00002a9d
    2e40:	20004140 	.word	0x20004140
    2e44:	0000e924 	.word	0x0000e924
    2e48:	0000b08d 	.word	0x0000b08d
    2e4c:	0000e958 	.word	0x0000e958

00002e50 <_Z18hardwareCorrectionv>:
		timeProt.correction.nbCorrection=0;
		timeProt.correction.sumTime.second=0;
		timeProt.correction.sumTime.halfmillis=0;
		timeProt.correction.currentTimeOffsetSync.second=0;// to not take the first value
}
bool hardwareCorrection(void){
    2e50:	b5f0      	push	{r4, r5, r6, r7, lr}
    2e52:	b08b      	sub	sp, #44	; 0x2c
	if(timeProt.correction.nbCorrection!=0){
    2e54:	4b70      	ldr	r3, [pc, #448]	; (3018 <_Z18hardwareCorrectionv+0x1c8>)
    2e56:	6d1b      	ldr	r3, [r3, #80]	; 0x50
			sendHMI("	end correction");
			return false;
		}
		
	}
	return false;	
    2e58:	2000      	movs	r0, #0
		timeProt.correction.sumTime.second=0;
		timeProt.correction.sumTime.halfmillis=0;
		timeProt.correction.currentTimeOffsetSync.second=0;// to not take the first value
}
bool hardwareCorrection(void){
	if(timeProt.correction.nbCorrection!=0){
    2e5a:	2b00      	cmp	r3, #0
    2e5c:	d100      	bne.n	2e60 <_Z18hardwareCorrectionv+0x10>
    2e5e:	e0d9      	b.n	3014 <_Z18hardwareCorrectionv+0x1c4>
		sendHMI("	Hardware correction");
    2e60:	486e      	ldr	r0, [pc, #440]	; (301c <_Z18hardwareCorrectionv+0x1cc>)
    2e62:	4b6f      	ldr	r3, [pc, #444]	; (3020 <_Z18hardwareCorrectionv+0x1d0>)
    2e64:	4798      	blx	r3
		long int sumOffsetl;
		Clock averageTime={0,0,true};
    2e66:	af07      	add	r7, sp, #28
    2e68:	2300      	movs	r3, #0
    2e6a:	9307      	str	r3, [sp, #28]
    2e6c:	9308      	str	r3, [sp, #32]
    2e6e:	3301      	adds	r3, #1
    2e70:	723b      	strb	r3, [r7, #8]
		float second=(float)timeProt.correction.sumTime.second/timeProt.correction.nbCorrection;
    2e72:	4c69      	ldr	r4, [pc, #420]	; (3018 <_Z18hardwareCorrectionv+0x1c8>)
    2e74:	6f20      	ldr	r0, [r4, #112]	; 0x70
    2e76:	6d23      	ldr	r3, [r4, #80]	; 0x50
    2e78:	9303      	str	r3, [sp, #12]
    2e7a:	4e6a      	ldr	r6, [pc, #424]	; (3024 <_Z18hardwareCorrectionv+0x1d4>)
    2e7c:	47b0      	blx	r6
    2e7e:	1c05      	adds	r5, r0, #0
    2e80:	9803      	ldr	r0, [sp, #12]
    2e82:	47b0      	blx	r6
    2e84:	1c01      	adds	r1, r0, #0
    2e86:	1c28      	adds	r0, r5, #0
    2e88:	4b67      	ldr	r3, [pc, #412]	; (3028 <_Z18hardwareCorrectionv+0x1d8>)
    2e8a:	4798      	blx	r3
    2e8c:	1c05      	adds	r5, r0, #0
		int secondi=(int)second;
    2e8e:	4b67      	ldr	r3, [pc, #412]	; (302c <_Z18hardwareCorrectionv+0x1dc>)
    2e90:	4798      	blx	r3
    2e92:	1c06      	adds	r6, r0, #0
		//calcul average time
		//printf("second : %d,%d",secondi,(int)((second-secondi)*1000.0));
		
		averageTime.second=secondi;
    2e94:	9007      	str	r0, [sp, #28]
		averageTime.halfmillis=(timeProt.correction.sumTime.halfmillis/timeProt.correction.nbCorrection)+RTC_FREQ*1.0*((float)(second-secondi));
    2e96:	6f60      	ldr	r0, [r4, #116]	; 0x74
    2e98:	9903      	ldr	r1, [sp, #12]
    2e9a:	4b65      	ldr	r3, [pc, #404]	; (3030 <_Z18hardwareCorrectionv+0x1e0>)
    2e9c:	4798      	blx	r3
    2e9e:	4c65      	ldr	r4, [pc, #404]	; (3034 <_Z18hardwareCorrectionv+0x1e4>)
    2ea0:	47a0      	blx	r4
    2ea2:	9004      	str	r0, [sp, #16]
    2ea4:	9105      	str	r1, [sp, #20]
    2ea6:	1c30      	adds	r0, r6, #0
    2ea8:	4b63      	ldr	r3, [pc, #396]	; (3038 <_Z18hardwareCorrectionv+0x1e8>)
    2eaa:	4798      	blx	r3
    2eac:	1c01      	adds	r1, r0, #0
    2eae:	1c28      	adds	r0, r5, #0
    2eb0:	4b62      	ldr	r3, [pc, #392]	; (303c <_Z18hardwareCorrectionv+0x1ec>)
    2eb2:	4798      	blx	r3
    2eb4:	4b62      	ldr	r3, [pc, #392]	; (3040 <_Z18hardwareCorrectionv+0x1f0>)
    2eb6:	4798      	blx	r3
    2eb8:	2200      	movs	r2, #0
    2eba:	4b62      	ldr	r3, [pc, #392]	; (3044 <_Z18hardwareCorrectionv+0x1f4>)
    2ebc:	4d62      	ldr	r5, [pc, #392]	; (3048 <_Z18hardwareCorrectionv+0x1f8>)
    2ebe:	47a8      	blx	r5
    2ec0:	1c02      	adds	r2, r0, #0
    2ec2:	1c0b      	adds	r3, r1, #0
    2ec4:	9804      	ldr	r0, [sp, #16]
    2ec6:	9905      	ldr	r1, [sp, #20]
    2ec8:	4d60      	ldr	r5, [pc, #384]	; (304c <_Z18hardwareCorrectionv+0x1fc>)
    2eca:	47a8      	blx	r5
    2ecc:	4b60      	ldr	r3, [pc, #384]	; (3050 <_Z18hardwareCorrectionv+0x200>)
    2ece:	4798      	blx	r3
    2ed0:	6078      	str	r0, [r7, #4]
		unsigned long int averageTimeli=(averageTime.second*RTC_FREQ)+(averageTime.halfmillis);
    2ed2:	9b07      	ldr	r3, [sp, #28]
    2ed4:	687a      	ldr	r2, [r7, #4]
    2ed6:	26fa      	movs	r6, #250	; 0xfa
    2ed8:	01f6      	lsls	r6, r6, #7
    2eda:	4373      	muls	r3, r6
    2edc:	189f      	adds	r7, r3, r2
	
		//printf("averageTime : %lu\r\n",averageTime);
		float Fnow=(float)RTC_FREQ*1.0/count_set_period;
    2ede:	4b5d      	ldr	r3, [pc, #372]	; (3054 <_Z18hardwareCorrectionv+0x204>)
    2ee0:	6818      	ldr	r0, [r3, #0]
    2ee2:	47a0      	blx	r4
    2ee4:	1c02      	adds	r2, r0, #0
    2ee6:	1c0b      	adds	r3, r1, #0
    2ee8:	2000      	movs	r0, #0
    2eea:	4956      	ldr	r1, [pc, #344]	; (3044 <_Z18hardwareCorrectionv+0x1f4>)
    2eec:	4d5a      	ldr	r5, [pc, #360]	; (3058 <_Z18hardwareCorrectionv+0x208>)
    2eee:	47a8      	blx	r5
    2ef0:	4b5a      	ldr	r3, [pc, #360]	; (305c <_Z18hardwareCorrectionv+0x20c>)
    2ef2:	4798      	blx	r3
    2ef4:	9004      	str	r0, [sp, #16]
		float Fafter=0;
		//calcul of the sumOffset in ms

		sumOffsetl=(sumOffset.second*RTC_FREQ)+(sumOffset.halfmillis);
    2ef6:	4a5a      	ldr	r2, [pc, #360]	; (3060 <_Z18hardwareCorrectionv+0x210>)
    2ef8:	6810      	ldr	r0, [r2, #0]
    2efa:	6853      	ldr	r3, [r2, #4]
    2efc:	4370      	muls	r0, r6
    2efe:	18c0      	adds	r0, r0, r3
		if(sumOffset.sign!=true){
    2f00:	7a13      	ldrb	r3, [r2, #8]
    2f02:	2b00      	cmp	r3, #0
    2f04:	d100      	bne.n	2f08 <_Z18hardwareCorrectionv+0xb8>
			sumOffsetl=-sumOffsetl;
    2f06:	4240      	negs	r0, r0
		

		//printf("correction nb : %d",timeProt.correction.nbCorrection);
		//average per period of sync
		int nbcor=timeProt.correction.nbCorrection;
		sumOffsetl=sumOffsetl/nbcor;
    2f08:	9903      	ldr	r1, [sp, #12]
    2f0a:	4b56      	ldr	r3, [pc, #344]	; (3064 <_Z18hardwareCorrectionv+0x214>)
    2f0c:	4798      	blx	r3
		
		//printf("sumOffsetmoy :  %ld\r\n",sumOffset/2);
		sumOffsetl=sumOffsetl/(float)(averageTimeli/(RTC_FREQ*1.0));
    2f0e:	4d4a      	ldr	r5, [pc, #296]	; (3038 <_Z18hardwareCorrectionv+0x1e8>)
    2f10:	47a8      	blx	r5
    2f12:	1c06      	adds	r6, r0, #0
    2f14:	1c38      	adds	r0, r7, #0
    2f16:	4b47      	ldr	r3, [pc, #284]	; (3034 <_Z18hardwareCorrectionv+0x1e4>)
    2f18:	4798      	blx	r3
    2f1a:	2200      	movs	r2, #0
    2f1c:	4b49      	ldr	r3, [pc, #292]	; (3044 <_Z18hardwareCorrectionv+0x1f4>)
    2f1e:	4c4e      	ldr	r4, [pc, #312]	; (3058 <_Z18hardwareCorrectionv+0x208>)
    2f20:	47a0      	blx	r4
    2f22:	4b4e      	ldr	r3, [pc, #312]	; (305c <_Z18hardwareCorrectionv+0x20c>)
    2f24:	4798      	blx	r3
    2f26:	1c01      	adds	r1, r0, #0
    2f28:	4c3f      	ldr	r4, [pc, #252]	; (3028 <_Z18hardwareCorrectionv+0x1d8>)
    2f2a:	1c30      	adds	r0, r6, #0
    2f2c:	47a0      	blx	r4
    2f2e:	4b3f      	ldr	r3, [pc, #252]	; (302c <_Z18hardwareCorrectionv+0x1dc>)
    2f30:	4798      	blx	r3
		//printf("sumOffset/S :  %ld\r\n",sumOffset/2);
	

	
		//number of ms/tick
		float decPerPeriod=(float)sumOffsetl/(RTC_FREQ*1.0);
    2f32:	47a8      	blx	r5
    2f34:	494c      	ldr	r1, [pc, #304]	; (3068 <_Z18hardwareCorrectionv+0x218>)
    2f36:	47a0      	blx	r4
    2f38:	1c04      	adds	r4, r0, #0
		
		if(decPerPeriod<1.0){
    2f3a:	21fe      	movs	r1, #254	; 0xfe
    2f3c:	0589      	lsls	r1, r1, #22
    2f3e:	4b4b      	ldr	r3, [pc, #300]	; (306c <_Z18hardwareCorrectionv+0x21c>)
    2f40:	4798      	blx	r3
    2f42:	2800      	cmp	r0, #0
    2f44:	d00a      	beq.n	2f5c <_Z18hardwareCorrectionv+0x10c>
			Fafter=Fnow/(double)(1-decPerPeriod);
    2f46:	20fe      	movs	r0, #254	; 0xfe
    2f48:	0580      	lsls	r0, r0, #22
    2f4a:	1c21      	adds	r1, r4, #0
    2f4c:	4b3b      	ldr	r3, [pc, #236]	; (303c <_Z18hardwareCorrectionv+0x1ec>)
    2f4e:	4798      	blx	r3
    2f50:	1c01      	adds	r1, r0, #0
    2f52:	9804      	ldr	r0, [sp, #16]
    2f54:	4b34      	ldr	r3, [pc, #208]	; (3028 <_Z18hardwareCorrectionv+0x1d8>)
    2f56:	4798      	blx	r3
    2f58:	1c05      	adds	r5, r0, #0
    2f5a:	e009      	b.n	2f70 <_Z18hardwareCorrectionv+0x120>
		}
		else{
			Fafter=Fnow/(double)(1+decPerPeriod);
    2f5c:	1c20      	adds	r0, r4, #0
    2f5e:	21fe      	movs	r1, #254	; 0xfe
    2f60:	0589      	lsls	r1, r1, #22
    2f62:	4b43      	ldr	r3, [pc, #268]	; (3070 <_Z18hardwareCorrectionv+0x220>)
    2f64:	4798      	blx	r3
    2f66:	1c01      	adds	r1, r0, #0
    2f68:	9804      	ldr	r0, [sp, #16]
    2f6a:	4b2f      	ldr	r3, [pc, #188]	; (3028 <_Z18hardwareCorrectionv+0x1d8>)
    2f6c:	4798      	blx	r3
    2f6e:	1c05      	adds	r5, r0, #0
		}
		double dcount_set_period=32000/Fafter;
    2f70:	483d      	ldr	r0, [pc, #244]	; (3068 <_Z18hardwareCorrectionv+0x218>)
    2f72:	1c29      	adds	r1, r5, #0
    2f74:	4b2c      	ldr	r3, [pc, #176]	; (3028 <_Z18hardwareCorrectionv+0x1d8>)
    2f76:	4798      	blx	r3
    2f78:	1c06      	adds	r6, r0, #0
		unsigned int count;
		count=(int)dcount_set_period;
    2f7a:	4b2c      	ldr	r3, [pc, #176]	; (302c <_Z18hardwareCorrectionv+0x1dc>)
    2f7c:	4798      	blx	r3
    2f7e:	1c04      	adds	r4, r0, #0
			Fafter=Fnow/(double)(1-decPerPeriod);
		}
		else{
			Fafter=Fnow/(double)(1+decPerPeriod);
		}
		double dcount_set_period=32000/Fafter;
    2f80:	1c30      	adds	r0, r6, #0
    2f82:	4b2f      	ldr	r3, [pc, #188]	; (3040 <_Z18hardwareCorrectionv+0x1f0>)
    2f84:	4798      	blx	r3
    2f86:	1c06      	adds	r6, r0, #0
    2f88:	1c0f      	adds	r7, r1, #0
		unsigned int count;
		count=(int)dcount_set_period;
		if((dcount_set_period-count)>0.5){
    2f8a:	1c20      	adds	r0, r4, #0
    2f8c:	4b29      	ldr	r3, [pc, #164]	; (3034 <_Z18hardwareCorrectionv+0x1e4>)
    2f8e:	4798      	blx	r3
    2f90:	1c02      	adds	r2, r0, #0
    2f92:	1c0b      	adds	r3, r1, #0
    2f94:	1c30      	adds	r0, r6, #0
    2f96:	1c39      	adds	r1, r7, #0
    2f98:	4e36      	ldr	r6, [pc, #216]	; (3074 <_Z18hardwareCorrectionv+0x224>)
    2f9a:	47b0      	blx	r6
    2f9c:	2200      	movs	r2, #0
    2f9e:	4b36      	ldr	r3, [pc, #216]	; (3078 <_Z18hardwareCorrectionv+0x228>)
    2fa0:	4e36      	ldr	r6, [pc, #216]	; (307c <_Z18hardwareCorrectionv+0x22c>)
    2fa2:	47b0      	blx	r6
			count++;
    2fa4:	1e43      	subs	r3, r0, #1
    2fa6:	4198      	sbcs	r0, r3
    2fa8:	1824      	adds	r4, r4, r0
    2faa:	23fa      	movs	r3, #250	; 0xfa
    2fac:	01db      	lsls	r3, r3, #7
    2fae:	429c      	cmp	r4, r3
    2fb0:	d900      	bls.n	2fb4 <_Z18hardwareCorrectionv+0x164>
    2fb2:	1c1c      	adds	r4, r3, #0
		}
		if(count>RTC_FREQ){//never <1Hz of frequency
			count=RTC_FREQ;
		
		}
		if(count_set_period!=count){
    2fb4:	4b27      	ldr	r3, [pc, #156]	; (3054 <_Z18hardwareCorrectionv+0x204>)
    2fb6:	681b      	ldr	r3, [r3, #0]
    2fb8:	42a3      	cmp	r3, r4
    2fba:	d027      	beq.n	300c <_Z18hardwareCorrectionv+0x1bc>
			count_set_period=count;
    2fbc:	4e25      	ldr	r6, [pc, #148]	; (3054 <_Z18hardwareCorrectionv+0x204>)
    2fbe:	6034      	str	r4, [r6, #0]
			resetSofftwareCorrection();
    2fc0:	4b2f      	ldr	r3, [pc, #188]	; (3080 <_Z18hardwareCorrectionv+0x230>)
    2fc2:	4798      	blx	r3
			valueCor=0;
    2fc4:	2300      	movs	r3, #0
    2fc6:	4a2f      	ldr	r2, [pc, #188]	; (3084 <_Z18hardwareCorrectionv+0x234>)
    2fc8:	6013      	str	r3, [r2, #0]
			timeProt.correction.indiceFull=0;
    2fca:	4a13      	ldr	r2, [pc, #76]	; (3018 <_Z18hardwareCorrectionv+0x1c8>)
    2fcc:	21cd      	movs	r1, #205	; 0xcd
    2fce:	5453      	strb	r3, [r2, r1]
			timeProt.correction.indiceMoySoftCor=0;
    2fd0:	3901      	subs	r1, #1
    2fd2:	5453      	strb	r3, [r2, r1]
			//printf("count : %u",(unsigned int)count);
			//rtc_count_set_compare(&rtc_instance,VALUE_TIMER,RTC_COUNT_COMPARE_0 );
		//	rtc_count_set_period(&rtc_instance,count_set_period); //MOMO
			RTC->MODE0.COMP[0].reg = count_set_period;
    2fd4:	6832      	ldr	r2, [r6, #0]
    2fd6:	4b2c      	ldr	r3, [pc, #176]	; (3088 <_Z18hardwareCorrectionv+0x238>)
    2fd8:	619a      	str	r2, [r3, #24]
			unsigned int Fuse=(RTC_FREQ/count_set_period);
    2fda:	6837      	ldr	r7, [r6, #0]
			unsigned int Fbest=(int)Fafter;
		
			sprintf(messageHMICor,"		Fbest: %u Hz, Fuse= %u Hz count=%d",(unsigned int)Fbest,(unsigned int)Fuse,count);
    2fdc:	4e2b      	ldr	r6, [pc, #172]	; (308c <_Z18hardwareCorrectionv+0x23c>)
			//printf("count : %u",(unsigned int)count);
			//rtc_count_set_compare(&rtc_instance,VALUE_TIMER,RTC_COUNT_COMPARE_0 );
		//	rtc_count_set_period(&rtc_instance,count_set_period); //MOMO
			RTC->MODE0.COMP[0].reg = count_set_period;
			unsigned int Fuse=(RTC_FREQ/count_set_period);
			unsigned int Fbest=(int)Fafter;
    2fde:	1c28      	adds	r0, r5, #0
    2fe0:	4b12      	ldr	r3, [pc, #72]	; (302c <_Z18hardwareCorrectionv+0x1dc>)
    2fe2:	4798      	blx	r3
    2fe4:	1c05      	adds	r5, r0, #0
			timeProt.correction.indiceMoySoftCor=0;
			//printf("count : %u",(unsigned int)count);
			//rtc_count_set_compare(&rtc_instance,VALUE_TIMER,RTC_COUNT_COMPARE_0 );
		//	rtc_count_set_period(&rtc_instance,count_set_period); //MOMO
			RTC->MODE0.COMP[0].reg = count_set_period;
			unsigned int Fuse=(RTC_FREQ/count_set_period);
    2fe6:	20fa      	movs	r0, #250	; 0xfa
    2fe8:	01c0      	lsls	r0, r0, #7
    2fea:	1c39      	adds	r1, r7, #0
    2fec:	4b10      	ldr	r3, [pc, #64]	; (3030 <_Z18hardwareCorrectionv+0x1e0>)
    2fee:	4798      	blx	r3
    2ff0:	1c03      	adds	r3, r0, #0
			unsigned int Fbest=(int)Fafter;
		
			sprintf(messageHMICor,"		Fbest: %u Hz, Fuse= %u Hz count=%d",(unsigned int)Fbest,(unsigned int)Fuse,count);
    2ff2:	9400      	str	r4, [sp, #0]
    2ff4:	1c30      	adds	r0, r6, #0
    2ff6:	4926      	ldr	r1, [pc, #152]	; (3090 <_Z18hardwareCorrectionv+0x240>)
    2ff8:	1c2a      	adds	r2, r5, #0
    2ffa:	4c26      	ldr	r4, [pc, #152]	; (3094 <_Z18hardwareCorrectionv+0x244>)
    2ffc:	47a0      	blx	r4
			sendHMI(messageHMICor);
    2ffe:	1c30      	adds	r0, r6, #0
    3000:	4c07      	ldr	r4, [pc, #28]	; (3020 <_Z18hardwareCorrectionv+0x1d0>)
    3002:	47a0      	blx	r4
			sendHMI("	end correction");
    3004:	4824      	ldr	r0, [pc, #144]	; (3098 <_Z18hardwareCorrectionv+0x248>)
    3006:	47a0      	blx	r4
			return true;
    3008:	2001      	movs	r0, #1
    300a:	e003      	b.n	3014 <_Z18hardwareCorrectionv+0x1c4>
			
		}
		else{
	

			sendHMI("	end correction");
    300c:	4822      	ldr	r0, [pc, #136]	; (3098 <_Z18hardwareCorrectionv+0x248>)
    300e:	4b04      	ldr	r3, [pc, #16]	; (3020 <_Z18hardwareCorrectionv+0x1d0>)
    3010:	4798      	blx	r3
			return false;
    3012:	2000      	movs	r0, #0
		}
		
	}
	return false;	
}
    3014:	b00b      	add	sp, #44	; 0x2c
    3016:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3018:	20004208 	.word	0x20004208
    301c:	0000e974 	.word	0x0000e974
    3020:	00003829 	.word	0x00003829
    3024:	0000743d 	.word	0x0000743d
    3028:	00006a29 	.word	0x00006a29
    302c:	0000736d 	.word	0x0000736d
    3030:	000062ad 	.word	0x000062ad
    3034:	000090a5 	.word	0x000090a5
    3038:	000073ad 	.word	0x000073ad
    303c:	00007071 	.word	0x00007071
    3040:	00009109 	.word	0x00009109
    3044:	40df4000 	.word	0x40df4000
    3048:	00008399 	.word	0x00008399
    304c:	000074cd 	.word	0x000074cd
    3050:	000066f5 	.word	0x000066f5
    3054:	200000c8 	.word	0x200000c8
    3058:	00007b1d 	.word	0x00007b1d
    305c:	000091b1 	.word	0x000091b1
    3060:	20004134 	.word	0x20004134
    3064:	000063cd 	.word	0x000063cd
    3068:	46fa0000 	.word	0x46fa0000
    306c:	00006651 	.word	0x00006651
    3070:	00006731 	.word	0x00006731
    3074:	000088cd 	.word	0x000088cd
    3078:	3fe00000 	.word	0x3fe00000
    307c:	00006605 	.word	0x00006605
    3080:	00002a9d 	.word	0x00002a9d
    3084:	20003d44 	.word	0x20003d44
    3088:	40001400 	.word	0x40001400
    308c:	20004140 	.word	0x20004140
    3090:	0000e98c 	.word	0x0000e98c
    3094:	0000b08d 	.word	0x0000b08d
    3098:	0000e9b4 	.word	0x0000e9b4

0000309c <_Z10correctionv>:
#endif
/************************************************************************/
/* FUNCTION                                                             */
/************************************************************************/

void correction(void){
    309c:	b508      	push	{r3, lr}
	

	if(xTaskGetTickCount()-saveCorrection>(TIME_CORRECTION/portTICK_RATE_MS)){
    309e:	4b0c      	ldr	r3, [pc, #48]	; (30d0 <_Z10correctionv+0x34>)
    30a0:	4798      	blx	r3
    30a2:	4b0c      	ldr	r3, [pc, #48]	; (30d4 <_Z10correctionv+0x38>)
    30a4:	681b      	ldr	r3, [r3, #0]
    30a6:	1ac0      	subs	r0, r0, r3
    30a8:	23fa      	movs	r3, #250	; 0xfa
    30aa:	00db      	lsls	r3, r3, #3
    30ac:	4298      	cmp	r0, r3
    30ae:	d90d      	bls.n	30cc <_Z10correctionv+0x30>
			
			if(timeProt.correction.nbCorrection>2){
    30b0:	4b09      	ldr	r3, [pc, #36]	; (30d8 <_Z10correctionv+0x3c>)
    30b2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    30b4:	2b02      	cmp	r3, #2
    30b6:	d909      	bls.n	30cc <_Z10correctionv+0x30>
				saveCorrection=xTaskGetTickCount();
    30b8:	4b05      	ldr	r3, [pc, #20]	; (30d0 <_Z10correctionv+0x34>)
    30ba:	4798      	blx	r3
    30bc:	4b05      	ldr	r3, [pc, #20]	; (30d4 <_Z10correctionv+0x38>)
    30be:	6018      	str	r0, [r3, #0]
				if(!hardwareCorrection()){
    30c0:	4b06      	ldr	r3, [pc, #24]	; (30dc <_Z10correctionv+0x40>)
    30c2:	4798      	blx	r3
    30c4:	2800      	cmp	r0, #0
    30c6:	d101      	bne.n	30cc <_Z10correctionv+0x30>
					sofwareCorrection();
    30c8:	4b05      	ldr	r3, [pc, #20]	; (30e0 <_Z10correctionv+0x44>)
    30ca:	4798      	blx	r3
			}
			
		
	}
	
}
    30cc:	bd08      	pop	{r3, pc}
    30ce:	46c0      	nop			; (mov r8, r8)
    30d0:	00000965 	.word	0x00000965
    30d4:	20004064 	.word	0x20004064
    30d8:	20004208 	.word	0x20004208
    30dc:	00002e51 	.word	0x00002e51
    30e0:	00002ab9 	.word	0x00002ab9

000030e4 <_Z11updateClockv>:
			}
			else{
				pc.printf("-%lu s,%u\r\n",clock.second,(unsigned int)clock.halfmillis);
			}
}
void updateClock(void){
    30e4:	b5f0      	push	{r4, r5, r6, r7, lr}
    30e6:	4647      	mov	r7, r8
    30e8:	b480      	push	{r7}
    30ea:	b090      	sub	sp, #64	; 0x40
		Clock diff;
		if(timeProt.correction.previousSignOffset==timeProt.offset.sign){
    30ec:	4a57      	ldr	r2, [pc, #348]	; (324c <_Z11updateClockv+0x168>)
    30ee:	234c      	movs	r3, #76	; 0x4c
    30f0:	5cd3      	ldrb	r3, [r2, r3]
    30f2:	b2db      	uxtb	r3, r3
    30f4:	21ce      	movs	r1, #206	; 0xce
    30f6:	5c52      	ldrb	r2, [r2, r1]
    30f8:	429a      	cmp	r2, r3
    30fa:	d14e      	bne.n	319a <_Z11updateClockv+0xb6>
			timeProt.correction.previousSignOffset=timeProt.offset.sign;
    30fc:	4c53      	ldr	r4, [pc, #332]	; (324c <_Z11updateClockv+0x168>)
    30fe:	234c      	movs	r3, #76	; 0x4c
    3100:	5ce2      	ldrb	r2, [r4, r3]
    3102:	3382      	adds	r3, #130	; 0x82
    3104:	54e2      	strb	r2, [r4, r3]
			timeProt.correction.previoustimeOffset.second=timeProt.correction.currentTimeOffsetSync.second;
    3106:	6e63      	ldr	r3, [r4, #100]	; 0x64
    3108:	65a3      	str	r3, [r4, #88]	; 0x58
			timeProt.correction.previoustimeOffset.halfmillis=timeProt.correction.currentTimeOffsetSync.halfmillis;
    310a:	6ea3      	ldr	r3, [r4, #104]	; 0x68
    310c:	65e3      	str	r3, [r4, #92]	; 0x5c
			readClock(&timeProt.correction.currentTimeOffsetSync);
    310e:	1c20      	adds	r0, r4, #0
    3110:	3064      	adds	r0, #100	; 0x64
    3112:	4b4f      	ldr	r3, [pc, #316]	; (3250 <_Z11updateClockv+0x16c>)
    3114:	4798      	blx	r3
			if(timeProt.correction.previoustimeOffset.second!=0){
    3116:	6da3      	ldr	r3, [r4, #88]	; 0x58
    3118:	2b00      	cmp	r3, #0
    311a:	d040      	beq.n	319e <_Z11updateClockv+0xba>
				if(sup(timeProt.correction.currentTimeOffsetSync,timeProt.correction.previoustimeOffset)){
    311c:	4a4b      	ldr	r2, [pc, #300]	; (324c <_Z11updateClockv+0x168>)
    311e:	1c13      	adds	r3, r2, #0
    3120:	335c      	adds	r3, #92	; 0x5c
    3122:	4669      	mov	r1, sp
    3124:	cb11      	ldmia	r3!, {r0, r4}
    3126:	c111      	stmia	r1!, {r0, r4}
    3128:	6d93      	ldr	r3, [r2, #88]	; 0x58
    312a:	6e50      	ldr	r0, [r2, #100]	; 0x64
    312c:	6e91      	ldr	r1, [r2, #104]	; 0x68
    312e:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
    3130:	4c48      	ldr	r4, [pc, #288]	; (3254 <_Z11updateClockv+0x170>)
    3132:	47a0      	blx	r4
    3134:	2800      	cmp	r0, #0
    3136:	d02d      	beq.n	3194 <_Z11updateClockv+0xb0>
												
					diff=subClock(timeProt.correction.currentTimeOffsetSync,timeProt.correction.previoustimeOffset);
    3138:	ae0a      	add	r6, sp, #40	; 0x28
    313a:	4c44      	ldr	r4, [pc, #272]	; (324c <_Z11updateClockv+0x168>)
    313c:	1c23      	adds	r3, r4, #0
    313e:	3358      	adds	r3, #88	; 0x58
    3140:	466a      	mov	r2, sp
    3142:	cb23      	ldmia	r3!, {r0, r1, r5}
    3144:	c223      	stmia	r2!, {r0, r1, r5}
    3146:	1c30      	adds	r0, r6, #0
    3148:	6e61      	ldr	r1, [r4, #100]	; 0x64
    314a:	6ea2      	ldr	r2, [r4, #104]	; 0x68
    314c:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
    314e:	4d42      	ldr	r5, [pc, #264]	; (3258 <_Z11updateClockv+0x174>)
    3150:	47a8      	blx	r5
					//printf("diff: ");
					//printfClock(diff);
					timeProt.correction.sumTime=sumClock(timeProt.correction.sumTime,diff);
    3152:	ad06      	add	r5, sp, #24
    3154:	466b      	mov	r3, sp
    3156:	ce07      	ldmia	r6!, {r0, r1, r2}
    3158:	c307      	stmia	r3!, {r0, r1, r2}
    315a:	1c28      	adds	r0, r5, #0
    315c:	6f21      	ldr	r1, [r4, #112]	; 0x70
    315e:	6f62      	ldr	r2, [r4, #116]	; 0x74
    3160:	6fa3      	ldr	r3, [r4, #120]	; 0x78
    3162:	4e3e      	ldr	r6, [pc, #248]	; (325c <_Z11updateClockv+0x178>)
    3164:	46b0      	mov	r8, r6
    3166:	47b0      	blx	r6
    3168:	1c23      	adds	r3, r4, #0
    316a:	3370      	adds	r3, #112	; 0x70
    316c:	1c2a      	adds	r2, r5, #0
    316e:	ca43      	ldmia	r2!, {r0, r1, r6}
    3170:	c343      	stmia	r3!, {r0, r1, r6}
					sumOffset=sumClock(sumOffset,timeProt.offset);
    3172:	4e3b      	ldr	r6, [pc, #236]	; (3260 <_Z11updateClockv+0x17c>)
    3174:	1c23      	adds	r3, r4, #0
    3176:	3344      	adds	r3, #68	; 0x44
    3178:	466a      	mov	r2, sp
    317a:	cb83      	ldmia	r3!, {r0, r1, r7}
    317c:	c283      	stmia	r2!, {r0, r1, r7}
    317e:	1c28      	adds	r0, r5, #0
    3180:	6831      	ldr	r1, [r6, #0]
    3182:	6872      	ldr	r2, [r6, #4]
    3184:	68b3      	ldr	r3, [r6, #8]
    3186:	47c0      	blx	r8
    3188:	cd0e      	ldmia	r5!, {r1, r2, r3}
    318a:	c60e      	stmia	r6!, {r1, r2, r3}
					printf("sumClock: ");
					printfClock(timeProt.correction.sumTime);
					
					printf("nb corrr  : %d",timeProt.correction.nbCorrection);
					*/
					timeProt.correction.nbCorrection++;
    318c:	6d23      	ldr	r3, [r4, #80]	; 0x50
    318e:	3301      	adds	r3, #1
    3190:	6523      	str	r3, [r4, #80]	; 0x50
    3192:	e004      	b.n	319e <_Z11updateClockv+0xba>
				}
				else{
					resetSofftwareCorrection();
    3194:	4b33      	ldr	r3, [pc, #204]	; (3264 <_Z11updateClockv+0x180>)
    3196:	4798      	blx	r3
    3198:	e001      	b.n	319e <_Z11updateClockv+0xba>
				}
			}
		}
		else{
			resetSofftwareCorrection();
    319a:	4b32      	ldr	r3, [pc, #200]	; (3264 <_Z11updateClockv+0x180>)
    319c:	4798      	blx	r3
		}
		timeProt.correction.previousSignOffset=timeProt.offset.sign;
    319e:	4e2b      	ldr	r6, [pc, #172]	; (324c <_Z11updateClockv+0x168>)
    31a0:	234c      	movs	r3, #76	; 0x4c
    31a2:	4698      	mov	r8, r3
    31a4:	5cf2      	ldrb	r2, [r6, r3]
    31a6:	3382      	adds	r3, #130	; 0x82
    31a8:	54f2      	strb	r2, [r6, r3]
		Clock timeCopy;
		readClock(&timeCopy);
    31aa:	ad0d      	add	r5, sp, #52	; 0x34
    31ac:	1c28      	adds	r0, r5, #0
    31ae:	4b28      	ldr	r3, [pc, #160]	; (3250 <_Z11updateClockv+0x16c>)
    31b0:	4798      	blx	r3


		
		timeCopy=sumClock(timeCopy,timeProt.offset);//add offset
    31b2:	ac06      	add	r4, sp, #24
    31b4:	1c33      	adds	r3, r6, #0
    31b6:	3344      	adds	r3, #68	; 0x44
    31b8:	466a      	mov	r2, sp
    31ba:	cb83      	ldmia	r3!, {r0, r1, r7}
    31bc:	c283      	stmia	r2!, {r0, r1, r7}
    31be:	1c20      	adds	r0, r4, #0
    31c0:	990d      	ldr	r1, [sp, #52]	; 0x34
    31c2:	686a      	ldr	r2, [r5, #4]
    31c4:	68ab      	ldr	r3, [r5, #8]
    31c6:	4f25      	ldr	r7, [pc, #148]	; (325c <_Z11updateClockv+0x178>)
    31c8:	47b8      	blx	r7
    31ca:	1c23      	adds	r3, r4, #0
    31cc:	cb07      	ldmia	r3!, {r0, r1, r2}
    31ce:	c507      	stmia	r5!, {r0, r1, r2}
		writeClock(timeCopy);
    31d0:	980d      	ldr	r0, [sp, #52]	; 0x34
    31d2:	6861      	ldr	r1, [r4, #4]
    31d4:	68a2      	ldr	r2, [r4, #8]
    31d6:	4b24      	ldr	r3, [pc, #144]	; (3268 <_Z11updateClockv+0x184>)
    31d8:	4798      	blx	r3
		
		if(timeProt.offset.sign==true){
    31da:	4643      	mov	r3, r8
    31dc:	5cf3      	ldrb	r3, [r6, r3]
    31de:	2b00      	cmp	r3, #0
    31e0:	d016      	beq.n	3210 <_Z11updateClockv+0x12c>
			sprintf(messageHMIOffset,"		update clock offset: +%lus,%ld[+%lus,%lu ms,~%lu us]	t: %lu,%lu",timeProt.offset.second,(long unsigned int)timeProt.offset.halfmillis,timeProt.offset.second,timeProt.offset.halfmillis/32,(timeProt.offset.halfmillis%32)*31,timeCopy.second,timeCopy.halfmillis);
    31e2:	491a      	ldr	r1, [pc, #104]	; (324c <_Z11updateClockv+0x168>)
    31e4:	6c4a      	ldr	r2, [r1, #68]	; 0x44
    31e6:	6c8b      	ldr	r3, [r1, #72]	; 0x48
    31e8:	6c4e      	ldr	r6, [r1, #68]	; 0x44
    31ea:	6c88      	ldr	r0, [r1, #72]	; 0x48
    31ec:	6c89      	ldr	r1, [r1, #72]	; 0x48
    31ee:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    31f0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    31f2:	9600      	str	r6, [sp, #0]
    31f4:	0940      	lsrs	r0, r0, #5
    31f6:	9001      	str	r0, [sp, #4]
    31f8:	201f      	movs	r0, #31
    31fa:	4001      	ands	r1, r0
    31fc:	0148      	lsls	r0, r1, #5
    31fe:	1a41      	subs	r1, r0, r1
    3200:	9102      	str	r1, [sp, #8]
    3202:	9503      	str	r5, [sp, #12]
    3204:	9404      	str	r4, [sp, #16]
    3206:	4819      	ldr	r0, [pc, #100]	; (326c <_Z11updateClockv+0x188>)
    3208:	4919      	ldr	r1, [pc, #100]	; (3270 <_Z11updateClockv+0x18c>)
    320a:	4c1a      	ldr	r4, [pc, #104]	; (3274 <_Z11updateClockv+0x190>)
    320c:	47a0      	blx	r4
    320e:	e015      	b.n	323c <_Z11updateClockv+0x158>
		}
		else{
			sprintf(messageHMIOffset,"		update clock offset: -%lus,%ld[-%lus,%lums,~%lu us]	t: %lu,%lu",timeProt.offset.second,(long unsigned int)timeProt.offset.halfmillis,timeProt.offset.second,timeProt.offset.halfmillis/32,(timeProt.offset.halfmillis%32)*31,timeCopy.second,timeCopy.halfmillis);
    3210:	490e      	ldr	r1, [pc, #56]	; (324c <_Z11updateClockv+0x168>)
    3212:	6c4a      	ldr	r2, [r1, #68]	; 0x44
    3214:	6c8b      	ldr	r3, [r1, #72]	; 0x48
    3216:	6c4e      	ldr	r6, [r1, #68]	; 0x44
    3218:	6c88      	ldr	r0, [r1, #72]	; 0x48
    321a:	6c89      	ldr	r1, [r1, #72]	; 0x48
    321c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    321e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    3220:	9600      	str	r6, [sp, #0]
    3222:	0940      	lsrs	r0, r0, #5
    3224:	9001      	str	r0, [sp, #4]
    3226:	201f      	movs	r0, #31
    3228:	4001      	ands	r1, r0
    322a:	0148      	lsls	r0, r1, #5
    322c:	1a41      	subs	r1, r0, r1
    322e:	9102      	str	r1, [sp, #8]
    3230:	9503      	str	r5, [sp, #12]
    3232:	9404      	str	r4, [sp, #16]
    3234:	480d      	ldr	r0, [pc, #52]	; (326c <_Z11updateClockv+0x188>)
    3236:	4910      	ldr	r1, [pc, #64]	; (3278 <_Z11updateClockv+0x194>)
    3238:	4c0e      	ldr	r4, [pc, #56]	; (3274 <_Z11updateClockv+0x190>)
    323a:	47a0      	blx	r4
		}
		sendHMI(messageHMIOffset);
    323c:	480b      	ldr	r0, [pc, #44]	; (326c <_Z11updateClockv+0x188>)
    323e:	4b0f      	ldr	r3, [pc, #60]	; (327c <_Z11updateClockv+0x198>)
    3240:	4798      	blx	r3
}
    3242:	b010      	add	sp, #64	; 0x40
    3244:	bc04      	pop	{r2}
    3246:	4690      	mov	r8, r2
    3248:	bdf0      	pop	{r4, r5, r6, r7, pc}
    324a:	46c0      	nop			; (mov r8, r8)
    324c:	20004208 	.word	0x20004208
    3250:	00001391 	.word	0x00001391
    3254:	0000109d 	.word	0x0000109d
    3258:	0000110d 	.word	0x0000110d
    325c:	00001211 	.word	0x00001211
    3260:	20004134 	.word	0x20004134
    3264:	00002a9d 	.word	0x00002a9d
    3268:	000013f5 	.word	0x000013f5
    326c:	20004068 	.word	0x20004068
    3270:	0000e9dc 	.word	0x0000e9dc
    3274:	0000b08d 	.word	0x0000b08d
    3278:	0000ea20 	.word	0x0000ea20
    327c:	00003829 	.word	0x00003829

00003280 <_Z11calculCRCID8enumTypehPKhh>:

}
uint8_t calculCRC(const Type type,const uint8_t length,const uint8_t* data){
	return calculCRCID(type,length,data,IDDEVICE);
}
uint8_t calculCRCID(const Type type,const uint8_t length,const uint8_t* data,const uint8_t id){
    3280:	18cb      	adds	r3, r1, r3
	uint8_t crc;
	uint8_t i;
	crc=type+length+id;
    3282:	18c0      	adds	r0, r0, r3
    3284:	b2c0      	uxtb	r0, r0
	for(i=0;i<length;i++){
    3286:	2900      	cmp	r1, #0
    3288:	d00a      	beq.n	32a0 <_Z11calculCRCID8enumTypehPKhh+0x20>
    328a:	1c13      	adds	r3, r2, #0
    328c:	3901      	subs	r1, #1
    328e:	b2c9      	uxtb	r1, r1
    3290:	3101      	adds	r1, #1
    3292:	1852      	adds	r2, r2, r1
		crc=crc+data[i];
    3294:	7819      	ldrb	r1, [r3, #0]
    3296:	1840      	adds	r0, r0, r1
    3298:	b2c0      	uxtb	r0, r0
    329a:	3301      	adds	r3, #1
}
uint8_t calculCRCID(const Type type,const uint8_t length,const uint8_t* data,const uint8_t id){
	uint8_t crc;
	uint8_t i;
	crc=type+length+id;
	for(i=0;i<length;i++){
    329c:	4293      	cmp	r3, r2
    329e:	d1f9      	bne.n	3294 <_Z11calculCRCID8enumTypehPKhh+0x14>
		crc=crc+data[i];
	}
	
	return crc;
    32a0:	4770      	bx	lr
    32a2:	46c0      	nop			; (mov r8, r8)

000032a4 <_Z8receiverv>:
		else{
			sprintf(messageHMIOffset,"		update clock offset: -%lus,%ld[-%lus,%lums,~%lu us]	t: %lu,%lu",timeProt.offset.second,(long unsigned int)timeProt.offset.halfmillis,timeProt.offset.second,timeProt.offset.halfmillis/32,(timeProt.offset.halfmillis%32)*31,timeCopy.second,timeCopy.halfmillis);
		}
		sendHMI(messageHMIOffset);
}
void receiver(){
    32a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    32a6:	4647      	mov	r7, r8
    32a8:	b480      	push	{r7}
    32aa:	b0a4      	sub	sp, #144	; 0x90
			#ifdef SLAVEMODE
			Clock t2={0,0,true};
    32ac:	a909      	add	r1, sp, #36	; 0x24
    32ae:	2300      	movs	r3, #0
    32b0:	9309      	str	r3, [sp, #36]	; 0x24
    32b2:	930a      	str	r3, [sp, #40]	; 0x28
    32b4:	2201      	movs	r2, #1
    32b6:	720a      	strb	r2, [r1, #8]
			Clock t3={0,0,true};
    32b8:	a90c      	add	r1, sp, #48	; 0x30
    32ba:	930c      	str	r3, [sp, #48]	; 0x30
    32bc:	930d      	str	r3, [sp, #52]	; 0x34
    32be:	720a      	strb	r2, [r1, #8]
			Clock t2subt1={0,0,true};
    32c0:	a90f      	add	r1, sp, #60	; 0x3c
    32c2:	930f      	str	r3, [sp, #60]	; 0x3c
    32c4:	9310      	str	r3, [sp, #64]	; 0x40
    32c6:	720a      	strb	r2, [r1, #8]
			Clock t4subt3={0,0,true};
    32c8:	a912      	add	r1, sp, #72	; 0x48
    32ca:	9312      	str	r3, [sp, #72]	; 0x48
    32cc:	9313      	str	r3, [sp, #76]	; 0x4c
    32ce:	720a      	strb	r2, [r1, #8]
			Clock delayL={0,0,true};
    32d0:	a915      	add	r1, sp, #84	; 0x54
    32d2:	9315      	str	r3, [sp, #84]	; 0x54
    32d4:	9316      	str	r3, [sp, #88]	; 0x58
    32d6:	720a      	strb	r2, [r1, #8]
			Clock timeMaster={0,0,true};	
    32d8:	a918      	add	r1, sp, #96	; 0x60
    32da:	9318      	str	r3, [sp, #96]	; 0x60
    32dc:	9319      	str	r3, [sp, #100]	; 0x64
    32de:	720a      	strb	r2, [r1, #8]
			uint8_t i=0;
			#endif
			Data data;
		
			if(networkAvailable()){
    32e0:	4b97      	ldr	r3, [pc, #604]	; (3540 <_Z8receiverv+0x29c>)
    32e2:	4798      	blx	r3
    32e4:	2800      	cmp	r0, #0
    32e6:	d100      	bne.n	32ea <_Z8receiverv+0x46>
    32e8:	e126      	b.n	3538 <_Z8receiverv+0x294>
				vTaskDelay(100);
    32ea:	2064      	movs	r0, #100	; 0x64
    32ec:	4b95      	ldr	r3, [pc, #596]	; (3544 <_Z8receiverv+0x2a0>)
    32ee:	4798      	blx	r3
				if(networkRead()==HEADER){
    32f0:	4b95      	ldr	r3, [pc, #596]	; (3548 <_Z8receiverv+0x2a4>)
    32f2:	4798      	blx	r3
    32f4:	2855      	cmp	r0, #85	; 0x55
    32f6:	d000      	beq.n	32fa <_Z8receiverv+0x56>
    32f8:	e11e      	b.n	3538 <_Z8receiverv+0x294>
					data.id=networkRead();
    32fa:	4e93      	ldr	r6, [pc, #588]	; (3548 <_Z8receiverv+0x2a4>)
    32fc:	47b0      	blx	r6
    32fe:	1c05      	adds	r5, r0, #0
    3300:	ac1b      	add	r4, sp, #108	; 0x6c
    3302:	7060      	strb	r0, [r4, #1]
					data.type=(Type)networkRead();
    3304:	47b0      	blx	r6
    3306:	7020      	strb	r0, [r4, #0]
							switch (data.type){
    3308:	2803      	cmp	r0, #3
    330a:	d065      	beq.n	33d8 <_Z8receiverv+0x134>
    330c:	d802      	bhi.n	3314 <_Z8receiverv+0x70>
    330e:	2801      	cmp	r0, #1
    3310:	d004      	beq.n	331c <_Z8receiverv+0x78>
    3312:	e10c      	b.n	352e <_Z8receiverv+0x28a>
    3314:	2805      	cmp	r0, #5
    3316:	d800      	bhi.n	331a <_Z8receiverv+0x76>
    3318:	e10e      	b.n	3538 <_Z8receiverv+0x294>
    331a:	e108      	b.n	352e <_Z8receiverv+0x28a>
								#ifdef SLAVEMODE
									case SYNC:
										sendHMI("	sync receive");
    331c:	488b      	ldr	r0, [pc, #556]	; (354c <_Z8receiverv+0x2a8>)
    331e:	4b8c      	ldr	r3, [pc, #560]	; (3550 <_Z8receiverv+0x2ac>)
    3320:	4798      	blx	r3
										data.length=networkRead();
    3322:	4b89      	ldr	r3, [pc, #548]	; (3548 <_Z8receiverv+0x2a4>)
    3324:	4798      	blx	r3
    3326:	4680      	mov	r8, r0
    3328:	ab1b      	add	r3, sp, #108	; 0x6c
    332a:	7098      	strb	r0, [r3, #2]
										for(i=0;i<data.length;i++){
    332c:	2800      	cmp	r0, #0
    332e:	d00d      	beq.n	334c <_Z8receiverv+0xa8>
    3330:	246f      	movs	r4, #111	; 0x6f
    3332:	446c      	add	r4, sp
    3334:	1e46      	subs	r6, r0, #1
    3336:	b2f6      	uxtb	r6, r6
    3338:	ab24      	add	r3, sp, #144	; 0x90
    333a:	469c      	mov	ip, r3
    333c:	4466      	add	r6, ip
    333e:	3e20      	subs	r6, #32
											data.data[i]=networkRead();
    3340:	4f81      	ldr	r7, [pc, #516]	; (3548 <_Z8receiverv+0x2a4>)
    3342:	47b8      	blx	r7
    3344:	7020      	strb	r0, [r4, #0]
    3346:	3401      	adds	r4, #1
							switch (data.type){
								#ifdef SLAVEMODE
									case SYNC:
										sendHMI("	sync receive");
										data.length=networkRead();
										for(i=0;i<data.length;i++){
    3348:	42b4      	cmp	r4, r6
    334a:	d1fa      	bne.n	3342 <_Z8receiverv+0x9e>
											data.data[i]=networkRead();
										}
										data.crc=networkRead();
    334c:	4b7e      	ldr	r3, [pc, #504]	; (3548 <_Z8receiverv+0x2a4>)
    334e:	4798      	blx	r3
    3350:	1c04      	adds	r4, r0, #0
    3352:	2321      	movs	r3, #33	; 0x21
    3354:	aa1b      	add	r2, sp, #108	; 0x6c
    3356:	54d0      	strb	r0, [r2, r3]
										//networkFlush();
										if(calculCRCID(data.type,data.length,data.data,data.id)!=data.crc){
    3358:	2001      	movs	r0, #1
    335a:	4641      	mov	r1, r8
    335c:	226f      	movs	r2, #111	; 0x6f
    335e:	446a      	add	r2, sp
    3360:	1c2b      	adds	r3, r5, #0
    3362:	4d7c      	ldr	r5, [pc, #496]	; (3554 <_Z8receiverv+0x2b0>)
    3364:	47a8      	blx	r5
    3366:	4284      	cmp	r4, r0
    3368:	d003      	beq.n	3372 <_Z8receiverv+0xce>
											
											sendHMI("erreur crc");
    336a:	487b      	ldr	r0, [pc, #492]	; (3558 <_Z8receiverv+0x2b4>)
    336c:	4b78      	ldr	r3, [pc, #480]	; (3550 <_Z8receiverv+0x2ac>)
    336e:	4798      	blx	r3
											return;
    3370:	e0e2      	b.n	3538 <_Z8receiverv+0x294>
										}
										else{	
											timeMaster.second=data.data[0]|(data.data[1]<<8);
    3372:	ab1b      	add	r3, sp, #108	; 0x6c
    3374:	791a      	ldrb	r2, [r3, #4]
    3376:	0211      	lsls	r1, r2, #8
    3378:	78da      	ldrb	r2, [r3, #3]
    337a:	430a      	orrs	r2, r1
    337c:	ae18      	add	r6, sp, #96	; 0x60
    337e:	9218      	str	r2, [sp, #96]	; 0x60
											timeMaster.halfmillis=data.data[2]|(data.data[3]<<8);
    3380:	799a      	ldrb	r2, [r3, #6]
    3382:	0212      	lsls	r2, r2, #8
    3384:	795b      	ldrb	r3, [r3, #5]
    3386:	4313      	orrs	r3, r2
    3388:	9319      	str	r3, [sp, #100]	; 0x64
											timeMaster=sumClock(timeMaster,timeProt.delay);
    338a:	ac04      	add	r4, sp, #16
    338c:	4d73      	ldr	r5, [pc, #460]	; (355c <_Z8receiverv+0x2b8>)
    338e:	1c2b      	adds	r3, r5, #0
    3390:	3334      	adds	r3, #52	; 0x34
    3392:	466a      	mov	r2, sp
    3394:	cb83      	ldmia	r3!, {r0, r1, r7}
    3396:	c283      	stmia	r2!, {r0, r1, r7}
    3398:	1c20      	adds	r0, r4, #0
    339a:	9918      	ldr	r1, [sp, #96]	; 0x60
    339c:	9a19      	ldr	r2, [sp, #100]	; 0x64
    339e:	9b1a      	ldr	r3, [sp, #104]	; 0x68
    33a0:	4f6f      	ldr	r7, [pc, #444]	; (3560 <_Z8receiverv+0x2bc>)
    33a2:	47b8      	blx	r7
    33a4:	1c23      	adds	r3, r4, #0
    33a6:	cb07      	ldmia	r3!, {r0, r1, r2}
    33a8:	c607      	stmia	r6!, {r0, r1, r2}
											timeProt.offset=subClock(timeMaster,timeProt.rxSync);//on calcul le temps de calcul
    33aa:	1c2b      	adds	r3, r5, #0
    33ac:	330c      	adds	r3, #12
    33ae:	466a      	mov	r2, sp
    33b0:	cb43      	ldmia	r3!, {r0, r1, r6}
    33b2:	c243      	stmia	r2!, {r0, r1, r6}
    33b4:	1c20      	adds	r0, r4, #0
    33b6:	9918      	ldr	r1, [sp, #96]	; 0x60
    33b8:	6862      	ldr	r2, [r4, #4]
    33ba:	68a3      	ldr	r3, [r4, #8]
    33bc:	4e69      	ldr	r6, [pc, #420]	; (3564 <_Z8receiverv+0x2c0>)
    33be:	47b0      	blx	r6
    33c0:	1c2b      	adds	r3, r5, #0
    33c2:	3344      	adds	r3, #68	; 0x44
    33c4:	cc07      	ldmia	r4!, {r0, r1, r2}
    33c6:	c307      	stmia	r3!, {r0, r1, r2}
											updateClock();
    33c8:	4b67      	ldr	r3, [pc, #412]	; (3568 <_Z8receiverv+0x2c4>)
    33ca:	4798      	blx	r3
											sendHMI("	sync completed");
    33cc:	4867      	ldr	r0, [pc, #412]	; (356c <_Z8receiverv+0x2c8>)
    33ce:	4b60      	ldr	r3, [pc, #384]	; (3550 <_Z8receiverv+0x2ac>)
    33d0:	4798      	blx	r3
											networkFlush();
    33d2:	4b67      	ldr	r3, [pc, #412]	; (3570 <_Z8receiverv+0x2cc>)
    33d4:	4798      	blx	r3

										}
									break;
    33d6:	e0af      	b.n	3538 <_Z8receiverv+0x294>
									case DELAYRESPONSE:
										data.length=networkRead();
    33d8:	4b5b      	ldr	r3, [pc, #364]	; (3548 <_Z8receiverv+0x2a4>)
    33da:	4798      	blx	r3
    33dc:	4680      	mov	r8, r0
    33de:	ab1b      	add	r3, sp, #108	; 0x6c
    33e0:	7098      	strb	r0, [r3, #2]
										for(i=0;i<data.length;i++){
    33e2:	2800      	cmp	r0, #0
    33e4:	d00d      	beq.n	3402 <_Z8receiverv+0x15e>
    33e6:	246f      	movs	r4, #111	; 0x6f
    33e8:	446c      	add	r4, sp
    33ea:	1e46      	subs	r6, r0, #1
    33ec:	b2f6      	uxtb	r6, r6
    33ee:	ab24      	add	r3, sp, #144	; 0x90
    33f0:	469c      	mov	ip, r3
    33f2:	4466      	add	r6, ip
    33f4:	3e20      	subs	r6, #32
											data.data[i]=networkRead();
    33f6:	4f54      	ldr	r7, [pc, #336]	; (3548 <_Z8receiverv+0x2a4>)
    33f8:	47b8      	blx	r7
    33fa:	7020      	strb	r0, [r4, #0]
    33fc:	3401      	adds	r4, #1

										}
									break;
									case DELAYRESPONSE:
										data.length=networkRead();
										for(i=0;i<data.length;i++){
    33fe:	42b4      	cmp	r4, r6
    3400:	d1fa      	bne.n	33f8 <_Z8receiverv+0x154>
											data.data[i]=networkRead();
										}
										data.crc=networkRead();
    3402:	4b51      	ldr	r3, [pc, #324]	; (3548 <_Z8receiverv+0x2a4>)
    3404:	4798      	blx	r3
    3406:	1c04      	adds	r4, r0, #0
    3408:	2321      	movs	r3, #33	; 0x21
    340a:	aa1b      	add	r2, sp, #108	; 0x6c
    340c:	54d0      	strb	r0, [r2, r3]
										//networkFlush();
										if(calculCRCID(data.type,data.length,data.data,data.id)!=data.crc){
    340e:	2003      	movs	r0, #3
    3410:	4641      	mov	r1, r8
    3412:	226f      	movs	r2, #111	; 0x6f
    3414:	446a      	add	r2, sp
    3416:	1c2b      	adds	r3, r5, #0
    3418:	4d4e      	ldr	r5, [pc, #312]	; (3554 <_Z8receiverv+0x2b0>)
    341a:	47a8      	blx	r5
    341c:	4284      	cmp	r4, r0
    341e:	d005      	beq.n	342c <_Z8receiverv+0x188>
											networkFlush();
    3420:	4b53      	ldr	r3, [pc, #332]	; (3570 <_Z8receiverv+0x2cc>)
    3422:	4798      	blx	r3
											sendHMI("erreur crc");
    3424:	484c      	ldr	r0, [pc, #304]	; (3558 <_Z8receiverv+0x2b4>)
    3426:	4b4a      	ldr	r3, [pc, #296]	; (3550 <_Z8receiverv+0x2ac>)
    3428:	4798      	blx	r3
											return;
    342a:	e085      	b.n	3538 <_Z8receiverv+0x294>
										}
										sendHMI("	delay response receive");
    342c:	4851      	ldr	r0, [pc, #324]	; (3574 <_Z8receiverv+0x2d0>)
    342e:	4b48      	ldr	r3, [pc, #288]	; (3550 <_Z8receiverv+0x2ac>)
    3430:	4798      	blx	r3

										if(data.data[0]==IDDEVICE){
    3432:	ab1b      	add	r3, sp, #108	; 0x6c
    3434:	78db      	ldrb	r3, [r3, #3]
    3436:	2b02      	cmp	r3, #2
    3438:	d175      	bne.n	3526 <_Z8receiverv+0x282>
											//time receive master
											t2.second=data.data[1]|(data.data[2]<<8);
    343a:	ab1b      	add	r3, sp, #108	; 0x6c
    343c:	795a      	ldrb	r2, [r3, #5]
    343e:	0211      	lsls	r1, r2, #8
    3440:	791a      	ldrb	r2, [r3, #4]
    3442:	430a      	orrs	r2, r1
    3444:	9209      	str	r2, [sp, #36]	; 0x24
											t2.halfmillis=data.data[3]|(data.data[4]<<8);
    3446:	79da      	ldrb	r2, [r3, #7]
    3448:	0211      	lsls	r1, r2, #8
    344a:	799a      	ldrb	r2, [r3, #6]
    344c:	430a      	orrs	r2, r1
    344e:	920a      	str	r2, [sp, #40]	; 0x28
											//time send master
											t3.second=data.data[5]|(data.data[6]<<8);
    3450:	7a5a      	ldrb	r2, [r3, #9]
    3452:	0211      	lsls	r1, r2, #8
    3454:	7a1a      	ldrb	r2, [r3, #8]
    3456:	430a      	orrs	r2, r1
    3458:	ae0c      	add	r6, sp, #48	; 0x30
    345a:	920c      	str	r2, [sp, #48]	; 0x30
											t3.halfmillis=data.data[7]|(data.data[8]<<8);
    345c:	7ada      	ldrb	r2, [r3, #11]
    345e:	0212      	lsls	r2, r2, #8
    3460:	7a9b      	ldrb	r3, [r3, #10]
    3462:	4313      	orrs	r3, r2
    3464:	930d      	str	r3, [sp, #52]	; 0x34
											t2subt1=subClock(t2,timeProt.tx);
    3466:	4c3d      	ldr	r4, [pc, #244]	; (355c <_Z8receiverv+0x2b8>)
    3468:	466b      	mov	r3, sp
    346a:	1c22      	adds	r2, r4, #0
    346c:	ca23      	ldmia	r2!, {r0, r1, r5}
    346e:	c323      	stmia	r3!, {r0, r1, r5}
    3470:	a80f      	add	r0, sp, #60	; 0x3c
    3472:	9909      	ldr	r1, [sp, #36]	; 0x24
    3474:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    3476:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    3478:	4f3a      	ldr	r7, [pc, #232]	; (3564 <_Z8receiverv+0x2c0>)
    347a:	47b8      	blx	r7
											t4subt3=subClock(timeProt.rxDelay,t3);
    347c:	ad12      	add	r5, sp, #72	; 0x48
    347e:	466b      	mov	r3, sp
    3480:	ce07      	ldmia	r6!, {r0, r1, r2}
    3482:	c307      	stmia	r3!, {r0, r1, r2}
    3484:	1c28      	adds	r0, r5, #0
    3486:	69a1      	ldr	r1, [r4, #24]
    3488:	69e2      	ldr	r2, [r4, #28]
    348a:	6a23      	ldr	r3, [r4, #32]
    348c:	47b8      	blx	r7

								
											delayL=sumClock(t2subt1,t4subt3);									
    348e:	466b      	mov	r3, sp
    3490:	1c2a      	adds	r2, r5, #0
    3492:	ca43      	ldmia	r2!, {r0, r1, r6}
    3494:	c343      	stmia	r3!, {r0, r1, r6}
    3496:	a815      	add	r0, sp, #84	; 0x54
    3498:	990f      	ldr	r1, [sp, #60]	; 0x3c
    349a:	9a10      	ldr	r2, [sp, #64]	; 0x40
    349c:	9b11      	ldr	r3, [sp, #68]	; 0x44
    349e:	4e30      	ldr	r6, [pc, #192]	; (3560 <_Z8receiverv+0x2bc>)
    34a0:	47b0      	blx	r6
											timeProt.delay.second=delayL.second/2;
    34a2:	9b15      	ldr	r3, [sp, #84]	; 0x54
    34a4:	085b      	lsrs	r3, r3, #1
    34a6:	6363      	str	r3, [r4, #52]	; 0x34
											timeProt.delay.halfmillis=delayL.halfmillis/2;
    34a8:	9b16      	ldr	r3, [sp, #88]	; 0x58
    34aa:	085b      	lsrs	r3, r3, #1
    34ac:	63a3      	str	r3, [r4, #56]	; 0x38
											timeProt.offset=subClock(t2subt1,t4subt3);
    34ae:	ae04      	add	r6, sp, #16
    34b0:	466b      	mov	r3, sp
    34b2:	cd07      	ldmia	r5!, {r0, r1, r2}
    34b4:	c307      	stmia	r3!, {r0, r1, r2}
    34b6:	1c30      	adds	r0, r6, #0
    34b8:	990f      	ldr	r1, [sp, #60]	; 0x3c
    34ba:	9a10      	ldr	r2, [sp, #64]	; 0x40
    34bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
    34be:	47b8      	blx	r7
    34c0:	1c23      	adds	r3, r4, #0
    34c2:	3344      	adds	r3, #68	; 0x44
    34c4:	ce07      	ldmia	r6!, {r0, r1, r2}
    34c6:	c307      	stmia	r3!, {r0, r1, r2}
											timeProt.offset.second=timeProt.offset.second/2;
    34c8:	6c63      	ldr	r3, [r4, #68]	; 0x44
    34ca:	085b      	lsrs	r3, r3, #1
    34cc:	6463      	str	r3, [r4, #68]	; 0x44
											timeProt.offset.halfmillis=timeProt.offset.halfmillis/2;
    34ce:	6ca3      	ldr	r3, [r4, #72]	; 0x48
    34d0:	085b      	lsrs	r3, r3, #1
    34d2:	64a3      	str	r3, [r4, #72]	; 0x48
											updateClock();
    34d4:	4b24      	ldr	r3, [pc, #144]	; (3568 <_Z8receiverv+0x2c4>)
    34d6:	4798      	blx	r3
											
											if(timeProt.delay.sign==true){
    34d8:	233c      	movs	r3, #60	; 0x3c
    34da:	5ce3      	ldrb	r3, [r4, r3]
    34dc:	2b00      	cmp	r3, #0
    34de:	d00d      	beq.n	34fc <_Z8receiverv+0x258>
												sprintf(messageHMIDelay,"		update delay: +%lus,%u ms,~%lu us",timeProt.delay.second,timeProt.delay.halfmillis/32,(timeProt.delay.halfmillis%32)*31);
    34e0:	491e      	ldr	r1, [pc, #120]	; (355c <_Z8receiverv+0x2b8>)
    34e2:	6b4a      	ldr	r2, [r1, #52]	; 0x34
    34e4:	6b8b      	ldr	r3, [r1, #56]	; 0x38
    34e6:	6b88      	ldr	r0, [r1, #56]	; 0x38
    34e8:	095b      	lsrs	r3, r3, #5
    34ea:	211f      	movs	r1, #31
    34ec:	4008      	ands	r0, r1
    34ee:	4341      	muls	r1, r0
    34f0:	9100      	str	r1, [sp, #0]
    34f2:	4821      	ldr	r0, [pc, #132]	; (3578 <_Z8receiverv+0x2d4>)
    34f4:	4921      	ldr	r1, [pc, #132]	; (357c <_Z8receiverv+0x2d8>)
    34f6:	4c22      	ldr	r4, [pc, #136]	; (3580 <_Z8receiverv+0x2dc>)
    34f8:	47a0      	blx	r4
    34fa:	e00c      	b.n	3516 <_Z8receiverv+0x272>
											}
											else{
												sprintf(messageHMIDelay,"		update delay: -%lus,%u ms,~%lu us",timeProt.delay.second,timeProt.delay.halfmillis/32,(timeProt.delay.halfmillis%32)*31);
    34fc:	4917      	ldr	r1, [pc, #92]	; (355c <_Z8receiverv+0x2b8>)
    34fe:	6b4a      	ldr	r2, [r1, #52]	; 0x34
    3500:	6b8b      	ldr	r3, [r1, #56]	; 0x38
    3502:	6b88      	ldr	r0, [r1, #56]	; 0x38
    3504:	095b      	lsrs	r3, r3, #5
    3506:	211f      	movs	r1, #31
    3508:	4008      	ands	r0, r1
    350a:	4341      	muls	r1, r0
    350c:	9100      	str	r1, [sp, #0]
    350e:	481a      	ldr	r0, [pc, #104]	; (3578 <_Z8receiverv+0x2d4>)
    3510:	491c      	ldr	r1, [pc, #112]	; (3584 <_Z8receiverv+0x2e0>)
    3512:	4c1b      	ldr	r4, [pc, #108]	; (3580 <_Z8receiverv+0x2dc>)
    3514:	47a0      	blx	r4
											}
											sendHMI(messageHMIDelay);
    3516:	4818      	ldr	r0, [pc, #96]	; (3578 <_Z8receiverv+0x2d4>)
    3518:	4c0d      	ldr	r4, [pc, #52]	; (3550 <_Z8receiverv+0x2ac>)
    351a:	47a0      	blx	r4
											networkFlush();
    351c:	4b14      	ldr	r3, [pc, #80]	; (3570 <_Z8receiverv+0x2cc>)
    351e:	4798      	blx	r3
											sendHMI("	delay response completed");
    3520:	4819      	ldr	r0, [pc, #100]	; (3588 <_Z8receiverv+0x2e4>)
    3522:	47a0      	blx	r4
    3524:	e008      	b.n	3538 <_Z8receiverv+0x294>
										}
										else{
											sendHMI("	delay response not for me");	
    3526:	4819      	ldr	r0, [pc, #100]	; (358c <_Z8receiverv+0x2e8>)
    3528:	4b09      	ldr	r3, [pc, #36]	; (3550 <_Z8receiverv+0x2ac>)
    352a:	4798      	blx	r3
    352c:	e004      	b.n	3538 <_Z8receiverv+0x294>
										
										
									break;
								#endif
								default:
									sendHMI("	Erreur type unknow");
    352e:	4818      	ldr	r0, [pc, #96]	; (3590 <_Z8receiverv+0x2ec>)
    3530:	4b07      	ldr	r3, [pc, #28]	; (3550 <_Z8receiverv+0x2ac>)
    3532:	4798      	blx	r3
									networkFlush();	
    3534:	4b0e      	ldr	r3, [pc, #56]	; (3570 <_Z8receiverv+0x2cc>)
    3536:	4798      	blx	r3
									
							}		
				}
				
			}		
}
    3538:	b024      	add	sp, #144	; 0x90
    353a:	bc04      	pop	{r2}
    353c:	4690      	mov	r8, r2
    353e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3540:	000017e5 	.word	0x000017e5
    3544:	00000b99 	.word	0x00000b99
    3548:	00001841 	.word	0x00001841
    354c:	0000ea64 	.word	0x0000ea64
    3550:	00003829 	.word	0x00003829
    3554:	00003281 	.word	0x00003281
    3558:	0000ea74 	.word	0x0000ea74
    355c:	20004208 	.word	0x20004208
    3560:	00001211 	.word	0x00001211
    3564:	0000110d 	.word	0x0000110d
    3568:	000030e5 	.word	0x000030e5
    356c:	0000ea80 	.word	0x0000ea80
    3570:	000017fd 	.word	0x000017fd
    3574:	0000ea90 	.word	0x0000ea90
    3578:	200042d8 	.word	0x200042d8
    357c:	0000eaa8 	.word	0x0000eaa8
    3580:	0000b08d 	.word	0x0000b08d
    3584:	0000eacc 	.word	0x0000eacc
    3588:	0000eaf0 	.word	0x0000eaf0
    358c:	0000eb0c 	.word	0x0000eb0c
    3590:	0000eb28 	.word	0x0000eb28

00003594 <_Z9calculCRC8enumTypehPKh>:
		send[3+i+j]=calculCRC(type,length,data);

		networkTx(send,length+4+j);

}
uint8_t calculCRC(const Type type,const uint8_t length,const uint8_t* data){
    3594:	b510      	push	{r4, lr}
	return calculCRCID(type,length,data,IDDEVICE);
    3596:	2302      	movs	r3, #2
    3598:	4c01      	ldr	r4, [pc, #4]	; (35a0 <_Z9calculCRC8enumTypehPKh+0xc>)
    359a:	47a0      	blx	r4
}
    359c:	bd10      	pop	{r4, pc}
    359e:	46c0      	nop			; (mov r8, r8)
    35a0:	00003281 	.word	0x00003281

000035a4 <_Z4send8enumTypehPKh>:

	
	sendHMI("	delay request send");
}
#endif
void send(const Type type,const uint8_t length,const uint8_t* data){
    35a4:	b5f0      	push	{r4, r5, r6, r7, lr}
    35a6:	4647      	mov	r7, r8
    35a8:	b480      	push	{r7}
    35aa:	af00      	add	r7, sp, #0
    35ac:	1c0c      	adds	r4, r1, #0
		uint8_t i;
		uint8_t j=0;
		uint8_t send[length+4];//to complete
    35ae:	1c0b      	adds	r3, r1, #0
    35b0:	330b      	adds	r3, #11
    35b2:	08db      	lsrs	r3, r3, #3
    35b4:	00db      	lsls	r3, r3, #3
    35b6:	4669      	mov	r1, sp
    35b8:	1acb      	subs	r3, r1, r3
    35ba:	469d      	mov	sp, r3
    35bc:	466d      	mov	r5, sp
		send[0]=HEADER;
    35be:	2355      	movs	r3, #85	; 0x55
    35c0:	702b      	strb	r3, [r5, #0]
		send[1]=IDDEVICE;	
    35c2:	3b53      	subs	r3, #83	; 0x53
    35c4:	706b      	strb	r3, [r5, #1]
		send[2]=type;
    35c6:	70a8      	strb	r0, [r5, #2]
		if(length!=0){
    35c8:	2c00      	cmp	r4, #0
    35ca:	d00b      	beq.n	35e4 <_Z4send8enumTypehPKh+0x40>
			send[3]=length;//length data
    35cc:	70ec      	strb	r4, [r5, #3]
    35ce:	2300      	movs	r3, #0
    35d0:	18e9      	adds	r1, r5, r3
			j=1;
		}
		for(i=0;i<length;i++){
			send[3+i+j]=data[i];
    35d2:	5cd6      	ldrb	r6, [r2, r3]
    35d4:	710e      	strb	r6, [r1, #4]
    35d6:	3301      	adds	r3, #1
		send[2]=type;
		if(length!=0){
			send[3]=length;//length data
			j=1;
		}
		for(i=0;i<length;i++){
    35d8:	b2d9      	uxtb	r1, r3
    35da:	428c      	cmp	r4, r1
    35dc:	d8f8      	bhi.n	35d0 <_Z4send8enumTypehPKh+0x2c>
    35de:	1c23      	adds	r3, r4, #0
		send[0]=HEADER;
		send[1]=IDDEVICE;	
		send[2]=type;
		if(length!=0){
			send[3]=length;//length data
			j=1;
    35e0:	2601      	movs	r6, #1
    35e2:	e001      	b.n	35e8 <_Z4send8enumTypehPKh+0x44>
	sendHMI("	delay request send");
}
#endif
void send(const Type type,const uint8_t length,const uint8_t* data){
		uint8_t i;
		uint8_t j=0;
    35e4:	2600      	movs	r6, #0
		send[2]=type;
		if(length!=0){
			send[3]=length;//length data
			j=1;
		}
		for(i=0;i<length;i++){
    35e6:	2300      	movs	r3, #0
			send[3+i+j]=data[i];
		}
		send[3+i+j]=calculCRC(type,length,data);
    35e8:	3303      	adds	r3, #3
    35ea:	4698      	mov	r8, r3
    35ec:	44b0      	add	r8, r6
    35ee:	1c21      	adds	r1, r4, #0
    35f0:	4b06      	ldr	r3, [pc, #24]	; (360c <_Z4send8enumTypehPKh+0x68>)
    35f2:	4798      	blx	r3
    35f4:	4643      	mov	r3, r8
    35f6:	54e8      	strb	r0, [r5, r3]
    35f8:	3404      	adds	r4, #4

		networkTx(send,length+4+j);
    35fa:	1931      	adds	r1, r6, r4
    35fc:	b2c9      	uxtb	r1, r1
    35fe:	1c28      	adds	r0, r5, #0
    3600:	4b03      	ldr	r3, [pc, #12]	; (3610 <_Z4send8enumTypehPKh+0x6c>)
    3602:	4798      	blx	r3

}
    3604:	46bd      	mov	sp, r7
    3606:	bc04      	pop	{r2}
    3608:	4690      	mov	r8, r2
    360a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    360c:	00003595 	.word	0x00003595
    3610:	00001811 	.word	0x00001811

00003614 <_Z12delayRequestv>:
	sprintf(messageHMI,"	delay response send (id: %d)",id);
	sendHMI(messageHMI);
}
#endif
#ifdef SLAVEMODE
void delayRequest(void){
    3614:	b508      	push	{r3, lr}
	Type type=DELAYREQUEST;

	readClock(&timeProt.tx);
    3616:	4806      	ldr	r0, [pc, #24]	; (3630 <_Z12delayRequestv+0x1c>)
    3618:	4b06      	ldr	r3, [pc, #24]	; (3634 <_Z12delayRequestv+0x20>)
    361a:	4798      	blx	r3
	//pc.printf("timeCounter:%ld\r\n",RTC->MODE0.COUNT.bit.COUNT);
	send(type,0,NULL);
    361c:	2002      	movs	r0, #2
    361e:	2100      	movs	r1, #0
    3620:	2200      	movs	r2, #0
    3622:	4b05      	ldr	r3, [pc, #20]	; (3638 <_Z12delayRequestv+0x24>)
    3624:	4798      	blx	r3

	
	sendHMI("	delay request send");
    3626:	4805      	ldr	r0, [pc, #20]	; (363c <_Z12delayRequestv+0x28>)
    3628:	4b05      	ldr	r3, [pc, #20]	; (3640 <_Z12delayRequestv+0x2c>)
    362a:	4798      	blx	r3
}
    362c:	bd08      	pop	{r3, pc}
    362e:	46c0      	nop			; (mov r8, r8)
    3630:	20004208 	.word	0x20004208
    3634:	00001391 	.word	0x00001391
    3638:	000035a5 	.word	0x000035a5
    363c:	0000eb3c 	.word	0x0000eb3c
    3640:	00003829 	.word	0x00003829

00003644 <_Z6senderv>:
	vTaskDelay(500/portTICK_RATE_MS);
}



void sender(void){
    3644:	b508      	push	{r3, lr}
	if(xTaskGetTickCount()-saveSync>(TIMESYNC/portTICK_RATE_MS)){
		saveSync=xTaskGetTickCount();
		sync();
	}
	#else
	if(xTaskGetTickCount()-saveDRequest>(TIMEDELAYREQUEST/portTICK_RATE_MS)){
    3646:	4b07      	ldr	r3, [pc, #28]	; (3664 <_Z6senderv+0x20>)
    3648:	4798      	blx	r3
    364a:	4b07      	ldr	r3, [pc, #28]	; (3668 <_Z6senderv+0x24>)
    364c:	681b      	ldr	r3, [r3, #0]
    364e:	1ac0      	subs	r0, r0, r3
    3650:	4b06      	ldr	r3, [pc, #24]	; (366c <_Z6senderv+0x28>)
    3652:	4298      	cmp	r0, r3
    3654:	d905      	bls.n	3662 <_Z6senderv+0x1e>
		saveDRequest=xTaskGetTickCount();
    3656:	4b03      	ldr	r3, [pc, #12]	; (3664 <_Z6senderv+0x20>)
    3658:	4798      	blx	r3
    365a:	4b03      	ldr	r3, [pc, #12]	; (3668 <_Z6senderv+0x24>)
    365c:	6018      	str	r0, [r3, #0]
		delayRequest();
    365e:	4b04      	ldr	r3, [pc, #16]	; (3670 <_Z6senderv+0x2c>)
    3660:	4798      	blx	r3
	}
	#endif

}
    3662:	bd08      	pop	{r3, pc}
    3664:	00000965 	.word	0x00000965
    3668:	20004130 	.word	0x20004130
    366c:	00002710 	.word	0x00002710
    3670:	00003615 	.word	0x00003615

00003674 <_Z16timeProtocolTaskv>:
		
	}
	return false;	
}

void timeProtocolTask(void){
    3674:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    3676:	b672      	cpsid	i
    3678:	f3bf 8f5f 	dmb	sy
	Disable_global_interrupt();
    367c:	2300      	movs	r3, #0
    367e:	4a27      	ldr	r2, [pc, #156]	; (371c <_Z16timeProtocolTaskv+0xa8>)
    3680:	7013      	strb	r3, [r2, #0]
		for(i=0;i<=MAX_SLAVE_CLOCK;i++){
			timeProt.saveTime[i].second=0;
		}
	#else
	
	timeProt.rx.sign=true;
    3682:	4c27      	ldr	r4, [pc, #156]	; (3720 <_Z16timeProtocolTaskv+0xac>)
    3684:	2201      	movs	r2, #1
    3686:	212c      	movs	r1, #44	; 0x2c
    3688:	5462      	strb	r2, [r4, r1]
	timeProt.rxDelay.sign=true;
    368a:	390c      	subs	r1, #12
    368c:	5462      	strb	r2, [r4, r1]
	timeProt.rxSync.sign=true;
    368e:	7522      	strb	r2, [r4, #20]
	timeProt.tx.sign=true;
    3690:	7222      	strb	r2, [r4, #8]
	#endif
	timeProt.correction.nbCorrection=0;
    3692:	6523      	str	r3, [r4, #80]	; 0x50

	
	sumOffset.second=0;
    3694:	4923      	ldr	r1, [pc, #140]	; (3724 <_Z16timeProtocolTaskv+0xb0>)
    3696:	600b      	str	r3, [r1, #0]
	sumOffset.halfmillis=0;
    3698:	604b      	str	r3, [r1, #4]
	sumOffset.sign=true;
    369a:	720a      	strb	r2, [r1, #8]
	
	
	timeProt.correction.currentTimeOffsetSync.second=0;
    369c:	6663      	str	r3, [r4, #100]	; 0x64
	timeProt.correction.currentTimeOffsetSync.halfmillis=0;
    369e:	66a3      	str	r3, [r4, #104]	; 0x68
	timeProt.correction.currentTimeOffsetSync.sign=true;
    36a0:	216c      	movs	r1, #108	; 0x6c
    36a2:	5462      	strb	r2, [r4, r1]
	
	
	timeProt.correction.previoustimeOffset.second=0;
    36a4:	65a3      	str	r3, [r4, #88]	; 0x58
	timeProt.correction.previoustimeOffset.halfmillis=0;
    36a6:	65e3      	str	r3, [r4, #92]	; 0x5c
	timeProt.correction.previoustimeOffset.sign=true;
    36a8:	390c      	subs	r1, #12
    36aa:	5462      	strb	r2, [r4, r1]
	
	
	//timeProt.correction.timeSoftCor=0;
	timeProt.correction.indiceMoySoftCor=0;
    36ac:	316c      	adds	r1, #108	; 0x6c
    36ae:	5463      	strb	r3, [r4, r1]
	timeProt.correction.indiceFull=0;
    36b0:	3101      	adds	r1, #1
    36b2:	5463      	strb	r3, [r4, r1]


	timeProt.delay.second=0;
    36b4:	6363      	str	r3, [r4, #52]	; 0x34
	timeProt.delay.halfmillis=0;
    36b6:	63a3      	str	r3, [r4, #56]	; 0x38
	timeProt.delay.sign=true;
    36b8:	3991      	subs	r1, #145	; 0x91
    36ba:	5462      	strb	r2, [r4, r1]
	timeProt.waitIdentifier=false;
    36bc:	322f      	adds	r2, #47	; 0x2f
    36be:	54a3      	strb	r3, [r4, r2]
	timeProt.synchroTime=NULL;
    36c0:	6423      	str	r3, [r4, #64]	; 0x40
	vSemaphoreCreateBinary(timeProt.synchroTime);
    36c2:	2001      	movs	r0, #1
    36c4:	2100      	movs	r1, #0
    36c6:	3a2d      	subs	r2, #45	; 0x2d
    36c8:	4b17      	ldr	r3, [pc, #92]	; (3728 <_Z16timeProtocolTaskv+0xb4>)
    36ca:	4798      	blx	r3
    36cc:	6420      	str	r0, [r4, #64]	; 0x40
    36ce:	2800      	cmp	r0, #0
    36d0:	d004      	beq.n	36dc <_Z16timeProtocolTaskv+0x68>
    36d2:	2100      	movs	r1, #0
    36d4:	2200      	movs	r2, #0
    36d6:	2300      	movs	r3, #0
    36d8:	4c14      	ldr	r4, [pc, #80]	; (372c <_Z16timeProtocolTaskv+0xb8>)
    36da:	47a0      	blx	r4
	Enable_global_interrupt();
    36dc:	2201      	movs	r2, #1
    36de:	4b0f      	ldr	r3, [pc, #60]	; (371c <_Z16timeProtocolTaskv+0xa8>)
    36e0:	701a      	strb	r2, [r3, #0]
    36e2:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
    36e6:	b662      	cpsie	i
	#ifdef SLAVEMODE
	delayRequest();
    36e8:	4b11      	ldr	r3, [pc, #68]	; (3730 <_Z16timeProtocolTaskv+0xbc>)
    36ea:	4798      	blx	r3
	#endif
	
	while(1){
		//sendHMI("time protocol task.");
			//pc.printf("timeprotocol task");
			if(timeProt.synchroTime!=NULL){
    36ec:	4d0c      	ldr	r5, [pc, #48]	; (3720 <_Z16timeProtocolTaskv+0xac>)
				sender();
    36ee:	4f11      	ldr	r7, [pc, #68]	; (3734 <_Z16timeProtocolTaskv+0xc0>)
				if( xSemaphoreTake(timeProt.synchroTime,500/portTICK_RATE_MS) == pdTRUE ){
    36f0:	1c2e      	adds	r6, r5, #0
	#endif
	
	while(1){
		//sendHMI("time protocol task.");
			//pc.printf("timeprotocol task");
			if(timeProt.synchroTime!=NULL){
    36f2:	6c2b      	ldr	r3, [r5, #64]	; 0x40
    36f4:	2b00      	cmp	r3, #0
    36f6:	d00e      	beq.n	3716 <_Z16timeProtocolTaskv+0xa2>
				sender();
    36f8:	47b8      	blx	r7
				if( xSemaphoreTake(timeProt.synchroTime,500/portTICK_RATE_MS) == pdTRUE ){
    36fa:	6c30      	ldr	r0, [r6, #64]	; 0x40
    36fc:	2100      	movs	r1, #0
    36fe:	22fa      	movs	r2, #250	; 0xfa
    3700:	0052      	lsls	r2, r2, #1
    3702:	2300      	movs	r3, #0
    3704:	4c0c      	ldr	r4, [pc, #48]	; (3738 <_Z16timeProtocolTaskv+0xc4>)
    3706:	47a0      	blx	r4
    3708:	2801      	cmp	r0, #1
    370a:	d104      	bne.n	3716 <_Z16timeProtocolTaskv+0xa2>
					vTaskDelay(100/portTICK_RATE_MS);
    370c:	3063      	adds	r0, #99	; 0x63
    370e:	4b0b      	ldr	r3, [pc, #44]	; (373c <_Z16timeProtocolTaskv+0xc8>)
    3710:	4798      	blx	r3
					receiver();
    3712:	4b0b      	ldr	r3, [pc, #44]	; (3740 <_Z16timeProtocolTaskv+0xcc>)
    3714:	4798      	blx	r3
					
				}
					
			}
			correction();	
    3716:	4b0b      	ldr	r3, [pc, #44]	; (3744 <_Z16timeProtocolTaskv+0xd0>)
    3718:	4798      	blx	r3
		
	}
	return false;	
}

void timeProtocolTask(void){
    371a:	e7ea      	b.n	36f2 <_Z16timeProtocolTaskv+0x7e>
    371c:	200000d0 	.word	0x200000d0
    3720:	20004208 	.word	0x20004208
    3724:	20004134 	.word	0x20004134
    3728:	000002c1 	.word	0x000002c1
    372c:	00000311 	.word	0x00000311
    3730:	00003615 	.word	0x00003615
    3734:	00003645 	.word	0x00003645
    3738:	000004a1 	.word	0x000004a1
    373c:	00000b99 	.word	0x00000b99
    3740:	000032a5 	.word	0x000032a5
    3744:	0000309d 	.word	0x0000309d

00003748 <_ZN4mbed10SerialBaseD1Ev>:
#endif

protected:
    SerialBase(PinName tx, PinName rx);
    virtual ~SerialBase() {
    }
    3748:	4770      	bx	lr
    374a:	46c0      	nop			; (mov r8, r8)

0000374c <_ZN4mbed6SerialD1Ev>:
 * int main() {
 *     pc.printf("Hello World\n");
 * }
 * @endcode
 */
class Serial : public SerialBase, public Stream {
    374c:	b510      	push	{r4, lr}
    374e:	1c04      	adds	r4, r0, #0
    3750:	4b06      	ldr	r3, [pc, #24]	; (376c <_ZN4mbed6SerialD1Ev+0x20>)
    3752:	6003      	str	r3, [r0, #0]
    3754:	1c19      	adds	r1, r3, #0
    3756:	3118      	adds	r1, #24
    3758:	22dc      	movs	r2, #220	; 0xdc
    375a:	5081      	str	r1, [r0, r2]
    375c:	334c      	adds	r3, #76	; 0x4c
    375e:	3204      	adds	r2, #4
    3760:	5083      	str	r3, [r0, r2]
    3762:	30dc      	adds	r0, #220	; 0xdc
    3764:	4b02      	ldr	r3, [pc, #8]	; (3770 <_ZN4mbed6SerialD1Ev+0x24>)
    3766:	4798      	blx	r3
    3768:	1c20      	adds	r0, r4, #0
    376a:	bd10      	pop	{r4, pc}
    376c:	0000ee80 	.word	0x0000ee80
    3770:	00004b65 	.word	0x00004b65

00003774 <_ZThn220_N4mbed6SerialD1Ev>:
    3774:	b408      	push	{r3}
    3776:	4b02      	ldr	r3, [pc, #8]	; (3780 <_ZThn220_N4mbed6SerialD1Ev+0xc>)
    3778:	469c      	mov	ip, r3
    377a:	38dc      	subs	r0, #220	; 0xdc
    377c:	bc08      	pop	{r3}
    377e:	4760      	bx	ip
    3780:	0000374d 	.word	0x0000374d

00003784 <_ZThn224_N4mbed6SerialD1Ev>:
    3784:	b408      	push	{r3}
    3786:	4b02      	ldr	r3, [pc, #8]	; (3790 <_ZThn224_N4mbed6SerialD1Ev+0xc>)
    3788:	469c      	mov	ip, r3
    378a:	38e0      	subs	r0, #224	; 0xe0
    378c:	bc08      	pop	{r3}
    378e:	4760      	bx	ip
    3790:	0000374d 	.word	0x0000374d

00003794 <_ZN4mbed10SerialBaseD0Ev>:
    void interrupt_handler_asynch(void);
#endif

protected:
    SerialBase(PinName tx, PinName rx);
    virtual ~SerialBase() {
    3794:	b510      	push	{r4, lr}
    3796:	1c04      	adds	r4, r0, #0
    }
    3798:	4b01      	ldr	r3, [pc, #4]	; (37a0 <_ZN4mbed10SerialBaseD0Ev+0xc>)
    379a:	4798      	blx	r3
    379c:	1c20      	adds	r0, r4, #0
    379e:	bd10      	pop	{r4, pc}
    37a0:	000062a3 	.word	0x000062a3

000037a4 <_Z12configureHMIv>:
xQueueHandle uartQueue;
Serial pc(USBTX,USBRX);
/************************************************************************/
/* FUNCTION                                                             */
/************************************************************************/
void configureHMI(void){
    37a4:	b508      	push	{r3, lr}
	pc.printf("config HMI \r\n");
    37a6:	4803      	ldr	r0, [pc, #12]	; (37b4 <_Z12configureHMIv+0x10>)
    37a8:	30dc      	adds	r0, #220	; 0xdc
    37aa:	4903      	ldr	r1, [pc, #12]	; (37b8 <_Z12configureHMIv+0x14>)
    37ac:	4b03      	ldr	r3, [pc, #12]	; (37bc <_Z12configureHMIv+0x18>)
    37ae:	4798      	blx	r3
}
    37b0:	bd08      	pop	{r3, pc}
    37b2:	46c0      	nop			; (mov r8, r8)
    37b4:	200043a0 	.word	0x200043a0
    37b8:	0000eb50 	.word	0x0000eb50
    37bc:	00004b89 	.word	0x00004b89

000037c0 <_Z7HMITaskv>:
void HMITask(){
    37c0:	b5f0      	push	{r4, r5, r6, r7, lr}
    37c2:	b083      	sub	sp, #12
	//Can receive up to 10 char[50]
	uartQueue = xQueueCreate( LENGTH_QUEUE, sizeof( char* ) );
    37c4:	2032      	movs	r0, #50	; 0x32
    37c6:	2104      	movs	r1, #4
    37c8:	2200      	movs	r2, #0
    37ca:	4b10      	ldr	r3, [pc, #64]	; (380c <_Z7HMITaskv+0x4c>)
    37cc:	4798      	blx	r3
    37ce:	4b10      	ldr	r3, [pc, #64]	; (3810 <_Z7HMITaskv+0x50>)
    37d0:	6018      	str	r0, [r3, #0]

	while(1){
		//pc.printf("HMI task\r\n");
		 if( uartQueue != 0 )
    37d2:	1c1f      	adds	r7, r3, #0
		 {
			 char* receive;
			 // Receive a message on the created queue.
			 while( xQueueReceive( uartQueue, &( receive ), (  portTickType ) 0) )
			 {			
				 pc.printf(receive);
    37d4:	4d0f      	ldr	r5, [pc, #60]	; (3814 <_Z7HMITaskv+0x54>)
    37d6:	35dc      	adds	r5, #220	; 0xdc
	//Can receive up to 10 char[50]
	uartQueue = xQueueCreate( LENGTH_QUEUE, sizeof( char* ) );

	while(1){
		//pc.printf("HMI task\r\n");
		 if( uartQueue != 0 )
    37d8:	683b      	ldr	r3, [r7, #0]
    37da:	2b00      	cmp	r3, #0
    37dc:	d108      	bne.n	37f0 <_Z7HMITaskv+0x30>
    37de:	e010      	b.n	3802 <_Z7HMITaskv+0x42>
		 {
			 char* receive;
			 // Receive a message on the created queue.
			 while( xQueueReceive( uartQueue, &( receive ), (  portTickType ) 0) )
			 {			
				 pc.printf(receive);
    37e0:	1c28      	adds	r0, r5, #0
    37e2:	9901      	ldr	r1, [sp, #4]
    37e4:	4c0c      	ldr	r4, [pc, #48]	; (3818 <_Z7HMITaskv+0x58>)
    37e6:	47a0      	blx	r4
				 pc.printf("\r\n");
    37e8:	1c28      	adds	r0, r5, #0
    37ea:	490c      	ldr	r1, [pc, #48]	; (381c <_Z7HMITaskv+0x5c>)
    37ec:	47a0      	blx	r4
    37ee:	e000      	b.n	37f2 <_Z7HMITaskv+0x32>
		//pc.printf("HMI task\r\n");
		 if( uartQueue != 0 )
		 {
			 char* receive;
			 // Receive a message on the created queue.
			 while( xQueueReceive( uartQueue, &( receive ), (  portTickType ) 0) )
    37f0:	4e07      	ldr	r6, [pc, #28]	; (3810 <_Z7HMITaskv+0x50>)
    37f2:	6830      	ldr	r0, [r6, #0]
    37f4:	a901      	add	r1, sp, #4
    37f6:	2200      	movs	r2, #0
    37f8:	2300      	movs	r3, #0
    37fa:	4c09      	ldr	r4, [pc, #36]	; (3820 <_Z7HMITaskv+0x60>)
    37fc:	47a0      	blx	r4
    37fe:	2800      	cmp	r0, #0
    3800:	d1ee      	bne.n	37e0 <_Z7HMITaskv+0x20>
			//printf("						t: %lus,%u\r\n",timeCopy.second,(unsigned int)timeCopy.halfmillis/2);
			//printf("timecor : %d\r\n",ti);
			//printf("corhms : %d\r\n",to);
		 }
		 // pc.printf("test");
        vTaskDelay(500/portTICK_RATE_MS);
    3802:	20fa      	movs	r0, #250	; 0xfa
    3804:	0040      	lsls	r0, r0, #1
    3806:	4b07      	ldr	r3, [pc, #28]	; (3824 <_Z7HMITaskv+0x64>)
    3808:	4798      	blx	r3
	}
    380a:	e7e5      	b.n	37d8 <_Z7HMITaskv+0x18>
    380c:	000002c1 	.word	0x000002c1
    3810:	20004494 	.word	0x20004494
    3814:	200043a0 	.word	0x200043a0
    3818:	00004b89 	.word	0x00004b89
    381c:	0000e7ac 	.word	0x0000e7ac
    3820:	000004a1 	.word	0x000004a1
    3824:	00000b99 	.word	0x00000b99

00003828 <_Z7sendHMIPKc>:
}
bool sendHMI(const char send[]){
    3828:	b510      	push	{r4, lr}
    382a:	b082      	sub	sp, #8
    382c:	9001      	str	r0, [sp, #4]
			if( uartQueue != 0 )
    382e:	4b08      	ldr	r3, [pc, #32]	; (3850 <_Z7sendHMIPKc+0x28>)
    3830:	6818      	ldr	r0, [r3, #0]
    3832:	2800      	cmp	r0, #0
    3834:	d009      	beq.n	384a <_Z7sendHMIPKc+0x22>
			{
				if( xQueueSendToBack( uartQueue,( void * ) &send,(  portTickType ) 0 ) == pdPASS )
    3836:	a901      	add	r1, sp, #4
    3838:	2200      	movs	r2, #0
    383a:	2300      	movs	r3, #0
    383c:	4c05      	ldr	r4, [pc, #20]	; (3854 <_Z7sendHMIPKc+0x2c>)
    383e:	47a0      	blx	r4
    3840:	3801      	subs	r0, #1
    3842:	4243      	negs	r3, r0
    3844:	4158      	adcs	r0, r3
    3846:	b2c0      	uxtb	r0, r0
    3848:	e000      	b.n	384c <_Z7sendHMIPKc+0x24>
				
				/* Failed to post the message. */
				
			}
			
				return false;
    384a:	2000      	movs	r0, #0
			
    384c:	b002      	add	sp, #8
    384e:	bd10      	pop	{r4, pc}
    3850:	20004494 	.word	0x20004494
    3854:	00000311 	.word	0x00000311

00003858 <_ZN4mbed6SerialD0Ev>:
    3858:	b510      	push	{r4, lr}
    385a:	1c04      	adds	r4, r0, #0
    385c:	4b08      	ldr	r3, [pc, #32]	; (3880 <_ZN4mbed6SerialD0Ev+0x28>)
    385e:	6003      	str	r3, [r0, #0]
    3860:	1c19      	adds	r1, r3, #0
    3862:	3118      	adds	r1, #24
    3864:	22dc      	movs	r2, #220	; 0xdc
    3866:	5081      	str	r1, [r0, r2]
    3868:	334c      	adds	r3, #76	; 0x4c
    386a:	3204      	adds	r2, #4
    386c:	5083      	str	r3, [r0, r2]
    386e:	30dc      	adds	r0, #220	; 0xdc
    3870:	4b04      	ldr	r3, [pc, #16]	; (3884 <_ZN4mbed6SerialD0Ev+0x2c>)
    3872:	4798      	blx	r3
    3874:	1c20      	adds	r0, r4, #0
    3876:	4b04      	ldr	r3, [pc, #16]	; (3888 <_ZN4mbed6SerialD0Ev+0x30>)
    3878:	4798      	blx	r3
    387a:	1c20      	adds	r0, r4, #0
    387c:	bd10      	pop	{r4, pc}
    387e:	46c0      	nop			; (mov r8, r8)
    3880:	0000ee80 	.word	0x0000ee80
    3884:	00004b65 	.word	0x00004b65
    3888:	000062a3 	.word	0x000062a3

0000388c <_ZThn220_N4mbed6SerialD0Ev>:
    388c:	b408      	push	{r3}
    388e:	4b02      	ldr	r3, [pc, #8]	; (3898 <_ZThn220_N4mbed6SerialD0Ev+0xc>)
    3890:	469c      	mov	ip, r3
    3892:	38dc      	subs	r0, #220	; 0xdc
    3894:	bc08      	pop	{r3}
    3896:	4760      	bx	ip
    3898:	00003859 	.word	0x00003859

0000389c <_ZThn224_N4mbed6SerialD0Ev>:
    389c:	b408      	push	{r3}
    389e:	4b02      	ldr	r3, [pc, #8]	; (38a8 <_ZThn224_N4mbed6SerialD0Ev+0xc>)
    38a0:	469c      	mov	ip, r3
    38a2:	38e0      	subs	r0, #224	; 0xe0
    38a4:	bc08      	pop	{r3}
    38a6:	4760      	bx	ip
    38a8:	00003859 	.word	0x00003859

000038ac <_GLOBAL__sub_I_uartQueue>:
    38ac:	b538      	push	{r3, r4, r5, lr}
#include "hmi.h"
/************************************************************************/
/* GLOBAL                                                               */
/************************************************************************/
xQueueHandle uartQueue;
Serial pc(USBTX,USBRX);
    38ae:	4c06      	ldr	r4, [pc, #24]	; (38c8 <_GLOBAL__sub_I_uartQueue+0x1c>)
    38b0:	1c20      	adds	r0, r4, #0
    38b2:	2104      	movs	r1, #4
    38b4:	2205      	movs	r2, #5
    38b6:	2300      	movs	r3, #0
    38b8:	4d04      	ldr	r5, [pc, #16]	; (38cc <_GLOBAL__sub_I_uartQueue+0x20>)
    38ba:	47a8      	blx	r5
    38bc:	1c20      	adds	r0, r4, #0
    38be:	4904      	ldr	r1, [pc, #16]	; (38d0 <_GLOBAL__sub_I_uartQueue+0x24>)
    38c0:	4a04      	ldr	r2, [pc, #16]	; (38d4 <_GLOBAL__sub_I_uartQueue+0x28>)
    38c2:	4b05      	ldr	r3, [pc, #20]	; (38d8 <_GLOBAL__sub_I_uartQueue+0x2c>)
    38c4:	4798      	blx	r3
				
			}
			
				return false;
			
    38c6:	bd38      	pop	{r3, r4, r5, pc}
    38c8:	200043a0 	.word	0x200043a0
    38cc:	00004959 	.word	0x00004959
    38d0:	0000374d 	.word	0x0000374d
    38d4:	200000b0 	.word	0x200000b0
    38d8:	00006295 	.word	0x00006295

000038dc <mbed_die>:
    38dc:	b508      	push	{r3, lr}
    38de:	b672      	cpsid	i
    38e0:	2096      	movs	r0, #150	; 0x96
    38e2:	f001 f9e1 	bl	4ca8 <wait_ms>
    38e6:	2096      	movs	r0, #150	; 0x96
    38e8:	f001 f9de 	bl	4ca8 <wait_ms>
    38ec:	e7f8      	b.n	38e0 <mbed_die+0x4>
    38ee:	46c0      	nop			; (mov r8, r8)

000038f0 <NVIC_SetVector>:
    38f0:	4a0b      	ldr	r2, [pc, #44]	; (3920 <NVIC_SetVector+0x30>)
    38f2:	b530      	push	{r4, r5, lr}
    38f4:	6894      	ldr	r4, [r2, #8]
    38f6:	6892      	ldr	r2, [r2, #8]
    38f8:	1c23      	adds	r3, r4, #0
    38fa:	2a00      	cmp	r2, #0
    38fc:	d10c      	bne.n	3918 <NVIC_SetVector+0x28>
    38fe:	2300      	movs	r3, #0
    3900:	2280      	movs	r2, #128	; 0x80
    3902:	591d      	ldr	r5, [r3, r4]
    3904:	0592      	lsls	r2, r2, #22
    3906:	189a      	adds	r2, r3, r2
    3908:	3304      	adds	r3, #4
    390a:	6015      	str	r5, [r2, #0]
    390c:	2bb0      	cmp	r3, #176	; 0xb0
    390e:	d1f7      	bne.n	3900 <NVIC_SetVector+0x10>
    3910:	2380      	movs	r3, #128	; 0x80
    3912:	4a03      	ldr	r2, [pc, #12]	; (3920 <NVIC_SetVector+0x30>)
    3914:	059b      	lsls	r3, r3, #22
    3916:	6093      	str	r3, [r2, #8]
    3918:	3010      	adds	r0, #16
    391a:	0080      	lsls	r0, r0, #2
    391c:	50c1      	str	r1, [r0, r3]
    391e:	bd30      	pop	{r4, r5, pc}
    3920:	e000ed00 	.word	0xe000ed00

00003924 <mbed_sdk_init>:
    3924:	b508      	push	{r3, lr}
    3926:	4b04      	ldr	r3, [pc, #16]	; (3938 <mbed_sdk_init+0x14>)
    3928:	781a      	ldrb	r2, [r3, #0]
    392a:	2a00      	cmp	r2, #0
    392c:	d103      	bne.n	3936 <mbed_sdk_init+0x12>
    392e:	3201      	adds	r2, #1
    3930:	701a      	strb	r2, [r3, #0]
    3932:	f000 fc0f 	bl	4154 <system_init>
    3936:	bd08      	pop	{r3, pc}
    3938:	20004498 	.word	0x20004498

0000393c <_ZN4mbed10FileHandle4flenEv>:
    393c:	6803      	ldr	r3, [r0, #0]
    393e:	b570      	push	{r4, r5, r6, lr}
    3940:	691b      	ldr	r3, [r3, #16]
    3942:	2100      	movs	r1, #0
    3944:	2201      	movs	r2, #1
    3946:	1c04      	adds	r4, r0, #0
    3948:	4798      	blx	r3
    394a:	1c06      	adds	r6, r0, #0
    394c:	1c43      	adds	r3, r0, #1
    394e:	d00e      	beq.n	396e <_ZN4mbed10FileHandle4flenEv+0x32>
    3950:	6823      	ldr	r3, [r4, #0]
    3952:	2100      	movs	r1, #0
    3954:	691b      	ldr	r3, [r3, #16]
    3956:	2202      	movs	r2, #2
    3958:	1c20      	adds	r0, r4, #0
    395a:	4798      	blx	r3
    395c:	1c05      	adds	r5, r0, #0
    395e:	6823      	ldr	r3, [r4, #0]
    3960:	1c20      	adds	r0, r4, #0
    3962:	691b      	ldr	r3, [r3, #16]
    3964:	1c31      	adds	r1, r6, #0
    3966:	2200      	movs	r2, #0
    3968:	4798      	blx	r3
    396a:	1c28      	adds	r0, r5, #0
    396c:	bd70      	pop	{r4, r5, r6, pc}
    396e:	e7fd      	b.n	396c <_ZN4mbed10FileHandle4flenEv+0x30>

00003970 <_ZL11init_serialv.part.0>:
    3970:	b508      	push	{r3, lr}
    3972:	4803      	ldr	r0, [pc, #12]	; (3980 <_ZL11init_serialv.part.0+0x10>)
    3974:	2104      	movs	r1, #4
    3976:	2205      	movs	r2, #5
    3978:	f000 fd2a 	bl	43d0 <serial_init>
    397c:	bd08      	pop	{r3, pc}
    397e:	46c0      	nop			; (mov r8, r8)
    3980:	20004640 	.word	0x20004640

00003984 <_ZN4mbed10FileHandleD1Ev>:
    3984:	4b09      	ldr	r3, [pc, #36]	; (39ac <_ZN4mbed10FileHandleD1Ev+0x28>)
    3986:	b510      	push	{r4, lr}
    3988:	3308      	adds	r3, #8
    398a:	6003      	str	r3, [r0, #0]
    398c:	4b08      	ldr	r3, [pc, #32]	; (39b0 <_ZN4mbed10FileHandleD1Ev+0x2c>)
    398e:	2100      	movs	r1, #0
    3990:	1c5a      	adds	r2, r3, #1
    3992:	32ff      	adds	r2, #255	; 0xff
    3994:	e002      	b.n	399c <_ZN4mbed10FileHandleD1Ev+0x18>
    3996:	3304      	adds	r3, #4
    3998:	4293      	cmp	r3, r2
    399a:	d006      	beq.n	39aa <_ZN4mbed10FileHandleD1Ev+0x26>
    399c:	681c      	ldr	r4, [r3, #0]
    399e:	4284      	cmp	r4, r0
    39a0:	d1f9      	bne.n	3996 <_ZN4mbed10FileHandleD1Ev+0x12>
    39a2:	6019      	str	r1, [r3, #0]
    39a4:	3304      	adds	r3, #4
    39a6:	4293      	cmp	r3, r2
    39a8:	d1f8      	bne.n	399c <_ZN4mbed10FileHandleD1Ev+0x18>
    39aa:	bd10      	pop	{r4, pc}
    39ac:	0000eb78 	.word	0x0000eb78
    39b0:	2000449c 	.word	0x2000449c

000039b4 <_open>:
    39b4:	b5f0      	push	{r4, r5, r6, r7, lr}
    39b6:	4647      	mov	r7, r8
    39b8:	b480      	push	{r7}
    39ba:	1c0e      	adds	r6, r1, #0
    39bc:	b082      	sub	sp, #8
    39be:	4934      	ldr	r1, [pc, #208]	; (3a90 <_open+0xdc>)
    39c0:	1c05      	adds	r5, r0, #0
    39c2:	f007 fbfb 	bl	b1bc <strcmp>
    39c6:	1e04      	subs	r4, r0, #0
    39c8:	d108      	bne.n	39dc <_open+0x28>
    39ca:	4b32      	ldr	r3, [pc, #200]	; (3a94 <_open+0xe0>)
    39cc:	681b      	ldr	r3, [r3, #0]
    39ce:	2b00      	cmp	r3, #0
    39d0:	d00f      	beq.n	39f2 <_open+0x3e>
    39d2:	1c20      	adds	r0, r4, #0
    39d4:	b002      	add	sp, #8
    39d6:	bc04      	pop	{r2}
    39d8:	4690      	mov	r8, r2
    39da:	bdf0      	pop	{r4, r5, r6, r7, pc}
    39dc:	1c28      	adds	r0, r5, #0
    39de:	492e      	ldr	r1, [pc, #184]	; (3a98 <_open+0xe4>)
    39e0:	f007 fbec 	bl	b1bc <strcmp>
    39e4:	2800      	cmp	r0, #0
    39e6:	d107      	bne.n	39f8 <_open+0x44>
    39e8:	4b2a      	ldr	r3, [pc, #168]	; (3a94 <_open+0xe0>)
    39ea:	2401      	movs	r4, #1
    39ec:	681b      	ldr	r3, [r3, #0]
    39ee:	2b00      	cmp	r3, #0
    39f0:	d1ef      	bne.n	39d2 <_open+0x1e>
    39f2:	f7ff ffbd 	bl	3970 <_ZL11init_serialv.part.0>
    39f6:	e7ec      	b.n	39d2 <_open+0x1e>
    39f8:	1c28      	adds	r0, r5, #0
    39fa:	4928      	ldr	r1, [pc, #160]	; (3a9c <_open+0xe8>)
    39fc:	f007 fbde 	bl	b1bc <strcmp>
    3a00:	2800      	cmp	r0, #0
    3a02:	d024      	beq.n	3a4e <_open+0x9a>
    3a04:	4f26      	ldr	r7, [pc, #152]	; (3aa0 <_open+0xec>)
    3a06:	2400      	movs	r4, #0
    3a08:	1c3b      	adds	r3, r7, #0
    3a0a:	e003      	b.n	3a14 <_open+0x60>
    3a0c:	3401      	adds	r4, #1
    3a0e:	3304      	adds	r3, #4
    3a10:	2c40      	cmp	r4, #64	; 0x40
    3a12:	d022      	beq.n	3a5a <_open+0xa6>
    3a14:	681a      	ldr	r2, [r3, #0]
    3a16:	2a00      	cmp	r2, #0
    3a18:	d1f8      	bne.n	3a0c <_open+0x58>
    3a1a:	782b      	ldrb	r3, [r5, #0]
    3a1c:	2b3a      	cmp	r3, #58	; 0x3a
    3a1e:	d030      	beq.n	3a82 <_open+0xce>
    3a20:	4668      	mov	r0, sp
    3a22:	1c29      	adds	r1, r5, #0
    3a24:	f000 fe5e 	bl	46e4 <_ZN4mbed8FilePathC1EPKc>
    3a28:	4668      	mov	r0, sp
    3a2a:	f000 feb5 	bl	4798 <_ZN4mbed8FilePath6existsEv>
    3a2e:	2800      	cmp	r0, #0
    3a30:	d013      	beq.n	3a5a <_open+0xa6>
    3a32:	4668      	mov	r0, sp
    3a34:	f000 fe92 	bl	475c <_ZN4mbed8FilePath6isFileEv>
    3a38:	2800      	cmp	r0, #0
    3a3a:	d011      	beq.n	3a60 <_open+0xac>
    3a3c:	4668      	mov	r0, sp
    3a3e:	f000 fe99 	bl	4774 <_ZN4mbed8FilePath4fileEv>
    3a42:	2800      	cmp	r0, #0
    3a44:	d009      	beq.n	3a5a <_open+0xa6>
    3a46:	00a3      	lsls	r3, r4, #2
    3a48:	50f8      	str	r0, [r7, r3]
    3a4a:	3403      	adds	r4, #3
    3a4c:	e7c1      	b.n	39d2 <_open+0x1e>
    3a4e:	4b11      	ldr	r3, [pc, #68]	; (3a94 <_open+0xe0>)
    3a50:	2402      	movs	r4, #2
    3a52:	681b      	ldr	r3, [r3, #0]
    3a54:	2b00      	cmp	r3, #0
    3a56:	d1bc      	bne.n	39d2 <_open+0x1e>
    3a58:	e7cb      	b.n	39f2 <_open+0x3e>
    3a5a:	2401      	movs	r4, #1
    3a5c:	4264      	negs	r4, r4
    3a5e:	e7b8      	b.n	39d2 <_open+0x1e>
    3a60:	4668      	mov	r0, sp
    3a62:	f000 fe6d 	bl	4740 <_ZN4mbed8FilePath10fileSystemEv>
    3a66:	1e05      	subs	r5, r0, #0
    3a68:	d0f7      	beq.n	3a5a <_open+0xa6>
    3a6a:	6803      	ldr	r3, [r0, #0]
    3a6c:	4668      	mov	r0, sp
    3a6e:	689b      	ldr	r3, [r3, #8]
    3a70:	4698      	mov	r8, r3
    3a72:	f000 fe63 	bl	473c <_ZN4mbed8FilePath8fileNameEv>
    3a76:	4a0b      	ldr	r2, [pc, #44]	; (3aa4 <_open+0xf0>)
    3a78:	1c01      	adds	r1, r0, #0
    3a7a:	4032      	ands	r2, r6
    3a7c:	1c28      	adds	r0, r5, #0
    3a7e:	47c0      	blx	r8
    3a80:	e7df      	b.n	3a42 <_open+0x8e>
    3a82:	1c28      	adds	r0, r5, #0
    3a84:	4908      	ldr	r1, [pc, #32]	; (3aa8 <_open+0xf4>)
    3a86:	466a      	mov	r2, sp
    3a88:	f007 fb22 	bl	b0d0 <siscanf>
    3a8c:	9800      	ldr	r0, [sp, #0]
    3a8e:	e7d8      	b.n	3a42 <_open+0x8e>
    3a90:	0000eb60 	.word	0x0000eb60
    3a94:	200045a4 	.word	0x200045a4
    3a98:	0000eb70 	.word	0x0000eb70
    3a9c:	0000eb68 	.word	0x0000eb68
    3aa0:	2000449c 	.word	0x2000449c
    3aa4:	fffeffff 	.word	0xfffeffff
    3aa8:	0000eba4 	.word	0x0000eba4

00003aac <_close>:
    3aac:	b508      	push	{r3, lr}
    3aae:	1c03      	adds	r3, r0, #0
    3ab0:	2000      	movs	r0, #0
    3ab2:	2b02      	cmp	r3, #2
    3ab4:	dd0a      	ble.n	3acc <_close+0x20>
    3ab6:	4907      	ldr	r1, [pc, #28]	; (3ad4 <_close+0x28>)
    3ab8:	3b03      	subs	r3, #3
    3aba:	009b      	lsls	r3, r3, #2
    3abc:	585a      	ldr	r2, [r3, r1]
    3abe:	5058      	str	r0, [r3, r1]
    3ac0:	2a00      	cmp	r2, #0
    3ac2:	d004      	beq.n	3ace <_close+0x22>
    3ac4:	6813      	ldr	r3, [r2, #0]
    3ac6:	1c10      	adds	r0, r2, #0
    3ac8:	685b      	ldr	r3, [r3, #4]
    3aca:	4798      	blx	r3
    3acc:	bd08      	pop	{r3, pc}
    3ace:	2001      	movs	r0, #1
    3ad0:	4240      	negs	r0, r0
    3ad2:	e7fb      	b.n	3acc <_close+0x20>
    3ad4:	2000449c 	.word	0x2000449c

00003ad8 <_write>:
    3ad8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3ada:	1c0c      	adds	r4, r1, #0
    3adc:	1c17      	adds	r7, r2, #0
    3ade:	2802      	cmp	r0, #2
    3ae0:	dc12      	bgt.n	3b08 <_write+0x30>
    3ae2:	4b10      	ldr	r3, [pc, #64]	; (3b24 <_write+0x4c>)
    3ae4:	681b      	ldr	r3, [r3, #0]
    3ae6:	2b00      	cmp	r3, #0
    3ae8:	d101      	bne.n	3aee <_write+0x16>
    3aea:	f7ff ff41 	bl	3970 <_ZL11init_serialv.part.0>
    3aee:	2f00      	cmp	r7, #0
    3af0:	d008      	beq.n	3b04 <_write+0x2c>
    3af2:	4d0d      	ldr	r5, [pc, #52]	; (3b28 <_write+0x50>)
    3af4:	19e6      	adds	r6, r4, r7
    3af6:	7821      	ldrb	r1, [r4, #0]
    3af8:	1c28      	adds	r0, r5, #0
    3afa:	3401      	adds	r4, #1
    3afc:	f000 fdd2 	bl	46a4 <serial_putc>
    3b00:	42b4      	cmp	r4, r6
    3b02:	d1f8      	bne.n	3af6 <_write+0x1e>
    3b04:	1c38      	adds	r0, r7, #0
    3b06:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3b08:	3803      	subs	r0, #3
    3b0a:	4b08      	ldr	r3, [pc, #32]	; (3b2c <_write+0x54>)
    3b0c:	0080      	lsls	r0, r0, #2
    3b0e:	58c0      	ldr	r0, [r0, r3]
    3b10:	2800      	cmp	r0, #0
    3b12:	d003      	beq.n	3b1c <_write+0x44>
    3b14:	6803      	ldr	r3, [r0, #0]
    3b16:	681b      	ldr	r3, [r3, #0]
    3b18:	4798      	blx	r3
    3b1a:	e7f4      	b.n	3b06 <_write+0x2e>
    3b1c:	2001      	movs	r0, #1
    3b1e:	4240      	negs	r0, r0
    3b20:	e7f1      	b.n	3b06 <_write+0x2e>
    3b22:	46c0      	nop			; (mov r8, r8)
    3b24:	200045a4 	.word	0x200045a4
    3b28:	20004640 	.word	0x20004640
    3b2c:	2000449c 	.word	0x2000449c

00003b30 <_read>:
    3b30:	b510      	push	{r4, lr}
    3b32:	1c0c      	adds	r4, r1, #0
    3b34:	2802      	cmp	r0, #2
    3b36:	dc09      	bgt.n	3b4c <_read+0x1c>
    3b38:	4b0c      	ldr	r3, [pc, #48]	; (3b6c <_read+0x3c>)
    3b3a:	681b      	ldr	r3, [r3, #0]
    3b3c:	2b00      	cmp	r3, #0
    3b3e:	d00f      	beq.n	3b60 <_read+0x30>
    3b40:	480b      	ldr	r0, [pc, #44]	; (3b70 <_read+0x40>)
    3b42:	f000 fd83 	bl	464c <serial_getc>
    3b46:	7020      	strb	r0, [r4, #0]
    3b48:	2001      	movs	r0, #1
    3b4a:	bd10      	pop	{r4, pc}
    3b4c:	3803      	subs	r0, #3
    3b4e:	4b09      	ldr	r3, [pc, #36]	; (3b74 <_read+0x44>)
    3b50:	0080      	lsls	r0, r0, #2
    3b52:	58c0      	ldr	r0, [r0, r3]
    3b54:	2800      	cmp	r0, #0
    3b56:	d006      	beq.n	3b66 <_read+0x36>
    3b58:	6803      	ldr	r3, [r0, #0]
    3b5a:	689b      	ldr	r3, [r3, #8]
    3b5c:	4798      	blx	r3
    3b5e:	e7f4      	b.n	3b4a <_read+0x1a>
    3b60:	f7ff ff06 	bl	3970 <_ZL11init_serialv.part.0>
    3b64:	e7ec      	b.n	3b40 <_read+0x10>
    3b66:	2001      	movs	r0, #1
    3b68:	4240      	negs	r0, r0
    3b6a:	e7ee      	b.n	3b4a <_read+0x1a>
    3b6c:	200045a4 	.word	0x200045a4
    3b70:	20004640 	.word	0x20004640
    3b74:	2000449c 	.word	0x2000449c

00003b78 <_isatty>:
    3b78:	b508      	push	{r3, lr}
    3b7a:	1c03      	adds	r3, r0, #0
    3b7c:	2001      	movs	r0, #1
    3b7e:	2b02      	cmp	r3, #2
    3b80:	dd08      	ble.n	3b94 <_isatty+0x1c>
    3b82:	3b03      	subs	r3, #3
    3b84:	4a05      	ldr	r2, [pc, #20]	; (3b9c <_isatty+0x24>)
    3b86:	009b      	lsls	r3, r3, #2
    3b88:	5898      	ldr	r0, [r3, r2]
    3b8a:	2800      	cmp	r0, #0
    3b8c:	d003      	beq.n	3b96 <_isatty+0x1e>
    3b8e:	6803      	ldr	r3, [r0, #0]
    3b90:	68db      	ldr	r3, [r3, #12]
    3b92:	4798      	blx	r3
    3b94:	bd08      	pop	{r3, pc}
    3b96:	2001      	movs	r0, #1
    3b98:	4240      	negs	r0, r0
    3b9a:	e7fb      	b.n	3b94 <_isatty+0x1c>
    3b9c:	2000449c 	.word	0x2000449c

00003ba0 <_lseek>:
    3ba0:	b508      	push	{r3, lr}
    3ba2:	1c03      	adds	r3, r0, #0
    3ba4:	2000      	movs	r0, #0
    3ba6:	2b02      	cmp	r3, #2
    3ba8:	dd08      	ble.n	3bbc <_lseek+0x1c>
    3baa:	3b03      	subs	r3, #3
    3bac:	4805      	ldr	r0, [pc, #20]	; (3bc4 <_lseek+0x24>)
    3bae:	009b      	lsls	r3, r3, #2
    3bb0:	5818      	ldr	r0, [r3, r0]
    3bb2:	2800      	cmp	r0, #0
    3bb4:	d003      	beq.n	3bbe <_lseek+0x1e>
    3bb6:	6803      	ldr	r3, [r0, #0]
    3bb8:	691b      	ldr	r3, [r3, #16]
    3bba:	4798      	blx	r3
    3bbc:	bd08      	pop	{r3, pc}
    3bbe:	2001      	movs	r0, #1
    3bc0:	4240      	negs	r0, r0
    3bc2:	e7fb      	b.n	3bbc <_lseek+0x1c>
    3bc4:	2000449c 	.word	0x2000449c

00003bc8 <_fstat>:
    3bc8:	b508      	push	{r3, lr}
    3bca:	2802      	cmp	r0, #2
    3bcc:	d804      	bhi.n	3bd8 <_fstat+0x10>
    3bce:	2380      	movs	r3, #128	; 0x80
    3bd0:	2000      	movs	r0, #0
    3bd2:	019b      	lsls	r3, r3, #6
    3bd4:	604b      	str	r3, [r1, #4]
    3bd6:	bd08      	pop	{r3, pc}
    3bd8:	f005 fba6 	bl	9328 <__errno>
    3bdc:	2309      	movs	r3, #9
    3bde:	6003      	str	r3, [r0, #0]
    3be0:	2001      	movs	r0, #1
    3be2:	4240      	negs	r0, r0
    3be4:	e7f7      	b.n	3bd6 <_fstat+0xe>
    3be6:	46c0      	nop			; (mov r8, r8)

00003be8 <__cxa_pure_virtual>:
    3be8:	b508      	push	{r3, lr}
    3bea:	2001      	movs	r0, #1
    3bec:	f005 fba2 	bl	9334 <exit>

00003bf0 <mbed_main>:
    3bf0:	4770      	bx	lr
    3bf2:	46c0      	nop			; (mov r8, r8)

00003bf4 <__wrap_main>:
    3bf4:	b508      	push	{r3, lr}
    3bf6:	f7ff fe95 	bl	3924 <mbed_sdk_init>
    3bfa:	f7ff fff9 	bl	3bf0 <mbed_main>
    3bfe:	f7fd fe87 	bl	1910 <main>
    3c02:	bd08      	pop	{r3, pc}

00003c04 <_sbrk>:
    3c04:	4a07      	ldr	r2, [pc, #28]	; (3c24 <_sbrk+0x20>)
    3c06:	6813      	ldr	r3, [r2, #0]
    3c08:	1818      	adds	r0, r3, r0
    3c0a:	f3ef 8108 	mrs	r1, MSP
    3c0e:	4288      	cmp	r0, r1
    3c10:	d202      	bcs.n	3c18 <_sbrk+0x14>
    3c12:	6010      	str	r0, [r2, #0]
    3c14:	1c18      	adds	r0, r3, #0
    3c16:	4770      	bx	lr
    3c18:	220c      	movs	r2, #12
    3c1a:	2001      	movs	r0, #1
    3c1c:	4b02      	ldr	r3, [pc, #8]	; (3c28 <_sbrk+0x24>)
    3c1e:	4240      	negs	r0, r0
    3c20:	601a      	str	r2, [r3, #0]
    3c22:	e7f8      	b.n	3c16 <_sbrk+0x12>
    3c24:	200000cc 	.word	0x200000cc
    3c28:	200046b0 	.word	0x200046b0

00003c2c <_exit>:
    3c2c:	b508      	push	{r3, lr}
    3c2e:	2800      	cmp	r0, #0
    3c30:	d100      	bne.n	3c34 <_exit+0x8>
    3c32:	e7fe      	b.n	3c32 <_exit+0x6>
    3c34:	f7ff fe52 	bl	38dc <mbed_die>
    3c38:	e7fb      	b.n	3c32 <_exit+0x6>
    3c3a:	46c0      	nop			; (mov r8, r8)

00003c3c <_ZN4mbed26mbed_set_unbuffered_streamEP7__sFILE>:
    3c3c:	b508      	push	{r3, lr}
    3c3e:	2100      	movs	r1, #0
    3c40:	f007 f991 	bl	af66 <setbuf>
    3c44:	bd08      	pop	{r3, pc}
    3c46:	46c0      	nop			; (mov r8, r8)

00003c48 <Dummy_Handler>:
    3c48:	e7fe      	b.n	3c48 <Dummy_Handler>
    3c4a:	46c0      	nop			; (mov r8, r8)

00003c4c <Reset_Handler>:
    3c4c:	4816      	ldr	r0, [pc, #88]	; (3ca8 <Reset_Handler+0x5c>)
    3c4e:	4917      	ldr	r1, [pc, #92]	; (3cac <Reset_Handler+0x60>)
    3c50:	b510      	push	{r4, lr}
    3c52:	4288      	cmp	r0, r1
    3c54:	d00d      	beq.n	3c72 <Reset_Handler+0x26>
    3c56:	4b16      	ldr	r3, [pc, #88]	; (3cb0 <Reset_Handler+0x64>)
    3c58:	4299      	cmp	r1, r3
    3c5a:	d20a      	bcs.n	3c72 <Reset_Handler+0x26>
    3c5c:	43ca      	mvns	r2, r1
    3c5e:	18d3      	adds	r3, r2, r3
    3c60:	2200      	movs	r2, #0
    3c62:	089b      	lsrs	r3, r3, #2
    3c64:	3301      	adds	r3, #1
    3c66:	009b      	lsls	r3, r3, #2
    3c68:	5884      	ldr	r4, [r0, r2]
    3c6a:	508c      	str	r4, [r1, r2]
    3c6c:	3204      	adds	r2, #4
    3c6e:	429a      	cmp	r2, r3
    3c70:	d1fa      	bne.n	3c68 <Reset_Handler+0x1c>
    3c72:	4910      	ldr	r1, [pc, #64]	; (3cb4 <Reset_Handler+0x68>)
    3c74:	4b10      	ldr	r3, [pc, #64]	; (3cb8 <Reset_Handler+0x6c>)
    3c76:	4299      	cmp	r1, r3
    3c78:	d20b      	bcs.n	3c92 <Reset_Handler+0x46>
    3c7a:	43ca      	mvns	r2, r1
    3c7c:	2000      	movs	r0, #0
    3c7e:	18d3      	adds	r3, r2, r3
    3c80:	2200      	movs	r2, #0
    3c82:	089b      	lsrs	r3, r3, #2
    3c84:	3301      	adds	r3, #1
    3c86:	009b      	lsls	r3, r3, #2
    3c88:	188c      	adds	r4, r1, r2
    3c8a:	3204      	adds	r2, #4
    3c8c:	6020      	str	r0, [r4, #0]
    3c8e:	429a      	cmp	r2, r3
    3c90:	d1fa      	bne.n	3c88 <Reset_Handler+0x3c>
    3c92:	21ff      	movs	r1, #255	; 0xff
    3c94:	4b09      	ldr	r3, [pc, #36]	; (3cbc <Reset_Handler+0x70>)
    3c96:	4a0a      	ldr	r2, [pc, #40]	; (3cc0 <Reset_Handler+0x74>)
    3c98:	438b      	bics	r3, r1
    3c9a:	6093      	str	r3, [r2, #8]
    3c9c:	f005 fe48 	bl	9930 <__libc_init_array>
    3ca0:	f7ff ffa8 	bl	3bf4 <__wrap_main>
    3ca4:	e7fe      	b.n	3ca4 <Reset_Handler+0x58>
    3ca6:	46c0      	nop			; (mov r8, r8)
    3ca8:	0000f9e8 	.word	0x0000f9e8
    3cac:	200000b0 	.word	0x200000b0
    3cb0:	20000174 	.word	0x20000174
    3cb4:	20000174 	.word	0x20000174
    3cb8:	200046b4 	.word	0x200046b4
    3cbc:	00000000 	.word	0x00000000
    3cc0:	e000ed00 	.word	0xe000ed00

00003cc4 <extint_register_callback>:
    3cc4:	2317      	movs	r3, #23
    3cc6:	2a00      	cmp	r2, #0
    3cc8:	d001      	beq.n	3cce <extint_register_callback+0xa>
    3cca:	1c18      	adds	r0, r3, #0
    3ccc:	4770      	bx	lr
    3cce:	4a06      	ldr	r2, [pc, #24]	; (3ce8 <extint_register_callback+0x24>)
    3cd0:	0089      	lsls	r1, r1, #2
    3cd2:	588b      	ldr	r3, [r1, r2]
    3cd4:	2b00      	cmp	r3, #0
    3cd6:	d003      	beq.n	3ce0 <extint_register_callback+0x1c>
    3cd8:	4283      	cmp	r3, r0
    3cda:	d003      	beq.n	3ce4 <extint_register_callback+0x20>
    3cdc:	231d      	movs	r3, #29
    3cde:	e7f4      	b.n	3cca <extint_register_callback+0x6>
    3ce0:	5088      	str	r0, [r1, r2]
    3ce2:	e7f2      	b.n	3cca <extint_register_callback+0x6>
    3ce4:	2300      	movs	r3, #0
    3ce6:	e7f0      	b.n	3cca <extint_register_callback+0x6>
    3ce8:	20004600 	.word	0x20004600

00003cec <extint_chan_enable_callback>:
    3cec:	2317      	movs	r3, #23
    3cee:	2900      	cmp	r1, #0
    3cf0:	d001      	beq.n	3cf6 <extint_chan_enable_callback+0xa>
    3cf2:	1c18      	adds	r0, r3, #0
    3cf4:	4770      	bx	lr
    3cf6:	2200      	movs	r2, #0
    3cf8:	281f      	cmp	r0, #31
    3cfa:	d800      	bhi.n	3cfe <extint_chan_enable_callback+0x12>
    3cfc:	4a02      	ldr	r2, [pc, #8]	; (3d08 <extint_chan_enable_callback+0x1c>)
    3cfe:	2301      	movs	r3, #1
    3d00:	4083      	lsls	r3, r0
    3d02:	60d3      	str	r3, [r2, #12]
    3d04:	2300      	movs	r3, #0
    3d06:	e7f4      	b.n	3cf2 <extint_chan_enable_callback+0x6>
    3d08:	40001800 	.word	0x40001800

00003d0c <EIC_Handler>:
    3d0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3d0e:	2300      	movs	r3, #0
    3d10:	2601      	movs	r6, #1
    3d12:	4c0b      	ldr	r4, [pc, #44]	; (3d40 <EIC_Handler+0x34>)
    3d14:	4d0b      	ldr	r5, [pc, #44]	; (3d44 <EIC_Handler+0x38>)
    3d16:	4f0c      	ldr	r7, [pc, #48]	; (3d48 <EIC_Handler+0x3c>)
    3d18:	7023      	strb	r3, [r4, #0]
    3d1a:	1c32      	adds	r2, r6, #0
    3d1c:	409a      	lsls	r2, r3
    3d1e:	6929      	ldr	r1, [r5, #16]
    3d20:	4211      	tst	r1, r2
    3d22:	d005      	beq.n	3d30 <EIC_Handler+0x24>
    3d24:	612a      	str	r2, [r5, #16]
    3d26:	009b      	lsls	r3, r3, #2
    3d28:	59db      	ldr	r3, [r3, r7]
    3d2a:	2b00      	cmp	r3, #0
    3d2c:	d000      	beq.n	3d30 <EIC_Handler+0x24>
    3d2e:	4798      	blx	r3
    3d30:	7823      	ldrb	r3, [r4, #0]
    3d32:	3301      	adds	r3, #1
    3d34:	b2db      	uxtb	r3, r3
    3d36:	7023      	strb	r3, [r4, #0]
    3d38:	2b0f      	cmp	r3, #15
    3d3a:	d9ee      	bls.n	3d1a <EIC_Handler+0xe>
    3d3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3d3e:	46c0      	nop			; (mov r8, r8)
    3d40:	200045fc 	.word	0x200045fc
    3d44:	40001800 	.word	0x40001800
    3d48:	20004600 	.word	0x20004600

00003d4c <_extint_enable>:
    3d4c:	2302      	movs	r3, #2
    3d4e:	4a04      	ldr	r2, [pc, #16]	; (3d60 <_extint_enable+0x14>)
    3d50:	7811      	ldrb	r1, [r2, #0]
    3d52:	430b      	orrs	r3, r1
    3d54:	7013      	strb	r3, [r2, #0]
    3d56:	7853      	ldrb	r3, [r2, #1]
    3d58:	b25b      	sxtb	r3, r3
    3d5a:	2b00      	cmp	r3, #0
    3d5c:	dbfb      	blt.n	3d56 <_extint_enable+0xa>
    3d5e:	4770      	bx	lr
    3d60:	40001800 	.word	0x40001800

00003d64 <_system_extint_init>:
    3d64:	2340      	movs	r3, #64	; 0x40
    3d66:	b500      	push	{lr}
    3d68:	4a12      	ldr	r2, [pc, #72]	; (3db4 <_system_extint_init+0x50>)
    3d6a:	b083      	sub	sp, #12
    3d6c:	6991      	ldr	r1, [r2, #24]
    3d6e:	2005      	movs	r0, #5
    3d70:	430b      	orrs	r3, r1
    3d72:	6193      	str	r3, [r2, #24]
    3d74:	2300      	movs	r3, #0
    3d76:	a901      	add	r1, sp, #4
    3d78:	700b      	strb	r3, [r1, #0]
    3d7a:	f000 f9c9 	bl	4110 <system_gclk_chan_set_config>
    3d7e:	2005      	movs	r0, #5
    3d80:	f000 f988 	bl	4094 <system_gclk_chan_enable>
    3d84:	2301      	movs	r3, #1
    3d86:	4a0c      	ldr	r2, [pc, #48]	; (3db8 <_system_extint_init+0x54>)
    3d88:	7811      	ldrb	r1, [r2, #0]
    3d8a:	430b      	orrs	r3, r1
    3d8c:	7013      	strb	r3, [r2, #0]
    3d8e:	7853      	ldrb	r3, [r2, #1]
    3d90:	b25b      	sxtb	r3, r3
    3d92:	2b00      	cmp	r3, #0
    3d94:	dbfb      	blt.n	3d8e <_system_extint_init+0x2a>
    3d96:	4b09      	ldr	r3, [pc, #36]	; (3dbc <_system_extint_init+0x58>)
    3d98:	2200      	movs	r2, #0
    3d9a:	1c19      	adds	r1, r3, #0
    3d9c:	3140      	adds	r1, #64	; 0x40
    3d9e:	c304      	stmia	r3!, {r2}
    3da0:	428b      	cmp	r3, r1
    3da2:	d1fc      	bne.n	3d9e <_system_extint_init+0x3a>
    3da4:	2210      	movs	r2, #16
    3da6:	4b06      	ldr	r3, [pc, #24]	; (3dc0 <_system_extint_init+0x5c>)
    3da8:	601a      	str	r2, [r3, #0]
    3daa:	f7ff ffcf 	bl	3d4c <_extint_enable>
    3dae:	b003      	add	sp, #12
    3db0:	bd00      	pop	{pc}
    3db2:	46c0      	nop			; (mov r8, r8)
    3db4:	40000400 	.word	0x40000400
    3db8:	40001800 	.word	0x40001800
    3dbc:	20004600 	.word	0x20004600
    3dc0:	e000e100 	.word	0xe000e100

00003dc4 <extint_chan_get_config_defaults>:
    3dc4:	2300      	movs	r3, #0
    3dc6:	2201      	movs	r2, #1
    3dc8:	6003      	str	r3, [r0, #0]
    3dca:	6043      	str	r3, [r0, #4]
    3dcc:	7283      	strb	r3, [r0, #10]
    3dce:	3302      	adds	r3, #2
    3dd0:	7202      	strb	r2, [r0, #8]
    3dd2:	7242      	strb	r2, [r0, #9]
    3dd4:	72c3      	strb	r3, [r0, #11]
    3dd6:	4770      	bx	lr

00003dd8 <extint_chan_set_config>:
    3dd8:	b5f0      	push	{r4, r5, r6, r7, lr}
    3dda:	2300      	movs	r3, #0
    3ddc:	1c0c      	adds	r4, r1, #0
    3dde:	b083      	sub	sp, #12
    3de0:	a901      	add	r1, sp, #4
    3de2:	704b      	strb	r3, [r1, #1]
    3de4:	70cb      	strb	r3, [r1, #3]
    3de6:	7923      	ldrb	r3, [r4, #4]
    3de8:	1c05      	adds	r5, r0, #0
    3dea:	700b      	strb	r3, [r1, #0]
    3dec:	7a23      	ldrb	r3, [r4, #8]
    3dee:	7820      	ldrb	r0, [r4, #0]
    3df0:	708b      	strb	r3, [r1, #2]
    3df2:	2600      	movs	r6, #0
    3df4:	f000 f882 	bl	3efc <system_pinmux_pin_set_config>
    3df8:	2d1f      	cmp	r5, #31
    3dfa:	d800      	bhi.n	3dfe <extint_chan_set_config+0x26>
    3dfc:	4e12      	ldr	r6, [pc, #72]	; (3e48 <extint_chan_set_config+0x70>)
    3dfe:	2207      	movs	r2, #7
    3e00:	7aa3      	ldrb	r3, [r4, #10]
    3e02:	402a      	ands	r2, r5
    3e04:	0092      	lsls	r2, r2, #2
    3e06:	7ae0      	ldrb	r0, [r4, #11]
    3e08:	2b00      	cmp	r3, #0
    3e0a:	d001      	beq.n	3e10 <extint_chan_set_config+0x38>
    3e0c:	2308      	movs	r3, #8
    3e0e:	4318      	orrs	r0, r3
    3e10:	270f      	movs	r7, #15
    3e12:	4097      	lsls	r7, r2
    3e14:	08eb      	lsrs	r3, r5, #3
    3e16:	009b      	lsls	r3, r3, #2
    3e18:	18f3      	adds	r3, r6, r3
    3e1a:	6999      	ldr	r1, [r3, #24]
    3e1c:	4090      	lsls	r0, r2
    3e1e:	43b9      	bics	r1, r7
    3e20:	1c0a      	adds	r2, r1, #0
    3e22:	4302      	orrs	r2, r0
    3e24:	619a      	str	r2, [r3, #24]
    3e26:	7a63      	ldrb	r3, [r4, #9]
    3e28:	2b00      	cmp	r3, #0
    3e2a:	d106      	bne.n	3e3a <extint_chan_set_config+0x62>
    3e2c:	2201      	movs	r2, #1
    3e2e:	40aa      	lsls	r2, r5
    3e30:	6973      	ldr	r3, [r6, #20]
    3e32:	4393      	bics	r3, r2
    3e34:	6173      	str	r3, [r6, #20]
    3e36:	b003      	add	sp, #12
    3e38:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3e3a:	2201      	movs	r2, #1
    3e3c:	40aa      	lsls	r2, r5
    3e3e:	1c15      	adds	r5, r2, #0
    3e40:	6973      	ldr	r3, [r6, #20]
    3e42:	431d      	orrs	r5, r3
    3e44:	6175      	str	r5, [r6, #20]
    3e46:	e7f6      	b.n	3e36 <extint_chan_set_config+0x5e>
    3e48:	40001800 	.word	0x40001800

00003e4c <_system_pinmux_config>:
    3e4c:	78d3      	ldrb	r3, [r2, #3]
    3e4e:	b570      	push	{r4, r5, r6, lr}
    3e50:	2b00      	cmp	r3, #0
    3e52:	d131      	bne.n	3eb8 <_system_pinmux_config+0x6c>
    3e54:	7814      	ldrb	r4, [r2, #0]
    3e56:	2c80      	cmp	r4, #128	; 0x80
    3e58:	d047      	beq.n	3eea <_system_pinmux_config+0x9e>
    3e5a:	2380      	movs	r3, #128	; 0x80
    3e5c:	0624      	lsls	r4, r4, #24
    3e5e:	025b      	lsls	r3, r3, #9
    3e60:	431c      	orrs	r4, r3
    3e62:	7853      	ldrb	r3, [r2, #1]
    3e64:	2502      	movs	r5, #2
    3e66:	1c1e      	adds	r6, r3, #0
    3e68:	43ae      	bics	r6, r5
    3e6a:	d107      	bne.n	3e7c <_system_pinmux_config+0x30>
    3e6c:	7893      	ldrb	r3, [r2, #2]
    3e6e:	2b00      	cmp	r3, #0
    3e70:	d137      	bne.n	3ee2 <_system_pinmux_config+0x96>
    3e72:	2380      	movs	r3, #128	; 0x80
    3e74:	029b      	lsls	r3, r3, #10
    3e76:	431c      	orrs	r4, r3
    3e78:	6041      	str	r1, [r0, #4]
    3e7a:	7853      	ldrb	r3, [r2, #1]
    3e7c:	3b01      	subs	r3, #1
    3e7e:	2b01      	cmp	r3, #1
    3e80:	d935      	bls.n	3eee <_system_pinmux_config+0xa2>
    3e82:	25a0      	movs	r5, #160	; 0xa0
    3e84:	040b      	lsls	r3, r1, #16
    3e86:	05ed      	lsls	r5, r5, #23
    3e88:	0c1b      	lsrs	r3, r3, #16
    3e8a:	432b      	orrs	r3, r5
    3e8c:	25d0      	movs	r5, #208	; 0xd0
    3e8e:	4323      	orrs	r3, r4
    3e90:	6283      	str	r3, [r0, #40]	; 0x28
    3e92:	062d      	lsls	r5, r5, #24
    3e94:	0c0b      	lsrs	r3, r1, #16
    3e96:	432b      	orrs	r3, r5
    3e98:	4323      	orrs	r3, r4
    3e9a:	6283      	str	r3, [r0, #40]	; 0x28
    3e9c:	78d3      	ldrb	r3, [r2, #3]
    3e9e:	2b00      	cmp	r3, #0
    3ea0:	d109      	bne.n	3eb6 <_system_pinmux_config+0x6a>
    3ea2:	0363      	lsls	r3, r4, #13
    3ea4:	d503      	bpl.n	3eae <_system_pinmux_config+0x62>
    3ea6:	7893      	ldrb	r3, [r2, #2]
    3ea8:	2b01      	cmp	r3, #1
    3eaa:	d023      	beq.n	3ef4 <_system_pinmux_config+0xa8>
    3eac:	6141      	str	r1, [r0, #20]
    3eae:	7853      	ldrb	r3, [r2, #1]
    3eb0:	3b01      	subs	r3, #1
    3eb2:	2b01      	cmp	r3, #1
    3eb4:	d913      	bls.n	3ede <_system_pinmux_config+0x92>
    3eb6:	bd70      	pop	{r4, r5, r6, pc}
    3eb8:	24a0      	movs	r4, #160	; 0xa0
    3eba:	040b      	lsls	r3, r1, #16
    3ebc:	05e4      	lsls	r4, r4, #23
    3ebe:	0c1b      	lsrs	r3, r3, #16
    3ec0:	4323      	orrs	r3, r4
    3ec2:	24d0      	movs	r4, #208	; 0xd0
    3ec4:	6041      	str	r1, [r0, #4]
    3ec6:	0624      	lsls	r4, r4, #24
    3ec8:	6283      	str	r3, [r0, #40]	; 0x28
    3eca:	0c0b      	lsrs	r3, r1, #16
    3ecc:	4323      	orrs	r3, r4
    3ece:	6283      	str	r3, [r0, #40]	; 0x28
    3ed0:	78d3      	ldrb	r3, [r2, #3]
    3ed2:	2b00      	cmp	r3, #0
    3ed4:	d1ef      	bne.n	3eb6 <_system_pinmux_config+0x6a>
    3ed6:	7853      	ldrb	r3, [r2, #1]
    3ed8:	3b01      	subs	r3, #1
    3eda:	2b01      	cmp	r3, #1
    3edc:	d8eb      	bhi.n	3eb6 <_system_pinmux_config+0x6a>
    3ede:	6081      	str	r1, [r0, #8]
    3ee0:	e7e9      	b.n	3eb6 <_system_pinmux_config+0x6a>
    3ee2:	23c0      	movs	r3, #192	; 0xc0
    3ee4:	02db      	lsls	r3, r3, #11
    3ee6:	431c      	orrs	r4, r3
    3ee8:	e7c6      	b.n	3e78 <_system_pinmux_config+0x2c>
    3eea:	2400      	movs	r4, #0
    3eec:	e7b9      	b.n	3e62 <_system_pinmux_config+0x16>
    3eee:	4b02      	ldr	r3, [pc, #8]	; (3ef8 <_system_pinmux_config+0xac>)
    3ef0:	401c      	ands	r4, r3
    3ef2:	e7c6      	b.n	3e82 <_system_pinmux_config+0x36>
    3ef4:	6181      	str	r1, [r0, #24]
    3ef6:	e7da      	b.n	3eae <_system_pinmux_config+0x62>
    3ef8:	fffbffff 	.word	0xfffbffff

00003efc <system_pinmux_pin_set_config>:
    3efc:	b508      	push	{r3, lr}
    3efe:	1c0a      	adds	r2, r1, #0
    3f00:	1c03      	adds	r3, r0, #0
    3f02:	09c1      	lsrs	r1, r0, #7
    3f04:	2000      	movs	r0, #0
    3f06:	2900      	cmp	r1, #0
    3f08:	d104      	bne.n	3f14 <system_pinmux_pin_set_config+0x18>
    3f0a:	4906      	ldr	r1, [pc, #24]	; (3f24 <system_pinmux_pin_set_config+0x28>)
    3f0c:	0958      	lsrs	r0, r3, #5
    3f0e:	468c      	mov	ip, r1
    3f10:	01c0      	lsls	r0, r0, #7
    3f12:	4460      	add	r0, ip
    3f14:	211f      	movs	r1, #31
    3f16:	400b      	ands	r3, r1
    3f18:	391e      	subs	r1, #30
    3f1a:	4099      	lsls	r1, r3
    3f1c:	f7ff ff96 	bl	3e4c <_system_pinmux_config>
    3f20:	bd08      	pop	{r3, pc}
    3f22:	46c0      	nop			; (mov r8, r8)
    3f24:	41004400 	.word	0x41004400

00003f28 <system_gclk_init>:
    3f28:	2308      	movs	r3, #8
    3f2a:	4a06      	ldr	r2, [pc, #24]	; (3f44 <system_gclk_init+0x1c>)
    3f2c:	6991      	ldr	r1, [r2, #24]
    3f2e:	430b      	orrs	r3, r1
    3f30:	6193      	str	r3, [r2, #24]
    3f32:	2301      	movs	r3, #1
    3f34:	2101      	movs	r1, #1
    3f36:	4a04      	ldr	r2, [pc, #16]	; (3f48 <system_gclk_init+0x20>)
    3f38:	7013      	strb	r3, [r2, #0]
    3f3a:	7813      	ldrb	r3, [r2, #0]
    3f3c:	4219      	tst	r1, r3
    3f3e:	d1fc      	bne.n	3f3a <system_gclk_init+0x12>
    3f40:	4770      	bx	lr
    3f42:	46c0      	nop			; (mov r8, r8)
    3f44:	40000400 	.word	0x40000400
    3f48:	40000c00 	.word	0x40000c00

00003f4c <system_gclk_gen_set_config>:
    3f4c:	b570      	push	{r4, r5, r6, lr}
    3f4e:	780d      	ldrb	r5, [r1, #0]
    3f50:	784b      	ldrb	r3, [r1, #1]
    3f52:	022d      	lsls	r5, r5, #8
    3f54:	1c04      	adds	r4, r0, #0
    3f56:	4305      	orrs	r5, r0
    3f58:	2b00      	cmp	r3, #0
    3f5a:	d002      	beq.n	3f62 <system_gclk_gen_set_config+0x16>
    3f5c:	2380      	movs	r3, #128	; 0x80
    3f5e:	02db      	lsls	r3, r3, #11
    3f60:	431d      	orrs	r5, r3
    3f62:	7a4b      	ldrb	r3, [r1, #9]
    3f64:	2b00      	cmp	r3, #0
    3f66:	d002      	beq.n	3f6e <system_gclk_gen_set_config+0x22>
    3f68:	2380      	movs	r3, #128	; 0x80
    3f6a:	031b      	lsls	r3, r3, #12
    3f6c:	431d      	orrs	r5, r3
    3f6e:	684e      	ldr	r6, [r1, #4]
    3f70:	2e01      	cmp	r6, #1
    3f72:	d90f      	bls.n	3f94 <system_gclk_gen_set_config+0x48>
    3f74:	1e73      	subs	r3, r6, #1
    3f76:	4033      	ands	r3, r6
    3f78:	d129      	bne.n	3fce <system_gclk_gen_set_config+0x82>
    3f7a:	2e02      	cmp	r6, #2
    3f7c:	d005      	beq.n	3f8a <system_gclk_gen_set_config+0x3e>
    3f7e:	2202      	movs	r2, #2
    3f80:	3301      	adds	r3, #1
    3f82:	0052      	lsls	r2, r2, #1
    3f84:	4296      	cmp	r6, r2
    3f86:	d8fb      	bhi.n	3f80 <system_gclk_gen_set_config+0x34>
    3f88:	021b      	lsls	r3, r3, #8
    3f8a:	4318      	orrs	r0, r3
    3f8c:	2380      	movs	r3, #128	; 0x80
    3f8e:	1c04      	adds	r4, r0, #0
    3f90:	035b      	lsls	r3, r3, #13
    3f92:	431d      	orrs	r5, r3
    3f94:	7a0b      	ldrb	r3, [r1, #8]
    3f96:	2b00      	cmp	r3, #0
    3f98:	d002      	beq.n	3fa0 <system_gclk_gen_set_config+0x54>
    3f9a:	2380      	movs	r3, #128	; 0x80
    3f9c:	039b      	lsls	r3, r3, #14
    3f9e:	431d      	orrs	r5, r3
    3fa0:	4a0e      	ldr	r2, [pc, #56]	; (3fdc <system_gclk_gen_set_config+0x90>)
    3fa2:	7853      	ldrb	r3, [r2, #1]
    3fa4:	4e0d      	ldr	r6, [pc, #52]	; (3fdc <system_gclk_gen_set_config+0x90>)
    3fa6:	b25b      	sxtb	r3, r3
    3fa8:	2b00      	cmp	r3, #0
    3faa:	dbfa      	blt.n	3fa2 <system_gclk_gen_set_config+0x56>
    3fac:	f000 f8de 	bl	416c <cpu_irq_enter_critical>
    3fb0:	60b4      	str	r4, [r6, #8]
    3fb2:	7873      	ldrb	r3, [r6, #1]
    3fb4:	4a09      	ldr	r2, [pc, #36]	; (3fdc <system_gclk_gen_set_config+0x90>)
    3fb6:	b25b      	sxtb	r3, r3
    3fb8:	2b00      	cmp	r3, #0
    3fba:	dbfa      	blt.n	3fb2 <system_gclk_gen_set_config+0x66>
    3fbc:	2380      	movs	r3, #128	; 0x80
    3fbe:	6851      	ldr	r1, [r2, #4]
    3fc0:	025b      	lsls	r3, r3, #9
    3fc2:	400b      	ands	r3, r1
    3fc4:	431d      	orrs	r5, r3
    3fc6:	6055      	str	r5, [r2, #4]
    3fc8:	f000 f8ee 	bl	41a8 <cpu_irq_leave_critical>
    3fcc:	bd70      	pop	{r4, r5, r6, pc}
    3fce:	2380      	movs	r3, #128	; 0x80
    3fd0:	0234      	lsls	r4, r6, #8
    3fd2:	029b      	lsls	r3, r3, #10
    3fd4:	4304      	orrs	r4, r0
    3fd6:	431d      	orrs	r5, r3
    3fd8:	e7dc      	b.n	3f94 <system_gclk_gen_set_config+0x48>
    3fda:	46c0      	nop			; (mov r8, r8)
    3fdc:	40000c00 	.word	0x40000c00

00003fe0 <system_gclk_gen_enable>:
    3fe0:	b510      	push	{r4, lr}
    3fe2:	1c04      	adds	r4, r0, #0
    3fe4:	4a0b      	ldr	r2, [pc, #44]	; (4014 <system_gclk_gen_enable+0x34>)
    3fe6:	7853      	ldrb	r3, [r2, #1]
    3fe8:	b25b      	sxtb	r3, r3
    3fea:	2b00      	cmp	r3, #0
    3fec:	dbfb      	blt.n	3fe6 <system_gclk_gen_enable+0x6>
    3fee:	f000 f8bd 	bl	416c <cpu_irq_enter_critical>
    3ff2:	4b09      	ldr	r3, [pc, #36]	; (4018 <system_gclk_gen_enable+0x38>)
    3ff4:	4907      	ldr	r1, [pc, #28]	; (4014 <system_gclk_gen_enable+0x34>)
    3ff6:	701c      	strb	r4, [r3, #0]
    3ff8:	784b      	ldrb	r3, [r1, #1]
    3ffa:	4a06      	ldr	r2, [pc, #24]	; (4014 <system_gclk_gen_enable+0x34>)
    3ffc:	b25b      	sxtb	r3, r3
    3ffe:	2b00      	cmp	r3, #0
    4000:	dbfa      	blt.n	3ff8 <system_gclk_gen_enable+0x18>
    4002:	2180      	movs	r1, #128	; 0x80
    4004:	6853      	ldr	r3, [r2, #4]
    4006:	0249      	lsls	r1, r1, #9
    4008:	430b      	orrs	r3, r1
    400a:	6053      	str	r3, [r2, #4]
    400c:	f000 f8cc 	bl	41a8 <cpu_irq_leave_critical>
    4010:	bd10      	pop	{r4, pc}
    4012:	46c0      	nop			; (mov r8, r8)
    4014:	40000c00 	.word	0x40000c00
    4018:	40000c04 	.word	0x40000c04

0000401c <system_gclk_gen_get_hz>:
    401c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    401e:	1c07      	adds	r7, r0, #0
    4020:	4a19      	ldr	r2, [pc, #100]	; (4088 <system_gclk_gen_get_hz+0x6c>)
    4022:	7853      	ldrb	r3, [r2, #1]
    4024:	b25b      	sxtb	r3, r3
    4026:	2b00      	cmp	r3, #0
    4028:	dbfb      	blt.n	4022 <system_gclk_gen_get_hz+0x6>
    402a:	f000 f89f 	bl	416c <cpu_irq_enter_critical>
    402e:	4b17      	ldr	r3, [pc, #92]	; (408c <system_gclk_gen_get_hz+0x70>)
    4030:	4a15      	ldr	r2, [pc, #84]	; (4088 <system_gclk_gen_get_hz+0x6c>)
    4032:	701f      	strb	r7, [r3, #0]
    4034:	7853      	ldrb	r3, [r2, #1]
    4036:	4c14      	ldr	r4, [pc, #80]	; (4088 <system_gclk_gen_get_hz+0x6c>)
    4038:	b25b      	sxtb	r3, r3
    403a:	2b00      	cmp	r3, #0
    403c:	dbfa      	blt.n	4034 <system_gclk_gen_get_hz+0x18>
    403e:	6860      	ldr	r0, [r4, #4]
    4040:	04c0      	lsls	r0, r0, #19
    4042:	0ec0      	lsrs	r0, r0, #27
    4044:	f000 ff4c 	bl	4ee0 <system_clock_source_get_hz>
    4048:	1c06      	adds	r6, r0, #0
    404a:	4b10      	ldr	r3, [pc, #64]	; (408c <system_gclk_gen_get_hz+0x70>)
    404c:	701f      	strb	r7, [r3, #0]
    404e:	6865      	ldr	r5, [r4, #4]
    4050:	4b0f      	ldr	r3, [pc, #60]	; (4090 <system_gclk_gen_get_hz+0x74>)
    4052:	02ed      	lsls	r5, r5, #11
    4054:	0fed      	lsrs	r5, r5, #31
    4056:	701f      	strb	r7, [r3, #0]
    4058:	7863      	ldrb	r3, [r4, #1]
    405a:	b25b      	sxtb	r3, r3
    405c:	2b00      	cmp	r3, #0
    405e:	dbfb      	blt.n	4058 <system_gclk_gen_get_hz+0x3c>
    4060:	4b09      	ldr	r3, [pc, #36]	; (4088 <system_gclk_gen_get_hz+0x6c>)
    4062:	6899      	ldr	r1, [r3, #8]
    4064:	0a09      	lsrs	r1, r1, #8
    4066:	b28c      	uxth	r4, r1
    4068:	f000 f89e 	bl	41a8 <cpu_irq_leave_critical>
    406c:	2d00      	cmp	r5, #0
    406e:	d003      	beq.n	4078 <system_gclk_gen_get_hz+0x5c>
    4070:	1c61      	adds	r1, r4, #1
    4072:	40ce      	lsrs	r6, r1
    4074:	1c30      	adds	r0, r6, #0
    4076:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4078:	2c01      	cmp	r4, #1
    407a:	d9fb      	bls.n	4074 <system_gclk_gen_get_hz+0x58>
    407c:	1c30      	adds	r0, r6, #0
    407e:	1c21      	adds	r1, r4, #0
    4080:	f002 f914 	bl	62ac <__aeabi_uidiv>
    4084:	1c06      	adds	r6, r0, #0
    4086:	e7f5      	b.n	4074 <system_gclk_gen_get_hz+0x58>
    4088:	40000c00 	.word	0x40000c00
    408c:	40000c04 	.word	0x40000c04
    4090:	40000c08 	.word	0x40000c08

00004094 <system_gclk_chan_enable>:
    4094:	b510      	push	{r4, lr}
    4096:	1c04      	adds	r4, r0, #0
    4098:	f000 f868 	bl	416c <cpu_irq_enter_critical>
    409c:	2180      	movs	r1, #128	; 0x80
    409e:	4b05      	ldr	r3, [pc, #20]	; (40b4 <system_gclk_chan_enable+0x20>)
    40a0:	4a05      	ldr	r2, [pc, #20]	; (40b8 <system_gclk_chan_enable+0x24>)
    40a2:	701c      	strb	r4, [r3, #0]
    40a4:	8853      	ldrh	r3, [r2, #2]
    40a6:	01c9      	lsls	r1, r1, #7
    40a8:	430b      	orrs	r3, r1
    40aa:	8053      	strh	r3, [r2, #2]
    40ac:	f000 f87c 	bl	41a8 <cpu_irq_leave_critical>
    40b0:	bd10      	pop	{r4, pc}
    40b2:	46c0      	nop			; (mov r8, r8)
    40b4:	40000c02 	.word	0x40000c02
    40b8:	40000c00 	.word	0x40000c00

000040bc <system_gclk_chan_disable>:
    40bc:	b510      	push	{r4, lr}
    40be:	1c04      	adds	r4, r0, #0
    40c0:	f000 f854 	bl	416c <cpu_irq_enter_critical>
    40c4:	2080      	movs	r0, #128	; 0x80
    40c6:	4b0e      	ldr	r3, [pc, #56]	; (4100 <system_gclk_chan_disable+0x44>)
    40c8:	4a0e      	ldr	r2, [pc, #56]	; (4104 <system_gclk_chan_disable+0x48>)
    40ca:	701c      	strb	r4, [r3, #0]
    40cc:	8854      	ldrh	r4, [r2, #2]
    40ce:	4b0e      	ldr	r3, [pc, #56]	; (4108 <system_gclk_chan_disable+0x4c>)
    40d0:	8851      	ldrh	r1, [r2, #2]
    40d2:	0524      	lsls	r4, r4, #20
    40d4:	400b      	ands	r3, r1
    40d6:	8053      	strh	r3, [r2, #2]
    40d8:	8851      	ldrh	r1, [r2, #2]
    40da:	4b0c      	ldr	r3, [pc, #48]	; (410c <system_gclk_chan_disable+0x50>)
    40dc:	0f24      	lsrs	r4, r4, #28
    40de:	400b      	ands	r3, r1
    40e0:	8053      	strh	r3, [r2, #2]
    40e2:	01c0      	lsls	r0, r0, #7
    40e4:	8853      	ldrh	r3, [r2, #2]
    40e6:	4907      	ldr	r1, [pc, #28]	; (4104 <system_gclk_chan_disable+0x48>)
    40e8:	4203      	tst	r3, r0
    40ea:	d1fb      	bne.n	40e4 <system_gclk_chan_disable+0x28>
    40ec:	8848      	ldrh	r0, [r1, #2]
    40ee:	4b06      	ldr	r3, [pc, #24]	; (4108 <system_gclk_chan_disable+0x4c>)
    40f0:	0222      	lsls	r2, r4, #8
    40f2:	4003      	ands	r3, r0
    40f4:	4313      	orrs	r3, r2
    40f6:	804b      	strh	r3, [r1, #2]
    40f8:	f000 f856 	bl	41a8 <cpu_irq_leave_critical>
    40fc:	bd10      	pop	{r4, pc}
    40fe:	46c0      	nop			; (mov r8, r8)
    4100:	40000c02 	.word	0x40000c02
    4104:	40000c00 	.word	0x40000c00
    4108:	fffff0ff 	.word	0xfffff0ff
    410c:	ffffbfff 	.word	0xffffbfff

00004110 <system_gclk_chan_set_config>:
    4110:	b510      	push	{r4, lr}
    4112:	780c      	ldrb	r4, [r1, #0]
    4114:	0224      	lsls	r4, r4, #8
    4116:	4304      	orrs	r4, r0
    4118:	f7ff ffd0 	bl	40bc <system_gclk_chan_disable>
    411c:	4b01      	ldr	r3, [pc, #4]	; (4124 <system_gclk_chan_set_config+0x14>)
    411e:	b2a4      	uxth	r4, r4
    4120:	805c      	strh	r4, [r3, #2]
    4122:	bd10      	pop	{r4, pc}
    4124:	40000c00 	.word	0x40000c00

00004128 <system_gclk_chan_get_hz>:
    4128:	b510      	push	{r4, lr}
    412a:	1c04      	adds	r4, r0, #0
    412c:	f000 f81e 	bl	416c <cpu_irq_enter_critical>
    4130:	4b05      	ldr	r3, [pc, #20]	; (4148 <system_gclk_chan_get_hz+0x20>)
    4132:	701c      	strb	r4, [r3, #0]
    4134:	4b05      	ldr	r3, [pc, #20]	; (414c <system_gclk_chan_get_hz+0x24>)
    4136:	885c      	ldrh	r4, [r3, #2]
    4138:	f000 f836 	bl	41a8 <cpu_irq_leave_critical>
    413c:	0524      	lsls	r4, r4, #20
    413e:	0f24      	lsrs	r4, r4, #28
    4140:	1c20      	adds	r0, r4, #0
    4142:	f7ff ff6b 	bl	401c <system_gclk_gen_get_hz>
    4146:	bd10      	pop	{r4, pc}
    4148:	40000c02 	.word	0x40000c02
    414c:	40000c00 	.word	0x40000c00

00004150 <_system_dummy_init>:
    4150:	4770      	bx	lr
    4152:	46c0      	nop			; (mov r8, r8)

00004154 <system_init>:
    4154:	b508      	push	{r3, lr}
    4156:	f000 ff57 	bl	5008 <system_clock_init>
    415a:	f7ff fff9 	bl	4150 <_system_dummy_init>
    415e:	f7ff fff7 	bl	4150 <_system_dummy_init>
    4162:	f7ff fdff 	bl	3d64 <_system_extint_init>
    4166:	f7ff fff3 	bl	4150 <_system_dummy_init>
    416a:	bd08      	pop	{r3, pc}

0000416c <cpu_irq_enter_critical>:
    416c:	4b0b      	ldr	r3, [pc, #44]	; (419c <cpu_irq_enter_critical+0x30>)
    416e:	681a      	ldr	r2, [r3, #0]
    4170:	2a00      	cmp	r2, #0
    4172:	d105      	bne.n	4180 <cpu_irq_enter_critical+0x14>
    4174:	f3ef 8110 	mrs	r1, PRIMASK
    4178:	2900      	cmp	r1, #0
    417a:	d005      	beq.n	4188 <cpu_irq_enter_critical+0x1c>
    417c:	4908      	ldr	r1, [pc, #32]	; (41a0 <cpu_irq_enter_critical+0x34>)
    417e:	700a      	strb	r2, [r1, #0]
    4180:	681a      	ldr	r2, [r3, #0]
    4182:	3201      	adds	r2, #1
    4184:	601a      	str	r2, [r3, #0]
    4186:	4770      	bx	lr
    4188:	b672      	cpsid	i
    418a:	f3bf 8f5f 	dmb	sy
    418e:	4a05      	ldr	r2, [pc, #20]	; (41a4 <cpu_irq_enter_critical+0x38>)
    4190:	7011      	strb	r1, [r2, #0]
    4192:	4a03      	ldr	r2, [pc, #12]	; (41a0 <cpu_irq_enter_critical+0x34>)
    4194:	3101      	adds	r1, #1
    4196:	7011      	strb	r1, [r2, #0]
    4198:	e7f2      	b.n	4180 <cpu_irq_enter_critical+0x14>
    419a:	46c0      	nop			; (mov r8, r8)
    419c:	2000459c 	.word	0x2000459c
    41a0:	200045a0 	.word	0x200045a0
    41a4:	200000d0 	.word	0x200000d0

000041a8 <cpu_irq_leave_critical>:
    41a8:	4b08      	ldr	r3, [pc, #32]	; (41cc <cpu_irq_leave_critical+0x24>)
    41aa:	681a      	ldr	r2, [r3, #0]
    41ac:	3a01      	subs	r2, #1
    41ae:	601a      	str	r2, [r3, #0]
    41b0:	681b      	ldr	r3, [r3, #0]
    41b2:	2b00      	cmp	r3, #0
    41b4:	d109      	bne.n	41ca <cpu_irq_leave_critical+0x22>
    41b6:	4b06      	ldr	r3, [pc, #24]	; (41d0 <cpu_irq_leave_critical+0x28>)
    41b8:	781b      	ldrb	r3, [r3, #0]
    41ba:	2b00      	cmp	r3, #0
    41bc:	d005      	beq.n	41ca <cpu_irq_leave_critical+0x22>
    41be:	2201      	movs	r2, #1
    41c0:	4b04      	ldr	r3, [pc, #16]	; (41d4 <cpu_irq_leave_critical+0x2c>)
    41c2:	701a      	strb	r2, [r3, #0]
    41c4:	f3bf 8f5f 	dmb	sy
    41c8:	b662      	cpsie	i
    41ca:	4770      	bx	lr
    41cc:	2000459c 	.word	0x2000459c
    41d0:	200045a0 	.word	0x200045a0
    41d4:	200000d0 	.word	0x200000d0

000041d8 <usart_set_config_default>:
    41d8:	b5f0      	push	{r4, r5, r6, r7, lr}
    41da:	464f      	mov	r7, r9
    41dc:	4646      	mov	r6, r8
    41de:	b4c0      	push	{r6, r7}
    41e0:	1c04      	adds	r4, r0, #0
    41e2:	b085      	sub	sp, #20
    41e4:	2800      	cmp	r0, #0
    41e6:	d05c      	beq.n	42a2 <usart_set_config_default+0xca>
    41e8:	6800      	ldr	r0, [r0, #0]
    41ea:	f000 fe61 	bl	4eb0 <_sercom_get_sercom_inst_index>
    41ee:	250e      	movs	r5, #14
    41f0:	2300      	movs	r3, #0
    41f2:	3014      	adds	r0, #20
    41f4:	446d      	add	r5, sp
    41f6:	b2c0      	uxtb	r0, r0
    41f8:	802b      	strh	r3, [r5, #0]
    41fa:	69a7      	ldr	r7, [r4, #24]
    41fc:	6966      	ldr	r6, [r4, #20]
    41fe:	f7ff ff93 	bl	4128 <system_gclk_chan_get_hz>
    4202:	2310      	movs	r3, #16
    4204:	1c01      	adds	r1, r0, #0
    4206:	9300      	str	r3, [sp, #0]
    4208:	1c38      	adds	r0, r7, #0
    420a:	1c2a      	adds	r2, r5, #0
    420c:	2300      	movs	r3, #0
    420e:	f000 fd67 	bl	4ce0 <_sercom_get_async_baud_val>
    4212:	6822      	ldr	r2, [r4, #0]
    4214:	69d3      	ldr	r3, [r2, #28]
    4216:	2b00      	cmp	r3, #0
    4218:	d1fc      	bne.n	4214 <usart_set_config_default+0x3c>
    421a:	882b      	ldrh	r3, [r5, #0]
    421c:	8193      	strh	r3, [r2, #12]
    421e:	68e2      	ldr	r2, [r4, #12]
    4220:	6923      	ldr	r3, [r4, #16]
    4222:	4313      	orrs	r3, r2
    4224:	221d      	movs	r2, #29
    4226:	56a2      	ldrsb	r2, [r4, r2]
    4228:	3201      	adds	r2, #1
    422a:	d028      	beq.n	427e <usart_set_config_default+0xa6>
    422c:	25c0      	movs	r5, #192	; 0xc0
    422e:	02ad      	lsls	r5, r5, #10
    4230:	431d      	orrs	r5, r3
    4232:	231c      	movs	r3, #28
    4234:	56e3      	ldrsb	r3, [r4, r3]
    4236:	3301      	adds	r3, #1
    4238:	d019      	beq.n	426e <usart_set_config_default+0x96>
    423a:	68a2      	ldr	r2, [r4, #8]
    423c:	2aff      	cmp	r2, #255	; 0xff
    423e:	d01b      	beq.n	4278 <usart_set_config_default+0xa0>
    4240:	4b29      	ldr	r3, [pc, #164]	; (42e8 <usart_set_config_default+0x110>)
    4242:	4315      	orrs	r5, r2
    4244:	431e      	orrs	r6, r3
    4246:	2c00      	cmp	r4, #0
    4248:	d025      	beq.n	4296 <usart_set_config_default+0xbe>
    424a:	6822      	ldr	r2, [r4, #0]
    424c:	69d3      	ldr	r3, [r2, #28]
    424e:	2b00      	cmp	r3, #0
    4250:	d1fc      	bne.n	424c <usart_set_config_default+0x74>
    4252:	6055      	str	r5, [r2, #4]
    4254:	2c00      	cmp	r4, #0
    4256:	d018      	beq.n	428a <usart_set_config_default+0xb2>
    4258:	6822      	ldr	r2, [r4, #0]
    425a:	69d3      	ldr	r3, [r2, #28]
    425c:	2b00      	cmp	r3, #0
    425e:	d1fc      	bne.n	425a <usart_set_config_default+0x82>
    4260:	2000      	movs	r0, #0
    4262:	6016      	str	r6, [r2, #0]
    4264:	b005      	add	sp, #20
    4266:	bc0c      	pop	{r2, r3}
    4268:	4690      	mov	r8, r2
    426a:	4699      	mov	r9, r3
    426c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    426e:	4b1f      	ldr	r3, [pc, #124]	; (42ec <usart_set_config_default+0x114>)
    4270:	68a2      	ldr	r2, [r4, #8]
    4272:	401d      	ands	r5, r3
    4274:	2aff      	cmp	r2, #255	; 0xff
    4276:	d1e3      	bne.n	4240 <usart_set_config_default+0x68>
    4278:	4b1d      	ldr	r3, [pc, #116]	; (42f0 <usart_set_config_default+0x118>)
    427a:	431e      	orrs	r6, r3
    427c:	e7e3      	b.n	4246 <usart_set_config_default+0x6e>
    427e:	4d1d      	ldr	r5, [pc, #116]	; (42f4 <usart_set_config_default+0x11c>)
    4280:	401d      	ands	r5, r3
    4282:	2380      	movs	r3, #128	; 0x80
    4284:	025b      	lsls	r3, r3, #9
    4286:	431d      	orrs	r5, r3
    4288:	e7d3      	b.n	4232 <usart_set_config_default+0x5a>
    428a:	481b      	ldr	r0, [pc, #108]	; (42f8 <usart_set_config_default+0x120>)
    428c:	491b      	ldr	r1, [pc, #108]	; (42fc <usart_set_config_default+0x124>)
    428e:	223f      	movs	r2, #63	; 0x3f
    4290:	f000 fc8e 	bl	4bb0 <mbed_assert_internal>
    4294:	e7e0      	b.n	4258 <usart_set_config_default+0x80>
    4296:	4818      	ldr	r0, [pc, #96]	; (42f8 <usart_set_config_default+0x120>)
    4298:	4918      	ldr	r1, [pc, #96]	; (42fc <usart_set_config_default+0x124>)
    429a:	223f      	movs	r2, #63	; 0x3f
    429c:	f000 fc88 	bl	4bb0 <mbed_assert_internal>
    42a0:	e7d3      	b.n	424a <usart_set_config_default+0x72>
    42a2:	4b15      	ldr	r3, [pc, #84]	; (42f8 <usart_set_config_default+0x120>)
    42a4:	4f15      	ldr	r7, [pc, #84]	; (42fc <usart_set_config_default+0x124>)
    42a6:	1c18      	adds	r0, r3, #0
    42a8:	1c39      	adds	r1, r7, #0
    42aa:	229c      	movs	r2, #156	; 0x9c
    42ac:	4698      	mov	r8, r3
    42ae:	f000 fc7f 	bl	4bb0 <mbed_assert_internal>
    42b2:	6820      	ldr	r0, [r4, #0]
    42b4:	f000 fdfc 	bl	4eb0 <_sercom_get_sercom_inst_index>
    42b8:	250e      	movs	r5, #14
    42ba:	69a3      	ldr	r3, [r4, #24]
    42bc:	3014      	adds	r0, #20
    42be:	446d      	add	r5, sp
    42c0:	b2c0      	uxtb	r0, r0
    42c2:	4699      	mov	r9, r3
    42c4:	802c      	strh	r4, [r5, #0]
    42c6:	6966      	ldr	r6, [r4, #20]
    42c8:	f7ff ff2e 	bl	4128 <system_gclk_chan_get_hz>
    42cc:	2310      	movs	r3, #16
    42ce:	1c01      	adds	r1, r0, #0
    42d0:	9300      	str	r3, [sp, #0]
    42d2:	1c2a      	adds	r2, r5, #0
    42d4:	4648      	mov	r0, r9
    42d6:	2300      	movs	r3, #0
    42d8:	f000 fd02 	bl	4ce0 <_sercom_get_async_baud_val>
    42dc:	4640      	mov	r0, r8
    42de:	1c39      	adds	r1, r7, #0
    42e0:	223f      	movs	r2, #63	; 0x3f
    42e2:	f000 fc65 	bl	4bb0 <mbed_assert_internal>
    42e6:	e794      	b.n	4212 <usart_set_config_default+0x3a>
    42e8:	41000004 	.word	0x41000004
    42ec:	fffeffff 	.word	0xfffeffff
    42f0:	40000004 	.word	0x40000004
    42f4:	fffdffff 	.word	0xfffdffff
    42f8:	0000ebc0 	.word	0x0000ebc0
    42fc:	0000ebc4 	.word	0x0000ebc4

00004300 <serial_find_mux_settings>:
    4300:	b570      	push	{r4, r5, r6, lr}
    4302:	1c05      	adds	r5, r0, #0
    4304:	b086      	sub	sp, #24
    4306:	2800      	cmp	r0, #0
    4308:	d03c      	beq.n	4384 <serial_find_mux_settings+0x84>
    430a:	201c      	movs	r0, #28
    430c:	211d      	movs	r1, #29
    430e:	2300      	movs	r3, #0
    4310:	5628      	ldrsb	r0, [r5, r0]
    4312:	5669      	ldrsb	r1, [r5, r1]
    4314:	9302      	str	r3, [sp, #8]
    4316:	9303      	str	r3, [sp, #12]
    4318:	9304      	str	r3, [sp, #16]
    431a:	9305      	str	r3, [sp, #20]
    431c:	f001 f81e 	bl	535c <pinmap_merge_sercom>
    4320:	2400      	movs	r4, #0
    4322:	1c06      	adds	r6, r0, #0
    4324:	201c      	movs	r0, #28
    4326:	192b      	adds	r3, r5, r4
    4328:	5618      	ldrsb	r0, [r3, r0]
    432a:	1c31      	adds	r1, r6, #0
    432c:	f001 f8a6 	bl	547c <pinmap_pad_sercom>
    4330:	00a3      	lsls	r3, r4, #2
    4332:	aa02      	add	r2, sp, #8
    4334:	3401      	adds	r4, #1
    4336:	50d0      	str	r0, [r2, r3]
    4338:	2c04      	cmp	r4, #4
    433a:	d1f3      	bne.n	4324 <serial_find_mux_settings+0x24>
    433c:	9b03      	ldr	r3, [sp, #12]
    433e:	2000      	movs	r0, #0
    4340:	9301      	str	r3, [sp, #4]
    4342:	3b01      	subs	r3, #1
    4344:	2b02      	cmp	r3, #2
    4346:	d802      	bhi.n	434e <serial_find_mux_settings+0x4e>
    4348:	4a11      	ldr	r2, [pc, #68]	; (4390 <serial_find_mux_settings+0x90>)
    434a:	009b      	lsls	r3, r3, #2
    434c:	5898      	ldr	r0, [r3, r2]
    434e:	221e      	movs	r2, #30
    4350:	5eab      	ldrsh	r3, [r5, r2]
    4352:	3301      	adds	r3, #1
    4354:	d008      	beq.n	4368 <serial_find_mux_settings+0x68>
    4356:	9b02      	ldr	r3, [sp, #8]
    4358:	2b00      	cmp	r3, #0
    435a:	d103      	bne.n	4364 <serial_find_mux_settings+0x64>
    435c:	9b04      	ldr	r3, [sp, #16]
    435e:	9301      	str	r3, [sp, #4]
    4360:	2b02      	cmp	r3, #2
    4362:	d008      	beq.n	4376 <serial_find_mux_settings+0x76>
    4364:	b006      	add	sp, #24
    4366:	bd70      	pop	{r4, r5, r6, pc}
    4368:	9b02      	ldr	r3, [sp, #8]
    436a:	2b02      	cmp	r3, #2
    436c:	d1fa      	bne.n	4364 <serial_find_mux_settings+0x64>
    436e:	2380      	movs	r3, #128	; 0x80
    4370:	025b      	lsls	r3, r3, #9
    4372:	4318      	orrs	r0, r3
    4374:	e7f6      	b.n	4364 <serial_find_mux_settings+0x64>
    4376:	9b05      	ldr	r3, [sp, #20]
    4378:	2b03      	cmp	r3, #3
    437a:	d1f3      	bne.n	4364 <serial_find_mux_settings+0x64>
    437c:	2380      	movs	r3, #128	; 0x80
    437e:	029b      	lsls	r3, r3, #10
    4380:	4318      	orrs	r0, r3
    4382:	e7ef      	b.n	4364 <serial_find_mux_settings+0x64>
    4384:	4803      	ldr	r0, [pc, #12]	; (4394 <serial_find_mux_settings+0x94>)
    4386:	4904      	ldr	r1, [pc, #16]	; (4398 <serial_find_mux_settings+0x98>)
    4388:	2271      	movs	r2, #113	; 0x71
    438a:	f000 fc11 	bl	4bb0 <mbed_assert_internal>
    438e:	e7bc      	b.n	430a <serial_find_mux_settings+0xa>
    4390:	0000ebb4 	.word	0x0000ebb4
    4394:	0000ebc0 	.word	0x0000ebc0
    4398:	0000ebc4 	.word	0x0000ebc4

0000439c <get_default_serial_values>:
    439c:	b510      	push	{r4, lr}
    439e:	1e04      	subs	r4, r0, #0
    43a0:	d00b      	beq.n	43ba <get_default_serial_values+0x1e>
    43a2:	23ff      	movs	r3, #255	; 0xff
    43a4:	60a3      	str	r3, [r4, #8]
    43a6:	2300      	movs	r3, #0
    43a8:	60e3      	str	r3, [r4, #12]
    43aa:	6123      	str	r3, [r4, #16]
    43ac:	2396      	movs	r3, #150	; 0x96
    43ae:	019b      	lsls	r3, r3, #6
    43b0:	61a3      	str	r3, [r4, #24]
    43b2:	2388      	movs	r3, #136	; 0x88
    43b4:	035b      	lsls	r3, r3, #13
    43b6:	6163      	str	r3, [r4, #20]
    43b8:	bd10      	pop	{r4, pc}
    43ba:	4803      	ldr	r0, [pc, #12]	; (43c8 <get_default_serial_values+0x2c>)
    43bc:	4903      	ldr	r1, [pc, #12]	; (43cc <get_default_serial_values+0x30>)
    43be:	22e1      	movs	r2, #225	; 0xe1
    43c0:	f000 fbf6 	bl	4bb0 <mbed_assert_internal>
    43c4:	e7ed      	b.n	43a2 <get_default_serial_values+0x6>
    43c6:	46c0      	nop			; (mov r8, r8)
    43c8:	0000ebc0 	.word	0x0000ebc0
    43cc:	0000ebc4 	.word	0x0000ebc4

000043d0 <serial_init>:
    43d0:	b5f0      	push	{r4, r5, r6, r7, lr}
    43d2:	464e      	mov	r6, r9
    43d4:	4645      	mov	r5, r8
    43d6:	4657      	mov	r7, sl
    43d8:	b4e0      	push	{r5, r6, r7}
    43da:	1c04      	adds	r4, r0, #0
    43dc:	b084      	sub	sp, #16
    43de:	1c0e      	adds	r6, r1, #0
    43e0:	1c15      	adds	r5, r2, #0
    43e2:	2800      	cmp	r0, #0
    43e4:	d100      	bne.n	43e8 <serial_init+0x18>
    43e6:	e09d      	b.n	4524 <serial_init+0x154>
    43e8:	4f60      	ldr	r7, [pc, #384]	; (456c <serial_init+0x19c>)
    43ea:	783b      	ldrb	r3, [r7, #0]
    43ec:	2b00      	cmp	r3, #0
    43ee:	d100      	bne.n	43f2 <serial_init+0x22>
    43f0:	e083      	b.n	44fa <serial_init+0x12a>
    43f2:	1c20      	adds	r0, r4, #0
    43f4:	f7ff ffd2 	bl	439c <get_default_serial_values>
    43f8:	23ff      	movs	r3, #255	; 0xff
    43fa:	7726      	strb	r6, [r4, #28]
    43fc:	77a3      	strb	r3, [r4, #30]
    43fe:	77e3      	strb	r3, [r4, #31]
    4400:	7765      	strb	r5, [r4, #29]
    4402:	1c20      	adds	r0, r4, #0
    4404:	f7ff ff7c 	bl	4300 <serial_find_mux_settings>
    4408:	1c29      	adds	r1, r5, #0
    440a:	1c07      	adds	r7, r0, #0
    440c:	1c30      	adds	r0, r6, #0
    440e:	f000 ffa5 	bl	535c <pinmap_merge_sercom>
    4412:	1c43      	adds	r3, r0, #1
    4414:	d017      	beq.n	4446 <serial_init+0x76>
    4416:	250f      	movs	r5, #15
    4418:	4005      	ands	r5, r0
    441a:	2001      	movs	r0, #1
    441c:	1c29      	adds	r1, r5, #0
    441e:	4240      	negs	r0, r0
    4420:	f001 f84e 	bl	54c0 <pinmap_peripheral_sercom>
    4424:	1c06      	adds	r6, r0, #0
    4426:	1c02      	adds	r2, r0, #0
    4428:	6020      	str	r0, [r4, #0]
    442a:	2c00      	cmp	r4, #0
    442c:	d06a      	beq.n	4504 <serial_init+0x134>
    442e:	69d3      	ldr	r3, [r2, #28]
    4430:	2b00      	cmp	r3, #0
    4432:	d1fc      	bne.n	442e <serial_init+0x5e>
    4434:	2102      	movs	r1, #2
    4436:	6813      	ldr	r3, [r2, #0]
    4438:	438b      	bics	r3, r1
    443a:	6013      	str	r3, [r2, #0]
    443c:	2201      	movs	r2, #1
    443e:	6823      	ldr	r3, [r4, #0]
    4440:	6818      	ldr	r0, [r3, #0]
    4442:	4202      	tst	r2, r0
    4444:	d005      	beq.n	4452 <serial_init+0x82>
    4446:	b004      	add	sp, #16
    4448:	bc1c      	pop	{r2, r3, r4}
    444a:	4690      	mov	r8, r2
    444c:	4699      	mov	r9, r3
    444e:	46a2      	mov	sl, r4
    4450:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4452:	681b      	ldr	r3, [r3, #0]
    4454:	4019      	ands	r1, r3
    4456:	4688      	mov	r8, r1
    4458:	d1f5      	bne.n	4446 <serial_init+0x76>
    445a:	1ca8      	adds	r0, r5, #2
    445c:	4082      	lsls	r2, r0
    445e:	4944      	ldr	r1, [pc, #272]	; (4570 <serial_init+0x1a0>)
    4460:	6a0b      	ldr	r3, [r1, #32]
    4462:	431a      	orrs	r2, r3
    4464:	620a      	str	r2, [r1, #32]
    4466:	4642      	mov	r2, r8
    4468:	ab02      	add	r3, sp, #8
    446a:	701a      	strb	r2, [r3, #0]
    446c:	2314      	movs	r3, #20
    446e:	4699      	mov	r9, r3
    4470:	44a9      	add	r9, r5
    4472:	a902      	add	r1, sp, #8
    4474:	4648      	mov	r0, r9
    4476:	f7ff fe4b 	bl	4110 <system_gclk_chan_set_config>
    447a:	4648      	mov	r0, r9
    447c:	f7ff fe0a 	bl	4094 <system_gclk_chan_enable>
    4480:	2100      	movs	r1, #0
    4482:	2000      	movs	r0, #0
    4484:	f000 fcf4 	bl	4e70 <sercom_set_gclk_generator>
    4488:	6167      	str	r7, [r4, #20]
    448a:	1c20      	adds	r0, r4, #0
    448c:	f7ff fea4 	bl	41d8 <usart_set_config_default>
    4490:	4642      	mov	r2, r8
    4492:	ab02      	add	r3, sp, #8
    4494:	715a      	strb	r2, [r3, #5]
    4496:	719a      	strb	r2, [r3, #6]
    4498:	71da      	strb	r2, [r3, #7]
    449a:	2320      	movs	r3, #32
    449c:	1c27      	adds	r7, r4, #0
    449e:	469a      	mov	sl, r3
    44a0:	371c      	adds	r7, #28
    44a2:	44a2      	add	sl, r4
    44a4:	2300      	movs	r3, #0
    44a6:	56fb      	ldrsb	r3, [r7, r3]
    44a8:	4699      	mov	r9, r3
    44aa:	3301      	adds	r3, #1
    44ac:	d00f      	beq.n	44ce <serial_init+0xfe>
    44ae:	4648      	mov	r0, r9
    44b0:	1c29      	adds	r1, r5, #0
    44b2:	f000 ffbf 	bl	5434 <pinmap_function_sercom>
    44b6:	ab02      	add	r3, sp, #8
    44b8:	b2c0      	uxtb	r0, r0
    44ba:	7118      	strb	r0, [r3, #4]
    44bc:	28ff      	cmp	r0, #255	; 0xff
    44be:	d006      	beq.n	44ce <serial_init+0xfe>
    44c0:	466a      	mov	r2, sp
    44c2:	464b      	mov	r3, r9
    44c4:	71d3      	strb	r3, [r2, #7]
    44c6:	79d0      	ldrb	r0, [r2, #7]
    44c8:	a903      	add	r1, sp, #12
    44ca:	f7ff fd17 	bl	3efc <system_pinmux_pin_set_config>
    44ce:	3701      	adds	r7, #1
    44d0:	4557      	cmp	r7, sl
    44d2:	d1e7      	bne.n	44a4 <serial_init+0xd4>
    44d4:	4b27      	ldr	r3, [pc, #156]	; (4574 <serial_init+0x1a4>)
    44d6:	429e      	cmp	r6, r3
    44d8:	d030      	beq.n	453c <serial_init+0x16c>
    44da:	2c00      	cmp	r4, #0
    44dc:	d028      	beq.n	4530 <serial_init+0x160>
    44de:	6823      	ldr	r3, [r4, #0]
    44e0:	69da      	ldr	r2, [r3, #28]
    44e2:	2a00      	cmp	r2, #0
    44e4:	d1fc      	bne.n	44e0 <serial_init+0x110>
    44e6:	2c00      	cmp	r4, #0
    44e8:	d031      	beq.n	454e <serial_init+0x17e>
    44ea:	69da      	ldr	r2, [r3, #28]
    44ec:	2a00      	cmp	r2, #0
    44ee:	d1fc      	bne.n	44ea <serial_init+0x11a>
    44f0:	6819      	ldr	r1, [r3, #0]
    44f2:	3202      	adds	r2, #2
    44f4:	430a      	orrs	r2, r1
    44f6:	601a      	str	r2, [r3, #0]
    44f8:	e7a5      	b.n	4446 <serial_init+0x76>
    44fa:	f7ff fe2b 	bl	4154 <system_init>
    44fe:	2301      	movs	r3, #1
    4500:	703b      	strb	r3, [r7, #0]
    4502:	e776      	b.n	43f2 <serial_init+0x22>
    4504:	4b1c      	ldr	r3, [pc, #112]	; (4578 <serial_init+0x1a8>)
    4506:	2256      	movs	r2, #86	; 0x56
    4508:	4699      	mov	r9, r3
    450a:	4b1c      	ldr	r3, [pc, #112]	; (457c <serial_init+0x1ac>)
    450c:	4648      	mov	r0, r9
    450e:	4698      	mov	r8, r3
    4510:	1c19      	adds	r1, r3, #0
    4512:	f000 fb4d 	bl	4bb0 <mbed_assert_internal>
    4516:	223f      	movs	r2, #63	; 0x3f
    4518:	4648      	mov	r0, r9
    451a:	4641      	mov	r1, r8
    451c:	f000 fb48 	bl	4bb0 <mbed_assert_internal>
    4520:	6822      	ldr	r2, [r4, #0]
    4522:	e784      	b.n	442e <serial_init+0x5e>
    4524:	4814      	ldr	r0, [pc, #80]	; (4578 <serial_init+0x1a8>)
    4526:	4915      	ldr	r1, [pc, #84]	; (457c <serial_init+0x1ac>)
    4528:	22ed      	movs	r2, #237	; 0xed
    452a:	f000 fb41 	bl	4bb0 <mbed_assert_internal>
    452e:	e75b      	b.n	43e8 <serial_init+0x18>
    4530:	4811      	ldr	r0, [pc, #68]	; (4578 <serial_init+0x1a8>)
    4532:	4912      	ldr	r1, [pc, #72]	; (457c <serial_init+0x1ac>)
    4534:	223f      	movs	r2, #63	; 0x3f
    4536:	f000 fb3b 	bl	4bb0 <mbed_assert_internal>
    453a:	e7d0      	b.n	44de <serial_init+0x10e>
    453c:	2201      	movs	r2, #1
    453e:	4b10      	ldr	r3, [pc, #64]	; (4580 <serial_init+0x1b0>)
    4540:	1c21      	adds	r1, r4, #0
    4542:	601a      	str	r2, [r3, #0]
    4544:	480f      	ldr	r0, [pc, #60]	; (4584 <serial_init+0x1b4>)
    4546:	3247      	adds	r2, #71	; 0x47
    4548:	f005 fa8f 	bl	9a6a <memcpy>
    454c:	e7c5      	b.n	44da <serial_init+0x10a>
    454e:	4e0a      	ldr	r6, [pc, #40]	; (4578 <serial_init+0x1a8>)
    4550:	4d0a      	ldr	r5, [pc, #40]	; (457c <serial_init+0x1ac>)
    4552:	1c30      	adds	r0, r6, #0
    4554:	1c29      	adds	r1, r5, #0
    4556:	324a      	adds	r2, #74	; 0x4a
    4558:	f000 fb2a 	bl	4bb0 <mbed_assert_internal>
    455c:	1c30      	adds	r0, r6, #0
    455e:	1c29      	adds	r1, r5, #0
    4560:	223f      	movs	r2, #63	; 0x3f
    4562:	f000 fb25 	bl	4bb0 <mbed_assert_internal>
    4566:	6823      	ldr	r3, [r4, #0]
    4568:	e7bf      	b.n	44ea <serial_init+0x11a>
    456a:	46c0      	nop			; (mov r8, r8)
    456c:	20004498 	.word	0x20004498
    4570:	40000400 	.word	0x40000400
    4574:	42000800 	.word	0x42000800
    4578:	0000ebc0 	.word	0x0000ebc0
    457c:	0000ebc4 	.word	0x0000ebc4
    4580:	200045a4 	.word	0x200045a4
    4584:	20004640 	.word	0x20004640

00004588 <serial_irq_handler>:
    4588:	b5f0      	push	{r4, r5, r6, r7, lr}
    458a:	4647      	mov	r7, r8
    458c:	1c04      	adds	r4, r0, #0
    458e:	b480      	push	{r7}
    4590:	1c0e      	adds	r6, r1, #0
    4592:	1c15      	adds	r5, r2, #0
    4594:	2800      	cmp	r0, #0
    4596:	d020      	beq.n	45da <serial_irq_handler+0x52>
    4598:	4b18      	ldr	r3, [pc, #96]	; (45fc <serial_irq_handler+0x74>)
    459a:	6019      	str	r1, [r3, #0]
    459c:	6822      	ldr	r2, [r4, #0]
    459e:	4b18      	ldr	r3, [pc, #96]	; (4600 <serial_irq_handler+0x78>)
    45a0:	429a      	cmp	r2, r3
    45a2:	d018      	beq.n	45d6 <serial_irq_handler+0x4e>
    45a4:	dc0d      	bgt.n	45c2 <serial_irq_handler+0x3a>
    45a6:	4917      	ldr	r1, [pc, #92]	; (4604 <serial_irq_handler+0x7c>)
    45a8:	2301      	movs	r3, #1
    45aa:	428a      	cmp	r2, r1
    45ac:	d003      	beq.n	45b6 <serial_irq_handler+0x2e>
    45ae:	4916      	ldr	r1, [pc, #88]	; (4608 <serial_irq_handler+0x80>)
    45b0:	3301      	adds	r3, #1
    45b2:	428a      	cmp	r2, r1
    45b4:	d10d      	bne.n	45d2 <serial_irq_handler+0x4a>
    45b6:	4a15      	ldr	r2, [pc, #84]	; (460c <serial_irq_handler+0x84>)
    45b8:	009b      	lsls	r3, r3, #2
    45ba:	509d      	str	r5, [r3, r2]
    45bc:	bc04      	pop	{r2}
    45be:	4690      	mov	r8, r2
    45c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    45c2:	4913      	ldr	r1, [pc, #76]	; (4610 <serial_irq_handler+0x88>)
    45c4:	2304      	movs	r3, #4
    45c6:	428a      	cmp	r2, r1
    45c8:	d0f5      	beq.n	45b6 <serial_irq_handler+0x2e>
    45ca:	4912      	ldr	r1, [pc, #72]	; (4614 <serial_irq_handler+0x8c>)
    45cc:	3301      	adds	r3, #1
    45ce:	428a      	cmp	r2, r1
    45d0:	d0f1      	beq.n	45b6 <serial_irq_handler+0x2e>
    45d2:	2300      	movs	r3, #0
    45d4:	e7ef      	b.n	45b6 <serial_irq_handler+0x2e>
    45d6:	2303      	movs	r3, #3
    45d8:	e7ed      	b.n	45b6 <serial_irq_handler+0x2e>
    45da:	4b0f      	ldr	r3, [pc, #60]	; (4618 <serial_irq_handler+0x90>)
    45dc:	22b3      	movs	r2, #179	; 0xb3
    45de:	4698      	mov	r8, r3
    45e0:	4f0e      	ldr	r7, [pc, #56]	; (461c <serial_irq_handler+0x94>)
    45e2:	1c18      	adds	r0, r3, #0
    45e4:	1c39      	adds	r1, r7, #0
    45e6:	0092      	lsls	r2, r2, #2
    45e8:	f000 fae2 	bl	4bb0 <mbed_assert_internal>
    45ec:	4b03      	ldr	r3, [pc, #12]	; (45fc <serial_irq_handler+0x74>)
    45ee:	4640      	mov	r0, r8
    45f0:	1c39      	adds	r1, r7, #0
    45f2:	4a0b      	ldr	r2, [pc, #44]	; (4620 <serial_irq_handler+0x98>)
    45f4:	601e      	str	r6, [r3, #0]
    45f6:	f000 fadb 	bl	4bb0 <mbed_assert_internal>
    45fa:	e7cf      	b.n	459c <serial_irq_handler+0x14>
    45fc:	200045c0 	.word	0x200045c0
    4600:	42001400 	.word	0x42001400
    4604:	42000c00 	.word	0x42000c00
    4608:	42001000 	.word	0x42001000
    460c:	200045a8 	.word	0x200045a8
    4610:	42001800 	.word	0x42001800
    4614:	42001c00 	.word	0x42001c00
    4618:	0000ebc0 	.word	0x0000ebc0
    461c:	0000ebc4 	.word	0x0000ebc4
    4620:	00000266 	.word	0x00000266

00004624 <serial_readable>:
    4624:	b510      	push	{r4, lr}
    4626:	1e04      	subs	r4, r0, #0
    4628:	d004      	beq.n	4634 <serial_readable+0x10>
    462a:	6823      	ldr	r3, [r4, #0]
    462c:	7e18      	ldrb	r0, [r3, #24]
    462e:	0740      	lsls	r0, r0, #29
    4630:	0fc0      	lsrs	r0, r0, #31
    4632:	bd10      	pop	{r4, pc}
    4634:	4802      	ldr	r0, [pc, #8]	; (4640 <serial_readable+0x1c>)
    4636:	4903      	ldr	r1, [pc, #12]	; (4644 <serial_readable+0x20>)
    4638:	4a03      	ldr	r2, [pc, #12]	; (4648 <serial_readable+0x24>)
    463a:	f000 fab9 	bl	4bb0 <mbed_assert_internal>
    463e:	e7f4      	b.n	462a <serial_readable+0x6>
    4640:	0000ebc0 	.word	0x0000ebc0
    4644:	0000ebc4 	.word	0x0000ebc4
    4648:	00000323 	.word	0x00000323

0000464c <serial_getc>:
    464c:	b510      	push	{r4, lr}
    464e:	1e04      	subs	r4, r0, #0
    4650:	d008      	beq.n	4664 <serial_getc+0x18>
    4652:	1c20      	adds	r0, r4, #0
    4654:	f7ff ffe6 	bl	4624 <serial_readable>
    4658:	2800      	cmp	r0, #0
    465a:	d0fa      	beq.n	4652 <serial_getc+0x6>
    465c:	6823      	ldr	r3, [r4, #0]
    465e:	8d18      	ldrh	r0, [r3, #40]	; 0x28
    4660:	b280      	uxth	r0, r0
    4662:	bd10      	pop	{r4, pc}
    4664:	4802      	ldr	r0, [pc, #8]	; (4670 <serial_getc+0x24>)
    4666:	4903      	ldr	r1, [pc, #12]	; (4674 <serial_getc+0x28>)
    4668:	4a03      	ldr	r2, [pc, #12]	; (4678 <serial_getc+0x2c>)
    466a:	f000 faa1 	bl	4bb0 <mbed_assert_internal>
    466e:	e7f0      	b.n	4652 <serial_getc+0x6>
    4670:	0000ebc0 	.word	0x0000ebc0
    4674:	0000ebc4 	.word	0x0000ebc4
    4678:	00000311 	.word	0x00000311

0000467c <serial_writable>:
    467c:	b510      	push	{r4, lr}
    467e:	1e04      	subs	r4, r0, #0
    4680:	d004      	beq.n	468c <serial_writable+0x10>
    4682:	2001      	movs	r0, #1
    4684:	6823      	ldr	r3, [r4, #0]
    4686:	7e1b      	ldrb	r3, [r3, #24]
    4688:	4018      	ands	r0, r3
    468a:	bd10      	pop	{r4, pc}
    468c:	22cc      	movs	r2, #204	; 0xcc
    468e:	4803      	ldr	r0, [pc, #12]	; (469c <serial_writable+0x20>)
    4690:	4903      	ldr	r1, [pc, #12]	; (46a0 <serial_writable+0x24>)
    4692:	0092      	lsls	r2, r2, #2
    4694:	f000 fa8c 	bl	4bb0 <mbed_assert_internal>
    4698:	e7f3      	b.n	4682 <serial_writable+0x6>
    469a:	46c0      	nop			; (mov r8, r8)
    469c:	0000ebc0 	.word	0x0000ebc0
    46a0:	0000ebc4 	.word	0x0000ebc4

000046a4 <serial_putc>:
    46a4:	b538      	push	{r3, r4, r5, lr}
    46a6:	1c04      	adds	r4, r0, #0
    46a8:	1c0d      	adds	r5, r1, #0
    46aa:	2800      	cmp	r0, #0
    46ac:	d00e      	beq.n	46cc <serial_putc+0x28>
    46ae:	05ed      	lsls	r5, r5, #23
    46b0:	0ded      	lsrs	r5, r5, #23
    46b2:	1c20      	adds	r0, r4, #0
    46b4:	f7ff ffe2 	bl	467c <serial_writable>
    46b8:	2800      	cmp	r0, #0
    46ba:	d0fa      	beq.n	46b2 <serial_putc+0xe>
    46bc:	2202      	movs	r2, #2
    46be:	6823      	ldr	r3, [r4, #0]
    46c0:	851d      	strh	r5, [r3, #40]	; 0x28
    46c2:	6821      	ldr	r1, [r4, #0]
    46c4:	7e0b      	ldrb	r3, [r1, #24]
    46c6:	421a      	tst	r2, r3
    46c8:	d0fc      	beq.n	46c4 <serial_putc+0x20>
    46ca:	bd38      	pop	{r3, r4, r5, pc}
    46cc:	4802      	ldr	r0, [pc, #8]	; (46d8 <serial_putc+0x34>)
    46ce:	4903      	ldr	r1, [pc, #12]	; (46dc <serial_putc+0x38>)
    46d0:	4a03      	ldr	r2, [pc, #12]	; (46e0 <serial_putc+0x3c>)
    46d2:	f000 fa6d 	bl	4bb0 <mbed_assert_internal>
    46d6:	e7ea      	b.n	46ae <serial_putc+0xa>
    46d8:	0000ebc0 	.word	0x0000ebc0
    46dc:	0000ebc4 	.word	0x0000ebc4
    46e0:	00000319 	.word	0x00000319

000046e4 <_ZN4mbed8FilePathC1EPKc>:
    46e4:	b538      	push	{r3, r4, r5, lr}
    46e6:	2300      	movs	r3, #0
    46e8:	6003      	str	r3, [r0, #0]
    46ea:	6043      	str	r3, [r0, #4]
    46ec:	780b      	ldrb	r3, [r1, #0]
    46ee:	1c04      	adds	r4, r0, #0
    46f0:	2b2f      	cmp	r3, #47	; 0x2f
    46f2:	d001      	beq.n	46f8 <_ZN4mbed8FilePathC1EPKc+0x14>
    46f4:	1c20      	adds	r0, r4, #0
    46f6:	bd38      	pop	{r3, r4, r5, pc}
    46f8:	784b      	ldrb	r3, [r1, #1]
    46fa:	2b00      	cmp	r3, #0
    46fc:	d0fa      	beq.n	46f4 <_ZN4mbed8FilePathC1EPKc+0x10>
    46fe:	1c48      	adds	r0, r1, #1
    4700:	6020      	str	r0, [r4, #0]
    4702:	784b      	ldrb	r3, [r1, #1]
    4704:	2b2f      	cmp	r3, #47	; 0x2f
    4706:	d014      	beq.n	4732 <_ZN4mbed8FilePathC1EPKc+0x4e>
    4708:	2b00      	cmp	r3, #0
    470a:	d015      	beq.n	4738 <_ZN4mbed8FilePathC1EPKc+0x54>
    470c:	1c03      	adds	r3, r0, #0
    470e:	e001      	b.n	4714 <_ZN4mbed8FilePathC1EPKc+0x30>
    4710:	2a00      	cmp	r2, #0
    4712:	d00c      	beq.n	472e <_ZN4mbed8FilePathC1EPKc+0x4a>
    4714:	1a5d      	subs	r5, r3, r1
    4716:	3301      	adds	r3, #1
    4718:	6023      	str	r3, [r4, #0]
    471a:	781a      	ldrb	r2, [r3, #0]
    471c:	2a2f      	cmp	r2, #47	; 0x2f
    471e:	d1f7      	bne.n	4710 <_ZN4mbed8FilePathC1EPKc+0x2c>
    4720:	1c29      	adds	r1, r5, #0
    4722:	3301      	adds	r3, #1
    4724:	6023      	str	r3, [r4, #0]
    4726:	f001 fb23 	bl	5d70 <_ZN4mbed8FileBase6lookupEPKcj>
    472a:	6060      	str	r0, [r4, #4]
    472c:	e7e2      	b.n	46f4 <_ZN4mbed8FilePathC1EPKc+0x10>
    472e:	1c29      	adds	r1, r5, #0
    4730:	e7f9      	b.n	4726 <_ZN4mbed8FilePathC1EPKc+0x42>
    4732:	1c03      	adds	r3, r0, #0
    4734:	2100      	movs	r1, #0
    4736:	e7f4      	b.n	4722 <_ZN4mbed8FilePathC1EPKc+0x3e>
    4738:	2100      	movs	r1, #0
    473a:	e7f4      	b.n	4726 <_ZN4mbed8FilePathC1EPKc+0x42>

0000473c <_ZN4mbed8FilePath8fileNameEv>:
    473c:	6800      	ldr	r0, [r0, #0]
    473e:	4770      	bx	lr

00004740 <_ZN4mbed8FilePath10fileSystemEv>:
    4740:	6843      	ldr	r3, [r0, #4]
    4742:	b510      	push	{r4, lr}
    4744:	2b00      	cmp	r3, #0
    4746:	d007      	beq.n	4758 <_ZN4mbed8FilePath10fileSystemEv+0x18>
    4748:	1c04      	adds	r4, r0, #0
    474a:	1c18      	adds	r0, r3, #0
    474c:	f001 fb30 	bl	5db0 <_ZN4mbed8FileBase11getPathTypeEv>
    4750:	2801      	cmp	r0, #1
    4752:	d101      	bne.n	4758 <_ZN4mbed8FilePath10fileSystemEv+0x18>
    4754:	6860      	ldr	r0, [r4, #4]
    4756:	bd10      	pop	{r4, pc}
    4758:	2000      	movs	r0, #0
    475a:	e7fc      	b.n	4756 <_ZN4mbed8FilePath10fileSystemEv+0x16>

0000475c <_ZN4mbed8FilePath6isFileEv>:
    475c:	6840      	ldr	r0, [r0, #4]
    475e:	b508      	push	{r3, lr}
    4760:	2800      	cmp	r0, #0
    4762:	d005      	beq.n	4770 <_ZN4mbed8FilePath6isFileEv+0x14>
    4764:	f001 fb24 	bl	5db0 <_ZN4mbed8FileBase11getPathTypeEv>
    4768:	4243      	negs	r3, r0
    476a:	4158      	adcs	r0, r3
    476c:	b2c0      	uxtb	r0, r0
    476e:	bd08      	pop	{r3, pc}
    4770:	2000      	movs	r0, #0
    4772:	e7fc      	b.n	476e <_ZN4mbed8FilePath6isFileEv+0x12>

00004774 <_ZN4mbed8FilePath4fileEv>:
    4774:	6843      	ldr	r3, [r0, #4]
    4776:	b510      	push	{r4, lr}
    4778:	2b00      	cmp	r3, #0
    477a:	d00a      	beq.n	4792 <_ZN4mbed8FilePath4fileEv+0x1e>
    477c:	1c04      	adds	r4, r0, #0
    477e:	1c18      	adds	r0, r3, #0
    4780:	f001 fb16 	bl	5db0 <_ZN4mbed8FileBase11getPathTypeEv>
    4784:	2800      	cmp	r0, #0
    4786:	d104      	bne.n	4792 <_ZN4mbed8FilePath4fileEv+0x1e>
    4788:	6860      	ldr	r0, [r4, #4]
    478a:	2800      	cmp	r0, #0
    478c:	d001      	beq.n	4792 <_ZN4mbed8FilePath4fileEv+0x1e>
    478e:	3804      	subs	r0, #4
    4790:	bd10      	pop	{r4, pc}
    4792:	2000      	movs	r0, #0
    4794:	e7fc      	b.n	4790 <_ZN4mbed8FilePath4fileEv+0x1c>
    4796:	46c0      	nop			; (mov r8, r8)

00004798 <_ZN4mbed8FilePath6existsEv>:
    4798:	6840      	ldr	r0, [r0, #4]
    479a:	1e43      	subs	r3, r0, #1
    479c:	4198      	sbcs	r0, r3
    479e:	b2c0      	uxtb	r0, r0
    47a0:	4770      	bx	lr
    47a2:	46c0      	nop			; (mov r8, r8)

000047a4 <_ZN4mbed3SPID1Ev>:
    47a4:	4770      	bx	lr
    47a6:	46c0      	nop			; (mov r8, r8)

000047a8 <_ZN6CThunkIN4mbed3SPIEE10trampolineEPS1_PvPMS1_FvS4_E>:
    47a8:	b510      	push	{r4, lr}
    47aa:	2800      	cmp	r0, #0
    47ac:	d008      	beq.n	47c0 <_ZN6CThunkIN4mbed3SPIEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    47ae:	6814      	ldr	r4, [r2, #0]
    47b0:	6853      	ldr	r3, [r2, #4]
    47b2:	2c00      	cmp	r4, #0
    47b4:	d005      	beq.n	47c2 <_ZN6CThunkIN4mbed3SPIEE10trampolineEPS1_PvPMS1_FvS4_E+0x1a>
    47b6:	07da      	lsls	r2, r3, #31
    47b8:	d405      	bmi.n	47c6 <_ZN6CThunkIN4mbed3SPIEE10trampolineEPS1_PvPMS1_FvS4_E+0x1e>
    47ba:	105b      	asrs	r3, r3, #1
    47bc:	18c0      	adds	r0, r0, r3
    47be:	47a0      	blx	r4
    47c0:	bd10      	pop	{r4, pc}
    47c2:	07da      	lsls	r2, r3, #31
    47c4:	d5fc      	bpl.n	47c0 <_ZN6CThunkIN4mbed3SPIEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    47c6:	105b      	asrs	r3, r3, #1
    47c8:	18c0      	adds	r0, r0, r3
    47ca:	6803      	ldr	r3, [r0, #0]
    47cc:	591c      	ldr	r4, [r3, r4]
    47ce:	47a0      	blx	r4
    47d0:	e7f6      	b.n	47c0 <_ZN6CThunkIN4mbed3SPIEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    47d2:	46c0      	nop			; (mov r8, r8)

000047d4 <_ZN4mbed3SPID0Ev>:
    47d4:	b510      	push	{r4, lr}
    47d6:	1c04      	adds	r4, r0, #0
    47d8:	f001 fd63 	bl	62a2 <_ZdlPv>
    47dc:	1c20      	adds	r0, r4, #0
    47de:	bd10      	pop	{r4, pc}

000047e0 <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_>:
    47e0:	b5f0      	push	{r4, r5, r6, r7, lr}
    47e2:	4656      	mov	r6, sl
    47e4:	465f      	mov	r7, fp
    47e6:	464d      	mov	r5, r9
    47e8:	4644      	mov	r4, r8
    47ea:	4691      	mov	r9, r2
    47ec:	2200      	movs	r2, #0
    47ee:	b4f0      	push	{r4, r5, r6, r7}
    47f0:	1c05      	adds	r5, r0, #0
    47f2:	1c04      	adds	r4, r0, #0
    47f4:	b087      	sub	sp, #28
    47f6:	9303      	str	r3, [sp, #12]
    47f8:	ab10      	add	r3, sp, #64	; 0x40
    47fa:	569a      	ldrsb	r2, [r3, r2]
    47fc:	4b26      	ldr	r3, [pc, #152]	; (4898 <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_+0xb8>)
    47fe:	468a      	mov	sl, r1
    4800:	3308      	adds	r3, #8
    4802:	c508      	stmia	r5!, {r3}
    4804:	4693      	mov	fp, r2
    4806:	1c28      	adds	r0, r5, #0
    4808:	2100      	movs	r1, #0
    480a:	2240      	movs	r2, #64	; 0x40
    480c:	f005 f936 	bl	9a7c <memset>
    4810:	2300      	movs	r3, #0
    4812:	1c22      	adds	r2, r4, #0
    4814:	9304      	str	r3, [sp, #16]
    4816:	9305      	str	r3, [sp, #20]
    4818:	a904      	add	r1, sp, #16
    481a:	3248      	adds	r2, #72	; 0x48
    481c:	c941      	ldmia	r1!, {r0, r6}
    481e:	c241      	stmia	r2!, {r0, r6}
    4820:	4a1e      	ldr	r2, [pc, #120]	; (489c <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_+0xbc>)
    4822:	6522      	str	r2, [r4, #80]	; 0x50
    4824:	4a1e      	ldr	r2, [pc, #120]	; (48a0 <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_+0xc0>)
    4826:	6562      	str	r2, [r4, #84]	; 0x54
    4828:	4a1e      	ldr	r2, [pc, #120]	; (48a4 <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_+0xc4>)
    482a:	65a2      	str	r2, [r4, #88]	; 0x58
    482c:	1c22      	adds	r2, r4, #0
    482e:	3248      	adds	r2, #72	; 0x48
    4830:	6623      	str	r3, [r4, #96]	; 0x60
    4832:	65e4      	str	r4, [r4, #92]	; 0x5c
    4834:	6662      	str	r2, [r4, #100]	; 0x64
    4836:	4a1c      	ldr	r2, [pc, #112]	; (48a8 <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_+0xc8>)
    4838:	66a2      	str	r2, [r4, #104]	; 0x68
    483a:	f3bf 8f6f 	isb	sy
    483e:	f3bf 8f4f 	dsb	sy
    4842:	2280      	movs	r2, #128	; 0x80
    4844:	66e3      	str	r3, [r4, #108]	; 0x6c
    4846:	50a3      	str	r3, [r4, r2]
    4848:	3204      	adds	r2, #4
    484a:	54a3      	strb	r3, [r4, r2]
    484c:	3204      	adds	r2, #4
    484e:	4690      	mov	r8, r2
    4850:	4641      	mov	r1, r8
    4852:	278c      	movs	r7, #140	; 0x8c
    4854:	3a80      	subs	r2, #128	; 0x80
    4856:	5062      	str	r2, [r4, r1]
    4858:	2690      	movs	r6, #144	; 0x90
    485a:	465a      	mov	r2, fp
    485c:	51e3      	str	r3, [r4, r7]
    485e:	4b13      	ldr	r3, [pc, #76]	; (48ac <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_+0xcc>)
    4860:	9200      	str	r2, [sp, #0]
    4862:	51a3      	str	r3, [r4, r6]
    4864:	1c28      	adds	r0, r5, #0
    4866:	4651      	mov	r1, sl
    4868:	464a      	mov	r2, r9
    486a:	9b03      	ldr	r3, [sp, #12]
    486c:	f000 ff86 	bl	577c <spi_init>
    4870:	4643      	mov	r3, r8
    4872:	59e2      	ldr	r2, [r4, r7]
    4874:	58e1      	ldr	r1, [r4, r3]
    4876:	1c28      	adds	r0, r5, #0
    4878:	2300      	movs	r3, #0
    487a:	f001 f877 	bl	596c <spi_format>
    487e:	1c28      	adds	r0, r5, #0
    4880:	59a1      	ldr	r1, [r4, r6]
    4882:	f001 f927 	bl	5ad4 <spi_frequency>
    4886:	1c20      	adds	r0, r4, #0
    4888:	b007      	add	sp, #28
    488a:	bc3c      	pop	{r2, r3, r4, r5}
    488c:	4690      	mov	r8, r2
    488e:	4699      	mov	r9, r3
    4890:	46a2      	mov	sl, r4
    4892:	46ab      	mov	fp, r5
    4894:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4896:	46c0      	nop			; (mov r8, r8)
    4898:	0000ee60 	.word	0x0000ee60
    489c:	2404b51f 	.word	0x2404b51f
    48a0:	cc0f447c 	.word	0xcc0f447c
    48a4:	bd1f4798 	.word	0xbd1f4798
    48a8:	000047a9 	.word	0x000047a9
    48ac:	000f4240 	.word	0x000f4240

000048b0 <_ZN4mbed3SPI6aquireEv>:
    48b0:	b570      	push	{r4, r5, r6, lr}
    48b2:	4d0a      	ldr	r5, [pc, #40]	; (48dc <_ZN4mbed3SPI6aquireEv+0x2c>)
    48b4:	682b      	ldr	r3, [r5, #0]
    48b6:	4283      	cmp	r3, r0
    48b8:	d00f      	beq.n	48da <_ZN4mbed3SPI6aquireEv+0x2a>
    48ba:	2388      	movs	r3, #136	; 0x88
    48bc:	1d06      	adds	r6, r0, #4
    48be:	58c1      	ldr	r1, [r0, r3]
    48c0:	3304      	adds	r3, #4
    48c2:	58c2      	ldr	r2, [r0, r3]
    48c4:	1c04      	adds	r4, r0, #0
    48c6:	2300      	movs	r3, #0
    48c8:	1c30      	adds	r0, r6, #0
    48ca:	f001 f84f 	bl	596c <spi_format>
    48ce:	2390      	movs	r3, #144	; 0x90
    48d0:	1c30      	adds	r0, r6, #0
    48d2:	58e1      	ldr	r1, [r4, r3]
    48d4:	f001 f8fe 	bl	5ad4 <spi_frequency>
    48d8:	602c      	str	r4, [r5, #0]
    48da:	bd70      	pop	{r4, r5, r6, pc}
    48dc:	200045c4 	.word	0x200045c4

000048e0 <_ZN4mbed3SPI6formatEii>:
    48e0:	b508      	push	{r3, lr}
    48e2:	2388      	movs	r3, #136	; 0x88
    48e4:	50c1      	str	r1, [r0, r3]
    48e6:	3304      	adds	r3, #4
    48e8:	50c2      	str	r2, [r0, r3]
    48ea:	2200      	movs	r2, #0
    48ec:	4b02      	ldr	r3, [pc, #8]	; (48f8 <_ZN4mbed3SPI6formatEii+0x18>)
    48ee:	601a      	str	r2, [r3, #0]
    48f0:	f7ff ffde 	bl	48b0 <_ZN4mbed3SPI6aquireEv>
    48f4:	bd08      	pop	{r3, pc}
    48f6:	46c0      	nop			; (mov r8, r8)
    48f8:	200045c4 	.word	0x200045c4

000048fc <_ZN4mbed3SPI9frequencyEi>:
    48fc:	b508      	push	{r3, lr}
    48fe:	2390      	movs	r3, #144	; 0x90
    4900:	2200      	movs	r2, #0
    4902:	50c1      	str	r1, [r0, r3]
    4904:	4b02      	ldr	r3, [pc, #8]	; (4910 <_ZN4mbed3SPI9frequencyEi+0x14>)
    4906:	601a      	str	r2, [r3, #0]
    4908:	f7ff ffd2 	bl	48b0 <_ZN4mbed3SPI6aquireEv>
    490c:	bd08      	pop	{r3, pc}
    490e:	46c0      	nop			; (mov r8, r8)
    4910:	200045c4 	.word	0x200045c4

00004914 <_ZN4mbed3SPI5writeEi>:
    4914:	b538      	push	{r3, r4, r5, lr}
    4916:	1c0d      	adds	r5, r1, #0
    4918:	1c04      	adds	r4, r0, #0
    491a:	f7ff ffc9 	bl	48b0 <_ZN4mbed3SPI6aquireEv>
    491e:	1c29      	adds	r1, r5, #0
    4920:	1d20      	adds	r0, r4, #4
    4922:	f001 f953 	bl	5bcc <spi_master_write>
    4926:	bd38      	pop	{r3, r4, r5, pc}

00004928 <_ZN4mbed6Serial5_getcEv>:
    4928:	b508      	push	{r3, lr}
    492a:	f000 f8b5 	bl	4a98 <_ZN4mbed10SerialBase10_base_getcEv>
    492e:	bd08      	pop	{r3, pc}

00004930 <_ZThn220_N4mbed6Serial5_getcEv>:
    4930:	b408      	push	{r3}
    4932:	4b02      	ldr	r3, [pc, #8]	; (493c <_ZThn220_N4mbed6Serial5_getcEv+0xc>)
    4934:	469c      	mov	ip, r3
    4936:	38dc      	subs	r0, #220	; 0xdc
    4938:	bc08      	pop	{r3}
    493a:	4760      	bx	ip
    493c:	00004929 	.word	0x00004929

00004940 <_ZN4mbed6Serial5_putcEi>:
    4940:	b508      	push	{r3, lr}
    4942:	f000 f8af 	bl	4aa4 <_ZN4mbed10SerialBase10_base_putcEi>
    4946:	bd08      	pop	{r3, pc}

00004948 <_ZThn220_N4mbed6Serial5_putcEi>:
    4948:	b408      	push	{r3}
    494a:	4b02      	ldr	r3, [pc, #8]	; (4954 <_ZThn220_N4mbed6Serial5_putcEi+0xc>)
    494c:	469c      	mov	ip, r3
    494e:	38dc      	subs	r0, #220	; 0xdc
    4950:	bc08      	pop	{r3}
    4952:	4760      	bx	ip
    4954:	00004941 	.word	0x00004941

00004958 <_ZN4mbed6SerialC1E7PinNameS1_PKc>:
    4958:	b538      	push	{r3, r4, r5, lr}
    495a:	1c04      	adds	r4, r0, #0
    495c:	1c1d      	adds	r5, r3, #0
    495e:	f000 f843 	bl	49e8 <_ZN4mbed10SerialBaseC1E7PinNameS1_>
    4962:	1c20      	adds	r0, r4, #0
    4964:	1c29      	adds	r1, r5, #0
    4966:	30dc      	adds	r0, #220	; 0xdc
    4968:	f000 f8da 	bl	4b20 <_ZN4mbed6StreamC1EPKc>
    496c:	4b06      	ldr	r3, [pc, #24]	; (4988 <_ZN4mbed6SerialC1E7PinNameS1_PKc+0x30>)
    496e:	1c20      	adds	r0, r4, #0
    4970:	1c1a      	adds	r2, r3, #0
    4972:	1c19      	adds	r1, r3, #0
    4974:	3208      	adds	r2, #8
    4976:	6022      	str	r2, [r4, #0]
    4978:	22dc      	movs	r2, #220	; 0xdc
    497a:	3120      	adds	r1, #32
    497c:	50a1      	str	r1, [r4, r2]
    497e:	3354      	adds	r3, #84	; 0x54
    4980:	3204      	adds	r2, #4
    4982:	50a3      	str	r3, [r4, r2]
    4984:	bd38      	pop	{r3, r4, r5, pc}
    4986:	46c0      	nop			; (mov r8, r8)
    4988:	0000ee78 	.word	0x0000ee78

0000498c <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq>:
    498c:	b508      	push	{r3, lr}
    498e:	004b      	lsls	r3, r1, #1
    4990:	1859      	adds	r1, r3, r1
    4992:	00c9      	lsls	r1, r1, #3
    4994:	1843      	adds	r3, r0, r1
    4996:	1c1a      	adds	r2, r3, #0
    4998:	32b8      	adds	r2, #184	; 0xb8
    499a:	6852      	ldr	r2, [r2, #4]
    499c:	33a8      	adds	r3, #168	; 0xa8
    499e:	681b      	ldr	r3, [r3, #0]
    49a0:	2a00      	cmp	r2, #0
    49a2:	d006      	beq.n	49b2 <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq+0x26>
    49a4:	2b00      	cmp	r3, #0
    49a6:	d003      	beq.n	49b0 <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq+0x24>
    49a8:	1841      	adds	r1, r0, r1
    49aa:	31ac      	adds	r1, #172	; 0xac
    49ac:	1c18      	adds	r0, r3, #0
    49ae:	4790      	blx	r2
    49b0:	bd08      	pop	{r3, pc}
    49b2:	2b00      	cmp	r3, #0
    49b4:	d0fc      	beq.n	49b0 <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq+0x24>
    49b6:	4798      	blx	r3
    49b8:	e7fa      	b.n	49b0 <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq+0x24>
    49ba:	46c0      	nop			; (mov r8, r8)

000049bc <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E>:
    49bc:	b510      	push	{r4, lr}
    49be:	2800      	cmp	r0, #0
    49c0:	d008      	beq.n	49d4 <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    49c2:	6814      	ldr	r4, [r2, #0]
    49c4:	6853      	ldr	r3, [r2, #4]
    49c6:	2c00      	cmp	r4, #0
    49c8:	d005      	beq.n	49d6 <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x1a>
    49ca:	07da      	lsls	r2, r3, #31
    49cc:	d405      	bmi.n	49da <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x1e>
    49ce:	105b      	asrs	r3, r3, #1
    49d0:	18c0      	adds	r0, r0, r3
    49d2:	47a0      	blx	r4
    49d4:	bd10      	pop	{r4, pc}
    49d6:	07da      	lsls	r2, r3, #31
    49d8:	d5fc      	bpl.n	49d4 <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    49da:	105b      	asrs	r3, r3, #1
    49dc:	18c0      	adds	r0, r0, r3
    49de:	6803      	ldr	r3, [r0, #0]
    49e0:	591c      	ldr	r4, [r3, r4]
    49e2:	47a0      	blx	r4
    49e4:	e7f6      	b.n	49d4 <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    49e6:	46c0      	nop			; (mov r8, r8)

000049e8 <_ZN4mbed10SerialBaseC1E7PinNameS1_>:
    49e8:	b5f0      	push	{r4, r5, r6, r7, lr}
    49ea:	4647      	mov	r7, r8
    49ec:	b480      	push	{r7}
    49ee:	4b24      	ldr	r3, [pc, #144]	; (4a80 <_ZN4mbed10SerialBaseC1E7PinNameS1_+0x98>)
    49f0:	b082      	sub	sp, #8
    49f2:	6003      	str	r3, [r0, #0]
    49f4:	2500      	movs	r5, #0
    49f6:	1c03      	adds	r3, r0, #0
    49f8:	1c17      	adds	r7, r2, #0
    49fa:	466a      	mov	r2, sp
    49fc:	1c04      	adds	r4, r0, #0
    49fe:	9500      	str	r5, [sp, #0]
    4a00:	9501      	str	r5, [sp, #4]
    4a02:	3308      	adds	r3, #8
    4a04:	4688      	mov	r8, r1
    4a06:	ca03      	ldmia	r2!, {r0, r1}
    4a08:	c303      	stmia	r3!, {r0, r1}
    4a0a:	4b1e      	ldr	r3, [pc, #120]	; (4a84 <_ZN4mbed10SerialBaseC1E7PinNameS1_+0x9c>)
    4a0c:	6123      	str	r3, [r4, #16]
    4a0e:	4b1e      	ldr	r3, [pc, #120]	; (4a88 <_ZN4mbed10SerialBaseC1E7PinNameS1_+0xa0>)
    4a10:	6163      	str	r3, [r4, #20]
    4a12:	4b1e      	ldr	r3, [pc, #120]	; (4a8c <_ZN4mbed10SerialBaseC1E7PinNameS1_+0xa4>)
    4a14:	61a3      	str	r3, [r4, #24]
    4a16:	1c23      	adds	r3, r4, #0
    4a18:	3308      	adds	r3, #8
    4a1a:	6225      	str	r5, [r4, #32]
    4a1c:	61e4      	str	r4, [r4, #28]
    4a1e:	6263      	str	r3, [r4, #36]	; 0x24
    4a20:	4b1b      	ldr	r3, [pc, #108]	; (4a90 <_ZN4mbed10SerialBaseC1E7PinNameS1_+0xa8>)
    4a22:	62a3      	str	r3, [r4, #40]	; 0x28
    4a24:	f3bf 8f6f 	isb	sy
    4a28:	f3bf 8f4f 	dsb	sy
    4a2c:	235c      	movs	r3, #92	; 0x5c
    4a2e:	1c26      	adds	r6, r4, #0
    4a30:	62e5      	str	r5, [r4, #44]	; 0x2c
    4a32:	6425      	str	r5, [r4, #64]	; 0x40
    4a34:	6465      	str	r5, [r4, #68]	; 0x44
    4a36:	65a5      	str	r5, [r4, #88]	; 0x58
    4a38:	3660      	adds	r6, #96	; 0x60
    4a3a:	54e5      	strb	r5, [r4, r3]
    4a3c:	3301      	adds	r3, #1
    4a3e:	54e5      	strb	r5, [r4, r3]
    4a40:	1c30      	adds	r0, r6, #0
    4a42:	2100      	movs	r1, #0
    4a44:	2248      	movs	r2, #72	; 0x48
    4a46:	f005 f819 	bl	9a7c <memset>
    4a4a:	23a8      	movs	r3, #168	; 0xa8
    4a4c:	2296      	movs	r2, #150	; 0x96
    4a4e:	50e5      	str	r5, [r4, r3]
    4a50:	3314      	adds	r3, #20
    4a52:	50e5      	str	r5, [r4, r3]
    4a54:	3304      	adds	r3, #4
    4a56:	50e5      	str	r5, [r4, r3]
    4a58:	3314      	adds	r3, #20
    4a5a:	50e5      	str	r5, [r4, r3]
    4a5c:	0192      	lsls	r2, r2, #6
    4a5e:	3304      	adds	r3, #4
    4a60:	50e2      	str	r2, [r4, r3]
    4a62:	1c30      	adds	r0, r6, #0
    4a64:	4641      	mov	r1, r8
    4a66:	1c3a      	adds	r2, r7, #0
    4a68:	f7ff fcb2 	bl	43d0 <serial_init>
    4a6c:	1c30      	adds	r0, r6, #0
    4a6e:	4909      	ldr	r1, [pc, #36]	; (4a94 <_ZN4mbed10SerialBaseC1E7PinNameS1_+0xac>)
    4a70:	1c22      	adds	r2, r4, #0
    4a72:	f7ff fd89 	bl	4588 <serial_irq_handler>
    4a76:	1c20      	adds	r0, r4, #0
    4a78:	b002      	add	sp, #8
    4a7a:	bc04      	pop	{r2}
    4a7c:	4690      	mov	r8, r2
    4a7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4a80:	0000eee0 	.word	0x0000eee0
    4a84:	2404b51f 	.word	0x2404b51f
    4a88:	cc0f447c 	.word	0xcc0f447c
    4a8c:	bd1f4798 	.word	0xbd1f4798
    4a90:	000049bd 	.word	0x000049bd
    4a94:	0000498d 	.word	0x0000498d

00004a98 <_ZN4mbed10SerialBase10_base_getcEv>:
    4a98:	b508      	push	{r3, lr}
    4a9a:	3060      	adds	r0, #96	; 0x60
    4a9c:	f7ff fdd6 	bl	464c <serial_getc>
    4aa0:	bd08      	pop	{r3, pc}
    4aa2:	46c0      	nop			; (mov r8, r8)

00004aa4 <_ZN4mbed10SerialBase10_base_putcEi>:
    4aa4:	b510      	push	{r4, lr}
    4aa6:	1c0c      	adds	r4, r1, #0
    4aa8:	3060      	adds	r0, #96	; 0x60
    4aaa:	f7ff fdfb 	bl	46a4 <serial_putc>
    4aae:	1c20      	adds	r0, r4, #0
    4ab0:	bd10      	pop	{r4, pc}
    4ab2:	46c0      	nop			; (mov r8, r8)

00004ab4 <_ZN4mbed6Stream5closeEv>:
    4ab4:	2000      	movs	r0, #0
    4ab6:	4770      	bx	lr

00004ab8 <_ZN4mbed6Stream5writeEPKvj>:
    4ab8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4aba:	188e      	adds	r6, r1, r2
    4abc:	1c05      	adds	r5, r0, #0
    4abe:	1c0f      	adds	r7, r1, #0
    4ac0:	1e0c      	subs	r4, r1, #0
    4ac2:	42b4      	cmp	r4, r6
    4ac4:	d102      	bne.n	4acc <_ZN4mbed6Stream5writeEPKvj+0x14>
    4ac6:	e00a      	b.n	4ade <_ZN4mbed6Stream5writeEPKvj+0x26>
    4ac8:	42a6      	cmp	r6, r4
    4aca:	d008      	beq.n	4ade <_ZN4mbed6Stream5writeEPKvj+0x26>
    4acc:	3401      	adds	r4, #1
    4ace:	682b      	ldr	r3, [r5, #0]
    4ad0:	1e62      	subs	r2, r4, #1
    4ad2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    4ad4:	7811      	ldrb	r1, [r2, #0]
    4ad6:	1c28      	adds	r0, r5, #0
    4ad8:	4798      	blx	r3
    4ada:	1c43      	adds	r3, r0, #1
    4adc:	d1f4      	bne.n	4ac8 <_ZN4mbed6Stream5writeEPKvj+0x10>
    4ade:	1be0      	subs	r0, r4, r7
    4ae0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4ae2:	46c0      	nop			; (mov r8, r8)

00004ae4 <_ZN4mbed6Stream4readEPvj>:
    4ae4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4ae6:	188e      	adds	r6, r1, r2
    4ae8:	1c05      	adds	r5, r0, #0
    4aea:	1c0f      	adds	r7, r1, #0
    4aec:	1e0c      	subs	r4, r1, #0
    4aee:	42b4      	cmp	r4, r6
    4af0:	d105      	bne.n	4afe <_ZN4mbed6Stream4readEPvj+0x1a>
    4af2:	e00a      	b.n	4b0a <_ZN4mbed6Stream4readEPvj+0x26>
    4af4:	3401      	adds	r4, #1
    4af6:	1e63      	subs	r3, r4, #1
    4af8:	7018      	strb	r0, [r3, #0]
    4afa:	42a6      	cmp	r6, r4
    4afc:	d005      	beq.n	4b0a <_ZN4mbed6Stream4readEPvj+0x26>
    4afe:	682b      	ldr	r3, [r5, #0]
    4b00:	1c28      	adds	r0, r5, #0
    4b02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    4b04:	4798      	blx	r3
    4b06:	1c43      	adds	r3, r0, #1
    4b08:	d1f4      	bne.n	4af4 <_ZN4mbed6Stream4readEPvj+0x10>
    4b0a:	1be0      	subs	r0, r4, r7
    4b0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4b0e:	46c0      	nop			; (mov r8, r8)

00004b10 <_ZN4mbed6Stream5lseekEli>:
    4b10:	2000      	movs	r0, #0
    4b12:	4770      	bx	lr

00004b14 <_ZN4mbed6Stream6isattyEv>:
    4b14:	2000      	movs	r0, #0
    4b16:	4770      	bx	lr

00004b18 <_ZN4mbed6Stream5fsyncEv>:
    4b18:	2000      	movs	r0, #0
    4b1a:	4770      	bx	lr

00004b1c <_ZN4mbed6Stream4flenEv>:
    4b1c:	2000      	movs	r0, #0
    4b1e:	4770      	bx	lr

00004b20 <_ZN4mbed6StreamC1EPKc>:
    4b20:	b510      	push	{r4, lr}
    4b22:	1c04      	adds	r4, r0, #0
    4b24:	b084      	sub	sp, #16
    4b26:	f001 f945 	bl	5db4 <_ZN4mbed8FileLikeC1EPKc>
    4b2a:	4b0b      	ldr	r3, [pc, #44]	; (4b58 <_ZN4mbed6StreamC1EPKc+0x38>)
    4b2c:	a801      	add	r0, sp, #4
    4b2e:	1c1a      	adds	r2, r3, #0
    4b30:	333c      	adds	r3, #60	; 0x3c
    4b32:	6063      	str	r3, [r4, #4]
    4b34:	2300      	movs	r3, #0
    4b36:	3208      	adds	r2, #8
    4b38:	6163      	str	r3, [r4, #20]
    4b3a:	6022      	str	r2, [r4, #0]
    4b3c:	4907      	ldr	r1, [pc, #28]	; (4b5c <_ZN4mbed6StreamC1EPKc+0x3c>)
    4b3e:	1c22      	adds	r2, r4, #0
    4b40:	f006 faa4 	bl	b08c <siprintf>
    4b44:	4906      	ldr	r1, [pc, #24]	; (4b60 <_ZN4mbed6StreamC1EPKc+0x40>)
    4b46:	a801      	add	r0, sp, #4
    4b48:	f004 fe28 	bl	979c <fopen>
    4b4c:	6160      	str	r0, [r4, #20]
    4b4e:	f7ff f875 	bl	3c3c <_ZN4mbed26mbed_set_unbuffered_streamEP7__sFILE>
    4b52:	1c20      	adds	r0, r4, #0
    4b54:	b004      	add	sp, #16
    4b56:	bd10      	pop	{r4, pc}
    4b58:	0000eee8 	.word	0x0000eee8
    4b5c:	0000eba4 	.word	0x0000eba4
    4b60:	0000ef2c 	.word	0x0000ef2c

00004b64 <_ZN4mbed6StreamD1Ev>:
    4b64:	4b07      	ldr	r3, [pc, #28]	; (4b84 <_ZN4mbed6StreamD1Ev+0x20>)
    4b66:	b510      	push	{r4, lr}
    4b68:	1c1a      	adds	r2, r3, #0
    4b6a:	1c04      	adds	r4, r0, #0
    4b6c:	3208      	adds	r2, #8
    4b6e:	333c      	adds	r3, #60	; 0x3c
    4b70:	6002      	str	r2, [r0, #0]
    4b72:	6043      	str	r3, [r0, #4]
    4b74:	6940      	ldr	r0, [r0, #20]
    4b76:	f004 fc4b 	bl	9410 <fclose>
    4b7a:	1c20      	adds	r0, r4, #0
    4b7c:	f001 f92e 	bl	5ddc <_ZN4mbed8FileLikeD1Ev>
    4b80:	1c20      	adds	r0, r4, #0
    4b82:	bd10      	pop	{r4, pc}
    4b84:	0000eee8 	.word	0x0000eee8

00004b88 <_ZN4mbed6Stream6printfEPKcz>:
    4b88:	b40e      	push	{r1, r2, r3}
    4b8a:	b530      	push	{r4, r5, lr}
    4b8c:	1c04      	adds	r4, r0, #0
    4b8e:	b082      	sub	sp, #8
    4b90:	ab05      	add	r3, sp, #20
    4b92:	cb20      	ldmia	r3!, {r5}
    4b94:	6940      	ldr	r0, [r0, #20]
    4b96:	9301      	str	r3, [sp, #4]
    4b98:	f004 fcfa 	bl	9590 <fflush>
    4b9c:	6960      	ldr	r0, [r4, #20]
    4b9e:	1c29      	adds	r1, r5, #0
    4ba0:	9a01      	ldr	r2, [sp, #4]
    4ba2:	f005 f949 	bl	9e38 <vfiprintf>
    4ba6:	b002      	add	sp, #8
    4ba8:	bc30      	pop	{r4, r5}
    4baa:	bc08      	pop	{r3}
    4bac:	b003      	add	sp, #12
    4bae:	4718      	bx	r3

00004bb0 <mbed_assert_internal>:
    4bb0:	b538      	push	{r3, r4, r5, lr}
    4bb2:	1c05      	adds	r5, r0, #0
    4bb4:	1c0c      	adds	r4, r1, #0
    4bb6:	1c13      	adds	r3, r2, #0
    4bb8:	1c29      	adds	r1, r5, #0
    4bba:	4802      	ldr	r0, [pc, #8]	; (4bc4 <mbed_assert_internal+0x14>)
    4bbc:	1c22      	adds	r2, r4, #0
    4bbe:	f000 f803 	bl	4bc8 <error>
    4bc2:	bd38      	pop	{r3, r4, r5, pc}
    4bc4:	0000ef30 	.word	0x0000ef30

00004bc8 <error>:
    4bc8:	b40f      	push	{r0, r1, r2, r3}
    4bca:	2001      	movs	r0, #1
    4bcc:	b508      	push	{r3, lr}
    4bce:	f004 fbb1 	bl	9334 <exit>
    4bd2:	46c0      	nop			; (mov r8, r8)

00004bd4 <gpio_init_out>:
    4bd4:	b538      	push	{r3, r4, r5, lr}
    4bd6:	1c0d      	adds	r5, r1, #0
    4bd8:	1c04      	adds	r4, r0, #0
    4bda:	f000 fa8b 	bl	50f4 <gpio_init>
    4bde:	1c6b      	adds	r3, r5, #1
    4be0:	d00e      	beq.n	4c00 <gpio_init_out+0x2c>
    4be2:	2300      	movs	r3, #0
    4be4:	56e3      	ldrsb	r3, [r4, r3]
    4be6:	3301      	adds	r3, #1
    4be8:	d00b      	beq.n	4c02 <gpio_init_out+0x2e>
    4bea:	68e3      	ldr	r3, [r4, #12]
    4bec:	6862      	ldr	r2, [r4, #4]
    4bee:	1c20      	adds	r0, r4, #0
    4bf0:	2101      	movs	r1, #1
    4bf2:	601a      	str	r2, [r3, #0]
    4bf4:	f000 fae6 	bl	51c4 <gpio_dir>
    4bf8:	1c20      	adds	r0, r4, #0
    4bfa:	2100      	movs	r1, #0
    4bfc:	f000 faba 	bl	5174 <gpio_mode>
    4c00:	bd38      	pop	{r3, r4, r5, pc}
    4c02:	4803      	ldr	r0, [pc, #12]	; (4c10 <gpio_init_out+0x3c>)
    4c04:	4903      	ldr	r1, [pc, #12]	; (4c14 <gpio_init_out+0x40>)
    4c06:	2228      	movs	r2, #40	; 0x28
    4c08:	f7ff ffd2 	bl	4bb0 <mbed_assert_internal>
    4c0c:	e7ed      	b.n	4bea <gpio_init_out+0x16>
    4c0e:	46c0      	nop			; (mov r8, r8)
    4c10:	0000e6ac 	.word	0x0000e6ac
    4c14:	0000ef64 	.word	0x0000ef64

00004c18 <pinmap_find_peripheral>:
    4c18:	e002      	b.n	4c20 <pinmap_find_peripheral+0x8>
    4c1a:	4283      	cmp	r3, r0
    4c1c:	d006      	beq.n	4c2c <pinmap_find_peripheral+0x14>
    4c1e:	310c      	adds	r1, #12
    4c20:	2300      	movs	r3, #0
    4c22:	56cb      	ldrsb	r3, [r1, r3]
    4c24:	1c5a      	adds	r2, r3, #1
    4c26:	d1f8      	bne.n	4c1a <pinmap_find_peripheral+0x2>
    4c28:	1c18      	adds	r0, r3, #0
    4c2a:	4770      	bx	lr
    4c2c:	6848      	ldr	r0, [r1, #4]
    4c2e:	e7fc      	b.n	4c2a <pinmap_find_peripheral+0x12>

00004c30 <pinmap_peripheral>:
    4c30:	1c02      	adds	r2, r0, #0
    4c32:	b508      	push	{r3, lr}
    4c34:	1c53      	adds	r3, r2, #1
    4c36:	d103      	bne.n	4c40 <pinmap_peripheral+0x10>
    4c38:	e00b      	b.n	4c52 <pinmap_peripheral+0x22>
    4c3a:	429a      	cmp	r2, r3
    4c3c:	d00a      	beq.n	4c54 <pinmap_peripheral+0x24>
    4c3e:	310c      	adds	r1, #12
    4c40:	2300      	movs	r3, #0
    4c42:	56cb      	ldrsb	r3, [r1, r3]
    4c44:	1c58      	adds	r0, r3, #1
    4c46:	d1f8      	bne.n	4c3a <pinmap_peripheral+0xa>
    4c48:	4804      	ldr	r0, [pc, #16]	; (4c5c <pinmap_peripheral+0x2c>)
    4c4a:	f7ff ffbd 	bl	4bc8 <error>
    4c4e:	2001      	movs	r0, #1
    4c50:	4240      	negs	r0, r0
    4c52:	bd08      	pop	{r3, pc}
    4c54:	6848      	ldr	r0, [r1, #4]
    4c56:	1c43      	adds	r3, r0, #1
    4c58:	d1fb      	bne.n	4c52 <pinmap_peripheral+0x22>
    4c5a:	e7f5      	b.n	4c48 <pinmap_peripheral+0x18>
    4c5c:	0000f004 	.word	0x0000f004

00004c60 <pinmap_function>:
    4c60:	1c02      	adds	r2, r0, #0
    4c62:	b508      	push	{r3, lr}
    4c64:	1c53      	adds	r3, r2, #1
    4c66:	d103      	bne.n	4c70 <pinmap_function+0x10>
    4c68:	e00b      	b.n	4c82 <pinmap_function+0x22>
    4c6a:	429a      	cmp	r2, r3
    4c6c:	d00a      	beq.n	4c84 <pinmap_function+0x24>
    4c6e:	310c      	adds	r1, #12
    4c70:	2300      	movs	r3, #0
    4c72:	56cb      	ldrsb	r3, [r1, r3]
    4c74:	1c58      	adds	r0, r3, #1
    4c76:	d1f8      	bne.n	4c6a <pinmap_function+0xa>
    4c78:	4804      	ldr	r0, [pc, #16]	; (4c8c <pinmap_function+0x2c>)
    4c7a:	f7ff ffa5 	bl	4bc8 <error>
    4c7e:	2001      	movs	r0, #1
    4c80:	4240      	negs	r0, r0
    4c82:	bd08      	pop	{r3, pc}
    4c84:	6888      	ldr	r0, [r1, #8]
    4c86:	1c43      	adds	r3, r0, #1
    4c88:	d1fb      	bne.n	4c82 <pinmap_function+0x22>
    4c8a:	e7f5      	b.n	4c78 <pinmap_function+0x18>
    4c8c:	0000f024 	.word	0x0000f024

00004c90 <wait_us>:
    4c90:	b538      	push	{r3, r4, r5, lr}
    4c92:	1c05      	adds	r5, r0, #0
    4c94:	f000 fcbc 	bl	5610 <us_ticker_read>
    4c98:	1c04      	adds	r4, r0, #0
    4c9a:	f000 fcb9 	bl	5610 <us_ticker_read>
    4c9e:	1b00      	subs	r0, r0, r4
    4ca0:	42a8      	cmp	r0, r5
    4ca2:	d3fa      	bcc.n	4c9a <wait_us+0xa>
    4ca4:	bd38      	pop	{r3, r4, r5, pc}
    4ca6:	46c0      	nop			; (mov r8, r8)

00004ca8 <wait_ms>:
    4ca8:	b508      	push	{r3, lr}
    4caa:	23fa      	movs	r3, #250	; 0xfa
    4cac:	009b      	lsls	r3, r3, #2
    4cae:	4358      	muls	r0, r3
    4cb0:	f7ff ffee 	bl	4c90 <wait_us>
    4cb4:	bd08      	pop	{r3, pc}
    4cb6:	46c0      	nop			; (mov r8, r8)

00004cb8 <_sercom_get_sync_baud_val>:
    4cb8:	b510      	push	{r4, lr}
    4cba:	0849      	lsrs	r1, r1, #1
    4cbc:	2340      	movs	r3, #64	; 0x40
    4cbe:	2400      	movs	r4, #0
    4cc0:	4281      	cmp	r1, r0
    4cc2:	d202      	bcs.n	4cca <_sercom_get_sync_baud_val+0x12>
    4cc4:	1c18      	adds	r0, r3, #0
    4cc6:	bd10      	pop	{r4, pc}
    4cc8:	1c1c      	adds	r4, r3, #0
    4cca:	1c63      	adds	r3, r4, #1
    4ccc:	1a09      	subs	r1, r1, r0
    4cce:	b29b      	uxth	r3, r3
    4cd0:	4288      	cmp	r0, r1
    4cd2:	d9f9      	bls.n	4cc8 <_sercom_get_sync_baud_val+0x10>
    4cd4:	2340      	movs	r3, #64	; 0x40
    4cd6:	2cff      	cmp	r4, #255	; 0xff
    4cd8:	d8f4      	bhi.n	4cc4 <_sercom_get_sync_baud_val+0xc>
    4cda:	8014      	strh	r4, [r2, #0]
    4cdc:	2300      	movs	r3, #0
    4cde:	e7f1      	b.n	4cc4 <_sercom_get_sync_baud_val+0xc>

00004ce0 <_sercom_get_async_baud_val>:
    4ce0:	b5f0      	push	{r4, r5, r6, r7, lr}
    4ce2:	4656      	mov	r6, sl
    4ce4:	464d      	mov	r5, r9
    4ce6:	4644      	mov	r4, r8
    4ce8:	465f      	mov	r7, fp
    4cea:	b4f0      	push	{r4, r5, r6, r7}
    4cec:	1c04      	adds	r4, r0, #0
    4cee:	1c25      	adds	r5, r4, #0
    4cf0:	b087      	sub	sp, #28
    4cf2:	a810      	add	r0, sp, #64	; 0x40
    4cf4:	7806      	ldrb	r6, [r0, #0]
    4cf6:	2040      	movs	r0, #64	; 0x40
    4cf8:	4375      	muls	r5, r6
    4cfa:	428d      	cmp	r5, r1
    4cfc:	d906      	bls.n	4d0c <_sercom_get_async_baud_val+0x2c>
    4cfe:	b007      	add	sp, #28
    4d00:	bc3c      	pop	{r2, r3, r4, r5}
    4d02:	4690      	mov	r8, r2
    4d04:	4699      	mov	r9, r3
    4d06:	46a2      	mov	sl, r4
    4d08:	46ab      	mov	fp, r5
    4d0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4d0c:	9204      	str	r2, [sp, #16]
    4d0e:	1c0d      	adds	r5, r1, #0
    4d10:	1c22      	adds	r2, r4, #0
    4d12:	2b00      	cmp	r3, #0
    4d14:	d13f      	bne.n	4d96 <_sercom_get_async_baud_val+0xb6>
    4d16:	1c30      	adds	r0, r6, #0
    4d18:	2100      	movs	r1, #0
    4d1a:	f001 fcc1 	bl	66a0 <__aeabi_lmul>
    4d1e:	2300      	movs	r3, #0
    4d20:	4683      	mov	fp, r0
    4d22:	213f      	movs	r1, #63	; 0x3f
    4d24:	2001      	movs	r0, #1
    4d26:	469c      	mov	ip, r3
    4d28:	469a      	mov	sl, r3
    4d2a:	1c2e      	adds	r6, r5, #0
    4d2c:	2700      	movs	r7, #0
    4d2e:	2200      	movs	r2, #0
    4d30:	2300      	movs	r3, #0
    4d32:	4680      	mov	r8, r0
    4d34:	1c0c      	adds	r4, r1, #0
    4d36:	e024      	b.n	4d82 <_sercom_get_async_baud_val+0xa2>
    4d38:	4641      	mov	r1, r8
    4d3a:	40a9      	lsls	r1, r5
    4d3c:	1c0d      	adds	r5, r1, #0
    4d3e:	4641      	mov	r1, r8
    4d40:	40a1      	lsls	r1, r4
    4d42:	1c10      	adds	r0, r2, #0
    4d44:	4689      	mov	r9, r1
    4d46:	1c19      	adds	r1, r3, #0
    4d48:	1880      	adds	r0, r0, r2
    4d4a:	4159      	adcs	r1, r3
    4d4c:	1c0b      	adds	r3, r1, #0
    4d4e:	1c02      	adds	r2, r0, #0
    4d50:	4659      	mov	r1, fp
    4d52:	9200      	str	r2, [sp, #0]
    4d54:	9301      	str	r3, [sp, #4]
    4d56:	4229      	tst	r1, r5
    4d58:	d003      	beq.n	4d62 <_sercom_get_async_baud_val+0x82>
    4d5a:	4640      	mov	r0, r8
    4d5c:	4310      	orrs	r0, r2
    4d5e:	1c02      	adds	r2, r0, #0
    4d60:	9b01      	ldr	r3, [sp, #4]
    4d62:	429f      	cmp	r7, r3
    4d64:	d80b      	bhi.n	4d7e <_sercom_get_async_baud_val+0x9e>
    4d66:	d101      	bne.n	4d6c <_sercom_get_async_baud_val+0x8c>
    4d68:	4296      	cmp	r6, r2
    4d6a:	d808      	bhi.n	4d7e <_sercom_get_async_baud_val+0x9e>
    4d6c:	4661      	mov	r1, ip
    4d6e:	4648      	mov	r0, r9
    4d70:	4301      	orrs	r1, r0
    4d72:	4650      	mov	r0, sl
    4d74:	4328      	orrs	r0, r5
    4d76:	1b92      	subs	r2, r2, r6
    4d78:	41bb      	sbcs	r3, r7
    4d7a:	468c      	mov	ip, r1
    4d7c:	4682      	mov	sl, r0
    4d7e:	3c01      	subs	r4, #1
    4d80:	d310      	bcc.n	4da4 <_sercom_get_async_baud_val+0xc4>
    4d82:	2120      	movs	r1, #32
    4d84:	4249      	negs	r1, r1
    4d86:	1865      	adds	r5, r4, r1
    4d88:	d5d6      	bpl.n	4d38 <_sercom_get_async_baud_val+0x58>
    4d8a:	2120      	movs	r1, #32
    4d8c:	1b0d      	subs	r5, r1, r4
    4d8e:	4641      	mov	r1, r8
    4d90:	40e9      	lsrs	r1, r5
    4d92:	1c0d      	adds	r5, r1, #0
    4d94:	e7d3      	b.n	4d3e <_sercom_get_async_baud_val+0x5e>
    4d96:	2400      	movs	r4, #0
    4d98:	2b01      	cmp	r3, #1
    4d9a:	d007      	beq.n	4dac <_sercom_get_async_baud_val+0xcc>
    4d9c:	9b04      	ldr	r3, [sp, #16]
    4d9e:	2000      	movs	r0, #0
    4da0:	801c      	strh	r4, [r3, #0]
    4da2:	e7ac      	b.n	4cfe <_sercom_get_async_baud_val+0x1e>
    4da4:	4663      	mov	r3, ip
    4da6:	425c      	negs	r4, r3
    4da8:	0c24      	lsrs	r4, r4, #16
    4daa:	e7f7      	b.n	4d9c <_sercom_get_async_baud_val+0xbc>
    4dac:	0f4b      	lsrs	r3, r1, #29
    4dae:	1c1c      	adds	r4, r3, #0
    4db0:	00cb      	lsls	r3, r1, #3
    4db2:	4698      	mov	r8, r3
    4db4:	1c30      	adds	r0, r6, #0
    4db6:	2300      	movs	r3, #0
    4db8:	2100      	movs	r1, #0
    4dba:	f001 fc71 	bl	66a0 <__aeabi_lmul>
    4dbe:	2300      	movs	r3, #0
    4dc0:	469c      	mov	ip, r3
    4dc2:	3320      	adds	r3, #32
    4dc4:	469b      	mov	fp, r3
    4dc6:	4663      	mov	r3, ip
    4dc8:	46a1      	mov	r9, r4
    4dca:	9000      	str	r0, [sp, #0]
    4dcc:	9101      	str	r1, [sp, #4]
    4dce:	9303      	str	r3, [sp, #12]
    4dd0:	466b      	mov	r3, sp
    4dd2:	7b1b      	ldrb	r3, [r3, #12]
    4dd4:	2000      	movs	r0, #0
    4dd6:	9305      	str	r3, [sp, #20]
    4dd8:	2300      	movs	r3, #0
    4dda:	2100      	movs	r1, #0
    4ddc:	469c      	mov	ip, r3
    4dde:	223f      	movs	r2, #63	; 0x3f
    4de0:	e027      	b.n	4e32 <_sercom_get_async_baud_val+0x152>
    4de2:	2401      	movs	r4, #1
    4de4:	409c      	lsls	r4, r3
    4de6:	1c23      	adds	r3, r4, #0
    4de8:	2701      	movs	r7, #1
    4dea:	4646      	mov	r6, r8
    4dec:	4097      	lsls	r7, r2
    4dee:	403e      	ands	r6, r7
    4df0:	1c04      	adds	r4, r0, #0
    4df2:	1c0d      	adds	r5, r1, #0
    4df4:	46b2      	mov	sl, r6
    4df6:	464e      	mov	r6, r9
    4df8:	1824      	adds	r4, r4, r0
    4dfa:	414d      	adcs	r5, r1
    4dfc:	4033      	ands	r3, r6
    4dfe:	4656      	mov	r6, sl
    4e00:	1c20      	adds	r0, r4, #0
    4e02:	1c29      	adds	r1, r5, #0
    4e04:	4333      	orrs	r3, r6
    4e06:	d004      	beq.n	4e12 <_sercom_get_async_baud_val+0x132>
    4e08:	2101      	movs	r1, #1
    4e0a:	1c23      	adds	r3, r4, #0
    4e0c:	430b      	orrs	r3, r1
    4e0e:	1c18      	adds	r0, r3, #0
    4e10:	1c29      	adds	r1, r5, #0
    4e12:	9b01      	ldr	r3, [sp, #4]
    4e14:	428b      	cmp	r3, r1
    4e16:	d80a      	bhi.n	4e2e <_sercom_get_async_baud_val+0x14e>
    4e18:	d102      	bne.n	4e20 <_sercom_get_async_baud_val+0x140>
    4e1a:	9b00      	ldr	r3, [sp, #0]
    4e1c:	4283      	cmp	r3, r0
    4e1e:	d806      	bhi.n	4e2e <_sercom_get_async_baud_val+0x14e>
    4e20:	9b00      	ldr	r3, [sp, #0]
    4e22:	9c01      	ldr	r4, [sp, #4]
    4e24:	1ac0      	subs	r0, r0, r3
    4e26:	41a1      	sbcs	r1, r4
    4e28:	4663      	mov	r3, ip
    4e2a:	433b      	orrs	r3, r7
    4e2c:	469c      	mov	ip, r3
    4e2e:	3a01      	subs	r2, #1
    4e30:	d309      	bcc.n	4e46 <_sercom_get_async_baud_val+0x166>
    4e32:	2320      	movs	r3, #32
    4e34:	425b      	negs	r3, r3
    4e36:	18d3      	adds	r3, r2, r3
    4e38:	d5d3      	bpl.n	4de2 <_sercom_get_async_baud_val+0x102>
    4e3a:	465b      	mov	r3, fp
    4e3c:	2401      	movs	r4, #1
    4e3e:	1a9b      	subs	r3, r3, r2
    4e40:	40dc      	lsrs	r4, r3
    4e42:	1c23      	adds	r3, r4, #0
    4e44:	e7d0      	b.n	4de8 <_sercom_get_async_baud_val+0x108>
    4e46:	4661      	mov	r1, ip
    4e48:	9a03      	ldr	r2, [sp, #12]
    4e4a:	1a8b      	subs	r3, r1, r2
    4e4c:	4907      	ldr	r1, [pc, #28]	; (4e6c <_sercom_get_async_baud_val+0x18c>)
    4e4e:	08db      	lsrs	r3, r3, #3
    4e50:	428b      	cmp	r3, r1
    4e52:	d906      	bls.n	4e62 <_sercom_get_async_baud_val+0x182>
    4e54:	1c13      	adds	r3, r2, #0
    4e56:	3301      	adds	r3, #1
    4e58:	9303      	str	r3, [sp, #12]
    4e5a:	2b08      	cmp	r3, #8
    4e5c:	d1b8      	bne.n	4dd0 <_sercom_get_async_baud_val+0xf0>
    4e5e:	2040      	movs	r0, #64	; 0x40
    4e60:	e74d      	b.n	4cfe <_sercom_get_async_baud_val+0x1e>
    4e62:	9a05      	ldr	r2, [sp, #20]
    4e64:	0354      	lsls	r4, r2, #13
    4e66:	431c      	orrs	r4, r3
    4e68:	b2a4      	uxth	r4, r4
    4e6a:	e797      	b.n	4d9c <_sercom_get_async_baud_val+0xbc>
    4e6c:	00001fff 	.word	0x00001fff

00004e70 <sercom_set_gclk_generator>:
    4e70:	b530      	push	{r4, r5, lr}
    4e72:	4c0e      	ldr	r4, [pc, #56]	; (4eac <sercom_set_gclk_generator+0x3c>)
    4e74:	b083      	sub	sp, #12
    4e76:	7823      	ldrb	r3, [r4, #0]
    4e78:	1c05      	adds	r5, r0, #0
    4e7a:	2b00      	cmp	r3, #0
    4e7c:	d006      	beq.n	4e8c <sercom_set_gclk_generator+0x1c>
    4e7e:	2900      	cmp	r1, #0
    4e80:	d104      	bne.n	4e8c <sercom_set_gclk_generator+0x1c>
    4e82:	7863      	ldrb	r3, [r4, #1]
    4e84:	4283      	cmp	r3, r0
    4e86:	d00f      	beq.n	4ea8 <sercom_set_gclk_generator+0x38>
    4e88:	201d      	movs	r0, #29
    4e8a:	e00b      	b.n	4ea4 <sercom_set_gclk_generator+0x34>
    4e8c:	a901      	add	r1, sp, #4
    4e8e:	2013      	movs	r0, #19
    4e90:	700d      	strb	r5, [r1, #0]
    4e92:	f7ff f93d 	bl	4110 <system_gclk_chan_set_config>
    4e96:	2013      	movs	r0, #19
    4e98:	f7ff f8fc 	bl	4094 <system_gclk_chan_enable>
    4e9c:	2301      	movs	r3, #1
    4e9e:	2000      	movs	r0, #0
    4ea0:	7065      	strb	r5, [r4, #1]
    4ea2:	7023      	strb	r3, [r4, #0]
    4ea4:	b003      	add	sp, #12
    4ea6:	bd30      	pop	{r4, r5, pc}
    4ea8:	2000      	movs	r0, #0
    4eaa:	e7fb      	b.n	4ea4 <sercom_set_gclk_generator+0x34>
    4eac:	200045c8 	.word	0x200045c8

00004eb0 <_sercom_get_sercom_inst_index>:
    4eb0:	b570      	push	{r4, r5, r6, lr}
    4eb2:	b086      	sub	sp, #24
    4eb4:	4669      	mov	r1, sp
    4eb6:	4b09      	ldr	r3, [pc, #36]	; (4edc <_sercom_get_sercom_inst_index+0x2c>)
    4eb8:	466a      	mov	r2, sp
    4eba:	cb70      	ldmia	r3!, {r4, r5, r6}
    4ebc:	c170      	stmia	r1!, {r4, r5, r6}
    4ebe:	cb70      	ldmia	r3!, {r4, r5, r6}
    4ec0:	c170      	stmia	r1!, {r4, r5, r6}
    4ec2:	2300      	movs	r3, #0
    4ec4:	0099      	lsls	r1, r3, #2
    4ec6:	5851      	ldr	r1, [r2, r1]
    4ec8:	4281      	cmp	r1, r0
    4eca:	d005      	beq.n	4ed8 <_sercom_get_sercom_inst_index+0x28>
    4ecc:	3301      	adds	r3, #1
    4ece:	2b06      	cmp	r3, #6
    4ed0:	d1f8      	bne.n	4ec4 <_sercom_get_sercom_inst_index+0x14>
    4ed2:	2000      	movs	r0, #0
    4ed4:	b006      	add	sp, #24
    4ed6:	bd70      	pop	{r4, r5, r6, pc}
    4ed8:	b2d8      	uxtb	r0, r3
    4eda:	e7fb      	b.n	4ed4 <_sercom_get_sercom_inst_index+0x24>
    4edc:	0000f254 	.word	0x0000f254

00004ee0 <system_clock_source_get_hz>:
    4ee0:	b510      	push	{r4, lr}
    4ee2:	2808      	cmp	r0, #8
    4ee4:	d82c      	bhi.n	4f40 <system_clock_source_get_hz+0x60>
    4ee6:	4b1b      	ldr	r3, [pc, #108]	; (4f54 <system_clock_source_get_hz+0x74>)
    4ee8:	0080      	lsls	r0, r0, #2
    4eea:	581b      	ldr	r3, [r3, r0]
    4eec:	469f      	mov	pc, r3
    4eee:	2080      	movs	r0, #128	; 0x80
    4ef0:	0200      	lsls	r0, r0, #8
    4ef2:	bd10      	pop	{r4, pc}
    4ef4:	4b18      	ldr	r3, [pc, #96]	; (4f58 <system_clock_source_get_hz+0x78>)
    4ef6:	6958      	ldr	r0, [r3, #20]
    4ef8:	e7fb      	b.n	4ef2 <system_clock_source_get_hz+0x12>
    4efa:	4b18      	ldr	r3, [pc, #96]	; (4f5c <system_clock_source_get_hz+0x7c>)
    4efc:	6a18      	ldr	r0, [r3, #32]
    4efe:	4b18      	ldr	r3, [pc, #96]	; (4f60 <system_clock_source_get_hz+0x80>)
    4f00:	0580      	lsls	r0, r0, #22
    4f02:	0f80      	lsrs	r0, r0, #30
    4f04:	40c3      	lsrs	r3, r0
    4f06:	1c18      	adds	r0, r3, #0
    4f08:	e7f3      	b.n	4ef2 <system_clock_source_get_hz+0x12>
    4f0a:	2002      	movs	r0, #2
    4f0c:	4c12      	ldr	r4, [pc, #72]	; (4f58 <system_clock_source_get_hz+0x78>)
    4f0e:	6823      	ldr	r3, [r4, #0]
    4f10:	4018      	ands	r0, r3
    4f12:	d0ee      	beq.n	4ef2 <system_clock_source_get_hz+0x12>
    4f14:	2210      	movs	r2, #16
    4f16:	4911      	ldr	r1, [pc, #68]	; (4f5c <system_clock_source_get_hz+0x7c>)
    4f18:	68cb      	ldr	r3, [r1, #12]
    4f1a:	421a      	tst	r2, r3
    4f1c:	d0fc      	beq.n	4f18 <system_clock_source_get_hz+0x38>
    4f1e:	6823      	ldr	r3, [r4, #0]
    4f20:	075b      	lsls	r3, r3, #29
    4f22:	d40f      	bmi.n	4f44 <system_clock_source_get_hz+0x64>
    4f24:	480f      	ldr	r0, [pc, #60]	; (4f64 <system_clock_source_get_hz+0x84>)
    4f26:	e7e4      	b.n	4ef2 <system_clock_source_get_hz+0x12>
    4f28:	4b0b      	ldr	r3, [pc, #44]	; (4f58 <system_clock_source_get_hz+0x78>)
    4f2a:	6918      	ldr	r0, [r3, #16]
    4f2c:	e7e1      	b.n	4ef2 <system_clock_source_get_hz+0x12>
    4f2e:	2350      	movs	r3, #80	; 0x50
    4f30:	4a0a      	ldr	r2, [pc, #40]	; (4f5c <system_clock_source_get_hz+0x7c>)
    4f32:	2000      	movs	r0, #0
    4f34:	5cd3      	ldrb	r3, [r2, r3]
    4f36:	075b      	lsls	r3, r3, #29
    4f38:	d5db      	bpl.n	4ef2 <system_clock_source_get_hz+0x12>
    4f3a:	4b07      	ldr	r3, [pc, #28]	; (4f58 <system_clock_source_get_hz+0x78>)
    4f3c:	68d8      	ldr	r0, [r3, #12]
    4f3e:	e7d8      	b.n	4ef2 <system_clock_source_get_hz+0x12>
    4f40:	2000      	movs	r0, #0
    4f42:	e7d6      	b.n	4ef2 <system_clock_source_get_hz+0x12>
    4f44:	2000      	movs	r0, #0
    4f46:	f7ff f8ef 	bl	4128 <system_gclk_chan_get_hz>
    4f4a:	68a3      	ldr	r3, [r4, #8]
    4f4c:	041b      	lsls	r3, r3, #16
    4f4e:	0c1b      	lsrs	r3, r3, #16
    4f50:	4358      	muls	r0, r3
    4f52:	e7ce      	b.n	4ef2 <system_clock_source_get_hz+0x12>
    4f54:	0000f26c 	.word	0x0000f26c
    4f58:	200045cc 	.word	0x200045cc
    4f5c:	40000800 	.word	0x40000800
    4f60:	007a1200 	.word	0x007a1200
    4f64:	02dc6c00 	.word	0x02dc6c00

00004f68 <system_clock_source_enable>:
    4f68:	b510      	push	{r4, lr}
    4f6a:	2808      	cmp	r0, #8
    4f6c:	d841      	bhi.n	4ff2 <system_clock_source_enable+0x8a>
    4f6e:	4b22      	ldr	r3, [pc, #136]	; (4ff8 <system_clock_source_enable+0x90>)
    4f70:	0080      	lsls	r0, r0, #2
    4f72:	581b      	ldr	r3, [r3, r0]
    4f74:	469f      	mov	pc, r3
    4f76:	2000      	movs	r0, #0
    4f78:	bd10      	pop	{r4, pc}
    4f7a:	2302      	movs	r3, #2
    4f7c:	4a1f      	ldr	r2, [pc, #124]	; (4ffc <system_clock_source_enable+0x94>)
    4f7e:	2000      	movs	r0, #0
    4f80:	6991      	ldr	r1, [r2, #24]
    4f82:	430b      	orrs	r3, r1
    4f84:	6193      	str	r3, [r2, #24]
    4f86:	e7f7      	b.n	4f78 <system_clock_source_enable+0x10>
    4f88:	2302      	movs	r3, #2
    4f8a:	4a1c      	ldr	r2, [pc, #112]	; (4ffc <system_clock_source_enable+0x94>)
    4f8c:	2000      	movs	r0, #0
    4f8e:	8a91      	ldrh	r1, [r2, #20]
    4f90:	430b      	orrs	r3, r1
    4f92:	8293      	strh	r3, [r2, #20]
    4f94:	e7f0      	b.n	4f78 <system_clock_source_enable+0x10>
    4f96:	2302      	movs	r3, #2
    4f98:	4a18      	ldr	r2, [pc, #96]	; (4ffc <system_clock_source_enable+0x94>)
    4f9a:	2000      	movs	r0, #0
    4f9c:	6a11      	ldr	r1, [r2, #32]
    4f9e:	430b      	orrs	r3, r1
    4fa0:	6213      	str	r3, [r2, #32]
    4fa2:	e7e9      	b.n	4f78 <system_clock_source_enable+0x10>
    4fa4:	2302      	movs	r3, #2
    4fa6:	2010      	movs	r0, #16
    4fa8:	4c15      	ldr	r4, [pc, #84]	; (5000 <system_clock_source_enable+0x98>)
    4faa:	6822      	ldr	r2, [r4, #0]
    4fac:	4313      	orrs	r3, r2
    4fae:	6023      	str	r3, [r4, #0]
    4fb0:	6822      	ldr	r2, [r4, #0]
    4fb2:	4b14      	ldr	r3, [pc, #80]	; (5004 <system_clock_source_enable+0x9c>)
    4fb4:	4013      	ands	r3, r2
    4fb6:	4a11      	ldr	r2, [pc, #68]	; (4ffc <system_clock_source_enable+0x94>)
    4fb8:	8493      	strh	r3, [r2, #36]	; 0x24
    4fba:	68d3      	ldr	r3, [r2, #12]
    4fbc:	490f      	ldr	r1, [pc, #60]	; (4ffc <system_clock_source_enable+0x94>)
    4fbe:	4218      	tst	r0, r3
    4fc0:	d0fb      	beq.n	4fba <system_clock_source_enable+0x52>
    4fc2:	68a3      	ldr	r3, [r4, #8]
    4fc4:	2000      	movs	r0, #0
    4fc6:	62cb      	str	r3, [r1, #44]	; 0x2c
    4fc8:	6863      	ldr	r3, [r4, #4]
    4fca:	628b      	str	r3, [r1, #40]	; 0x28
    4fcc:	6823      	ldr	r3, [r4, #0]
    4fce:	b29b      	uxth	r3, r3
    4fd0:	848b      	strh	r3, [r1, #36]	; 0x24
    4fd2:	e7d1      	b.n	4f78 <system_clock_source_enable+0x10>
    4fd4:	2244      	movs	r2, #68	; 0x44
    4fd6:	2302      	movs	r3, #2
    4fd8:	4908      	ldr	r1, [pc, #32]	; (4ffc <system_clock_source_enable+0x94>)
    4fda:	5c88      	ldrb	r0, [r1, r2]
    4fdc:	4303      	orrs	r3, r0
    4fde:	548b      	strb	r3, [r1, r2]
    4fe0:	2000      	movs	r0, #0
    4fe2:	e7c9      	b.n	4f78 <system_clock_source_enable+0x10>
    4fe4:	2302      	movs	r3, #2
    4fe6:	4a05      	ldr	r2, [pc, #20]	; (4ffc <system_clock_source_enable+0x94>)
    4fe8:	2000      	movs	r0, #0
    4fea:	8a11      	ldrh	r1, [r2, #16]
    4fec:	430b      	orrs	r3, r1
    4fee:	8213      	strh	r3, [r2, #16]
    4ff0:	e7c2      	b.n	4f78 <system_clock_source_enable+0x10>
    4ff2:	2017      	movs	r0, #23
    4ff4:	e7c0      	b.n	4f78 <system_clock_source_enable+0x10>
    4ff6:	46c0      	nop			; (mov r8, r8)
    4ff8:	0000f290 	.word	0x0000f290
    4ffc:	40000800 	.word	0x40000800
    5000:	200045cc 	.word	0x200045cc
    5004:	0000ff7f 	.word	0x0000ff7f

00005008 <system_clock_init>:
    5008:	b5f0      	push	{r4, r5, r6, r7, lr}
    500a:	4647      	mov	r7, r8
    500c:	22c2      	movs	r2, #194	; 0xc2
    500e:	211e      	movs	r1, #30
    5010:	b480      	push	{r7}
    5012:	4b31      	ldr	r3, [pc, #196]	; (50d8 <system_clock_init+0xd0>)
    5014:	00d2      	lsls	r2, r2, #3
    5016:	609a      	str	r2, [r3, #8]
    5018:	4a30      	ldr	r2, [pc, #192]	; (50dc <system_clock_init+0xd4>)
    501a:	2400      	movs	r4, #0
    501c:	6853      	ldr	r3, [r2, #4]
    501e:	b084      	sub	sp, #16
    5020:	438b      	bics	r3, r1
    5022:	6053      	str	r3, [r2, #4]
    5024:	2301      	movs	r3, #1
    5026:	ad01      	add	r5, sp, #4
    5028:	702b      	strb	r3, [r5, #0]
    502a:	b2e0      	uxtb	r0, r4
    502c:	1c29      	adds	r1, r5, #0
    502e:	3401      	adds	r4, #1
    5030:	f7ff f86e 	bl	4110 <system_gclk_chan_set_config>
    5034:	2c25      	cmp	r4, #37	; 0x25
    5036:	d1f8      	bne.n	502a <system_clock_init+0x22>
    5038:	4b29      	ldr	r3, [pc, #164]	; (50e0 <system_clock_init+0xd8>)
    503a:	4c27      	ldr	r4, [pc, #156]	; (50d8 <system_clock_init+0xd0>)
    503c:	681b      	ldr	r3, [r3, #0]
    503e:	69a1      	ldr	r1, [r4, #24]
    5040:	04db      	lsls	r3, r3, #19
    5042:	0e5b      	lsrs	r3, r3, #25
    5044:	041a      	lsls	r2, r3, #16
    5046:	4b27      	ldr	r3, [pc, #156]	; (50e4 <system_clock_init+0xdc>)
    5048:	2604      	movs	r6, #4
    504a:	400b      	ands	r3, r1
    504c:	4313      	orrs	r3, r2
    504e:	2208      	movs	r2, #8
    5050:	2740      	movs	r7, #64	; 0x40
    5052:	61a3      	str	r3, [r4, #24]
    5054:	69a3      	ldr	r3, [r4, #24]
    5056:	2004      	movs	r0, #4
    5058:	4333      	orrs	r3, r6
    505a:	4313      	orrs	r3, r2
    505c:	43bb      	bics	r3, r7
    505e:	3278      	adds	r2, #120	; 0x78
    5060:	4690      	mov	r8, r2
    5062:	4313      	orrs	r3, r2
    5064:	22e0      	movs	r2, #224	; 0xe0
    5066:	00d2      	lsls	r2, r2, #3
    5068:	4313      	orrs	r3, r2
    506a:	4a1f      	ldr	r2, [pc, #124]	; (50e8 <system_clock_init+0xe0>)
    506c:	4013      	ands	r3, r2
    506e:	61a3      	str	r3, [r4, #24]
    5070:	f7ff ff7a 	bl	4f68 <system_clock_source_enable>
    5074:	4642      	mov	r2, r8
    5076:	6a23      	ldr	r3, [r4, #32]
    5078:	2006      	movs	r0, #6
    507a:	43bb      	bics	r3, r7
    507c:	4313      	orrs	r3, r2
    507e:	4a1b      	ldr	r2, [pc, #108]	; (50ec <system_clock_init+0xe4>)
    5080:	4013      	ands	r3, r2
    5082:	6223      	str	r3, [r4, #32]
    5084:	f7ff ff70 	bl	4f68 <system_clock_source_enable>
    5088:	2400      	movs	r4, #0
    508a:	f7fe ff4d 	bl	3f28 <system_gclk_init>
    508e:	2320      	movs	r3, #32
    5090:	1c29      	adds	r1, r5, #0
    5092:	2002      	movs	r0, #2
    5094:	606b      	str	r3, [r5, #4]
    5096:	706c      	strb	r4, [r5, #1]
    5098:	722c      	strb	r4, [r5, #8]
    509a:	726c      	strb	r4, [r5, #9]
    509c:	702e      	strb	r6, [r5, #0]
    509e:	f7fe ff55 	bl	3f4c <system_gclk_gen_set_config>
    50a2:	2002      	movs	r0, #2
    50a4:	f7fe ff9c 	bl	3fe0 <system_gclk_gen_enable>
    50a8:	4b11      	ldr	r3, [pc, #68]	; (50f0 <system_clock_init+0xe8>)
    50aa:	1c29      	adds	r1, r5, #0
    50ac:	721c      	strb	r4, [r3, #8]
    50ae:	725c      	strb	r4, [r3, #9]
    50b0:	729c      	strb	r4, [r3, #10]
    50b2:	72dc      	strb	r4, [r3, #11]
    50b4:	2301      	movs	r3, #1
    50b6:	2000      	movs	r0, #0
    50b8:	606b      	str	r3, [r5, #4]
    50ba:	3305      	adds	r3, #5
    50bc:	702b      	strb	r3, [r5, #0]
    50be:	706c      	strb	r4, [r5, #1]
    50c0:	722c      	strb	r4, [r5, #8]
    50c2:	726c      	strb	r4, [r5, #9]
    50c4:	f7fe ff42 	bl	3f4c <system_gclk_gen_set_config>
    50c8:	2000      	movs	r0, #0
    50ca:	f7fe ff89 	bl	3fe0 <system_gclk_gen_enable>
    50ce:	b004      	add	sp, #16
    50d0:	bc04      	pop	{r2}
    50d2:	4690      	mov	r8, r2
    50d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    50d6:	46c0      	nop			; (mov r8, r8)
    50d8:	40000800 	.word	0x40000800
    50dc:	41004000 	.word	0x41004000
    50e0:	00806024 	.word	0x00806024
    50e4:	ff80ffff 	.word	0xff80ffff
    50e8:	ffffefff 	.word	0xffffefff
    50ec:	fffffcff 	.word	0xfffffcff
    50f0:	40000400 	.word	0x40000400

000050f4 <gpio_init>:
    50f4:	b570      	push	{r4, r5, r6, lr}
    50f6:	1c05      	adds	r5, r0, #0
    50f8:	b082      	sub	sp, #8
    50fa:	1c0c      	adds	r4, r1, #0
    50fc:	1c4b      	adds	r3, r1, #1
    50fe:	d028      	beq.n	5152 <gpio_init+0x5e>
    5100:	b2c8      	uxtb	r0, r1
    5102:	2900      	cmp	r1, #0
    5104:	db2c      	blt.n	5160 <gpio_init+0x6c>
    5106:	4b18      	ldr	r3, [pc, #96]	; (5168 <gpio_init+0x74>)
    5108:	0946      	lsrs	r6, r0, #5
    510a:	469c      	mov	ip, r3
    510c:	01f6      	lsls	r6, r6, #7
    510e:	4466      	add	r6, ip
    5110:	702c      	strb	r4, [r5, #0]
    5112:	17e2      	asrs	r2, r4, #31
    5114:	0ed2      	lsrs	r2, r2, #27
    5116:	18a3      	adds	r3, r4, r2
    5118:	241f      	movs	r4, #31
    511a:	401c      	ands	r4, r3
    511c:	1aa4      	subs	r4, r4, r2
    511e:	2201      	movs	r2, #1
    5120:	1c13      	adds	r3, r2, #0
    5122:	b264      	sxtb	r4, r4
    5124:	40a3      	lsls	r3, r4
    5126:	606b      	str	r3, [r5, #4]
    5128:	2300      	movs	r3, #0
    512a:	a901      	add	r1, sp, #4
    512c:	722b      	strb	r3, [r5, #8]
    512e:	72ab      	strb	r3, [r5, #10]
    5130:	726a      	strb	r2, [r5, #9]
    5132:	700b      	strb	r3, [r1, #0]
    5134:	708b      	strb	r3, [r1, #2]
    5136:	704a      	strb	r2, [r1, #1]
    5138:	f000 fe6a 	bl	5e10 <port_pin_set_config>
    513c:	1c33      	adds	r3, r6, #0
    513e:	3314      	adds	r3, #20
    5140:	60eb      	str	r3, [r5, #12]
    5142:	3304      	adds	r3, #4
    5144:	612b      	str	r3, [r5, #16]
    5146:	3610      	adds	r6, #16
    5148:	3308      	adds	r3, #8
    514a:	616b      	str	r3, [r5, #20]
    514c:	61ae      	str	r6, [r5, #24]
    514e:	b002      	add	sp, #8
    5150:	bd70      	pop	{r4, r5, r6, pc}
    5152:	4806      	ldr	r0, [pc, #24]	; (516c <gpio_init+0x78>)
    5154:	4906      	ldr	r1, [pc, #24]	; (5170 <gpio_init+0x7c>)
    5156:	221f      	movs	r2, #31
    5158:	f7ff fd2a 	bl	4bb0 <mbed_assert_internal>
    515c:	702c      	strb	r4, [r5, #0]
    515e:	e7f6      	b.n	514e <gpio_init+0x5a>
    5160:	702c      	strb	r4, [r5, #0]
    5162:	2600      	movs	r6, #0
    5164:	e7d5      	b.n	5112 <gpio_init+0x1e>
    5166:	46c0      	nop			; (mov r8, r8)
    5168:	41004400 	.word	0x41004400
    516c:	0000f2b4 	.word	0x0000f2b4
    5170:	0000f2c8 	.word	0x0000f2c8

00005174 <gpio_mode>:
    5174:	b530      	push	{r4, r5, lr}
    5176:	1c04      	adds	r4, r0, #0
    5178:	7800      	ldrb	r0, [r0, #0]
    517a:	b083      	sub	sp, #12
    517c:	b243      	sxtb	r3, r0
    517e:	1c0d      	adds	r5, r1, #0
    5180:	3301      	adds	r3, #1
    5182:	d013      	beq.n	51ac <gpio_mode+0x38>
    5184:	7aa3      	ldrb	r3, [r4, #10]
    5186:	a901      	add	r1, sp, #4
    5188:	700b      	strb	r3, [r1, #0]
    518a:	7a23      	ldrb	r3, [r4, #8]
    518c:	7265      	strb	r5, [r4, #9]
    518e:	1e5a      	subs	r2, r3, #1
    5190:	4193      	sbcs	r3, r2
    5192:	708b      	strb	r3, [r1, #2]
    5194:	2d01      	cmp	r5, #1
    5196:	d003      	beq.n	51a0 <gpio_mode+0x2c>
    5198:	2d00      	cmp	r5, #0
    519a:	d001      	beq.n	51a0 <gpio_mode+0x2c>
    519c:	2d02      	cmp	r5, #2
    519e:	d100      	bne.n	51a2 <gpio_mode+0x2e>
    51a0:	704d      	strb	r5, [r1, #1]
    51a2:	b2c0      	uxtb	r0, r0
    51a4:	f000 fe34 	bl	5e10 <port_pin_set_config>
    51a8:	b003      	add	sp, #12
    51aa:	bd30      	pop	{r4, r5, pc}
    51ac:	4803      	ldr	r0, [pc, #12]	; (51bc <gpio_mode+0x48>)
    51ae:	4904      	ldr	r1, [pc, #16]	; (51c0 <gpio_mode+0x4c>)
    51b0:	2236      	movs	r2, #54	; 0x36
    51b2:	f7ff fcfd 	bl	4bb0 <mbed_assert_internal>
    51b6:	7820      	ldrb	r0, [r4, #0]
    51b8:	e7e4      	b.n	5184 <gpio_mode+0x10>
    51ba:	46c0      	nop			; (mov r8, r8)
    51bc:	0000e6ac 	.word	0x0000e6ac
    51c0:	0000f2c8 	.word	0x0000f2c8

000051c4 <gpio_dir>:
    51c4:	b530      	push	{r4, r5, lr}
    51c6:	1c04      	adds	r4, r0, #0
    51c8:	7800      	ldrb	r0, [r0, #0]
    51ca:	b083      	sub	sp, #12
    51cc:	b243      	sxtb	r3, r0
    51ce:	1c0d      	adds	r5, r1, #0
    51d0:	3301      	adds	r3, #1
    51d2:	d013      	beq.n	51fc <gpio_dir+0x38>
    51d4:	7a63      	ldrb	r3, [r4, #9]
    51d6:	a901      	add	r1, sp, #4
    51d8:	704b      	strb	r3, [r1, #1]
    51da:	7a23      	ldrb	r3, [r4, #8]
    51dc:	72a5      	strb	r5, [r4, #10]
    51de:	1e5a      	subs	r2, r3, #1
    51e0:	4193      	sbcs	r3, r2
    51e2:	708b      	strb	r3, [r1, #2]
    51e4:	2d01      	cmp	r5, #1
    51e6:	d003      	beq.n	51f0 <gpio_dir+0x2c>
    51e8:	2d00      	cmp	r5, #0
    51ea:	d001      	beq.n	51f0 <gpio_dir+0x2c>
    51ec:	2d02      	cmp	r5, #2
    51ee:	d100      	bne.n	51f2 <gpio_dir+0x2e>
    51f0:	700d      	strb	r5, [r1, #0]
    51f2:	b2c0      	uxtb	r0, r0
    51f4:	f000 fe0c 	bl	5e10 <port_pin_set_config>
    51f8:	b003      	add	sp, #12
    51fa:	bd30      	pop	{r4, r5, pc}
    51fc:	4803      	ldr	r0, [pc, #12]	; (520c <gpio_dir+0x48>)
    51fe:	4904      	ldr	r1, [pc, #16]	; (5210 <gpio_dir+0x4c>)
    5200:	224c      	movs	r2, #76	; 0x4c
    5202:	f7ff fcd5 	bl	4bb0 <mbed_assert_internal>
    5206:	7820      	ldrb	r0, [r4, #0]
    5208:	e7e4      	b.n	51d4 <gpio_dir+0x10>
    520a:	46c0      	nop			; (mov r8, r8)
    520c:	0000e6ac 	.word	0x0000e6ac
    5210:	0000f2c8 	.word	0x0000f2c8

00005214 <pin_mode>:
    5214:	b5f0      	push	{r4, r5, r6, r7, lr}
    5216:	4645      	mov	r5, r8
    5218:	4657      	mov	r7, sl
    521a:	464e      	mov	r6, r9
    521c:	b4e0      	push	{r5, r6, r7}
    521e:	4688      	mov	r8, r1
    5220:	b082      	sub	sp, #8
    5222:	1c05      	adds	r5, r0, #0
    5224:	1c43      	adds	r3, r0, #1
    5226:	d062      	beq.n	52ee <pin_mode+0xda>
    5228:	17c4      	asrs	r4, r0, #31
    522a:	0ee2      	lsrs	r2, r4, #27
    522c:	241f      	movs	r4, #31
    522e:	2701      	movs	r7, #1
    5230:	1883      	adds	r3, r0, r2
    5232:	401c      	ands	r4, r3
    5234:	1aa4      	subs	r4, r4, r2
    5236:	b264      	sxtb	r4, r4
    5238:	40a7      	lsls	r7, r4
    523a:	b2c6      	uxtb	r6, r0
    523c:	46ba      	mov	sl, r7
    523e:	0975      	lsrs	r5, r6, #5
    5240:	09f3      	lsrs	r3, r6, #7
    5242:	d13e      	bne.n	52c2 <pin_mode+0xae>
    5244:	4b37      	ldr	r3, [pc, #220]	; (5324 <pin_mode+0x110>)
    5246:	01ed      	lsls	r5, r5, #7
    5248:	469c      	mov	ip, r3
    524a:	4465      	add	r5, ip
    524c:	2d00      	cmp	r5, #0
    524e:	d062      	beq.n	5316 <pin_mode+0x102>
    5250:	1c28      	adds	r0, r5, #0
    5252:	231f      	movs	r3, #31
    5254:	4033      	ands	r3, r6
    5256:	18c2      	adds	r2, r0, r3
    5258:	3240      	adds	r2, #64	; 0x40
    525a:	7812      	ldrb	r2, [r2, #0]
    525c:	2101      	movs	r1, #1
    525e:	4694      	mov	ip, r2
    5260:	4667      	mov	r7, ip
    5262:	2280      	movs	r2, #128	; 0x80
    5264:	4239      	tst	r1, r7
    5266:	d136      	bne.n	52d6 <pin_mode+0xc2>
    5268:	a901      	add	r1, sp, #4
    526a:	700a      	strb	r2, [r1, #0]
    526c:	2202      	movs	r2, #2
    526e:	192c      	adds	r4, r5, r4
    5270:	3440      	adds	r4, #64	; 0x40
    5272:	7823      	ldrb	r3, [r4, #0]
    5274:	421a      	tst	r2, r3
    5276:	d010      	beq.n	529a <pin_mode+0x86>
    5278:	4650      	mov	r0, sl
    527a:	682b      	ldr	r3, [r5, #0]
    527c:	4003      	ands	r3, r0
    527e:	d134      	bne.n	52ea <pin_mode+0xd6>
    5280:	704b      	strb	r3, [r1, #1]
    5282:	7823      	ldrb	r3, [r4, #0]
    5284:	075b      	lsls	r3, r3, #29
    5286:	d50a      	bpl.n	529e <pin_mode+0x8a>
    5288:	692b      	ldr	r3, [r5, #16]
    528a:	4642      	mov	r2, r8
    528c:	2300      	movs	r3, #0
    528e:	70cb      	strb	r3, [r1, #3]
    5290:	2a01      	cmp	r2, #1
    5292:	d109      	bne.n	52a8 <pin_mode+0x94>
    5294:	4643      	mov	r3, r8
    5296:	708b      	strb	r3, [r1, #2]
    5298:	e00a      	b.n	52b0 <pin_mode+0x9c>
    529a:	2301      	movs	r3, #1
    529c:	704b      	strb	r3, [r1, #1]
    529e:	2300      	movs	r3, #0
    52a0:	4642      	mov	r2, r8
    52a2:	70cb      	strb	r3, [r1, #3]
    52a4:	2a01      	cmp	r2, #1
    52a6:	d0f5      	beq.n	5294 <pin_mode+0x80>
    52a8:	4642      	mov	r2, r8
    52aa:	2a02      	cmp	r2, #2
    52ac:	d0f2      	beq.n	5294 <pin_mode+0x80>
    52ae:	708b      	strb	r3, [r1, #2]
    52b0:	1c30      	adds	r0, r6, #0
    52b2:	f7fe fe23 	bl	3efc <system_pinmux_pin_set_config>
    52b6:	b002      	add	sp, #8
    52b8:	bc1c      	pop	{r2, r3, r4}
    52ba:	4690      	mov	r8, r2
    52bc:	4699      	mov	r9, r3
    52be:	46a2      	mov	sl, r4
    52c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    52c2:	4b19      	ldr	r3, [pc, #100]	; (5328 <pin_mode+0x114>)
    52c4:	4699      	mov	r9, r3
    52c6:	4819      	ldr	r0, [pc, #100]	; (532c <pin_mode+0x118>)
    52c8:	4649      	mov	r1, r9
    52ca:	2223      	movs	r2, #35	; 0x23
    52cc:	f7ff fc70 	bl	4bb0 <mbed_assert_internal>
    52d0:	2500      	movs	r5, #0
    52d2:	2000      	movs	r0, #0
    52d4:	e7bd      	b.n	5252 <pin_mode+0x3e>
    52d6:	085b      	lsrs	r3, r3, #1
    52d8:	18c3      	adds	r3, r0, r3
    52da:	3330      	adds	r3, #48	; 0x30
    52dc:	781a      	ldrb	r2, [r3, #0]
    52de:	b2d2      	uxtb	r2, r2
    52e0:	4231      	tst	r1, r6
    52e2:	d116      	bne.n	5312 <pin_mode+0xfe>
    52e4:	230f      	movs	r3, #15
    52e6:	401a      	ands	r2, r3
    52e8:	e7be      	b.n	5268 <pin_mode+0x54>
    52ea:	704a      	strb	r2, [r1, #1]
    52ec:	e7d7      	b.n	529e <pin_mode+0x8a>
    52ee:	4b0e      	ldr	r3, [pc, #56]	; (5328 <pin_mode+0x114>)
    52f0:	4c0f      	ldr	r4, [pc, #60]	; (5330 <pin_mode+0x11c>)
    52f2:	4699      	mov	r9, r3
    52f4:	1c19      	adds	r1, r3, #0
    52f6:	1c20      	adds	r0, r4, #0
    52f8:	225c      	movs	r2, #92	; 0x5c
    52fa:	f7ff fc59 	bl	4bb0 <mbed_assert_internal>
    52fe:	1c20      	adds	r0, r4, #0
    5300:	4649      	mov	r1, r9
    5302:	221e      	movs	r2, #30
    5304:	f7ff fc54 	bl	4bb0 <mbed_assert_internal>
    5308:	2300      	movs	r3, #0
    530a:	26ff      	movs	r6, #255	; 0xff
    530c:	469a      	mov	sl, r3
    530e:	1c2c      	adds	r4, r5, #0
    5310:	e7d9      	b.n	52c6 <pin_mode+0xb2>
    5312:	0912      	lsrs	r2, r2, #4
    5314:	e7a8      	b.n	5268 <pin_mode+0x54>
    5316:	4805      	ldr	r0, [pc, #20]	; (532c <pin_mode+0x118>)
    5318:	4903      	ldr	r1, [pc, #12]	; (5328 <pin_mode+0x114>)
    531a:	2223      	movs	r2, #35	; 0x23
    531c:	f7ff fc48 	bl	4bb0 <mbed_assert_internal>
    5320:	2000      	movs	r0, #0
    5322:	e796      	b.n	5252 <pin_mode+0x3e>
    5324:	41004400 	.word	0x41004400
    5328:	0000f330 	.word	0x0000f330
    532c:	0000f398 	.word	0x0000f398
    5330:	0000f2b4 	.word	0x0000f2b4

00005334 <pinmap_find_peripheral_from_pad.part.0>:
    5334:	b510      	push	{r4, lr}
    5336:	1c04      	adds	r4, r0, #0
    5338:	2901      	cmp	r1, #1
    533a:	d004      	beq.n	5346 <pinmap_find_peripheral_from_pad.part.0+0x12>
    533c:	1c20      	adds	r0, r4, #0
    533e:	4905      	ldr	r1, [pc, #20]	; (5354 <pinmap_find_peripheral_from_pad.part.0+0x20>)
    5340:	f7ff fc6a 	bl	4c18 <pinmap_find_peripheral>
    5344:	bd10      	pop	{r4, pc}
    5346:	4904      	ldr	r1, [pc, #16]	; (5358 <pinmap_find_peripheral_from_pad.part.0+0x24>)
    5348:	f7ff fc66 	bl	4c18 <pinmap_find_peripheral>
    534c:	1c43      	adds	r3, r0, #1
    534e:	d1f9      	bne.n	5344 <pinmap_find_peripheral_from_pad.part.0+0x10>
    5350:	e7f4      	b.n	533c <pinmap_find_peripheral_from_pad.part.0+0x8>
    5352:	46c0      	nop			; (mov r8, r8)
    5354:	0000f0c8 	.word	0x0000f0c8
    5358:	0000f044 	.word	0x0000f044

0000535c <pinmap_merge_sercom>:
    535c:	b538      	push	{r3, r4, r5, lr}
    535e:	1c0d      	adds	r5, r1, #0
    5360:	1c43      	adds	r3, r0, #1
    5362:	d01b      	beq.n	539c <pinmap_merge_sercom+0x40>
    5364:	2100      	movs	r1, #0
    5366:	f7ff ffe5 	bl	5334 <pinmap_find_peripheral_from_pad.part.0>
    536a:	1c43      	adds	r3, r0, #1
    536c:	d016      	beq.n	539c <pinmap_merge_sercom+0x40>
    536e:	240f      	movs	r4, #15
    5370:	4004      	ands	r4, r0
    5372:	1c28      	adds	r0, r5, #0
    5374:	1c6b      	adds	r3, r5, #1
    5376:	d008      	beq.n	538a <pinmap_merge_sercom+0x2e>
    5378:	2100      	movs	r1, #0
    537a:	f7ff ffdb 	bl	5334 <pinmap_find_peripheral_from_pad.part.0>
    537e:	1c43      	adds	r3, r0, #1
    5380:	d003      	beq.n	538a <pinmap_merge_sercom+0x2e>
    5382:	230f      	movs	r3, #15
    5384:	4018      	ands	r0, r3
    5386:	42a0      	cmp	r0, r4
    5388:	d006      	beq.n	5398 <pinmap_merge_sercom+0x3c>
    538a:	1c63      	adds	r3, r4, #1
    538c:	d003      	beq.n	5396 <pinmap_merge_sercom+0x3a>
    538e:	1c43      	adds	r3, r0, #1
    5390:	d002      	beq.n	5398 <pinmap_merge_sercom+0x3c>
    5392:	2001      	movs	r0, #1
    5394:	4240      	negs	r0, r0
    5396:	bd38      	pop	{r3, r4, r5, pc}
    5398:	1c20      	adds	r0, r4, #0
    539a:	e7fc      	b.n	5396 <pinmap_merge_sercom+0x3a>
    539c:	1c28      	adds	r0, r5, #0
    539e:	1c6b      	adds	r3, r5, #1
    53a0:	d0f9      	beq.n	5396 <pinmap_merge_sercom+0x3a>
    53a2:	2100      	movs	r1, #0
    53a4:	2401      	movs	r4, #1
    53a6:	f7ff ffc5 	bl	5334 <pinmap_find_peripheral_from_pad.part.0>
    53aa:	4264      	negs	r4, r4
    53ac:	1c43      	adds	r3, r0, #1
    53ae:	d1e8      	bne.n	5382 <pinmap_merge_sercom+0x26>
    53b0:	e7f1      	b.n	5396 <pinmap_merge_sercom+0x3a>
    53b2:	46c0      	nop			; (mov r8, r8)

000053b4 <pinmap_find_sercom>:
    53b4:	b5f0      	push	{r4, r5, r6, r7, lr}
    53b6:	1c0f      	adds	r7, r1, #0
    53b8:	b085      	sub	sp, #20
    53ba:	1c16      	adds	r6, r2, #0
    53bc:	1c1d      	adds	r5, r3, #0
    53be:	1c04      	adds	r4, r0, #0
    53c0:	1c43      	adds	r3, r0, #1
    53c2:	d003      	beq.n	53cc <pinmap_find_sercom+0x18>
    53c4:	2100      	movs	r1, #0
    53c6:	f7ff ffb5 	bl	5334 <pinmap_find_peripheral_from_pad.part.0>
    53ca:	1c04      	adds	r4, r0, #0
    53cc:	9400      	str	r4, [sp, #0]
    53ce:	1c38      	adds	r0, r7, #0
    53d0:	1c7b      	adds	r3, r7, #1
    53d2:	d002      	beq.n	53da <pinmap_find_sercom+0x26>
    53d4:	2100      	movs	r1, #0
    53d6:	f7ff ffad 	bl	5334 <pinmap_find_peripheral_from_pad.part.0>
    53da:	9001      	str	r0, [sp, #4]
    53dc:	1c30      	adds	r0, r6, #0
    53de:	1c73      	adds	r3, r6, #1
    53e0:	d002      	beq.n	53e8 <pinmap_find_sercom+0x34>
    53e2:	2100      	movs	r1, #0
    53e4:	f7ff ffa6 	bl	5334 <pinmap_find_peripheral_from_pad.part.0>
    53e8:	9002      	str	r0, [sp, #8]
    53ea:	1c28      	adds	r0, r5, #0
    53ec:	1c6b      	adds	r3, r5, #1
    53ee:	d002      	beq.n	53f6 <pinmap_find_sercom+0x42>
    53f0:	2100      	movs	r1, #0
    53f2:	f7ff ff9f 	bl	5334 <pinmap_find_peripheral_from_pad.part.0>
    53f6:	9003      	str	r0, [sp, #12]
    53f8:	2001      	movs	r0, #1
    53fa:	2300      	movs	r3, #0
    53fc:	4240      	negs	r0, r0
    53fe:	220f      	movs	r2, #15
    5400:	1c61      	adds	r1, r4, #1
    5402:	d004      	beq.n	540e <pinmap_find_sercom+0x5a>
    5404:	1c41      	adds	r1, r0, #1
    5406:	d00b      	beq.n	5420 <pinmap_find_sercom+0x6c>
    5408:	4014      	ands	r4, r2
    540a:	4284      	cmp	r4, r0
    540c:	d10f      	bne.n	542e <pinmap_find_sercom+0x7a>
    540e:	3304      	adds	r3, #4
    5410:	2b10      	cmp	r3, #16
    5412:	d00a      	beq.n	542a <pinmap_find_sercom+0x76>
    5414:	4669      	mov	r1, sp
    5416:	58cc      	ldr	r4, [r1, r3]
    5418:	1c61      	adds	r1, r4, #1
    541a:	d0f8      	beq.n	540e <pinmap_find_sercom+0x5a>
    541c:	1c41      	adds	r1, r0, #1
    541e:	d1f3      	bne.n	5408 <pinmap_find_sercom+0x54>
    5420:	1c20      	adds	r0, r4, #0
    5422:	3304      	adds	r3, #4
    5424:	4010      	ands	r0, r2
    5426:	2b10      	cmp	r3, #16
    5428:	d1f4      	bne.n	5414 <pinmap_find_sercom+0x60>
    542a:	b005      	add	sp, #20
    542c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    542e:	2001      	movs	r0, #1
    5430:	4240      	negs	r0, r0
    5432:	e7fa      	b.n	542a <pinmap_find_sercom+0x76>

00005434 <pinmap_function_sercom>:
    5434:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5436:	1c43      	adds	r3, r0, #1
    5438:	d004      	beq.n	5444 <pinmap_function_sercom+0x10>
    543a:	260f      	movs	r6, #15
    543c:	4031      	ands	r1, r6
    543e:	1e0d      	subs	r5, r1, #0
    5440:	2d05      	cmp	r5, #5
    5442:	d902      	bls.n	544a <pinmap_function_sercom+0x16>
    5444:	2001      	movs	r0, #1
    5446:	4240      	negs	r0, r0
    5448:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    544a:	4f0a      	ldr	r7, [pc, #40]	; (5474 <pinmap_function_sercom+0x40>)
    544c:	1c04      	adds	r4, r0, #0
    544e:	1c39      	adds	r1, r7, #0
    5450:	f7ff fbee 	bl	4c30 <pinmap_peripheral>
    5454:	4030      	ands	r0, r6
    5456:	42a8      	cmp	r0, r5
    5458:	d007      	beq.n	546a <pinmap_function_sercom+0x36>
    545a:	4f07      	ldr	r7, [pc, #28]	; (5478 <pinmap_function_sercom+0x44>)
    545c:	1c20      	adds	r0, r4, #0
    545e:	1c39      	adds	r1, r7, #0
    5460:	f7ff fbe6 	bl	4c30 <pinmap_peripheral>
    5464:	4006      	ands	r6, r0
    5466:	42ae      	cmp	r6, r5
    5468:	d1ec      	bne.n	5444 <pinmap_function_sercom+0x10>
    546a:	1c20      	adds	r0, r4, #0
    546c:	1c39      	adds	r1, r7, #0
    546e:	f7ff fbf7 	bl	4c60 <pinmap_function>
    5472:	e7e9      	b.n	5448 <pinmap_function_sercom+0x14>
    5474:	0000f0c8 	.word	0x0000f0c8
    5478:	0000f044 	.word	0x0000f044

0000547c <pinmap_pad_sercom>:
    547c:	b570      	push	{r4, r5, r6, lr}
    547e:	1c43      	adds	r3, r0, #1
    5480:	d004      	beq.n	548c <pinmap_pad_sercom+0x10>
    5482:	240f      	movs	r4, #15
    5484:	4021      	ands	r1, r4
    5486:	1e0d      	subs	r5, r1, #0
    5488:	2d05      	cmp	r5, #5
    548a:	d902      	bls.n	5492 <pinmap_pad_sercom+0x16>
    548c:	2001      	movs	r0, #1
    548e:	4240      	negs	r0, r0
    5490:	bd70      	pop	{r4, r5, r6, pc}
    5492:	4909      	ldr	r1, [pc, #36]	; (54b8 <pinmap_pad_sercom+0x3c>)
    5494:	1c06      	adds	r6, r0, #0
    5496:	f7ff fbcb 	bl	4c30 <pinmap_peripheral>
    549a:	1c23      	adds	r3, r4, #0
    549c:	4003      	ands	r3, r0
    549e:	42ab      	cmp	r3, r5
    54a0:	d007      	beq.n	54b2 <pinmap_pad_sercom+0x36>
    54a2:	1c30      	adds	r0, r6, #0
    54a4:	4905      	ldr	r1, [pc, #20]	; (54bc <pinmap_pad_sercom+0x40>)
    54a6:	f7ff fbc3 	bl	4c30 <pinmap_peripheral>
    54aa:	1c23      	adds	r3, r4, #0
    54ac:	4003      	ands	r3, r0
    54ae:	42ab      	cmp	r3, r5
    54b0:	d1ec      	bne.n	548c <pinmap_pad_sercom+0x10>
    54b2:	0900      	lsrs	r0, r0, #4
    54b4:	4020      	ands	r0, r4
    54b6:	e7eb      	b.n	5490 <pinmap_pad_sercom+0x14>
    54b8:	0000f0c8 	.word	0x0000f0c8
    54bc:	0000f044 	.word	0x0000f044

000054c0 <pinmap_peripheral_sercom>:
    54c0:	b570      	push	{r4, r5, r6, lr}
    54c2:	b086      	sub	sp, #24
    54c4:	466a      	mov	r2, sp
    54c6:	4b08      	ldr	r3, [pc, #32]	; (54e8 <pinmap_peripheral_sercom+0x28>)
    54c8:	4668      	mov	r0, sp
    54ca:	cb70      	ldmia	r3!, {r4, r5, r6}
    54cc:	c270      	stmia	r2!, {r4, r5, r6}
    54ce:	cb70      	ldmia	r3!, {r4, r5, r6}
    54d0:	c270      	stmia	r2!, {r4, r5, r6}
    54d2:	230f      	movs	r3, #15
    54d4:	4019      	ands	r1, r3
    54d6:	2905      	cmp	r1, #5
    54d8:	d903      	bls.n	54e2 <pinmap_peripheral_sercom+0x22>
    54da:	2001      	movs	r0, #1
    54dc:	4240      	negs	r0, r0
    54de:	b006      	add	sp, #24
    54e0:	bd70      	pop	{r4, r5, r6, pc}
    54e2:	0089      	lsls	r1, r1, #2
    54e4:	5808      	ldr	r0, [r1, r0]
    54e6:	e7fa      	b.n	54de <pinmap_peripheral_sercom+0x1e>
    54e8:	0000f3a0 	.word	0x0000f3a0

000054ec <us_ticker_irq_handler_internal>:
    54ec:	2203      	movs	r2, #3
    54ee:	b508      	push	{r3, lr}
    54f0:	4b02      	ldr	r3, [pc, #8]	; (54fc <us_ticker_irq_handler_internal+0x10>)
    54f2:	681b      	ldr	r3, [r3, #0]
    54f4:	739a      	strb	r2, [r3, #14]
    54f6:	f000 fc83 	bl	5e00 <us_ticker_irq_handler>
    54fa:	bd08      	pop	{r3, pc}
    54fc:	20004688 	.word	0x20004688

00005500 <us_ticker_init.part.5>:
    5500:	b530      	push	{r4, r5, lr}
    5502:	2501      	movs	r5, #1
    5504:	4b35      	ldr	r3, [pc, #212]	; (55dc <us_ticker_init.part.5+0xdc>)
    5506:	4c36      	ldr	r4, [pc, #216]	; (55e0 <us_ticker_init.part.5+0xe0>)
    5508:	601d      	str	r5, [r3, #0]
    550a:	7823      	ldrb	r3, [r4, #0]
    550c:	b08f      	sub	sp, #60	; 0x3c
    550e:	2b00      	cmp	r3, #0
    5510:	d05c      	beq.n	55cc <us_ticker_init.part.5+0xcc>
    5512:	2300      	movs	r3, #0
    5514:	2200      	movs	r2, #0
    5516:	ac01      	add	r4, sp, #4
    5518:	7422      	strb	r2, [r4, #16]
    551a:	6163      	str	r3, [r4, #20]
    551c:	61a3      	str	r3, [r4, #24]
    551e:	7722      	strb	r2, [r4, #28]
    5520:	6223      	str	r3, [r4, #32]
    5522:	6263      	str	r3, [r4, #36]	; 0x24
    5524:	2000      	movs	r0, #0
    5526:	7023      	strb	r3, [r4, #0]
    5528:	70a3      	strb	r3, [r4, #2]
    552a:	80a3      	strh	r3, [r4, #4]
    552c:	71a2      	strb	r2, [r4, #6]
    552e:	8123      	strh	r3, [r4, #8]
    5530:	7062      	strb	r2, [r4, #1]
    5532:	72a2      	strb	r2, [r4, #10]
    5534:	72e2      	strb	r2, [r4, #11]
    5536:	7322      	strb	r2, [r4, #12]
    5538:	73a2      	strb	r2, [r4, #14]
    553a:	7362      	strb	r2, [r4, #13]
    553c:	8523      	strh	r3, [r4, #40]	; 0x28
    553e:	8563      	strh	r3, [r4, #42]	; 0x2a
    5540:	85a3      	strh	r3, [r4, #44]	; 0x2c
    5542:	f7fe fd6b 	bl	401c <system_gclk_gen_get_hz>
    5546:	4927      	ldr	r1, [pc, #156]	; (55e4 <us_ticker_init.part.5+0xe4>)
    5548:	f000 feb0 	bl	62ac <__aeabi_uidiv>
    554c:	2800      	cmp	r0, #0
    554e:	d032      	beq.n	55b6 <us_ticker_init.part.5+0xb6>
    5550:	2300      	movs	r3, #0
    5552:	2801      	cmp	r0, #1
    5554:	d007      	beq.n	5566 <us_ticker_init.part.5+0x66>
    5556:	0840      	lsrs	r0, r0, #1
    5558:	3301      	adds	r3, #1
    555a:	2801      	cmp	r0, #1
    555c:	d022      	beq.n	55a4 <us_ticker_init.part.5+0xa4>
    555e:	2b0b      	cmp	r3, #11
    5560:	d1f9      	bne.n	5556 <us_ticker_init.part.5+0x56>
    5562:	23e0      	movs	r3, #224	; 0xe0
    5564:	00db      	lsls	r3, r3, #3
    5566:	80a3      	strh	r3, [r4, #4]
    5568:	2308      	movs	r3, #8
    556a:	70a3      	strb	r3, [r4, #2]
    556c:	3b07      	subs	r3, #7
    556e:	7063      	strb	r3, [r4, #1]
    5570:	2300      	movs	r3, #0
    5572:	4d1d      	ldr	r5, [pc, #116]	; (55e8 <us_ticker_init.part.5+0xe8>)
    5574:	62a3      	str	r3, [r4, #40]	; 0x28
    5576:	491d      	ldr	r1, [pc, #116]	; (55ec <us_ticker_init.part.5+0xec>)
    5578:	3b01      	subs	r3, #1
    557a:	1c22      	adds	r2, r4, #0
    557c:	1c28      	adds	r0, r5, #0
    557e:	62e3      	str	r3, [r4, #44]	; 0x2c
    5580:	f000 fcd2 	bl	5f28 <tc_init>
    5584:	491a      	ldr	r1, [pc, #104]	; (55f0 <us_ticker_init.part.5+0xf0>)
    5586:	2202      	movs	r2, #2
    5588:	1c28      	adds	r0, r5, #0
    558a:	f000 fc51 	bl	5e30 <tc_register_callback>
    558e:	217f      	movs	r1, #127	; 0x7f
    5590:	682a      	ldr	r2, [r5, #0]
    5592:	7bd3      	ldrb	r3, [r2, #15]
    5594:	438b      	bics	r3, r1
    5596:	d1fc      	bne.n	5592 <us_ticker_init.part.5+0x92>
    5598:	8811      	ldrh	r1, [r2, #0]
    559a:	3302      	adds	r3, #2
    559c:	430b      	orrs	r3, r1
    559e:	8013      	strh	r3, [r2, #0]
    55a0:	b00f      	add	sp, #60	; 0x3c
    55a2:	bd30      	pop	{r4, r5, pc}
    55a4:	2b08      	cmp	r3, #8
    55a6:	d8dc      	bhi.n	5562 <us_ticker_init.part.5+0x62>
    55a8:	2b06      	cmp	r3, #6
    55aa:	d813      	bhi.n	55d4 <us_ticker_init.part.5+0xd4>
    55ac:	2b04      	cmp	r3, #4
    55ae:	d908      	bls.n	55c2 <us_ticker_init.part.5+0xc2>
    55b0:	23a0      	movs	r3, #160	; 0xa0
    55b2:	00db      	lsls	r3, r3, #3
    55b4:	e7d7      	b.n	5566 <us_ticker_init.part.5+0x66>
    55b6:	480f      	ldr	r0, [pc, #60]	; (55f4 <us_ticker_init.part.5+0xf4>)
    55b8:	490f      	ldr	r1, [pc, #60]	; (55f8 <us_ticker_init.part.5+0xf8>)
    55ba:	2257      	movs	r2, #87	; 0x57
    55bc:	f7ff faf8 	bl	4bb0 <mbed_assert_internal>
    55c0:	2300      	movs	r3, #0
    55c2:	22e0      	movs	r2, #224	; 0xe0
    55c4:	021b      	lsls	r3, r3, #8
    55c6:	00d2      	lsls	r2, r2, #3
    55c8:	4013      	ands	r3, r2
    55ca:	e7cc      	b.n	5566 <us_ticker_init.part.5+0x66>
    55cc:	f7fe fdc2 	bl	4154 <system_init>
    55d0:	7025      	strb	r5, [r4, #0]
    55d2:	e79e      	b.n	5512 <us_ticker_init.part.5+0x12>
    55d4:	23c0      	movs	r3, #192	; 0xc0
    55d6:	00db      	lsls	r3, r3, #3
    55d8:	e7c5      	b.n	5566 <us_ticker_init.part.5+0x66>
    55da:	46c0      	nop			; (mov r8, r8)
    55dc:	200045e4 	.word	0x200045e4
    55e0:	20004498 	.word	0x20004498
    55e4:	000f4240 	.word	0x000f4240
    55e8:	20004688 	.word	0x20004688
    55ec:	42003000 	.word	0x42003000
    55f0:	000054ed 	.word	0x000054ed
    55f4:	0000f3b8 	.word	0x0000f3b8
    55f8:	0000f3cc 	.word	0x0000f3cc

000055fc <us_ticker_init>:
    55fc:	b508      	push	{r3, lr}
    55fe:	4b03      	ldr	r3, [pc, #12]	; (560c <us_ticker_init+0x10>)
    5600:	681b      	ldr	r3, [r3, #0]
    5602:	2b00      	cmp	r3, #0
    5604:	d101      	bne.n	560a <us_ticker_init+0xe>
    5606:	f7ff ff7b 	bl	5500 <us_ticker_init.part.5>
    560a:	bd08      	pop	{r3, pc}
    560c:	200045e4 	.word	0x200045e4

00005610 <us_ticker_read>:
    5610:	b508      	push	{r3, lr}
    5612:	4b05      	ldr	r3, [pc, #20]	; (5628 <us_ticker_read+0x18>)
    5614:	681b      	ldr	r3, [r3, #0]
    5616:	2b00      	cmp	r3, #0
    5618:	d101      	bne.n	561e <us_ticker_read+0xe>
    561a:	f7ff ff71 	bl	5500 <us_ticker_init.part.5>
    561e:	4803      	ldr	r0, [pc, #12]	; (562c <us_ticker_read+0x1c>)
    5620:	f000 fdd4 	bl	61cc <tc_get_count_value>
    5624:	bd08      	pop	{r3, pc}
    5626:	46c0      	nop			; (mov r8, r8)
    5628:	200045e4 	.word	0x200045e4
    562c:	20004688 	.word	0x20004688

00005630 <us_ticker_set_interrupt>:
    5630:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5632:	1c06      	adds	r6, r0, #0
    5634:	f7ff ffec 	bl	5610 <us_ticker_read>
    5638:	1a30      	subs	r0, r6, r0
    563a:	d421      	bmi.n	5680 <us_ticker_set_interrupt+0x50>
    563c:	2780      	movs	r7, #128	; 0x80
    563e:	2380      	movs	r3, #128	; 0x80
    5640:	4d11      	ldr	r5, [pc, #68]	; (5688 <us_ticker_set_interrupt+0x58>)
    5642:	033f      	lsls	r7, r7, #12
    5644:	50ef      	str	r7, [r5, r3]
    5646:	4911      	ldr	r1, [pc, #68]	; (568c <us_ticker_set_interrupt+0x5c>)
    5648:	2013      	movs	r0, #19
    564a:	f7fe f951 	bl	38f0 <NVIC_SetVector>
    564e:	4c10      	ldr	r4, [pc, #64]	; (5690 <us_ticker_set_interrupt+0x60>)
    5650:	6820      	ldr	r0, [r4, #0]
    5652:	f000 fc49 	bl	5ee8 <_tc_get_inst_index>
    5656:	221f      	movs	r2, #31
    5658:	4b0e      	ldr	r3, [pc, #56]	; (5694 <us_ticker_set_interrupt+0x64>)
    565a:	2100      	movs	r1, #0
    565c:	5c1b      	ldrb	r3, [r3, r0]
    565e:	1c20      	adds	r0, r4, #0
    5660:	4013      	ands	r3, r2
    5662:	3a1e      	subs	r2, #30
    5664:	409a      	lsls	r2, r3
    5666:	2310      	movs	r3, #16
    5668:	602a      	str	r2, [r5, #0]
    566a:	7e62      	ldrb	r2, [r4, #25]
    566c:	4313      	orrs	r3, r2
    566e:	7663      	strb	r3, [r4, #25]
    5670:	2310      	movs	r3, #16
    5672:	6822      	ldr	r2, [r4, #0]
    5674:	7353      	strb	r3, [r2, #13]
    5676:	1c32      	adds	r2, r6, #0
    5678:	f000 fdbe 	bl	61f8 <tc_set_compare_value>
    567c:	602f      	str	r7, [r5, #0]
    567e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5680:	f000 fbbe 	bl	5e00 <us_ticker_irq_handler>
    5684:	e7fb      	b.n	567e <us_ticker_set_interrupt+0x4e>
    5686:	46c0      	nop			; (mov r8, r8)
    5688:	e000e100 	.word	0xe000e100
    568c:	00005ed1 	.word	0x00005ed1
    5690:	20004688 	.word	0x20004688
    5694:	0000f43c 	.word	0x0000f43c

00005698 <us_ticker_disable_interrupt>:
    5698:	2110      	movs	r1, #16
    569a:	4b06      	ldr	r3, [pc, #24]	; (56b4 <us_ticker_disable_interrupt+0x1c>)
    569c:	681a      	ldr	r2, [r3, #0]
    569e:	7311      	strb	r1, [r2, #12]
    56a0:	7e5a      	ldrb	r2, [r3, #25]
    56a2:	438a      	bics	r2, r1
    56a4:	2180      	movs	r1, #128	; 0x80
    56a6:	765a      	strb	r2, [r3, #25]
    56a8:	2380      	movs	r3, #128	; 0x80
    56aa:	4a03      	ldr	r2, [pc, #12]	; (56b8 <us_ticker_disable_interrupt+0x20>)
    56ac:	0309      	lsls	r1, r1, #12
    56ae:	50d1      	str	r1, [r2, r3]
    56b0:	4770      	bx	lr
    56b2:	46c0      	nop			; (mov r8, r8)
    56b4:	20004688 	.word	0x20004688
    56b8:	e000e100 	.word	0xe000e100

000056bc <us_ticker_clear_interrupt>:
    56bc:	2210      	movs	r2, #16
    56be:	4b05      	ldr	r3, [pc, #20]	; (56d4 <us_ticker_clear_interrupt+0x18>)
    56c0:	2180      	movs	r1, #128	; 0x80
    56c2:	681b      	ldr	r3, [r3, #0]
    56c4:	0309      	lsls	r1, r1, #12
    56c6:	739a      	strb	r2, [r3, #14]
    56c8:	731a      	strb	r2, [r3, #12]
    56ca:	23c0      	movs	r3, #192	; 0xc0
    56cc:	4a02      	ldr	r2, [pc, #8]	; (56d8 <us_ticker_clear_interrupt+0x1c>)
    56ce:	005b      	lsls	r3, r3, #1
    56d0:	50d1      	str	r1, [r2, r3]
    56d2:	4770      	bx	lr
    56d4:	20004688 	.word	0x20004688
    56d8:	e000e100 	.word	0xe000e100

000056dc <spi_find_mux_settings>:
    56dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    56de:	1e04      	subs	r4, r0, #0
    56e0:	d03e      	beq.n	5760 <spi_find_mux_settings+0x84>
    56e2:	6820      	ldr	r0, [r4, #0]
    56e4:	f7ff fbe4 	bl	4eb0 <_sercom_get_sercom_inst_index>
    56e8:	7923      	ldrb	r3, [r4, #4]
    56ea:	1c07      	adds	r7, r0, #0
    56ec:	2b01      	cmp	r3, #1
    56ee:	d02a      	beq.n	5746 <spi_find_mux_settings+0x6a>
    56f0:	2501      	movs	r5, #1
    56f2:	2300      	movs	r3, #0
    56f4:	2005      	movs	r0, #5
    56f6:	18e3      	adds	r3, r4, r3
    56f8:	5618      	ldrsb	r0, [r3, r0]
    56fa:	1c43      	adds	r3, r0, #1
    56fc:	d00f      	beq.n	571e <spi_find_mux_settings+0x42>
    56fe:	1c39      	adds	r1, r7, #0
    5700:	f7ff febc 	bl	547c <pinmap_pad_sercom>
    5704:	1c43      	adds	r3, r0, #1
    5706:	d00a      	beq.n	571e <spi_find_mux_settings+0x42>
    5708:	26c0      	movs	r6, #192	; 0xc0
    570a:	0500      	lsls	r0, r0, #20
    570c:	03b6      	lsls	r6, r6, #14
    570e:	4006      	ands	r6, r0
    5710:	2005      	movs	r0, #5
    5712:	1965      	adds	r5, r4, r5
    5714:	5628      	ldrsb	r0, [r5, r0]
    5716:	1c43      	adds	r3, r0, #1
    5718:	d107      	bne.n	572a <spi_find_mux_settings+0x4e>
    571a:	1c30      	adds	r0, r6, #0
    571c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    571e:	2005      	movs	r0, #5
    5720:	1965      	adds	r5, r4, r5
    5722:	5628      	ldrsb	r0, [r5, r0]
    5724:	2600      	movs	r6, #0
    5726:	1c43      	adds	r3, r0, #1
    5728:	d0f7      	beq.n	571a <spi_find_mux_settings+0x3e>
    572a:	1c39      	adds	r1, r7, #0
    572c:	f7ff fea6 	bl	547c <pinmap_pad_sercom>
    5730:	1c43      	adds	r3, r0, #1
    5732:	d0f2      	beq.n	571a <spi_find_mux_settings+0x3e>
    5734:	2800      	cmp	r0, #0
    5736:	d009      	beq.n	574c <spi_find_mux_settings+0x70>
    5738:	23c0      	movs	r3, #192	; 0xc0
    573a:	3801      	subs	r0, #1
    573c:	0400      	lsls	r0, r0, #16
    573e:	029b      	lsls	r3, r3, #10
    5740:	4018      	ands	r0, r3
    5742:	4306      	orrs	r6, r0
    5744:	e7e9      	b.n	571a <spi_find_mux_settings+0x3e>
    5746:	2500      	movs	r5, #0
    5748:	2301      	movs	r3, #1
    574a:	e7d3      	b.n	56f4 <spi_find_mux_settings+0x18>
    574c:	2007      	movs	r0, #7
    574e:	1c39      	adds	r1, r7, #0
    5750:	5620      	ldrsb	r0, [r4, r0]
    5752:	f7ff fe93 	bl	547c <pinmap_pad_sercom>
    5756:	2803      	cmp	r0, #3
    5758:	d008      	beq.n	576c <spi_find_mux_settings+0x90>
    575a:	2000      	movs	r0, #0
    575c:	4306      	orrs	r6, r0
    575e:	e7dc      	b.n	571a <spi_find_mux_settings+0x3e>
    5760:	4804      	ldr	r0, [pc, #16]	; (5774 <spi_find_mux_settings+0x98>)
    5762:	4905      	ldr	r1, [pc, #20]	; (5778 <spi_find_mux_settings+0x9c>)
    5764:	22b1      	movs	r2, #177	; 0xb1
    5766:	f7ff fa23 	bl	4bb0 <mbed_assert_internal>
    576a:	e7ba      	b.n	56e2 <spi_find_mux_settings+0x6>
    576c:	20c0      	movs	r0, #192	; 0xc0
    576e:	0280      	lsls	r0, r0, #10
    5770:	4306      	orrs	r6, r0
    5772:	e7d2      	b.n	571a <spi_find_mux_settings+0x3e>
    5774:	0000ebc0 	.word	0x0000ebc0
    5778:	0000f440 	.word	0x0000f440

0000577c <spi_init>:
    577c:	b5f0      	push	{r4, r5, r6, r7, lr}
    577e:	4644      	mov	r4, r8
    5780:	465f      	mov	r7, fp
    5782:	464d      	mov	r5, r9
    5784:	4656      	mov	r6, sl
    5786:	b4f0      	push	{r4, r5, r6, r7}
    5788:	b085      	sub	sp, #20
    578a:	4698      	mov	r8, r3
    578c:	ab0e      	add	r3, sp, #56	; 0x38
    578e:	781b      	ldrb	r3, [r3, #0]
    5790:	1c04      	adds	r4, r0, #0
    5792:	b25b      	sxtb	r3, r3
    5794:	1c0d      	adds	r5, r1, #0
    5796:	4693      	mov	fp, r2
    5798:	9300      	str	r3, [sp, #0]
    579a:	2800      	cmp	r0, #0
    579c:	d100      	bne.n	57a0 <spi_init+0x24>
    579e:	e0c8      	b.n	5932 <spi_init+0x1b6>
    57a0:	4643      	mov	r3, r8
    57a2:	3301      	adds	r3, #1
    57a4:	d100      	bne.n	57a8 <spi_init+0x2c>
    57a6:	e0b8      	b.n	591a <spi_init+0x19e>
    57a8:	2300      	movs	r3, #0
    57aa:	4e6a      	ldr	r6, [pc, #424]	; (5954 <spi_init+0x1d8>)
    57ac:	aa02      	add	r2, sp, #8
    57ae:	8053      	strh	r3, [r2, #2]
    57b0:	7833      	ldrb	r3, [r6, #0]
    57b2:	2b00      	cmp	r3, #0
    57b4:	d032      	beq.n	581c <spi_init+0xa0>
    57b6:	4659      	mov	r1, fp
    57b8:	4642      	mov	r2, r8
    57ba:	9b00      	ldr	r3, [sp, #0]
    57bc:	1c28      	adds	r0, r5, #0
    57be:	f7ff fdf9 	bl	53b4 <pinmap_find_sercom>
    57c2:	4681      	mov	r9, r0
    57c4:	2001      	movs	r0, #1
    57c6:	4649      	mov	r1, r9
    57c8:	4240      	negs	r0, r0
    57ca:	f7ff fe79 	bl	54c0 <pinmap_peripheral_sercom>
    57ce:	6020      	str	r0, [r4, #0]
    57d0:	2c00      	cmp	r4, #0
    57d2:	d100      	bne.n	57d6 <spi_init+0x5a>
    57d4:	e0a7      	b.n	5926 <spi_init+0x1aa>
    57d6:	4f60      	ldr	r7, [pc, #384]	; (5958 <spi_init+0x1dc>)
    57d8:	4e60      	ldr	r6, [pc, #384]	; (595c <spi_init+0x1e0>)
    57da:	e003      	b.n	57e4 <spi_init+0x68>
    57dc:	6822      	ldr	r2, [r4, #0]
    57de:	8b53      	ldrh	r3, [r2, #26]
    57e0:	0bdb      	lsrs	r3, r3, #15
    57e2:	d00a      	beq.n	57fa <spi_init+0x7e>
    57e4:	2c00      	cmp	r4, #0
    57e6:	d1f9      	bne.n	57dc <spi_init+0x60>
    57e8:	2244      	movs	r2, #68	; 0x44
    57ea:	1c38      	adds	r0, r7, #0
    57ec:	1c31      	adds	r1, r6, #0
    57ee:	f7ff f9df 	bl	4bb0 <mbed_assert_internal>
    57f2:	6822      	ldr	r2, [r4, #0]
    57f4:	8b53      	ldrh	r3, [r2, #26]
    57f6:	0bdb      	lsrs	r3, r3, #15
    57f8:	d1f4      	bne.n	57e4 <spi_init+0x68>
    57fa:	2102      	movs	r1, #2
    57fc:	6813      	ldr	r3, [r2, #0]
    57fe:	438b      	bics	r3, r1
    5800:	6013      	str	r3, [r2, #0]
    5802:	6823      	ldr	r3, [r4, #0]
    5804:	681e      	ldr	r6, [r3, #0]
    5806:	2301      	movs	r3, #1
    5808:	469a      	mov	sl, r3
    580a:	401e      	ands	r6, r3
    580c:	d00b      	beq.n	5826 <spi_init+0xaa>
    580e:	b005      	add	sp, #20
    5810:	bc3c      	pop	{r2, r3, r4, r5}
    5812:	4690      	mov	r8, r2
    5814:	4699      	mov	r9, r3
    5816:	46a2      	mov	sl, r4
    5818:	46ab      	mov	fp, r5
    581a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    581c:	f7fe fc9a 	bl	4154 <system_init>
    5820:	2301      	movs	r3, #1
    5822:	7033      	strb	r3, [r6, #0]
    5824:	e7c7      	b.n	57b6 <spi_init+0x3a>
    5826:	464b      	mov	r3, r9
    5828:	4650      	mov	r0, sl
    582a:	3302      	adds	r3, #2
    582c:	4098      	lsls	r0, r3
    582e:	1c03      	adds	r3, r0, #0
    5830:	494b      	ldr	r1, [pc, #300]	; (5960 <spi_init+0x1e4>)
    5832:	6a0a      	ldr	r2, [r1, #32]
    5834:	4313      	orrs	r3, r2
    5836:	620b      	str	r3, [r1, #32]
    5838:	ab02      	add	r3, sp, #8
    583a:	701e      	strb	r6, [r3, #0]
    583c:	464b      	mov	r3, r9
    583e:	3314      	adds	r3, #20
    5840:	b2db      	uxtb	r3, r3
    5842:	1c1f      	adds	r7, r3, #0
    5844:	1c18      	adds	r0, r3, #0
    5846:	a902      	add	r1, sp, #8
    5848:	9301      	str	r3, [sp, #4]
    584a:	f7fe fc61 	bl	4110 <system_gclk_chan_set_config>
    584e:	1c38      	adds	r0, r7, #0
    5850:	f7fe fc20 	bl	4094 <system_gclk_chan_enable>
    5854:	2100      	movs	r1, #0
    5856:	2000      	movs	r0, #0
    5858:	f7ff fb0a 	bl	4e70 <sercom_set_gclk_generator>
    585c:	230c      	movs	r3, #12
    585e:	6822      	ldr	r2, [r4, #0]
    5860:	af03      	add	r7, sp, #12
    5862:	6811      	ldr	r1, [r2, #0]
    5864:	430b      	orrs	r3, r1
    5866:	6013      	str	r3, [r2, #0]
    5868:	4653      	mov	r3, sl
    586a:	7123      	strb	r3, [r4, #4]
    586c:	2380      	movs	r3, #128	; 0x80
    586e:	703b      	strb	r3, [r7, #0]
    5870:	4653      	mov	r3, sl
    5872:	70bb      	strb	r3, [r7, #2]
    5874:	465b      	mov	r3, fp
    5876:	71a3      	strb	r3, [r4, #6]
    5878:	4643      	mov	r3, r8
    587a:	71e3      	strb	r3, [r4, #7]
    587c:	466b      	mov	r3, sp
    587e:	781b      	ldrb	r3, [r3, #0]
    5880:	7165      	strb	r5, [r4, #5]
    5882:	7223      	strb	r3, [r4, #8]
    5884:	2309      	movs	r3, #9
    5886:	4698      	mov	r8, r3
    5888:	b26d      	sxtb	r5, r5
    588a:	707e      	strb	r6, [r7, #1]
    588c:	70fe      	strb	r6, [r7, #3]
    588e:	44a0      	add	r8, r4
    5890:	1da6      	adds	r6, r4, #6
    5892:	1c6b      	adds	r3, r5, #1
    5894:	d00b      	beq.n	58ae <spi_init+0x132>
    5896:	1c28      	adds	r0, r5, #0
    5898:	4649      	mov	r1, r9
    589a:	f7ff fdcb 	bl	5434 <pinmap_function_sercom>
    589e:	b2c0      	uxtb	r0, r0
    58a0:	7038      	strb	r0, [r7, #0]
    58a2:	28ff      	cmp	r0, #255	; 0xff
    58a4:	d003      	beq.n	58ae <spi_init+0x132>
    58a6:	b2e8      	uxtb	r0, r5
    58a8:	1c39      	adds	r1, r7, #0
    58aa:	f7fe fb27 	bl	3efc <system_pinmux_pin_set_config>
    58ae:	4546      	cmp	r6, r8
    58b0:	d006      	beq.n	58c0 <spi_init+0x144>
    58b2:	7835      	ldrb	r5, [r6, #0]
    58b4:	3601      	adds	r6, #1
    58b6:	b26d      	sxtb	r5, r5
    58b8:	1c6b      	adds	r3, r5, #1
    58ba:	d1ec      	bne.n	5896 <spi_init+0x11a>
    58bc:	4546      	cmp	r6, r8
    58be:	d1f8      	bne.n	58b2 <spi_init+0x136>
    58c0:	9801      	ldr	r0, [sp, #4]
    58c2:	f7fe fc31 	bl	4128 <system_gclk_chan_get_hz>
    58c6:	ab02      	add	r3, sp, #8
    58c8:	1c01      	adds	r1, r0, #0
    58ca:	1c9a      	adds	r2, r3, #2
    58cc:	4825      	ldr	r0, [pc, #148]	; (5964 <spi_init+0x1e8>)
    58ce:	f7ff f9f3 	bl	4cb8 <_sercom_get_sync_baud_val>
    58d2:	2800      	cmp	r0, #0
    58d4:	d19b      	bne.n	580e <spi_init+0x92>
    58d6:	ab02      	add	r3, sp, #8
    58d8:	789b      	ldrb	r3, [r3, #2]
    58da:	6822      	ldr	r2, [r4, #0]
    58dc:	1c20      	adds	r0, r4, #0
    58de:	7313      	strb	r3, [r2, #12]
    58e0:	f7ff fefc 	bl	56dc <spi_find_mux_settings>
    58e4:	2180      	movs	r1, #128	; 0x80
    58e6:	6822      	ldr	r2, [r4, #0]
    58e8:	0289      	lsls	r1, r1, #10
    58ea:	6813      	ldr	r3, [r2, #0]
    58ec:	4318      	orrs	r0, r3
    58ee:	6010      	str	r0, [r2, #0]
    58f0:	6822      	ldr	r2, [r4, #0]
    58f2:	6853      	ldr	r3, [r2, #4]
    58f4:	430b      	orrs	r3, r1
    58f6:	6053      	str	r3, [r2, #4]
    58f8:	2c00      	cmp	r4, #0
    58fa:	d025      	beq.n	5948 <spi_init+0x1cc>
    58fc:	4e16      	ldr	r6, [pc, #88]	; (5958 <spi_init+0x1dc>)
    58fe:	4d17      	ldr	r5, [pc, #92]	; (595c <spi_init+0x1e0>)
    5900:	e003      	b.n	590a <spi_init+0x18e>
    5902:	6822      	ldr	r2, [r4, #0]
    5904:	8b53      	ldrh	r3, [r2, #26]
    5906:	0bdb      	lsrs	r3, r3, #15
    5908:	d019      	beq.n	593e <spi_init+0x1c2>
    590a:	2c00      	cmp	r4, #0
    590c:	d1f9      	bne.n	5902 <spi_init+0x186>
    590e:	1c30      	adds	r0, r6, #0
    5910:	1c29      	adds	r1, r5, #0
    5912:	2244      	movs	r2, #68	; 0x44
    5914:	f7ff f94c 	bl	4bb0 <mbed_assert_internal>
    5918:	e7f3      	b.n	5902 <spi_init+0x186>
    591a:	4813      	ldr	r0, [pc, #76]	; (5968 <spi_init+0x1ec>)
    591c:	490f      	ldr	r1, [pc, #60]	; (595c <spi_init+0x1e0>)
    591e:	22f5      	movs	r2, #245	; 0xf5
    5920:	f7ff f946 	bl	4bb0 <mbed_assert_internal>
    5924:	e740      	b.n	57a8 <spi_init+0x2c>
    5926:	480c      	ldr	r0, [pc, #48]	; (5958 <spi_init+0x1dc>)
    5928:	490c      	ldr	r1, [pc, #48]	; (595c <spi_init+0x1e0>)
    592a:	225e      	movs	r2, #94	; 0x5e
    592c:	f7ff f940 	bl	4bb0 <mbed_assert_internal>
    5930:	e751      	b.n	57d6 <spi_init+0x5a>
    5932:	4809      	ldr	r0, [pc, #36]	; (5958 <spi_init+0x1dc>)
    5934:	4909      	ldr	r1, [pc, #36]	; (595c <spi_init+0x1e0>)
    5936:	22f4      	movs	r2, #244	; 0xf4
    5938:	f7ff f93a 	bl	4bb0 <mbed_assert_internal>
    593c:	e730      	b.n	57a0 <spi_init+0x24>
    593e:	6811      	ldr	r1, [r2, #0]
    5940:	3302      	adds	r3, #2
    5942:	430b      	orrs	r3, r1
    5944:	6013      	str	r3, [r2, #0]
    5946:	e762      	b.n	580e <spi_init+0x92>
    5948:	4803      	ldr	r0, [pc, #12]	; (5958 <spi_init+0x1dc>)
    594a:	4904      	ldr	r1, [pc, #16]	; (595c <spi_init+0x1e0>)
    594c:	2252      	movs	r2, #82	; 0x52
    594e:	f7ff f92f 	bl	4bb0 <mbed_assert_internal>
    5952:	e7d3      	b.n	58fc <spi_init+0x180>
    5954:	20004498 	.word	0x20004498
    5958:	0000ebc0 	.word	0x0000ebc0
    595c:	0000f440 	.word	0x0000f440
    5960:	40000400 	.word	0x40000400
    5964:	000186a0 	.word	0x000186a0
    5968:	0000f4a8 	.word	0x0000f4a8

0000596c <spi_format>:
    596c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    596e:	464f      	mov	r7, r9
    5970:	4646      	mov	r6, r8
    5972:	1c04      	adds	r4, r0, #0
    5974:	b4c0      	push	{r6, r7}
    5976:	4688      	mov	r8, r1
    5978:	1c15      	adds	r5, r2, #0
    597a:	4699      	mov	r9, r3
    597c:	2800      	cmp	r0, #0
    597e:	d100      	bne.n	5982 <spi_format+0x16>
    5980:	e08a      	b.n	5a98 <spi_format+0x12c>
    5982:	4f4f      	ldr	r7, [pc, #316]	; (5ac0 <spi_format+0x154>)
    5984:	4e4f      	ldr	r6, [pc, #316]	; (5ac4 <spi_format+0x158>)
    5986:	e006      	b.n	5996 <spi_format+0x2a>
    5988:	6822      	ldr	r2, [r4, #0]
    598a:	8b53      	ldrh	r3, [r2, #26]
    598c:	0bdb      	lsrs	r3, r3, #15
    598e:	03db      	lsls	r3, r3, #15
    5990:	b29b      	uxth	r3, r3
    5992:	2b00      	cmp	r3, #0
    5994:	d00d      	beq.n	59b2 <spi_format+0x46>
    5996:	2c00      	cmp	r4, #0
    5998:	d1f6      	bne.n	5988 <spi_format+0x1c>
    599a:	2244      	movs	r2, #68	; 0x44
    599c:	1c38      	adds	r0, r7, #0
    599e:	1c31      	adds	r1, r6, #0
    59a0:	f7ff f906 	bl	4bb0 <mbed_assert_internal>
    59a4:	6822      	ldr	r2, [r4, #0]
    59a6:	8b53      	ldrh	r3, [r2, #26]
    59a8:	0bdb      	lsrs	r3, r3, #15
    59aa:	03db      	lsls	r3, r3, #15
    59ac:	b29b      	uxth	r3, r3
    59ae:	2b00      	cmp	r3, #0
    59b0:	d1f1      	bne.n	5996 <spi_format+0x2a>
    59b2:	2002      	movs	r0, #2
    59b4:	6811      	ldr	r1, [r2, #0]
    59b6:	4381      	bics	r1, r0
    59b8:	6011      	str	r1, [r2, #0]
    59ba:	464a      	mov	r2, r9
    59bc:	2a00      	cmp	r2, #0
    59be:	d060      	beq.n	5a82 <spi_format+0x116>
    59c0:	211c      	movs	r1, #28
    59c2:	6820      	ldr	r0, [r4, #0]
    59c4:	6802      	ldr	r2, [r0, #0]
    59c6:	438a      	bics	r2, r1
    59c8:	3914      	subs	r1, #20
    59ca:	430a      	orrs	r2, r1
    59cc:	6002      	str	r2, [r0, #0]
    59ce:	6822      	ldr	r2, [r4, #0]
    59d0:	7123      	strb	r3, [r4, #4]
    59d2:	6851      	ldr	r1, [r2, #4]
    59d4:	3340      	adds	r3, #64	; 0x40
    59d6:	430b      	orrs	r3, r1
    59d8:	6053      	str	r3, [r2, #4]
    59da:	2300      	movs	r3, #0
    59dc:	4699      	mov	r9, r3
    59de:	1c27      	adds	r7, r4, #0
    59e0:	1d66      	adds	r6, r4, #5
    59e2:	3709      	adds	r7, #9
    59e4:	2000      	movs	r0, #0
    59e6:	5630      	ldrsb	r0, [r6, r0]
    59e8:	1c43      	adds	r3, r0, #1
    59ea:	d002      	beq.n	59f2 <spi_format+0x86>
    59ec:	4649      	mov	r1, r9
    59ee:	f7ff fc11 	bl	5214 <pin_mode>
    59f2:	3601      	adds	r6, #1
    59f4:	42be      	cmp	r6, r7
    59f6:	d1f5      	bne.n	59e4 <spi_format+0x78>
    59f8:	6823      	ldr	r3, [r4, #0]
    59fa:	1c20      	adds	r0, r4, #0
    59fc:	681e      	ldr	r6, [r3, #0]
    59fe:	4b32      	ldr	r3, [pc, #200]	; (5ac8 <spi_format+0x15c>)
    5a00:	401e      	ands	r6, r3
    5a02:	f7ff fe6b 	bl	56dc <spi_find_mux_settings>
    5a06:	4642      	mov	r2, r8
    5a08:	6823      	ldr	r3, [r4, #0]
    5a0a:	4306      	orrs	r6, r0
    5a0c:	601e      	str	r6, [r3, #0]
    5a0e:	6821      	ldr	r1, [r4, #0]
    5a10:	2301      	movs	r3, #1
    5a12:	2a08      	cmp	r2, #8
    5a14:	dc00      	bgt.n	5a18 <spi_format+0xac>
    5a16:	2300      	movs	r3, #0
    5a18:	2007      	movs	r0, #7
    5a1a:	684a      	ldr	r2, [r1, #4]
    5a1c:	4003      	ands	r3, r0
    5a1e:	4382      	bics	r2, r0
    5a20:	4313      	orrs	r3, r2
    5a22:	604b      	str	r3, [r1, #4]
    5a24:	2301      	movs	r3, #1
    5a26:	1c1a      	adds	r2, r3, #0
    5a28:	6820      	ldr	r0, [r4, #0]
    5a2a:	402a      	ands	r2, r5
    5a2c:	6806      	ldr	r6, [r0, #0]
    5a2e:	0711      	lsls	r1, r2, #28
    5a30:	4a26      	ldr	r2, [pc, #152]	; (5acc <spi_format+0x160>)
    5a32:	086d      	lsrs	r5, r5, #1
    5a34:	4032      	ands	r2, r6
    5a36:	430a      	orrs	r2, r1
    5a38:	6002      	str	r2, [r0, #0]
    5a3a:	6821      	ldr	r1, [r4, #0]
    5a3c:	401d      	ands	r5, r3
    5a3e:	076b      	lsls	r3, r5, #29
    5a40:	4a23      	ldr	r2, [pc, #140]	; (5ad0 <spi_format+0x164>)
    5a42:	680d      	ldr	r5, [r1, #0]
    5a44:	4015      	ands	r5, r2
    5a46:	431d      	orrs	r5, r3
    5a48:	600d      	str	r5, [r1, #0]
    5a4a:	2c00      	cmp	r4, #0
    5a4c:	d032      	beq.n	5ab4 <spi_format+0x148>
    5a4e:	4e1c      	ldr	r6, [pc, #112]	; (5ac0 <spi_format+0x154>)
    5a50:	4d1c      	ldr	r5, [pc, #112]	; (5ac4 <spi_format+0x158>)
    5a52:	e003      	b.n	5a5c <spi_format+0xf0>
    5a54:	6822      	ldr	r2, [r4, #0]
    5a56:	8b53      	ldrh	r3, [r2, #26]
    5a58:	0bdb      	lsrs	r3, r3, #15
    5a5a:	d00a      	beq.n	5a72 <spi_format+0x106>
    5a5c:	2c00      	cmp	r4, #0
    5a5e:	d1f9      	bne.n	5a54 <spi_format+0xe8>
    5a60:	2244      	movs	r2, #68	; 0x44
    5a62:	1c30      	adds	r0, r6, #0
    5a64:	1c29      	adds	r1, r5, #0
    5a66:	f7ff f8a3 	bl	4bb0 <mbed_assert_internal>
    5a6a:	6822      	ldr	r2, [r4, #0]
    5a6c:	8b53      	ldrh	r3, [r2, #26]
    5a6e:	0bdb      	lsrs	r3, r3, #15
    5a70:	d1f4      	bne.n	5a5c <spi_format+0xf0>
    5a72:	6811      	ldr	r1, [r2, #0]
    5a74:	3302      	adds	r3, #2
    5a76:	430b      	orrs	r3, r1
    5a78:	6013      	str	r3, [r2, #0]
    5a7a:	bc0c      	pop	{r2, r3}
    5a7c:	4690      	mov	r8, r2
    5a7e:	4699      	mov	r9, r3
    5a80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5a82:	221c      	movs	r2, #28
    5a84:	6821      	ldr	r1, [r4, #0]
    5a86:	680b      	ldr	r3, [r1, #0]
    5a88:	4393      	bics	r3, r2
    5a8a:	3a10      	subs	r2, #16
    5a8c:	4313      	orrs	r3, r2
    5a8e:	600b      	str	r3, [r1, #0]
    5a90:	2301      	movs	r3, #1
    5a92:	7123      	strb	r3, [r4, #4]
    5a94:	4699      	mov	r9, r3
    5a96:	e7a2      	b.n	59de <spi_format+0x72>
    5a98:	2296      	movs	r2, #150	; 0x96
    5a9a:	4f09      	ldr	r7, [pc, #36]	; (5ac0 <spi_format+0x154>)
    5a9c:	4e09      	ldr	r6, [pc, #36]	; (5ac4 <spi_format+0x158>)
    5a9e:	1c38      	adds	r0, r7, #0
    5aa0:	1c31      	adds	r1, r6, #0
    5aa2:	32ff      	adds	r2, #255	; 0xff
    5aa4:	f7ff f884 	bl	4bb0 <mbed_assert_internal>
    5aa8:	1c38      	adds	r0, r7, #0
    5aaa:	1c31      	adds	r1, r6, #0
    5aac:	225e      	movs	r2, #94	; 0x5e
    5aae:	f7ff f87f 	bl	4bb0 <mbed_assert_internal>
    5ab2:	e766      	b.n	5982 <spi_format+0x16>
    5ab4:	4802      	ldr	r0, [pc, #8]	; (5ac0 <spi_format+0x154>)
    5ab6:	4903      	ldr	r1, [pc, #12]	; (5ac4 <spi_format+0x158>)
    5ab8:	2252      	movs	r2, #82	; 0x52
    5aba:	f7ff f879 	bl	4bb0 <mbed_assert_internal>
    5abe:	e7c6      	b.n	5a4e <spi_format+0xe2>
    5ac0:	0000ebc0 	.word	0x0000ebc0
    5ac4:	0000f440 	.word	0x0000f440
    5ac8:	ffccffff 	.word	0xffccffff
    5acc:	efffffff 	.word	0xefffffff
    5ad0:	dfffffff 	.word	0xdfffffff

00005ad4 <spi_frequency>:
    5ad4:	b5f0      	push	{r4, r5, r6, r7, lr}
    5ad6:	b083      	sub	sp, #12
    5ad8:	2300      	movs	r3, #0
    5ada:	466a      	mov	r2, sp
    5adc:	1c04      	adds	r4, r0, #0
    5ade:	1c0d      	adds	r5, r1, #0
    5ae0:	80d3      	strh	r3, [r2, #6]
    5ae2:	2800      	cmp	r0, #0
    5ae4:	d053      	beq.n	5b8e <spi_frequency+0xba>
    5ae6:	4f37      	ldr	r7, [pc, #220]	; (5bc4 <spi_frequency+0xf0>)
    5ae8:	4e37      	ldr	r6, [pc, #220]	; (5bc8 <spi_frequency+0xf4>)
    5aea:	e003      	b.n	5af4 <spi_frequency+0x20>
    5aec:	6822      	ldr	r2, [r4, #0]
    5aee:	8b53      	ldrh	r3, [r2, #26]
    5af0:	0bdb      	lsrs	r3, r3, #15
    5af2:	d00a      	beq.n	5b0a <spi_frequency+0x36>
    5af4:	2c00      	cmp	r4, #0
    5af6:	d1f9      	bne.n	5aec <spi_frequency+0x18>
    5af8:	2244      	movs	r2, #68	; 0x44
    5afa:	1c38      	adds	r0, r7, #0
    5afc:	1c31      	adds	r1, r6, #0
    5afe:	f7ff f857 	bl	4bb0 <mbed_assert_internal>
    5b02:	6822      	ldr	r2, [r4, #0]
    5b04:	8b53      	ldrh	r3, [r2, #26]
    5b06:	0bdb      	lsrs	r3, r3, #15
    5b08:	d1f4      	bne.n	5af4 <spi_frequency+0x20>
    5b0a:	2102      	movs	r1, #2
    5b0c:	6813      	ldr	r3, [r2, #0]
    5b0e:	438b      	bics	r3, r1
    5b10:	6013      	str	r3, [r2, #0]
    5b12:	6820      	ldr	r0, [r4, #0]
    5b14:	f7ff f9cc 	bl	4eb0 <_sercom_get_sercom_inst_index>
    5b18:	3014      	adds	r0, #20
    5b1a:	b2c0      	uxtb	r0, r0
    5b1c:	f7fe fb04 	bl	4128 <system_gclk_chan_get_hz>
    5b20:	466b      	mov	r3, sp
    5b22:	1c01      	adds	r1, r0, #0
    5b24:	1d9a      	adds	r2, r3, #6
    5b26:	1c28      	adds	r0, r5, #0
    5b28:	f7ff f8c6 	bl	4cb8 <_sercom_get_sync_baud_val>
    5b2c:	2800      	cmp	r0, #0
    5b2e:	d11d      	bne.n	5b6c <spi_frequency+0x98>
    5b30:	466b      	mov	r3, sp
    5b32:	6822      	ldr	r2, [r4, #0]
    5b34:	799b      	ldrb	r3, [r3, #6]
    5b36:	7313      	strb	r3, [r2, #12]
    5b38:	2c00      	cmp	r4, #0
    5b3a:	d036      	beq.n	5baa <spi_frequency+0xd6>
    5b3c:	4e21      	ldr	r6, [pc, #132]	; (5bc4 <spi_frequency+0xf0>)
    5b3e:	4d22      	ldr	r5, [pc, #136]	; (5bc8 <spi_frequency+0xf4>)
    5b40:	e003      	b.n	5b4a <spi_frequency+0x76>
    5b42:	6822      	ldr	r2, [r4, #0]
    5b44:	8b53      	ldrh	r3, [r2, #26]
    5b46:	0bdb      	lsrs	r3, r3, #15
    5b48:	d00a      	beq.n	5b60 <spi_frequency+0x8c>
    5b4a:	2c00      	cmp	r4, #0
    5b4c:	d1f9      	bne.n	5b42 <spi_frequency+0x6e>
    5b4e:	2244      	movs	r2, #68	; 0x44
    5b50:	1c30      	adds	r0, r6, #0
    5b52:	1c29      	adds	r1, r5, #0
    5b54:	f7ff f82c 	bl	4bb0 <mbed_assert_internal>
    5b58:	6822      	ldr	r2, [r4, #0]
    5b5a:	8b53      	ldrh	r3, [r2, #26]
    5b5c:	0bdb      	lsrs	r3, r3, #15
    5b5e:	d1f4      	bne.n	5b4a <spi_frequency+0x76>
    5b60:	6811      	ldr	r1, [r2, #0]
    5b62:	3302      	adds	r3, #2
    5b64:	430b      	orrs	r3, r1
    5b66:	6013      	str	r3, [r2, #0]
    5b68:	b003      	add	sp, #12
    5b6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5b6c:	2c00      	cmp	r4, #0
    5b6e:	d022      	beq.n	5bb6 <spi_frequency+0xe2>
    5b70:	4e14      	ldr	r6, [pc, #80]	; (5bc4 <spi_frequency+0xf0>)
    5b72:	4d15      	ldr	r5, [pc, #84]	; (5bc8 <spi_frequency+0xf4>)
    5b74:	e003      	b.n	5b7e <spi_frequency+0xaa>
    5b76:	6822      	ldr	r2, [r4, #0]
    5b78:	8b53      	ldrh	r3, [r2, #26]
    5b7a:	0bdb      	lsrs	r3, r3, #15
    5b7c:	d0f0      	beq.n	5b60 <spi_frequency+0x8c>
    5b7e:	2c00      	cmp	r4, #0
    5b80:	d1f9      	bne.n	5b76 <spi_frequency+0xa2>
    5b82:	1c30      	adds	r0, r6, #0
    5b84:	1c29      	adds	r1, r5, #0
    5b86:	2244      	movs	r2, #68	; 0x44
    5b88:	f7ff f812 	bl	4bb0 <mbed_assert_internal>
    5b8c:	e7f3      	b.n	5b76 <spi_frequency+0xa2>
    5b8e:	22d0      	movs	r2, #208	; 0xd0
    5b90:	4f0c      	ldr	r7, [pc, #48]	; (5bc4 <spi_frequency+0xf0>)
    5b92:	4e0d      	ldr	r6, [pc, #52]	; (5bc8 <spi_frequency+0xf4>)
    5b94:	1c38      	adds	r0, r7, #0
    5b96:	1c31      	adds	r1, r6, #0
    5b98:	32ff      	adds	r2, #255	; 0xff
    5b9a:	f7ff f809 	bl	4bb0 <mbed_assert_internal>
    5b9e:	1c38      	adds	r0, r7, #0
    5ba0:	1c31      	adds	r1, r6, #0
    5ba2:	225e      	movs	r2, #94	; 0x5e
    5ba4:	f7ff f804 	bl	4bb0 <mbed_assert_internal>
    5ba8:	e79d      	b.n	5ae6 <spi_frequency+0x12>
    5baa:	4806      	ldr	r0, [pc, #24]	; (5bc4 <spi_frequency+0xf0>)
    5bac:	4906      	ldr	r1, [pc, #24]	; (5bc8 <spi_frequency+0xf4>)
    5bae:	2252      	movs	r2, #82	; 0x52
    5bb0:	f7fe fffe 	bl	4bb0 <mbed_assert_internal>
    5bb4:	e7c2      	b.n	5b3c <spi_frequency+0x68>
    5bb6:	4803      	ldr	r0, [pc, #12]	; (5bc4 <spi_frequency+0xf0>)
    5bb8:	4903      	ldr	r1, [pc, #12]	; (5bc8 <spi_frequency+0xf4>)
    5bba:	2252      	movs	r2, #82	; 0x52
    5bbc:	f7fe fff8 	bl	4bb0 <mbed_assert_internal>
    5bc0:	e7d6      	b.n	5b70 <spi_frequency+0x9c>
    5bc2:	46c0      	nop			; (mov r8, r8)
    5bc4:	0000ebc0 	.word	0x0000ebc0
    5bc8:	0000f440 	.word	0x0000f440

00005bcc <spi_master_write>:
    5bcc:	b5f0      	push	{r4, r5, r6, r7, lr}
    5bce:	4647      	mov	r7, r8
    5bd0:	1c04      	adds	r4, r0, #0
    5bd2:	b480      	push	{r7}
    5bd4:	1c0e      	adds	r6, r1, #0
    5bd6:	2800      	cmp	r0, #0
    5bd8:	d052      	beq.n	5c80 <spi_master_write+0xb4>
    5bda:	7a63      	ldrb	r3, [r4, #9]
    5bdc:	2b05      	cmp	r3, #5
    5bde:	d045      	beq.n	5c6c <spi_master_write+0xa0>
    5be0:	4b3a      	ldr	r3, [pc, #232]	; (5ccc <spi_master_write+0x100>)
    5be2:	4f3b      	ldr	r7, [pc, #236]	; (5cd0 <spi_master_write+0x104>)
    5be4:	4698      	mov	r8, r3
    5be6:	2501      	movs	r5, #1
    5be8:	e003      	b.n	5bf2 <spi_master_write+0x26>
    5bea:	6823      	ldr	r3, [r4, #0]
    5bec:	7e1a      	ldrb	r2, [r3, #24]
    5bee:	4215      	tst	r5, r2
    5bf0:	d10a      	bne.n	5c08 <spi_master_write+0x3c>
    5bf2:	2c00      	cmp	r4, #0
    5bf4:	d1f9      	bne.n	5bea <spi_master_write+0x1e>
    5bf6:	2273      	movs	r2, #115	; 0x73
    5bf8:	4640      	mov	r0, r8
    5bfa:	1c39      	adds	r1, r7, #0
    5bfc:	f7fe ffd8 	bl	4bb0 <mbed_assert_internal>
    5c00:	6823      	ldr	r3, [r4, #0]
    5c02:	7e1a      	ldrb	r2, [r3, #24]
    5c04:	4215      	tst	r5, r2
    5c06:	d0f4      	beq.n	5bf2 <spi_master_write+0x26>
    5c08:	2c00      	cmp	r4, #0
    5c0a:	d043      	beq.n	5c94 <spi_master_write+0xc8>
    5c0c:	7e1a      	ldrb	r2, [r3, #24]
    5c0e:	07d2      	lsls	r2, r2, #31
    5c10:	d503      	bpl.n	5c1a <spi_master_write+0x4e>
    5c12:	05f6      	lsls	r6, r6, #23
    5c14:	0df6      	lsrs	r6, r6, #23
    5c16:	629e      	str	r6, [r3, #40]	; 0x28
    5c18:	6823      	ldr	r3, [r4, #0]
    5c1a:	685b      	ldr	r3, [r3, #4]
    5c1c:	039b      	lsls	r3, r3, #14
    5c1e:	d525      	bpl.n	5c6c <spi_master_write+0xa0>
    5c20:	4f2a      	ldr	r7, [pc, #168]	; (5ccc <spi_master_write+0x100>)
    5c22:	4e2b      	ldr	r6, [pc, #172]	; (5cd0 <spi_master_write+0x104>)
    5c24:	2504      	movs	r5, #4
    5c26:	e003      	b.n	5c30 <spi_master_write+0x64>
    5c28:	6823      	ldr	r3, [r4, #0]
    5c2a:	7e1a      	ldrb	r2, [r3, #24]
    5c2c:	4215      	tst	r5, r2
    5c2e:	d10a      	bne.n	5c46 <spi_master_write+0x7a>
    5c30:	2c00      	cmp	r4, #0
    5c32:	d1f9      	bne.n	5c28 <spi_master_write+0x5c>
    5c34:	227c      	movs	r2, #124	; 0x7c
    5c36:	1c38      	adds	r0, r7, #0
    5c38:	1c31      	adds	r1, r6, #0
    5c3a:	f7fe ffb9 	bl	4bb0 <mbed_assert_internal>
    5c3e:	6823      	ldr	r3, [r4, #0]
    5c40:	7e1a      	ldrb	r2, [r3, #24]
    5c42:	4215      	tst	r5, r2
    5c44:	d0f4      	beq.n	5c30 <spi_master_write+0x64>
    5c46:	2c00      	cmp	r4, #0
    5c48:	d032      	beq.n	5cb0 <spi_master_write+0xe4>
    5c4a:	2204      	movs	r2, #4
    5c4c:	7e19      	ldrb	r1, [r3, #24]
    5c4e:	2000      	movs	r0, #0
    5c50:	420a      	tst	r2, r1
    5c52:	d00c      	beq.n	5c6e <spi_master_write+0xa2>
    5c54:	8b59      	ldrh	r1, [r3, #26]
    5c56:	420a      	tst	r2, r1
    5c58:	d10c      	bne.n	5c74 <spi_master_write+0xa8>
    5c5a:	2107      	movs	r1, #7
    5c5c:	685a      	ldr	r2, [r3, #4]
    5c5e:	400a      	ands	r2, r1
    5c60:	2a01      	cmp	r2, #1
    5c62:	d013      	beq.n	5c8c <spi_master_write+0xc0>
    5c64:	20ff      	movs	r0, #255	; 0xff
    5c66:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    5c68:	4018      	ands	r0, r3
    5c6a:	e000      	b.n	5c6e <spi_master_write+0xa2>
    5c6c:	2000      	movs	r0, #0
    5c6e:	bc04      	pop	{r2}
    5c70:	4690      	mov	r8, r2
    5c72:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5c74:	8b59      	ldrh	r1, [r3, #26]
    5c76:	430a      	orrs	r2, r1
    5c78:	b292      	uxth	r2, r2
    5c7a:	835a      	strh	r2, [r3, #26]
    5c7c:	6823      	ldr	r3, [r4, #0]
    5c7e:	e7ec      	b.n	5c5a <spi_master_write+0x8e>
    5c80:	4812      	ldr	r0, [pc, #72]	; (5ccc <spi_master_write+0x100>)
    5c82:	4913      	ldr	r1, [pc, #76]	; (5cd0 <spi_master_write+0x104>)
    5c84:	4a13      	ldr	r2, [pc, #76]	; (5cd4 <spi_master_write+0x108>)
    5c86:	f7fe ff93 	bl	4bb0 <mbed_assert_internal>
    5c8a:	e7a6      	b.n	5bda <spi_master_write+0xe>
    5c8c:	6a98      	ldr	r0, [r3, #40]	; 0x28
    5c8e:	05c0      	lsls	r0, r0, #23
    5c90:	0dc0      	lsrs	r0, r0, #23
    5c92:	e7ec      	b.n	5c6e <spi_master_write+0xa2>
    5c94:	4f0d      	ldr	r7, [pc, #52]	; (5ccc <spi_master_write+0x100>)
    5c96:	4d0e      	ldr	r5, [pc, #56]	; (5cd0 <spi_master_write+0x104>)
    5c98:	1c38      	adds	r0, r7, #0
    5c9a:	1c29      	adds	r1, r5, #0
    5c9c:	2285      	movs	r2, #133	; 0x85
    5c9e:	f7fe ff87 	bl	4bb0 <mbed_assert_internal>
    5ca2:	1c38      	adds	r0, r7, #0
    5ca4:	1c29      	adds	r1, r5, #0
    5ca6:	2273      	movs	r2, #115	; 0x73
    5ca8:	f7fe ff82 	bl	4bb0 <mbed_assert_internal>
    5cac:	6823      	ldr	r3, [r4, #0]
    5cae:	e7ad      	b.n	5c0c <spi_master_write+0x40>
    5cb0:	4e06      	ldr	r6, [pc, #24]	; (5ccc <spi_master_write+0x100>)
    5cb2:	4d07      	ldr	r5, [pc, #28]	; (5cd0 <spi_master_write+0x104>)
    5cb4:	1c30      	adds	r0, r6, #0
    5cb6:	1c29      	adds	r1, r5, #0
    5cb8:	2296      	movs	r2, #150	; 0x96
    5cba:	f7fe ff79 	bl	4bb0 <mbed_assert_internal>
    5cbe:	1c30      	adds	r0, r6, #0
    5cc0:	1c29      	adds	r1, r5, #0
    5cc2:	227c      	movs	r2, #124	; 0x7c
    5cc4:	f7fe ff74 	bl	4bb0 <mbed_assert_internal>
    5cc8:	6823      	ldr	r3, [r4, #0]
    5cca:	e7be      	b.n	5c4a <spi_master_write+0x7e>
    5ccc:	0000ebc0 	.word	0x0000ebc0
    5cd0:	0000f440 	.word	0x0000f440
    5cd4:	00000212 	.word	0x00000212

00005cd8 <_ZN4mbed8FileBaseD1Ev>:
    5cd8:	4b0a      	ldr	r3, [pc, #40]	; (5d04 <_ZN4mbed8FileBaseD1Ev+0x2c>)
    5cda:	3308      	adds	r3, #8
    5cdc:	6003      	str	r3, [r0, #0]
    5cde:	6883      	ldr	r3, [r0, #8]
    5ce0:	2b00      	cmp	r3, #0
    5ce2:	d00a      	beq.n	5cfa <_ZN4mbed8FileBaseD1Ev+0x22>
    5ce4:	4b08      	ldr	r3, [pc, #32]	; (5d08 <_ZN4mbed8FileBaseD1Ev+0x30>)
    5ce6:	681a      	ldr	r2, [r3, #0]
    5ce8:	4282      	cmp	r2, r0
    5cea:	d101      	bne.n	5cf0 <_ZN4mbed8FileBaseD1Ev+0x18>
    5cec:	e006      	b.n	5cfc <_ZN4mbed8FileBaseD1Ev+0x24>
    5cee:	1c1a      	adds	r2, r3, #0
    5cf0:	6853      	ldr	r3, [r2, #4]
    5cf2:	4283      	cmp	r3, r0
    5cf4:	d1fb      	bne.n	5cee <_ZN4mbed8FileBaseD1Ev+0x16>
    5cf6:	6843      	ldr	r3, [r0, #4]
    5cf8:	6053      	str	r3, [r2, #4]
    5cfa:	4770      	bx	lr
    5cfc:	6842      	ldr	r2, [r0, #4]
    5cfe:	601a      	str	r2, [r3, #0]
    5d00:	e7fb      	b.n	5cfa <_ZN4mbed8FileBaseD1Ev+0x22>
    5d02:	46c0      	nop			; (mov r8, r8)
    5d04:	0000f4b8 	.word	0x0000f4b8
    5d08:	200045e8 	.word	0x200045e8

00005d0c <_ZN4mbed8FileBaseD0Ev>:
    5d0c:	4b0d      	ldr	r3, [pc, #52]	; (5d44 <_ZN4mbed8FileBaseD0Ev+0x38>)
    5d0e:	b510      	push	{r4, lr}
    5d10:	3308      	adds	r3, #8
    5d12:	6003      	str	r3, [r0, #0]
    5d14:	6883      	ldr	r3, [r0, #8]
    5d16:	1c04      	adds	r4, r0, #0
    5d18:	2b00      	cmp	r3, #0
    5d1a:	d00a      	beq.n	5d32 <_ZN4mbed8FileBaseD0Ev+0x26>
    5d1c:	4b0a      	ldr	r3, [pc, #40]	; (5d48 <_ZN4mbed8FileBaseD0Ev+0x3c>)
    5d1e:	681a      	ldr	r2, [r3, #0]
    5d20:	4290      	cmp	r0, r2
    5d22:	d101      	bne.n	5d28 <_ZN4mbed8FileBaseD0Ev+0x1c>
    5d24:	e00a      	b.n	5d3c <_ZN4mbed8FileBaseD0Ev+0x30>
    5d26:	1c1a      	adds	r2, r3, #0
    5d28:	6853      	ldr	r3, [r2, #4]
    5d2a:	429c      	cmp	r4, r3
    5d2c:	d1fb      	bne.n	5d26 <_ZN4mbed8FileBaseD0Ev+0x1a>
    5d2e:	6863      	ldr	r3, [r4, #4]
    5d30:	6053      	str	r3, [r2, #4]
    5d32:	1c20      	adds	r0, r4, #0
    5d34:	f000 fab5 	bl	62a2 <_ZdlPv>
    5d38:	1c20      	adds	r0, r4, #0
    5d3a:	bd10      	pop	{r4, pc}
    5d3c:	6842      	ldr	r2, [r0, #4]
    5d3e:	601a      	str	r2, [r3, #0]
    5d40:	e7f7      	b.n	5d32 <_ZN4mbed8FileBaseD0Ev+0x26>
    5d42:	46c0      	nop			; (mov r8, r8)
    5d44:	0000f4b8 	.word	0x0000f4b8
    5d48:	200045e8 	.word	0x200045e8

00005d4c <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE>:
    5d4c:	4b06      	ldr	r3, [pc, #24]	; (5d68 <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE+0x1c>)
    5d4e:	6081      	str	r1, [r0, #8]
    5d50:	3308      	adds	r3, #8
    5d52:	6003      	str	r3, [r0, #0]
    5d54:	2300      	movs	r3, #0
    5d56:	7302      	strb	r2, [r0, #12]
    5d58:	6043      	str	r3, [r0, #4]
    5d5a:	2900      	cmp	r1, #0
    5d5c:	d003      	beq.n	5d66 <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE+0x1a>
    5d5e:	4b03      	ldr	r3, [pc, #12]	; (5d6c <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE+0x20>)
    5d60:	681a      	ldr	r2, [r3, #0]
    5d62:	6018      	str	r0, [r3, #0]
    5d64:	6042      	str	r2, [r0, #4]
    5d66:	4770      	bx	lr
    5d68:	0000f4b8 	.word	0x0000f4b8
    5d6c:	200045e8 	.word	0x200045e8

00005d70 <_ZN4mbed8FileBase6lookupEPKcj>:
    5d70:	4b0e      	ldr	r3, [pc, #56]	; (5dac <_ZN4mbed8FileBase6lookupEPKcj+0x3c>)
    5d72:	b570      	push	{r4, r5, r6, lr}
    5d74:	681c      	ldr	r4, [r3, #0]
    5d76:	1c06      	adds	r6, r0, #0
    5d78:	1c0d      	adds	r5, r1, #0
    5d7a:	2c00      	cmp	r4, #0
    5d7c:	d103      	bne.n	5d86 <_ZN4mbed8FileBase6lookupEPKcj+0x16>
    5d7e:	e012      	b.n	5da6 <_ZN4mbed8FileBase6lookupEPKcj+0x36>
    5d80:	6864      	ldr	r4, [r4, #4]
    5d82:	2c00      	cmp	r4, #0
    5d84:	d00f      	beq.n	5da6 <_ZN4mbed8FileBase6lookupEPKcj+0x36>
    5d86:	68a0      	ldr	r0, [r4, #8]
    5d88:	2800      	cmp	r0, #0
    5d8a:	d0f9      	beq.n	5d80 <_ZN4mbed8FileBase6lookupEPKcj+0x10>
    5d8c:	1c31      	adds	r1, r6, #0
    5d8e:	1c2a      	adds	r2, r5, #0
    5d90:	f005 fa25 	bl	b1de <strncmp>
    5d94:	2800      	cmp	r0, #0
    5d96:	d1f3      	bne.n	5d80 <_ZN4mbed8FileBase6lookupEPKcj+0x10>
    5d98:	68a0      	ldr	r0, [r4, #8]
    5d9a:	f005 fa19 	bl	b1d0 <strlen>
    5d9e:	42a8      	cmp	r0, r5
    5da0:	d1ee      	bne.n	5d80 <_ZN4mbed8FileBase6lookupEPKcj+0x10>
    5da2:	1c20      	adds	r0, r4, #0
    5da4:	e000      	b.n	5da8 <_ZN4mbed8FileBase6lookupEPKcj+0x38>
    5da6:	2000      	movs	r0, #0
    5da8:	bd70      	pop	{r4, r5, r6, pc}
    5daa:	46c0      	nop			; (mov r8, r8)
    5dac:	200045e8 	.word	0x200045e8

00005db0 <_ZN4mbed8FileBase11getPathTypeEv>:
    5db0:	7b00      	ldrb	r0, [r0, #12]
    5db2:	4770      	bx	lr

00005db4 <_ZN4mbed8FileLikeC1EPKc>:
    5db4:	4b07      	ldr	r3, [pc, #28]	; (5dd4 <_ZN4mbed8FileLikeC1EPKc+0x20>)
    5db6:	b510      	push	{r4, lr}
    5db8:	2200      	movs	r2, #0
    5dba:	1c04      	adds	r4, r0, #0
    5dbc:	c008      	stmia	r0!, {r3}
    5dbe:	f7ff ffc5 	bl	5d4c <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE>
    5dc2:	4b05      	ldr	r3, [pc, #20]	; (5dd8 <_ZN4mbed8FileLikeC1EPKc+0x24>)
    5dc4:	1c20      	adds	r0, r4, #0
    5dc6:	1c1a      	adds	r2, r3, #0
    5dc8:	3334      	adds	r3, #52	; 0x34
    5dca:	3208      	adds	r2, #8
    5dcc:	6022      	str	r2, [r4, #0]
    5dce:	6063      	str	r3, [r4, #4]
    5dd0:	bd10      	pop	{r4, pc}
    5dd2:	46c0      	nop			; (mov r8, r8)
    5dd4:	0000eb80 	.word	0x0000eb80
    5dd8:	0000f4c8 	.word	0x0000f4c8

00005ddc <_ZN4mbed8FileLikeD1Ev>:
    5ddc:	4b07      	ldr	r3, [pc, #28]	; (5dfc <_ZN4mbed8FileLikeD1Ev+0x20>)
    5dde:	b510      	push	{r4, lr}
    5de0:	1c1a      	adds	r2, r3, #0
    5de2:	1c04      	adds	r4, r0, #0
    5de4:	3208      	adds	r2, #8
    5de6:	3334      	adds	r3, #52	; 0x34
    5de8:	6002      	str	r2, [r0, #0]
    5dea:	6043      	str	r3, [r0, #4]
    5dec:	3004      	adds	r0, #4
    5dee:	f7ff ff73 	bl	5cd8 <_ZN4mbed8FileBaseD1Ev>
    5df2:	1c20      	adds	r0, r4, #0
    5df4:	f7fd fdc6 	bl	3984 <_ZN4mbed10FileHandleD1Ev>
    5df8:	1c20      	adds	r0, r4, #0
    5dfa:	bd10      	pop	{r4, pc}
    5dfc:	0000f4c8 	.word	0x0000f4c8

00005e00 <us_ticker_irq_handler>:
    5e00:	b508      	push	{r3, lr}
    5e02:	4802      	ldr	r0, [pc, #8]	; (5e0c <us_ticker_irq_handler+0xc>)
    5e04:	f000 fa20 	bl	6248 <ticker_irq_handler>
    5e08:	bd08      	pop	{r3, pc}
    5e0a:	46c0      	nop			; (mov r8, r8)
    5e0c:	0000f518 	.word	0x0000f518

00005e10 <port_pin_set_config>:
    5e10:	2280      	movs	r2, #128	; 0x80
    5e12:	b500      	push	{lr}
    5e14:	b083      	sub	sp, #12
    5e16:	ab01      	add	r3, sp, #4
    5e18:	701a      	strb	r2, [r3, #0]
    5e1a:	780a      	ldrb	r2, [r1, #0]
    5e1c:	705a      	strb	r2, [r3, #1]
    5e1e:	784a      	ldrb	r2, [r1, #1]
    5e20:	709a      	strb	r2, [r3, #2]
    5e22:	788a      	ldrb	r2, [r1, #2]
    5e24:	1c19      	adds	r1, r3, #0
    5e26:	70da      	strb	r2, [r3, #3]
    5e28:	f7fe f868 	bl	3efc <system_pinmux_pin_set_config>
    5e2c:	b003      	add	sp, #12
    5e2e:	bd00      	pop	{pc}

00005e30 <tc_register_callback>:
    5e30:	1c93      	adds	r3, r2, #2
    5e32:	009b      	lsls	r3, r3, #2
    5e34:	5019      	str	r1, [r3, r0]
    5e36:	2a02      	cmp	r2, #2
    5e38:	d009      	beq.n	5e4e <tc_register_callback+0x1e>
    5e3a:	2a03      	cmp	r2, #3
    5e3c:	d00c      	beq.n	5e58 <tc_register_callback+0x28>
    5e3e:	2301      	movs	r3, #1
    5e40:	4093      	lsls	r3, r2
    5e42:	1c1a      	adds	r2, r3, #0
    5e44:	7e03      	ldrb	r3, [r0, #24]
    5e46:	431a      	orrs	r2, r3
    5e48:	7602      	strb	r2, [r0, #24]
    5e4a:	2000      	movs	r0, #0
    5e4c:	4770      	bx	lr
    5e4e:	2310      	movs	r3, #16
    5e50:	7e02      	ldrb	r2, [r0, #24]
    5e52:	4313      	orrs	r3, r2
    5e54:	7603      	strb	r3, [r0, #24]
    5e56:	e7f8      	b.n	5e4a <tc_register_callback+0x1a>
    5e58:	2320      	movs	r3, #32
    5e5a:	7e02      	ldrb	r2, [r0, #24]
    5e5c:	4313      	orrs	r3, r2
    5e5e:	7603      	strb	r3, [r0, #24]
    5e60:	e7f3      	b.n	5e4a <tc_register_callback+0x1a>
    5e62:	46c0      	nop			; (mov r8, r8)

00005e64 <_tc_interrupt_handler>:
    5e64:	b570      	push	{r4, r5, r6, lr}
    5e66:	2601      	movs	r6, #1
    5e68:	4b15      	ldr	r3, [pc, #84]	; (5ec0 <_tc_interrupt_handler+0x5c>)
    5e6a:	0080      	lsls	r0, r0, #2
    5e6c:	58c5      	ldr	r5, [r0, r3]
    5e6e:	682b      	ldr	r3, [r5, #0]
    5e70:	7e2c      	ldrb	r4, [r5, #24]
    5e72:	7b9b      	ldrb	r3, [r3, #14]
    5e74:	401c      	ands	r4, r3
    5e76:	7e6b      	ldrb	r3, [r5, #25]
    5e78:	401c      	ands	r4, r3
    5e7a:	4226      	tst	r6, r4
    5e7c:	d11a      	bne.n	5eb4 <_tc_interrupt_handler+0x50>
    5e7e:	2602      	movs	r6, #2
    5e80:	4226      	tst	r6, r4
    5e82:	d111      	bne.n	5ea8 <_tc_interrupt_handler+0x44>
    5e84:	2610      	movs	r6, #16
    5e86:	4226      	tst	r6, r4
    5e88:	d108      	bne.n	5e9c <_tc_interrupt_handler+0x38>
    5e8a:	2620      	movs	r6, #32
    5e8c:	4226      	tst	r6, r4
    5e8e:	d004      	beq.n	5e9a <_tc_interrupt_handler+0x36>
    5e90:	696b      	ldr	r3, [r5, #20]
    5e92:	1c28      	adds	r0, r5, #0
    5e94:	4798      	blx	r3
    5e96:	682b      	ldr	r3, [r5, #0]
    5e98:	739e      	strb	r6, [r3, #14]
    5e9a:	bd70      	pop	{r4, r5, r6, pc}
    5e9c:	692b      	ldr	r3, [r5, #16]
    5e9e:	1c28      	adds	r0, r5, #0
    5ea0:	4798      	blx	r3
    5ea2:	682b      	ldr	r3, [r5, #0]
    5ea4:	739e      	strb	r6, [r3, #14]
    5ea6:	e7f0      	b.n	5e8a <_tc_interrupt_handler+0x26>
    5ea8:	68eb      	ldr	r3, [r5, #12]
    5eaa:	1c28      	adds	r0, r5, #0
    5eac:	4798      	blx	r3
    5eae:	682b      	ldr	r3, [r5, #0]
    5eb0:	739e      	strb	r6, [r3, #14]
    5eb2:	e7e7      	b.n	5e84 <_tc_interrupt_handler+0x20>
    5eb4:	68ab      	ldr	r3, [r5, #8]
    5eb6:	1c28      	adds	r0, r5, #0
    5eb8:	4798      	blx	r3
    5eba:	682b      	ldr	r3, [r5, #0]
    5ebc:	739e      	strb	r6, [r3, #14]
    5ebe:	e7de      	b.n	5e7e <_tc_interrupt_handler+0x1a>
    5ec0:	200046a4 	.word	0x200046a4

00005ec4 <TC3_Handler>:
    5ec4:	b508      	push	{r3, lr}
    5ec6:	2000      	movs	r0, #0
    5ec8:	f7ff ffcc 	bl	5e64 <_tc_interrupt_handler>
    5ecc:	bd08      	pop	{r3, pc}
    5ece:	46c0      	nop			; (mov r8, r8)

00005ed0 <TC4_Handler>:
    5ed0:	b508      	push	{r3, lr}
    5ed2:	2001      	movs	r0, #1
    5ed4:	f7ff ffc6 	bl	5e64 <_tc_interrupt_handler>
    5ed8:	bd08      	pop	{r3, pc}
    5eda:	46c0      	nop			; (mov r8, r8)

00005edc <TC5_Handler>:
    5edc:	b508      	push	{r3, lr}
    5ede:	2002      	movs	r0, #2
    5ee0:	f7ff ffc0 	bl	5e64 <_tc_interrupt_handler>
    5ee4:	bd08      	pop	{r3, pc}
    5ee6:	46c0      	nop			; (mov r8, r8)

00005ee8 <_tc_get_inst_index>:
    5ee8:	4b0e      	ldr	r3, [pc, #56]	; (5f24 <_tc_get_inst_index+0x3c>)
    5eea:	1c01      	adds	r1, r0, #0
    5eec:	1c18      	adds	r0, r3, #0
    5eee:	b570      	push	{r4, r5, r6, lr}
    5ef0:	b084      	sub	sp, #16
    5ef2:	aa01      	add	r2, sp, #4
    5ef4:	c870      	ldmia	r0!, {r4, r5, r6}
    5ef6:	c270      	stmia	r2!, {r4, r5, r6}
    5ef8:	9a01      	ldr	r2, [sp, #4]
    5efa:	428a      	cmp	r2, r1
    5efc:	d008      	beq.n	5f10 <_tc_get_inst_index+0x28>
    5efe:	685a      	ldr	r2, [r3, #4]
    5f00:	428a      	cmp	r2, r1
    5f02:	d008      	beq.n	5f16 <_tc_get_inst_index+0x2e>
    5f04:	689b      	ldr	r3, [r3, #8]
    5f06:	2000      	movs	r0, #0
    5f08:	428b      	cmp	r3, r1
    5f0a:	d007      	beq.n	5f1c <_tc_get_inst_index+0x34>
    5f0c:	b004      	add	sp, #16
    5f0e:	bd70      	pop	{r4, r5, r6, pc}
    5f10:	2000      	movs	r0, #0
    5f12:	b2c0      	uxtb	r0, r0
    5f14:	e7fa      	b.n	5f0c <_tc_get_inst_index+0x24>
    5f16:	2001      	movs	r0, #1
    5f18:	b2c0      	uxtb	r0, r0
    5f1a:	e7f7      	b.n	5f0c <_tc_get_inst_index+0x24>
    5f1c:	3002      	adds	r0, #2
    5f1e:	b2c0      	uxtb	r0, r0
    5f20:	e7f4      	b.n	5f0c <_tc_get_inst_index+0x24>
    5f22:	46c0      	nop			; (mov r8, r8)
    5f24:	0000f520 	.word	0x0000f520

00005f28 <tc_init>:
    5f28:	b5f0      	push	{r4, r5, r6, r7, lr}
    5f2a:	4657      	mov	r7, sl
    5f2c:	464e      	mov	r6, r9
    5f2e:	4645      	mov	r5, r8
    5f30:	4ca3      	ldr	r4, [pc, #652]	; (61c0 <tc_init+0x298>)
    5f32:	4691      	mov	r9, r2
    5f34:	1c22      	adds	r2, r4, #0
    5f36:	b4e0      	push	{r5, r6, r7}
    5f38:	b086      	sub	sp, #24
    5f3a:	ab03      	add	r3, sp, #12
    5f3c:	1c05      	adds	r5, r0, #0
    5f3e:	1c0e      	adds	r6, r1, #0
    5f40:	469a      	mov	sl, r3
    5f42:	ca83      	ldmia	r2!, {r0, r1, r7}
    5f44:	c383      	stmia	r3!, {r0, r1, r7}
    5f46:	9b03      	ldr	r3, [sp, #12]
    5f48:	429e      	cmp	r6, r3
    5f4a:	d100      	bne.n	5f4e <tc_init+0x26>
    5f4c:	e10c      	b.n	6168 <tc_init+0x240>
    5f4e:	6863      	ldr	r3, [r4, #4]
    5f50:	429e      	cmp	r6, r3
    5f52:	d100      	bne.n	5f56 <tc_init+0x2e>
    5f54:	e10b      	b.n	616e <tc_init+0x246>
    5f56:	2300      	movs	r3, #0
    5f58:	4698      	mov	r8, r3
    5f5a:	68a3      	ldr	r3, [r4, #8]
    5f5c:	429e      	cmp	r6, r3
    5f5e:	d100      	bne.n	5f62 <tc_init+0x3a>
    5f60:	e108      	b.n	6174 <tc_init+0x24c>
    5f62:	1c21      	adds	r1, r4, #0
    5f64:	2203      	movs	r2, #3
    5f66:	310c      	adds	r1, #12
    5f68:	a801      	add	r0, sp, #4
    5f6a:	f003 fd7e 	bl	9a6a <memcpy>
    5f6e:	1c21      	adds	r1, r4, #0
    5f70:	2206      	movs	r2, #6
    5f72:	3110      	adds	r1, #16
    5f74:	4650      	mov	r0, sl
    5f76:	f003 fd78 	bl	9a6a <memcpy>
    5f7a:	2300      	movs	r3, #0
    5f7c:	60ab      	str	r3, [r5, #8]
    5f7e:	60eb      	str	r3, [r5, #12]
    5f80:	612b      	str	r3, [r5, #16]
    5f82:	616b      	str	r3, [r5, #20]
    5f84:	762b      	strb	r3, [r5, #24]
    5f86:	766b      	strb	r3, [r5, #25]
    5f88:	4643      	mov	r3, r8
    5f8a:	4a8e      	ldr	r2, [pc, #568]	; (61c4 <tc_init+0x29c>)
    5f8c:	009b      	lsls	r3, r3, #2
    5f8e:	509d      	str	r5, [r3, r2]
    5f90:	464b      	mov	r3, r9
    5f92:	602e      	str	r6, [r5, #0]
    5f94:	789b      	ldrb	r3, [r3, #2]
    5f96:	2b08      	cmp	r3, #8
    5f98:	d00b      	beq.n	5fb2 <tc_init+0x8a>
    5f9a:	712b      	strb	r3, [r5, #4]
    5f9c:	8833      	ldrh	r3, [r6, #0]
    5f9e:	2201      	movs	r2, #1
    5fa0:	2005      	movs	r0, #5
    5fa2:	07db      	lsls	r3, r3, #31
    5fa4:	d50a      	bpl.n	5fbc <tc_init+0x94>
    5fa6:	b006      	add	sp, #24
    5fa8:	bc1c      	pop	{r2, r3, r4}
    5faa:	4690      	mov	r8, r2
    5fac:	4699      	mov	r9, r3
    5fae:	46a2      	mov	sl, r4
    5fb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5fb2:	4642      	mov	r2, r8
    5fb4:	2017      	movs	r0, #23
    5fb6:	07d2      	lsls	r2, r2, #31
    5fb8:	d5f5      	bpl.n	5fa6 <tc_init+0x7e>
    5fba:	e7ee      	b.n	5f9a <tc_init+0x72>
    5fbc:	7bf3      	ldrb	r3, [r6, #15]
    5fbe:	3017      	adds	r0, #23
    5fc0:	06db      	lsls	r3, r3, #27
    5fc2:	d4f0      	bmi.n	5fa6 <tc_init+0x7e>
    5fc4:	2102      	movs	r1, #2
    5fc6:	8833      	ldrh	r3, [r6, #0]
    5fc8:	400b      	ands	r3, r1
    5fca:	d1ec      	bne.n	5fa6 <tc_init+0x7e>
    5fcc:	4649      	mov	r1, r9
    5fce:	7c09      	ldrb	r1, [r1, #16]
    5fd0:	2900      	cmp	r1, #0
    5fd2:	d000      	beq.n	5fd6 <tc_init+0xae>
    5fd4:	e0d1      	b.n	617a <tc_init+0x252>
    5fd6:	464b      	mov	r3, r9
    5fd8:	7f1b      	ldrb	r3, [r3, #28]
    5fda:	2b00      	cmp	r3, #0
    5fdc:	d000      	beq.n	5fe0 <tc_init+0xb8>
    5fde:	e0d8      	b.n	6192 <tc_init+0x26a>
    5fe0:	4641      	mov	r1, r8
    5fe2:	4650      	mov	r0, sl
    5fe4:	4a78      	ldr	r2, [pc, #480]	; (61c8 <tc_init+0x2a0>)
    5fe6:	0049      	lsls	r1, r1, #1
    5fe8:	6a13      	ldr	r3, [r2, #32]
    5fea:	5a41      	ldrh	r1, [r0, r1]
    5fec:	430b      	orrs	r3, r1
    5fee:	6213      	str	r3, [r2, #32]
    5ff0:	464b      	mov	r3, r9
    5ff2:	789b      	ldrb	r3, [r3, #2]
    5ff4:	2b08      	cmp	r3, #8
    5ff6:	d100      	bne.n	5ffa <tc_init+0xd2>
    5ff8:	e0da      	b.n	61b0 <tc_init+0x288>
    5ffa:	464b      	mov	r3, r9
    5ffc:	466a      	mov	r2, sp
    5ffe:	781b      	ldrb	r3, [r3, #0]
    6000:	4669      	mov	r1, sp
    6002:	7013      	strb	r3, [r2, #0]
    6004:	466b      	mov	r3, sp
    6006:	4642      	mov	r2, r8
    6008:	3304      	adds	r3, #4
    600a:	5c9c      	ldrb	r4, [r3, r2]
    600c:	1c20      	adds	r0, r4, #0
    600e:	f7fe f87f 	bl	4110 <system_gclk_chan_set_config>
    6012:	1c20      	adds	r0, r4, #0
    6014:	f7fe f83e 	bl	4094 <system_gclk_chan_enable>
    6018:	464b      	mov	r3, r9
    601a:	464a      	mov	r2, r9
    601c:	8898      	ldrh	r0, [r3, #4]
    601e:	891b      	ldrh	r3, [r3, #8]
    6020:	4303      	orrs	r3, r0
    6022:	7990      	ldrb	r0, [r2, #6]
    6024:	7892      	ldrb	r2, [r2, #2]
    6026:	4310      	orrs	r0, r2
    6028:	4318      	orrs	r0, r3
    602a:	464b      	mov	r3, r9
    602c:	785b      	ldrb	r3, [r3, #1]
    602e:	2b00      	cmp	r3, #0
    6030:	d002      	beq.n	6038 <tc_init+0x110>
    6032:	2380      	movs	r3, #128	; 0x80
    6034:	011b      	lsls	r3, r3, #4
    6036:	4318      	orrs	r0, r3
    6038:	227f      	movs	r2, #127	; 0x7f
    603a:	6829      	ldr	r1, [r5, #0]
    603c:	7bcb      	ldrb	r3, [r1, #15]
    603e:	4393      	bics	r3, r2
    6040:	d1fc      	bne.n	603c <tc_init+0x114>
    6042:	464b      	mov	r3, r9
    6044:	8030      	strh	r0, [r6, #0]
    6046:	7b58      	ldrb	r0, [r3, #13]
    6048:	1e43      	subs	r3, r0, #1
    604a:	4198      	sbcs	r0, r3
    604c:	464b      	mov	r3, r9
    604e:	7b9b      	ldrb	r3, [r3, #14]
    6050:	0080      	lsls	r0, r0, #2
    6052:	2b00      	cmp	r3, #0
    6054:	d001      	beq.n	605a <tc_init+0x132>
    6056:	2301      	movs	r3, #1
    6058:	4318      	orrs	r0, r3
    605a:	227f      	movs	r2, #127	; 0x7f
    605c:	6829      	ldr	r1, [r5, #0]
    605e:	7bcb      	ldrb	r3, [r1, #15]
    6060:	4393      	bics	r3, r2
    6062:	d1fc      	bne.n	605e <tc_init+0x136>
    6064:	33ff      	adds	r3, #255	; 0xff
    6066:	7133      	strb	r3, [r6, #4]
    6068:	2800      	cmp	r0, #0
    606a:	d005      	beq.n	6078 <tc_init+0x150>
    606c:	227f      	movs	r2, #127	; 0x7f
    606e:	6829      	ldr	r1, [r5, #0]
    6070:	7bcb      	ldrb	r3, [r1, #15]
    6072:	4393      	bics	r3, r2
    6074:	d1fc      	bne.n	6070 <tc_init+0x148>
    6076:	7170      	strb	r0, [r6, #5]
    6078:	464b      	mov	r3, r9
    607a:	7a98      	ldrb	r0, [r3, #10]
    607c:	7adb      	ldrb	r3, [r3, #11]
    607e:	2b00      	cmp	r3, #0
    6080:	d001      	beq.n	6086 <tc_init+0x15e>
    6082:	2310      	movs	r3, #16
    6084:	4318      	orrs	r0, r3
    6086:	464b      	mov	r3, r9
    6088:	7b1b      	ldrb	r3, [r3, #12]
    608a:	2b00      	cmp	r3, #0
    608c:	d001      	beq.n	6092 <tc_init+0x16a>
    608e:	2320      	movs	r3, #32
    6090:	4318      	orrs	r0, r3
    6092:	227f      	movs	r2, #127	; 0x7f
    6094:	6829      	ldr	r1, [r5, #0]
    6096:	7bcb      	ldrb	r3, [r1, #15]
    6098:	4393      	bics	r3, r2
    609a:	d1fc      	bne.n	6096 <tc_init+0x16e>
    609c:	217f      	movs	r1, #127	; 0x7f
    609e:	71b0      	strb	r0, [r6, #6]
    60a0:	682a      	ldr	r2, [r5, #0]
    60a2:	7bd3      	ldrb	r3, [r2, #15]
    60a4:	438b      	bics	r3, r1
    60a6:	d1fc      	bne.n	60a2 <tc_init+0x17a>
    60a8:	792b      	ldrb	r3, [r5, #4]
    60aa:	217f      	movs	r1, #127	; 0x7f
    60ac:	2b04      	cmp	r3, #4
    60ae:	d007      	beq.n	60c0 <tc_init+0x198>
    60b0:	217f      	movs	r1, #127	; 0x7f
    60b2:	2b08      	cmp	r3, #8
    60b4:	d040      	beq.n	6138 <tc_init+0x210>
    60b6:	217f      	movs	r1, #127	; 0x7f
    60b8:	2b00      	cmp	r3, #0
    60ba:	d025      	beq.n	6108 <tc_init+0x1e0>
    60bc:	2017      	movs	r0, #23
    60be:	e772      	b.n	5fa6 <tc_init+0x7e>
    60c0:	7bd3      	ldrb	r3, [r2, #15]
    60c2:	438b      	bics	r3, r1
    60c4:	d1fc      	bne.n	60c0 <tc_init+0x198>
    60c6:	464a      	mov	r2, r9
    60c8:	3328      	adds	r3, #40	; 0x28
    60ca:	5cd3      	ldrb	r3, [r2, r3]
    60cc:	227f      	movs	r2, #127	; 0x7f
    60ce:	7433      	strb	r3, [r6, #16]
    60d0:	6829      	ldr	r1, [r5, #0]
    60d2:	7bcb      	ldrb	r3, [r1, #15]
    60d4:	4393      	bics	r3, r2
    60d6:	d1fc      	bne.n	60d2 <tc_init+0x1aa>
    60d8:	464a      	mov	r2, r9
    60da:	3329      	adds	r3, #41	; 0x29
    60dc:	5cd3      	ldrb	r3, [r2, r3]
    60de:	227f      	movs	r2, #127	; 0x7f
    60e0:	7533      	strb	r3, [r6, #20]
    60e2:	6829      	ldr	r1, [r5, #0]
    60e4:	7bcb      	ldrb	r3, [r1, #15]
    60e6:	4393      	bics	r3, r2
    60e8:	d1fc      	bne.n	60e4 <tc_init+0x1bc>
    60ea:	464a      	mov	r2, r9
    60ec:	332a      	adds	r3, #42	; 0x2a
    60ee:	5cd3      	ldrb	r3, [r2, r3]
    60f0:	227f      	movs	r2, #127	; 0x7f
    60f2:	7633      	strb	r3, [r6, #24]
    60f4:	6829      	ldr	r1, [r5, #0]
    60f6:	7bcb      	ldrb	r3, [r1, #15]
    60f8:	4393      	bics	r3, r2
    60fa:	d1fc      	bne.n	60f6 <tc_init+0x1ce>
    60fc:	464a      	mov	r2, r9
    60fe:	332b      	adds	r3, #43	; 0x2b
    6100:	5cd3      	ldrb	r3, [r2, r3]
    6102:	2000      	movs	r0, #0
    6104:	7673      	strb	r3, [r6, #25]
    6106:	e74e      	b.n	5fa6 <tc_init+0x7e>
    6108:	7bd3      	ldrb	r3, [r2, #15]
    610a:	438b      	bics	r3, r1
    610c:	d1fc      	bne.n	6108 <tc_init+0x1e0>
    610e:	464b      	mov	r3, r9
    6110:	227f      	movs	r2, #127	; 0x7f
    6112:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
    6114:	8233      	strh	r3, [r6, #16]
    6116:	6829      	ldr	r1, [r5, #0]
    6118:	7bcb      	ldrb	r3, [r1, #15]
    611a:	4393      	bics	r3, r2
    611c:	d1fc      	bne.n	6118 <tc_init+0x1f0>
    611e:	464b      	mov	r3, r9
    6120:	227f      	movs	r2, #127	; 0x7f
    6122:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
    6124:	8333      	strh	r3, [r6, #24]
    6126:	6829      	ldr	r1, [r5, #0]
    6128:	7bcb      	ldrb	r3, [r1, #15]
    612a:	4393      	bics	r3, r2
    612c:	d1fc      	bne.n	6128 <tc_init+0x200>
    612e:	464b      	mov	r3, r9
    6130:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
    6132:	2000      	movs	r0, #0
    6134:	8373      	strh	r3, [r6, #26]
    6136:	e736      	b.n	5fa6 <tc_init+0x7e>
    6138:	7bd3      	ldrb	r3, [r2, #15]
    613a:	438b      	bics	r3, r1
    613c:	d1fc      	bne.n	6138 <tc_init+0x210>
    613e:	464b      	mov	r3, r9
    6140:	227f      	movs	r2, #127	; 0x7f
    6142:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    6144:	6133      	str	r3, [r6, #16]
    6146:	6829      	ldr	r1, [r5, #0]
    6148:	7bcb      	ldrb	r3, [r1, #15]
    614a:	4393      	bics	r3, r2
    614c:	d1fc      	bne.n	6148 <tc_init+0x220>
    614e:	464b      	mov	r3, r9
    6150:	227f      	movs	r2, #127	; 0x7f
    6152:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    6154:	61b3      	str	r3, [r6, #24]
    6156:	6829      	ldr	r1, [r5, #0]
    6158:	7bcb      	ldrb	r3, [r1, #15]
    615a:	4393      	bics	r3, r2
    615c:	d1fc      	bne.n	6158 <tc_init+0x230>
    615e:	464b      	mov	r3, r9
    6160:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    6162:	2000      	movs	r0, #0
    6164:	61f3      	str	r3, [r6, #28]
    6166:	e71e      	b.n	5fa6 <tc_init+0x7e>
    6168:	2300      	movs	r3, #0
    616a:	4698      	mov	r8, r3
    616c:	e6f9      	b.n	5f62 <tc_init+0x3a>
    616e:	2301      	movs	r3, #1
    6170:	4698      	mov	r8, r3
    6172:	e6f6      	b.n	5f62 <tc_init+0x3a>
    6174:	2302      	movs	r3, #2
    6176:	4698      	mov	r8, r3
    6178:	e6f3      	b.n	5f62 <tc_init+0x3a>
    617a:	a902      	add	r1, sp, #8
    617c:	70cb      	strb	r3, [r1, #3]
    617e:	464b      	mov	r3, r9
    6180:	7e1b      	ldrb	r3, [r3, #24]
    6182:	708a      	strb	r2, [r1, #2]
    6184:	700b      	strb	r3, [r1, #0]
    6186:	464b      	mov	r3, r9
    6188:	7d18      	ldrb	r0, [r3, #20]
    618a:	704a      	strb	r2, [r1, #1]
    618c:	f7fd feb6 	bl	3efc <system_pinmux_pin_set_config>
    6190:	e721      	b.n	5fd6 <tc_init+0xae>
    6192:	2301      	movs	r3, #1
    6194:	2200      	movs	r2, #0
    6196:	a902      	add	r1, sp, #8
    6198:	708b      	strb	r3, [r1, #2]
    619a:	704b      	strb	r3, [r1, #1]
    619c:	464b      	mov	r3, r9
    619e:	70ca      	strb	r2, [r1, #3]
    61a0:	464a      	mov	r2, r9
    61a2:	6a1b      	ldr	r3, [r3, #32]
    61a4:	6a52      	ldr	r2, [r2, #36]	; 0x24
    61a6:	b2d8      	uxtb	r0, r3
    61a8:	700a      	strb	r2, [r1, #0]
    61aa:	f7fd fea7 	bl	3efc <system_pinmux_pin_set_config>
    61ae:	e717      	b.n	5fe0 <tc_init+0xb8>
    61b0:	4641      	mov	r1, r8
    61b2:	3101      	adds	r1, #1
    61b4:	0049      	lsls	r1, r1, #1
    61b6:	6a13      	ldr	r3, [r2, #32]
    61b8:	5a41      	ldrh	r1, [r0, r1]
    61ba:	430b      	orrs	r3, r1
    61bc:	6213      	str	r3, [r2, #32]
    61be:	e71c      	b.n	5ffa <tc_init+0xd2>
    61c0:	0000f520 	.word	0x0000f520
    61c4:	200046a4 	.word	0x200046a4
    61c8:	40000400 	.word	0x40000400

000061cc <tc_get_count_value>:
    61cc:	217f      	movs	r1, #127	; 0x7f
    61ce:	6802      	ldr	r2, [r0, #0]
    61d0:	7bd3      	ldrb	r3, [r2, #15]
    61d2:	438b      	bics	r3, r1
    61d4:	d1fc      	bne.n	61d0 <tc_get_count_value+0x4>
    61d6:	7903      	ldrb	r3, [r0, #4]
    61d8:	2b04      	cmp	r3, #4
    61da:	d00a      	beq.n	61f2 <tc_get_count_value+0x26>
    61dc:	2b08      	cmp	r3, #8
    61de:	d006      	beq.n	61ee <tc_get_count_value+0x22>
    61e0:	2000      	movs	r0, #0
    61e2:	2b00      	cmp	r3, #0
    61e4:	d000      	beq.n	61e8 <tc_get_count_value+0x1c>
    61e6:	4770      	bx	lr
    61e8:	8a10      	ldrh	r0, [r2, #16]
    61ea:	b280      	uxth	r0, r0
    61ec:	e7fb      	b.n	61e6 <tc_get_count_value+0x1a>
    61ee:	6910      	ldr	r0, [r2, #16]
    61f0:	e7f9      	b.n	61e6 <tc_get_count_value+0x1a>
    61f2:	7c10      	ldrb	r0, [r2, #16]
    61f4:	b2c0      	uxtb	r0, r0
    61f6:	e7f6      	b.n	61e6 <tc_get_count_value+0x1a>

000061f8 <tc_set_compare_value>:
    61f8:	b530      	push	{r4, r5, lr}
    61fa:	257f      	movs	r5, #127	; 0x7f
    61fc:	6804      	ldr	r4, [r0, #0]
    61fe:	7be3      	ldrb	r3, [r4, #15]
    6200:	43ab      	bics	r3, r5
    6202:	d1fc      	bne.n	61fe <tc_set_compare_value+0x6>
    6204:	7903      	ldrb	r3, [r0, #4]
    6206:	2b04      	cmp	r3, #4
    6208:	d016      	beq.n	6238 <tc_set_compare_value+0x40>
    620a:	2b08      	cmp	r3, #8
    620c:	d00c      	beq.n	6228 <tc_set_compare_value+0x30>
    620e:	2017      	movs	r0, #23
    6210:	2b00      	cmp	r3, #0
    6212:	d000      	beq.n	6216 <tc_set_compare_value+0x1e>
    6214:	bd30      	pop	{r4, r5, pc}
    6216:	2017      	movs	r0, #23
    6218:	2901      	cmp	r1, #1
    621a:	d8fb      	bhi.n	6214 <tc_set_compare_value+0x1c>
    621c:	310c      	adds	r1, #12
    621e:	b292      	uxth	r2, r2
    6220:	0049      	lsls	r1, r1, #1
    6222:	530a      	strh	r2, [r1, r4]
    6224:	2000      	movs	r0, #0
    6226:	e7f5      	b.n	6214 <tc_set_compare_value+0x1c>
    6228:	2017      	movs	r0, #23
    622a:	2901      	cmp	r1, #1
    622c:	d8f2      	bhi.n	6214 <tc_set_compare_value+0x1c>
    622e:	3106      	adds	r1, #6
    6230:	0089      	lsls	r1, r1, #2
    6232:	510a      	str	r2, [r1, r4]
    6234:	2000      	movs	r0, #0
    6236:	e7ed      	b.n	6214 <tc_set_compare_value+0x1c>
    6238:	2017      	movs	r0, #23
    623a:	2901      	cmp	r1, #1
    623c:	d8ea      	bhi.n	6214 <tc_set_compare_value+0x1c>
    623e:	b2d2      	uxtb	r2, r2
    6240:	1861      	adds	r1, r4, r1
    6242:	760a      	strb	r2, [r1, #24]
    6244:	2000      	movs	r0, #0
    6246:	e7e5      	b.n	6214 <tc_set_compare_value+0x1c>

00006248 <ticker_irq_handler>:
    6248:	b538      	push	{r3, r4, r5, lr}
    624a:	6803      	ldr	r3, [r0, #0]
    624c:	1c05      	adds	r5, r0, #0
    624e:	68db      	ldr	r3, [r3, #12]
    6250:	4798      	blx	r3
    6252:	686b      	ldr	r3, [r5, #4]
    6254:	685b      	ldr	r3, [r3, #4]
    6256:	e00d      	b.n	6274 <ticker_irq_handler+0x2c>
    6258:	681c      	ldr	r4, [r3, #0]
    625a:	682b      	ldr	r3, [r5, #0]
    625c:	685b      	ldr	r3, [r3, #4]
    625e:	4798      	blx	r3
    6260:	1a24      	subs	r4, r4, r0
    6262:	2c00      	cmp	r4, #0
    6264:	dc0c      	bgt.n	6280 <ticker_irq_handler+0x38>
    6266:	686a      	ldr	r2, [r5, #4]
    6268:	6851      	ldr	r1, [r2, #4]
    626a:	688b      	ldr	r3, [r1, #8]
    626c:	6053      	str	r3, [r2, #4]
    626e:	6812      	ldr	r2, [r2, #0]
    6270:	2a00      	cmp	r2, #0
    6272:	d10c      	bne.n	628e <ticker_irq_handler+0x46>
    6274:	2b00      	cmp	r3, #0
    6276:	d1ef      	bne.n	6258 <ticker_irq_handler+0x10>
    6278:	682b      	ldr	r3, [r5, #0]
    627a:	689b      	ldr	r3, [r3, #8]
    627c:	4798      	blx	r3
    627e:	bd38      	pop	{r3, r4, r5, pc}
    6280:	686a      	ldr	r2, [r5, #4]
    6282:	682b      	ldr	r3, [r5, #0]
    6284:	6852      	ldr	r2, [r2, #4]
    6286:	691b      	ldr	r3, [r3, #16]
    6288:	6810      	ldr	r0, [r2, #0]
    628a:	4798      	blx	r3
    628c:	e7f7      	b.n	627e <ticker_irq_handler+0x36>
    628e:	6848      	ldr	r0, [r1, #4]
    6290:	4790      	blx	r2
    6292:	e7de      	b.n	6252 <ticker_irq_handler+0xa>

00006294 <__aeabi_atexit>:
    6294:	b508      	push	{r3, lr}
    6296:	1c03      	adds	r3, r0, #0
    6298:	1c08      	adds	r0, r1, #0
    629a:	1c19      	adds	r1, r3, #0
    629c:	f003 f836 	bl	930c <__cxa_atexit>
    62a0:	bd08      	pop	{r3, pc}

000062a2 <_ZdlPv>:
    62a2:	b508      	push	{r3, lr}
    62a4:	f003 fbcc 	bl	9a40 <free>
    62a8:	bd08      	pop	{r3, pc}
	...

000062ac <__aeabi_uidiv>:
    62ac:	2200      	movs	r2, #0
    62ae:	0843      	lsrs	r3, r0, #1
    62b0:	428b      	cmp	r3, r1
    62b2:	d374      	bcc.n	639e <__aeabi_uidiv+0xf2>
    62b4:	0903      	lsrs	r3, r0, #4
    62b6:	428b      	cmp	r3, r1
    62b8:	d35f      	bcc.n	637a <__aeabi_uidiv+0xce>
    62ba:	0a03      	lsrs	r3, r0, #8
    62bc:	428b      	cmp	r3, r1
    62be:	d344      	bcc.n	634a <__aeabi_uidiv+0x9e>
    62c0:	0b03      	lsrs	r3, r0, #12
    62c2:	428b      	cmp	r3, r1
    62c4:	d328      	bcc.n	6318 <__aeabi_uidiv+0x6c>
    62c6:	0c03      	lsrs	r3, r0, #16
    62c8:	428b      	cmp	r3, r1
    62ca:	d30d      	bcc.n	62e8 <__aeabi_uidiv+0x3c>
    62cc:	22ff      	movs	r2, #255	; 0xff
    62ce:	0209      	lsls	r1, r1, #8
    62d0:	ba12      	rev	r2, r2
    62d2:	0c03      	lsrs	r3, r0, #16
    62d4:	428b      	cmp	r3, r1
    62d6:	d302      	bcc.n	62de <__aeabi_uidiv+0x32>
    62d8:	1212      	asrs	r2, r2, #8
    62da:	0209      	lsls	r1, r1, #8
    62dc:	d065      	beq.n	63aa <__aeabi_uidiv+0xfe>
    62de:	0b03      	lsrs	r3, r0, #12
    62e0:	428b      	cmp	r3, r1
    62e2:	d319      	bcc.n	6318 <__aeabi_uidiv+0x6c>
    62e4:	e000      	b.n	62e8 <__aeabi_uidiv+0x3c>
    62e6:	0a09      	lsrs	r1, r1, #8
    62e8:	0bc3      	lsrs	r3, r0, #15
    62ea:	428b      	cmp	r3, r1
    62ec:	d301      	bcc.n	62f2 <__aeabi_uidiv+0x46>
    62ee:	03cb      	lsls	r3, r1, #15
    62f0:	1ac0      	subs	r0, r0, r3
    62f2:	4152      	adcs	r2, r2
    62f4:	0b83      	lsrs	r3, r0, #14
    62f6:	428b      	cmp	r3, r1
    62f8:	d301      	bcc.n	62fe <__aeabi_uidiv+0x52>
    62fa:	038b      	lsls	r3, r1, #14
    62fc:	1ac0      	subs	r0, r0, r3
    62fe:	4152      	adcs	r2, r2
    6300:	0b43      	lsrs	r3, r0, #13
    6302:	428b      	cmp	r3, r1
    6304:	d301      	bcc.n	630a <__aeabi_uidiv+0x5e>
    6306:	034b      	lsls	r3, r1, #13
    6308:	1ac0      	subs	r0, r0, r3
    630a:	4152      	adcs	r2, r2
    630c:	0b03      	lsrs	r3, r0, #12
    630e:	428b      	cmp	r3, r1
    6310:	d301      	bcc.n	6316 <__aeabi_uidiv+0x6a>
    6312:	030b      	lsls	r3, r1, #12
    6314:	1ac0      	subs	r0, r0, r3
    6316:	4152      	adcs	r2, r2
    6318:	0ac3      	lsrs	r3, r0, #11
    631a:	428b      	cmp	r3, r1
    631c:	d301      	bcc.n	6322 <__aeabi_uidiv+0x76>
    631e:	02cb      	lsls	r3, r1, #11
    6320:	1ac0      	subs	r0, r0, r3
    6322:	4152      	adcs	r2, r2
    6324:	0a83      	lsrs	r3, r0, #10
    6326:	428b      	cmp	r3, r1
    6328:	d301      	bcc.n	632e <__aeabi_uidiv+0x82>
    632a:	028b      	lsls	r3, r1, #10
    632c:	1ac0      	subs	r0, r0, r3
    632e:	4152      	adcs	r2, r2
    6330:	0a43      	lsrs	r3, r0, #9
    6332:	428b      	cmp	r3, r1
    6334:	d301      	bcc.n	633a <__aeabi_uidiv+0x8e>
    6336:	024b      	lsls	r3, r1, #9
    6338:	1ac0      	subs	r0, r0, r3
    633a:	4152      	adcs	r2, r2
    633c:	0a03      	lsrs	r3, r0, #8
    633e:	428b      	cmp	r3, r1
    6340:	d301      	bcc.n	6346 <__aeabi_uidiv+0x9a>
    6342:	020b      	lsls	r3, r1, #8
    6344:	1ac0      	subs	r0, r0, r3
    6346:	4152      	adcs	r2, r2
    6348:	d2cd      	bcs.n	62e6 <__aeabi_uidiv+0x3a>
    634a:	09c3      	lsrs	r3, r0, #7
    634c:	428b      	cmp	r3, r1
    634e:	d301      	bcc.n	6354 <__aeabi_uidiv+0xa8>
    6350:	01cb      	lsls	r3, r1, #7
    6352:	1ac0      	subs	r0, r0, r3
    6354:	4152      	adcs	r2, r2
    6356:	0983      	lsrs	r3, r0, #6
    6358:	428b      	cmp	r3, r1
    635a:	d301      	bcc.n	6360 <__aeabi_uidiv+0xb4>
    635c:	018b      	lsls	r3, r1, #6
    635e:	1ac0      	subs	r0, r0, r3
    6360:	4152      	adcs	r2, r2
    6362:	0943      	lsrs	r3, r0, #5
    6364:	428b      	cmp	r3, r1
    6366:	d301      	bcc.n	636c <__aeabi_uidiv+0xc0>
    6368:	014b      	lsls	r3, r1, #5
    636a:	1ac0      	subs	r0, r0, r3
    636c:	4152      	adcs	r2, r2
    636e:	0903      	lsrs	r3, r0, #4
    6370:	428b      	cmp	r3, r1
    6372:	d301      	bcc.n	6378 <__aeabi_uidiv+0xcc>
    6374:	010b      	lsls	r3, r1, #4
    6376:	1ac0      	subs	r0, r0, r3
    6378:	4152      	adcs	r2, r2
    637a:	08c3      	lsrs	r3, r0, #3
    637c:	428b      	cmp	r3, r1
    637e:	d301      	bcc.n	6384 <__aeabi_uidiv+0xd8>
    6380:	00cb      	lsls	r3, r1, #3
    6382:	1ac0      	subs	r0, r0, r3
    6384:	4152      	adcs	r2, r2
    6386:	0883      	lsrs	r3, r0, #2
    6388:	428b      	cmp	r3, r1
    638a:	d301      	bcc.n	6390 <__aeabi_uidiv+0xe4>
    638c:	008b      	lsls	r3, r1, #2
    638e:	1ac0      	subs	r0, r0, r3
    6390:	4152      	adcs	r2, r2
    6392:	0843      	lsrs	r3, r0, #1
    6394:	428b      	cmp	r3, r1
    6396:	d301      	bcc.n	639c <__aeabi_uidiv+0xf0>
    6398:	004b      	lsls	r3, r1, #1
    639a:	1ac0      	subs	r0, r0, r3
    639c:	4152      	adcs	r2, r2
    639e:	1a41      	subs	r1, r0, r1
    63a0:	d200      	bcs.n	63a4 <__aeabi_uidiv+0xf8>
    63a2:	4601      	mov	r1, r0
    63a4:	4152      	adcs	r2, r2
    63a6:	4610      	mov	r0, r2
    63a8:	4770      	bx	lr
    63aa:	e7ff      	b.n	63ac <__aeabi_uidiv+0x100>
    63ac:	b501      	push	{r0, lr}
    63ae:	2000      	movs	r0, #0
    63b0:	f000 f8fc 	bl	65ac <__aeabi_idiv0>
    63b4:	bd02      	pop	{r1, pc}
    63b6:	46c0      	nop			; (mov r8, r8)

000063b8 <__aeabi_uidivmod>:
    63b8:	2900      	cmp	r1, #0
    63ba:	d0f7      	beq.n	63ac <__aeabi_uidiv+0x100>
    63bc:	b503      	push	{r0, r1, lr}
    63be:	f7ff ff75 	bl	62ac <__aeabi_uidiv>
    63c2:	bc0e      	pop	{r1, r2, r3}
    63c4:	4342      	muls	r2, r0
    63c6:	1a89      	subs	r1, r1, r2
    63c8:	4718      	bx	r3
    63ca:	46c0      	nop			; (mov r8, r8)

000063cc <__aeabi_idiv>:
    63cc:	4603      	mov	r3, r0
    63ce:	430b      	orrs	r3, r1
    63d0:	d47f      	bmi.n	64d2 <__aeabi_idiv+0x106>
    63d2:	2200      	movs	r2, #0
    63d4:	0843      	lsrs	r3, r0, #1
    63d6:	428b      	cmp	r3, r1
    63d8:	d374      	bcc.n	64c4 <__aeabi_idiv+0xf8>
    63da:	0903      	lsrs	r3, r0, #4
    63dc:	428b      	cmp	r3, r1
    63de:	d35f      	bcc.n	64a0 <__aeabi_idiv+0xd4>
    63e0:	0a03      	lsrs	r3, r0, #8
    63e2:	428b      	cmp	r3, r1
    63e4:	d344      	bcc.n	6470 <__aeabi_idiv+0xa4>
    63e6:	0b03      	lsrs	r3, r0, #12
    63e8:	428b      	cmp	r3, r1
    63ea:	d328      	bcc.n	643e <__aeabi_idiv+0x72>
    63ec:	0c03      	lsrs	r3, r0, #16
    63ee:	428b      	cmp	r3, r1
    63f0:	d30d      	bcc.n	640e <__aeabi_idiv+0x42>
    63f2:	22ff      	movs	r2, #255	; 0xff
    63f4:	0209      	lsls	r1, r1, #8
    63f6:	ba12      	rev	r2, r2
    63f8:	0c03      	lsrs	r3, r0, #16
    63fa:	428b      	cmp	r3, r1
    63fc:	d302      	bcc.n	6404 <__aeabi_idiv+0x38>
    63fe:	1212      	asrs	r2, r2, #8
    6400:	0209      	lsls	r1, r1, #8
    6402:	d065      	beq.n	64d0 <__aeabi_idiv+0x104>
    6404:	0b03      	lsrs	r3, r0, #12
    6406:	428b      	cmp	r3, r1
    6408:	d319      	bcc.n	643e <__aeabi_idiv+0x72>
    640a:	e000      	b.n	640e <__aeabi_idiv+0x42>
    640c:	0a09      	lsrs	r1, r1, #8
    640e:	0bc3      	lsrs	r3, r0, #15
    6410:	428b      	cmp	r3, r1
    6412:	d301      	bcc.n	6418 <__aeabi_idiv+0x4c>
    6414:	03cb      	lsls	r3, r1, #15
    6416:	1ac0      	subs	r0, r0, r3
    6418:	4152      	adcs	r2, r2
    641a:	0b83      	lsrs	r3, r0, #14
    641c:	428b      	cmp	r3, r1
    641e:	d301      	bcc.n	6424 <__aeabi_idiv+0x58>
    6420:	038b      	lsls	r3, r1, #14
    6422:	1ac0      	subs	r0, r0, r3
    6424:	4152      	adcs	r2, r2
    6426:	0b43      	lsrs	r3, r0, #13
    6428:	428b      	cmp	r3, r1
    642a:	d301      	bcc.n	6430 <__aeabi_idiv+0x64>
    642c:	034b      	lsls	r3, r1, #13
    642e:	1ac0      	subs	r0, r0, r3
    6430:	4152      	adcs	r2, r2
    6432:	0b03      	lsrs	r3, r0, #12
    6434:	428b      	cmp	r3, r1
    6436:	d301      	bcc.n	643c <__aeabi_idiv+0x70>
    6438:	030b      	lsls	r3, r1, #12
    643a:	1ac0      	subs	r0, r0, r3
    643c:	4152      	adcs	r2, r2
    643e:	0ac3      	lsrs	r3, r0, #11
    6440:	428b      	cmp	r3, r1
    6442:	d301      	bcc.n	6448 <__aeabi_idiv+0x7c>
    6444:	02cb      	lsls	r3, r1, #11
    6446:	1ac0      	subs	r0, r0, r3
    6448:	4152      	adcs	r2, r2
    644a:	0a83      	lsrs	r3, r0, #10
    644c:	428b      	cmp	r3, r1
    644e:	d301      	bcc.n	6454 <__aeabi_idiv+0x88>
    6450:	028b      	lsls	r3, r1, #10
    6452:	1ac0      	subs	r0, r0, r3
    6454:	4152      	adcs	r2, r2
    6456:	0a43      	lsrs	r3, r0, #9
    6458:	428b      	cmp	r3, r1
    645a:	d301      	bcc.n	6460 <__aeabi_idiv+0x94>
    645c:	024b      	lsls	r3, r1, #9
    645e:	1ac0      	subs	r0, r0, r3
    6460:	4152      	adcs	r2, r2
    6462:	0a03      	lsrs	r3, r0, #8
    6464:	428b      	cmp	r3, r1
    6466:	d301      	bcc.n	646c <__aeabi_idiv+0xa0>
    6468:	020b      	lsls	r3, r1, #8
    646a:	1ac0      	subs	r0, r0, r3
    646c:	4152      	adcs	r2, r2
    646e:	d2cd      	bcs.n	640c <__aeabi_idiv+0x40>
    6470:	09c3      	lsrs	r3, r0, #7
    6472:	428b      	cmp	r3, r1
    6474:	d301      	bcc.n	647a <__aeabi_idiv+0xae>
    6476:	01cb      	lsls	r3, r1, #7
    6478:	1ac0      	subs	r0, r0, r3
    647a:	4152      	adcs	r2, r2
    647c:	0983      	lsrs	r3, r0, #6
    647e:	428b      	cmp	r3, r1
    6480:	d301      	bcc.n	6486 <__aeabi_idiv+0xba>
    6482:	018b      	lsls	r3, r1, #6
    6484:	1ac0      	subs	r0, r0, r3
    6486:	4152      	adcs	r2, r2
    6488:	0943      	lsrs	r3, r0, #5
    648a:	428b      	cmp	r3, r1
    648c:	d301      	bcc.n	6492 <__aeabi_idiv+0xc6>
    648e:	014b      	lsls	r3, r1, #5
    6490:	1ac0      	subs	r0, r0, r3
    6492:	4152      	adcs	r2, r2
    6494:	0903      	lsrs	r3, r0, #4
    6496:	428b      	cmp	r3, r1
    6498:	d301      	bcc.n	649e <__aeabi_idiv+0xd2>
    649a:	010b      	lsls	r3, r1, #4
    649c:	1ac0      	subs	r0, r0, r3
    649e:	4152      	adcs	r2, r2
    64a0:	08c3      	lsrs	r3, r0, #3
    64a2:	428b      	cmp	r3, r1
    64a4:	d301      	bcc.n	64aa <__aeabi_idiv+0xde>
    64a6:	00cb      	lsls	r3, r1, #3
    64a8:	1ac0      	subs	r0, r0, r3
    64aa:	4152      	adcs	r2, r2
    64ac:	0883      	lsrs	r3, r0, #2
    64ae:	428b      	cmp	r3, r1
    64b0:	d301      	bcc.n	64b6 <__aeabi_idiv+0xea>
    64b2:	008b      	lsls	r3, r1, #2
    64b4:	1ac0      	subs	r0, r0, r3
    64b6:	4152      	adcs	r2, r2
    64b8:	0843      	lsrs	r3, r0, #1
    64ba:	428b      	cmp	r3, r1
    64bc:	d301      	bcc.n	64c2 <__aeabi_idiv+0xf6>
    64be:	004b      	lsls	r3, r1, #1
    64c0:	1ac0      	subs	r0, r0, r3
    64c2:	4152      	adcs	r2, r2
    64c4:	1a41      	subs	r1, r0, r1
    64c6:	d200      	bcs.n	64ca <__aeabi_idiv+0xfe>
    64c8:	4601      	mov	r1, r0
    64ca:	4152      	adcs	r2, r2
    64cc:	4610      	mov	r0, r2
    64ce:	4770      	bx	lr
    64d0:	e05d      	b.n	658e <__aeabi_idiv+0x1c2>
    64d2:	0fca      	lsrs	r2, r1, #31
    64d4:	d000      	beq.n	64d8 <__aeabi_idiv+0x10c>
    64d6:	4249      	negs	r1, r1
    64d8:	1003      	asrs	r3, r0, #32
    64da:	d300      	bcc.n	64de <__aeabi_idiv+0x112>
    64dc:	4240      	negs	r0, r0
    64de:	4053      	eors	r3, r2
    64e0:	2200      	movs	r2, #0
    64e2:	469c      	mov	ip, r3
    64e4:	0903      	lsrs	r3, r0, #4
    64e6:	428b      	cmp	r3, r1
    64e8:	d32d      	bcc.n	6546 <__aeabi_idiv+0x17a>
    64ea:	0a03      	lsrs	r3, r0, #8
    64ec:	428b      	cmp	r3, r1
    64ee:	d312      	bcc.n	6516 <__aeabi_idiv+0x14a>
    64f0:	22fc      	movs	r2, #252	; 0xfc
    64f2:	0189      	lsls	r1, r1, #6
    64f4:	ba12      	rev	r2, r2
    64f6:	0a03      	lsrs	r3, r0, #8
    64f8:	428b      	cmp	r3, r1
    64fa:	d30c      	bcc.n	6516 <__aeabi_idiv+0x14a>
    64fc:	0189      	lsls	r1, r1, #6
    64fe:	1192      	asrs	r2, r2, #6
    6500:	428b      	cmp	r3, r1
    6502:	d308      	bcc.n	6516 <__aeabi_idiv+0x14a>
    6504:	0189      	lsls	r1, r1, #6
    6506:	1192      	asrs	r2, r2, #6
    6508:	428b      	cmp	r3, r1
    650a:	d304      	bcc.n	6516 <__aeabi_idiv+0x14a>
    650c:	0189      	lsls	r1, r1, #6
    650e:	d03a      	beq.n	6586 <__aeabi_idiv+0x1ba>
    6510:	1192      	asrs	r2, r2, #6
    6512:	e000      	b.n	6516 <__aeabi_idiv+0x14a>
    6514:	0989      	lsrs	r1, r1, #6
    6516:	09c3      	lsrs	r3, r0, #7
    6518:	428b      	cmp	r3, r1
    651a:	d301      	bcc.n	6520 <__aeabi_idiv+0x154>
    651c:	01cb      	lsls	r3, r1, #7
    651e:	1ac0      	subs	r0, r0, r3
    6520:	4152      	adcs	r2, r2
    6522:	0983      	lsrs	r3, r0, #6
    6524:	428b      	cmp	r3, r1
    6526:	d301      	bcc.n	652c <__aeabi_idiv+0x160>
    6528:	018b      	lsls	r3, r1, #6
    652a:	1ac0      	subs	r0, r0, r3
    652c:	4152      	adcs	r2, r2
    652e:	0943      	lsrs	r3, r0, #5
    6530:	428b      	cmp	r3, r1
    6532:	d301      	bcc.n	6538 <__aeabi_idiv+0x16c>
    6534:	014b      	lsls	r3, r1, #5
    6536:	1ac0      	subs	r0, r0, r3
    6538:	4152      	adcs	r2, r2
    653a:	0903      	lsrs	r3, r0, #4
    653c:	428b      	cmp	r3, r1
    653e:	d301      	bcc.n	6544 <__aeabi_idiv+0x178>
    6540:	010b      	lsls	r3, r1, #4
    6542:	1ac0      	subs	r0, r0, r3
    6544:	4152      	adcs	r2, r2
    6546:	08c3      	lsrs	r3, r0, #3
    6548:	428b      	cmp	r3, r1
    654a:	d301      	bcc.n	6550 <__aeabi_idiv+0x184>
    654c:	00cb      	lsls	r3, r1, #3
    654e:	1ac0      	subs	r0, r0, r3
    6550:	4152      	adcs	r2, r2
    6552:	0883      	lsrs	r3, r0, #2
    6554:	428b      	cmp	r3, r1
    6556:	d301      	bcc.n	655c <__aeabi_idiv+0x190>
    6558:	008b      	lsls	r3, r1, #2
    655a:	1ac0      	subs	r0, r0, r3
    655c:	4152      	adcs	r2, r2
    655e:	d2d9      	bcs.n	6514 <__aeabi_idiv+0x148>
    6560:	0843      	lsrs	r3, r0, #1
    6562:	428b      	cmp	r3, r1
    6564:	d301      	bcc.n	656a <__aeabi_idiv+0x19e>
    6566:	004b      	lsls	r3, r1, #1
    6568:	1ac0      	subs	r0, r0, r3
    656a:	4152      	adcs	r2, r2
    656c:	1a41      	subs	r1, r0, r1
    656e:	d200      	bcs.n	6572 <__aeabi_idiv+0x1a6>
    6570:	4601      	mov	r1, r0
    6572:	4663      	mov	r3, ip
    6574:	4152      	adcs	r2, r2
    6576:	105b      	asrs	r3, r3, #1
    6578:	4610      	mov	r0, r2
    657a:	d301      	bcc.n	6580 <__aeabi_idiv+0x1b4>
    657c:	4240      	negs	r0, r0
    657e:	2b00      	cmp	r3, #0
    6580:	d500      	bpl.n	6584 <__aeabi_idiv+0x1b8>
    6582:	4249      	negs	r1, r1
    6584:	4770      	bx	lr
    6586:	4663      	mov	r3, ip
    6588:	105b      	asrs	r3, r3, #1
    658a:	d300      	bcc.n	658e <__aeabi_idiv+0x1c2>
    658c:	4240      	negs	r0, r0
    658e:	b501      	push	{r0, lr}
    6590:	2000      	movs	r0, #0
    6592:	f000 f80b 	bl	65ac <__aeabi_idiv0>
    6596:	bd02      	pop	{r1, pc}

00006598 <__aeabi_idivmod>:
    6598:	2900      	cmp	r1, #0
    659a:	d0f8      	beq.n	658e <__aeabi_idiv+0x1c2>
    659c:	b503      	push	{r0, r1, lr}
    659e:	f7ff ff15 	bl	63cc <__aeabi_idiv>
    65a2:	bc0e      	pop	{r1, r2, r3}
    65a4:	4342      	muls	r2, r0
    65a6:	1a89      	subs	r1, r1, r2
    65a8:	4718      	bx	r3
    65aa:	46c0      	nop			; (mov r8, r8)

000065ac <__aeabi_idiv0>:
    65ac:	4770      	bx	lr
    65ae:	46c0      	nop			; (mov r8, r8)

000065b0 <__aeabi_cdrcmple>:
    65b0:	4684      	mov	ip, r0
    65b2:	1c10      	adds	r0, r2, #0
    65b4:	4662      	mov	r2, ip
    65b6:	468c      	mov	ip, r1
    65b8:	1c19      	adds	r1, r3, #0
    65ba:	4663      	mov	r3, ip
    65bc:	e000      	b.n	65c0 <__aeabi_cdcmpeq>
    65be:	46c0      	nop			; (mov r8, r8)

000065c0 <__aeabi_cdcmpeq>:
    65c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    65c2:	f001 fe83 	bl	82cc <__ledf2>
    65c6:	2800      	cmp	r0, #0
    65c8:	d401      	bmi.n	65ce <__aeabi_cdcmpeq+0xe>
    65ca:	2100      	movs	r1, #0
    65cc:	42c8      	cmn	r0, r1
    65ce:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

000065d0 <__aeabi_dcmpeq>:
    65d0:	b510      	push	{r4, lr}
    65d2:	f001 fdc7 	bl	8164 <__eqdf2>
    65d6:	4240      	negs	r0, r0
    65d8:	3001      	adds	r0, #1
    65da:	bd10      	pop	{r4, pc}

000065dc <__aeabi_dcmplt>:
    65dc:	b510      	push	{r4, lr}
    65de:	f001 fe75 	bl	82cc <__ledf2>
    65e2:	2800      	cmp	r0, #0
    65e4:	db01      	blt.n	65ea <__aeabi_dcmplt+0xe>
    65e6:	2000      	movs	r0, #0
    65e8:	bd10      	pop	{r4, pc}
    65ea:	2001      	movs	r0, #1
    65ec:	bd10      	pop	{r4, pc}
    65ee:	46c0      	nop			; (mov r8, r8)

000065f0 <__aeabi_dcmple>:
    65f0:	b510      	push	{r4, lr}
    65f2:	f001 fe6b 	bl	82cc <__ledf2>
    65f6:	2800      	cmp	r0, #0
    65f8:	dd01      	ble.n	65fe <__aeabi_dcmple+0xe>
    65fa:	2000      	movs	r0, #0
    65fc:	bd10      	pop	{r4, pc}
    65fe:	2001      	movs	r0, #1
    6600:	bd10      	pop	{r4, pc}
    6602:	46c0      	nop			; (mov r8, r8)

00006604 <__aeabi_dcmpgt>:
    6604:	b510      	push	{r4, lr}
    6606:	f001 fdf1 	bl	81ec <__gedf2>
    660a:	2800      	cmp	r0, #0
    660c:	dc01      	bgt.n	6612 <__aeabi_dcmpgt+0xe>
    660e:	2000      	movs	r0, #0
    6610:	bd10      	pop	{r4, pc}
    6612:	2001      	movs	r0, #1
    6614:	bd10      	pop	{r4, pc}
    6616:	46c0      	nop			; (mov r8, r8)

00006618 <__aeabi_dcmpge>:
    6618:	b510      	push	{r4, lr}
    661a:	f001 fde7 	bl	81ec <__gedf2>
    661e:	2800      	cmp	r0, #0
    6620:	da01      	bge.n	6626 <__aeabi_dcmpge+0xe>
    6622:	2000      	movs	r0, #0
    6624:	bd10      	pop	{r4, pc}
    6626:	2001      	movs	r0, #1
    6628:	bd10      	pop	{r4, pc}
    662a:	46c0      	nop			; (mov r8, r8)

0000662c <__aeabi_cfrcmple>:
    662c:	4684      	mov	ip, r0
    662e:	1c08      	adds	r0, r1, #0
    6630:	4661      	mov	r1, ip
    6632:	e7ff      	b.n	6634 <__aeabi_cfcmpeq>

00006634 <__aeabi_cfcmpeq>:
    6634:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    6636:	f000 fba3 	bl	6d80 <__lesf2>
    663a:	2800      	cmp	r0, #0
    663c:	d401      	bmi.n	6642 <__aeabi_cfcmpeq+0xe>
    663e:	2100      	movs	r1, #0
    6640:	42c8      	cmn	r0, r1
    6642:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00006644 <__aeabi_fcmpeq>:
    6644:	b510      	push	{r4, lr}
    6646:	f000 fb27 	bl	6c98 <__eqsf2>
    664a:	4240      	negs	r0, r0
    664c:	3001      	adds	r0, #1
    664e:	bd10      	pop	{r4, pc}

00006650 <__aeabi_fcmplt>:
    6650:	b510      	push	{r4, lr}
    6652:	f000 fb95 	bl	6d80 <__lesf2>
    6656:	2800      	cmp	r0, #0
    6658:	db01      	blt.n	665e <__aeabi_fcmplt+0xe>
    665a:	2000      	movs	r0, #0
    665c:	bd10      	pop	{r4, pc}
    665e:	2001      	movs	r0, #1
    6660:	bd10      	pop	{r4, pc}
    6662:	46c0      	nop			; (mov r8, r8)

00006664 <__aeabi_fcmple>:
    6664:	b510      	push	{r4, lr}
    6666:	f000 fb8b 	bl	6d80 <__lesf2>
    666a:	2800      	cmp	r0, #0
    666c:	dd01      	ble.n	6672 <__aeabi_fcmple+0xe>
    666e:	2000      	movs	r0, #0
    6670:	bd10      	pop	{r4, pc}
    6672:	2001      	movs	r0, #1
    6674:	bd10      	pop	{r4, pc}
    6676:	46c0      	nop			; (mov r8, r8)

00006678 <__aeabi_fcmpgt>:
    6678:	b510      	push	{r4, lr}
    667a:	f000 fb37 	bl	6cec <__gesf2>
    667e:	2800      	cmp	r0, #0
    6680:	dc01      	bgt.n	6686 <__aeabi_fcmpgt+0xe>
    6682:	2000      	movs	r0, #0
    6684:	bd10      	pop	{r4, pc}
    6686:	2001      	movs	r0, #1
    6688:	bd10      	pop	{r4, pc}
    668a:	46c0      	nop			; (mov r8, r8)

0000668c <__aeabi_fcmpge>:
    668c:	b510      	push	{r4, lr}
    668e:	f000 fb2d 	bl	6cec <__gesf2>
    6692:	2800      	cmp	r0, #0
    6694:	da01      	bge.n	669a <__aeabi_fcmpge+0xe>
    6696:	2000      	movs	r0, #0
    6698:	bd10      	pop	{r4, pc}
    669a:	2001      	movs	r0, #1
    669c:	bd10      	pop	{r4, pc}
    669e:	46c0      	nop			; (mov r8, r8)

000066a0 <__aeabi_lmul>:
    66a0:	b5f0      	push	{r4, r5, r6, r7, lr}
    66a2:	464f      	mov	r7, r9
    66a4:	4646      	mov	r6, r8
    66a6:	0405      	lsls	r5, r0, #16
    66a8:	0c2d      	lsrs	r5, r5, #16
    66aa:	1c2c      	adds	r4, r5, #0
    66ac:	b4c0      	push	{r6, r7}
    66ae:	0417      	lsls	r7, r2, #16
    66b0:	0c16      	lsrs	r6, r2, #16
    66b2:	0c3f      	lsrs	r7, r7, #16
    66b4:	4699      	mov	r9, r3
    66b6:	0c03      	lsrs	r3, r0, #16
    66b8:	437c      	muls	r4, r7
    66ba:	4375      	muls	r5, r6
    66bc:	435f      	muls	r7, r3
    66be:	4373      	muls	r3, r6
    66c0:	197d      	adds	r5, r7, r5
    66c2:	0c26      	lsrs	r6, r4, #16
    66c4:	19ad      	adds	r5, r5, r6
    66c6:	469c      	mov	ip, r3
    66c8:	42af      	cmp	r7, r5
    66ca:	d903      	bls.n	66d4 <__aeabi_lmul+0x34>
    66cc:	2380      	movs	r3, #128	; 0x80
    66ce:	025b      	lsls	r3, r3, #9
    66d0:	4698      	mov	r8, r3
    66d2:	44c4      	add	ip, r8
    66d4:	464b      	mov	r3, r9
    66d6:	4351      	muls	r1, r2
    66d8:	4343      	muls	r3, r0
    66da:	0424      	lsls	r4, r4, #16
    66dc:	0c2e      	lsrs	r6, r5, #16
    66de:	0c24      	lsrs	r4, r4, #16
    66e0:	042d      	lsls	r5, r5, #16
    66e2:	4466      	add	r6, ip
    66e4:	192c      	adds	r4, r5, r4
    66e6:	1859      	adds	r1, r3, r1
    66e8:	1989      	adds	r1, r1, r6
    66ea:	1c20      	adds	r0, r4, #0
    66ec:	bc0c      	pop	{r2, r3}
    66ee:	4690      	mov	r8, r2
    66f0:	4699      	mov	r9, r3
    66f2:	bdf0      	pop	{r4, r5, r6, r7, pc}

000066f4 <__aeabi_d2uiz>:
    66f4:	b538      	push	{r3, r4, r5, lr}
    66f6:	2200      	movs	r2, #0
    66f8:	4b0c      	ldr	r3, [pc, #48]	; (672c <__aeabi_d2uiz+0x38>)
    66fa:	1c04      	adds	r4, r0, #0
    66fc:	1c0d      	adds	r5, r1, #0
    66fe:	f7ff ff8b 	bl	6618 <__aeabi_dcmpge>
    6702:	2800      	cmp	r0, #0
    6704:	d104      	bne.n	6710 <__aeabi_d2uiz+0x1c>
    6706:	1c20      	adds	r0, r4, #0
    6708:	1c29      	adds	r1, r5, #0
    670a:	f002 fc59 	bl	8fc0 <__aeabi_d2iz>
    670e:	bd38      	pop	{r3, r4, r5, pc}
    6710:	4b06      	ldr	r3, [pc, #24]	; (672c <__aeabi_d2uiz+0x38>)
    6712:	2200      	movs	r2, #0
    6714:	1c20      	adds	r0, r4, #0
    6716:	1c29      	adds	r1, r5, #0
    6718:	f002 f8d8 	bl	88cc <__aeabi_dsub>
    671c:	f002 fc50 	bl	8fc0 <__aeabi_d2iz>
    6720:	2380      	movs	r3, #128	; 0x80
    6722:	061b      	lsls	r3, r3, #24
    6724:	469c      	mov	ip, r3
    6726:	4460      	add	r0, ip
    6728:	e7f1      	b.n	670e <__aeabi_d2uiz+0x1a>
    672a:	46c0      	nop			; (mov r8, r8)
    672c:	41e00000 	.word	0x41e00000

00006730 <__aeabi_fadd>:
    6730:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    6732:	004a      	lsls	r2, r1, #1
    6734:	0243      	lsls	r3, r0, #9
    6736:	0044      	lsls	r4, r0, #1
    6738:	024e      	lsls	r6, r1, #9
    673a:	0fc5      	lsrs	r5, r0, #31
    673c:	0e24      	lsrs	r4, r4, #24
    673e:	1c28      	adds	r0, r5, #0
    6740:	099b      	lsrs	r3, r3, #6
    6742:	0e12      	lsrs	r2, r2, #24
    6744:	0fc9      	lsrs	r1, r1, #31
    6746:	09b7      	lsrs	r7, r6, #6
    6748:	428d      	cmp	r5, r1
    674a:	d040      	beq.n	67ce <__aeabi_fadd+0x9e>
    674c:	1aa0      	subs	r0, r4, r2
    674e:	2800      	cmp	r0, #0
    6750:	dc00      	bgt.n	6754 <__aeabi_fadd+0x24>
    6752:	e084      	b.n	685e <__aeabi_fadd+0x12e>
    6754:	2a00      	cmp	r2, #0
    6756:	d11c      	bne.n	6792 <__aeabi_fadd+0x62>
    6758:	2f00      	cmp	r7, #0
    675a:	d15c      	bne.n	6816 <__aeabi_fadd+0xe6>
    675c:	075a      	lsls	r2, r3, #29
    675e:	d004      	beq.n	676a <__aeabi_fadd+0x3a>
    6760:	220f      	movs	r2, #15
    6762:	401a      	ands	r2, r3
    6764:	2a04      	cmp	r2, #4
    6766:	d000      	beq.n	676a <__aeabi_fadd+0x3a>
    6768:	3304      	adds	r3, #4
    676a:	2280      	movs	r2, #128	; 0x80
    676c:	04d2      	lsls	r2, r2, #19
    676e:	401a      	ands	r2, r3
    6770:	1c28      	adds	r0, r5, #0
    6772:	2a00      	cmp	r2, #0
    6774:	d024      	beq.n	67c0 <__aeabi_fadd+0x90>
    6776:	3401      	adds	r4, #1
    6778:	2cff      	cmp	r4, #255	; 0xff
    677a:	d100      	bne.n	677e <__aeabi_fadd+0x4e>
    677c:	e07b      	b.n	6876 <__aeabi_fadd+0x146>
    677e:	019b      	lsls	r3, r3, #6
    6780:	0a5b      	lsrs	r3, r3, #9
    6782:	b2e4      	uxtb	r4, r4
    6784:	025b      	lsls	r3, r3, #9
    6786:	05e4      	lsls	r4, r4, #23
    6788:	0a5b      	lsrs	r3, r3, #9
    678a:	4323      	orrs	r3, r4
    678c:	07c0      	lsls	r0, r0, #31
    678e:	4318      	orrs	r0, r3
    6790:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    6792:	2cff      	cmp	r4, #255	; 0xff
    6794:	d0e2      	beq.n	675c <__aeabi_fadd+0x2c>
    6796:	2280      	movs	r2, #128	; 0x80
    6798:	04d2      	lsls	r2, r2, #19
    679a:	4317      	orrs	r7, r2
    679c:	2601      	movs	r6, #1
    679e:	281b      	cmp	r0, #27
    67a0:	dc08      	bgt.n	67b4 <__aeabi_fadd+0x84>
    67a2:	1c39      	adds	r1, r7, #0
    67a4:	2220      	movs	r2, #32
    67a6:	1c3e      	adds	r6, r7, #0
    67a8:	40c1      	lsrs	r1, r0
    67aa:	1a10      	subs	r0, r2, r0
    67ac:	4086      	lsls	r6, r0
    67ae:	1e77      	subs	r7, r6, #1
    67b0:	41be      	sbcs	r6, r7
    67b2:	430e      	orrs	r6, r1
    67b4:	1b9b      	subs	r3, r3, r6
    67b6:	015a      	lsls	r2, r3, #5
    67b8:	d433      	bmi.n	6822 <__aeabi_fadd+0xf2>
    67ba:	1c28      	adds	r0, r5, #0
    67bc:	075a      	lsls	r2, r3, #29
    67be:	d1cf      	bne.n	6760 <__aeabi_fadd+0x30>
    67c0:	08db      	lsrs	r3, r3, #3
    67c2:	2cff      	cmp	r4, #255	; 0xff
    67c4:	d01e      	beq.n	6804 <__aeabi_fadd+0xd4>
    67c6:	025b      	lsls	r3, r3, #9
    67c8:	0a5b      	lsrs	r3, r3, #9
    67ca:	b2e4      	uxtb	r4, r4
    67cc:	e7da      	b.n	6784 <__aeabi_fadd+0x54>
    67ce:	1aa1      	subs	r1, r4, r2
    67d0:	2900      	cmp	r1, #0
    67d2:	dd57      	ble.n	6884 <__aeabi_fadd+0x154>
    67d4:	2a00      	cmp	r2, #0
    67d6:	d03a      	beq.n	684e <__aeabi_fadd+0x11e>
    67d8:	2cff      	cmp	r4, #255	; 0xff
    67da:	d0bf      	beq.n	675c <__aeabi_fadd+0x2c>
    67dc:	2280      	movs	r2, #128	; 0x80
    67de:	04d2      	lsls	r2, r2, #19
    67e0:	4317      	orrs	r7, r2
    67e2:	2601      	movs	r6, #1
    67e4:	291b      	cmp	r1, #27
    67e6:	dd72      	ble.n	68ce <__aeabi_fadd+0x19e>
    67e8:	199b      	adds	r3, r3, r6
    67ea:	015a      	lsls	r2, r3, #5
    67ec:	d5e5      	bpl.n	67ba <__aeabi_fadd+0x8a>
    67ee:	3401      	adds	r4, #1
    67f0:	2cff      	cmp	r4, #255	; 0xff
    67f2:	d100      	bne.n	67f6 <__aeabi_fadd+0xc6>
    67f4:	e087      	b.n	6906 <__aeabi_fadd+0x1d6>
    67f6:	2101      	movs	r1, #1
    67f8:	4a8a      	ldr	r2, [pc, #552]	; (6a24 <__aeabi_fadd+0x2f4>)
    67fa:	4019      	ands	r1, r3
    67fc:	4013      	ands	r3, r2
    67fe:	085b      	lsrs	r3, r3, #1
    6800:	430b      	orrs	r3, r1
    6802:	e7ab      	b.n	675c <__aeabi_fadd+0x2c>
    6804:	2b00      	cmp	r3, #0
    6806:	d036      	beq.n	6876 <__aeabi_fadd+0x146>
    6808:	2280      	movs	r2, #128	; 0x80
    680a:	03d2      	lsls	r2, r2, #15
    680c:	4313      	orrs	r3, r2
    680e:	025b      	lsls	r3, r3, #9
    6810:	0a5b      	lsrs	r3, r3, #9
    6812:	24ff      	movs	r4, #255	; 0xff
    6814:	e7b6      	b.n	6784 <__aeabi_fadd+0x54>
    6816:	3801      	subs	r0, #1
    6818:	2800      	cmp	r0, #0
    681a:	d13f      	bne.n	689c <__aeabi_fadd+0x16c>
    681c:	1bdb      	subs	r3, r3, r7
    681e:	015a      	lsls	r2, r3, #5
    6820:	d5cb      	bpl.n	67ba <__aeabi_fadd+0x8a>
    6822:	019b      	lsls	r3, r3, #6
    6824:	099e      	lsrs	r6, r3, #6
    6826:	1c30      	adds	r0, r6, #0
    6828:	f002 fd52 	bl	92d0 <__clzsi2>
    682c:	3805      	subs	r0, #5
    682e:	4086      	lsls	r6, r0
    6830:	4284      	cmp	r4, r0
    6832:	dc23      	bgt.n	687c <__aeabi_fadd+0x14c>
    6834:	1b00      	subs	r0, r0, r4
    6836:	241f      	movs	r4, #31
    6838:	1c32      	adds	r2, r6, #0
    683a:	1c43      	adds	r3, r0, #1
    683c:	1a20      	subs	r0, r4, r0
    683e:	40da      	lsrs	r2, r3
    6840:	4086      	lsls	r6, r0
    6842:	1c13      	adds	r3, r2, #0
    6844:	1e74      	subs	r4, r6, #1
    6846:	41a6      	sbcs	r6, r4
    6848:	2400      	movs	r4, #0
    684a:	4333      	orrs	r3, r6
    684c:	e786      	b.n	675c <__aeabi_fadd+0x2c>
    684e:	2f00      	cmp	r7, #0
    6850:	d100      	bne.n	6854 <__aeabi_fadd+0x124>
    6852:	e783      	b.n	675c <__aeabi_fadd+0x2c>
    6854:	3901      	subs	r1, #1
    6856:	2900      	cmp	r1, #0
    6858:	d150      	bne.n	68fc <__aeabi_fadd+0x1cc>
    685a:	19db      	adds	r3, r3, r7
    685c:	e7c5      	b.n	67ea <__aeabi_fadd+0xba>
    685e:	2800      	cmp	r0, #0
    6860:	d120      	bne.n	68a4 <__aeabi_fadd+0x174>
    6862:	1c62      	adds	r2, r4, #1
    6864:	b2d2      	uxtb	r2, r2
    6866:	2a01      	cmp	r2, #1
    6868:	dd5e      	ble.n	6928 <__aeabi_fadd+0x1f8>
    686a:	1bde      	subs	r6, r3, r7
    686c:	0172      	lsls	r2, r6, #5
    686e:	d528      	bpl.n	68c2 <__aeabi_fadd+0x192>
    6870:	1afe      	subs	r6, r7, r3
    6872:	1c0d      	adds	r5, r1, #0
    6874:	e7d7      	b.n	6826 <__aeabi_fadd+0xf6>
    6876:	24ff      	movs	r4, #255	; 0xff
    6878:	2300      	movs	r3, #0
    687a:	e783      	b.n	6784 <__aeabi_fadd+0x54>
    687c:	4b69      	ldr	r3, [pc, #420]	; (6a24 <__aeabi_fadd+0x2f4>)
    687e:	1a24      	subs	r4, r4, r0
    6880:	4033      	ands	r3, r6
    6882:	e76b      	b.n	675c <__aeabi_fadd+0x2c>
    6884:	2900      	cmp	r1, #0
    6886:	d158      	bne.n	693a <__aeabi_fadd+0x20a>
    6888:	1c62      	adds	r2, r4, #1
    688a:	b2d1      	uxtb	r1, r2
    688c:	2901      	cmp	r1, #1
    688e:	dd3c      	ble.n	690a <__aeabi_fadd+0x1da>
    6890:	2aff      	cmp	r2, #255	; 0xff
    6892:	d037      	beq.n	6904 <__aeabi_fadd+0x1d4>
    6894:	18fb      	adds	r3, r7, r3
    6896:	085b      	lsrs	r3, r3, #1
    6898:	1c14      	adds	r4, r2, #0
    689a:	e75f      	b.n	675c <__aeabi_fadd+0x2c>
    689c:	2cff      	cmp	r4, #255	; 0xff
    689e:	d000      	beq.n	68a2 <__aeabi_fadd+0x172>
    68a0:	e77c      	b.n	679c <__aeabi_fadd+0x6c>
    68a2:	e75b      	b.n	675c <__aeabi_fadd+0x2c>
    68a4:	2c00      	cmp	r4, #0
    68a6:	d01e      	beq.n	68e6 <__aeabi_fadd+0x1b6>
    68a8:	2aff      	cmp	r2, #255	; 0xff
    68aa:	d023      	beq.n	68f4 <__aeabi_fadd+0x1c4>
    68ac:	2480      	movs	r4, #128	; 0x80
    68ae:	04e4      	lsls	r4, r4, #19
    68b0:	4240      	negs	r0, r0
    68b2:	4323      	orrs	r3, r4
    68b4:	281b      	cmp	r0, #27
    68b6:	dd5b      	ble.n	6970 <__aeabi_fadd+0x240>
    68b8:	2301      	movs	r3, #1
    68ba:	1afb      	subs	r3, r7, r3
    68bc:	1c14      	adds	r4, r2, #0
    68be:	1c0d      	adds	r5, r1, #0
    68c0:	e7ad      	b.n	681e <__aeabi_fadd+0xee>
    68c2:	2e00      	cmp	r6, #0
    68c4:	d1af      	bne.n	6826 <__aeabi_fadd+0xf6>
    68c6:	2300      	movs	r3, #0
    68c8:	2000      	movs	r0, #0
    68ca:	2400      	movs	r4, #0
    68cc:	e778      	b.n	67c0 <__aeabi_fadd+0x90>
    68ce:	1c3a      	adds	r2, r7, #0
    68d0:	40ca      	lsrs	r2, r1
    68d2:	4694      	mov	ip, r2
    68d4:	2220      	movs	r2, #32
    68d6:	1c3e      	adds	r6, r7, #0
    68d8:	1a51      	subs	r1, r2, r1
    68da:	408e      	lsls	r6, r1
    68dc:	4662      	mov	r2, ip
    68de:	1e77      	subs	r7, r6, #1
    68e0:	41be      	sbcs	r6, r7
    68e2:	4316      	orrs	r6, r2
    68e4:	e780      	b.n	67e8 <__aeabi_fadd+0xb8>
    68e6:	2b00      	cmp	r3, #0
    68e8:	d03e      	beq.n	6968 <__aeabi_fadd+0x238>
    68ea:	43c0      	mvns	r0, r0
    68ec:	2800      	cmp	r0, #0
    68ee:	d0e4      	beq.n	68ba <__aeabi_fadd+0x18a>
    68f0:	2aff      	cmp	r2, #255	; 0xff
    68f2:	d1df      	bne.n	68b4 <__aeabi_fadd+0x184>
    68f4:	1c3b      	adds	r3, r7, #0
    68f6:	24ff      	movs	r4, #255	; 0xff
    68f8:	1c0d      	adds	r5, r1, #0
    68fa:	e72f      	b.n	675c <__aeabi_fadd+0x2c>
    68fc:	2cff      	cmp	r4, #255	; 0xff
    68fe:	d000      	beq.n	6902 <__aeabi_fadd+0x1d2>
    6900:	e76f      	b.n	67e2 <__aeabi_fadd+0xb2>
    6902:	e72b      	b.n	675c <__aeabi_fadd+0x2c>
    6904:	24ff      	movs	r4, #255	; 0xff
    6906:	2300      	movs	r3, #0
    6908:	e75a      	b.n	67c0 <__aeabi_fadd+0x90>
    690a:	2c00      	cmp	r4, #0
    690c:	d15a      	bne.n	69c4 <__aeabi_fadd+0x294>
    690e:	2b00      	cmp	r3, #0
    6910:	d07f      	beq.n	6a12 <__aeabi_fadd+0x2e2>
    6912:	2f00      	cmp	r7, #0
    6914:	d100      	bne.n	6918 <__aeabi_fadd+0x1e8>
    6916:	e721      	b.n	675c <__aeabi_fadd+0x2c>
    6918:	19db      	adds	r3, r3, r7
    691a:	015a      	lsls	r2, r3, #5
    691c:	d400      	bmi.n	6920 <__aeabi_fadd+0x1f0>
    691e:	e74c      	b.n	67ba <__aeabi_fadd+0x8a>
    6920:	4a40      	ldr	r2, [pc, #256]	; (6a24 <__aeabi_fadd+0x2f4>)
    6922:	3401      	adds	r4, #1
    6924:	4013      	ands	r3, r2
    6926:	e719      	b.n	675c <__aeabi_fadd+0x2c>
    6928:	2c00      	cmp	r4, #0
    692a:	d115      	bne.n	6958 <__aeabi_fadd+0x228>
    692c:	2b00      	cmp	r3, #0
    692e:	d12f      	bne.n	6990 <__aeabi_fadd+0x260>
    6930:	2f00      	cmp	r7, #0
    6932:	d05d      	beq.n	69f0 <__aeabi_fadd+0x2c0>
    6934:	1c3b      	adds	r3, r7, #0
    6936:	1c0d      	adds	r5, r1, #0
    6938:	e710      	b.n	675c <__aeabi_fadd+0x2c>
    693a:	2c00      	cmp	r4, #0
    693c:	d121      	bne.n	6982 <__aeabi_fadd+0x252>
    693e:	2b00      	cmp	r3, #0
    6940:	d053      	beq.n	69ea <__aeabi_fadd+0x2ba>
    6942:	43c9      	mvns	r1, r1
    6944:	2900      	cmp	r1, #0
    6946:	d004      	beq.n	6952 <__aeabi_fadd+0x222>
    6948:	2aff      	cmp	r2, #255	; 0xff
    694a:	d04b      	beq.n	69e4 <__aeabi_fadd+0x2b4>
    694c:	291b      	cmp	r1, #27
    694e:	dd57      	ble.n	6a00 <__aeabi_fadd+0x2d0>
    6950:	2301      	movs	r3, #1
    6952:	19db      	adds	r3, r3, r7
    6954:	1c14      	adds	r4, r2, #0
    6956:	e748      	b.n	67ea <__aeabi_fadd+0xba>
    6958:	2b00      	cmp	r3, #0
    695a:	d122      	bne.n	69a2 <__aeabi_fadd+0x272>
    695c:	2f00      	cmp	r7, #0
    695e:	d04a      	beq.n	69f6 <__aeabi_fadd+0x2c6>
    6960:	1c3b      	adds	r3, r7, #0
    6962:	1c0d      	adds	r5, r1, #0
    6964:	24ff      	movs	r4, #255	; 0xff
    6966:	e6f9      	b.n	675c <__aeabi_fadd+0x2c>
    6968:	1c3b      	adds	r3, r7, #0
    696a:	1c14      	adds	r4, r2, #0
    696c:	1c0d      	adds	r5, r1, #0
    696e:	e6f5      	b.n	675c <__aeabi_fadd+0x2c>
    6970:	1c1d      	adds	r5, r3, #0
    6972:	2420      	movs	r4, #32
    6974:	40c5      	lsrs	r5, r0
    6976:	1a20      	subs	r0, r4, r0
    6978:	4083      	lsls	r3, r0
    697a:	1e58      	subs	r0, r3, #1
    697c:	4183      	sbcs	r3, r0
    697e:	432b      	orrs	r3, r5
    6980:	e79b      	b.n	68ba <__aeabi_fadd+0x18a>
    6982:	2aff      	cmp	r2, #255	; 0xff
    6984:	d02e      	beq.n	69e4 <__aeabi_fadd+0x2b4>
    6986:	2480      	movs	r4, #128	; 0x80
    6988:	04e4      	lsls	r4, r4, #19
    698a:	4249      	negs	r1, r1
    698c:	4323      	orrs	r3, r4
    698e:	e7dd      	b.n	694c <__aeabi_fadd+0x21c>
    6990:	2f00      	cmp	r7, #0
    6992:	d100      	bne.n	6996 <__aeabi_fadd+0x266>
    6994:	e6e2      	b.n	675c <__aeabi_fadd+0x2c>
    6996:	1bda      	subs	r2, r3, r7
    6998:	0150      	lsls	r0, r2, #5
    699a:	d53c      	bpl.n	6a16 <__aeabi_fadd+0x2e6>
    699c:	1afb      	subs	r3, r7, r3
    699e:	1c0d      	adds	r5, r1, #0
    69a0:	e6dc      	b.n	675c <__aeabi_fadd+0x2c>
    69a2:	24ff      	movs	r4, #255	; 0xff
    69a4:	2f00      	cmp	r7, #0
    69a6:	d100      	bne.n	69aa <__aeabi_fadd+0x27a>
    69a8:	e6d8      	b.n	675c <__aeabi_fadd+0x2c>
    69aa:	2280      	movs	r2, #128	; 0x80
    69ac:	08db      	lsrs	r3, r3, #3
    69ae:	03d2      	lsls	r2, r2, #15
    69b0:	4213      	tst	r3, r2
    69b2:	d004      	beq.n	69be <__aeabi_fadd+0x28e>
    69b4:	08fe      	lsrs	r6, r7, #3
    69b6:	4216      	tst	r6, r2
    69b8:	d101      	bne.n	69be <__aeabi_fadd+0x28e>
    69ba:	1c33      	adds	r3, r6, #0
    69bc:	1c0d      	adds	r5, r1, #0
    69be:	00db      	lsls	r3, r3, #3
    69c0:	24ff      	movs	r4, #255	; 0xff
    69c2:	e6cb      	b.n	675c <__aeabi_fadd+0x2c>
    69c4:	2b00      	cmp	r3, #0
    69c6:	d00d      	beq.n	69e4 <__aeabi_fadd+0x2b4>
    69c8:	24ff      	movs	r4, #255	; 0xff
    69ca:	2f00      	cmp	r7, #0
    69cc:	d100      	bne.n	69d0 <__aeabi_fadd+0x2a0>
    69ce:	e6c5      	b.n	675c <__aeabi_fadd+0x2c>
    69d0:	2280      	movs	r2, #128	; 0x80
    69d2:	08db      	lsrs	r3, r3, #3
    69d4:	03d2      	lsls	r2, r2, #15
    69d6:	4213      	tst	r3, r2
    69d8:	d0f1      	beq.n	69be <__aeabi_fadd+0x28e>
    69da:	08fe      	lsrs	r6, r7, #3
    69dc:	4216      	tst	r6, r2
    69de:	d1ee      	bne.n	69be <__aeabi_fadd+0x28e>
    69e0:	1c33      	adds	r3, r6, #0
    69e2:	e7ec      	b.n	69be <__aeabi_fadd+0x28e>
    69e4:	1c3b      	adds	r3, r7, #0
    69e6:	24ff      	movs	r4, #255	; 0xff
    69e8:	e6b8      	b.n	675c <__aeabi_fadd+0x2c>
    69ea:	1c3b      	adds	r3, r7, #0
    69ec:	1c14      	adds	r4, r2, #0
    69ee:	e6b5      	b.n	675c <__aeabi_fadd+0x2c>
    69f0:	1c23      	adds	r3, r4, #0
    69f2:	2000      	movs	r0, #0
    69f4:	e6e4      	b.n	67c0 <__aeabi_fadd+0x90>
    69f6:	2380      	movs	r3, #128	; 0x80
    69f8:	2000      	movs	r0, #0
    69fa:	049b      	lsls	r3, r3, #18
    69fc:	24ff      	movs	r4, #255	; 0xff
    69fe:	e6df      	b.n	67c0 <__aeabi_fadd+0x90>
    6a00:	1c1e      	adds	r6, r3, #0
    6a02:	2420      	movs	r4, #32
    6a04:	40ce      	lsrs	r6, r1
    6a06:	1a61      	subs	r1, r4, r1
    6a08:	408b      	lsls	r3, r1
    6a0a:	1e59      	subs	r1, r3, #1
    6a0c:	418b      	sbcs	r3, r1
    6a0e:	4333      	orrs	r3, r6
    6a10:	e79f      	b.n	6952 <__aeabi_fadd+0x222>
    6a12:	1c3b      	adds	r3, r7, #0
    6a14:	e6a2      	b.n	675c <__aeabi_fadd+0x2c>
    6a16:	1e13      	subs	r3, r2, #0
    6a18:	d000      	beq.n	6a1c <__aeabi_fadd+0x2ec>
    6a1a:	e6ce      	b.n	67ba <__aeabi_fadd+0x8a>
    6a1c:	2300      	movs	r3, #0
    6a1e:	2000      	movs	r0, #0
    6a20:	e6ce      	b.n	67c0 <__aeabi_fadd+0x90>
    6a22:	46c0      	nop			; (mov r8, r8)
    6a24:	fbffffff 	.word	0xfbffffff

00006a28 <__aeabi_fdiv>:
    6a28:	b5f0      	push	{r4, r5, r6, r7, lr}
    6a2a:	4656      	mov	r6, sl
    6a2c:	464d      	mov	r5, r9
    6a2e:	465f      	mov	r7, fp
    6a30:	4644      	mov	r4, r8
    6a32:	b4f0      	push	{r4, r5, r6, r7}
    6a34:	0243      	lsls	r3, r0, #9
    6a36:	0045      	lsls	r5, r0, #1
    6a38:	0fc7      	lsrs	r7, r0, #31
    6a3a:	b083      	sub	sp, #12
    6a3c:	468a      	mov	sl, r1
    6a3e:	0a5c      	lsrs	r4, r3, #9
    6a40:	0e2e      	lsrs	r6, r5, #24
    6a42:	46b9      	mov	r9, r7
    6a44:	d041      	beq.n	6aca <__aeabi_fdiv+0xa2>
    6a46:	2eff      	cmp	r6, #255	; 0xff
    6a48:	d026      	beq.n	6a98 <__aeabi_fdiv+0x70>
    6a4a:	2380      	movs	r3, #128	; 0x80
    6a4c:	041b      	lsls	r3, r3, #16
    6a4e:	4323      	orrs	r3, r4
    6a50:	00dc      	lsls	r4, r3, #3
    6a52:	2300      	movs	r3, #0
    6a54:	4698      	mov	r8, r3
    6a56:	469b      	mov	fp, r3
    6a58:	3e7f      	subs	r6, #127	; 0x7f
    6a5a:	4653      	mov	r3, sl
    6a5c:	025b      	lsls	r3, r3, #9
    6a5e:	0a5d      	lsrs	r5, r3, #9
    6a60:	4653      	mov	r3, sl
    6a62:	005a      	lsls	r2, r3, #1
    6a64:	0fdb      	lsrs	r3, r3, #31
    6a66:	0e12      	lsrs	r2, r2, #24
    6a68:	469a      	mov	sl, r3
    6a6a:	d039      	beq.n	6ae0 <__aeabi_fdiv+0xb8>
    6a6c:	2aff      	cmp	r2, #255	; 0xff
    6a6e:	d033      	beq.n	6ad8 <__aeabi_fdiv+0xb0>
    6a70:	2380      	movs	r3, #128	; 0x80
    6a72:	041b      	lsls	r3, r3, #16
    6a74:	432b      	orrs	r3, r5
    6a76:	00dd      	lsls	r5, r3, #3
    6a78:	2300      	movs	r3, #0
    6a7a:	3a7f      	subs	r2, #127	; 0x7f
    6a7c:	4651      	mov	r1, sl
    6a7e:	1ab2      	subs	r2, r6, r2
    6a80:	4646      	mov	r6, r8
    6a82:	4079      	eors	r1, r7
    6a84:	1c08      	adds	r0, r1, #0
    6a86:	9201      	str	r2, [sp, #4]
    6a88:	431e      	orrs	r6, r3
    6a8a:	2e0f      	cmp	r6, #15
    6a8c:	d900      	bls.n	6a90 <__aeabi_fdiv+0x68>
    6a8e:	e076      	b.n	6b7e <__aeabi_fdiv+0x156>
    6a90:	4a7e      	ldr	r2, [pc, #504]	; (6c8c <__aeabi_fdiv+0x264>)
    6a92:	00b6      	lsls	r6, r6, #2
    6a94:	5996      	ldr	r6, [r2, r6]
    6a96:	46b7      	mov	pc, r6
    6a98:	2c00      	cmp	r4, #0
    6a9a:	d130      	bne.n	6afe <__aeabi_fdiv+0xd6>
    6a9c:	2308      	movs	r3, #8
    6a9e:	4698      	mov	r8, r3
    6aa0:	3b06      	subs	r3, #6
    6aa2:	469b      	mov	fp, r3
    6aa4:	e7d9      	b.n	6a5a <__aeabi_fdiv+0x32>
    6aa6:	2380      	movs	r3, #128	; 0x80
    6aa8:	2100      	movs	r1, #0
    6aaa:	03db      	lsls	r3, r3, #15
    6aac:	24ff      	movs	r4, #255	; 0xff
    6aae:	025b      	lsls	r3, r3, #9
    6ab0:	05e4      	lsls	r4, r4, #23
    6ab2:	0a5b      	lsrs	r3, r3, #9
    6ab4:	07c9      	lsls	r1, r1, #31
    6ab6:	4323      	orrs	r3, r4
    6ab8:	430b      	orrs	r3, r1
    6aba:	1c18      	adds	r0, r3, #0
    6abc:	b003      	add	sp, #12
    6abe:	bc3c      	pop	{r2, r3, r4, r5}
    6ac0:	4690      	mov	r8, r2
    6ac2:	4699      	mov	r9, r3
    6ac4:	46a2      	mov	sl, r4
    6ac6:	46ab      	mov	fp, r5
    6ac8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6aca:	2c00      	cmp	r4, #0
    6acc:	d128      	bne.n	6b20 <__aeabi_fdiv+0xf8>
    6ace:	2304      	movs	r3, #4
    6ad0:	4698      	mov	r8, r3
    6ad2:	3b03      	subs	r3, #3
    6ad4:	469b      	mov	fp, r3
    6ad6:	e7c0      	b.n	6a5a <__aeabi_fdiv+0x32>
    6ad8:	2d00      	cmp	r5, #0
    6ada:	d11f      	bne.n	6b1c <__aeabi_fdiv+0xf4>
    6adc:	2302      	movs	r3, #2
    6ade:	e002      	b.n	6ae6 <__aeabi_fdiv+0xbe>
    6ae0:	2d00      	cmp	r5, #0
    6ae2:	d111      	bne.n	6b08 <__aeabi_fdiv+0xe0>
    6ae4:	2301      	movs	r3, #1
    6ae6:	1ab2      	subs	r2, r6, r2
    6ae8:	4650      	mov	r0, sl
    6aea:	4646      	mov	r6, r8
    6aec:	4078      	eors	r0, r7
    6aee:	9201      	str	r2, [sp, #4]
    6af0:	431e      	orrs	r6, r3
    6af2:	2e0f      	cmp	r6, #15
    6af4:	d827      	bhi.n	6b46 <__aeabi_fdiv+0x11e>
    6af6:	4966      	ldr	r1, [pc, #408]	; (6c90 <__aeabi_fdiv+0x268>)
    6af8:	00b6      	lsls	r6, r6, #2
    6afa:	5989      	ldr	r1, [r1, r6]
    6afc:	468f      	mov	pc, r1
    6afe:	230c      	movs	r3, #12
    6b00:	4698      	mov	r8, r3
    6b02:	3b09      	subs	r3, #9
    6b04:	469b      	mov	fp, r3
    6b06:	e7a8      	b.n	6a5a <__aeabi_fdiv+0x32>
    6b08:	1c28      	adds	r0, r5, #0
    6b0a:	f002 fbe1 	bl	92d0 <__clzsi2>
    6b0e:	2276      	movs	r2, #118	; 0x76
    6b10:	1f43      	subs	r3, r0, #5
    6b12:	4252      	negs	r2, r2
    6b14:	409d      	lsls	r5, r3
    6b16:	1a12      	subs	r2, r2, r0
    6b18:	2300      	movs	r3, #0
    6b1a:	e7af      	b.n	6a7c <__aeabi_fdiv+0x54>
    6b1c:	2303      	movs	r3, #3
    6b1e:	e7ad      	b.n	6a7c <__aeabi_fdiv+0x54>
    6b20:	1c20      	adds	r0, r4, #0
    6b22:	f002 fbd5 	bl	92d0 <__clzsi2>
    6b26:	1f43      	subs	r3, r0, #5
    6b28:	409c      	lsls	r4, r3
    6b2a:	2376      	movs	r3, #118	; 0x76
    6b2c:	425b      	negs	r3, r3
    6b2e:	1a1e      	subs	r6, r3, r0
    6b30:	2300      	movs	r3, #0
    6b32:	4698      	mov	r8, r3
    6b34:	469b      	mov	fp, r3
    6b36:	e790      	b.n	6a5a <__aeabi_fdiv+0x32>
    6b38:	2500      	movs	r5, #0
    6b3a:	46d1      	mov	r9, sl
    6b3c:	469b      	mov	fp, r3
    6b3e:	465b      	mov	r3, fp
    6b40:	4648      	mov	r0, r9
    6b42:	2b02      	cmp	r3, #2
    6b44:	d16f      	bne.n	6c26 <__aeabi_fdiv+0x1fe>
    6b46:	2101      	movs	r1, #1
    6b48:	24ff      	movs	r4, #255	; 0xff
    6b4a:	4001      	ands	r1, r0
    6b4c:	2300      	movs	r3, #0
    6b4e:	e7ae      	b.n	6aae <__aeabi_fdiv+0x86>
    6b50:	237e      	movs	r3, #126	; 0x7e
    6b52:	9a01      	ldr	r2, [sp, #4]
    6b54:	425b      	negs	r3, r3
    6b56:	1a9b      	subs	r3, r3, r2
    6b58:	2b1b      	cmp	r3, #27
    6b5a:	dd6d      	ble.n	6c38 <__aeabi_fdiv+0x210>
    6b5c:	2101      	movs	r1, #1
    6b5e:	464b      	mov	r3, r9
    6b60:	4019      	ands	r1, r3
    6b62:	2400      	movs	r4, #0
    6b64:	2300      	movs	r3, #0
    6b66:	e7a2      	b.n	6aae <__aeabi_fdiv+0x86>
    6b68:	2380      	movs	r3, #128	; 0x80
    6b6a:	03db      	lsls	r3, r3, #15
    6b6c:	421c      	tst	r4, r3
    6b6e:	d149      	bne.n	6c04 <__aeabi_fdiv+0x1dc>
    6b70:	2380      	movs	r3, #128	; 0x80
    6b72:	03db      	lsls	r3, r3, #15
    6b74:	4323      	orrs	r3, r4
    6b76:	025b      	lsls	r3, r3, #9
    6b78:	0a5b      	lsrs	r3, r3, #9
    6b7a:	1c39      	adds	r1, r7, #0
    6b7c:	e796      	b.n	6aac <__aeabi_fdiv+0x84>
    6b7e:	0163      	lsls	r3, r4, #5
    6b80:	016d      	lsls	r5, r5, #5
    6b82:	42ab      	cmp	r3, r5
    6b84:	d337      	bcc.n	6bf6 <__aeabi_fdiv+0x1ce>
    6b86:	4689      	mov	r9, r1
    6b88:	201a      	movs	r0, #26
    6b8a:	2101      	movs	r1, #1
    6b8c:	1b5b      	subs	r3, r3, r5
    6b8e:	2401      	movs	r4, #1
    6b90:	1c1e      	adds	r6, r3, #0
    6b92:	0049      	lsls	r1, r1, #1
    6b94:	005b      	lsls	r3, r3, #1
    6b96:	2e00      	cmp	r6, #0
    6b98:	db01      	blt.n	6b9e <__aeabi_fdiv+0x176>
    6b9a:	42ab      	cmp	r3, r5
    6b9c:	d301      	bcc.n	6ba2 <__aeabi_fdiv+0x17a>
    6b9e:	1b5b      	subs	r3, r3, r5
    6ba0:	4321      	orrs	r1, r4
    6ba2:	3801      	subs	r0, #1
    6ba4:	2800      	cmp	r0, #0
    6ba6:	d1f3      	bne.n	6b90 <__aeabi_fdiv+0x168>
    6ba8:	1e58      	subs	r0, r3, #1
    6baa:	4183      	sbcs	r3, r0
    6bac:	430b      	orrs	r3, r1
    6bae:	1c1d      	adds	r5, r3, #0
    6bb0:	9c01      	ldr	r4, [sp, #4]
    6bb2:	347f      	adds	r4, #127	; 0x7f
    6bb4:	2c00      	cmp	r4, #0
    6bb6:	ddcb      	ble.n	6b50 <__aeabi_fdiv+0x128>
    6bb8:	076b      	lsls	r3, r5, #29
    6bba:	d004      	beq.n	6bc6 <__aeabi_fdiv+0x19e>
    6bbc:	230f      	movs	r3, #15
    6bbe:	402b      	ands	r3, r5
    6bc0:	2b04      	cmp	r3, #4
    6bc2:	d000      	beq.n	6bc6 <__aeabi_fdiv+0x19e>
    6bc4:	3504      	adds	r5, #4
    6bc6:	012b      	lsls	r3, r5, #4
    6bc8:	d504      	bpl.n	6bd4 <__aeabi_fdiv+0x1ac>
    6bca:	9a01      	ldr	r2, [sp, #4]
    6bcc:	4b31      	ldr	r3, [pc, #196]	; (6c94 <__aeabi_fdiv+0x26c>)
    6bce:	3280      	adds	r2, #128	; 0x80
    6bd0:	1c14      	adds	r4, r2, #0
    6bd2:	401d      	ands	r5, r3
    6bd4:	2cfe      	cmp	r4, #254	; 0xfe
    6bd6:	dd07      	ble.n	6be8 <__aeabi_fdiv+0x1c0>
    6bd8:	464b      	mov	r3, r9
    6bda:	2101      	movs	r1, #1
    6bdc:	24ff      	movs	r4, #255	; 0xff
    6bde:	4019      	ands	r1, r3
    6be0:	2300      	movs	r3, #0
    6be2:	e764      	b.n	6aae <__aeabi_fdiv+0x86>
    6be4:	1c25      	adds	r5, r4, #0
    6be6:	e7aa      	b.n	6b3e <__aeabi_fdiv+0x116>
    6be8:	2101      	movs	r1, #1
    6bea:	464a      	mov	r2, r9
    6bec:	01ab      	lsls	r3, r5, #6
    6bee:	0a5b      	lsrs	r3, r3, #9
    6bf0:	b2e4      	uxtb	r4, r4
    6bf2:	4011      	ands	r1, r2
    6bf4:	e75b      	b.n	6aae <__aeabi_fdiv+0x86>
    6bf6:	9a01      	ldr	r2, [sp, #4]
    6bf8:	4689      	mov	r9, r1
    6bfa:	3a01      	subs	r2, #1
    6bfc:	9201      	str	r2, [sp, #4]
    6bfe:	201b      	movs	r0, #27
    6c00:	2100      	movs	r1, #0
    6c02:	e7c4      	b.n	6b8e <__aeabi_fdiv+0x166>
    6c04:	421d      	tst	r5, r3
    6c06:	d007      	beq.n	6c18 <__aeabi_fdiv+0x1f0>
    6c08:	4323      	orrs	r3, r4
    6c0a:	025b      	lsls	r3, r3, #9
    6c0c:	0a5b      	lsrs	r3, r3, #9
    6c0e:	1c39      	adds	r1, r7, #0
    6c10:	e74c      	b.n	6aac <__aeabi_fdiv+0x84>
    6c12:	2500      	movs	r5, #0
    6c14:	0263      	lsls	r3, r4, #9
    6c16:	d5ab      	bpl.n	6b70 <__aeabi_fdiv+0x148>
    6c18:	2380      	movs	r3, #128	; 0x80
    6c1a:	03db      	lsls	r3, r3, #15
    6c1c:	432b      	orrs	r3, r5
    6c1e:	025b      	lsls	r3, r3, #9
    6c20:	0a5b      	lsrs	r3, r3, #9
    6c22:	4651      	mov	r1, sl
    6c24:	e742      	b.n	6aac <__aeabi_fdiv+0x84>
    6c26:	2b03      	cmp	r3, #3
    6c28:	d025      	beq.n	6c76 <__aeabi_fdiv+0x24e>
    6c2a:	2b01      	cmp	r3, #1
    6c2c:	d1c0      	bne.n	6bb0 <__aeabi_fdiv+0x188>
    6c2e:	2101      	movs	r1, #1
    6c30:	2400      	movs	r4, #0
    6c32:	4001      	ands	r1, r0
    6c34:	2300      	movs	r3, #0
    6c36:	e73a      	b.n	6aae <__aeabi_fdiv+0x86>
    6c38:	1c29      	adds	r1, r5, #0
    6c3a:	40d9      	lsrs	r1, r3
    6c3c:	1c2b      	adds	r3, r5, #0
    6c3e:	9a01      	ldr	r2, [sp, #4]
    6c40:	329e      	adds	r2, #158	; 0x9e
    6c42:	4093      	lsls	r3, r2
    6c44:	1e5d      	subs	r5, r3, #1
    6c46:	41ab      	sbcs	r3, r5
    6c48:	430b      	orrs	r3, r1
    6c4a:	075a      	lsls	r2, r3, #29
    6c4c:	d004      	beq.n	6c58 <__aeabi_fdiv+0x230>
    6c4e:	220f      	movs	r2, #15
    6c50:	401a      	ands	r2, r3
    6c52:	2a04      	cmp	r2, #4
    6c54:	d000      	beq.n	6c58 <__aeabi_fdiv+0x230>
    6c56:	3304      	adds	r3, #4
    6c58:	015a      	lsls	r2, r3, #5
    6c5a:	d505      	bpl.n	6c68 <__aeabi_fdiv+0x240>
    6c5c:	464b      	mov	r3, r9
    6c5e:	2101      	movs	r1, #1
    6c60:	2401      	movs	r4, #1
    6c62:	4019      	ands	r1, r3
    6c64:	2300      	movs	r3, #0
    6c66:	e722      	b.n	6aae <__aeabi_fdiv+0x86>
    6c68:	2101      	movs	r1, #1
    6c6a:	464a      	mov	r2, r9
    6c6c:	019b      	lsls	r3, r3, #6
    6c6e:	0a5b      	lsrs	r3, r3, #9
    6c70:	4011      	ands	r1, r2
    6c72:	2400      	movs	r4, #0
    6c74:	e71b      	b.n	6aae <__aeabi_fdiv+0x86>
    6c76:	2380      	movs	r3, #128	; 0x80
    6c78:	2101      	movs	r1, #1
    6c7a:	464a      	mov	r2, r9
    6c7c:	03db      	lsls	r3, r3, #15
    6c7e:	432b      	orrs	r3, r5
    6c80:	025b      	lsls	r3, r3, #9
    6c82:	400a      	ands	r2, r1
    6c84:	0a5b      	lsrs	r3, r3, #9
    6c86:	1c11      	adds	r1, r2, #0
    6c88:	e710      	b.n	6aac <__aeabi_fdiv+0x84>
    6c8a:	46c0      	nop			; (mov r8, r8)
    6c8c:	0000f538 	.word	0x0000f538
    6c90:	0000f578 	.word	0x0000f578
    6c94:	f7ffffff 	.word	0xf7ffffff

00006c98 <__eqsf2>:
    6c98:	0243      	lsls	r3, r0, #9
    6c9a:	b570      	push	{r4, r5, r6, lr}
    6c9c:	0042      	lsls	r2, r0, #1
    6c9e:	004c      	lsls	r4, r1, #1
    6ca0:	0a5d      	lsrs	r5, r3, #9
    6ca2:	0fc3      	lsrs	r3, r0, #31
    6ca4:	0248      	lsls	r0, r1, #9
    6ca6:	0e12      	lsrs	r2, r2, #24
    6ca8:	0a46      	lsrs	r6, r0, #9
    6caa:	0e24      	lsrs	r4, r4, #24
    6cac:	0fc9      	lsrs	r1, r1, #31
    6cae:	2aff      	cmp	r2, #255	; 0xff
    6cb0:	d005      	beq.n	6cbe <__eqsf2+0x26>
    6cb2:	2cff      	cmp	r4, #255	; 0xff
    6cb4:	d008      	beq.n	6cc8 <__eqsf2+0x30>
    6cb6:	2001      	movs	r0, #1
    6cb8:	42a2      	cmp	r2, r4
    6cba:	d00b      	beq.n	6cd4 <__eqsf2+0x3c>
    6cbc:	bd70      	pop	{r4, r5, r6, pc}
    6cbe:	2001      	movs	r0, #1
    6cc0:	2d00      	cmp	r5, #0
    6cc2:	d1fb      	bne.n	6cbc <__eqsf2+0x24>
    6cc4:	2cff      	cmp	r4, #255	; 0xff
    6cc6:	d1f6      	bne.n	6cb6 <__eqsf2+0x1e>
    6cc8:	2001      	movs	r0, #1
    6cca:	2e00      	cmp	r6, #0
    6ccc:	d1f6      	bne.n	6cbc <__eqsf2+0x24>
    6cce:	2001      	movs	r0, #1
    6cd0:	42a2      	cmp	r2, r4
    6cd2:	d1f3      	bne.n	6cbc <__eqsf2+0x24>
    6cd4:	42b5      	cmp	r5, r6
    6cd6:	d1f1      	bne.n	6cbc <__eqsf2+0x24>
    6cd8:	428b      	cmp	r3, r1
    6cda:	d005      	beq.n	6ce8 <__eqsf2+0x50>
    6cdc:	2a00      	cmp	r2, #0
    6cde:	d1ed      	bne.n	6cbc <__eqsf2+0x24>
    6ce0:	1c28      	adds	r0, r5, #0
    6ce2:	1e43      	subs	r3, r0, #1
    6ce4:	4198      	sbcs	r0, r3
    6ce6:	e7e9      	b.n	6cbc <__eqsf2+0x24>
    6ce8:	2000      	movs	r0, #0
    6cea:	e7e7      	b.n	6cbc <__eqsf2+0x24>

00006cec <__gesf2>:
    6cec:	b5f0      	push	{r4, r5, r6, r7, lr}
    6cee:	0243      	lsls	r3, r0, #9
    6cf0:	024d      	lsls	r5, r1, #9
    6cf2:	004a      	lsls	r2, r1, #1
    6cf4:	0044      	lsls	r4, r0, #1
    6cf6:	0a5e      	lsrs	r6, r3, #9
    6cf8:	0e24      	lsrs	r4, r4, #24
    6cfa:	0fc3      	lsrs	r3, r0, #31
    6cfc:	0a6d      	lsrs	r5, r5, #9
    6cfe:	0e12      	lsrs	r2, r2, #24
    6d00:	0fc9      	lsrs	r1, r1, #31
    6d02:	2cff      	cmp	r4, #255	; 0xff
    6d04:	d00d      	beq.n	6d22 <__gesf2+0x36>
    6d06:	2aff      	cmp	r2, #255	; 0xff
    6d08:	d031      	beq.n	6d6e <__gesf2+0x82>
    6d0a:	2c00      	cmp	r4, #0
    6d0c:	d10d      	bne.n	6d2a <__gesf2+0x3e>
    6d0e:	4277      	negs	r7, r6
    6d10:	4177      	adcs	r7, r6
    6d12:	2a00      	cmp	r2, #0
    6d14:	d123      	bne.n	6d5e <__gesf2+0x72>
    6d16:	2d00      	cmp	r5, #0
    6d18:	d121      	bne.n	6d5e <__gesf2+0x72>
    6d1a:	2000      	movs	r0, #0
    6d1c:	2f00      	cmp	r7, #0
    6d1e:	d10b      	bne.n	6d38 <__gesf2+0x4c>
    6d20:	e007      	b.n	6d32 <__gesf2+0x46>
    6d22:	2e00      	cmp	r6, #0
    6d24:	d128      	bne.n	6d78 <__gesf2+0x8c>
    6d26:	2aff      	cmp	r2, #255	; 0xff
    6d28:	d021      	beq.n	6d6e <__gesf2+0x82>
    6d2a:	2a00      	cmp	r2, #0
    6d2c:	d005      	beq.n	6d3a <__gesf2+0x4e>
    6d2e:	428b      	cmp	r3, r1
    6d30:	d007      	beq.n	6d42 <__gesf2+0x56>
    6d32:	4258      	negs	r0, r3
    6d34:	2301      	movs	r3, #1
    6d36:	4318      	orrs	r0, r3
    6d38:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6d3a:	2d00      	cmp	r5, #0
    6d3c:	d0f9      	beq.n	6d32 <__gesf2+0x46>
    6d3e:	428b      	cmp	r3, r1
    6d40:	d1f7      	bne.n	6d32 <__gesf2+0x46>
    6d42:	4294      	cmp	r4, r2
    6d44:	dcf5      	bgt.n	6d32 <__gesf2+0x46>
    6d46:	db04      	blt.n	6d52 <__gesf2+0x66>
    6d48:	42ae      	cmp	r6, r5
    6d4a:	d8f2      	bhi.n	6d32 <__gesf2+0x46>
    6d4c:	2000      	movs	r0, #0
    6d4e:	42ae      	cmp	r6, r5
    6d50:	d2f2      	bcs.n	6d38 <__gesf2+0x4c>
    6d52:	4258      	negs	r0, r3
    6d54:	4143      	adcs	r3, r0
    6d56:	2001      	movs	r0, #1
    6d58:	425b      	negs	r3, r3
    6d5a:	4318      	orrs	r0, r3
    6d5c:	e7ec      	b.n	6d38 <__gesf2+0x4c>
    6d5e:	2f00      	cmp	r7, #0
    6d60:	d0e5      	beq.n	6d2e <__gesf2+0x42>
    6d62:	4248      	negs	r0, r1
    6d64:	4141      	adcs	r1, r0
    6d66:	2001      	movs	r0, #1
    6d68:	4249      	negs	r1, r1
    6d6a:	4308      	orrs	r0, r1
    6d6c:	e7e4      	b.n	6d38 <__gesf2+0x4c>
    6d6e:	2d00      	cmp	r5, #0
    6d70:	d102      	bne.n	6d78 <__gesf2+0x8c>
    6d72:	2c00      	cmp	r4, #0
    6d74:	d0cb      	beq.n	6d0e <__gesf2+0x22>
    6d76:	e7da      	b.n	6d2e <__gesf2+0x42>
    6d78:	2002      	movs	r0, #2
    6d7a:	4240      	negs	r0, r0
    6d7c:	e7dc      	b.n	6d38 <__gesf2+0x4c>
    6d7e:	46c0      	nop			; (mov r8, r8)

00006d80 <__lesf2>:
    6d80:	0243      	lsls	r3, r0, #9
    6d82:	b5f0      	push	{r4, r5, r6, r7, lr}
    6d84:	0042      	lsls	r2, r0, #1
    6d86:	004c      	lsls	r4, r1, #1
    6d88:	0a5e      	lsrs	r6, r3, #9
    6d8a:	0fc3      	lsrs	r3, r0, #31
    6d8c:	0248      	lsls	r0, r1, #9
    6d8e:	0e12      	lsrs	r2, r2, #24
    6d90:	0a45      	lsrs	r5, r0, #9
    6d92:	0e24      	lsrs	r4, r4, #24
    6d94:	0fc9      	lsrs	r1, r1, #31
    6d96:	2aff      	cmp	r2, #255	; 0xff
    6d98:	d00f      	beq.n	6dba <__lesf2+0x3a>
    6d9a:	2cff      	cmp	r4, #255	; 0xff
    6d9c:	d01a      	beq.n	6dd4 <__lesf2+0x54>
    6d9e:	2a00      	cmp	r2, #0
    6da0:	d110      	bne.n	6dc4 <__lesf2+0x44>
    6da2:	4277      	negs	r7, r6
    6da4:	4177      	adcs	r7, r6
    6da6:	2c00      	cmp	r4, #0
    6da8:	d029      	beq.n	6dfe <__lesf2+0x7e>
    6daa:	2f00      	cmp	r7, #0
    6dac:	d017      	beq.n	6dde <__lesf2+0x5e>
    6dae:	4248      	negs	r0, r1
    6db0:	4141      	adcs	r1, r0
    6db2:	2001      	movs	r0, #1
    6db4:	4249      	negs	r1, r1
    6db6:	4308      	orrs	r0, r1
    6db8:	e00b      	b.n	6dd2 <__lesf2+0x52>
    6dba:	2002      	movs	r0, #2
    6dbc:	2e00      	cmp	r6, #0
    6dbe:	d108      	bne.n	6dd2 <__lesf2+0x52>
    6dc0:	2cff      	cmp	r4, #255	; 0xff
    6dc2:	d007      	beq.n	6dd4 <__lesf2+0x54>
    6dc4:	2c00      	cmp	r4, #0
    6dc6:	d10a      	bne.n	6dde <__lesf2+0x5e>
    6dc8:	2d00      	cmp	r5, #0
    6dca:	d108      	bne.n	6dde <__lesf2+0x5e>
    6dcc:	4258      	negs	r0, r3
    6dce:	2301      	movs	r3, #1
    6dd0:	4318      	orrs	r0, r3
    6dd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6dd4:	2002      	movs	r0, #2
    6dd6:	2d00      	cmp	r5, #0
    6dd8:	d1fb      	bne.n	6dd2 <__lesf2+0x52>
    6dda:	2a00      	cmp	r2, #0
    6ddc:	d0e1      	beq.n	6da2 <__lesf2+0x22>
    6dde:	428b      	cmp	r3, r1
    6de0:	d1f4      	bne.n	6dcc <__lesf2+0x4c>
    6de2:	42a2      	cmp	r2, r4
    6de4:	dcf2      	bgt.n	6dcc <__lesf2+0x4c>
    6de6:	db04      	blt.n	6df2 <__lesf2+0x72>
    6de8:	42ae      	cmp	r6, r5
    6dea:	d8ef      	bhi.n	6dcc <__lesf2+0x4c>
    6dec:	2000      	movs	r0, #0
    6dee:	42ae      	cmp	r6, r5
    6df0:	d2ef      	bcs.n	6dd2 <__lesf2+0x52>
    6df2:	4258      	negs	r0, r3
    6df4:	4143      	adcs	r3, r0
    6df6:	2001      	movs	r0, #1
    6df8:	425b      	negs	r3, r3
    6dfa:	4318      	orrs	r0, r3
    6dfc:	e7e9      	b.n	6dd2 <__lesf2+0x52>
    6dfe:	2d00      	cmp	r5, #0
    6e00:	d1d3      	bne.n	6daa <__lesf2+0x2a>
    6e02:	2000      	movs	r0, #0
    6e04:	2f00      	cmp	r7, #0
    6e06:	d1e4      	bne.n	6dd2 <__lesf2+0x52>
    6e08:	e7e0      	b.n	6dcc <__lesf2+0x4c>
    6e0a:	46c0      	nop			; (mov r8, r8)

00006e0c <__aeabi_fmul>:
    6e0c:	b5f0      	push	{r4, r5, r6, r7, lr}
    6e0e:	465f      	mov	r7, fp
    6e10:	4656      	mov	r6, sl
    6e12:	464d      	mov	r5, r9
    6e14:	4644      	mov	r4, r8
    6e16:	b4f0      	push	{r4, r5, r6, r7}
    6e18:	0245      	lsls	r5, r0, #9
    6e1a:	0046      	lsls	r6, r0, #1
    6e1c:	0fc4      	lsrs	r4, r0, #31
    6e1e:	b083      	sub	sp, #12
    6e20:	1c0f      	adds	r7, r1, #0
    6e22:	0a6d      	lsrs	r5, r5, #9
    6e24:	0e36      	lsrs	r6, r6, #24
    6e26:	46a3      	mov	fp, r4
    6e28:	d045      	beq.n	6eb6 <__aeabi_fmul+0xaa>
    6e2a:	2eff      	cmp	r6, #255	; 0xff
    6e2c:	d025      	beq.n	6e7a <__aeabi_fmul+0x6e>
    6e2e:	2380      	movs	r3, #128	; 0x80
    6e30:	041b      	lsls	r3, r3, #16
    6e32:	431d      	orrs	r5, r3
    6e34:	2300      	movs	r3, #0
    6e36:	469a      	mov	sl, r3
    6e38:	00ed      	lsls	r5, r5, #3
    6e3a:	3e7f      	subs	r6, #127	; 0x7f
    6e3c:	9301      	str	r3, [sp, #4]
    6e3e:	027b      	lsls	r3, r7, #9
    6e40:	0a5b      	lsrs	r3, r3, #9
    6e42:	4698      	mov	r8, r3
    6e44:	0078      	lsls	r0, r7, #1
    6e46:	0ffb      	lsrs	r3, r7, #31
    6e48:	0e00      	lsrs	r0, r0, #24
    6e4a:	4699      	mov	r9, r3
    6e4c:	d040      	beq.n	6ed0 <__aeabi_fmul+0xc4>
    6e4e:	28ff      	cmp	r0, #255	; 0xff
    6e50:	d038      	beq.n	6ec4 <__aeabi_fmul+0xb8>
    6e52:	2380      	movs	r3, #128	; 0x80
    6e54:	4642      	mov	r2, r8
    6e56:	041b      	lsls	r3, r3, #16
    6e58:	4313      	orrs	r3, r2
    6e5a:	00db      	lsls	r3, r3, #3
    6e5c:	4698      	mov	r8, r3
    6e5e:	2300      	movs	r3, #0
    6e60:	387f      	subs	r0, #127	; 0x7f
    6e62:	464a      	mov	r2, r9
    6e64:	9f01      	ldr	r7, [sp, #4]
    6e66:	1830      	adds	r0, r6, r0
    6e68:	4062      	eors	r2, r4
    6e6a:	1c41      	adds	r1, r0, #1
    6e6c:	431f      	orrs	r7, r3
    6e6e:	2f0f      	cmp	r7, #15
    6e70:	d869      	bhi.n	6f46 <__aeabi_fmul+0x13a>
    6e72:	4e7d      	ldr	r6, [pc, #500]	; (7068 <__aeabi_fmul+0x25c>)
    6e74:	00bf      	lsls	r7, r7, #2
    6e76:	59f6      	ldr	r6, [r6, r7]
    6e78:	46b7      	mov	pc, r6
    6e7a:	2d00      	cmp	r5, #0
    6e7c:	d145      	bne.n	6f0a <__aeabi_fmul+0xfe>
    6e7e:	2308      	movs	r3, #8
    6e80:	9301      	str	r3, [sp, #4]
    6e82:	3b06      	subs	r3, #6
    6e84:	469a      	mov	sl, r3
    6e86:	e7da      	b.n	6e3e <__aeabi_fmul+0x32>
    6e88:	4693      	mov	fp, r2
    6e8a:	4653      	mov	r3, sl
    6e8c:	2b02      	cmp	r3, #2
    6e8e:	d12f      	bne.n	6ef0 <__aeabi_fmul+0xe4>
    6e90:	465b      	mov	r3, fp
    6e92:	2401      	movs	r4, #1
    6e94:	2500      	movs	r5, #0
    6e96:	401c      	ands	r4, r3
    6e98:	23ff      	movs	r3, #255	; 0xff
    6e9a:	026d      	lsls	r5, r5, #9
    6e9c:	05db      	lsls	r3, r3, #23
    6e9e:	0a6d      	lsrs	r5, r5, #9
    6ea0:	07e4      	lsls	r4, r4, #31
    6ea2:	431d      	orrs	r5, r3
    6ea4:	4325      	orrs	r5, r4
    6ea6:	1c28      	adds	r0, r5, #0
    6ea8:	b003      	add	sp, #12
    6eaa:	bc3c      	pop	{r2, r3, r4, r5}
    6eac:	4690      	mov	r8, r2
    6eae:	4699      	mov	r9, r3
    6eb0:	46a2      	mov	sl, r4
    6eb2:	46ab      	mov	fp, r5
    6eb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6eb6:	2d00      	cmp	r5, #0
    6eb8:	d12c      	bne.n	6f14 <__aeabi_fmul+0x108>
    6eba:	2304      	movs	r3, #4
    6ebc:	9301      	str	r3, [sp, #4]
    6ebe:	3b03      	subs	r3, #3
    6ec0:	469a      	mov	sl, r3
    6ec2:	e7bc      	b.n	6e3e <__aeabi_fmul+0x32>
    6ec4:	4643      	mov	r3, r8
    6ec6:	425a      	negs	r2, r3
    6ec8:	4153      	adcs	r3, r2
    6eca:	2203      	movs	r2, #3
    6ecc:	1ad3      	subs	r3, r2, r3
    6ece:	e7c8      	b.n	6e62 <__aeabi_fmul+0x56>
    6ed0:	4642      	mov	r2, r8
    6ed2:	2301      	movs	r3, #1
    6ed4:	2a00      	cmp	r2, #0
    6ed6:	d0c4      	beq.n	6e62 <__aeabi_fmul+0x56>
    6ed8:	4640      	mov	r0, r8
    6eda:	f002 f9f9 	bl	92d0 <__clzsi2>
    6ede:	4642      	mov	r2, r8
    6ee0:	1f43      	subs	r3, r0, #5
    6ee2:	409a      	lsls	r2, r3
    6ee4:	2376      	movs	r3, #118	; 0x76
    6ee6:	425b      	negs	r3, r3
    6ee8:	1a18      	subs	r0, r3, r0
    6eea:	4690      	mov	r8, r2
    6eec:	2300      	movs	r3, #0
    6eee:	e7b8      	b.n	6e62 <__aeabi_fmul+0x56>
    6ef0:	2b03      	cmp	r3, #3
    6ef2:	d100      	bne.n	6ef6 <__aeabi_fmul+0xea>
    6ef4:	e0ad      	b.n	7052 <__aeabi_fmul+0x246>
    6ef6:	2b01      	cmp	r3, #1
    6ef8:	d000      	beq.n	6efc <__aeabi_fmul+0xf0>
    6efa:	e08c      	b.n	7016 <__aeabi_fmul+0x20a>
    6efc:	465b      	mov	r3, fp
    6efe:	4654      	mov	r4, sl
    6f00:	401c      	ands	r4, r3
    6f02:	b2e4      	uxtb	r4, r4
    6f04:	2300      	movs	r3, #0
    6f06:	2500      	movs	r5, #0
    6f08:	e7c7      	b.n	6e9a <__aeabi_fmul+0x8e>
    6f0a:	230c      	movs	r3, #12
    6f0c:	9301      	str	r3, [sp, #4]
    6f0e:	3b09      	subs	r3, #9
    6f10:	469a      	mov	sl, r3
    6f12:	e794      	b.n	6e3e <__aeabi_fmul+0x32>
    6f14:	1c28      	adds	r0, r5, #0
    6f16:	f002 f9db 	bl	92d0 <__clzsi2>
    6f1a:	2676      	movs	r6, #118	; 0x76
    6f1c:	1f43      	subs	r3, r0, #5
    6f1e:	409d      	lsls	r5, r3
    6f20:	2300      	movs	r3, #0
    6f22:	4276      	negs	r6, r6
    6f24:	1a36      	subs	r6, r6, r0
    6f26:	9301      	str	r3, [sp, #4]
    6f28:	469a      	mov	sl, r3
    6f2a:	e788      	b.n	6e3e <__aeabi_fmul+0x32>
    6f2c:	2580      	movs	r5, #128	; 0x80
    6f2e:	2400      	movs	r4, #0
    6f30:	03ed      	lsls	r5, r5, #15
    6f32:	23ff      	movs	r3, #255	; 0xff
    6f34:	e7b1      	b.n	6e9a <__aeabi_fmul+0x8e>
    6f36:	4645      	mov	r5, r8
    6f38:	46cb      	mov	fp, r9
    6f3a:	469a      	mov	sl, r3
    6f3c:	e7a5      	b.n	6e8a <__aeabi_fmul+0x7e>
    6f3e:	4645      	mov	r5, r8
    6f40:	4693      	mov	fp, r2
    6f42:	469a      	mov	sl, r3
    6f44:	e7a1      	b.n	6e8a <__aeabi_fmul+0x7e>
    6f46:	4643      	mov	r3, r8
    6f48:	042c      	lsls	r4, r5, #16
    6f4a:	0c1b      	lsrs	r3, r3, #16
    6f4c:	469c      	mov	ip, r3
    6f4e:	0c23      	lsrs	r3, r4, #16
    6f50:	4644      	mov	r4, r8
    6f52:	0426      	lsls	r6, r4, #16
    6f54:	1c1c      	adds	r4, r3, #0
    6f56:	0c36      	lsrs	r6, r6, #16
    6f58:	0c2f      	lsrs	r7, r5, #16
    6f5a:	4374      	muls	r4, r6
    6f5c:	1c35      	adds	r5, r6, #0
    6f5e:	4666      	mov	r6, ip
    6f60:	437d      	muls	r5, r7
    6f62:	4373      	muls	r3, r6
    6f64:	4377      	muls	r7, r6
    6f66:	18eb      	adds	r3, r5, r3
    6f68:	0c26      	lsrs	r6, r4, #16
    6f6a:	199e      	adds	r6, r3, r6
    6f6c:	42b5      	cmp	r5, r6
    6f6e:	d903      	bls.n	6f78 <__aeabi_fmul+0x16c>
    6f70:	2380      	movs	r3, #128	; 0x80
    6f72:	025b      	lsls	r3, r3, #9
    6f74:	469c      	mov	ip, r3
    6f76:	4467      	add	r7, ip
    6f78:	0424      	lsls	r4, r4, #16
    6f7a:	0433      	lsls	r3, r6, #16
    6f7c:	0c24      	lsrs	r4, r4, #16
    6f7e:	191b      	adds	r3, r3, r4
    6f80:	019d      	lsls	r5, r3, #6
    6f82:	1e6c      	subs	r4, r5, #1
    6f84:	41a5      	sbcs	r5, r4
    6f86:	0e9b      	lsrs	r3, r3, #26
    6f88:	0c36      	lsrs	r6, r6, #16
    6f8a:	432b      	orrs	r3, r5
    6f8c:	19bd      	adds	r5, r7, r6
    6f8e:	01ad      	lsls	r5, r5, #6
    6f90:	431d      	orrs	r5, r3
    6f92:	012b      	lsls	r3, r5, #4
    6f94:	d504      	bpl.n	6fa0 <__aeabi_fmul+0x194>
    6f96:	2301      	movs	r3, #1
    6f98:	0868      	lsrs	r0, r5, #1
    6f9a:	401d      	ands	r5, r3
    6f9c:	4305      	orrs	r5, r0
    6f9e:	1c08      	adds	r0, r1, #0
    6fa0:	1c03      	adds	r3, r0, #0
    6fa2:	337f      	adds	r3, #127	; 0x7f
    6fa4:	2b00      	cmp	r3, #0
    6fa6:	dd2c      	ble.n	7002 <__aeabi_fmul+0x1f6>
    6fa8:	0769      	lsls	r1, r5, #29
    6faa:	d004      	beq.n	6fb6 <__aeabi_fmul+0x1aa>
    6fac:	210f      	movs	r1, #15
    6fae:	4029      	ands	r1, r5
    6fb0:	2904      	cmp	r1, #4
    6fb2:	d000      	beq.n	6fb6 <__aeabi_fmul+0x1aa>
    6fb4:	3504      	adds	r5, #4
    6fb6:	0129      	lsls	r1, r5, #4
    6fb8:	d503      	bpl.n	6fc2 <__aeabi_fmul+0x1b6>
    6fba:	4b2c      	ldr	r3, [pc, #176]	; (706c <__aeabi_fmul+0x260>)
    6fbc:	401d      	ands	r5, r3
    6fbe:	1c03      	adds	r3, r0, #0
    6fc0:	3380      	adds	r3, #128	; 0x80
    6fc2:	2bfe      	cmp	r3, #254	; 0xfe
    6fc4:	dd17      	ble.n	6ff6 <__aeabi_fmul+0x1ea>
    6fc6:	2401      	movs	r4, #1
    6fc8:	23ff      	movs	r3, #255	; 0xff
    6fca:	4014      	ands	r4, r2
    6fcc:	2500      	movs	r5, #0
    6fce:	e764      	b.n	6e9a <__aeabi_fmul+0x8e>
    6fd0:	2080      	movs	r0, #128	; 0x80
    6fd2:	03c0      	lsls	r0, r0, #15
    6fd4:	4205      	tst	r5, r0
    6fd6:	d009      	beq.n	6fec <__aeabi_fmul+0x1e0>
    6fd8:	4643      	mov	r3, r8
    6fda:	4203      	tst	r3, r0
    6fdc:	d106      	bne.n	6fec <__aeabi_fmul+0x1e0>
    6fde:	4645      	mov	r5, r8
    6fe0:	4305      	orrs	r5, r0
    6fe2:	026d      	lsls	r5, r5, #9
    6fe4:	0a6d      	lsrs	r5, r5, #9
    6fe6:	464c      	mov	r4, r9
    6fe8:	23ff      	movs	r3, #255	; 0xff
    6fea:	e756      	b.n	6e9a <__aeabi_fmul+0x8e>
    6fec:	4305      	orrs	r5, r0
    6fee:	026d      	lsls	r5, r5, #9
    6ff0:	0a6d      	lsrs	r5, r5, #9
    6ff2:	23ff      	movs	r3, #255	; 0xff
    6ff4:	e751      	b.n	6e9a <__aeabi_fmul+0x8e>
    6ff6:	2401      	movs	r4, #1
    6ff8:	01ad      	lsls	r5, r5, #6
    6ffa:	0a6d      	lsrs	r5, r5, #9
    6ffc:	b2db      	uxtb	r3, r3
    6ffe:	4014      	ands	r4, r2
    7000:	e74b      	b.n	6e9a <__aeabi_fmul+0x8e>
    7002:	237e      	movs	r3, #126	; 0x7e
    7004:	425b      	negs	r3, r3
    7006:	1a1b      	subs	r3, r3, r0
    7008:	2b1b      	cmp	r3, #27
    700a:	dd07      	ble.n	701c <__aeabi_fmul+0x210>
    700c:	2401      	movs	r4, #1
    700e:	2300      	movs	r3, #0
    7010:	4014      	ands	r4, r2
    7012:	2500      	movs	r5, #0
    7014:	e741      	b.n	6e9a <__aeabi_fmul+0x8e>
    7016:	1c08      	adds	r0, r1, #0
    7018:	465a      	mov	r2, fp
    701a:	e7c1      	b.n	6fa0 <__aeabi_fmul+0x194>
    701c:	309e      	adds	r0, #158	; 0x9e
    701e:	1c29      	adds	r1, r5, #0
    7020:	4085      	lsls	r5, r0
    7022:	40d9      	lsrs	r1, r3
    7024:	1e68      	subs	r0, r5, #1
    7026:	4185      	sbcs	r5, r0
    7028:	430d      	orrs	r5, r1
    702a:	076b      	lsls	r3, r5, #29
    702c:	d004      	beq.n	7038 <__aeabi_fmul+0x22c>
    702e:	230f      	movs	r3, #15
    7030:	402b      	ands	r3, r5
    7032:	2b04      	cmp	r3, #4
    7034:	d000      	beq.n	7038 <__aeabi_fmul+0x22c>
    7036:	3504      	adds	r5, #4
    7038:	016b      	lsls	r3, r5, #5
    703a:	d504      	bpl.n	7046 <__aeabi_fmul+0x23a>
    703c:	2401      	movs	r4, #1
    703e:	2301      	movs	r3, #1
    7040:	4014      	ands	r4, r2
    7042:	2500      	movs	r5, #0
    7044:	e729      	b.n	6e9a <__aeabi_fmul+0x8e>
    7046:	2401      	movs	r4, #1
    7048:	01ad      	lsls	r5, r5, #6
    704a:	0a6d      	lsrs	r5, r5, #9
    704c:	4014      	ands	r4, r2
    704e:	2300      	movs	r3, #0
    7050:	e723      	b.n	6e9a <__aeabi_fmul+0x8e>
    7052:	2380      	movs	r3, #128	; 0x80
    7054:	03db      	lsls	r3, r3, #15
    7056:	431d      	orrs	r5, r3
    7058:	2401      	movs	r4, #1
    705a:	465b      	mov	r3, fp
    705c:	026d      	lsls	r5, r5, #9
    705e:	4023      	ands	r3, r4
    7060:	1c1c      	adds	r4, r3, #0
    7062:	0a6d      	lsrs	r5, r5, #9
    7064:	23ff      	movs	r3, #255	; 0xff
    7066:	e718      	b.n	6e9a <__aeabi_fmul+0x8e>
    7068:	0000f5b8 	.word	0x0000f5b8
    706c:	f7ffffff 	.word	0xf7ffffff

00007070 <__aeabi_fsub>:
    7070:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    7072:	004a      	lsls	r2, r1, #1
    7074:	0243      	lsls	r3, r0, #9
    7076:	0044      	lsls	r4, r0, #1
    7078:	024d      	lsls	r5, r1, #9
    707a:	0fc0      	lsrs	r0, r0, #31
    707c:	0e24      	lsrs	r4, r4, #24
    707e:	1c06      	adds	r6, r0, #0
    7080:	099b      	lsrs	r3, r3, #6
    7082:	0e12      	lsrs	r2, r2, #24
    7084:	0fc9      	lsrs	r1, r1, #31
    7086:	09ad      	lsrs	r5, r5, #6
    7088:	2aff      	cmp	r2, #255	; 0xff
    708a:	d100      	bne.n	708e <__aeabi_fsub+0x1e>
    708c:	e075      	b.n	717a <__aeabi_fsub+0x10a>
    708e:	2701      	movs	r7, #1
    7090:	4079      	eors	r1, r7
    7092:	4288      	cmp	r0, r1
    7094:	d050      	beq.n	7138 <__aeabi_fsub+0xc8>
    7096:	1aa0      	subs	r0, r4, r2
    7098:	2800      	cmp	r0, #0
    709a:	dc00      	bgt.n	709e <__aeabi_fsub+0x2e>
    709c:	e08f      	b.n	71be <__aeabi_fsub+0x14e>
    709e:	2a00      	cmp	r2, #0
    70a0:	d11e      	bne.n	70e0 <__aeabi_fsub+0x70>
    70a2:	2d00      	cmp	r5, #0
    70a4:	d000      	beq.n	70a8 <__aeabi_fsub+0x38>
    70a6:	e075      	b.n	7194 <__aeabi_fsub+0x124>
    70a8:	075a      	lsls	r2, r3, #29
    70aa:	d004      	beq.n	70b6 <__aeabi_fsub+0x46>
    70ac:	220f      	movs	r2, #15
    70ae:	401a      	ands	r2, r3
    70b0:	2a04      	cmp	r2, #4
    70b2:	d000      	beq.n	70b6 <__aeabi_fsub+0x46>
    70b4:	3304      	adds	r3, #4
    70b6:	2280      	movs	r2, #128	; 0x80
    70b8:	2001      	movs	r0, #1
    70ba:	04d2      	lsls	r2, r2, #19
    70bc:	401a      	ands	r2, r3
    70be:	4030      	ands	r0, r6
    70c0:	2a00      	cmp	r2, #0
    70c2:	d032      	beq.n	712a <__aeabi_fsub+0xba>
    70c4:	3401      	adds	r4, #1
    70c6:	2cff      	cmp	r4, #255	; 0xff
    70c8:	d100      	bne.n	70cc <__aeabi_fsub+0x5c>
    70ca:	e084      	b.n	71d6 <__aeabi_fsub+0x166>
    70cc:	019b      	lsls	r3, r3, #6
    70ce:	0a5b      	lsrs	r3, r3, #9
    70d0:	b2e4      	uxtb	r4, r4
    70d2:	025b      	lsls	r3, r3, #9
    70d4:	05e4      	lsls	r4, r4, #23
    70d6:	0a5b      	lsrs	r3, r3, #9
    70d8:	4323      	orrs	r3, r4
    70da:	07c0      	lsls	r0, r0, #31
    70dc:	4318      	orrs	r0, r3
    70de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    70e0:	2cff      	cmp	r4, #255	; 0xff
    70e2:	d0e1      	beq.n	70a8 <__aeabi_fsub+0x38>
    70e4:	2280      	movs	r2, #128	; 0x80
    70e6:	04d2      	lsls	r2, r2, #19
    70e8:	4315      	orrs	r5, r2
    70ea:	281b      	cmp	r0, #27
    70ec:	dd7a      	ble.n	71e4 <__aeabi_fsub+0x174>
    70ee:	2501      	movs	r5, #1
    70f0:	1b5b      	subs	r3, r3, r5
    70f2:	015a      	lsls	r2, r3, #5
    70f4:	d55d      	bpl.n	71b2 <__aeabi_fsub+0x142>
    70f6:	019b      	lsls	r3, r3, #6
    70f8:	099f      	lsrs	r7, r3, #6
    70fa:	1c38      	adds	r0, r7, #0
    70fc:	f002 f8e8 	bl	92d0 <__clzsi2>
    7100:	3805      	subs	r0, #5
    7102:	4087      	lsls	r7, r0
    7104:	4284      	cmp	r4, r0
    7106:	dc69      	bgt.n	71dc <__aeabi_fsub+0x16c>
    7108:	1b00      	subs	r0, r0, r4
    710a:	241f      	movs	r4, #31
    710c:	1c3a      	adds	r2, r7, #0
    710e:	1c43      	adds	r3, r0, #1
    7110:	1a20      	subs	r0, r4, r0
    7112:	40da      	lsrs	r2, r3
    7114:	4087      	lsls	r7, r0
    7116:	1c13      	adds	r3, r2, #0
    7118:	1e7c      	subs	r4, r7, #1
    711a:	41a7      	sbcs	r7, r4
    711c:	2400      	movs	r4, #0
    711e:	433b      	orrs	r3, r7
    7120:	e7c2      	b.n	70a8 <__aeabi_fsub+0x38>
    7122:	1e13      	subs	r3, r2, #0
    7124:	d145      	bne.n	71b2 <__aeabi_fsub+0x142>
    7126:	2300      	movs	r3, #0
    7128:	2000      	movs	r0, #0
    712a:	08db      	lsrs	r3, r3, #3
    712c:	2cff      	cmp	r4, #255	; 0xff
    712e:	d028      	beq.n	7182 <__aeabi_fsub+0x112>
    7130:	025b      	lsls	r3, r3, #9
    7132:	0a5b      	lsrs	r3, r3, #9
    7134:	b2e4      	uxtb	r4, r4
    7136:	e7cc      	b.n	70d2 <__aeabi_fsub+0x62>
    7138:	1aa1      	subs	r1, r4, r2
    713a:	2900      	cmp	r1, #0
    713c:	dd5b      	ble.n	71f6 <__aeabi_fsub+0x186>
    713e:	2a00      	cmp	r2, #0
    7140:	d02e      	beq.n	71a0 <__aeabi_fsub+0x130>
    7142:	2cff      	cmp	r4, #255	; 0xff
    7144:	d0b0      	beq.n	70a8 <__aeabi_fsub+0x38>
    7146:	2280      	movs	r2, #128	; 0x80
    7148:	04d2      	lsls	r2, r2, #19
    714a:	4315      	orrs	r5, r2
    714c:	291b      	cmp	r1, #27
    714e:	dc74      	bgt.n	723a <__aeabi_fsub+0x1ca>
    7150:	1c2f      	adds	r7, r5, #0
    7152:	2220      	movs	r2, #32
    7154:	40cf      	lsrs	r7, r1
    7156:	1a51      	subs	r1, r2, r1
    7158:	408d      	lsls	r5, r1
    715a:	1e69      	subs	r1, r5, #1
    715c:	418d      	sbcs	r5, r1
    715e:	433d      	orrs	r5, r7
    7160:	195b      	adds	r3, r3, r5
    7162:	015a      	lsls	r2, r3, #5
    7164:	d525      	bpl.n	71b2 <__aeabi_fsub+0x142>
    7166:	3401      	adds	r4, #1
    7168:	2cff      	cmp	r4, #255	; 0xff
    716a:	d074      	beq.n	7256 <__aeabi_fsub+0x1e6>
    716c:	2101      	movs	r1, #1
    716e:	4a7e      	ldr	r2, [pc, #504]	; (7368 <__aeabi_fsub+0x2f8>)
    7170:	4019      	ands	r1, r3
    7172:	4013      	ands	r3, r2
    7174:	085b      	lsrs	r3, r3, #1
    7176:	430b      	orrs	r3, r1
    7178:	e796      	b.n	70a8 <__aeabi_fsub+0x38>
    717a:	2d00      	cmp	r5, #0
    717c:	d000      	beq.n	7180 <__aeabi_fsub+0x110>
    717e:	e788      	b.n	7092 <__aeabi_fsub+0x22>
    7180:	e785      	b.n	708e <__aeabi_fsub+0x1e>
    7182:	2b00      	cmp	r3, #0
    7184:	d027      	beq.n	71d6 <__aeabi_fsub+0x166>
    7186:	2280      	movs	r2, #128	; 0x80
    7188:	03d2      	lsls	r2, r2, #15
    718a:	4313      	orrs	r3, r2
    718c:	025b      	lsls	r3, r3, #9
    718e:	0a5b      	lsrs	r3, r3, #9
    7190:	24ff      	movs	r4, #255	; 0xff
    7192:	e79e      	b.n	70d2 <__aeabi_fsub+0x62>
    7194:	3801      	subs	r0, #1
    7196:	2800      	cmp	r0, #0
    7198:	d0aa      	beq.n	70f0 <__aeabi_fsub+0x80>
    719a:	2cff      	cmp	r4, #255	; 0xff
    719c:	d1a5      	bne.n	70ea <__aeabi_fsub+0x7a>
    719e:	e783      	b.n	70a8 <__aeabi_fsub+0x38>
    71a0:	2d00      	cmp	r5, #0
    71a2:	d100      	bne.n	71a6 <__aeabi_fsub+0x136>
    71a4:	e780      	b.n	70a8 <__aeabi_fsub+0x38>
    71a6:	3901      	subs	r1, #1
    71a8:	2900      	cmp	r1, #0
    71aa:	d0d9      	beq.n	7160 <__aeabi_fsub+0xf0>
    71ac:	2cff      	cmp	r4, #255	; 0xff
    71ae:	d1cd      	bne.n	714c <__aeabi_fsub+0xdc>
    71b0:	e77a      	b.n	70a8 <__aeabi_fsub+0x38>
    71b2:	075a      	lsls	r2, r3, #29
    71b4:	d000      	beq.n	71b8 <__aeabi_fsub+0x148>
    71b6:	e779      	b.n	70ac <__aeabi_fsub+0x3c>
    71b8:	2001      	movs	r0, #1
    71ba:	4030      	ands	r0, r6
    71bc:	e7b5      	b.n	712a <__aeabi_fsub+0xba>
    71be:	2800      	cmp	r0, #0
    71c0:	d125      	bne.n	720e <__aeabi_fsub+0x19e>
    71c2:	1c62      	adds	r2, r4, #1
    71c4:	b2d2      	uxtb	r2, r2
    71c6:	2a01      	cmp	r2, #1
    71c8:	dd55      	ble.n	7276 <__aeabi_fsub+0x206>
    71ca:	1b5f      	subs	r7, r3, r5
    71cc:	017a      	lsls	r2, r7, #5
    71ce:	d52d      	bpl.n	722c <__aeabi_fsub+0x1bc>
    71d0:	1aef      	subs	r7, r5, r3
    71d2:	1c0e      	adds	r6, r1, #0
    71d4:	e791      	b.n	70fa <__aeabi_fsub+0x8a>
    71d6:	24ff      	movs	r4, #255	; 0xff
    71d8:	2300      	movs	r3, #0
    71da:	e77a      	b.n	70d2 <__aeabi_fsub+0x62>
    71dc:	4b62      	ldr	r3, [pc, #392]	; (7368 <__aeabi_fsub+0x2f8>)
    71de:	1a24      	subs	r4, r4, r0
    71e0:	403b      	ands	r3, r7
    71e2:	e761      	b.n	70a8 <__aeabi_fsub+0x38>
    71e4:	1c29      	adds	r1, r5, #0
    71e6:	2220      	movs	r2, #32
    71e8:	40c1      	lsrs	r1, r0
    71ea:	1a10      	subs	r0, r2, r0
    71ec:	4085      	lsls	r5, r0
    71ee:	1e68      	subs	r0, r5, #1
    71f0:	4185      	sbcs	r5, r0
    71f2:	430d      	orrs	r5, r1
    71f4:	e77c      	b.n	70f0 <__aeabi_fsub+0x80>
    71f6:	2900      	cmp	r1, #0
    71f8:	d146      	bne.n	7288 <__aeabi_fsub+0x218>
    71fa:	1c62      	adds	r2, r4, #1
    71fc:	b2d1      	uxtb	r1, r2
    71fe:	2901      	cmp	r1, #1
    7200:	dd2b      	ble.n	725a <__aeabi_fsub+0x1ea>
    7202:	2aff      	cmp	r2, #255	; 0xff
    7204:	d026      	beq.n	7254 <__aeabi_fsub+0x1e4>
    7206:	18eb      	adds	r3, r5, r3
    7208:	085b      	lsrs	r3, r3, #1
    720a:	1c14      	adds	r4, r2, #0
    720c:	e74c      	b.n	70a8 <__aeabi_fsub+0x38>
    720e:	2c00      	cmp	r4, #0
    7210:	d015      	beq.n	723e <__aeabi_fsub+0x1ce>
    7212:	2aff      	cmp	r2, #255	; 0xff
    7214:	d01a      	beq.n	724c <__aeabi_fsub+0x1dc>
    7216:	2480      	movs	r4, #128	; 0x80
    7218:	04e4      	lsls	r4, r4, #19
    721a:	4240      	negs	r0, r0
    721c:	4323      	orrs	r3, r4
    721e:	281b      	cmp	r0, #27
    7220:	dd4d      	ble.n	72be <__aeabi_fsub+0x24e>
    7222:	2301      	movs	r3, #1
    7224:	1aeb      	subs	r3, r5, r3
    7226:	1c14      	adds	r4, r2, #0
    7228:	1c0e      	adds	r6, r1, #0
    722a:	e762      	b.n	70f2 <__aeabi_fsub+0x82>
    722c:	2f00      	cmp	r7, #0
    722e:	d000      	beq.n	7232 <__aeabi_fsub+0x1c2>
    7230:	e763      	b.n	70fa <__aeabi_fsub+0x8a>
    7232:	2300      	movs	r3, #0
    7234:	2000      	movs	r0, #0
    7236:	2400      	movs	r4, #0
    7238:	e777      	b.n	712a <__aeabi_fsub+0xba>
    723a:	2501      	movs	r5, #1
    723c:	e790      	b.n	7160 <__aeabi_fsub+0xf0>
    723e:	2b00      	cmp	r3, #0
    7240:	d039      	beq.n	72b6 <__aeabi_fsub+0x246>
    7242:	43c0      	mvns	r0, r0
    7244:	2800      	cmp	r0, #0
    7246:	d0ed      	beq.n	7224 <__aeabi_fsub+0x1b4>
    7248:	2aff      	cmp	r2, #255	; 0xff
    724a:	d1e8      	bne.n	721e <__aeabi_fsub+0x1ae>
    724c:	1c2b      	adds	r3, r5, #0
    724e:	24ff      	movs	r4, #255	; 0xff
    7250:	1c0e      	adds	r6, r1, #0
    7252:	e729      	b.n	70a8 <__aeabi_fsub+0x38>
    7254:	24ff      	movs	r4, #255	; 0xff
    7256:	2300      	movs	r3, #0
    7258:	e767      	b.n	712a <__aeabi_fsub+0xba>
    725a:	2c00      	cmp	r4, #0
    725c:	d15a      	bne.n	7314 <__aeabi_fsub+0x2a4>
    725e:	2b00      	cmp	r3, #0
    7260:	d07f      	beq.n	7362 <__aeabi_fsub+0x2f2>
    7262:	2d00      	cmp	r5, #0
    7264:	d100      	bne.n	7268 <__aeabi_fsub+0x1f8>
    7266:	e71f      	b.n	70a8 <__aeabi_fsub+0x38>
    7268:	195b      	adds	r3, r3, r5
    726a:	015a      	lsls	r2, r3, #5
    726c:	d5a1      	bpl.n	71b2 <__aeabi_fsub+0x142>
    726e:	4a3e      	ldr	r2, [pc, #248]	; (7368 <__aeabi_fsub+0x2f8>)
    7270:	3401      	adds	r4, #1
    7272:	4013      	ands	r3, r2
    7274:	e718      	b.n	70a8 <__aeabi_fsub+0x38>
    7276:	2c00      	cmp	r4, #0
    7278:	d115      	bne.n	72a6 <__aeabi_fsub+0x236>
    727a:	2b00      	cmp	r3, #0
    727c:	d12f      	bne.n	72de <__aeabi_fsub+0x26e>
    727e:	2d00      	cmp	r5, #0
    7280:	d05e      	beq.n	7340 <__aeabi_fsub+0x2d0>
    7282:	1c2b      	adds	r3, r5, #0
    7284:	1c0e      	adds	r6, r1, #0
    7286:	e70f      	b.n	70a8 <__aeabi_fsub+0x38>
    7288:	2c00      	cmp	r4, #0
    728a:	d121      	bne.n	72d0 <__aeabi_fsub+0x260>
    728c:	2b00      	cmp	r3, #0
    728e:	d054      	beq.n	733a <__aeabi_fsub+0x2ca>
    7290:	43c9      	mvns	r1, r1
    7292:	2900      	cmp	r1, #0
    7294:	d004      	beq.n	72a0 <__aeabi_fsub+0x230>
    7296:	2aff      	cmp	r2, #255	; 0xff
    7298:	d04c      	beq.n	7334 <__aeabi_fsub+0x2c4>
    729a:	291b      	cmp	r1, #27
    729c:	dd58      	ble.n	7350 <__aeabi_fsub+0x2e0>
    729e:	2301      	movs	r3, #1
    72a0:	195b      	adds	r3, r3, r5
    72a2:	1c14      	adds	r4, r2, #0
    72a4:	e75d      	b.n	7162 <__aeabi_fsub+0xf2>
    72a6:	2b00      	cmp	r3, #0
    72a8:	d123      	bne.n	72f2 <__aeabi_fsub+0x282>
    72aa:	2d00      	cmp	r5, #0
    72ac:	d04b      	beq.n	7346 <__aeabi_fsub+0x2d6>
    72ae:	1c2b      	adds	r3, r5, #0
    72b0:	1c0e      	adds	r6, r1, #0
    72b2:	24ff      	movs	r4, #255	; 0xff
    72b4:	e6f8      	b.n	70a8 <__aeabi_fsub+0x38>
    72b6:	1c2b      	adds	r3, r5, #0
    72b8:	1c14      	adds	r4, r2, #0
    72ba:	1c0e      	adds	r6, r1, #0
    72bc:	e6f4      	b.n	70a8 <__aeabi_fsub+0x38>
    72be:	1c1e      	adds	r6, r3, #0
    72c0:	2420      	movs	r4, #32
    72c2:	40c6      	lsrs	r6, r0
    72c4:	1a20      	subs	r0, r4, r0
    72c6:	4083      	lsls	r3, r0
    72c8:	1e58      	subs	r0, r3, #1
    72ca:	4183      	sbcs	r3, r0
    72cc:	4333      	orrs	r3, r6
    72ce:	e7a9      	b.n	7224 <__aeabi_fsub+0x1b4>
    72d0:	2aff      	cmp	r2, #255	; 0xff
    72d2:	d02f      	beq.n	7334 <__aeabi_fsub+0x2c4>
    72d4:	2480      	movs	r4, #128	; 0x80
    72d6:	04e4      	lsls	r4, r4, #19
    72d8:	4249      	negs	r1, r1
    72da:	4323      	orrs	r3, r4
    72dc:	e7dd      	b.n	729a <__aeabi_fsub+0x22a>
    72de:	2d00      	cmp	r5, #0
    72e0:	d100      	bne.n	72e4 <__aeabi_fsub+0x274>
    72e2:	e6e1      	b.n	70a8 <__aeabi_fsub+0x38>
    72e4:	1b5a      	subs	r2, r3, r5
    72e6:	0150      	lsls	r0, r2, #5
    72e8:	d400      	bmi.n	72ec <__aeabi_fsub+0x27c>
    72ea:	e71a      	b.n	7122 <__aeabi_fsub+0xb2>
    72ec:	1aeb      	subs	r3, r5, r3
    72ee:	1c0e      	adds	r6, r1, #0
    72f0:	e6da      	b.n	70a8 <__aeabi_fsub+0x38>
    72f2:	24ff      	movs	r4, #255	; 0xff
    72f4:	2d00      	cmp	r5, #0
    72f6:	d100      	bne.n	72fa <__aeabi_fsub+0x28a>
    72f8:	e6d6      	b.n	70a8 <__aeabi_fsub+0x38>
    72fa:	2280      	movs	r2, #128	; 0x80
    72fc:	08db      	lsrs	r3, r3, #3
    72fe:	03d2      	lsls	r2, r2, #15
    7300:	4213      	tst	r3, r2
    7302:	d004      	beq.n	730e <__aeabi_fsub+0x29e>
    7304:	08ed      	lsrs	r5, r5, #3
    7306:	4215      	tst	r5, r2
    7308:	d101      	bne.n	730e <__aeabi_fsub+0x29e>
    730a:	1c2b      	adds	r3, r5, #0
    730c:	1c0e      	adds	r6, r1, #0
    730e:	00db      	lsls	r3, r3, #3
    7310:	24ff      	movs	r4, #255	; 0xff
    7312:	e6c9      	b.n	70a8 <__aeabi_fsub+0x38>
    7314:	2b00      	cmp	r3, #0
    7316:	d00d      	beq.n	7334 <__aeabi_fsub+0x2c4>
    7318:	24ff      	movs	r4, #255	; 0xff
    731a:	2d00      	cmp	r5, #0
    731c:	d100      	bne.n	7320 <__aeabi_fsub+0x2b0>
    731e:	e6c3      	b.n	70a8 <__aeabi_fsub+0x38>
    7320:	2280      	movs	r2, #128	; 0x80
    7322:	08db      	lsrs	r3, r3, #3
    7324:	03d2      	lsls	r2, r2, #15
    7326:	4213      	tst	r3, r2
    7328:	d0f1      	beq.n	730e <__aeabi_fsub+0x29e>
    732a:	08ed      	lsrs	r5, r5, #3
    732c:	4215      	tst	r5, r2
    732e:	d1ee      	bne.n	730e <__aeabi_fsub+0x29e>
    7330:	1c2b      	adds	r3, r5, #0
    7332:	e7ec      	b.n	730e <__aeabi_fsub+0x29e>
    7334:	1c2b      	adds	r3, r5, #0
    7336:	24ff      	movs	r4, #255	; 0xff
    7338:	e6b6      	b.n	70a8 <__aeabi_fsub+0x38>
    733a:	1c2b      	adds	r3, r5, #0
    733c:	1c14      	adds	r4, r2, #0
    733e:	e6b3      	b.n	70a8 <__aeabi_fsub+0x38>
    7340:	1c23      	adds	r3, r4, #0
    7342:	2000      	movs	r0, #0
    7344:	e6f1      	b.n	712a <__aeabi_fsub+0xba>
    7346:	2380      	movs	r3, #128	; 0x80
    7348:	2000      	movs	r0, #0
    734a:	049b      	lsls	r3, r3, #18
    734c:	24ff      	movs	r4, #255	; 0xff
    734e:	e6ec      	b.n	712a <__aeabi_fsub+0xba>
    7350:	1c1f      	adds	r7, r3, #0
    7352:	2420      	movs	r4, #32
    7354:	40cf      	lsrs	r7, r1
    7356:	1a61      	subs	r1, r4, r1
    7358:	408b      	lsls	r3, r1
    735a:	1e59      	subs	r1, r3, #1
    735c:	418b      	sbcs	r3, r1
    735e:	433b      	orrs	r3, r7
    7360:	e79e      	b.n	72a0 <__aeabi_fsub+0x230>
    7362:	1c2b      	adds	r3, r5, #0
    7364:	e6a0      	b.n	70a8 <__aeabi_fsub+0x38>
    7366:	46c0      	nop			; (mov r8, r8)
    7368:	fbffffff 	.word	0xfbffffff

0000736c <__aeabi_f2iz>:
    736c:	0242      	lsls	r2, r0, #9
    736e:	0a51      	lsrs	r1, r2, #9
    7370:	0042      	lsls	r2, r0, #1
    7372:	0fc3      	lsrs	r3, r0, #31
    7374:	0e12      	lsrs	r2, r2, #24
    7376:	2000      	movs	r0, #0
    7378:	2a7e      	cmp	r2, #126	; 0x7e
    737a:	dd0d      	ble.n	7398 <__aeabi_f2iz+0x2c>
    737c:	2a9d      	cmp	r2, #157	; 0x9d
    737e:	dc0c      	bgt.n	739a <__aeabi_f2iz+0x2e>
    7380:	2080      	movs	r0, #128	; 0x80
    7382:	0400      	lsls	r0, r0, #16
    7384:	4301      	orrs	r1, r0
    7386:	2a95      	cmp	r2, #149	; 0x95
    7388:	dc0a      	bgt.n	73a0 <__aeabi_f2iz+0x34>
    738a:	2096      	movs	r0, #150	; 0x96
    738c:	1a82      	subs	r2, r0, r2
    738e:	40d1      	lsrs	r1, r2
    7390:	1c0a      	adds	r2, r1, #0
    7392:	4258      	negs	r0, r3
    7394:	4042      	eors	r2, r0
    7396:	18d0      	adds	r0, r2, r3
    7398:	4770      	bx	lr
    739a:	4a03      	ldr	r2, [pc, #12]	; (73a8 <__aeabi_f2iz+0x3c>)
    739c:	1898      	adds	r0, r3, r2
    739e:	e7fb      	b.n	7398 <__aeabi_f2iz+0x2c>
    73a0:	3a96      	subs	r2, #150	; 0x96
    73a2:	4091      	lsls	r1, r2
    73a4:	1c0a      	adds	r2, r1, #0
    73a6:	e7f4      	b.n	7392 <__aeabi_f2iz+0x26>
    73a8:	7fffffff 	.word	0x7fffffff

000073ac <__aeabi_i2f>:
    73ac:	b570      	push	{r4, r5, r6, lr}
    73ae:	1e04      	subs	r4, r0, #0
    73b0:	d039      	beq.n	7426 <__aeabi_i2f+0x7a>
    73b2:	0fc5      	lsrs	r5, r0, #31
    73b4:	d000      	beq.n	73b8 <__aeabi_i2f+0xc>
    73b6:	4244      	negs	r4, r0
    73b8:	1c20      	adds	r0, r4, #0
    73ba:	f001 ff89 	bl	92d0 <__clzsi2>
    73be:	239e      	movs	r3, #158	; 0x9e
    73c0:	1c26      	adds	r6, r4, #0
    73c2:	1a1b      	subs	r3, r3, r0
    73c4:	2b96      	cmp	r3, #150	; 0x96
    73c6:	dc07      	bgt.n	73d8 <__aeabi_i2f+0x2c>
    73c8:	2808      	cmp	r0, #8
    73ca:	dd01      	ble.n	73d0 <__aeabi_i2f+0x24>
    73cc:	3808      	subs	r0, #8
    73ce:	4084      	lsls	r4, r0
    73d0:	0264      	lsls	r4, r4, #9
    73d2:	0a64      	lsrs	r4, r4, #9
    73d4:	b2d8      	uxtb	r0, r3
    73d6:	e01e      	b.n	7416 <__aeabi_i2f+0x6a>
    73d8:	2b99      	cmp	r3, #153	; 0x99
    73da:	dd0a      	ble.n	73f2 <__aeabi_i2f+0x46>
    73dc:	2205      	movs	r2, #5
    73de:	1c21      	adds	r1, r4, #0
    73e0:	1a12      	subs	r2, r2, r0
    73e2:	40d1      	lsrs	r1, r2
    73e4:	1c0a      	adds	r2, r1, #0
    73e6:	1c01      	adds	r1, r0, #0
    73e8:	311b      	adds	r1, #27
    73ea:	408e      	lsls	r6, r1
    73ec:	1e71      	subs	r1, r6, #1
    73ee:	418e      	sbcs	r6, r1
    73f0:	4316      	orrs	r6, r2
    73f2:	2805      	cmp	r0, #5
    73f4:	dd01      	ble.n	73fa <__aeabi_i2f+0x4e>
    73f6:	1f42      	subs	r2, r0, #5
    73f8:	4096      	lsls	r6, r2
    73fa:	4c0f      	ldr	r4, [pc, #60]	; (7438 <__aeabi_i2f+0x8c>)
    73fc:	4034      	ands	r4, r6
    73fe:	0772      	lsls	r2, r6, #29
    7400:	d004      	beq.n	740c <__aeabi_i2f+0x60>
    7402:	220f      	movs	r2, #15
    7404:	4016      	ands	r6, r2
    7406:	2e04      	cmp	r6, #4
    7408:	d000      	beq.n	740c <__aeabi_i2f+0x60>
    740a:	3404      	adds	r4, #4
    740c:	0162      	lsls	r2, r4, #5
    740e:	d40e      	bmi.n	742e <__aeabi_i2f+0x82>
    7410:	01a4      	lsls	r4, r4, #6
    7412:	0a64      	lsrs	r4, r4, #9
    7414:	b2d8      	uxtb	r0, r3
    7416:	0264      	lsls	r4, r4, #9
    7418:	05c0      	lsls	r0, r0, #23
    741a:	0a64      	lsrs	r4, r4, #9
    741c:	07ed      	lsls	r5, r5, #31
    741e:	4304      	orrs	r4, r0
    7420:	432c      	orrs	r4, r5
    7422:	1c20      	adds	r0, r4, #0
    7424:	bd70      	pop	{r4, r5, r6, pc}
    7426:	2500      	movs	r5, #0
    7428:	2000      	movs	r0, #0
    742a:	2400      	movs	r4, #0
    742c:	e7f3      	b.n	7416 <__aeabi_i2f+0x6a>
    742e:	4b02      	ldr	r3, [pc, #8]	; (7438 <__aeabi_i2f+0x8c>)
    7430:	401c      	ands	r4, r3
    7432:	239f      	movs	r3, #159	; 0x9f
    7434:	1a1b      	subs	r3, r3, r0
    7436:	e7eb      	b.n	7410 <__aeabi_i2f+0x64>
    7438:	fbffffff 	.word	0xfbffffff

0000743c <__aeabi_ui2f>:
    743c:	b510      	push	{r4, lr}
    743e:	1e04      	subs	r4, r0, #0
    7440:	d035      	beq.n	74ae <__aeabi_ui2f+0x72>
    7442:	f001 ff45 	bl	92d0 <__clzsi2>
    7446:	219e      	movs	r1, #158	; 0x9e
    7448:	1a09      	subs	r1, r1, r0
    744a:	2996      	cmp	r1, #150	; 0x96
    744c:	dc09      	bgt.n	7462 <__aeabi_ui2f+0x26>
    744e:	2808      	cmp	r0, #8
    7450:	dd30      	ble.n	74b4 <__aeabi_ui2f+0x78>
    7452:	1c02      	adds	r2, r0, #0
    7454:	1c23      	adds	r3, r4, #0
    7456:	3a08      	subs	r2, #8
    7458:	4093      	lsls	r3, r2
    745a:	025b      	lsls	r3, r3, #9
    745c:	0a5b      	lsrs	r3, r3, #9
    745e:	b2c8      	uxtb	r0, r1
    7460:	e020      	b.n	74a4 <__aeabi_ui2f+0x68>
    7462:	2999      	cmp	r1, #153	; 0x99
    7464:	dd0c      	ble.n	7480 <__aeabi_ui2f+0x44>
    7466:	2205      	movs	r2, #5
    7468:	1c23      	adds	r3, r4, #0
    746a:	1a12      	subs	r2, r2, r0
    746c:	40d3      	lsrs	r3, r2
    746e:	1c1a      	adds	r2, r3, #0
    7470:	1c03      	adds	r3, r0, #0
    7472:	331b      	adds	r3, #27
    7474:	409c      	lsls	r4, r3
    7476:	1c23      	adds	r3, r4, #0
    7478:	1e5c      	subs	r4, r3, #1
    747a:	41a3      	sbcs	r3, r4
    747c:	4313      	orrs	r3, r2
    747e:	1c1c      	adds	r4, r3, #0
    7480:	2805      	cmp	r0, #5
    7482:	dd01      	ble.n	7488 <__aeabi_ui2f+0x4c>
    7484:	1f43      	subs	r3, r0, #5
    7486:	409c      	lsls	r4, r3
    7488:	4b0f      	ldr	r3, [pc, #60]	; (74c8 <__aeabi_ui2f+0x8c>)
    748a:	4023      	ands	r3, r4
    748c:	0762      	lsls	r2, r4, #29
    748e:	d004      	beq.n	749a <__aeabi_ui2f+0x5e>
    7490:	220f      	movs	r2, #15
    7492:	4014      	ands	r4, r2
    7494:	2c04      	cmp	r4, #4
    7496:	d000      	beq.n	749a <__aeabi_ui2f+0x5e>
    7498:	3304      	adds	r3, #4
    749a:	015a      	lsls	r2, r3, #5
    749c:	d40e      	bmi.n	74bc <__aeabi_ui2f+0x80>
    749e:	019b      	lsls	r3, r3, #6
    74a0:	0a5b      	lsrs	r3, r3, #9
    74a2:	b2c8      	uxtb	r0, r1
    74a4:	025b      	lsls	r3, r3, #9
    74a6:	0a5b      	lsrs	r3, r3, #9
    74a8:	05c0      	lsls	r0, r0, #23
    74aa:	4318      	orrs	r0, r3
    74ac:	bd10      	pop	{r4, pc}
    74ae:	2000      	movs	r0, #0
    74b0:	2300      	movs	r3, #0
    74b2:	e7f7      	b.n	74a4 <__aeabi_ui2f+0x68>
    74b4:	0263      	lsls	r3, r4, #9
    74b6:	0a5b      	lsrs	r3, r3, #9
    74b8:	b2c8      	uxtb	r0, r1
    74ba:	e7f3      	b.n	74a4 <__aeabi_ui2f+0x68>
    74bc:	219f      	movs	r1, #159	; 0x9f
    74be:	4a02      	ldr	r2, [pc, #8]	; (74c8 <__aeabi_ui2f+0x8c>)
    74c0:	1a09      	subs	r1, r1, r0
    74c2:	4013      	ands	r3, r2
    74c4:	e7eb      	b.n	749e <__aeabi_ui2f+0x62>
    74c6:	46c0      	nop			; (mov r8, r8)
    74c8:	fbffffff 	.word	0xfbffffff

000074cc <__aeabi_dadd>:
    74cc:	b5f0      	push	{r4, r5, r6, r7, lr}
    74ce:	4645      	mov	r5, r8
    74d0:	4657      	mov	r7, sl
    74d2:	464e      	mov	r6, r9
    74d4:	4694      	mov	ip, r2
    74d6:	004c      	lsls	r4, r1, #1
    74d8:	030a      	lsls	r2, r1, #12
    74da:	0fc9      	lsrs	r1, r1, #31
    74dc:	b4e0      	push	{r5, r6, r7}
    74de:	4688      	mov	r8, r1
    74e0:	1c0e      	adds	r6, r1, #0
    74e2:	0319      	lsls	r1, r3, #12
    74e4:	0f47      	lsrs	r7, r0, #29
    74e6:	00c5      	lsls	r5, r0, #3
    74e8:	0a48      	lsrs	r0, r1, #9
    74ea:	4661      	mov	r1, ip
    74ec:	0f49      	lsrs	r1, r1, #29
    74ee:	4301      	orrs	r1, r0
    74f0:	4660      	mov	r0, ip
    74f2:	0a52      	lsrs	r2, r2, #9
    74f4:	4317      	orrs	r7, r2
    74f6:	00c0      	lsls	r0, r0, #3
    74f8:	005a      	lsls	r2, r3, #1
    74fa:	0d64      	lsrs	r4, r4, #21
    74fc:	0d52      	lsrs	r2, r2, #21
    74fe:	0fdb      	lsrs	r3, r3, #31
    7500:	4684      	mov	ip, r0
    7502:	4598      	cmp	r8, r3
    7504:	d100      	bne.n	7508 <__aeabi_dadd+0x3c>
    7506:	e0a7      	b.n	7658 <__aeabi_dadd+0x18c>
    7508:	1aa0      	subs	r0, r4, r2
    750a:	2800      	cmp	r0, #0
    750c:	dc00      	bgt.n	7510 <__aeabi_dadd+0x44>
    750e:	e101      	b.n	7714 <__aeabi_dadd+0x248>
    7510:	2a00      	cmp	r2, #0
    7512:	d13d      	bne.n	7590 <__aeabi_dadd+0xc4>
    7514:	4663      	mov	r3, ip
    7516:	430b      	orrs	r3, r1
    7518:	d000      	beq.n	751c <__aeabi_dadd+0x50>
    751a:	e0d4      	b.n	76c6 <__aeabi_dadd+0x1fa>
    751c:	076b      	lsls	r3, r5, #29
    751e:	d100      	bne.n	7522 <__aeabi_dadd+0x56>
    7520:	e088      	b.n	7634 <__aeabi_dadd+0x168>
    7522:	230f      	movs	r3, #15
    7524:	402b      	ands	r3, r5
    7526:	2b04      	cmp	r3, #4
    7528:	d100      	bne.n	752c <__aeabi_dadd+0x60>
    752a:	e083      	b.n	7634 <__aeabi_dadd+0x168>
    752c:	1d2a      	adds	r2, r5, #4
    752e:	42aa      	cmp	r2, r5
    7530:	41ad      	sbcs	r5, r5
    7532:	2380      	movs	r3, #128	; 0x80
    7534:	426d      	negs	r5, r5
    7536:	197f      	adds	r7, r7, r5
    7538:	041b      	lsls	r3, r3, #16
    753a:	403b      	ands	r3, r7
    753c:	4646      	mov	r6, r8
    753e:	1c15      	adds	r5, r2, #0
    7540:	2b00      	cmp	r3, #0
    7542:	d100      	bne.n	7546 <__aeabi_dadd+0x7a>
    7544:	e07c      	b.n	7640 <__aeabi_dadd+0x174>
    7546:	4bcc      	ldr	r3, [pc, #816]	; (7878 <__aeabi_dadd+0x3ac>)
    7548:	3401      	adds	r4, #1
    754a:	429c      	cmp	r4, r3
    754c:	d100      	bne.n	7550 <__aeabi_dadd+0x84>
    754e:	e0fd      	b.n	774c <__aeabi_dadd+0x280>
    7550:	1c3a      	adds	r2, r7, #0
    7552:	4bca      	ldr	r3, [pc, #808]	; (787c <__aeabi_dadd+0x3b0>)
    7554:	08ed      	lsrs	r5, r5, #3
    7556:	401a      	ands	r2, r3
    7558:	0750      	lsls	r0, r2, #29
    755a:	0564      	lsls	r4, r4, #21
    755c:	0252      	lsls	r2, r2, #9
    755e:	4305      	orrs	r5, r0
    7560:	0b12      	lsrs	r2, r2, #12
    7562:	0d64      	lsrs	r4, r4, #21
    7564:	2100      	movs	r1, #0
    7566:	0312      	lsls	r2, r2, #12
    7568:	0d0b      	lsrs	r3, r1, #20
    756a:	051b      	lsls	r3, r3, #20
    756c:	0564      	lsls	r4, r4, #21
    756e:	0b12      	lsrs	r2, r2, #12
    7570:	431a      	orrs	r2, r3
    7572:	0863      	lsrs	r3, r4, #1
    7574:	4cc2      	ldr	r4, [pc, #776]	; (7880 <__aeabi_dadd+0x3b4>)
    7576:	07f6      	lsls	r6, r6, #31
    7578:	4014      	ands	r4, r2
    757a:	431c      	orrs	r4, r3
    757c:	0064      	lsls	r4, r4, #1
    757e:	0864      	lsrs	r4, r4, #1
    7580:	4334      	orrs	r4, r6
    7582:	1c28      	adds	r0, r5, #0
    7584:	1c21      	adds	r1, r4, #0
    7586:	bc1c      	pop	{r2, r3, r4}
    7588:	4690      	mov	r8, r2
    758a:	4699      	mov	r9, r3
    758c:	46a2      	mov	sl, r4
    758e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7590:	4bb9      	ldr	r3, [pc, #740]	; (7878 <__aeabi_dadd+0x3ac>)
    7592:	429c      	cmp	r4, r3
    7594:	d0c2      	beq.n	751c <__aeabi_dadd+0x50>
    7596:	2380      	movs	r3, #128	; 0x80
    7598:	041b      	lsls	r3, r3, #16
    759a:	4319      	orrs	r1, r3
    759c:	2838      	cmp	r0, #56	; 0x38
    759e:	dd00      	ble.n	75a2 <__aeabi_dadd+0xd6>
    75a0:	e0ec      	b.n	777c <__aeabi_dadd+0x2b0>
    75a2:	281f      	cmp	r0, #31
    75a4:	dd00      	ble.n	75a8 <__aeabi_dadd+0xdc>
    75a6:	e121      	b.n	77ec <__aeabi_dadd+0x320>
    75a8:	2220      	movs	r2, #32
    75aa:	1c0e      	adds	r6, r1, #0
    75ac:	4663      	mov	r3, ip
    75ae:	1a12      	subs	r2, r2, r0
    75b0:	4096      	lsls	r6, r2
    75b2:	40c3      	lsrs	r3, r0
    75b4:	4333      	orrs	r3, r6
    75b6:	4666      	mov	r6, ip
    75b8:	4096      	lsls	r6, r2
    75ba:	1c32      	adds	r2, r6, #0
    75bc:	1e56      	subs	r6, r2, #1
    75be:	41b2      	sbcs	r2, r6
    75c0:	4313      	orrs	r3, r2
    75c2:	1c0a      	adds	r2, r1, #0
    75c4:	40c2      	lsrs	r2, r0
    75c6:	1aeb      	subs	r3, r5, r3
    75c8:	429d      	cmp	r5, r3
    75ca:	41b6      	sbcs	r6, r6
    75cc:	1c1d      	adds	r5, r3, #0
    75ce:	1aba      	subs	r2, r7, r2
    75d0:	4276      	negs	r6, r6
    75d2:	1b97      	subs	r7, r2, r6
    75d4:	023b      	lsls	r3, r7, #8
    75d6:	d400      	bmi.n	75da <__aeabi_dadd+0x10e>
    75d8:	e097      	b.n	770a <__aeabi_dadd+0x23e>
    75da:	027a      	lsls	r2, r7, #9
    75dc:	0a56      	lsrs	r6, r2, #9
    75de:	2e00      	cmp	r6, #0
    75e0:	d100      	bne.n	75e4 <__aeabi_dadd+0x118>
    75e2:	e0b6      	b.n	7752 <__aeabi_dadd+0x286>
    75e4:	1c30      	adds	r0, r6, #0
    75e6:	f001 fe73 	bl	92d0 <__clzsi2>
    75ea:	1c03      	adds	r3, r0, #0
    75ec:	3b08      	subs	r3, #8
    75ee:	2b1f      	cmp	r3, #31
    75f0:	dd00      	ble.n	75f4 <__aeabi_dadd+0x128>
    75f2:	e0b7      	b.n	7764 <__aeabi_dadd+0x298>
    75f4:	409e      	lsls	r6, r3
    75f6:	1c37      	adds	r7, r6, #0
    75f8:	2628      	movs	r6, #40	; 0x28
    75fa:	1c2a      	adds	r2, r5, #0
    75fc:	1a36      	subs	r6, r6, r0
    75fe:	40f2      	lsrs	r2, r6
    7600:	1c16      	adds	r6, r2, #0
    7602:	409d      	lsls	r5, r3
    7604:	433e      	orrs	r6, r7
    7606:	429c      	cmp	r4, r3
    7608:	dd00      	ble.n	760c <__aeabi_dadd+0x140>
    760a:	e0b2      	b.n	7772 <__aeabi_dadd+0x2a6>
    760c:	1b1c      	subs	r4, r3, r4
    760e:	1c62      	adds	r2, r4, #1
    7610:	2a1f      	cmp	r2, #31
    7612:	dd00      	ble.n	7616 <__aeabi_dadd+0x14a>
    7614:	e0d8      	b.n	77c8 <__aeabi_dadd+0x2fc>
    7616:	231f      	movs	r3, #31
    7618:	1c29      	adds	r1, r5, #0
    761a:	1b1c      	subs	r4, r3, r4
    761c:	1c33      	adds	r3, r6, #0
    761e:	40a5      	lsls	r5, r4
    7620:	40a3      	lsls	r3, r4
    7622:	40d1      	lsrs	r1, r2
    7624:	1e6c      	subs	r4, r5, #1
    7626:	41a5      	sbcs	r5, r4
    7628:	40d6      	lsrs	r6, r2
    762a:	4319      	orrs	r1, r3
    762c:	430d      	orrs	r5, r1
    762e:	1c37      	adds	r7, r6, #0
    7630:	2400      	movs	r4, #0
    7632:	e773      	b.n	751c <__aeabi_dadd+0x50>
    7634:	2380      	movs	r3, #128	; 0x80
    7636:	041b      	lsls	r3, r3, #16
    7638:	403b      	ands	r3, r7
    763a:	4646      	mov	r6, r8
    763c:	d000      	beq.n	7640 <__aeabi_dadd+0x174>
    763e:	e782      	b.n	7546 <__aeabi_dadd+0x7a>
    7640:	4b8d      	ldr	r3, [pc, #564]	; (7878 <__aeabi_dadd+0x3ac>)
    7642:	08ed      	lsrs	r5, r5, #3
    7644:	0778      	lsls	r0, r7, #29
    7646:	4305      	orrs	r5, r0
    7648:	08fa      	lsrs	r2, r7, #3
    764a:	429c      	cmp	r4, r3
    764c:	d032      	beq.n	76b4 <__aeabi_dadd+0x1e8>
    764e:	0312      	lsls	r2, r2, #12
    7650:	0564      	lsls	r4, r4, #21
    7652:	0b12      	lsrs	r2, r2, #12
    7654:	0d64      	lsrs	r4, r4, #21
    7656:	e785      	b.n	7564 <__aeabi_dadd+0x98>
    7658:	1aa3      	subs	r3, r4, r2
    765a:	2b00      	cmp	r3, #0
    765c:	dc00      	bgt.n	7660 <__aeabi_dadd+0x194>
    765e:	e094      	b.n	778a <__aeabi_dadd+0x2be>
    7660:	2a00      	cmp	r2, #0
    7662:	d03c      	beq.n	76de <__aeabi_dadd+0x212>
    7664:	4a84      	ldr	r2, [pc, #528]	; (7878 <__aeabi_dadd+0x3ac>)
    7666:	4294      	cmp	r4, r2
    7668:	d100      	bne.n	766c <__aeabi_dadd+0x1a0>
    766a:	e757      	b.n	751c <__aeabi_dadd+0x50>
    766c:	2280      	movs	r2, #128	; 0x80
    766e:	0412      	lsls	r2, r2, #16
    7670:	4311      	orrs	r1, r2
    7672:	2b38      	cmp	r3, #56	; 0x38
    7674:	dc00      	bgt.n	7678 <__aeabi_dadd+0x1ac>
    7676:	e105      	b.n	7884 <__aeabi_dadd+0x3b8>
    7678:	4663      	mov	r3, ip
    767a:	4319      	orrs	r1, r3
    767c:	1e48      	subs	r0, r1, #1
    767e:	4181      	sbcs	r1, r0
    7680:	2200      	movs	r2, #0
    7682:	b2c8      	uxtb	r0, r1
    7684:	1940      	adds	r0, r0, r5
    7686:	42a8      	cmp	r0, r5
    7688:	419b      	sbcs	r3, r3
    768a:	1c05      	adds	r5, r0, #0
    768c:	19d2      	adds	r2, r2, r7
    768e:	425b      	negs	r3, r3
    7690:	18d7      	adds	r7, r2, r3
    7692:	023b      	lsls	r3, r7, #8
    7694:	d539      	bpl.n	770a <__aeabi_dadd+0x23e>
    7696:	4b78      	ldr	r3, [pc, #480]	; (7878 <__aeabi_dadd+0x3ac>)
    7698:	3401      	adds	r4, #1
    769a:	429c      	cmp	r4, r3
    769c:	d100      	bne.n	76a0 <__aeabi_dadd+0x1d4>
    769e:	e14c      	b.n	793a <__aeabi_dadd+0x46e>
    76a0:	2001      	movs	r0, #1
    76a2:	4a76      	ldr	r2, [pc, #472]	; (787c <__aeabi_dadd+0x3b0>)
    76a4:	086b      	lsrs	r3, r5, #1
    76a6:	403a      	ands	r2, r7
    76a8:	4028      	ands	r0, r5
    76aa:	4318      	orrs	r0, r3
    76ac:	07d5      	lsls	r5, r2, #31
    76ae:	4305      	orrs	r5, r0
    76b0:	0857      	lsrs	r7, r2, #1
    76b2:	e733      	b.n	751c <__aeabi_dadd+0x50>
    76b4:	1c2b      	adds	r3, r5, #0
    76b6:	4313      	orrs	r3, r2
    76b8:	d048      	beq.n	774c <__aeabi_dadd+0x280>
    76ba:	2380      	movs	r3, #128	; 0x80
    76bc:	031b      	lsls	r3, r3, #12
    76be:	431a      	orrs	r2, r3
    76c0:	0312      	lsls	r2, r2, #12
    76c2:	0b12      	lsrs	r2, r2, #12
    76c4:	e74e      	b.n	7564 <__aeabi_dadd+0x98>
    76c6:	3801      	subs	r0, #1
    76c8:	2800      	cmp	r0, #0
    76ca:	d178      	bne.n	77be <__aeabi_dadd+0x2f2>
    76cc:	4663      	mov	r3, ip
    76ce:	1aee      	subs	r6, r5, r3
    76d0:	42b5      	cmp	r5, r6
    76d2:	419b      	sbcs	r3, r3
    76d4:	1a7a      	subs	r2, r7, r1
    76d6:	425b      	negs	r3, r3
    76d8:	1ad7      	subs	r7, r2, r3
    76da:	1c35      	adds	r5, r6, #0
    76dc:	e77a      	b.n	75d4 <__aeabi_dadd+0x108>
    76de:	1c02      	adds	r2, r0, #0
    76e0:	430a      	orrs	r2, r1
    76e2:	d100      	bne.n	76e6 <__aeabi_dadd+0x21a>
    76e4:	e71a      	b.n	751c <__aeabi_dadd+0x50>
    76e6:	3b01      	subs	r3, #1
    76e8:	2b00      	cmp	r3, #0
    76ea:	d000      	beq.n	76ee <__aeabi_dadd+0x222>
    76ec:	e0f2      	b.n	78d4 <__aeabi_dadd+0x408>
    76ee:	1940      	adds	r0, r0, r5
    76f0:	42a8      	cmp	r0, r5
    76f2:	419b      	sbcs	r3, r3
    76f4:	19ca      	adds	r2, r1, r7
    76f6:	425b      	negs	r3, r3
    76f8:	18d7      	adds	r7, r2, r3
    76fa:	1c05      	adds	r5, r0, #0
    76fc:	e7c9      	b.n	7692 <__aeabi_dadd+0x1c6>
    76fe:	1c13      	adds	r3, r2, #0
    7700:	4333      	orrs	r3, r6
    7702:	d100      	bne.n	7706 <__aeabi_dadd+0x23a>
    7704:	e118      	b.n	7938 <__aeabi_dadd+0x46c>
    7706:	1c17      	adds	r7, r2, #0
    7708:	1c35      	adds	r5, r6, #0
    770a:	4646      	mov	r6, r8
    770c:	076b      	lsls	r3, r5, #29
    770e:	d000      	beq.n	7712 <__aeabi_dadd+0x246>
    7710:	e707      	b.n	7522 <__aeabi_dadd+0x56>
    7712:	e795      	b.n	7640 <__aeabi_dadd+0x174>
    7714:	2800      	cmp	r0, #0
    7716:	d17a      	bne.n	780e <__aeabi_dadd+0x342>
    7718:	1c62      	adds	r2, r4, #1
    771a:	0552      	lsls	r2, r2, #21
    771c:	0d52      	lsrs	r2, r2, #21
    771e:	2a01      	cmp	r2, #1
    7720:	dc00      	bgt.n	7724 <__aeabi_dadd+0x258>
    7722:	e0fb      	b.n	791c <__aeabi_dadd+0x450>
    7724:	4662      	mov	r2, ip
    7726:	1aaa      	subs	r2, r5, r2
    7728:	4295      	cmp	r5, r2
    772a:	41b6      	sbcs	r6, r6
    772c:	4691      	mov	r9, r2
    772e:	1a78      	subs	r0, r7, r1
    7730:	4272      	negs	r2, r6
    7732:	1a86      	subs	r6, r0, r2
    7734:	0232      	lsls	r2, r6, #8
    7736:	d400      	bmi.n	773a <__aeabi_dadd+0x26e>
    7738:	e093      	b.n	7862 <__aeabi_dadd+0x396>
    773a:	4662      	mov	r2, ip
    773c:	1b55      	subs	r5, r2, r5
    773e:	45ac      	cmp	ip, r5
    7740:	4180      	sbcs	r0, r0
    7742:	1bcf      	subs	r7, r1, r7
    7744:	4240      	negs	r0, r0
    7746:	1a3e      	subs	r6, r7, r0
    7748:	4698      	mov	r8, r3
    774a:	e748      	b.n	75de <__aeabi_dadd+0x112>
    774c:	2200      	movs	r2, #0
    774e:	2500      	movs	r5, #0
    7750:	e708      	b.n	7564 <__aeabi_dadd+0x98>
    7752:	1c28      	adds	r0, r5, #0
    7754:	f001 fdbc 	bl	92d0 <__clzsi2>
    7758:	3020      	adds	r0, #32
    775a:	1c03      	adds	r3, r0, #0
    775c:	3b08      	subs	r3, #8
    775e:	2b1f      	cmp	r3, #31
    7760:	dc00      	bgt.n	7764 <__aeabi_dadd+0x298>
    7762:	e747      	b.n	75f4 <__aeabi_dadd+0x128>
    7764:	3828      	subs	r0, #40	; 0x28
    7766:	4085      	lsls	r5, r0
    7768:	1c2e      	adds	r6, r5, #0
    776a:	2500      	movs	r5, #0
    776c:	429c      	cmp	r4, r3
    776e:	dc00      	bgt.n	7772 <__aeabi_dadd+0x2a6>
    7770:	e74c      	b.n	760c <__aeabi_dadd+0x140>
    7772:	4a42      	ldr	r2, [pc, #264]	; (787c <__aeabi_dadd+0x3b0>)
    7774:	1ae4      	subs	r4, r4, r3
    7776:	4016      	ands	r6, r2
    7778:	1c37      	adds	r7, r6, #0
    777a:	e6cf      	b.n	751c <__aeabi_dadd+0x50>
    777c:	4663      	mov	r3, ip
    777e:	4319      	orrs	r1, r3
    7780:	1e4b      	subs	r3, r1, #1
    7782:	4199      	sbcs	r1, r3
    7784:	2200      	movs	r2, #0
    7786:	b2cb      	uxtb	r3, r1
    7788:	e71d      	b.n	75c6 <__aeabi_dadd+0xfa>
    778a:	2b00      	cmp	r3, #0
    778c:	d000      	beq.n	7790 <__aeabi_dadd+0x2c4>
    778e:	e0f2      	b.n	7976 <__aeabi_dadd+0x4aa>
    7790:	1c60      	adds	r0, r4, #1
    7792:	0543      	lsls	r3, r0, #21
    7794:	0d5b      	lsrs	r3, r3, #21
    7796:	2b01      	cmp	r3, #1
    7798:	dc00      	bgt.n	779c <__aeabi_dadd+0x2d0>
    779a:	e0a4      	b.n	78e6 <__aeabi_dadd+0x41a>
    779c:	4b36      	ldr	r3, [pc, #216]	; (7878 <__aeabi_dadd+0x3ac>)
    779e:	4298      	cmp	r0, r3
    77a0:	d100      	bne.n	77a4 <__aeabi_dadd+0x2d8>
    77a2:	e121      	b.n	79e8 <__aeabi_dadd+0x51c>
    77a4:	4663      	mov	r3, ip
    77a6:	195c      	adds	r4, r3, r5
    77a8:	42ac      	cmp	r4, r5
    77aa:	419b      	sbcs	r3, r3
    77ac:	19cf      	adds	r7, r1, r7
    77ae:	425b      	negs	r3, r3
    77b0:	18fa      	adds	r2, r7, r3
    77b2:	0864      	lsrs	r4, r4, #1
    77b4:	07d5      	lsls	r5, r2, #31
    77b6:	4325      	orrs	r5, r4
    77b8:	0857      	lsrs	r7, r2, #1
    77ba:	1c04      	adds	r4, r0, #0
    77bc:	e6ae      	b.n	751c <__aeabi_dadd+0x50>
    77be:	4b2e      	ldr	r3, [pc, #184]	; (7878 <__aeabi_dadd+0x3ac>)
    77c0:	429c      	cmp	r4, r3
    77c2:	d000      	beq.n	77c6 <__aeabi_dadd+0x2fa>
    77c4:	e6ea      	b.n	759c <__aeabi_dadd+0xd0>
    77c6:	e6a9      	b.n	751c <__aeabi_dadd+0x50>
    77c8:	1c21      	adds	r1, r4, #0
    77ca:	1c33      	adds	r3, r6, #0
    77cc:	391f      	subs	r1, #31
    77ce:	40cb      	lsrs	r3, r1
    77d0:	1c19      	adds	r1, r3, #0
    77d2:	2a20      	cmp	r2, #32
    77d4:	d100      	bne.n	77d8 <__aeabi_dadd+0x30c>
    77d6:	e082      	b.n	78de <__aeabi_dadd+0x412>
    77d8:	233f      	movs	r3, #63	; 0x3f
    77da:	1b1c      	subs	r4, r3, r4
    77dc:	40a6      	lsls	r6, r4
    77de:	4335      	orrs	r5, r6
    77e0:	1e6e      	subs	r6, r5, #1
    77e2:	41b5      	sbcs	r5, r6
    77e4:	2700      	movs	r7, #0
    77e6:	430d      	orrs	r5, r1
    77e8:	2400      	movs	r4, #0
    77ea:	e78e      	b.n	770a <__aeabi_dadd+0x23e>
    77ec:	1c03      	adds	r3, r0, #0
    77ee:	1c0e      	adds	r6, r1, #0
    77f0:	3b20      	subs	r3, #32
    77f2:	40de      	lsrs	r6, r3
    77f4:	2820      	cmp	r0, #32
    77f6:	d074      	beq.n	78e2 <__aeabi_dadd+0x416>
    77f8:	2340      	movs	r3, #64	; 0x40
    77fa:	1a1b      	subs	r3, r3, r0
    77fc:	4099      	lsls	r1, r3
    77fe:	1c0b      	adds	r3, r1, #0
    7800:	4662      	mov	r2, ip
    7802:	4313      	orrs	r3, r2
    7804:	1e59      	subs	r1, r3, #1
    7806:	418b      	sbcs	r3, r1
    7808:	2200      	movs	r2, #0
    780a:	4333      	orrs	r3, r6
    780c:	e6db      	b.n	75c6 <__aeabi_dadd+0xfa>
    780e:	2c00      	cmp	r4, #0
    7810:	d050      	beq.n	78b4 <__aeabi_dadd+0x3e8>
    7812:	4c19      	ldr	r4, [pc, #100]	; (7878 <__aeabi_dadd+0x3ac>)
    7814:	42a2      	cmp	r2, r4
    7816:	d100      	bne.n	781a <__aeabi_dadd+0x34e>
    7818:	e0a8      	b.n	796c <__aeabi_dadd+0x4a0>
    781a:	2480      	movs	r4, #128	; 0x80
    781c:	0424      	lsls	r4, r4, #16
    781e:	4240      	negs	r0, r0
    7820:	4327      	orrs	r7, r4
    7822:	2838      	cmp	r0, #56	; 0x38
    7824:	dd00      	ble.n	7828 <__aeabi_dadd+0x35c>
    7826:	e0d9      	b.n	79dc <__aeabi_dadd+0x510>
    7828:	281f      	cmp	r0, #31
    782a:	dd00      	ble.n	782e <__aeabi_dadd+0x362>
    782c:	e139      	b.n	7aa2 <__aeabi_dadd+0x5d6>
    782e:	2420      	movs	r4, #32
    7830:	1c3e      	adds	r6, r7, #0
    7832:	1a24      	subs	r4, r4, r0
    7834:	40a6      	lsls	r6, r4
    7836:	46b0      	mov	r8, r6
    7838:	1c2e      	adds	r6, r5, #0
    783a:	46a1      	mov	r9, r4
    783c:	40c6      	lsrs	r6, r0
    783e:	4644      	mov	r4, r8
    7840:	4326      	orrs	r6, r4
    7842:	464c      	mov	r4, r9
    7844:	40a5      	lsls	r5, r4
    7846:	1e6c      	subs	r4, r5, #1
    7848:	41a5      	sbcs	r5, r4
    784a:	40c7      	lsrs	r7, r0
    784c:	4335      	orrs	r5, r6
    784e:	4660      	mov	r0, ip
    7850:	1b45      	subs	r5, r0, r5
    7852:	1bcf      	subs	r7, r1, r7
    7854:	45ac      	cmp	ip, r5
    7856:	4189      	sbcs	r1, r1
    7858:	4249      	negs	r1, r1
    785a:	1a7f      	subs	r7, r7, r1
    785c:	1c14      	adds	r4, r2, #0
    785e:	4698      	mov	r8, r3
    7860:	e6b8      	b.n	75d4 <__aeabi_dadd+0x108>
    7862:	464b      	mov	r3, r9
    7864:	464d      	mov	r5, r9
    7866:	4333      	orrs	r3, r6
    7868:	d000      	beq.n	786c <__aeabi_dadd+0x3a0>
    786a:	e6b8      	b.n	75de <__aeabi_dadd+0x112>
    786c:	2600      	movs	r6, #0
    786e:	2700      	movs	r7, #0
    7870:	2400      	movs	r4, #0
    7872:	2500      	movs	r5, #0
    7874:	e6e4      	b.n	7640 <__aeabi_dadd+0x174>
    7876:	46c0      	nop			; (mov r8, r8)
    7878:	000007ff 	.word	0x000007ff
    787c:	ff7fffff 	.word	0xff7fffff
    7880:	800fffff 	.word	0x800fffff
    7884:	2b1f      	cmp	r3, #31
    7886:	dc5b      	bgt.n	7940 <__aeabi_dadd+0x474>
    7888:	2220      	movs	r2, #32
    788a:	1c08      	adds	r0, r1, #0
    788c:	1ad2      	subs	r2, r2, r3
    788e:	4090      	lsls	r0, r2
    7890:	4681      	mov	r9, r0
    7892:	4660      	mov	r0, ip
    7894:	4692      	mov	sl, r2
    7896:	40d8      	lsrs	r0, r3
    7898:	464a      	mov	r2, r9
    789a:	4310      	orrs	r0, r2
    789c:	4681      	mov	r9, r0
    789e:	4652      	mov	r2, sl
    78a0:	4660      	mov	r0, ip
    78a2:	4090      	lsls	r0, r2
    78a4:	1c02      	adds	r2, r0, #0
    78a6:	1e50      	subs	r0, r2, #1
    78a8:	4182      	sbcs	r2, r0
    78aa:	4648      	mov	r0, r9
    78ac:	4310      	orrs	r0, r2
    78ae:	1c0a      	adds	r2, r1, #0
    78b0:	40da      	lsrs	r2, r3
    78b2:	e6e7      	b.n	7684 <__aeabi_dadd+0x1b8>
    78b4:	1c3c      	adds	r4, r7, #0
    78b6:	432c      	orrs	r4, r5
    78b8:	d058      	beq.n	796c <__aeabi_dadd+0x4a0>
    78ba:	43c0      	mvns	r0, r0
    78bc:	2800      	cmp	r0, #0
    78be:	d151      	bne.n	7964 <__aeabi_dadd+0x498>
    78c0:	4660      	mov	r0, ip
    78c2:	1b45      	subs	r5, r0, r5
    78c4:	45ac      	cmp	ip, r5
    78c6:	4180      	sbcs	r0, r0
    78c8:	1bcf      	subs	r7, r1, r7
    78ca:	4240      	negs	r0, r0
    78cc:	1a3f      	subs	r7, r7, r0
    78ce:	1c14      	adds	r4, r2, #0
    78d0:	4698      	mov	r8, r3
    78d2:	e67f      	b.n	75d4 <__aeabi_dadd+0x108>
    78d4:	4a8f      	ldr	r2, [pc, #572]	; (7b14 <__aeabi_dadd+0x648>)
    78d6:	4294      	cmp	r4, r2
    78d8:	d000      	beq.n	78dc <__aeabi_dadd+0x410>
    78da:	e6ca      	b.n	7672 <__aeabi_dadd+0x1a6>
    78dc:	e61e      	b.n	751c <__aeabi_dadd+0x50>
    78de:	2600      	movs	r6, #0
    78e0:	e77d      	b.n	77de <__aeabi_dadd+0x312>
    78e2:	2300      	movs	r3, #0
    78e4:	e78c      	b.n	7800 <__aeabi_dadd+0x334>
    78e6:	1c3b      	adds	r3, r7, #0
    78e8:	432b      	orrs	r3, r5
    78ea:	2c00      	cmp	r4, #0
    78ec:	d000      	beq.n	78f0 <__aeabi_dadd+0x424>
    78ee:	e0bd      	b.n	7a6c <__aeabi_dadd+0x5a0>
    78f0:	2b00      	cmp	r3, #0
    78f2:	d100      	bne.n	78f6 <__aeabi_dadd+0x42a>
    78f4:	e0f5      	b.n	7ae2 <__aeabi_dadd+0x616>
    78f6:	4663      	mov	r3, ip
    78f8:	430b      	orrs	r3, r1
    78fa:	d100      	bne.n	78fe <__aeabi_dadd+0x432>
    78fc:	e60e      	b.n	751c <__aeabi_dadd+0x50>
    78fe:	4663      	mov	r3, ip
    7900:	195b      	adds	r3, r3, r5
    7902:	42ab      	cmp	r3, r5
    7904:	4180      	sbcs	r0, r0
    7906:	19ca      	adds	r2, r1, r7
    7908:	4240      	negs	r0, r0
    790a:	1817      	adds	r7, r2, r0
    790c:	023a      	lsls	r2, r7, #8
    790e:	d400      	bmi.n	7912 <__aeabi_dadd+0x446>
    7910:	e0fc      	b.n	7b0c <__aeabi_dadd+0x640>
    7912:	4a81      	ldr	r2, [pc, #516]	; (7b18 <__aeabi_dadd+0x64c>)
    7914:	1c1d      	adds	r5, r3, #0
    7916:	4017      	ands	r7, r2
    7918:	3401      	adds	r4, #1
    791a:	e5ff      	b.n	751c <__aeabi_dadd+0x50>
    791c:	1c3a      	adds	r2, r7, #0
    791e:	432a      	orrs	r2, r5
    7920:	2c00      	cmp	r4, #0
    7922:	d151      	bne.n	79c8 <__aeabi_dadd+0x4fc>
    7924:	2a00      	cmp	r2, #0
    7926:	d000      	beq.n	792a <__aeabi_dadd+0x45e>
    7928:	e085      	b.n	7a36 <__aeabi_dadd+0x56a>
    792a:	4662      	mov	r2, ip
    792c:	430a      	orrs	r2, r1
    792e:	d003      	beq.n	7938 <__aeabi_dadd+0x46c>
    7930:	1c0f      	adds	r7, r1, #0
    7932:	4665      	mov	r5, ip
    7934:	4698      	mov	r8, r3
    7936:	e5f1      	b.n	751c <__aeabi_dadd+0x50>
    7938:	2600      	movs	r6, #0
    793a:	2700      	movs	r7, #0
    793c:	2500      	movs	r5, #0
    793e:	e67f      	b.n	7640 <__aeabi_dadd+0x174>
    7940:	1c18      	adds	r0, r3, #0
    7942:	1c0a      	adds	r2, r1, #0
    7944:	3820      	subs	r0, #32
    7946:	40c2      	lsrs	r2, r0
    7948:	2b20      	cmp	r3, #32
    794a:	d100      	bne.n	794e <__aeabi_dadd+0x482>
    794c:	e0a7      	b.n	7a9e <__aeabi_dadd+0x5d2>
    794e:	2040      	movs	r0, #64	; 0x40
    7950:	1ac0      	subs	r0, r0, r3
    7952:	4081      	lsls	r1, r0
    7954:	1c08      	adds	r0, r1, #0
    7956:	4663      	mov	r3, ip
    7958:	4318      	orrs	r0, r3
    795a:	1e41      	subs	r1, r0, #1
    795c:	4188      	sbcs	r0, r1
    795e:	4310      	orrs	r0, r2
    7960:	2200      	movs	r2, #0
    7962:	e68f      	b.n	7684 <__aeabi_dadd+0x1b8>
    7964:	4c6b      	ldr	r4, [pc, #428]	; (7b14 <__aeabi_dadd+0x648>)
    7966:	42a2      	cmp	r2, r4
    7968:	d000      	beq.n	796c <__aeabi_dadd+0x4a0>
    796a:	e75a      	b.n	7822 <__aeabi_dadd+0x356>
    796c:	1c0f      	adds	r7, r1, #0
    796e:	4665      	mov	r5, ip
    7970:	1c14      	adds	r4, r2, #0
    7972:	4698      	mov	r8, r3
    7974:	e5d2      	b.n	751c <__aeabi_dadd+0x50>
    7976:	2c00      	cmp	r4, #0
    7978:	d13a      	bne.n	79f0 <__aeabi_dadd+0x524>
    797a:	1c38      	adds	r0, r7, #0
    797c:	4328      	orrs	r0, r5
    797e:	d071      	beq.n	7a64 <__aeabi_dadd+0x598>
    7980:	43db      	mvns	r3, r3
    7982:	2b00      	cmp	r3, #0
    7984:	d018      	beq.n	79b8 <__aeabi_dadd+0x4ec>
    7986:	4863      	ldr	r0, [pc, #396]	; (7b14 <__aeabi_dadd+0x648>)
    7988:	4282      	cmp	r2, r0
    798a:	d06b      	beq.n	7a64 <__aeabi_dadd+0x598>
    798c:	2b38      	cmp	r3, #56	; 0x38
    798e:	dd00      	ble.n	7992 <__aeabi_dadd+0x4c6>
    7990:	e09d      	b.n	7ace <__aeabi_dadd+0x602>
    7992:	2b1f      	cmp	r3, #31
    7994:	dd00      	ble.n	7998 <__aeabi_dadd+0x4cc>
    7996:	e0a7      	b.n	7ae8 <__aeabi_dadd+0x61c>
    7998:	2020      	movs	r0, #32
    799a:	1c3c      	adds	r4, r7, #0
    799c:	1ac0      	subs	r0, r0, r3
    799e:	4084      	lsls	r4, r0
    79a0:	46a1      	mov	r9, r4
    79a2:	1c2c      	adds	r4, r5, #0
    79a4:	4682      	mov	sl, r0
    79a6:	40dc      	lsrs	r4, r3
    79a8:	4648      	mov	r0, r9
    79aa:	4304      	orrs	r4, r0
    79ac:	4650      	mov	r0, sl
    79ae:	4085      	lsls	r5, r0
    79b0:	1e68      	subs	r0, r5, #1
    79b2:	4185      	sbcs	r5, r0
    79b4:	40df      	lsrs	r7, r3
    79b6:	4325      	orrs	r5, r4
    79b8:	4465      	add	r5, ip
    79ba:	4565      	cmp	r5, ip
    79bc:	419b      	sbcs	r3, r3
    79be:	187f      	adds	r7, r7, r1
    79c0:	425b      	negs	r3, r3
    79c2:	18ff      	adds	r7, r7, r3
    79c4:	1c14      	adds	r4, r2, #0
    79c6:	e664      	b.n	7692 <__aeabi_dadd+0x1c6>
    79c8:	2a00      	cmp	r2, #0
    79ca:	d119      	bne.n	7a00 <__aeabi_dadd+0x534>
    79cc:	4662      	mov	r2, ip
    79ce:	430a      	orrs	r2, r1
    79d0:	d077      	beq.n	7ac2 <__aeabi_dadd+0x5f6>
    79d2:	1c0f      	adds	r7, r1, #0
    79d4:	4665      	mov	r5, ip
    79d6:	4698      	mov	r8, r3
    79d8:	4c4e      	ldr	r4, [pc, #312]	; (7b14 <__aeabi_dadd+0x648>)
    79da:	e59f      	b.n	751c <__aeabi_dadd+0x50>
    79dc:	433d      	orrs	r5, r7
    79de:	1e6f      	subs	r7, r5, #1
    79e0:	41bd      	sbcs	r5, r7
    79e2:	2700      	movs	r7, #0
    79e4:	b2ed      	uxtb	r5, r5
    79e6:	e732      	b.n	784e <__aeabi_dadd+0x382>
    79e8:	1c04      	adds	r4, r0, #0
    79ea:	2700      	movs	r7, #0
    79ec:	2500      	movs	r5, #0
    79ee:	e627      	b.n	7640 <__aeabi_dadd+0x174>
    79f0:	4848      	ldr	r0, [pc, #288]	; (7b14 <__aeabi_dadd+0x648>)
    79f2:	4282      	cmp	r2, r0
    79f4:	d036      	beq.n	7a64 <__aeabi_dadd+0x598>
    79f6:	2080      	movs	r0, #128	; 0x80
    79f8:	0400      	lsls	r0, r0, #16
    79fa:	425b      	negs	r3, r3
    79fc:	4307      	orrs	r7, r0
    79fe:	e7c5      	b.n	798c <__aeabi_dadd+0x4c0>
    7a00:	4662      	mov	r2, ip
    7a02:	430a      	orrs	r2, r1
    7a04:	d049      	beq.n	7a9a <__aeabi_dadd+0x5ce>
    7a06:	2480      	movs	r4, #128	; 0x80
    7a08:	08ed      	lsrs	r5, r5, #3
    7a0a:	0778      	lsls	r0, r7, #29
    7a0c:	08fa      	lsrs	r2, r7, #3
    7a0e:	0324      	lsls	r4, r4, #12
    7a10:	4328      	orrs	r0, r5
    7a12:	4222      	tst	r2, r4
    7a14:	d009      	beq.n	7a2a <__aeabi_dadd+0x55e>
    7a16:	08ce      	lsrs	r6, r1, #3
    7a18:	4226      	tst	r6, r4
    7a1a:	d106      	bne.n	7a2a <__aeabi_dadd+0x55e>
    7a1c:	4662      	mov	r2, ip
    7a1e:	074f      	lsls	r7, r1, #29
    7a20:	1c38      	adds	r0, r7, #0
    7a22:	08d2      	lsrs	r2, r2, #3
    7a24:	4310      	orrs	r0, r2
    7a26:	4698      	mov	r8, r3
    7a28:	1c32      	adds	r2, r6, #0
    7a2a:	00d2      	lsls	r2, r2, #3
    7a2c:	0f47      	lsrs	r7, r0, #29
    7a2e:	4317      	orrs	r7, r2
    7a30:	00c5      	lsls	r5, r0, #3
    7a32:	4c38      	ldr	r4, [pc, #224]	; (7b14 <__aeabi_dadd+0x648>)
    7a34:	e572      	b.n	751c <__aeabi_dadd+0x50>
    7a36:	4662      	mov	r2, ip
    7a38:	430a      	orrs	r2, r1
    7a3a:	d100      	bne.n	7a3e <__aeabi_dadd+0x572>
    7a3c:	e56e      	b.n	751c <__aeabi_dadd+0x50>
    7a3e:	4662      	mov	r2, ip
    7a40:	1aae      	subs	r6, r5, r2
    7a42:	42b5      	cmp	r5, r6
    7a44:	4192      	sbcs	r2, r2
    7a46:	1a78      	subs	r0, r7, r1
    7a48:	4252      	negs	r2, r2
    7a4a:	1a82      	subs	r2, r0, r2
    7a4c:	0210      	lsls	r0, r2, #8
    7a4e:	d400      	bmi.n	7a52 <__aeabi_dadd+0x586>
    7a50:	e655      	b.n	76fe <__aeabi_dadd+0x232>
    7a52:	4662      	mov	r2, ip
    7a54:	1b55      	subs	r5, r2, r5
    7a56:	45ac      	cmp	ip, r5
    7a58:	4180      	sbcs	r0, r0
    7a5a:	1bca      	subs	r2, r1, r7
    7a5c:	4240      	negs	r0, r0
    7a5e:	1a17      	subs	r7, r2, r0
    7a60:	4698      	mov	r8, r3
    7a62:	e55b      	b.n	751c <__aeabi_dadd+0x50>
    7a64:	1c0f      	adds	r7, r1, #0
    7a66:	4665      	mov	r5, ip
    7a68:	1c14      	adds	r4, r2, #0
    7a6a:	e557      	b.n	751c <__aeabi_dadd+0x50>
    7a6c:	2b00      	cmp	r3, #0
    7a6e:	d034      	beq.n	7ada <__aeabi_dadd+0x60e>
    7a70:	4663      	mov	r3, ip
    7a72:	430b      	orrs	r3, r1
    7a74:	d011      	beq.n	7a9a <__aeabi_dadd+0x5ce>
    7a76:	2480      	movs	r4, #128	; 0x80
    7a78:	08ed      	lsrs	r5, r5, #3
    7a7a:	0778      	lsls	r0, r7, #29
    7a7c:	08fa      	lsrs	r2, r7, #3
    7a7e:	0324      	lsls	r4, r4, #12
    7a80:	4328      	orrs	r0, r5
    7a82:	4222      	tst	r2, r4
    7a84:	d0d1      	beq.n	7a2a <__aeabi_dadd+0x55e>
    7a86:	08cb      	lsrs	r3, r1, #3
    7a88:	4223      	tst	r3, r4
    7a8a:	d1ce      	bne.n	7a2a <__aeabi_dadd+0x55e>
    7a8c:	4662      	mov	r2, ip
    7a8e:	074f      	lsls	r7, r1, #29
    7a90:	1c38      	adds	r0, r7, #0
    7a92:	08d2      	lsrs	r2, r2, #3
    7a94:	4310      	orrs	r0, r2
    7a96:	1c1a      	adds	r2, r3, #0
    7a98:	e7c7      	b.n	7a2a <__aeabi_dadd+0x55e>
    7a9a:	4c1e      	ldr	r4, [pc, #120]	; (7b14 <__aeabi_dadd+0x648>)
    7a9c:	e53e      	b.n	751c <__aeabi_dadd+0x50>
    7a9e:	2000      	movs	r0, #0
    7aa0:	e759      	b.n	7956 <__aeabi_dadd+0x48a>
    7aa2:	1c04      	adds	r4, r0, #0
    7aa4:	1c3e      	adds	r6, r7, #0
    7aa6:	3c20      	subs	r4, #32
    7aa8:	40e6      	lsrs	r6, r4
    7aaa:	1c34      	adds	r4, r6, #0
    7aac:	2820      	cmp	r0, #32
    7aae:	d02b      	beq.n	7b08 <__aeabi_dadd+0x63c>
    7ab0:	2640      	movs	r6, #64	; 0x40
    7ab2:	1a30      	subs	r0, r6, r0
    7ab4:	4087      	lsls	r7, r0
    7ab6:	433d      	orrs	r5, r7
    7ab8:	1e6f      	subs	r7, r5, #1
    7aba:	41bd      	sbcs	r5, r7
    7abc:	2700      	movs	r7, #0
    7abe:	4325      	orrs	r5, r4
    7ac0:	e6c5      	b.n	784e <__aeabi_dadd+0x382>
    7ac2:	2780      	movs	r7, #128	; 0x80
    7ac4:	2600      	movs	r6, #0
    7ac6:	03ff      	lsls	r7, r7, #15
    7ac8:	4c12      	ldr	r4, [pc, #72]	; (7b14 <__aeabi_dadd+0x648>)
    7aca:	2500      	movs	r5, #0
    7acc:	e5b8      	b.n	7640 <__aeabi_dadd+0x174>
    7ace:	433d      	orrs	r5, r7
    7ad0:	1e6f      	subs	r7, r5, #1
    7ad2:	41bd      	sbcs	r5, r7
    7ad4:	2700      	movs	r7, #0
    7ad6:	b2ed      	uxtb	r5, r5
    7ad8:	e76e      	b.n	79b8 <__aeabi_dadd+0x4ec>
    7ada:	1c0f      	adds	r7, r1, #0
    7adc:	4665      	mov	r5, ip
    7ade:	4c0d      	ldr	r4, [pc, #52]	; (7b14 <__aeabi_dadd+0x648>)
    7ae0:	e51c      	b.n	751c <__aeabi_dadd+0x50>
    7ae2:	1c0f      	adds	r7, r1, #0
    7ae4:	4665      	mov	r5, ip
    7ae6:	e519      	b.n	751c <__aeabi_dadd+0x50>
    7ae8:	1c1c      	adds	r4, r3, #0
    7aea:	1c38      	adds	r0, r7, #0
    7aec:	3c20      	subs	r4, #32
    7aee:	40e0      	lsrs	r0, r4
    7af0:	1c04      	adds	r4, r0, #0
    7af2:	2b20      	cmp	r3, #32
    7af4:	d00c      	beq.n	7b10 <__aeabi_dadd+0x644>
    7af6:	2040      	movs	r0, #64	; 0x40
    7af8:	1ac3      	subs	r3, r0, r3
    7afa:	409f      	lsls	r7, r3
    7afc:	433d      	orrs	r5, r7
    7afe:	1e6f      	subs	r7, r5, #1
    7b00:	41bd      	sbcs	r5, r7
    7b02:	2700      	movs	r7, #0
    7b04:	4325      	orrs	r5, r4
    7b06:	e757      	b.n	79b8 <__aeabi_dadd+0x4ec>
    7b08:	2700      	movs	r7, #0
    7b0a:	e7d4      	b.n	7ab6 <__aeabi_dadd+0x5ea>
    7b0c:	1c1d      	adds	r5, r3, #0
    7b0e:	e5fc      	b.n	770a <__aeabi_dadd+0x23e>
    7b10:	2700      	movs	r7, #0
    7b12:	e7f3      	b.n	7afc <__aeabi_dadd+0x630>
    7b14:	000007ff 	.word	0x000007ff
    7b18:	ff7fffff 	.word	0xff7fffff

00007b1c <__aeabi_ddiv>:
    7b1c:	b5f0      	push	{r4, r5, r6, r7, lr}
    7b1e:	465f      	mov	r7, fp
    7b20:	4656      	mov	r6, sl
    7b22:	464d      	mov	r5, r9
    7b24:	4644      	mov	r4, r8
    7b26:	b4f0      	push	{r4, r5, r6, r7}
    7b28:	030f      	lsls	r7, r1, #12
    7b2a:	b087      	sub	sp, #28
    7b2c:	4698      	mov	r8, r3
    7b2e:	004d      	lsls	r5, r1, #1
    7b30:	0b3b      	lsrs	r3, r7, #12
    7b32:	0fcc      	lsrs	r4, r1, #31
    7b34:	1c06      	adds	r6, r0, #0
    7b36:	4692      	mov	sl, r2
    7b38:	4681      	mov	r9, r0
    7b3a:	469b      	mov	fp, r3
    7b3c:	0d6d      	lsrs	r5, r5, #21
    7b3e:	9401      	str	r4, [sp, #4]
    7b40:	d06b      	beq.n	7c1a <__aeabi_ddiv+0xfe>
    7b42:	4b66      	ldr	r3, [pc, #408]	; (7cdc <__aeabi_ddiv+0x1c0>)
    7b44:	429d      	cmp	r5, r3
    7b46:	d035      	beq.n	7bb4 <__aeabi_ddiv+0x98>
    7b48:	2780      	movs	r7, #128	; 0x80
    7b4a:	465b      	mov	r3, fp
    7b4c:	037f      	lsls	r7, r7, #13
    7b4e:	431f      	orrs	r7, r3
    7b50:	00f3      	lsls	r3, r6, #3
    7b52:	4699      	mov	r9, r3
    7b54:	4b62      	ldr	r3, [pc, #392]	; (7ce0 <__aeabi_ddiv+0x1c4>)
    7b56:	00ff      	lsls	r7, r7, #3
    7b58:	0f40      	lsrs	r0, r0, #29
    7b5a:	469c      	mov	ip, r3
    7b5c:	4307      	orrs	r7, r0
    7b5e:	2300      	movs	r3, #0
    7b60:	46bb      	mov	fp, r7
    7b62:	2600      	movs	r6, #0
    7b64:	4465      	add	r5, ip
    7b66:	9300      	str	r3, [sp, #0]
    7b68:	4642      	mov	r2, r8
    7b6a:	0317      	lsls	r7, r2, #12
    7b6c:	0050      	lsls	r0, r2, #1
    7b6e:	0fd2      	lsrs	r2, r2, #31
    7b70:	4653      	mov	r3, sl
    7b72:	0b3f      	lsrs	r7, r7, #12
    7b74:	0d40      	lsrs	r0, r0, #21
    7b76:	4690      	mov	r8, r2
    7b78:	d100      	bne.n	7b7c <__aeabi_ddiv+0x60>
    7b7a:	e072      	b.n	7c62 <__aeabi_ddiv+0x146>
    7b7c:	4a57      	ldr	r2, [pc, #348]	; (7cdc <__aeabi_ddiv+0x1c0>)
    7b7e:	4290      	cmp	r0, r2
    7b80:	d067      	beq.n	7c52 <__aeabi_ddiv+0x136>
    7b82:	2380      	movs	r3, #128	; 0x80
    7b84:	035b      	lsls	r3, r3, #13
    7b86:	431f      	orrs	r7, r3
    7b88:	4653      	mov	r3, sl
    7b8a:	4a55      	ldr	r2, [pc, #340]	; (7ce0 <__aeabi_ddiv+0x1c4>)
    7b8c:	0f5b      	lsrs	r3, r3, #29
    7b8e:	00ff      	lsls	r7, r7, #3
    7b90:	431f      	orrs	r7, r3
    7b92:	4694      	mov	ip, r2
    7b94:	4653      	mov	r3, sl
    7b96:	2100      	movs	r1, #0
    7b98:	00db      	lsls	r3, r3, #3
    7b9a:	4460      	add	r0, ip
    7b9c:	4642      	mov	r2, r8
    7b9e:	4062      	eors	r2, r4
    7ba0:	4692      	mov	sl, r2
    7ba2:	1a2d      	subs	r5, r5, r0
    7ba4:	430e      	orrs	r6, r1
    7ba6:	2e0f      	cmp	r6, #15
    7ba8:	d900      	bls.n	7bac <__aeabi_ddiv+0x90>
    7baa:	e0a1      	b.n	7cf0 <__aeabi_ddiv+0x1d4>
    7bac:	484d      	ldr	r0, [pc, #308]	; (7ce4 <__aeabi_ddiv+0x1c8>)
    7bae:	00b6      	lsls	r6, r6, #2
    7bb0:	5980      	ldr	r0, [r0, r6]
    7bb2:	4687      	mov	pc, r0
    7bb4:	465b      	mov	r3, fp
    7bb6:	431e      	orrs	r6, r3
    7bb8:	d000      	beq.n	7bbc <__aeabi_ddiv+0xa0>
    7bba:	e076      	b.n	7caa <__aeabi_ddiv+0x18e>
    7bbc:	2300      	movs	r3, #0
    7bbe:	469b      	mov	fp, r3
    7bc0:	4699      	mov	r9, r3
    7bc2:	3302      	adds	r3, #2
    7bc4:	2608      	movs	r6, #8
    7bc6:	9300      	str	r3, [sp, #0]
    7bc8:	e7ce      	b.n	7b68 <__aeabi_ddiv+0x4c>
    7bca:	4699      	mov	r9, r3
    7bcc:	4643      	mov	r3, r8
    7bce:	46bb      	mov	fp, r7
    7bd0:	9301      	str	r3, [sp, #4]
    7bd2:	9100      	str	r1, [sp, #0]
    7bd4:	9b00      	ldr	r3, [sp, #0]
    7bd6:	2b02      	cmp	r3, #2
    7bd8:	d16b      	bne.n	7cb2 <__aeabi_ddiv+0x196>
    7bda:	9b01      	ldr	r3, [sp, #4]
    7bdc:	469a      	mov	sl, r3
    7bde:	2100      	movs	r1, #0
    7be0:	4653      	mov	r3, sl
    7be2:	2201      	movs	r2, #1
    7be4:	2700      	movs	r7, #0
    7be6:	4689      	mov	r9, r1
    7be8:	401a      	ands	r2, r3
    7bea:	4b3c      	ldr	r3, [pc, #240]	; (7cdc <__aeabi_ddiv+0x1c0>)
    7bec:	2100      	movs	r1, #0
    7bee:	033f      	lsls	r7, r7, #12
    7bf0:	0d0c      	lsrs	r4, r1, #20
    7bf2:	0524      	lsls	r4, r4, #20
    7bf4:	0b3f      	lsrs	r7, r7, #12
    7bf6:	4327      	orrs	r7, r4
    7bf8:	4c3b      	ldr	r4, [pc, #236]	; (7ce8 <__aeabi_ddiv+0x1cc>)
    7bfa:	051b      	lsls	r3, r3, #20
    7bfc:	4027      	ands	r7, r4
    7bfe:	431f      	orrs	r7, r3
    7c00:	007f      	lsls	r7, r7, #1
    7c02:	07d2      	lsls	r2, r2, #31
    7c04:	087f      	lsrs	r7, r7, #1
    7c06:	4317      	orrs	r7, r2
    7c08:	4648      	mov	r0, r9
    7c0a:	1c39      	adds	r1, r7, #0
    7c0c:	b007      	add	sp, #28
    7c0e:	bc3c      	pop	{r2, r3, r4, r5}
    7c10:	4690      	mov	r8, r2
    7c12:	4699      	mov	r9, r3
    7c14:	46a2      	mov	sl, r4
    7c16:	46ab      	mov	fp, r5
    7c18:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7c1a:	4303      	orrs	r3, r0
    7c1c:	d03e      	beq.n	7c9c <__aeabi_ddiv+0x180>
    7c1e:	465b      	mov	r3, fp
    7c20:	2b00      	cmp	r3, #0
    7c22:	d100      	bne.n	7c26 <__aeabi_ddiv+0x10a>
    7c24:	e19c      	b.n	7f60 <__aeabi_ddiv+0x444>
    7c26:	4658      	mov	r0, fp
    7c28:	f001 fb52 	bl	92d0 <__clzsi2>
    7c2c:	2328      	movs	r3, #40	; 0x28
    7c2e:	1c31      	adds	r1, r6, #0
    7c30:	1a1b      	subs	r3, r3, r0
    7c32:	1c02      	adds	r2, r0, #0
    7c34:	465f      	mov	r7, fp
    7c36:	40d9      	lsrs	r1, r3
    7c38:	3a08      	subs	r2, #8
    7c3a:	4097      	lsls	r7, r2
    7c3c:	1c0b      	adds	r3, r1, #0
    7c3e:	4096      	lsls	r6, r2
    7c40:	433b      	orrs	r3, r7
    7c42:	469b      	mov	fp, r3
    7c44:	46b1      	mov	r9, r6
    7c46:	2300      	movs	r3, #0
    7c48:	4d28      	ldr	r5, [pc, #160]	; (7cec <__aeabi_ddiv+0x1d0>)
    7c4a:	2600      	movs	r6, #0
    7c4c:	1a2d      	subs	r5, r5, r0
    7c4e:	9300      	str	r3, [sp, #0]
    7c50:	e78a      	b.n	7b68 <__aeabi_ddiv+0x4c>
    7c52:	4652      	mov	r2, sl
    7c54:	2103      	movs	r1, #3
    7c56:	433a      	orrs	r2, r7
    7c58:	d1a0      	bne.n	7b9c <__aeabi_ddiv+0x80>
    7c5a:	2700      	movs	r7, #0
    7c5c:	2300      	movs	r3, #0
    7c5e:	2102      	movs	r1, #2
    7c60:	e79c      	b.n	7b9c <__aeabi_ddiv+0x80>
    7c62:	4652      	mov	r2, sl
    7c64:	433a      	orrs	r2, r7
    7c66:	d015      	beq.n	7c94 <__aeabi_ddiv+0x178>
    7c68:	2f00      	cmp	r7, #0
    7c6a:	d100      	bne.n	7c6e <__aeabi_ddiv+0x152>
    7c6c:	e185      	b.n	7f7a <__aeabi_ddiv+0x45e>
    7c6e:	1c38      	adds	r0, r7, #0
    7c70:	f001 fb2e 	bl	92d0 <__clzsi2>
    7c74:	1c02      	adds	r2, r0, #0
    7c76:	2128      	movs	r1, #40	; 0x28
    7c78:	4650      	mov	r0, sl
    7c7a:	1a89      	subs	r1, r1, r2
    7c7c:	1c13      	adds	r3, r2, #0
    7c7e:	40c8      	lsrs	r0, r1
    7c80:	4651      	mov	r1, sl
    7c82:	3b08      	subs	r3, #8
    7c84:	4099      	lsls	r1, r3
    7c86:	409f      	lsls	r7, r3
    7c88:	1c0b      	adds	r3, r1, #0
    7c8a:	4307      	orrs	r7, r0
    7c8c:	4817      	ldr	r0, [pc, #92]	; (7cec <__aeabi_ddiv+0x1d0>)
    7c8e:	2100      	movs	r1, #0
    7c90:	1a80      	subs	r0, r0, r2
    7c92:	e783      	b.n	7b9c <__aeabi_ddiv+0x80>
    7c94:	2700      	movs	r7, #0
    7c96:	2300      	movs	r3, #0
    7c98:	2101      	movs	r1, #1
    7c9a:	e77f      	b.n	7b9c <__aeabi_ddiv+0x80>
    7c9c:	2300      	movs	r3, #0
    7c9e:	469b      	mov	fp, r3
    7ca0:	4699      	mov	r9, r3
    7ca2:	3301      	adds	r3, #1
    7ca4:	2604      	movs	r6, #4
    7ca6:	9300      	str	r3, [sp, #0]
    7ca8:	e75e      	b.n	7b68 <__aeabi_ddiv+0x4c>
    7caa:	2303      	movs	r3, #3
    7cac:	260c      	movs	r6, #12
    7cae:	9300      	str	r3, [sp, #0]
    7cb0:	e75a      	b.n	7b68 <__aeabi_ddiv+0x4c>
    7cb2:	2b03      	cmp	r3, #3
    7cb4:	d100      	bne.n	7cb8 <__aeabi_ddiv+0x19c>
    7cb6:	e23c      	b.n	8132 <__aeabi_ddiv+0x616>
    7cb8:	2b01      	cmp	r3, #1
    7cba:	d000      	beq.n	7cbe <__aeabi_ddiv+0x1a2>
    7cbc:	e1bf      	b.n	803e <__aeabi_ddiv+0x522>
    7cbe:	1c1a      	adds	r2, r3, #0
    7cc0:	9b01      	ldr	r3, [sp, #4]
    7cc2:	401a      	ands	r2, r3
    7cc4:	2100      	movs	r1, #0
    7cc6:	2300      	movs	r3, #0
    7cc8:	2700      	movs	r7, #0
    7cca:	4689      	mov	r9, r1
    7ccc:	e78e      	b.n	7bec <__aeabi_ddiv+0xd0>
    7cce:	2300      	movs	r3, #0
    7cd0:	2780      	movs	r7, #128	; 0x80
    7cd2:	4699      	mov	r9, r3
    7cd4:	2200      	movs	r2, #0
    7cd6:	033f      	lsls	r7, r7, #12
    7cd8:	4b00      	ldr	r3, [pc, #0]	; (7cdc <__aeabi_ddiv+0x1c0>)
    7cda:	e787      	b.n	7bec <__aeabi_ddiv+0xd0>
    7cdc:	000007ff 	.word	0x000007ff
    7ce0:	fffffc01 	.word	0xfffffc01
    7ce4:	0000f5f8 	.word	0x0000f5f8
    7ce8:	800fffff 	.word	0x800fffff
    7cec:	fffffc0d 	.word	0xfffffc0d
    7cf0:	45bb      	cmp	fp, r7
    7cf2:	d900      	bls.n	7cf6 <__aeabi_ddiv+0x1da>
    7cf4:	e151      	b.n	7f9a <__aeabi_ddiv+0x47e>
    7cf6:	d100      	bne.n	7cfa <__aeabi_ddiv+0x1de>
    7cf8:	e14c      	b.n	7f94 <__aeabi_ddiv+0x478>
    7cfa:	464a      	mov	r2, r9
    7cfc:	9203      	str	r2, [sp, #12]
    7cfe:	2200      	movs	r2, #0
    7d00:	465c      	mov	r4, fp
    7d02:	4690      	mov	r8, r2
    7d04:	3d01      	subs	r5, #1
    7d06:	0e18      	lsrs	r0, r3, #24
    7d08:	023f      	lsls	r7, r7, #8
    7d0a:	4338      	orrs	r0, r7
    7d0c:	021b      	lsls	r3, r3, #8
    7d0e:	9301      	str	r3, [sp, #4]
    7d10:	0c03      	lsrs	r3, r0, #16
    7d12:	4699      	mov	r9, r3
    7d14:	0403      	lsls	r3, r0, #16
    7d16:	0c1b      	lsrs	r3, r3, #16
    7d18:	4649      	mov	r1, r9
    7d1a:	1c06      	adds	r6, r0, #0
    7d1c:	1c20      	adds	r0, r4, #0
    7d1e:	1c1f      	adds	r7, r3, #0
    7d20:	9300      	str	r3, [sp, #0]
    7d22:	f7fe fac3 	bl	62ac <__aeabi_uidiv>
    7d26:	1c02      	adds	r2, r0, #0
    7d28:	437a      	muls	r2, r7
    7d2a:	9002      	str	r0, [sp, #8]
    7d2c:	4649      	mov	r1, r9
    7d2e:	1c20      	adds	r0, r4, #0
    7d30:	1c17      	adds	r7, r2, #0
    7d32:	f7fe fb41 	bl	63b8 <__aeabi_uidivmod>
    7d36:	9b03      	ldr	r3, [sp, #12]
    7d38:	0409      	lsls	r1, r1, #16
    7d3a:	0c1b      	lsrs	r3, r3, #16
    7d3c:	4319      	orrs	r1, r3
    7d3e:	428f      	cmp	r7, r1
    7d40:	d90c      	bls.n	7d5c <__aeabi_ddiv+0x240>
    7d42:	9b02      	ldr	r3, [sp, #8]
    7d44:	1989      	adds	r1, r1, r6
    7d46:	3b01      	subs	r3, #1
    7d48:	428e      	cmp	r6, r1
    7d4a:	d900      	bls.n	7d4e <__aeabi_ddiv+0x232>
    7d4c:	e152      	b.n	7ff4 <__aeabi_ddiv+0x4d8>
    7d4e:	428f      	cmp	r7, r1
    7d50:	d800      	bhi.n	7d54 <__aeabi_ddiv+0x238>
    7d52:	e14f      	b.n	7ff4 <__aeabi_ddiv+0x4d8>
    7d54:	9b02      	ldr	r3, [sp, #8]
    7d56:	1989      	adds	r1, r1, r6
    7d58:	3b02      	subs	r3, #2
    7d5a:	9302      	str	r3, [sp, #8]
    7d5c:	1bcc      	subs	r4, r1, r7
    7d5e:	1c20      	adds	r0, r4, #0
    7d60:	4649      	mov	r1, r9
    7d62:	f7fe faa3 	bl	62ac <__aeabi_uidiv>
    7d66:	9f00      	ldr	r7, [sp, #0]
    7d68:	4683      	mov	fp, r0
    7d6a:	4347      	muls	r7, r0
    7d6c:	4649      	mov	r1, r9
    7d6e:	1c20      	adds	r0, r4, #0
    7d70:	f7fe fb22 	bl	63b8 <__aeabi_uidivmod>
    7d74:	9a03      	ldr	r2, [sp, #12]
    7d76:	040b      	lsls	r3, r1, #16
    7d78:	0414      	lsls	r4, r2, #16
    7d7a:	0c24      	lsrs	r4, r4, #16
    7d7c:	4323      	orrs	r3, r4
    7d7e:	429f      	cmp	r7, r3
    7d80:	d90d      	bls.n	7d9e <__aeabi_ddiv+0x282>
    7d82:	465a      	mov	r2, fp
    7d84:	199b      	adds	r3, r3, r6
    7d86:	3a01      	subs	r2, #1
    7d88:	429e      	cmp	r6, r3
    7d8a:	d900      	bls.n	7d8e <__aeabi_ddiv+0x272>
    7d8c:	e130      	b.n	7ff0 <__aeabi_ddiv+0x4d4>
    7d8e:	429f      	cmp	r7, r3
    7d90:	d800      	bhi.n	7d94 <__aeabi_ddiv+0x278>
    7d92:	e12d      	b.n	7ff0 <__aeabi_ddiv+0x4d4>
    7d94:	2202      	movs	r2, #2
    7d96:	4252      	negs	r2, r2
    7d98:	4694      	mov	ip, r2
    7d9a:	199b      	adds	r3, r3, r6
    7d9c:	44e3      	add	fp, ip
    7d9e:	9a02      	ldr	r2, [sp, #8]
    7da0:	1bdb      	subs	r3, r3, r7
    7da2:	0417      	lsls	r7, r2, #16
    7da4:	465a      	mov	r2, fp
    7da6:	433a      	orrs	r2, r7
    7da8:	4693      	mov	fp, r2
    7daa:	9c01      	ldr	r4, [sp, #4]
    7dac:	0c17      	lsrs	r7, r2, #16
    7dae:	0c22      	lsrs	r2, r4, #16
    7db0:	1c10      	adds	r0, r2, #0
    7db2:	9204      	str	r2, [sp, #16]
    7db4:	465a      	mov	r2, fp
    7db6:	0411      	lsls	r1, r2, #16
    7db8:	0422      	lsls	r2, r4, #16
    7dba:	0c12      	lsrs	r2, r2, #16
    7dbc:	1c14      	adds	r4, r2, #0
    7dbe:	0c09      	lsrs	r1, r1, #16
    7dc0:	437c      	muls	r4, r7
    7dc2:	9205      	str	r2, [sp, #20]
    7dc4:	434a      	muls	r2, r1
    7dc6:	4341      	muls	r1, r0
    7dc8:	4347      	muls	r7, r0
    7dca:	1861      	adds	r1, r4, r1
    7dcc:	0c10      	lsrs	r0, r2, #16
    7dce:	1809      	adds	r1, r1, r0
    7dd0:	428c      	cmp	r4, r1
    7dd2:	d903      	bls.n	7ddc <__aeabi_ddiv+0x2c0>
    7dd4:	2080      	movs	r0, #128	; 0x80
    7dd6:	0240      	lsls	r0, r0, #9
    7dd8:	4684      	mov	ip, r0
    7dda:	4467      	add	r7, ip
    7ddc:	0c0c      	lsrs	r4, r1, #16
    7dde:	0412      	lsls	r2, r2, #16
    7de0:	0408      	lsls	r0, r1, #16
    7de2:	0c12      	lsrs	r2, r2, #16
    7de4:	193c      	adds	r4, r7, r4
    7de6:	1881      	adds	r1, r0, r2
    7de8:	42a3      	cmp	r3, r4
    7dea:	d200      	bcs.n	7dee <__aeabi_ddiv+0x2d2>
    7dec:	e0e5      	b.n	7fba <__aeabi_ddiv+0x49e>
    7dee:	d100      	bne.n	7df2 <__aeabi_ddiv+0x2d6>
    7df0:	e0df      	b.n	7fb2 <__aeabi_ddiv+0x496>
    7df2:	1b1f      	subs	r7, r3, r4
    7df4:	4643      	mov	r3, r8
    7df6:	1a5c      	subs	r4, r3, r1
    7df8:	45a0      	cmp	r8, r4
    7dfa:	4192      	sbcs	r2, r2
    7dfc:	4252      	negs	r2, r2
    7dfe:	1abf      	subs	r7, r7, r2
    7e00:	42b7      	cmp	r7, r6
    7e02:	d100      	bne.n	7e06 <__aeabi_ddiv+0x2ea>
    7e04:	e10e      	b.n	8024 <__aeabi_ddiv+0x508>
    7e06:	1c38      	adds	r0, r7, #0
    7e08:	4649      	mov	r1, r9
    7e0a:	f7fe fa4f 	bl	62ac <__aeabi_uidiv>
    7e0e:	9b00      	ldr	r3, [sp, #0]
    7e10:	9002      	str	r0, [sp, #8]
    7e12:	4343      	muls	r3, r0
    7e14:	4649      	mov	r1, r9
    7e16:	1c38      	adds	r0, r7, #0
    7e18:	4698      	mov	r8, r3
    7e1a:	f7fe facd 	bl	63b8 <__aeabi_uidivmod>
    7e1e:	0c23      	lsrs	r3, r4, #16
    7e20:	040f      	lsls	r7, r1, #16
    7e22:	431f      	orrs	r7, r3
    7e24:	45b8      	cmp	r8, r7
    7e26:	d90c      	bls.n	7e42 <__aeabi_ddiv+0x326>
    7e28:	9b02      	ldr	r3, [sp, #8]
    7e2a:	19bf      	adds	r7, r7, r6
    7e2c:	3b01      	subs	r3, #1
    7e2e:	42be      	cmp	r6, r7
    7e30:	d900      	bls.n	7e34 <__aeabi_ddiv+0x318>
    7e32:	e0fb      	b.n	802c <__aeabi_ddiv+0x510>
    7e34:	45b8      	cmp	r8, r7
    7e36:	d800      	bhi.n	7e3a <__aeabi_ddiv+0x31e>
    7e38:	e0f8      	b.n	802c <__aeabi_ddiv+0x510>
    7e3a:	9b02      	ldr	r3, [sp, #8]
    7e3c:	19bf      	adds	r7, r7, r6
    7e3e:	3b02      	subs	r3, #2
    7e40:	9302      	str	r3, [sp, #8]
    7e42:	4643      	mov	r3, r8
    7e44:	1aff      	subs	r7, r7, r3
    7e46:	4649      	mov	r1, r9
    7e48:	1c38      	adds	r0, r7, #0
    7e4a:	f7fe fa2f 	bl	62ac <__aeabi_uidiv>
    7e4e:	9b00      	ldr	r3, [sp, #0]
    7e50:	9003      	str	r0, [sp, #12]
    7e52:	4343      	muls	r3, r0
    7e54:	4649      	mov	r1, r9
    7e56:	1c38      	adds	r0, r7, #0
    7e58:	4698      	mov	r8, r3
    7e5a:	f7fe faad 	bl	63b8 <__aeabi_uidivmod>
    7e5e:	0424      	lsls	r4, r4, #16
    7e60:	0409      	lsls	r1, r1, #16
    7e62:	0c24      	lsrs	r4, r4, #16
    7e64:	4321      	orrs	r1, r4
    7e66:	4588      	cmp	r8, r1
    7e68:	d90c      	bls.n	7e84 <__aeabi_ddiv+0x368>
    7e6a:	9b03      	ldr	r3, [sp, #12]
    7e6c:	1989      	adds	r1, r1, r6
    7e6e:	3b01      	subs	r3, #1
    7e70:	428e      	cmp	r6, r1
    7e72:	d900      	bls.n	7e76 <__aeabi_ddiv+0x35a>
    7e74:	e0dc      	b.n	8030 <__aeabi_ddiv+0x514>
    7e76:	4588      	cmp	r8, r1
    7e78:	d800      	bhi.n	7e7c <__aeabi_ddiv+0x360>
    7e7a:	e0d9      	b.n	8030 <__aeabi_ddiv+0x514>
    7e7c:	9b03      	ldr	r3, [sp, #12]
    7e7e:	1989      	adds	r1, r1, r6
    7e80:	3b02      	subs	r3, #2
    7e82:	9303      	str	r3, [sp, #12]
    7e84:	4643      	mov	r3, r8
    7e86:	1ac9      	subs	r1, r1, r3
    7e88:	9b02      	ldr	r3, [sp, #8]
    7e8a:	9a03      	ldr	r2, [sp, #12]
    7e8c:	041b      	lsls	r3, r3, #16
    7e8e:	9c05      	ldr	r4, [sp, #20]
    7e90:	431a      	orrs	r2, r3
    7e92:	0c10      	lsrs	r0, r2, #16
    7e94:	0413      	lsls	r3, r2, #16
    7e96:	4691      	mov	r9, r2
    7e98:	1c22      	adds	r2, r4, #0
    7e9a:	9f04      	ldr	r7, [sp, #16]
    7e9c:	0c1b      	lsrs	r3, r3, #16
    7e9e:	435a      	muls	r2, r3
    7ea0:	4344      	muls	r4, r0
    7ea2:	437b      	muls	r3, r7
    7ea4:	4378      	muls	r0, r7
    7ea6:	18e3      	adds	r3, r4, r3
    7ea8:	0c17      	lsrs	r7, r2, #16
    7eaa:	19db      	adds	r3, r3, r7
    7eac:	429c      	cmp	r4, r3
    7eae:	d903      	bls.n	7eb8 <__aeabi_ddiv+0x39c>
    7eb0:	2480      	movs	r4, #128	; 0x80
    7eb2:	0264      	lsls	r4, r4, #9
    7eb4:	46a4      	mov	ip, r4
    7eb6:	4460      	add	r0, ip
    7eb8:	0c1c      	lsrs	r4, r3, #16
    7eba:	0412      	lsls	r2, r2, #16
    7ebc:	041b      	lsls	r3, r3, #16
    7ebe:	0c12      	lsrs	r2, r2, #16
    7ec0:	1900      	adds	r0, r0, r4
    7ec2:	189b      	adds	r3, r3, r2
    7ec4:	4281      	cmp	r1, r0
    7ec6:	d200      	bcs.n	7eca <__aeabi_ddiv+0x3ae>
    7ec8:	e096      	b.n	7ff8 <__aeabi_ddiv+0x4dc>
    7eca:	d100      	bne.n	7ece <__aeabi_ddiv+0x3b2>
    7ecc:	e0fc      	b.n	80c8 <__aeabi_ddiv+0x5ac>
    7ece:	464a      	mov	r2, r9
    7ed0:	2301      	movs	r3, #1
    7ed2:	431a      	orrs	r2, r3
    7ed4:	4691      	mov	r9, r2
    7ed6:	4b9b      	ldr	r3, [pc, #620]	; (8144 <__aeabi_ddiv+0x628>)
    7ed8:	18eb      	adds	r3, r5, r3
    7eda:	2b00      	cmp	r3, #0
    7edc:	dc00      	bgt.n	7ee0 <__aeabi_ddiv+0x3c4>
    7ede:	e099      	b.n	8014 <__aeabi_ddiv+0x4f8>
    7ee0:	464a      	mov	r2, r9
    7ee2:	0752      	lsls	r2, r2, #29
    7ee4:	d00a      	beq.n	7efc <__aeabi_ddiv+0x3e0>
    7ee6:	220f      	movs	r2, #15
    7ee8:	4649      	mov	r1, r9
    7eea:	400a      	ands	r2, r1
    7eec:	2a04      	cmp	r2, #4
    7eee:	d005      	beq.n	7efc <__aeabi_ddiv+0x3e0>
    7ef0:	3104      	adds	r1, #4
    7ef2:	4549      	cmp	r1, r9
    7ef4:	4192      	sbcs	r2, r2
    7ef6:	4689      	mov	r9, r1
    7ef8:	4252      	negs	r2, r2
    7efa:	4493      	add	fp, r2
    7efc:	465a      	mov	r2, fp
    7efe:	01d2      	lsls	r2, r2, #7
    7f00:	d506      	bpl.n	7f10 <__aeabi_ddiv+0x3f4>
    7f02:	465a      	mov	r2, fp
    7f04:	4b90      	ldr	r3, [pc, #576]	; (8148 <__aeabi_ddiv+0x62c>)
    7f06:	401a      	ands	r2, r3
    7f08:	2380      	movs	r3, #128	; 0x80
    7f0a:	4693      	mov	fp, r2
    7f0c:	00db      	lsls	r3, r3, #3
    7f0e:	18eb      	adds	r3, r5, r3
    7f10:	4a8e      	ldr	r2, [pc, #568]	; (814c <__aeabi_ddiv+0x630>)
    7f12:	4293      	cmp	r3, r2
    7f14:	dd00      	ble.n	7f18 <__aeabi_ddiv+0x3fc>
    7f16:	e662      	b.n	7bde <__aeabi_ddiv+0xc2>
    7f18:	464a      	mov	r2, r9
    7f1a:	4659      	mov	r1, fp
    7f1c:	08d2      	lsrs	r2, r2, #3
    7f1e:	0749      	lsls	r1, r1, #29
    7f20:	4311      	orrs	r1, r2
    7f22:	465a      	mov	r2, fp
    7f24:	4689      	mov	r9, r1
    7f26:	0257      	lsls	r7, r2, #9
    7f28:	4651      	mov	r1, sl
    7f2a:	2201      	movs	r2, #1
    7f2c:	055b      	lsls	r3, r3, #21
    7f2e:	0b3f      	lsrs	r7, r7, #12
    7f30:	0d5b      	lsrs	r3, r3, #21
    7f32:	400a      	ands	r2, r1
    7f34:	e65a      	b.n	7bec <__aeabi_ddiv+0xd0>
    7f36:	2080      	movs	r0, #128	; 0x80
    7f38:	465a      	mov	r2, fp
    7f3a:	0300      	lsls	r0, r0, #12
    7f3c:	4202      	tst	r2, r0
    7f3e:	d008      	beq.n	7f52 <__aeabi_ddiv+0x436>
    7f40:	4207      	tst	r7, r0
    7f42:	d106      	bne.n	7f52 <__aeabi_ddiv+0x436>
    7f44:	4307      	orrs	r7, r0
    7f46:	033f      	lsls	r7, r7, #12
    7f48:	4699      	mov	r9, r3
    7f4a:	0b3f      	lsrs	r7, r7, #12
    7f4c:	4642      	mov	r2, r8
    7f4e:	4b80      	ldr	r3, [pc, #512]	; (8150 <__aeabi_ddiv+0x634>)
    7f50:	e64c      	b.n	7bec <__aeabi_ddiv+0xd0>
    7f52:	465f      	mov	r7, fp
    7f54:	4307      	orrs	r7, r0
    7f56:	033f      	lsls	r7, r7, #12
    7f58:	0b3f      	lsrs	r7, r7, #12
    7f5a:	1c22      	adds	r2, r4, #0
    7f5c:	4b7c      	ldr	r3, [pc, #496]	; (8150 <__aeabi_ddiv+0x634>)
    7f5e:	e645      	b.n	7bec <__aeabi_ddiv+0xd0>
    7f60:	f001 f9b6 	bl	92d0 <__clzsi2>
    7f64:	1c03      	adds	r3, r0, #0
    7f66:	3020      	adds	r0, #32
    7f68:	2827      	cmp	r0, #39	; 0x27
    7f6a:	dc00      	bgt.n	7f6e <__aeabi_ddiv+0x452>
    7f6c:	e65e      	b.n	7c2c <__aeabi_ddiv+0x110>
    7f6e:	3b08      	subs	r3, #8
    7f70:	409e      	lsls	r6, r3
    7f72:	2300      	movs	r3, #0
    7f74:	46b3      	mov	fp, r6
    7f76:	4699      	mov	r9, r3
    7f78:	e665      	b.n	7c46 <__aeabi_ddiv+0x12a>
    7f7a:	4650      	mov	r0, sl
    7f7c:	f001 f9a8 	bl	92d0 <__clzsi2>
    7f80:	1c02      	adds	r2, r0, #0
    7f82:	3220      	adds	r2, #32
    7f84:	2a27      	cmp	r2, #39	; 0x27
    7f86:	dc00      	bgt.n	7f8a <__aeabi_ddiv+0x46e>
    7f88:	e675      	b.n	7c76 <__aeabi_ddiv+0x15a>
    7f8a:	4657      	mov	r7, sl
    7f8c:	3808      	subs	r0, #8
    7f8e:	4087      	lsls	r7, r0
    7f90:	2300      	movs	r3, #0
    7f92:	e67b      	b.n	7c8c <__aeabi_ddiv+0x170>
    7f94:	4599      	cmp	r9, r3
    7f96:	d200      	bcs.n	7f9a <__aeabi_ddiv+0x47e>
    7f98:	e6af      	b.n	7cfa <__aeabi_ddiv+0x1de>
    7f9a:	465a      	mov	r2, fp
    7f9c:	4659      	mov	r1, fp
    7f9e:	0854      	lsrs	r4, r2, #1
    7fa0:	464a      	mov	r2, r9
    7fa2:	07c8      	lsls	r0, r1, #31
    7fa4:	0852      	lsrs	r2, r2, #1
    7fa6:	4302      	orrs	r2, r0
    7fa8:	9203      	str	r2, [sp, #12]
    7faa:	464a      	mov	r2, r9
    7fac:	07d2      	lsls	r2, r2, #31
    7fae:	4690      	mov	r8, r2
    7fb0:	e6a9      	b.n	7d06 <__aeabi_ddiv+0x1ea>
    7fb2:	2700      	movs	r7, #0
    7fb4:	4588      	cmp	r8, r1
    7fb6:	d300      	bcc.n	7fba <__aeabi_ddiv+0x49e>
    7fb8:	e71c      	b.n	7df4 <__aeabi_ddiv+0x2d8>
    7fba:	9f01      	ldr	r7, [sp, #4]
    7fbc:	465a      	mov	r2, fp
    7fbe:	46bc      	mov	ip, r7
    7fc0:	44e0      	add	r8, ip
    7fc2:	45b8      	cmp	r8, r7
    7fc4:	41bf      	sbcs	r7, r7
    7fc6:	427f      	negs	r7, r7
    7fc8:	19bf      	adds	r7, r7, r6
    7fca:	18ff      	adds	r7, r7, r3
    7fcc:	3a01      	subs	r2, #1
    7fce:	42be      	cmp	r6, r7
    7fd0:	d206      	bcs.n	7fe0 <__aeabi_ddiv+0x4c4>
    7fd2:	42bc      	cmp	r4, r7
    7fd4:	d85f      	bhi.n	8096 <__aeabi_ddiv+0x57a>
    7fd6:	d100      	bne.n	7fda <__aeabi_ddiv+0x4be>
    7fd8:	e09f      	b.n	811a <__aeabi_ddiv+0x5fe>
    7fda:	1b3f      	subs	r7, r7, r4
    7fdc:	4693      	mov	fp, r2
    7fde:	e709      	b.n	7df4 <__aeabi_ddiv+0x2d8>
    7fe0:	42b7      	cmp	r7, r6
    7fe2:	d1fa      	bne.n	7fda <__aeabi_ddiv+0x4be>
    7fe4:	9b01      	ldr	r3, [sp, #4]
    7fe6:	4543      	cmp	r3, r8
    7fe8:	d9f3      	bls.n	7fd2 <__aeabi_ddiv+0x4b6>
    7fea:	1b37      	subs	r7, r6, r4
    7fec:	4693      	mov	fp, r2
    7fee:	e701      	b.n	7df4 <__aeabi_ddiv+0x2d8>
    7ff0:	4693      	mov	fp, r2
    7ff2:	e6d4      	b.n	7d9e <__aeabi_ddiv+0x282>
    7ff4:	9302      	str	r3, [sp, #8]
    7ff6:	e6b1      	b.n	7d5c <__aeabi_ddiv+0x240>
    7ff8:	464a      	mov	r2, r9
    7ffa:	1989      	adds	r1, r1, r6
    7ffc:	3a01      	subs	r2, #1
    7ffe:	428e      	cmp	r6, r1
    8000:	d918      	bls.n	8034 <__aeabi_ddiv+0x518>
    8002:	4691      	mov	r9, r2
    8004:	4281      	cmp	r1, r0
    8006:	d000      	beq.n	800a <__aeabi_ddiv+0x4ee>
    8008:	e761      	b.n	7ece <__aeabi_ddiv+0x3b2>
    800a:	9a01      	ldr	r2, [sp, #4]
    800c:	429a      	cmp	r2, r3
    800e:	d000      	beq.n	8012 <__aeabi_ddiv+0x4f6>
    8010:	e75d      	b.n	7ece <__aeabi_ddiv+0x3b2>
    8012:	e760      	b.n	7ed6 <__aeabi_ddiv+0x3ba>
    8014:	4f4f      	ldr	r7, [pc, #316]	; (8154 <__aeabi_ddiv+0x638>)
    8016:	1b7f      	subs	r7, r7, r5
    8018:	2f38      	cmp	r7, #56	; 0x38
    801a:	dd13      	ble.n	8044 <__aeabi_ddiv+0x528>
    801c:	2201      	movs	r2, #1
    801e:	4653      	mov	r3, sl
    8020:	401a      	ands	r2, r3
    8022:	e64f      	b.n	7cc4 <__aeabi_ddiv+0x1a8>
    8024:	2301      	movs	r3, #1
    8026:	425b      	negs	r3, r3
    8028:	4699      	mov	r9, r3
    802a:	e754      	b.n	7ed6 <__aeabi_ddiv+0x3ba>
    802c:	9302      	str	r3, [sp, #8]
    802e:	e708      	b.n	7e42 <__aeabi_ddiv+0x326>
    8030:	9303      	str	r3, [sp, #12]
    8032:	e727      	b.n	7e84 <__aeabi_ddiv+0x368>
    8034:	4288      	cmp	r0, r1
    8036:	d83c      	bhi.n	80b2 <__aeabi_ddiv+0x596>
    8038:	d074      	beq.n	8124 <__aeabi_ddiv+0x608>
    803a:	4691      	mov	r9, r2
    803c:	e747      	b.n	7ece <__aeabi_ddiv+0x3b2>
    803e:	9b01      	ldr	r3, [sp, #4]
    8040:	469a      	mov	sl, r3
    8042:	e748      	b.n	7ed6 <__aeabi_ddiv+0x3ba>
    8044:	2f1f      	cmp	r7, #31
    8046:	dc44      	bgt.n	80d2 <__aeabi_ddiv+0x5b6>
    8048:	4b43      	ldr	r3, [pc, #268]	; (8158 <__aeabi_ddiv+0x63c>)
    804a:	464a      	mov	r2, r9
    804c:	469c      	mov	ip, r3
    804e:	465b      	mov	r3, fp
    8050:	4465      	add	r5, ip
    8052:	40fa      	lsrs	r2, r7
    8054:	40ab      	lsls	r3, r5
    8056:	4313      	orrs	r3, r2
    8058:	464a      	mov	r2, r9
    805a:	40aa      	lsls	r2, r5
    805c:	1c15      	adds	r5, r2, #0
    805e:	1e6a      	subs	r2, r5, #1
    8060:	4195      	sbcs	r5, r2
    8062:	465a      	mov	r2, fp
    8064:	40fa      	lsrs	r2, r7
    8066:	432b      	orrs	r3, r5
    8068:	1c17      	adds	r7, r2, #0
    806a:	075a      	lsls	r2, r3, #29
    806c:	d009      	beq.n	8082 <__aeabi_ddiv+0x566>
    806e:	220f      	movs	r2, #15
    8070:	401a      	ands	r2, r3
    8072:	2a04      	cmp	r2, #4
    8074:	d005      	beq.n	8082 <__aeabi_ddiv+0x566>
    8076:	1d1a      	adds	r2, r3, #4
    8078:	429a      	cmp	r2, r3
    807a:	419b      	sbcs	r3, r3
    807c:	425b      	negs	r3, r3
    807e:	18ff      	adds	r7, r7, r3
    8080:	1c13      	adds	r3, r2, #0
    8082:	023a      	lsls	r2, r7, #8
    8084:	d53e      	bpl.n	8104 <__aeabi_ddiv+0x5e8>
    8086:	4653      	mov	r3, sl
    8088:	2201      	movs	r2, #1
    808a:	2100      	movs	r1, #0
    808c:	401a      	ands	r2, r3
    808e:	2700      	movs	r7, #0
    8090:	2301      	movs	r3, #1
    8092:	4689      	mov	r9, r1
    8094:	e5aa      	b.n	7bec <__aeabi_ddiv+0xd0>
    8096:	2302      	movs	r3, #2
    8098:	425b      	negs	r3, r3
    809a:	469c      	mov	ip, r3
    809c:	9a01      	ldr	r2, [sp, #4]
    809e:	44e3      	add	fp, ip
    80a0:	4694      	mov	ip, r2
    80a2:	44e0      	add	r8, ip
    80a4:	4590      	cmp	r8, r2
    80a6:	419b      	sbcs	r3, r3
    80a8:	425b      	negs	r3, r3
    80aa:	199b      	adds	r3, r3, r6
    80ac:	19df      	adds	r7, r3, r7
    80ae:	1b3f      	subs	r7, r7, r4
    80b0:	e6a0      	b.n	7df4 <__aeabi_ddiv+0x2d8>
    80b2:	9f01      	ldr	r7, [sp, #4]
    80b4:	464a      	mov	r2, r9
    80b6:	007c      	lsls	r4, r7, #1
    80b8:	42bc      	cmp	r4, r7
    80ba:	41bf      	sbcs	r7, r7
    80bc:	427f      	negs	r7, r7
    80be:	19bf      	adds	r7, r7, r6
    80c0:	3a02      	subs	r2, #2
    80c2:	19c9      	adds	r1, r1, r7
    80c4:	9401      	str	r4, [sp, #4]
    80c6:	e79c      	b.n	8002 <__aeabi_ddiv+0x4e6>
    80c8:	2b00      	cmp	r3, #0
    80ca:	d195      	bne.n	7ff8 <__aeabi_ddiv+0x4dc>
    80cc:	2200      	movs	r2, #0
    80ce:	9201      	str	r2, [sp, #4]
    80d0:	e79b      	b.n	800a <__aeabi_ddiv+0x4ee>
    80d2:	465a      	mov	r2, fp
    80d4:	4b21      	ldr	r3, [pc, #132]	; (815c <__aeabi_ddiv+0x640>)
    80d6:	1b5b      	subs	r3, r3, r5
    80d8:	40da      	lsrs	r2, r3
    80da:	2f20      	cmp	r7, #32
    80dc:	d027      	beq.n	812e <__aeabi_ddiv+0x612>
    80de:	4b20      	ldr	r3, [pc, #128]	; (8160 <__aeabi_ddiv+0x644>)
    80e0:	469c      	mov	ip, r3
    80e2:	465b      	mov	r3, fp
    80e4:	4465      	add	r5, ip
    80e6:	40ab      	lsls	r3, r5
    80e8:	4649      	mov	r1, r9
    80ea:	430b      	orrs	r3, r1
    80ec:	1e59      	subs	r1, r3, #1
    80ee:	418b      	sbcs	r3, r1
    80f0:	4313      	orrs	r3, r2
    80f2:	2207      	movs	r2, #7
    80f4:	2700      	movs	r7, #0
    80f6:	401a      	ands	r2, r3
    80f8:	d007      	beq.n	810a <__aeabi_ddiv+0x5ee>
    80fa:	220f      	movs	r2, #15
    80fc:	2700      	movs	r7, #0
    80fe:	401a      	ands	r2, r3
    8100:	2a04      	cmp	r2, #4
    8102:	d1b8      	bne.n	8076 <__aeabi_ddiv+0x55a>
    8104:	077a      	lsls	r2, r7, #29
    8106:	027f      	lsls	r7, r7, #9
    8108:	0b3f      	lsrs	r7, r7, #12
    810a:	08db      	lsrs	r3, r3, #3
    810c:	4313      	orrs	r3, r2
    810e:	4699      	mov	r9, r3
    8110:	2201      	movs	r2, #1
    8112:	4653      	mov	r3, sl
    8114:	401a      	ands	r2, r3
    8116:	2300      	movs	r3, #0
    8118:	e568      	b.n	7bec <__aeabi_ddiv+0xd0>
    811a:	4541      	cmp	r1, r8
    811c:	d8bb      	bhi.n	8096 <__aeabi_ddiv+0x57a>
    811e:	4693      	mov	fp, r2
    8120:	2700      	movs	r7, #0
    8122:	e667      	b.n	7df4 <__aeabi_ddiv+0x2d8>
    8124:	9c01      	ldr	r4, [sp, #4]
    8126:	429c      	cmp	r4, r3
    8128:	d3c3      	bcc.n	80b2 <__aeabi_ddiv+0x596>
    812a:	4691      	mov	r9, r2
    812c:	e76d      	b.n	800a <__aeabi_ddiv+0x4ee>
    812e:	2300      	movs	r3, #0
    8130:	e7da      	b.n	80e8 <__aeabi_ddiv+0x5cc>
    8132:	2780      	movs	r7, #128	; 0x80
    8134:	465b      	mov	r3, fp
    8136:	033f      	lsls	r7, r7, #12
    8138:	431f      	orrs	r7, r3
    813a:	033f      	lsls	r7, r7, #12
    813c:	0b3f      	lsrs	r7, r7, #12
    813e:	9a01      	ldr	r2, [sp, #4]
    8140:	4b03      	ldr	r3, [pc, #12]	; (8150 <__aeabi_ddiv+0x634>)
    8142:	e553      	b.n	7bec <__aeabi_ddiv+0xd0>
    8144:	000003ff 	.word	0x000003ff
    8148:	feffffff 	.word	0xfeffffff
    814c:	000007fe 	.word	0x000007fe
    8150:	000007ff 	.word	0x000007ff
    8154:	fffffc02 	.word	0xfffffc02
    8158:	0000041e 	.word	0x0000041e
    815c:	fffffbe2 	.word	0xfffffbe2
    8160:	0000043e 	.word	0x0000043e

00008164 <__eqdf2>:
    8164:	b5f0      	push	{r4, r5, r6, r7, lr}
    8166:	465f      	mov	r7, fp
    8168:	464d      	mov	r5, r9
    816a:	4644      	mov	r4, r8
    816c:	4656      	mov	r6, sl
    816e:	b4f0      	push	{r4, r5, r6, r7}
    8170:	031f      	lsls	r7, r3, #12
    8172:	005c      	lsls	r4, r3, #1
    8174:	0fdb      	lsrs	r3, r3, #31
    8176:	4699      	mov	r9, r3
    8178:	4b1b      	ldr	r3, [pc, #108]	; (81e8 <__eqdf2+0x84>)
    817a:	030e      	lsls	r6, r1, #12
    817c:	004d      	lsls	r5, r1, #1
    817e:	0fc9      	lsrs	r1, r1, #31
    8180:	4684      	mov	ip, r0
    8182:	0b36      	lsrs	r6, r6, #12
    8184:	0d6d      	lsrs	r5, r5, #21
    8186:	468b      	mov	fp, r1
    8188:	4690      	mov	r8, r2
    818a:	0b3f      	lsrs	r7, r7, #12
    818c:	0d64      	lsrs	r4, r4, #21
    818e:	429d      	cmp	r5, r3
    8190:	d00c      	beq.n	81ac <__eqdf2+0x48>
    8192:	4b15      	ldr	r3, [pc, #84]	; (81e8 <__eqdf2+0x84>)
    8194:	429c      	cmp	r4, r3
    8196:	d010      	beq.n	81ba <__eqdf2+0x56>
    8198:	2301      	movs	r3, #1
    819a:	42a5      	cmp	r5, r4
    819c:	d014      	beq.n	81c8 <__eqdf2+0x64>
    819e:	1c18      	adds	r0, r3, #0
    81a0:	bc3c      	pop	{r2, r3, r4, r5}
    81a2:	4690      	mov	r8, r2
    81a4:	4699      	mov	r9, r3
    81a6:	46a2      	mov	sl, r4
    81a8:	46ab      	mov	fp, r5
    81aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    81ac:	1c31      	adds	r1, r6, #0
    81ae:	2301      	movs	r3, #1
    81b0:	4301      	orrs	r1, r0
    81b2:	d1f4      	bne.n	819e <__eqdf2+0x3a>
    81b4:	4b0c      	ldr	r3, [pc, #48]	; (81e8 <__eqdf2+0x84>)
    81b6:	429c      	cmp	r4, r3
    81b8:	d1ee      	bne.n	8198 <__eqdf2+0x34>
    81ba:	433a      	orrs	r2, r7
    81bc:	2301      	movs	r3, #1
    81be:	2a00      	cmp	r2, #0
    81c0:	d1ed      	bne.n	819e <__eqdf2+0x3a>
    81c2:	2301      	movs	r3, #1
    81c4:	42a5      	cmp	r5, r4
    81c6:	d1ea      	bne.n	819e <__eqdf2+0x3a>
    81c8:	42be      	cmp	r6, r7
    81ca:	d1e8      	bne.n	819e <__eqdf2+0x3a>
    81cc:	45c4      	cmp	ip, r8
    81ce:	d1e6      	bne.n	819e <__eqdf2+0x3a>
    81d0:	45cb      	cmp	fp, r9
    81d2:	d006      	beq.n	81e2 <__eqdf2+0x7e>
    81d4:	2d00      	cmp	r5, #0
    81d6:	d1e2      	bne.n	819e <__eqdf2+0x3a>
    81d8:	4330      	orrs	r0, r6
    81da:	1c03      	adds	r3, r0, #0
    81dc:	1e58      	subs	r0, r3, #1
    81de:	4183      	sbcs	r3, r0
    81e0:	e7dd      	b.n	819e <__eqdf2+0x3a>
    81e2:	2300      	movs	r3, #0
    81e4:	e7db      	b.n	819e <__eqdf2+0x3a>
    81e6:	46c0      	nop			; (mov r8, r8)
    81e8:	000007ff 	.word	0x000007ff

000081ec <__gedf2>:
    81ec:	b5f0      	push	{r4, r5, r6, r7, lr}
    81ee:	4657      	mov	r7, sl
    81f0:	4645      	mov	r5, r8
    81f2:	464e      	mov	r6, r9
    81f4:	b4e0      	push	{r5, r6, r7}
    81f6:	030f      	lsls	r7, r1, #12
    81f8:	004e      	lsls	r6, r1, #1
    81fa:	0fc9      	lsrs	r1, r1, #31
    81fc:	468a      	mov	sl, r1
    81fe:	4932      	ldr	r1, [pc, #200]	; (82c8 <__gedf2+0xdc>)
    8200:	031d      	lsls	r5, r3, #12
    8202:	005c      	lsls	r4, r3, #1
    8204:	4684      	mov	ip, r0
    8206:	0b3f      	lsrs	r7, r7, #12
    8208:	0d76      	lsrs	r6, r6, #21
    820a:	4690      	mov	r8, r2
    820c:	0b2d      	lsrs	r5, r5, #12
    820e:	0d64      	lsrs	r4, r4, #21
    8210:	0fdb      	lsrs	r3, r3, #31
    8212:	428e      	cmp	r6, r1
    8214:	d00f      	beq.n	8236 <__gedf2+0x4a>
    8216:	428c      	cmp	r4, r1
    8218:	d039      	beq.n	828e <__gedf2+0xa2>
    821a:	2e00      	cmp	r6, #0
    821c:	d110      	bne.n	8240 <__gedf2+0x54>
    821e:	4338      	orrs	r0, r7
    8220:	4241      	negs	r1, r0
    8222:	4141      	adcs	r1, r0
    8224:	4689      	mov	r9, r1
    8226:	2c00      	cmp	r4, #0
    8228:	d127      	bne.n	827a <__gedf2+0x8e>
    822a:	432a      	orrs	r2, r5
    822c:	d125      	bne.n	827a <__gedf2+0x8e>
    822e:	2000      	movs	r0, #0
    8230:	2900      	cmp	r1, #0
    8232:	d10e      	bne.n	8252 <__gedf2+0x66>
    8234:	e008      	b.n	8248 <__gedf2+0x5c>
    8236:	1c39      	adds	r1, r7, #0
    8238:	4301      	orrs	r1, r0
    823a:	d12e      	bne.n	829a <__gedf2+0xae>
    823c:	42b4      	cmp	r4, r6
    823e:	d026      	beq.n	828e <__gedf2+0xa2>
    8240:	2c00      	cmp	r4, #0
    8242:	d00b      	beq.n	825c <__gedf2+0x70>
    8244:	459a      	cmp	sl, r3
    8246:	d00d      	beq.n	8264 <__gedf2+0x78>
    8248:	4653      	mov	r3, sl
    824a:	4259      	negs	r1, r3
    824c:	2301      	movs	r3, #1
    824e:	4319      	orrs	r1, r3
    8250:	1c08      	adds	r0, r1, #0
    8252:	bc1c      	pop	{r2, r3, r4}
    8254:	4690      	mov	r8, r2
    8256:	4699      	mov	r9, r3
    8258:	46a2      	mov	sl, r4
    825a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    825c:	432a      	orrs	r2, r5
    825e:	d0f3      	beq.n	8248 <__gedf2+0x5c>
    8260:	459a      	cmp	sl, r3
    8262:	d1f1      	bne.n	8248 <__gedf2+0x5c>
    8264:	42a6      	cmp	r6, r4
    8266:	dcef      	bgt.n	8248 <__gedf2+0x5c>
    8268:	da1a      	bge.n	82a0 <__gedf2+0xb4>
    826a:	4650      	mov	r0, sl
    826c:	4241      	negs	r1, r0
    826e:	4148      	adcs	r0, r1
    8270:	2301      	movs	r3, #1
    8272:	4241      	negs	r1, r0
    8274:	4319      	orrs	r1, r3
    8276:	1c08      	adds	r0, r1, #0
    8278:	e7eb      	b.n	8252 <__gedf2+0x66>
    827a:	464a      	mov	r2, r9
    827c:	2a00      	cmp	r2, #0
    827e:	d0e1      	beq.n	8244 <__gedf2+0x58>
    8280:	4258      	negs	r0, r3
    8282:	4158      	adcs	r0, r3
    8284:	2201      	movs	r2, #1
    8286:	4241      	negs	r1, r0
    8288:	4311      	orrs	r1, r2
    828a:	1c08      	adds	r0, r1, #0
    828c:	e7e1      	b.n	8252 <__gedf2+0x66>
    828e:	1c29      	adds	r1, r5, #0
    8290:	4311      	orrs	r1, r2
    8292:	d102      	bne.n	829a <__gedf2+0xae>
    8294:	2e00      	cmp	r6, #0
    8296:	d0c2      	beq.n	821e <__gedf2+0x32>
    8298:	e7d4      	b.n	8244 <__gedf2+0x58>
    829a:	2002      	movs	r0, #2
    829c:	4240      	negs	r0, r0
    829e:	e7d8      	b.n	8252 <__gedf2+0x66>
    82a0:	42af      	cmp	r7, r5
    82a2:	d8d1      	bhi.n	8248 <__gedf2+0x5c>
    82a4:	d009      	beq.n	82ba <__gedf2+0xce>
    82a6:	2000      	movs	r0, #0
    82a8:	42af      	cmp	r7, r5
    82aa:	d2d2      	bcs.n	8252 <__gedf2+0x66>
    82ac:	4650      	mov	r0, sl
    82ae:	4241      	negs	r1, r0
    82b0:	4148      	adcs	r0, r1
    82b2:	2301      	movs	r3, #1
    82b4:	4240      	negs	r0, r0
    82b6:	4318      	orrs	r0, r3
    82b8:	e7cb      	b.n	8252 <__gedf2+0x66>
    82ba:	45c4      	cmp	ip, r8
    82bc:	d8c4      	bhi.n	8248 <__gedf2+0x5c>
    82be:	2000      	movs	r0, #0
    82c0:	45c4      	cmp	ip, r8
    82c2:	d3f3      	bcc.n	82ac <__gedf2+0xc0>
    82c4:	e7c5      	b.n	8252 <__gedf2+0x66>
    82c6:	46c0      	nop			; (mov r8, r8)
    82c8:	000007ff 	.word	0x000007ff

000082cc <__ledf2>:
    82cc:	b5f0      	push	{r4, r5, r6, r7, lr}
    82ce:	465f      	mov	r7, fp
    82d0:	464d      	mov	r5, r9
    82d2:	4644      	mov	r4, r8
    82d4:	4656      	mov	r6, sl
    82d6:	4680      	mov	r8, r0
    82d8:	b4f0      	push	{r4, r5, r6, r7}
    82da:	1c06      	adds	r6, r0, #0
    82dc:	0308      	lsls	r0, r1, #12
    82de:	0b00      	lsrs	r0, r0, #12
    82e0:	4684      	mov	ip, r0
    82e2:	482c      	ldr	r0, [pc, #176]	; (8394 <__ledf2+0xc8>)
    82e4:	004c      	lsls	r4, r1, #1
    82e6:	031f      	lsls	r7, r3, #12
    82e8:	005d      	lsls	r5, r3, #1
    82ea:	0fc9      	lsrs	r1, r1, #31
    82ec:	0d64      	lsrs	r4, r4, #21
    82ee:	468b      	mov	fp, r1
    82f0:	4691      	mov	r9, r2
    82f2:	0b3f      	lsrs	r7, r7, #12
    82f4:	0d6d      	lsrs	r5, r5, #21
    82f6:	0fdb      	lsrs	r3, r3, #31
    82f8:	4284      	cmp	r4, r0
    82fa:	d012      	beq.n	8322 <__ledf2+0x56>
    82fc:	4285      	cmp	r5, r0
    82fe:	d025      	beq.n	834c <__ledf2+0x80>
    8300:	2c00      	cmp	r4, #0
    8302:	d114      	bne.n	832e <__ledf2+0x62>
    8304:	4661      	mov	r1, ip
    8306:	430e      	orrs	r6, r1
    8308:	4270      	negs	r0, r6
    830a:	4146      	adcs	r6, r0
    830c:	2d00      	cmp	r5, #0
    830e:	d035      	beq.n	837c <__ledf2+0xb0>
    8310:	2e00      	cmp	r6, #0
    8312:	d021      	beq.n	8358 <__ledf2+0x8c>
    8314:	4258      	negs	r0, r3
    8316:	4158      	adcs	r0, r3
    8318:	2101      	movs	r1, #1
    831a:	4243      	negs	r3, r0
    831c:	430b      	orrs	r3, r1
    831e:	1c18      	adds	r0, r3, #0
    8320:	e00e      	b.n	8340 <__ledf2+0x74>
    8322:	4661      	mov	r1, ip
    8324:	2002      	movs	r0, #2
    8326:	4331      	orrs	r1, r6
    8328:	d10a      	bne.n	8340 <__ledf2+0x74>
    832a:	42a5      	cmp	r5, r4
    832c:	d00e      	beq.n	834c <__ledf2+0x80>
    832e:	2d00      	cmp	r5, #0
    8330:	d112      	bne.n	8358 <__ledf2+0x8c>
    8332:	433a      	orrs	r2, r7
    8334:	d110      	bne.n	8358 <__ledf2+0x8c>
    8336:	465b      	mov	r3, fp
    8338:	4259      	negs	r1, r3
    833a:	2301      	movs	r3, #1
    833c:	4319      	orrs	r1, r3
    833e:	1c08      	adds	r0, r1, #0
    8340:	bc3c      	pop	{r2, r3, r4, r5}
    8342:	4690      	mov	r8, r2
    8344:	4699      	mov	r9, r3
    8346:	46a2      	mov	sl, r4
    8348:	46ab      	mov	fp, r5
    834a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    834c:	1c39      	adds	r1, r7, #0
    834e:	2002      	movs	r0, #2
    8350:	4311      	orrs	r1, r2
    8352:	d1f5      	bne.n	8340 <__ledf2+0x74>
    8354:	2c00      	cmp	r4, #0
    8356:	d0d5      	beq.n	8304 <__ledf2+0x38>
    8358:	459b      	cmp	fp, r3
    835a:	d1ec      	bne.n	8336 <__ledf2+0x6a>
    835c:	42ac      	cmp	r4, r5
    835e:	dcea      	bgt.n	8336 <__ledf2+0x6a>
    8360:	db05      	blt.n	836e <__ledf2+0xa2>
    8362:	45bc      	cmp	ip, r7
    8364:	d8e7      	bhi.n	8336 <__ledf2+0x6a>
    8366:	d00f      	beq.n	8388 <__ledf2+0xbc>
    8368:	2000      	movs	r0, #0
    836a:	45bc      	cmp	ip, r7
    836c:	d2e8      	bcs.n	8340 <__ledf2+0x74>
    836e:	4658      	mov	r0, fp
    8370:	4241      	negs	r1, r0
    8372:	4148      	adcs	r0, r1
    8374:	4241      	negs	r1, r0
    8376:	2001      	movs	r0, #1
    8378:	4308      	orrs	r0, r1
    837a:	e7e1      	b.n	8340 <__ledf2+0x74>
    837c:	433a      	orrs	r2, r7
    837e:	d1c7      	bne.n	8310 <__ledf2+0x44>
    8380:	2000      	movs	r0, #0
    8382:	2e00      	cmp	r6, #0
    8384:	d1dc      	bne.n	8340 <__ledf2+0x74>
    8386:	e7d6      	b.n	8336 <__ledf2+0x6a>
    8388:	45c8      	cmp	r8, r9
    838a:	d8d4      	bhi.n	8336 <__ledf2+0x6a>
    838c:	2000      	movs	r0, #0
    838e:	45c8      	cmp	r8, r9
    8390:	d3ed      	bcc.n	836e <__ledf2+0xa2>
    8392:	e7d5      	b.n	8340 <__ledf2+0x74>
    8394:	000007ff 	.word	0x000007ff

00008398 <__aeabi_dmul>:
    8398:	b5f0      	push	{r4, r5, r6, r7, lr}
    839a:	465f      	mov	r7, fp
    839c:	4656      	mov	r6, sl
    839e:	464d      	mov	r5, r9
    83a0:	4644      	mov	r4, r8
    83a2:	b4f0      	push	{r4, r5, r6, r7}
    83a4:	1c05      	adds	r5, r0, #0
    83a6:	1c06      	adds	r6, r0, #0
    83a8:	0308      	lsls	r0, r1, #12
    83aa:	b087      	sub	sp, #28
    83ac:	4699      	mov	r9, r3
    83ae:	004f      	lsls	r7, r1, #1
    83b0:	0b03      	lsrs	r3, r0, #12
    83b2:	0fcc      	lsrs	r4, r1, #31
    83b4:	4692      	mov	sl, r2
    83b6:	469b      	mov	fp, r3
    83b8:	0d7f      	lsrs	r7, r7, #21
    83ba:	9401      	str	r4, [sp, #4]
    83bc:	d067      	beq.n	848e <__aeabi_dmul+0xf6>
    83be:	4b6c      	ldr	r3, [pc, #432]	; (8570 <__aeabi_dmul+0x1d8>)
    83c0:	429f      	cmp	r7, r3
    83c2:	d036      	beq.n	8432 <__aeabi_dmul+0x9a>
    83c4:	2080      	movs	r0, #128	; 0x80
    83c6:	465b      	mov	r3, fp
    83c8:	0340      	lsls	r0, r0, #13
    83ca:	4318      	orrs	r0, r3
    83cc:	00c0      	lsls	r0, r0, #3
    83ce:	0f6b      	lsrs	r3, r5, #29
    83d0:	4318      	orrs	r0, r3
    83d2:	4b68      	ldr	r3, [pc, #416]	; (8574 <__aeabi_dmul+0x1dc>)
    83d4:	4683      	mov	fp, r0
    83d6:	469c      	mov	ip, r3
    83d8:	2300      	movs	r3, #0
    83da:	4698      	mov	r8, r3
    83dc:	00ee      	lsls	r6, r5, #3
    83de:	4467      	add	r7, ip
    83e0:	9300      	str	r3, [sp, #0]
    83e2:	464b      	mov	r3, r9
    83e4:	4649      	mov	r1, r9
    83e6:	031d      	lsls	r5, r3, #12
    83e8:	0fc9      	lsrs	r1, r1, #31
    83ea:	005b      	lsls	r3, r3, #1
    83ec:	4652      	mov	r2, sl
    83ee:	0b2d      	lsrs	r5, r5, #12
    83f0:	0d5b      	lsrs	r3, r3, #21
    83f2:	4689      	mov	r9, r1
    83f4:	d100      	bne.n	83f8 <__aeabi_dmul+0x60>
    83f6:	e06e      	b.n	84d6 <__aeabi_dmul+0x13e>
    83f8:	495d      	ldr	r1, [pc, #372]	; (8570 <__aeabi_dmul+0x1d8>)
    83fa:	428b      	cmp	r3, r1
    83fc:	d064      	beq.n	84c8 <__aeabi_dmul+0x130>
    83fe:	2080      	movs	r0, #128	; 0x80
    8400:	495c      	ldr	r1, [pc, #368]	; (8574 <__aeabi_dmul+0x1dc>)
    8402:	0340      	lsls	r0, r0, #13
    8404:	468c      	mov	ip, r1
    8406:	2100      	movs	r1, #0
    8408:	4305      	orrs	r5, r0
    840a:	00ed      	lsls	r5, r5, #3
    840c:	0f50      	lsrs	r0, r2, #29
    840e:	4305      	orrs	r5, r0
    8410:	00d2      	lsls	r2, r2, #3
    8412:	4463      	add	r3, ip
    8414:	4648      	mov	r0, r9
    8416:	18ff      	adds	r7, r7, r3
    8418:	1c7b      	adds	r3, r7, #1
    841a:	469a      	mov	sl, r3
    841c:	9b00      	ldr	r3, [sp, #0]
    841e:	4060      	eors	r0, r4
    8420:	9002      	str	r0, [sp, #8]
    8422:	430b      	orrs	r3, r1
    8424:	2b0f      	cmp	r3, #15
    8426:	d900      	bls.n	842a <__aeabi_dmul+0x92>
    8428:	e0ac      	b.n	8584 <__aeabi_dmul+0x1ec>
    842a:	4853      	ldr	r0, [pc, #332]	; (8578 <__aeabi_dmul+0x1e0>)
    842c:	009b      	lsls	r3, r3, #2
    842e:	58c3      	ldr	r3, [r0, r3]
    8430:	469f      	mov	pc, r3
    8432:	465b      	mov	r3, fp
    8434:	431d      	orrs	r5, r3
    8436:	d000      	beq.n	843a <__aeabi_dmul+0xa2>
    8438:	e082      	b.n	8540 <__aeabi_dmul+0x1a8>
    843a:	2308      	movs	r3, #8
    843c:	9300      	str	r3, [sp, #0]
    843e:	2300      	movs	r3, #0
    8440:	469b      	mov	fp, r3
    8442:	3302      	adds	r3, #2
    8444:	2600      	movs	r6, #0
    8446:	4698      	mov	r8, r3
    8448:	e7cb      	b.n	83e2 <__aeabi_dmul+0x4a>
    844a:	9b02      	ldr	r3, [sp, #8]
    844c:	9301      	str	r3, [sp, #4]
    844e:	4643      	mov	r3, r8
    8450:	2b02      	cmp	r3, #2
    8452:	d159      	bne.n	8508 <__aeabi_dmul+0x170>
    8454:	2401      	movs	r4, #1
    8456:	2500      	movs	r5, #0
    8458:	2600      	movs	r6, #0
    845a:	9b01      	ldr	r3, [sp, #4]
    845c:	401c      	ands	r4, r3
    845e:	4b44      	ldr	r3, [pc, #272]	; (8570 <__aeabi_dmul+0x1d8>)
    8460:	2100      	movs	r1, #0
    8462:	032d      	lsls	r5, r5, #12
    8464:	0d0a      	lsrs	r2, r1, #20
    8466:	0512      	lsls	r2, r2, #20
    8468:	0b2d      	lsrs	r5, r5, #12
    846a:	4315      	orrs	r5, r2
    846c:	4a43      	ldr	r2, [pc, #268]	; (857c <__aeabi_dmul+0x1e4>)
    846e:	051b      	lsls	r3, r3, #20
    8470:	4015      	ands	r5, r2
    8472:	431d      	orrs	r5, r3
    8474:	006d      	lsls	r5, r5, #1
    8476:	07e4      	lsls	r4, r4, #31
    8478:	086d      	lsrs	r5, r5, #1
    847a:	4325      	orrs	r5, r4
    847c:	1c30      	adds	r0, r6, #0
    847e:	1c29      	adds	r1, r5, #0
    8480:	b007      	add	sp, #28
    8482:	bc3c      	pop	{r2, r3, r4, r5}
    8484:	4690      	mov	r8, r2
    8486:	4699      	mov	r9, r3
    8488:	46a2      	mov	sl, r4
    848a:	46ab      	mov	fp, r5
    848c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    848e:	432b      	orrs	r3, r5
    8490:	d04e      	beq.n	8530 <__aeabi_dmul+0x198>
    8492:	465b      	mov	r3, fp
    8494:	2b00      	cmp	r3, #0
    8496:	d100      	bne.n	849a <__aeabi_dmul+0x102>
    8498:	e185      	b.n	87a6 <__aeabi_dmul+0x40e>
    849a:	4658      	mov	r0, fp
    849c:	f000 ff18 	bl	92d0 <__clzsi2>
    84a0:	1c02      	adds	r2, r0, #0
    84a2:	2328      	movs	r3, #40	; 0x28
    84a4:	1c29      	adds	r1, r5, #0
    84a6:	1a9b      	subs	r3, r3, r2
    84a8:	1c16      	adds	r6, r2, #0
    84aa:	4658      	mov	r0, fp
    84ac:	40d9      	lsrs	r1, r3
    84ae:	3e08      	subs	r6, #8
    84b0:	40b0      	lsls	r0, r6
    84b2:	1c0b      	adds	r3, r1, #0
    84b4:	40b5      	lsls	r5, r6
    84b6:	4303      	orrs	r3, r0
    84b8:	469b      	mov	fp, r3
    84ba:	1c2e      	adds	r6, r5, #0
    84bc:	2300      	movs	r3, #0
    84be:	4f30      	ldr	r7, [pc, #192]	; (8580 <__aeabi_dmul+0x1e8>)
    84c0:	9300      	str	r3, [sp, #0]
    84c2:	1abf      	subs	r7, r7, r2
    84c4:	4698      	mov	r8, r3
    84c6:	e78c      	b.n	83e2 <__aeabi_dmul+0x4a>
    84c8:	4651      	mov	r1, sl
    84ca:	4329      	orrs	r1, r5
    84cc:	d12e      	bne.n	852c <__aeabi_dmul+0x194>
    84ce:	2500      	movs	r5, #0
    84d0:	2200      	movs	r2, #0
    84d2:	2102      	movs	r1, #2
    84d4:	e79e      	b.n	8414 <__aeabi_dmul+0x7c>
    84d6:	4651      	mov	r1, sl
    84d8:	4329      	orrs	r1, r5
    84da:	d023      	beq.n	8524 <__aeabi_dmul+0x18c>
    84dc:	2d00      	cmp	r5, #0
    84de:	d100      	bne.n	84e2 <__aeabi_dmul+0x14a>
    84e0:	e154      	b.n	878c <__aeabi_dmul+0x3f4>
    84e2:	1c28      	adds	r0, r5, #0
    84e4:	f000 fef4 	bl	92d0 <__clzsi2>
    84e8:	1c03      	adds	r3, r0, #0
    84ea:	2128      	movs	r1, #40	; 0x28
    84ec:	4650      	mov	r0, sl
    84ee:	1ac9      	subs	r1, r1, r3
    84f0:	1c1a      	adds	r2, r3, #0
    84f2:	40c8      	lsrs	r0, r1
    84f4:	4651      	mov	r1, sl
    84f6:	3a08      	subs	r2, #8
    84f8:	4091      	lsls	r1, r2
    84fa:	4095      	lsls	r5, r2
    84fc:	1c0a      	adds	r2, r1, #0
    84fe:	4305      	orrs	r5, r0
    8500:	481f      	ldr	r0, [pc, #124]	; (8580 <__aeabi_dmul+0x1e8>)
    8502:	2100      	movs	r1, #0
    8504:	1ac3      	subs	r3, r0, r3
    8506:	e785      	b.n	8414 <__aeabi_dmul+0x7c>
    8508:	2b03      	cmp	r3, #3
    850a:	d100      	bne.n	850e <__aeabi_dmul+0x176>
    850c:	e1c2      	b.n	8894 <__aeabi_dmul+0x4fc>
    850e:	2b01      	cmp	r3, #1
    8510:	d000      	beq.n	8514 <__aeabi_dmul+0x17c>
    8512:	e16d      	b.n	87f0 <__aeabi_dmul+0x458>
    8514:	4644      	mov	r4, r8
    8516:	9b01      	ldr	r3, [sp, #4]
    8518:	2500      	movs	r5, #0
    851a:	401c      	ands	r4, r3
    851c:	b2e4      	uxtb	r4, r4
    851e:	2300      	movs	r3, #0
    8520:	2600      	movs	r6, #0
    8522:	e79d      	b.n	8460 <__aeabi_dmul+0xc8>
    8524:	2500      	movs	r5, #0
    8526:	2200      	movs	r2, #0
    8528:	2101      	movs	r1, #1
    852a:	e773      	b.n	8414 <__aeabi_dmul+0x7c>
    852c:	2103      	movs	r1, #3
    852e:	e771      	b.n	8414 <__aeabi_dmul+0x7c>
    8530:	2304      	movs	r3, #4
    8532:	9300      	str	r3, [sp, #0]
    8534:	2300      	movs	r3, #0
    8536:	469b      	mov	fp, r3
    8538:	3301      	adds	r3, #1
    853a:	2600      	movs	r6, #0
    853c:	4698      	mov	r8, r3
    853e:	e750      	b.n	83e2 <__aeabi_dmul+0x4a>
    8540:	230c      	movs	r3, #12
    8542:	9300      	str	r3, [sp, #0]
    8544:	3b09      	subs	r3, #9
    8546:	4698      	mov	r8, r3
    8548:	e74b      	b.n	83e2 <__aeabi_dmul+0x4a>
    854a:	2580      	movs	r5, #128	; 0x80
    854c:	2400      	movs	r4, #0
    854e:	032d      	lsls	r5, r5, #12
    8550:	2600      	movs	r6, #0
    8552:	4b07      	ldr	r3, [pc, #28]	; (8570 <__aeabi_dmul+0x1d8>)
    8554:	e784      	b.n	8460 <__aeabi_dmul+0xc8>
    8556:	464b      	mov	r3, r9
    8558:	46ab      	mov	fp, r5
    855a:	1c16      	adds	r6, r2, #0
    855c:	9301      	str	r3, [sp, #4]
    855e:	4688      	mov	r8, r1
    8560:	e775      	b.n	844e <__aeabi_dmul+0xb6>
    8562:	9b02      	ldr	r3, [sp, #8]
    8564:	46ab      	mov	fp, r5
    8566:	1c16      	adds	r6, r2, #0
    8568:	9301      	str	r3, [sp, #4]
    856a:	4688      	mov	r8, r1
    856c:	e76f      	b.n	844e <__aeabi_dmul+0xb6>
    856e:	46c0      	nop			; (mov r8, r8)
    8570:	000007ff 	.word	0x000007ff
    8574:	fffffc01 	.word	0xfffffc01
    8578:	0000f638 	.word	0x0000f638
    857c:	800fffff 	.word	0x800fffff
    8580:	fffffc0d 	.word	0xfffffc0d
    8584:	0c33      	lsrs	r3, r6, #16
    8586:	0436      	lsls	r6, r6, #16
    8588:	0c36      	lsrs	r6, r6, #16
    858a:	469c      	mov	ip, r3
    858c:	1c33      	adds	r3, r6, #0
    858e:	0c14      	lsrs	r4, r2, #16
    8590:	0412      	lsls	r2, r2, #16
    8592:	0c12      	lsrs	r2, r2, #16
    8594:	4353      	muls	r3, r2
    8596:	4698      	mov	r8, r3
    8598:	4663      	mov	r3, ip
    859a:	4353      	muls	r3, r2
    859c:	4699      	mov	r9, r3
    859e:	4663      	mov	r3, ip
    85a0:	4363      	muls	r3, r4
    85a2:	9301      	str	r3, [sp, #4]
    85a4:	1c33      	adds	r3, r6, #0
    85a6:	4641      	mov	r1, r8
    85a8:	4363      	muls	r3, r4
    85aa:	0c09      	lsrs	r1, r1, #16
    85ac:	444b      	add	r3, r9
    85ae:	185b      	adds	r3, r3, r1
    85b0:	4599      	cmp	r9, r3
    85b2:	d905      	bls.n	85c0 <__aeabi_dmul+0x228>
    85b4:	2080      	movs	r0, #128	; 0x80
    85b6:	0240      	lsls	r0, r0, #9
    85b8:	4681      	mov	r9, r0
    85ba:	9901      	ldr	r1, [sp, #4]
    85bc:	4449      	add	r1, r9
    85be:	9101      	str	r1, [sp, #4]
    85c0:	0c19      	lsrs	r1, r3, #16
    85c2:	9103      	str	r1, [sp, #12]
    85c4:	4641      	mov	r1, r8
    85c6:	0409      	lsls	r1, r1, #16
    85c8:	0c09      	lsrs	r1, r1, #16
    85ca:	041b      	lsls	r3, r3, #16
    85cc:	185b      	adds	r3, r3, r1
    85ce:	9304      	str	r3, [sp, #16]
    85d0:	0c2b      	lsrs	r3, r5, #16
    85d2:	4698      	mov	r8, r3
    85d4:	1c33      	adds	r3, r6, #0
    85d6:	042d      	lsls	r5, r5, #16
    85d8:	0c29      	lsrs	r1, r5, #16
    85da:	434b      	muls	r3, r1
    85dc:	4660      	mov	r0, ip
    85de:	9300      	str	r3, [sp, #0]
    85e0:	4643      	mov	r3, r8
    85e2:	4665      	mov	r5, ip
    85e4:	4358      	muls	r0, r3
    85e6:	435e      	muls	r6, r3
    85e8:	9b00      	ldr	r3, [sp, #0]
    85ea:	434d      	muls	r5, r1
    85ec:	0c1b      	lsrs	r3, r3, #16
    85ee:	4699      	mov	r9, r3
    85f0:	19ae      	adds	r6, r5, r6
    85f2:	444e      	add	r6, r9
    85f4:	4684      	mov	ip, r0
    85f6:	42b5      	cmp	r5, r6
    85f8:	d903      	bls.n	8602 <__aeabi_dmul+0x26a>
    85fa:	2380      	movs	r3, #128	; 0x80
    85fc:	025b      	lsls	r3, r3, #9
    85fe:	4699      	mov	r9, r3
    8600:	44cc      	add	ip, r9
    8602:	0c35      	lsrs	r5, r6, #16
    8604:	1c2b      	adds	r3, r5, #0
    8606:	9803      	ldr	r0, [sp, #12]
    8608:	4463      	add	r3, ip
    860a:	4684      	mov	ip, r0
    860c:	9305      	str	r3, [sp, #20]
    860e:	9b00      	ldr	r3, [sp, #0]
    8610:	0436      	lsls	r6, r6, #16
    8612:	041b      	lsls	r3, r3, #16
    8614:	0c1b      	lsrs	r3, r3, #16
    8616:	18f3      	adds	r3, r6, r3
    8618:	449c      	add	ip, r3
    861a:	4660      	mov	r0, ip
    861c:	9003      	str	r0, [sp, #12]
    861e:	4658      	mov	r0, fp
    8620:	0405      	lsls	r5, r0, #16
    8622:	0c06      	lsrs	r6, r0, #16
    8624:	0c28      	lsrs	r0, r5, #16
    8626:	4684      	mov	ip, r0
    8628:	4350      	muls	r0, r2
    862a:	1c35      	adds	r5, r6, #0
    862c:	4681      	mov	r9, r0
    862e:	4660      	mov	r0, ip
    8630:	4365      	muls	r5, r4
    8632:	4344      	muls	r4, r0
    8634:	4648      	mov	r0, r9
    8636:	0c00      	lsrs	r0, r0, #16
    8638:	4683      	mov	fp, r0
    863a:	4372      	muls	r2, r6
    863c:	1914      	adds	r4, r2, r4
    863e:	445c      	add	r4, fp
    8640:	42a2      	cmp	r2, r4
    8642:	d903      	bls.n	864c <__aeabi_dmul+0x2b4>
    8644:	2280      	movs	r2, #128	; 0x80
    8646:	0252      	lsls	r2, r2, #9
    8648:	4693      	mov	fp, r2
    864a:	445d      	add	r5, fp
    864c:	0c22      	lsrs	r2, r4, #16
    864e:	18ad      	adds	r5, r5, r2
    8650:	464a      	mov	r2, r9
    8652:	0412      	lsls	r2, r2, #16
    8654:	0c12      	lsrs	r2, r2, #16
    8656:	0424      	lsls	r4, r4, #16
    8658:	4640      	mov	r0, r8
    865a:	18a4      	adds	r4, r4, r2
    865c:	4662      	mov	r2, ip
    865e:	434a      	muls	r2, r1
    8660:	4371      	muls	r1, r6
    8662:	4346      	muls	r6, r0
    8664:	4660      	mov	r0, ip
    8666:	9600      	str	r6, [sp, #0]
    8668:	4646      	mov	r6, r8
    866a:	4370      	muls	r0, r6
    866c:	4680      	mov	r8, r0
    866e:	0c10      	lsrs	r0, r2, #16
    8670:	4684      	mov	ip, r0
    8672:	4488      	add	r8, r1
    8674:	44e0      	add	r8, ip
    8676:	4541      	cmp	r1, r8
    8678:	d905      	bls.n	8686 <__aeabi_dmul+0x2ee>
    867a:	2180      	movs	r1, #128	; 0x80
    867c:	0249      	lsls	r1, r1, #9
    867e:	468c      	mov	ip, r1
    8680:	9900      	ldr	r1, [sp, #0]
    8682:	4461      	add	r1, ip
    8684:	9100      	str	r1, [sp, #0]
    8686:	9801      	ldr	r0, [sp, #4]
    8688:	9903      	ldr	r1, [sp, #12]
    868a:	4684      	mov	ip, r0
    868c:	4461      	add	r1, ip
    868e:	4299      	cmp	r1, r3
    8690:	419b      	sbcs	r3, r3
    8692:	425b      	negs	r3, r3
    8694:	4699      	mov	r9, r3
    8696:	9805      	ldr	r0, [sp, #20]
    8698:	4643      	mov	r3, r8
    869a:	4684      	mov	ip, r0
    869c:	0412      	lsls	r2, r2, #16
    869e:	0c12      	lsrs	r2, r2, #16
    86a0:	041b      	lsls	r3, r3, #16
    86a2:	189b      	adds	r3, r3, r2
    86a4:	4463      	add	r3, ip
    86a6:	469c      	mov	ip, r3
    86a8:	46ab      	mov	fp, r5
    86aa:	4283      	cmp	r3, r0
    86ac:	419b      	sbcs	r3, r3
    86ae:	4640      	mov	r0, r8
    86b0:	190a      	adds	r2, r1, r4
    86b2:	44cc      	add	ip, r9
    86b4:	42a2      	cmp	r2, r4
    86b6:	4189      	sbcs	r1, r1
    86b8:	44e3      	add	fp, ip
    86ba:	45cc      	cmp	ip, r9
    86bc:	41b6      	sbcs	r6, r6
    86be:	465c      	mov	r4, fp
    86c0:	0c00      	lsrs	r0, r0, #16
    86c2:	4680      	mov	r8, r0
    86c4:	4249      	negs	r1, r1
    86c6:	4276      	negs	r6, r6
    86c8:	425b      	negs	r3, r3
    86ca:	1864      	adds	r4, r4, r1
    86cc:	4333      	orrs	r3, r6
    86ce:	4498      	add	r8, r3
    86d0:	428c      	cmp	r4, r1
    86d2:	4189      	sbcs	r1, r1
    86d4:	45ab      	cmp	fp, r5
    86d6:	419b      	sbcs	r3, r3
    86d8:	4249      	negs	r1, r1
    86da:	425b      	negs	r3, r3
    86dc:	4319      	orrs	r1, r3
    86de:	1c0d      	adds	r5, r1, #0
    86e0:	9b00      	ldr	r3, [sp, #0]
    86e2:	4445      	add	r5, r8
    86e4:	18ee      	adds	r6, r5, r3
    86e6:	0276      	lsls	r6, r6, #9
    86e8:	0de5      	lsrs	r5, r4, #23
    86ea:	432e      	orrs	r6, r5
    86ec:	46b3      	mov	fp, r6
    86ee:	9b04      	ldr	r3, [sp, #16]
    86f0:	0256      	lsls	r6, r2, #9
    86f2:	431e      	orrs	r6, r3
    86f4:	1e73      	subs	r3, r6, #1
    86f6:	419e      	sbcs	r6, r3
    86f8:	465b      	mov	r3, fp
    86fa:	0dd2      	lsrs	r2, r2, #23
    86fc:	4332      	orrs	r2, r6
    86fe:	0266      	lsls	r6, r4, #9
    8700:	4316      	orrs	r6, r2
    8702:	01db      	lsls	r3, r3, #7
    8704:	d50a      	bpl.n	871c <__aeabi_dmul+0x384>
    8706:	2301      	movs	r3, #1
    8708:	4033      	ands	r3, r6
    870a:	0876      	lsrs	r6, r6, #1
    870c:	431e      	orrs	r6, r3
    870e:	465b      	mov	r3, fp
    8710:	07db      	lsls	r3, r3, #31
    8712:	431e      	orrs	r6, r3
    8714:	465b      	mov	r3, fp
    8716:	085b      	lsrs	r3, r3, #1
    8718:	469b      	mov	fp, r3
    871a:	4657      	mov	r7, sl
    871c:	4b63      	ldr	r3, [pc, #396]	; (88ac <__aeabi_dmul+0x514>)
    871e:	18fb      	adds	r3, r7, r3
    8720:	2b00      	cmp	r3, #0
    8722:	dd5a      	ble.n	87da <__aeabi_dmul+0x442>
    8724:	0772      	lsls	r2, r6, #29
    8726:	d009      	beq.n	873c <__aeabi_dmul+0x3a4>
    8728:	220f      	movs	r2, #15
    872a:	4032      	ands	r2, r6
    872c:	2a04      	cmp	r2, #4
    872e:	d005      	beq.n	873c <__aeabi_dmul+0x3a4>
    8730:	1d32      	adds	r2, r6, #4
    8732:	42b2      	cmp	r2, r6
    8734:	41b6      	sbcs	r6, r6
    8736:	4276      	negs	r6, r6
    8738:	44b3      	add	fp, r6
    873a:	1c16      	adds	r6, r2, #0
    873c:	465a      	mov	r2, fp
    873e:	01d2      	lsls	r2, r2, #7
    8740:	d506      	bpl.n	8750 <__aeabi_dmul+0x3b8>
    8742:	465a      	mov	r2, fp
    8744:	4b5a      	ldr	r3, [pc, #360]	; (88b0 <__aeabi_dmul+0x518>)
    8746:	401a      	ands	r2, r3
    8748:	2380      	movs	r3, #128	; 0x80
    874a:	4693      	mov	fp, r2
    874c:	00db      	lsls	r3, r3, #3
    874e:	18fb      	adds	r3, r7, r3
    8750:	4a58      	ldr	r2, [pc, #352]	; (88b4 <__aeabi_dmul+0x51c>)
    8752:	4293      	cmp	r3, r2
    8754:	dd34      	ble.n	87c0 <__aeabi_dmul+0x428>
    8756:	2401      	movs	r4, #1
    8758:	9b02      	ldr	r3, [sp, #8]
    875a:	2500      	movs	r5, #0
    875c:	401c      	ands	r4, r3
    875e:	2600      	movs	r6, #0
    8760:	4b55      	ldr	r3, [pc, #340]	; (88b8 <__aeabi_dmul+0x520>)
    8762:	e67d      	b.n	8460 <__aeabi_dmul+0xc8>
    8764:	2080      	movs	r0, #128	; 0x80
    8766:	465b      	mov	r3, fp
    8768:	0300      	lsls	r0, r0, #12
    876a:	4203      	tst	r3, r0
    876c:	d008      	beq.n	8780 <__aeabi_dmul+0x3e8>
    876e:	4205      	tst	r5, r0
    8770:	d106      	bne.n	8780 <__aeabi_dmul+0x3e8>
    8772:	4305      	orrs	r5, r0
    8774:	032d      	lsls	r5, r5, #12
    8776:	0b2d      	lsrs	r5, r5, #12
    8778:	464c      	mov	r4, r9
    877a:	1c16      	adds	r6, r2, #0
    877c:	4b4e      	ldr	r3, [pc, #312]	; (88b8 <__aeabi_dmul+0x520>)
    877e:	e66f      	b.n	8460 <__aeabi_dmul+0xc8>
    8780:	465d      	mov	r5, fp
    8782:	4305      	orrs	r5, r0
    8784:	032d      	lsls	r5, r5, #12
    8786:	0b2d      	lsrs	r5, r5, #12
    8788:	4b4b      	ldr	r3, [pc, #300]	; (88b8 <__aeabi_dmul+0x520>)
    878a:	e669      	b.n	8460 <__aeabi_dmul+0xc8>
    878c:	4650      	mov	r0, sl
    878e:	f000 fd9f 	bl	92d0 <__clzsi2>
    8792:	1c03      	adds	r3, r0, #0
    8794:	3320      	adds	r3, #32
    8796:	2b27      	cmp	r3, #39	; 0x27
    8798:	dc00      	bgt.n	879c <__aeabi_dmul+0x404>
    879a:	e6a6      	b.n	84ea <__aeabi_dmul+0x152>
    879c:	4655      	mov	r5, sl
    879e:	3808      	subs	r0, #8
    87a0:	4085      	lsls	r5, r0
    87a2:	2200      	movs	r2, #0
    87a4:	e6ac      	b.n	8500 <__aeabi_dmul+0x168>
    87a6:	1c28      	adds	r0, r5, #0
    87a8:	f000 fd92 	bl	92d0 <__clzsi2>
    87ac:	1c02      	adds	r2, r0, #0
    87ae:	3220      	adds	r2, #32
    87b0:	2a27      	cmp	r2, #39	; 0x27
    87b2:	dc00      	bgt.n	87b6 <__aeabi_dmul+0x41e>
    87b4:	e675      	b.n	84a2 <__aeabi_dmul+0x10a>
    87b6:	3808      	subs	r0, #8
    87b8:	4085      	lsls	r5, r0
    87ba:	2600      	movs	r6, #0
    87bc:	46ab      	mov	fp, r5
    87be:	e67d      	b.n	84bc <__aeabi_dmul+0x124>
    87c0:	465a      	mov	r2, fp
    87c2:	08f6      	lsrs	r6, r6, #3
    87c4:	0752      	lsls	r2, r2, #29
    87c6:	4316      	orrs	r6, r2
    87c8:	465a      	mov	r2, fp
    87ca:	2401      	movs	r4, #1
    87cc:	0255      	lsls	r5, r2, #9
    87ce:	9a02      	ldr	r2, [sp, #8]
    87d0:	055b      	lsls	r3, r3, #21
    87d2:	0b2d      	lsrs	r5, r5, #12
    87d4:	0d5b      	lsrs	r3, r3, #21
    87d6:	4014      	ands	r4, r2
    87d8:	e642      	b.n	8460 <__aeabi_dmul+0xc8>
    87da:	4d38      	ldr	r5, [pc, #224]	; (88bc <__aeabi_dmul+0x524>)
    87dc:	1bed      	subs	r5, r5, r7
    87de:	2d38      	cmp	r5, #56	; 0x38
    87e0:	dd0a      	ble.n	87f8 <__aeabi_dmul+0x460>
    87e2:	2401      	movs	r4, #1
    87e4:	9b02      	ldr	r3, [sp, #8]
    87e6:	2500      	movs	r5, #0
    87e8:	401c      	ands	r4, r3
    87ea:	2600      	movs	r6, #0
    87ec:	2300      	movs	r3, #0
    87ee:	e637      	b.n	8460 <__aeabi_dmul+0xc8>
    87f0:	9b01      	ldr	r3, [sp, #4]
    87f2:	4657      	mov	r7, sl
    87f4:	9302      	str	r3, [sp, #8]
    87f6:	e791      	b.n	871c <__aeabi_dmul+0x384>
    87f8:	2d1f      	cmp	r5, #31
    87fa:	dc25      	bgt.n	8848 <__aeabi_dmul+0x4b0>
    87fc:	4b30      	ldr	r3, [pc, #192]	; (88c0 <__aeabi_dmul+0x528>)
    87fe:	1c32      	adds	r2, r6, #0
    8800:	469c      	mov	ip, r3
    8802:	4467      	add	r7, ip
    8804:	40be      	lsls	r6, r7
    8806:	465b      	mov	r3, fp
    8808:	40bb      	lsls	r3, r7
    880a:	1c37      	adds	r7, r6, #0
    880c:	40ea      	lsrs	r2, r5
    880e:	1e7e      	subs	r6, r7, #1
    8810:	41b7      	sbcs	r7, r6
    8812:	4313      	orrs	r3, r2
    8814:	433b      	orrs	r3, r7
    8816:	1c1e      	adds	r6, r3, #0
    8818:	465b      	mov	r3, fp
    881a:	40eb      	lsrs	r3, r5
    881c:	1c1d      	adds	r5, r3, #0
    881e:	0773      	lsls	r3, r6, #29
    8820:	d009      	beq.n	8836 <__aeabi_dmul+0x49e>
    8822:	230f      	movs	r3, #15
    8824:	4033      	ands	r3, r6
    8826:	2b04      	cmp	r3, #4
    8828:	d005      	beq.n	8836 <__aeabi_dmul+0x49e>
    882a:	1d33      	adds	r3, r6, #4
    882c:	42b3      	cmp	r3, r6
    882e:	41b6      	sbcs	r6, r6
    8830:	4276      	negs	r6, r6
    8832:	19ad      	adds	r5, r5, r6
    8834:	1c1e      	adds	r6, r3, #0
    8836:	022b      	lsls	r3, r5, #8
    8838:	d520      	bpl.n	887c <__aeabi_dmul+0x4e4>
    883a:	2401      	movs	r4, #1
    883c:	9b02      	ldr	r3, [sp, #8]
    883e:	2500      	movs	r5, #0
    8840:	401c      	ands	r4, r3
    8842:	2600      	movs	r6, #0
    8844:	2301      	movs	r3, #1
    8846:	e60b      	b.n	8460 <__aeabi_dmul+0xc8>
    8848:	465a      	mov	r2, fp
    884a:	4b1e      	ldr	r3, [pc, #120]	; (88c4 <__aeabi_dmul+0x52c>)
    884c:	1bdb      	subs	r3, r3, r7
    884e:	40da      	lsrs	r2, r3
    8850:	1c13      	adds	r3, r2, #0
    8852:	2d20      	cmp	r5, #32
    8854:	d01c      	beq.n	8890 <__aeabi_dmul+0x4f8>
    8856:	4a1c      	ldr	r2, [pc, #112]	; (88c8 <__aeabi_dmul+0x530>)
    8858:	4694      	mov	ip, r2
    885a:	465a      	mov	r2, fp
    885c:	4467      	add	r7, ip
    885e:	40ba      	lsls	r2, r7
    8860:	1c17      	adds	r7, r2, #0
    8862:	433e      	orrs	r6, r7
    8864:	1e72      	subs	r2, r6, #1
    8866:	4196      	sbcs	r6, r2
    8868:	431e      	orrs	r6, r3
    886a:	2307      	movs	r3, #7
    886c:	2500      	movs	r5, #0
    886e:	4033      	ands	r3, r6
    8870:	d007      	beq.n	8882 <__aeabi_dmul+0x4ea>
    8872:	230f      	movs	r3, #15
    8874:	2500      	movs	r5, #0
    8876:	4033      	ands	r3, r6
    8878:	2b04      	cmp	r3, #4
    887a:	d1d6      	bne.n	882a <__aeabi_dmul+0x492>
    887c:	076b      	lsls	r3, r5, #29
    887e:	026d      	lsls	r5, r5, #9
    8880:	0b2d      	lsrs	r5, r5, #12
    8882:	2401      	movs	r4, #1
    8884:	08f6      	lsrs	r6, r6, #3
    8886:	431e      	orrs	r6, r3
    8888:	9b02      	ldr	r3, [sp, #8]
    888a:	401c      	ands	r4, r3
    888c:	2300      	movs	r3, #0
    888e:	e5e7      	b.n	8460 <__aeabi_dmul+0xc8>
    8890:	2700      	movs	r7, #0
    8892:	e7e6      	b.n	8862 <__aeabi_dmul+0x4ca>
    8894:	2580      	movs	r5, #128	; 0x80
    8896:	465b      	mov	r3, fp
    8898:	2401      	movs	r4, #1
    889a:	032d      	lsls	r5, r5, #12
    889c:	431d      	orrs	r5, r3
    889e:	9b01      	ldr	r3, [sp, #4]
    88a0:	032d      	lsls	r5, r5, #12
    88a2:	4023      	ands	r3, r4
    88a4:	1c1c      	adds	r4, r3, #0
    88a6:	0b2d      	lsrs	r5, r5, #12
    88a8:	4b03      	ldr	r3, [pc, #12]	; (88b8 <__aeabi_dmul+0x520>)
    88aa:	e5d9      	b.n	8460 <__aeabi_dmul+0xc8>
    88ac:	000003ff 	.word	0x000003ff
    88b0:	feffffff 	.word	0xfeffffff
    88b4:	000007fe 	.word	0x000007fe
    88b8:	000007ff 	.word	0x000007ff
    88bc:	fffffc02 	.word	0xfffffc02
    88c0:	0000041e 	.word	0x0000041e
    88c4:	fffffbe2 	.word	0xfffffbe2
    88c8:	0000043e 	.word	0x0000043e

000088cc <__aeabi_dsub>:
    88cc:	b5f0      	push	{r4, r5, r6, r7, lr}
    88ce:	464d      	mov	r5, r9
    88d0:	4644      	mov	r4, r8
    88d2:	465f      	mov	r7, fp
    88d4:	4656      	mov	r6, sl
    88d6:	b4f0      	push	{r4, r5, r6, r7}
    88d8:	1c0e      	adds	r6, r1, #0
    88da:	1c11      	adds	r1, r2, #0
    88dc:	0332      	lsls	r2, r6, #12
    88de:	0a52      	lsrs	r2, r2, #9
    88e0:	0f47      	lsrs	r7, r0, #29
    88e2:	4317      	orrs	r7, r2
    88e4:	00c5      	lsls	r5, r0, #3
    88e6:	031a      	lsls	r2, r3, #12
    88e8:	0058      	lsls	r0, r3, #1
    88ea:	0fdb      	lsrs	r3, r3, #31
    88ec:	4699      	mov	r9, r3
    88ee:	0a52      	lsrs	r2, r2, #9
    88f0:	0f4b      	lsrs	r3, r1, #29
    88f2:	b083      	sub	sp, #12
    88f4:	431a      	orrs	r2, r3
    88f6:	00cb      	lsls	r3, r1, #3
    88f8:	9301      	str	r3, [sp, #4]
    88fa:	4bcf      	ldr	r3, [pc, #828]	; (8c38 <__aeabi_dsub+0x36c>)
    88fc:	0074      	lsls	r4, r6, #1
    88fe:	0ff6      	lsrs	r6, r6, #31
    8900:	0d64      	lsrs	r4, r4, #21
    8902:	46b0      	mov	r8, r6
    8904:	0d40      	lsrs	r0, r0, #21
    8906:	4298      	cmp	r0, r3
    8908:	d100      	bne.n	890c <__aeabi_dsub+0x40>
    890a:	e0e8      	b.n	8ade <__aeabi_dsub+0x212>
    890c:	2301      	movs	r3, #1
    890e:	4649      	mov	r1, r9
    8910:	4059      	eors	r1, r3
    8912:	1c0b      	adds	r3, r1, #0
    8914:	429e      	cmp	r6, r3
    8916:	d100      	bne.n	891a <__aeabi_dsub+0x4e>
    8918:	e0b1      	b.n	8a7e <__aeabi_dsub+0x1b2>
    891a:	1a26      	subs	r6, r4, r0
    891c:	2e00      	cmp	r6, #0
    891e:	dc00      	bgt.n	8922 <__aeabi_dsub+0x56>
    8920:	e11c      	b.n	8b5c <__aeabi_dsub+0x290>
    8922:	2800      	cmp	r0, #0
    8924:	d142      	bne.n	89ac <__aeabi_dsub+0xe0>
    8926:	1c13      	adds	r3, r2, #0
    8928:	9901      	ldr	r1, [sp, #4]
    892a:	430b      	orrs	r3, r1
    892c:	d000      	beq.n	8930 <__aeabi_dsub+0x64>
    892e:	e0e6      	b.n	8afe <__aeabi_dsub+0x232>
    8930:	076b      	lsls	r3, r5, #29
    8932:	d100      	bne.n	8936 <__aeabi_dsub+0x6a>
    8934:	e08e      	b.n	8a54 <__aeabi_dsub+0x188>
    8936:	230f      	movs	r3, #15
    8938:	402b      	ands	r3, r5
    893a:	2b04      	cmp	r3, #4
    893c:	d100      	bne.n	8940 <__aeabi_dsub+0x74>
    893e:	e089      	b.n	8a54 <__aeabi_dsub+0x188>
    8940:	1d2a      	adds	r2, r5, #4
    8942:	42aa      	cmp	r2, r5
    8944:	41ad      	sbcs	r5, r5
    8946:	2380      	movs	r3, #128	; 0x80
    8948:	2601      	movs	r6, #1
    894a:	4641      	mov	r1, r8
    894c:	426d      	negs	r5, r5
    894e:	197f      	adds	r7, r7, r5
    8950:	041b      	lsls	r3, r3, #16
    8952:	403b      	ands	r3, r7
    8954:	400e      	ands	r6, r1
    8956:	1c15      	adds	r5, r2, #0
    8958:	2b00      	cmp	r3, #0
    895a:	d100      	bne.n	895e <__aeabi_dsub+0x92>
    895c:	e083      	b.n	8a66 <__aeabi_dsub+0x19a>
    895e:	4bb6      	ldr	r3, [pc, #728]	; (8c38 <__aeabi_dsub+0x36c>)
    8960:	3401      	adds	r4, #1
    8962:	429c      	cmp	r4, r3
    8964:	d100      	bne.n	8968 <__aeabi_dsub+0x9c>
    8966:	e116      	b.n	8b96 <__aeabi_dsub+0x2ca>
    8968:	1c3a      	adds	r2, r7, #0
    896a:	4bb4      	ldr	r3, [pc, #720]	; (8c3c <__aeabi_dsub+0x370>)
    896c:	08ed      	lsrs	r5, r5, #3
    896e:	401a      	ands	r2, r3
    8970:	0750      	lsls	r0, r2, #29
    8972:	0564      	lsls	r4, r4, #21
    8974:	0252      	lsls	r2, r2, #9
    8976:	4305      	orrs	r5, r0
    8978:	0b12      	lsrs	r2, r2, #12
    897a:	0d64      	lsrs	r4, r4, #21
    897c:	2100      	movs	r1, #0
    897e:	0312      	lsls	r2, r2, #12
    8980:	0d0b      	lsrs	r3, r1, #20
    8982:	051b      	lsls	r3, r3, #20
    8984:	0564      	lsls	r4, r4, #21
    8986:	0b12      	lsrs	r2, r2, #12
    8988:	431a      	orrs	r2, r3
    898a:	0863      	lsrs	r3, r4, #1
    898c:	4cac      	ldr	r4, [pc, #688]	; (8c40 <__aeabi_dsub+0x374>)
    898e:	07f6      	lsls	r6, r6, #31
    8990:	4014      	ands	r4, r2
    8992:	431c      	orrs	r4, r3
    8994:	0064      	lsls	r4, r4, #1
    8996:	0864      	lsrs	r4, r4, #1
    8998:	4334      	orrs	r4, r6
    899a:	1c28      	adds	r0, r5, #0
    899c:	1c21      	adds	r1, r4, #0
    899e:	b003      	add	sp, #12
    89a0:	bc3c      	pop	{r2, r3, r4, r5}
    89a2:	4690      	mov	r8, r2
    89a4:	4699      	mov	r9, r3
    89a6:	46a2      	mov	sl, r4
    89a8:	46ab      	mov	fp, r5
    89aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
    89ac:	4ba2      	ldr	r3, [pc, #648]	; (8c38 <__aeabi_dsub+0x36c>)
    89ae:	429c      	cmp	r4, r3
    89b0:	d0be      	beq.n	8930 <__aeabi_dsub+0x64>
    89b2:	2380      	movs	r3, #128	; 0x80
    89b4:	041b      	lsls	r3, r3, #16
    89b6:	431a      	orrs	r2, r3
    89b8:	2e38      	cmp	r6, #56	; 0x38
    89ba:	dd00      	ble.n	89be <__aeabi_dsub+0xf2>
    89bc:	e103      	b.n	8bc6 <__aeabi_dsub+0x2fa>
    89be:	2e1f      	cmp	r6, #31
    89c0:	dd00      	ble.n	89c4 <__aeabi_dsub+0xf8>
    89c2:	e13f      	b.n	8c44 <__aeabi_dsub+0x378>
    89c4:	2020      	movs	r0, #32
    89c6:	1b83      	subs	r3, r0, r6
    89c8:	4699      	mov	r9, r3
    89ca:	1c13      	adds	r3, r2, #0
    89cc:	4649      	mov	r1, r9
    89ce:	408b      	lsls	r3, r1
    89d0:	469c      	mov	ip, r3
    89d2:	9b01      	ldr	r3, [sp, #4]
    89d4:	4660      	mov	r0, ip
    89d6:	40f3      	lsrs	r3, r6
    89d8:	4303      	orrs	r3, r0
    89da:	9801      	ldr	r0, [sp, #4]
    89dc:	40f2      	lsrs	r2, r6
    89de:	4088      	lsls	r0, r1
    89e0:	1c01      	adds	r1, r0, #0
    89e2:	1e48      	subs	r0, r1, #1
    89e4:	4181      	sbcs	r1, r0
    89e6:	430b      	orrs	r3, r1
    89e8:	1aeb      	subs	r3, r5, r3
    89ea:	429d      	cmp	r5, r3
    89ec:	4180      	sbcs	r0, r0
    89ee:	1c1d      	adds	r5, r3, #0
    89f0:	1aba      	subs	r2, r7, r2
    89f2:	4240      	negs	r0, r0
    89f4:	1a17      	subs	r7, r2, r0
    89f6:	023b      	lsls	r3, r7, #8
    89f8:	d400      	bmi.n	89fc <__aeabi_dsub+0x130>
    89fa:	e0a8      	b.n	8b4e <__aeabi_dsub+0x282>
    89fc:	027a      	lsls	r2, r7, #9
    89fe:	0a56      	lsrs	r6, r2, #9
    8a00:	2e00      	cmp	r6, #0
    8a02:	d100      	bne.n	8a06 <__aeabi_dsub+0x13a>
    8a04:	e0ca      	b.n	8b9c <__aeabi_dsub+0x2d0>
    8a06:	1c30      	adds	r0, r6, #0
    8a08:	f000 fc62 	bl	92d0 <__clzsi2>
    8a0c:	1c03      	adds	r3, r0, #0
    8a0e:	3b08      	subs	r3, #8
    8a10:	2b1f      	cmp	r3, #31
    8a12:	dd00      	ble.n	8a16 <__aeabi_dsub+0x14a>
    8a14:	e0cb      	b.n	8bae <__aeabi_dsub+0x2e2>
    8a16:	2228      	movs	r2, #40	; 0x28
    8a18:	1c29      	adds	r1, r5, #0
    8a1a:	1a12      	subs	r2, r2, r0
    8a1c:	40d1      	lsrs	r1, r2
    8a1e:	409e      	lsls	r6, r3
    8a20:	1c0a      	adds	r2, r1, #0
    8a22:	409d      	lsls	r5, r3
    8a24:	4332      	orrs	r2, r6
    8a26:	429c      	cmp	r4, r3
    8a28:	dd00      	ble.n	8a2c <__aeabi_dsub+0x160>
    8a2a:	e0c8      	b.n	8bbe <__aeabi_dsub+0x2f2>
    8a2c:	1b1c      	subs	r4, r3, r4
    8a2e:	1c67      	adds	r7, r4, #1
    8a30:	2f1f      	cmp	r7, #31
    8a32:	dd00      	ble.n	8a36 <__aeabi_dsub+0x16a>
    8a34:	e0ed      	b.n	8c12 <__aeabi_dsub+0x346>
    8a36:	231f      	movs	r3, #31
    8a38:	1c29      	adds	r1, r5, #0
    8a3a:	1b1c      	subs	r4, r3, r4
    8a3c:	1c13      	adds	r3, r2, #0
    8a3e:	40a5      	lsls	r5, r4
    8a40:	40a3      	lsls	r3, r4
    8a42:	40f9      	lsrs	r1, r7
    8a44:	1e6c      	subs	r4, r5, #1
    8a46:	41a5      	sbcs	r5, r4
    8a48:	40fa      	lsrs	r2, r7
    8a4a:	4319      	orrs	r1, r3
    8a4c:	430d      	orrs	r5, r1
    8a4e:	1c17      	adds	r7, r2, #0
    8a50:	2400      	movs	r4, #0
    8a52:	e76d      	b.n	8930 <__aeabi_dsub+0x64>
    8a54:	2380      	movs	r3, #128	; 0x80
    8a56:	2601      	movs	r6, #1
    8a58:	4642      	mov	r2, r8
    8a5a:	041b      	lsls	r3, r3, #16
    8a5c:	403b      	ands	r3, r7
    8a5e:	4016      	ands	r6, r2
    8a60:	2b00      	cmp	r3, #0
    8a62:	d000      	beq.n	8a66 <__aeabi_dsub+0x19a>
    8a64:	e77b      	b.n	895e <__aeabi_dsub+0x92>
    8a66:	4b74      	ldr	r3, [pc, #464]	; (8c38 <__aeabi_dsub+0x36c>)
    8a68:	08ed      	lsrs	r5, r5, #3
    8a6a:	0778      	lsls	r0, r7, #29
    8a6c:	4305      	orrs	r5, r0
    8a6e:	08fa      	lsrs	r2, r7, #3
    8a70:	429c      	cmp	r4, r3
    8a72:	d03b      	beq.n	8aec <__aeabi_dsub+0x220>
    8a74:	0312      	lsls	r2, r2, #12
    8a76:	0564      	lsls	r4, r4, #21
    8a78:	0b12      	lsrs	r2, r2, #12
    8a7a:	0d64      	lsrs	r4, r4, #21
    8a7c:	e77e      	b.n	897c <__aeabi_dsub+0xb0>
    8a7e:	1a23      	subs	r3, r4, r0
    8a80:	469a      	mov	sl, r3
    8a82:	2b00      	cmp	r3, #0
    8a84:	dc00      	bgt.n	8a88 <__aeabi_dsub+0x1bc>
    8a86:	e0a5      	b.n	8bd4 <__aeabi_dsub+0x308>
    8a88:	2800      	cmp	r0, #0
    8a8a:	d044      	beq.n	8b16 <__aeabi_dsub+0x24a>
    8a8c:	486a      	ldr	r0, [pc, #424]	; (8c38 <__aeabi_dsub+0x36c>)
    8a8e:	4284      	cmp	r4, r0
    8a90:	d100      	bne.n	8a94 <__aeabi_dsub+0x1c8>
    8a92:	e74d      	b.n	8930 <__aeabi_dsub+0x64>
    8a94:	2080      	movs	r0, #128	; 0x80
    8a96:	0400      	lsls	r0, r0, #16
    8a98:	4302      	orrs	r2, r0
    8a9a:	4653      	mov	r3, sl
    8a9c:	2b38      	cmp	r3, #56	; 0x38
    8a9e:	dc00      	bgt.n	8aa2 <__aeabi_dsub+0x1d6>
    8aa0:	e11c      	b.n	8cdc <__aeabi_dsub+0x410>
    8aa2:	9b01      	ldr	r3, [sp, #4]
    8aa4:	431a      	orrs	r2, r3
    8aa6:	1e51      	subs	r1, r2, #1
    8aa8:	418a      	sbcs	r2, r1
    8aaa:	b2d1      	uxtb	r1, r2
    8aac:	2200      	movs	r2, #0
    8aae:	1949      	adds	r1, r1, r5
    8ab0:	42a9      	cmp	r1, r5
    8ab2:	4180      	sbcs	r0, r0
    8ab4:	1c0d      	adds	r5, r1, #0
    8ab6:	19d2      	adds	r2, r2, r7
    8ab8:	4240      	negs	r0, r0
    8aba:	1817      	adds	r7, r2, r0
    8abc:	023b      	lsls	r3, r7, #8
    8abe:	d546      	bpl.n	8b4e <__aeabi_dsub+0x282>
    8ac0:	4b5d      	ldr	r3, [pc, #372]	; (8c38 <__aeabi_dsub+0x36c>)
    8ac2:	3401      	adds	r4, #1
    8ac4:	429c      	cmp	r4, r3
    8ac6:	d100      	bne.n	8aca <__aeabi_dsub+0x1fe>
    8ac8:	e169      	b.n	8d9e <__aeabi_dsub+0x4d2>
    8aca:	2001      	movs	r0, #1
    8acc:	4a5b      	ldr	r2, [pc, #364]	; (8c3c <__aeabi_dsub+0x370>)
    8ace:	086b      	lsrs	r3, r5, #1
    8ad0:	403a      	ands	r2, r7
    8ad2:	4028      	ands	r0, r5
    8ad4:	4318      	orrs	r0, r3
    8ad6:	07d5      	lsls	r5, r2, #31
    8ad8:	4305      	orrs	r5, r0
    8ada:	0857      	lsrs	r7, r2, #1
    8adc:	e728      	b.n	8930 <__aeabi_dsub+0x64>
    8ade:	1c13      	adds	r3, r2, #0
    8ae0:	9901      	ldr	r1, [sp, #4]
    8ae2:	430b      	orrs	r3, r1
    8ae4:	d100      	bne.n	8ae8 <__aeabi_dsub+0x21c>
    8ae6:	e711      	b.n	890c <__aeabi_dsub+0x40>
    8ae8:	464b      	mov	r3, r9
    8aea:	e713      	b.n	8914 <__aeabi_dsub+0x48>
    8aec:	1c2b      	adds	r3, r5, #0
    8aee:	4313      	orrs	r3, r2
    8af0:	d051      	beq.n	8b96 <__aeabi_dsub+0x2ca>
    8af2:	2380      	movs	r3, #128	; 0x80
    8af4:	031b      	lsls	r3, r3, #12
    8af6:	431a      	orrs	r2, r3
    8af8:	0312      	lsls	r2, r2, #12
    8afa:	0b12      	lsrs	r2, r2, #12
    8afc:	e73e      	b.n	897c <__aeabi_dsub+0xb0>
    8afe:	3e01      	subs	r6, #1
    8b00:	2e00      	cmp	r6, #0
    8b02:	d000      	beq.n	8b06 <__aeabi_dsub+0x23a>
    8b04:	e080      	b.n	8c08 <__aeabi_dsub+0x33c>
    8b06:	1a69      	subs	r1, r5, r1
    8b08:	428d      	cmp	r5, r1
    8b0a:	419b      	sbcs	r3, r3
    8b0c:	1aba      	subs	r2, r7, r2
    8b0e:	425b      	negs	r3, r3
    8b10:	1ad7      	subs	r7, r2, r3
    8b12:	1c0d      	adds	r5, r1, #0
    8b14:	e76f      	b.n	89f6 <__aeabi_dsub+0x12a>
    8b16:	1c10      	adds	r0, r2, #0
    8b18:	9b01      	ldr	r3, [sp, #4]
    8b1a:	4318      	orrs	r0, r3
    8b1c:	d100      	bne.n	8b20 <__aeabi_dsub+0x254>
    8b1e:	e707      	b.n	8930 <__aeabi_dsub+0x64>
    8b20:	2301      	movs	r3, #1
    8b22:	425b      	negs	r3, r3
    8b24:	469c      	mov	ip, r3
    8b26:	44e2      	add	sl, ip
    8b28:	4653      	mov	r3, sl
    8b2a:	2b00      	cmp	r3, #0
    8b2c:	d000      	beq.n	8b30 <__aeabi_dsub+0x264>
    8b2e:	e102      	b.n	8d36 <__aeabi_dsub+0x46a>
    8b30:	9b01      	ldr	r3, [sp, #4]
    8b32:	19d2      	adds	r2, r2, r7
    8b34:	1959      	adds	r1, r3, r5
    8b36:	42a9      	cmp	r1, r5
    8b38:	419b      	sbcs	r3, r3
    8b3a:	425b      	negs	r3, r3
    8b3c:	18d7      	adds	r7, r2, r3
    8b3e:	1c0d      	adds	r5, r1, #0
    8b40:	e7bc      	b.n	8abc <__aeabi_dsub+0x1f0>
    8b42:	4663      	mov	r3, ip
    8b44:	4303      	orrs	r3, r0
    8b46:	d100      	bne.n	8b4a <__aeabi_dsub+0x27e>
    8b48:	e128      	b.n	8d9c <__aeabi_dsub+0x4d0>
    8b4a:	1c07      	adds	r7, r0, #0
    8b4c:	4665      	mov	r5, ip
    8b4e:	076b      	lsls	r3, r5, #29
    8b50:	d000      	beq.n	8b54 <__aeabi_dsub+0x288>
    8b52:	e6f0      	b.n	8936 <__aeabi_dsub+0x6a>
    8b54:	2601      	movs	r6, #1
    8b56:	4643      	mov	r3, r8
    8b58:	401e      	ands	r6, r3
    8b5a:	e784      	b.n	8a66 <__aeabi_dsub+0x19a>
    8b5c:	2e00      	cmp	r6, #0
    8b5e:	d000      	beq.n	8b62 <__aeabi_dsub+0x296>
    8b60:	e081      	b.n	8c66 <__aeabi_dsub+0x39a>
    8b62:	1c60      	adds	r0, r4, #1
    8b64:	0540      	lsls	r0, r0, #21
    8b66:	0d40      	lsrs	r0, r0, #21
    8b68:	2801      	cmp	r0, #1
    8b6a:	dc00      	bgt.n	8b6e <__aeabi_dsub+0x2a2>
    8b6c:	e107      	b.n	8d7e <__aeabi_dsub+0x4b2>
    8b6e:	9901      	ldr	r1, [sp, #4]
    8b70:	1a68      	subs	r0, r5, r1
    8b72:	4684      	mov	ip, r0
    8b74:	4565      	cmp	r5, ip
    8b76:	41b6      	sbcs	r6, r6
    8b78:	1ab8      	subs	r0, r7, r2
    8b7a:	4276      	negs	r6, r6
    8b7c:	1b86      	subs	r6, r0, r6
    8b7e:	0230      	lsls	r0, r6, #8
    8b80:	d400      	bmi.n	8b84 <__aeabi_dsub+0x2b8>
    8b82:	e0a1      	b.n	8cc8 <__aeabi_dsub+0x3fc>
    8b84:	468c      	mov	ip, r1
    8b86:	1b4d      	subs	r5, r1, r5
    8b88:	45ac      	cmp	ip, r5
    8b8a:	4189      	sbcs	r1, r1
    8b8c:	1bd2      	subs	r2, r2, r7
    8b8e:	4249      	negs	r1, r1
    8b90:	1a56      	subs	r6, r2, r1
    8b92:	4698      	mov	r8, r3
    8b94:	e734      	b.n	8a00 <__aeabi_dsub+0x134>
    8b96:	2200      	movs	r2, #0
    8b98:	2500      	movs	r5, #0
    8b9a:	e6ef      	b.n	897c <__aeabi_dsub+0xb0>
    8b9c:	1c28      	adds	r0, r5, #0
    8b9e:	f000 fb97 	bl	92d0 <__clzsi2>
    8ba2:	3020      	adds	r0, #32
    8ba4:	1c03      	adds	r3, r0, #0
    8ba6:	3b08      	subs	r3, #8
    8ba8:	2b1f      	cmp	r3, #31
    8baa:	dc00      	bgt.n	8bae <__aeabi_dsub+0x2e2>
    8bac:	e733      	b.n	8a16 <__aeabi_dsub+0x14a>
    8bae:	1c02      	adds	r2, r0, #0
    8bb0:	3a28      	subs	r2, #40	; 0x28
    8bb2:	4095      	lsls	r5, r2
    8bb4:	1c2a      	adds	r2, r5, #0
    8bb6:	2500      	movs	r5, #0
    8bb8:	429c      	cmp	r4, r3
    8bba:	dc00      	bgt.n	8bbe <__aeabi_dsub+0x2f2>
    8bbc:	e736      	b.n	8a2c <__aeabi_dsub+0x160>
    8bbe:	4f1f      	ldr	r7, [pc, #124]	; (8c3c <__aeabi_dsub+0x370>)
    8bc0:	1ae4      	subs	r4, r4, r3
    8bc2:	4017      	ands	r7, r2
    8bc4:	e6b4      	b.n	8930 <__aeabi_dsub+0x64>
    8bc6:	9b01      	ldr	r3, [sp, #4]
    8bc8:	431a      	orrs	r2, r3
    8bca:	1e51      	subs	r1, r2, #1
    8bcc:	418a      	sbcs	r2, r1
    8bce:	b2d3      	uxtb	r3, r2
    8bd0:	2200      	movs	r2, #0
    8bd2:	e709      	b.n	89e8 <__aeabi_dsub+0x11c>
    8bd4:	2b00      	cmp	r3, #0
    8bd6:	d000      	beq.n	8bda <__aeabi_dsub+0x30e>
    8bd8:	e101      	b.n	8dde <__aeabi_dsub+0x512>
    8bda:	1c60      	adds	r0, r4, #1
    8bdc:	0543      	lsls	r3, r0, #21
    8bde:	0d5b      	lsrs	r3, r3, #21
    8be0:	2b01      	cmp	r3, #1
    8be2:	dc00      	bgt.n	8be6 <__aeabi_dsub+0x31a>
    8be4:	e0b0      	b.n	8d48 <__aeabi_dsub+0x47c>
    8be6:	4b14      	ldr	r3, [pc, #80]	; (8c38 <__aeabi_dsub+0x36c>)
    8be8:	4298      	cmp	r0, r3
    8bea:	d100      	bne.n	8bee <__aeabi_dsub+0x322>
    8bec:	e11e      	b.n	8e2c <__aeabi_dsub+0x560>
    8bee:	9b01      	ldr	r3, [sp, #4]
    8bf0:	19d2      	adds	r2, r2, r7
    8bf2:	1959      	adds	r1, r3, r5
    8bf4:	42a9      	cmp	r1, r5
    8bf6:	419b      	sbcs	r3, r3
    8bf8:	425b      	negs	r3, r3
    8bfa:	18d2      	adds	r2, r2, r3
    8bfc:	0849      	lsrs	r1, r1, #1
    8bfe:	07d5      	lsls	r5, r2, #31
    8c00:	430d      	orrs	r5, r1
    8c02:	0857      	lsrs	r7, r2, #1
    8c04:	1c04      	adds	r4, r0, #0
    8c06:	e693      	b.n	8930 <__aeabi_dsub+0x64>
    8c08:	4b0b      	ldr	r3, [pc, #44]	; (8c38 <__aeabi_dsub+0x36c>)
    8c0a:	429c      	cmp	r4, r3
    8c0c:	d000      	beq.n	8c10 <__aeabi_dsub+0x344>
    8c0e:	e6d3      	b.n	89b8 <__aeabi_dsub+0xec>
    8c10:	e68e      	b.n	8930 <__aeabi_dsub+0x64>
    8c12:	1c21      	adds	r1, r4, #0
    8c14:	1c13      	adds	r3, r2, #0
    8c16:	391f      	subs	r1, #31
    8c18:	40cb      	lsrs	r3, r1
    8c1a:	1c19      	adds	r1, r3, #0
    8c1c:	2f20      	cmp	r7, #32
    8c1e:	d100      	bne.n	8c22 <__aeabi_dsub+0x356>
    8c20:	e08e      	b.n	8d40 <__aeabi_dsub+0x474>
    8c22:	233f      	movs	r3, #63	; 0x3f
    8c24:	1b1c      	subs	r4, r3, r4
    8c26:	40a2      	lsls	r2, r4
    8c28:	4315      	orrs	r5, r2
    8c2a:	1e6a      	subs	r2, r5, #1
    8c2c:	4195      	sbcs	r5, r2
    8c2e:	2700      	movs	r7, #0
    8c30:	430d      	orrs	r5, r1
    8c32:	2400      	movs	r4, #0
    8c34:	e78b      	b.n	8b4e <__aeabi_dsub+0x282>
    8c36:	46c0      	nop			; (mov r8, r8)
    8c38:	000007ff 	.word	0x000007ff
    8c3c:	ff7fffff 	.word	0xff7fffff
    8c40:	800fffff 	.word	0x800fffff
    8c44:	1c33      	adds	r3, r6, #0
    8c46:	1c10      	adds	r0, r2, #0
    8c48:	3b20      	subs	r3, #32
    8c4a:	40d8      	lsrs	r0, r3
    8c4c:	2e20      	cmp	r6, #32
    8c4e:	d079      	beq.n	8d44 <__aeabi_dsub+0x478>
    8c50:	2340      	movs	r3, #64	; 0x40
    8c52:	1b9b      	subs	r3, r3, r6
    8c54:	409a      	lsls	r2, r3
    8c56:	1c13      	adds	r3, r2, #0
    8c58:	9a01      	ldr	r2, [sp, #4]
    8c5a:	4313      	orrs	r3, r2
    8c5c:	1e59      	subs	r1, r3, #1
    8c5e:	418b      	sbcs	r3, r1
    8c60:	2200      	movs	r2, #0
    8c62:	4303      	orrs	r3, r0
    8c64:	e6c0      	b.n	89e8 <__aeabi_dsub+0x11c>
    8c66:	2c00      	cmp	r4, #0
    8c68:	d053      	beq.n	8d12 <__aeabi_dsub+0x446>
    8c6a:	4cc7      	ldr	r4, [pc, #796]	; (8f88 <__aeabi_dsub+0x6bc>)
    8c6c:	42a0      	cmp	r0, r4
    8c6e:	d100      	bne.n	8c72 <__aeabi_dsub+0x3a6>
    8c70:	e0b0      	b.n	8dd4 <__aeabi_dsub+0x508>
    8c72:	2480      	movs	r4, #128	; 0x80
    8c74:	4271      	negs	r1, r6
    8c76:	4689      	mov	r9, r1
    8c78:	0424      	lsls	r4, r4, #16
    8c7a:	4327      	orrs	r7, r4
    8c7c:	4649      	mov	r1, r9
    8c7e:	2938      	cmp	r1, #56	; 0x38
    8c80:	dd00      	ble.n	8c84 <__aeabi_dsub+0x3b8>
    8c82:	e0cd      	b.n	8e20 <__aeabi_dsub+0x554>
    8c84:	291f      	cmp	r1, #31
    8c86:	dd00      	ble.n	8c8a <__aeabi_dsub+0x3be>
    8c88:	e159      	b.n	8f3e <__aeabi_dsub+0x672>
    8c8a:	2420      	movs	r4, #32
    8c8c:	1c3e      	adds	r6, r7, #0
    8c8e:	1a61      	subs	r1, r4, r1
    8c90:	408e      	lsls	r6, r1
    8c92:	468a      	mov	sl, r1
    8c94:	46b0      	mov	r8, r6
    8c96:	4649      	mov	r1, r9
    8c98:	1c2e      	adds	r6, r5, #0
    8c9a:	40ce      	lsrs	r6, r1
    8c9c:	4651      	mov	r1, sl
    8c9e:	46b4      	mov	ip, r6
    8ca0:	408d      	lsls	r5, r1
    8ca2:	4664      	mov	r4, ip
    8ca4:	4646      	mov	r6, r8
    8ca6:	4649      	mov	r1, r9
    8ca8:	4326      	orrs	r6, r4
    8caa:	1e6c      	subs	r4, r5, #1
    8cac:	41a5      	sbcs	r5, r4
    8cae:	40cf      	lsrs	r7, r1
    8cb0:	4335      	orrs	r5, r6
    8cb2:	9901      	ldr	r1, [sp, #4]
    8cb4:	1bd7      	subs	r7, r2, r7
    8cb6:	468c      	mov	ip, r1
    8cb8:	1b4d      	subs	r5, r1, r5
    8cba:	45ac      	cmp	ip, r5
    8cbc:	4192      	sbcs	r2, r2
    8cbe:	4252      	negs	r2, r2
    8cc0:	1abf      	subs	r7, r7, r2
    8cc2:	1c04      	adds	r4, r0, #0
    8cc4:	4698      	mov	r8, r3
    8cc6:	e696      	b.n	89f6 <__aeabi_dsub+0x12a>
    8cc8:	4663      	mov	r3, ip
    8cca:	4665      	mov	r5, ip
    8ccc:	4333      	orrs	r3, r6
    8cce:	d000      	beq.n	8cd2 <__aeabi_dsub+0x406>
    8cd0:	e696      	b.n	8a00 <__aeabi_dsub+0x134>
    8cd2:	2600      	movs	r6, #0
    8cd4:	2700      	movs	r7, #0
    8cd6:	2400      	movs	r4, #0
    8cd8:	2500      	movs	r5, #0
    8cda:	e6c4      	b.n	8a66 <__aeabi_dsub+0x19a>
    8cdc:	2b1f      	cmp	r3, #31
    8cde:	dc61      	bgt.n	8da4 <__aeabi_dsub+0x4d8>
    8ce0:	2020      	movs	r0, #32
    8ce2:	1ac3      	subs	r3, r0, r3
    8ce4:	469b      	mov	fp, r3
    8ce6:	1c13      	adds	r3, r2, #0
    8ce8:	4659      	mov	r1, fp
    8cea:	408b      	lsls	r3, r1
    8cec:	4651      	mov	r1, sl
    8cee:	4699      	mov	r9, r3
    8cf0:	9b01      	ldr	r3, [sp, #4]
    8cf2:	40cb      	lsrs	r3, r1
    8cf4:	469c      	mov	ip, r3
    8cf6:	464b      	mov	r3, r9
    8cf8:	4660      	mov	r0, ip
    8cfa:	4303      	orrs	r3, r0
    8cfc:	469c      	mov	ip, r3
    8cfe:	465b      	mov	r3, fp
    8d00:	9901      	ldr	r1, [sp, #4]
    8d02:	4099      	lsls	r1, r3
    8d04:	4663      	mov	r3, ip
    8d06:	1e48      	subs	r0, r1, #1
    8d08:	4181      	sbcs	r1, r0
    8d0a:	4319      	orrs	r1, r3
    8d0c:	4653      	mov	r3, sl
    8d0e:	40da      	lsrs	r2, r3
    8d10:	e6cd      	b.n	8aae <__aeabi_dsub+0x1e2>
    8d12:	1c3c      	adds	r4, r7, #0
    8d14:	432c      	orrs	r4, r5
    8d16:	d05d      	beq.n	8dd4 <__aeabi_dsub+0x508>
    8d18:	43f1      	mvns	r1, r6
    8d1a:	4689      	mov	r9, r1
    8d1c:	2900      	cmp	r1, #0
    8d1e:	d155      	bne.n	8dcc <__aeabi_dsub+0x500>
    8d20:	9901      	ldr	r1, [sp, #4]
    8d22:	1bd2      	subs	r2, r2, r7
    8d24:	468c      	mov	ip, r1
    8d26:	1b4d      	subs	r5, r1, r5
    8d28:	45ac      	cmp	ip, r5
    8d2a:	4189      	sbcs	r1, r1
    8d2c:	4249      	negs	r1, r1
    8d2e:	1a57      	subs	r7, r2, r1
    8d30:	1c04      	adds	r4, r0, #0
    8d32:	4698      	mov	r8, r3
    8d34:	e65f      	b.n	89f6 <__aeabi_dsub+0x12a>
    8d36:	4894      	ldr	r0, [pc, #592]	; (8f88 <__aeabi_dsub+0x6bc>)
    8d38:	4284      	cmp	r4, r0
    8d3a:	d000      	beq.n	8d3e <__aeabi_dsub+0x472>
    8d3c:	e6ad      	b.n	8a9a <__aeabi_dsub+0x1ce>
    8d3e:	e5f7      	b.n	8930 <__aeabi_dsub+0x64>
    8d40:	2200      	movs	r2, #0
    8d42:	e771      	b.n	8c28 <__aeabi_dsub+0x35c>
    8d44:	2300      	movs	r3, #0
    8d46:	e787      	b.n	8c58 <__aeabi_dsub+0x38c>
    8d48:	1c3b      	adds	r3, r7, #0
    8d4a:	432b      	orrs	r3, r5
    8d4c:	2c00      	cmp	r4, #0
    8d4e:	d000      	beq.n	8d52 <__aeabi_dsub+0x486>
    8d50:	e0da      	b.n	8f08 <__aeabi_dsub+0x63c>
    8d52:	2b00      	cmp	r3, #0
    8d54:	d100      	bne.n	8d58 <__aeabi_dsub+0x48c>
    8d56:	e113      	b.n	8f80 <__aeabi_dsub+0x6b4>
    8d58:	1c13      	adds	r3, r2, #0
    8d5a:	9901      	ldr	r1, [sp, #4]
    8d5c:	430b      	orrs	r3, r1
    8d5e:	d100      	bne.n	8d62 <__aeabi_dsub+0x496>
    8d60:	e5e6      	b.n	8930 <__aeabi_dsub+0x64>
    8d62:	1949      	adds	r1, r1, r5
    8d64:	42a9      	cmp	r1, r5
    8d66:	419b      	sbcs	r3, r3
    8d68:	19d2      	adds	r2, r2, r7
    8d6a:	425b      	negs	r3, r3
    8d6c:	18d7      	adds	r7, r2, r3
    8d6e:	023b      	lsls	r3, r7, #8
    8d70:	d400      	bmi.n	8d74 <__aeabi_dsub+0x4a8>
    8d72:	e121      	b.n	8fb8 <__aeabi_dsub+0x6ec>
    8d74:	4b85      	ldr	r3, [pc, #532]	; (8f8c <__aeabi_dsub+0x6c0>)
    8d76:	1c0d      	adds	r5, r1, #0
    8d78:	401f      	ands	r7, r3
    8d7a:	1c04      	adds	r4, r0, #0
    8d7c:	e5d8      	b.n	8930 <__aeabi_dsub+0x64>
    8d7e:	1c38      	adds	r0, r7, #0
    8d80:	4328      	orrs	r0, r5
    8d82:	2c00      	cmp	r4, #0
    8d84:	d140      	bne.n	8e08 <__aeabi_dsub+0x53c>
    8d86:	2800      	cmp	r0, #0
    8d88:	d000      	beq.n	8d8c <__aeabi_dsub+0x4c0>
    8d8a:	e083      	b.n	8e94 <__aeabi_dsub+0x5c8>
    8d8c:	1c10      	adds	r0, r2, #0
    8d8e:	9901      	ldr	r1, [sp, #4]
    8d90:	4308      	orrs	r0, r1
    8d92:	d003      	beq.n	8d9c <__aeabi_dsub+0x4d0>
    8d94:	1c17      	adds	r7, r2, #0
    8d96:	1c0d      	adds	r5, r1, #0
    8d98:	4698      	mov	r8, r3
    8d9a:	e5c9      	b.n	8930 <__aeabi_dsub+0x64>
    8d9c:	2600      	movs	r6, #0
    8d9e:	2700      	movs	r7, #0
    8da0:	2500      	movs	r5, #0
    8da2:	e660      	b.n	8a66 <__aeabi_dsub+0x19a>
    8da4:	4650      	mov	r0, sl
    8da6:	1c13      	adds	r3, r2, #0
    8da8:	3820      	subs	r0, #32
    8daa:	40c3      	lsrs	r3, r0
    8dac:	1c18      	adds	r0, r3, #0
    8dae:	4653      	mov	r3, sl
    8db0:	2b20      	cmp	r3, #32
    8db2:	d100      	bne.n	8db6 <__aeabi_dsub+0x4ea>
    8db4:	e0c1      	b.n	8f3a <__aeabi_dsub+0x66e>
    8db6:	2340      	movs	r3, #64	; 0x40
    8db8:	4651      	mov	r1, sl
    8dba:	1a5b      	subs	r3, r3, r1
    8dbc:	409a      	lsls	r2, r3
    8dbe:	9901      	ldr	r1, [sp, #4]
    8dc0:	4311      	orrs	r1, r2
    8dc2:	1e4a      	subs	r2, r1, #1
    8dc4:	4191      	sbcs	r1, r2
    8dc6:	2200      	movs	r2, #0
    8dc8:	4301      	orrs	r1, r0
    8dca:	e670      	b.n	8aae <__aeabi_dsub+0x1e2>
    8dcc:	4c6e      	ldr	r4, [pc, #440]	; (8f88 <__aeabi_dsub+0x6bc>)
    8dce:	42a0      	cmp	r0, r4
    8dd0:	d000      	beq.n	8dd4 <__aeabi_dsub+0x508>
    8dd2:	e753      	b.n	8c7c <__aeabi_dsub+0x3b0>
    8dd4:	1c17      	adds	r7, r2, #0
    8dd6:	9d01      	ldr	r5, [sp, #4]
    8dd8:	1c04      	adds	r4, r0, #0
    8dda:	4698      	mov	r8, r3
    8ddc:	e5a8      	b.n	8930 <__aeabi_dsub+0x64>
    8dde:	2c00      	cmp	r4, #0
    8de0:	d128      	bne.n	8e34 <__aeabi_dsub+0x568>
    8de2:	1c3c      	adds	r4, r7, #0
    8de4:	432c      	orrs	r4, r5
    8de6:	d100      	bne.n	8dea <__aeabi_dsub+0x51e>
    8de8:	e08a      	b.n	8f00 <__aeabi_dsub+0x634>
    8dea:	43db      	mvns	r3, r3
    8dec:	469a      	mov	sl, r3
    8dee:	2b00      	cmp	r3, #0
    8df0:	d000      	beq.n	8df4 <__aeabi_dsub+0x528>
    8df2:	e082      	b.n	8efa <__aeabi_dsub+0x62e>
    8df4:	9b01      	ldr	r3, [sp, #4]
    8df6:	19d2      	adds	r2, r2, r7
    8df8:	469c      	mov	ip, r3
    8dfa:	4465      	add	r5, ip
    8dfc:	429d      	cmp	r5, r3
    8dfe:	4189      	sbcs	r1, r1
    8e00:	4249      	negs	r1, r1
    8e02:	1857      	adds	r7, r2, r1
    8e04:	1c04      	adds	r4, r0, #0
    8e06:	e659      	b.n	8abc <__aeabi_dsub+0x1f0>
    8e08:	2800      	cmp	r0, #0
    8e0a:	d15b      	bne.n	8ec4 <__aeabi_dsub+0x5f8>
    8e0c:	1c10      	adds	r0, r2, #0
    8e0e:	9901      	ldr	r1, [sp, #4]
    8e10:	4308      	orrs	r0, r1
    8e12:	d100      	bne.n	8e16 <__aeabi_dsub+0x54a>
    8e14:	e0a4      	b.n	8f60 <__aeabi_dsub+0x694>
    8e16:	1c17      	adds	r7, r2, #0
    8e18:	1c0d      	adds	r5, r1, #0
    8e1a:	4698      	mov	r8, r3
    8e1c:	4c5a      	ldr	r4, [pc, #360]	; (8f88 <__aeabi_dsub+0x6bc>)
    8e1e:	e587      	b.n	8930 <__aeabi_dsub+0x64>
    8e20:	433d      	orrs	r5, r7
    8e22:	1e6f      	subs	r7, r5, #1
    8e24:	41bd      	sbcs	r5, r7
    8e26:	2700      	movs	r7, #0
    8e28:	b2ed      	uxtb	r5, r5
    8e2a:	e742      	b.n	8cb2 <__aeabi_dsub+0x3e6>
    8e2c:	1c04      	adds	r4, r0, #0
    8e2e:	2700      	movs	r7, #0
    8e30:	2500      	movs	r5, #0
    8e32:	e618      	b.n	8a66 <__aeabi_dsub+0x19a>
    8e34:	4c54      	ldr	r4, [pc, #336]	; (8f88 <__aeabi_dsub+0x6bc>)
    8e36:	42a0      	cmp	r0, r4
    8e38:	d062      	beq.n	8f00 <__aeabi_dsub+0x634>
    8e3a:	4653      	mov	r3, sl
    8e3c:	2480      	movs	r4, #128	; 0x80
    8e3e:	425b      	negs	r3, r3
    8e40:	469a      	mov	sl, r3
    8e42:	0424      	lsls	r4, r4, #16
    8e44:	4327      	orrs	r7, r4
    8e46:	4653      	mov	r3, sl
    8e48:	2b38      	cmp	r3, #56	; 0x38
    8e4a:	dd00      	ble.n	8e4e <__aeabi_dsub+0x582>
    8e4c:	e08e      	b.n	8f6c <__aeabi_dsub+0x6a0>
    8e4e:	2b1f      	cmp	r3, #31
    8e50:	dd00      	ble.n	8e54 <__aeabi_dsub+0x588>
    8e52:	e09d      	b.n	8f90 <__aeabi_dsub+0x6c4>
    8e54:	2420      	movs	r4, #32
    8e56:	1ae3      	subs	r3, r4, r3
    8e58:	469b      	mov	fp, r3
    8e5a:	1c3b      	adds	r3, r7, #0
    8e5c:	4659      	mov	r1, fp
    8e5e:	408b      	lsls	r3, r1
    8e60:	4651      	mov	r1, sl
    8e62:	4699      	mov	r9, r3
    8e64:	1c2b      	adds	r3, r5, #0
    8e66:	40cb      	lsrs	r3, r1
    8e68:	469c      	mov	ip, r3
    8e6a:	464b      	mov	r3, r9
    8e6c:	4664      	mov	r4, ip
    8e6e:	4323      	orrs	r3, r4
    8e70:	469c      	mov	ip, r3
    8e72:	465b      	mov	r3, fp
    8e74:	409d      	lsls	r5, r3
    8e76:	4663      	mov	r3, ip
    8e78:	1e6c      	subs	r4, r5, #1
    8e7a:	41a5      	sbcs	r5, r4
    8e7c:	40cf      	lsrs	r7, r1
    8e7e:	431d      	orrs	r5, r3
    8e80:	9b01      	ldr	r3, [sp, #4]
    8e82:	18bf      	adds	r7, r7, r2
    8e84:	469c      	mov	ip, r3
    8e86:	4465      	add	r5, ip
    8e88:	429d      	cmp	r5, r3
    8e8a:	4192      	sbcs	r2, r2
    8e8c:	4252      	negs	r2, r2
    8e8e:	18bf      	adds	r7, r7, r2
    8e90:	1c04      	adds	r4, r0, #0
    8e92:	e613      	b.n	8abc <__aeabi_dsub+0x1f0>
    8e94:	1c10      	adds	r0, r2, #0
    8e96:	9901      	ldr	r1, [sp, #4]
    8e98:	4308      	orrs	r0, r1
    8e9a:	d100      	bne.n	8e9e <__aeabi_dsub+0x5d2>
    8e9c:	e548      	b.n	8930 <__aeabi_dsub+0x64>
    8e9e:	1a68      	subs	r0, r5, r1
    8ea0:	4684      	mov	ip, r0
    8ea2:	4285      	cmp	r5, r0
    8ea4:	4180      	sbcs	r0, r0
    8ea6:	1abe      	subs	r6, r7, r2
    8ea8:	4240      	negs	r0, r0
    8eaa:	1a30      	subs	r0, r6, r0
    8eac:	0206      	lsls	r6, r0, #8
    8eae:	d400      	bmi.n	8eb2 <__aeabi_dsub+0x5e6>
    8eb0:	e647      	b.n	8b42 <__aeabi_dsub+0x276>
    8eb2:	468c      	mov	ip, r1
    8eb4:	1b4d      	subs	r5, r1, r5
    8eb6:	45ac      	cmp	ip, r5
    8eb8:	4189      	sbcs	r1, r1
    8eba:	1bd2      	subs	r2, r2, r7
    8ebc:	4249      	negs	r1, r1
    8ebe:	1a57      	subs	r7, r2, r1
    8ec0:	4698      	mov	r8, r3
    8ec2:	e535      	b.n	8930 <__aeabi_dsub+0x64>
    8ec4:	1c10      	adds	r0, r2, #0
    8ec6:	9901      	ldr	r1, [sp, #4]
    8ec8:	4308      	orrs	r0, r1
    8eca:	d034      	beq.n	8f36 <__aeabi_dsub+0x66a>
    8ecc:	2480      	movs	r4, #128	; 0x80
    8ece:	0778      	lsls	r0, r7, #29
    8ed0:	08ed      	lsrs	r5, r5, #3
    8ed2:	08ff      	lsrs	r7, r7, #3
    8ed4:	0324      	lsls	r4, r4, #12
    8ed6:	4328      	orrs	r0, r5
    8ed8:	4227      	tst	r7, r4
    8eda:	d008      	beq.n	8eee <__aeabi_dsub+0x622>
    8edc:	08d6      	lsrs	r6, r2, #3
    8ede:	4226      	tst	r6, r4
    8ee0:	d105      	bne.n	8eee <__aeabi_dsub+0x622>
    8ee2:	08c9      	lsrs	r1, r1, #3
    8ee4:	0752      	lsls	r2, r2, #29
    8ee6:	430a      	orrs	r2, r1
    8ee8:	1c10      	adds	r0, r2, #0
    8eea:	1c37      	adds	r7, r6, #0
    8eec:	4698      	mov	r8, r3
    8eee:	00ff      	lsls	r7, r7, #3
    8ef0:	0f42      	lsrs	r2, r0, #29
    8ef2:	4317      	orrs	r7, r2
    8ef4:	00c5      	lsls	r5, r0, #3
    8ef6:	4c24      	ldr	r4, [pc, #144]	; (8f88 <__aeabi_dsub+0x6bc>)
    8ef8:	e51a      	b.n	8930 <__aeabi_dsub+0x64>
    8efa:	4c23      	ldr	r4, [pc, #140]	; (8f88 <__aeabi_dsub+0x6bc>)
    8efc:	42a0      	cmp	r0, r4
    8efe:	d1a2      	bne.n	8e46 <__aeabi_dsub+0x57a>
    8f00:	1c17      	adds	r7, r2, #0
    8f02:	9d01      	ldr	r5, [sp, #4]
    8f04:	1c04      	adds	r4, r0, #0
    8f06:	e513      	b.n	8930 <__aeabi_dsub+0x64>
    8f08:	2b00      	cmp	r3, #0
    8f0a:	d035      	beq.n	8f78 <__aeabi_dsub+0x6ac>
    8f0c:	1c13      	adds	r3, r2, #0
    8f0e:	9901      	ldr	r1, [sp, #4]
    8f10:	430b      	orrs	r3, r1
    8f12:	d010      	beq.n	8f36 <__aeabi_dsub+0x66a>
    8f14:	2480      	movs	r4, #128	; 0x80
    8f16:	0778      	lsls	r0, r7, #29
    8f18:	08ed      	lsrs	r5, r5, #3
    8f1a:	08ff      	lsrs	r7, r7, #3
    8f1c:	0324      	lsls	r4, r4, #12
    8f1e:	4328      	orrs	r0, r5
    8f20:	4227      	tst	r7, r4
    8f22:	d0e4      	beq.n	8eee <__aeabi_dsub+0x622>
    8f24:	08d3      	lsrs	r3, r2, #3
    8f26:	4223      	tst	r3, r4
    8f28:	d1e1      	bne.n	8eee <__aeabi_dsub+0x622>
    8f2a:	08c9      	lsrs	r1, r1, #3
    8f2c:	0752      	lsls	r2, r2, #29
    8f2e:	430a      	orrs	r2, r1
    8f30:	1c10      	adds	r0, r2, #0
    8f32:	1c1f      	adds	r7, r3, #0
    8f34:	e7db      	b.n	8eee <__aeabi_dsub+0x622>
    8f36:	4c14      	ldr	r4, [pc, #80]	; (8f88 <__aeabi_dsub+0x6bc>)
    8f38:	e4fa      	b.n	8930 <__aeabi_dsub+0x64>
    8f3a:	2200      	movs	r2, #0
    8f3c:	e73f      	b.n	8dbe <__aeabi_dsub+0x4f2>
    8f3e:	464c      	mov	r4, r9
    8f40:	1c3e      	adds	r6, r7, #0
    8f42:	3c20      	subs	r4, #32
    8f44:	40e6      	lsrs	r6, r4
    8f46:	4649      	mov	r1, r9
    8f48:	1c34      	adds	r4, r6, #0
    8f4a:	2920      	cmp	r1, #32
    8f4c:	d032      	beq.n	8fb4 <__aeabi_dsub+0x6e8>
    8f4e:	2640      	movs	r6, #64	; 0x40
    8f50:	1a76      	subs	r6, r6, r1
    8f52:	40b7      	lsls	r7, r6
    8f54:	433d      	orrs	r5, r7
    8f56:	1e6f      	subs	r7, r5, #1
    8f58:	41bd      	sbcs	r5, r7
    8f5a:	2700      	movs	r7, #0
    8f5c:	4325      	orrs	r5, r4
    8f5e:	e6a8      	b.n	8cb2 <__aeabi_dsub+0x3e6>
    8f60:	2780      	movs	r7, #128	; 0x80
    8f62:	2600      	movs	r6, #0
    8f64:	03ff      	lsls	r7, r7, #15
    8f66:	4c08      	ldr	r4, [pc, #32]	; (8f88 <__aeabi_dsub+0x6bc>)
    8f68:	2500      	movs	r5, #0
    8f6a:	e57c      	b.n	8a66 <__aeabi_dsub+0x19a>
    8f6c:	433d      	orrs	r5, r7
    8f6e:	1e6f      	subs	r7, r5, #1
    8f70:	41bd      	sbcs	r5, r7
    8f72:	2700      	movs	r7, #0
    8f74:	b2ed      	uxtb	r5, r5
    8f76:	e783      	b.n	8e80 <__aeabi_dsub+0x5b4>
    8f78:	1c17      	adds	r7, r2, #0
    8f7a:	9d01      	ldr	r5, [sp, #4]
    8f7c:	4c02      	ldr	r4, [pc, #8]	; (8f88 <__aeabi_dsub+0x6bc>)
    8f7e:	e4d7      	b.n	8930 <__aeabi_dsub+0x64>
    8f80:	1c17      	adds	r7, r2, #0
    8f82:	9d01      	ldr	r5, [sp, #4]
    8f84:	e4d4      	b.n	8930 <__aeabi_dsub+0x64>
    8f86:	46c0      	nop			; (mov r8, r8)
    8f88:	000007ff 	.word	0x000007ff
    8f8c:	ff7fffff 	.word	0xff7fffff
    8f90:	4654      	mov	r4, sl
    8f92:	1c3b      	adds	r3, r7, #0
    8f94:	3c20      	subs	r4, #32
    8f96:	40e3      	lsrs	r3, r4
    8f98:	1c1c      	adds	r4, r3, #0
    8f9a:	4653      	mov	r3, sl
    8f9c:	2b20      	cmp	r3, #32
    8f9e:	d00d      	beq.n	8fbc <__aeabi_dsub+0x6f0>
    8fa0:	2340      	movs	r3, #64	; 0x40
    8fa2:	4651      	mov	r1, sl
    8fa4:	1a5b      	subs	r3, r3, r1
    8fa6:	409f      	lsls	r7, r3
    8fa8:	433d      	orrs	r5, r7
    8faa:	1e6f      	subs	r7, r5, #1
    8fac:	41bd      	sbcs	r5, r7
    8fae:	2700      	movs	r7, #0
    8fb0:	4325      	orrs	r5, r4
    8fb2:	e765      	b.n	8e80 <__aeabi_dsub+0x5b4>
    8fb4:	2700      	movs	r7, #0
    8fb6:	e7cd      	b.n	8f54 <__aeabi_dsub+0x688>
    8fb8:	1c0d      	adds	r5, r1, #0
    8fba:	e5c8      	b.n	8b4e <__aeabi_dsub+0x282>
    8fbc:	2700      	movs	r7, #0
    8fbe:	e7f3      	b.n	8fa8 <__aeabi_dsub+0x6dc>

00008fc0 <__aeabi_d2iz>:
    8fc0:	030b      	lsls	r3, r1, #12
    8fc2:	b530      	push	{r4, r5, lr}
    8fc4:	4c13      	ldr	r4, [pc, #76]	; (9014 <__aeabi_d2iz+0x54>)
    8fc6:	0b1a      	lsrs	r2, r3, #12
    8fc8:	004b      	lsls	r3, r1, #1
    8fca:	1c05      	adds	r5, r0, #0
    8fcc:	0d5b      	lsrs	r3, r3, #21
    8fce:	0fc9      	lsrs	r1, r1, #31
    8fd0:	2000      	movs	r0, #0
    8fd2:	42a3      	cmp	r3, r4
    8fd4:	dd10      	ble.n	8ff8 <__aeabi_d2iz+0x38>
    8fd6:	4810      	ldr	r0, [pc, #64]	; (9018 <__aeabi_d2iz+0x58>)
    8fd8:	4283      	cmp	r3, r0
    8fda:	dc0e      	bgt.n	8ffa <__aeabi_d2iz+0x3a>
    8fdc:	2080      	movs	r0, #128	; 0x80
    8fde:	4c0f      	ldr	r4, [pc, #60]	; (901c <__aeabi_d2iz+0x5c>)
    8fe0:	0340      	lsls	r0, r0, #13
    8fe2:	4302      	orrs	r2, r0
    8fe4:	1ae4      	subs	r4, r4, r3
    8fe6:	2c1f      	cmp	r4, #31
    8fe8:	dd0a      	ble.n	9000 <__aeabi_d2iz+0x40>
    8fea:	480d      	ldr	r0, [pc, #52]	; (9020 <__aeabi_d2iz+0x60>)
    8fec:	1ac3      	subs	r3, r0, r3
    8fee:	40da      	lsrs	r2, r3
    8ff0:	1c13      	adds	r3, r2, #0
    8ff2:	4248      	negs	r0, r1
    8ff4:	4043      	eors	r3, r0
    8ff6:	1858      	adds	r0, r3, r1
    8ff8:	bd30      	pop	{r4, r5, pc}
    8ffa:	4b0a      	ldr	r3, [pc, #40]	; (9024 <__aeabi_d2iz+0x64>)
    8ffc:	18c8      	adds	r0, r1, r3
    8ffe:	e7fb      	b.n	8ff8 <__aeabi_d2iz+0x38>
    9000:	1c28      	adds	r0, r5, #0
    9002:	40e0      	lsrs	r0, r4
    9004:	4c08      	ldr	r4, [pc, #32]	; (9028 <__aeabi_d2iz+0x68>)
    9006:	46a4      	mov	ip, r4
    9008:	4463      	add	r3, ip
    900a:	409a      	lsls	r2, r3
    900c:	1c13      	adds	r3, r2, #0
    900e:	4303      	orrs	r3, r0
    9010:	e7ef      	b.n	8ff2 <__aeabi_d2iz+0x32>
    9012:	46c0      	nop			; (mov r8, r8)
    9014:	000003fe 	.word	0x000003fe
    9018:	0000041d 	.word	0x0000041d
    901c:	00000433 	.word	0x00000433
    9020:	00000413 	.word	0x00000413
    9024:	7fffffff 	.word	0x7fffffff
    9028:	fffffbed 	.word	0xfffffbed

0000902c <__aeabi_i2d>:
    902c:	b538      	push	{r3, r4, r5, lr}
    902e:	1e04      	subs	r4, r0, #0
    9030:	d016      	beq.n	9060 <__aeabi_i2d+0x34>
    9032:	0fc5      	lsrs	r5, r0, #31
    9034:	d000      	beq.n	9038 <__aeabi_i2d+0xc>
    9036:	4244      	negs	r4, r0
    9038:	1c20      	adds	r0, r4, #0
    903a:	f000 f949 	bl	92d0 <__clzsi2>
    903e:	4b17      	ldr	r3, [pc, #92]	; (909c <__aeabi_i2d+0x70>)
    9040:	1a1b      	subs	r3, r3, r0
    9042:	280a      	cmp	r0, #10
    9044:	dc21      	bgt.n	908a <__aeabi_i2d+0x5e>
    9046:	1c02      	adds	r2, r0, #0
    9048:	1c21      	adds	r1, r4, #0
    904a:	3215      	adds	r2, #21
    904c:	4091      	lsls	r1, r2
    904e:	1c0a      	adds	r2, r1, #0
    9050:	210b      	movs	r1, #11
    9052:	1a08      	subs	r0, r1, r0
    9054:	40c4      	lsrs	r4, r0
    9056:	055b      	lsls	r3, r3, #21
    9058:	0324      	lsls	r4, r4, #12
    905a:	0b24      	lsrs	r4, r4, #12
    905c:	0d5b      	lsrs	r3, r3, #21
    905e:	e003      	b.n	9068 <__aeabi_i2d+0x3c>
    9060:	2500      	movs	r5, #0
    9062:	2300      	movs	r3, #0
    9064:	2400      	movs	r4, #0
    9066:	2200      	movs	r2, #0
    9068:	2100      	movs	r1, #0
    906a:	1c10      	adds	r0, r2, #0
    906c:	0324      	lsls	r4, r4, #12
    906e:	0d0a      	lsrs	r2, r1, #20
    9070:	0512      	lsls	r2, r2, #20
    9072:	0b24      	lsrs	r4, r4, #12
    9074:	4314      	orrs	r4, r2
    9076:	4a0a      	ldr	r2, [pc, #40]	; (90a0 <__aeabi_i2d+0x74>)
    9078:	051b      	lsls	r3, r3, #20
    907a:	4014      	ands	r4, r2
    907c:	431c      	orrs	r4, r3
    907e:	0064      	lsls	r4, r4, #1
    9080:	07ed      	lsls	r5, r5, #31
    9082:	0864      	lsrs	r4, r4, #1
    9084:	432c      	orrs	r4, r5
    9086:	1c21      	adds	r1, r4, #0
    9088:	bd38      	pop	{r3, r4, r5, pc}
    908a:	380b      	subs	r0, #11
    908c:	4084      	lsls	r4, r0
    908e:	055b      	lsls	r3, r3, #21
    9090:	0324      	lsls	r4, r4, #12
    9092:	0b24      	lsrs	r4, r4, #12
    9094:	0d5b      	lsrs	r3, r3, #21
    9096:	2200      	movs	r2, #0
    9098:	e7e6      	b.n	9068 <__aeabi_i2d+0x3c>
    909a:	46c0      	nop			; (mov r8, r8)
    909c:	0000041e 	.word	0x0000041e
    90a0:	800fffff 	.word	0x800fffff

000090a4 <__aeabi_ui2d>:
    90a4:	b510      	push	{r4, lr}
    90a6:	1e04      	subs	r4, r0, #0
    90a8:	d010      	beq.n	90cc <__aeabi_ui2d+0x28>
    90aa:	f000 f911 	bl	92d0 <__clzsi2>
    90ae:	4a14      	ldr	r2, [pc, #80]	; (9100 <__aeabi_ui2d+0x5c>)
    90b0:	1a12      	subs	r2, r2, r0
    90b2:	280a      	cmp	r0, #10
    90b4:	dc1a      	bgt.n	90ec <__aeabi_ui2d+0x48>
    90b6:	230b      	movs	r3, #11
    90b8:	1c21      	adds	r1, r4, #0
    90ba:	1a1b      	subs	r3, r3, r0
    90bc:	40d9      	lsrs	r1, r3
    90be:	3015      	adds	r0, #21
    90c0:	030b      	lsls	r3, r1, #12
    90c2:	0552      	lsls	r2, r2, #21
    90c4:	4084      	lsls	r4, r0
    90c6:	0b1b      	lsrs	r3, r3, #12
    90c8:	0d52      	lsrs	r2, r2, #21
    90ca:	e001      	b.n	90d0 <__aeabi_ui2d+0x2c>
    90cc:	2200      	movs	r2, #0
    90ce:	2300      	movs	r3, #0
    90d0:	2100      	movs	r1, #0
    90d2:	031b      	lsls	r3, r3, #12
    90d4:	1c20      	adds	r0, r4, #0
    90d6:	0b1c      	lsrs	r4, r3, #12
    90d8:	0d0b      	lsrs	r3, r1, #20
    90da:	051b      	lsls	r3, r3, #20
    90dc:	4323      	orrs	r3, r4
    90de:	4c09      	ldr	r4, [pc, #36]	; (9104 <__aeabi_ui2d+0x60>)
    90e0:	0512      	lsls	r2, r2, #20
    90e2:	4023      	ands	r3, r4
    90e4:	4313      	orrs	r3, r2
    90e6:	005b      	lsls	r3, r3, #1
    90e8:	0859      	lsrs	r1, r3, #1
    90ea:	bd10      	pop	{r4, pc}
    90ec:	1c03      	adds	r3, r0, #0
    90ee:	3b0b      	subs	r3, #11
    90f0:	409c      	lsls	r4, r3
    90f2:	0552      	lsls	r2, r2, #21
    90f4:	0323      	lsls	r3, r4, #12
    90f6:	0b1b      	lsrs	r3, r3, #12
    90f8:	0d52      	lsrs	r2, r2, #21
    90fa:	2400      	movs	r4, #0
    90fc:	e7e8      	b.n	90d0 <__aeabi_ui2d+0x2c>
    90fe:	46c0      	nop			; (mov r8, r8)
    9100:	0000041e 	.word	0x0000041e
    9104:	800fffff 	.word	0x800fffff

00009108 <__aeabi_f2d>:
    9108:	0042      	lsls	r2, r0, #1
    910a:	0e12      	lsrs	r2, r2, #24
    910c:	1c51      	adds	r1, r2, #1
    910e:	b538      	push	{r3, r4, r5, lr}
    9110:	b2c9      	uxtb	r1, r1
    9112:	0243      	lsls	r3, r0, #9
    9114:	0a5d      	lsrs	r5, r3, #9
    9116:	0fc4      	lsrs	r4, r0, #31
    9118:	2901      	cmp	r1, #1
    911a:	dd15      	ble.n	9148 <__aeabi_f2d+0x40>
    911c:	21e0      	movs	r1, #224	; 0xe0
    911e:	0089      	lsls	r1, r1, #2
    9120:	468c      	mov	ip, r1
    9122:	076d      	lsls	r5, r5, #29
    9124:	0b1b      	lsrs	r3, r3, #12
    9126:	4462      	add	r2, ip
    9128:	2100      	movs	r1, #0
    912a:	1c28      	adds	r0, r5, #0
    912c:	0d0d      	lsrs	r5, r1, #20
    912e:	052d      	lsls	r5, r5, #20
    9130:	432b      	orrs	r3, r5
    9132:	4d1c      	ldr	r5, [pc, #112]	; (91a4 <__aeabi_f2d+0x9c>)
    9134:	0552      	lsls	r2, r2, #21
    9136:	402b      	ands	r3, r5
    9138:	0852      	lsrs	r2, r2, #1
    913a:	4313      	orrs	r3, r2
    913c:	005b      	lsls	r3, r3, #1
    913e:	07e4      	lsls	r4, r4, #31
    9140:	085b      	lsrs	r3, r3, #1
    9142:	4323      	orrs	r3, r4
    9144:	1c19      	adds	r1, r3, #0
    9146:	bd38      	pop	{r3, r4, r5, pc}
    9148:	2a00      	cmp	r2, #0
    914a:	d115      	bne.n	9178 <__aeabi_f2d+0x70>
    914c:	2d00      	cmp	r5, #0
    914e:	d01f      	beq.n	9190 <__aeabi_f2d+0x88>
    9150:	1c28      	adds	r0, r5, #0
    9152:	f000 f8bd 	bl	92d0 <__clzsi2>
    9156:	280a      	cmp	r0, #10
    9158:	dc1d      	bgt.n	9196 <__aeabi_f2d+0x8e>
    915a:	230b      	movs	r3, #11
    915c:	1c2a      	adds	r2, r5, #0
    915e:	1a1b      	subs	r3, r3, r0
    9160:	40da      	lsrs	r2, r3
    9162:	1c13      	adds	r3, r2, #0
    9164:	1c02      	adds	r2, r0, #0
    9166:	3215      	adds	r2, #21
    9168:	4095      	lsls	r5, r2
    916a:	4a0f      	ldr	r2, [pc, #60]	; (91a8 <__aeabi_f2d+0xa0>)
    916c:	031b      	lsls	r3, r3, #12
    916e:	1a12      	subs	r2, r2, r0
    9170:	0552      	lsls	r2, r2, #21
    9172:	0b1b      	lsrs	r3, r3, #12
    9174:	0d52      	lsrs	r2, r2, #21
    9176:	e7d7      	b.n	9128 <__aeabi_f2d+0x20>
    9178:	2d00      	cmp	r5, #0
    917a:	d006      	beq.n	918a <__aeabi_f2d+0x82>
    917c:	2280      	movs	r2, #128	; 0x80
    917e:	0b1b      	lsrs	r3, r3, #12
    9180:	0312      	lsls	r2, r2, #12
    9182:	4313      	orrs	r3, r2
    9184:	076d      	lsls	r5, r5, #29
    9186:	4a09      	ldr	r2, [pc, #36]	; (91ac <__aeabi_f2d+0xa4>)
    9188:	e7ce      	b.n	9128 <__aeabi_f2d+0x20>
    918a:	4a08      	ldr	r2, [pc, #32]	; (91ac <__aeabi_f2d+0xa4>)
    918c:	2300      	movs	r3, #0
    918e:	e7cb      	b.n	9128 <__aeabi_f2d+0x20>
    9190:	2200      	movs	r2, #0
    9192:	2300      	movs	r3, #0
    9194:	e7c8      	b.n	9128 <__aeabi_f2d+0x20>
    9196:	1c03      	adds	r3, r0, #0
    9198:	3b0b      	subs	r3, #11
    919a:	409d      	lsls	r5, r3
    919c:	1c2b      	adds	r3, r5, #0
    919e:	2500      	movs	r5, #0
    91a0:	e7e3      	b.n	916a <__aeabi_f2d+0x62>
    91a2:	46c0      	nop			; (mov r8, r8)
    91a4:	800fffff 	.word	0x800fffff
    91a8:	00000389 	.word	0x00000389
    91ac:	000007ff 	.word	0x000007ff

000091b0 <__aeabi_d2f>:
    91b0:	b570      	push	{r4, r5, r6, lr}
    91b2:	030b      	lsls	r3, r1, #12
    91b4:	004d      	lsls	r5, r1, #1
    91b6:	0f44      	lsrs	r4, r0, #29
    91b8:	0d6d      	lsrs	r5, r5, #21
    91ba:	0a5b      	lsrs	r3, r3, #9
    91bc:	4323      	orrs	r3, r4
    91be:	1c6c      	adds	r4, r5, #1
    91c0:	0564      	lsls	r4, r4, #21
    91c2:	0fc9      	lsrs	r1, r1, #31
    91c4:	00c2      	lsls	r2, r0, #3
    91c6:	0d64      	lsrs	r4, r4, #21
    91c8:	2c01      	cmp	r4, #1
    91ca:	dd2a      	ble.n	9222 <__aeabi_d2f+0x72>
    91cc:	4c3b      	ldr	r4, [pc, #236]	; (92bc <__aeabi_d2f+0x10c>)
    91ce:	192c      	adds	r4, r5, r4
    91d0:	2cfe      	cmp	r4, #254	; 0xfe
    91d2:	dc1a      	bgt.n	920a <__aeabi_d2f+0x5a>
    91d4:	2c00      	cmp	r4, #0
    91d6:	dd35      	ble.n	9244 <__aeabi_d2f+0x94>
    91d8:	0180      	lsls	r0, r0, #6
    91da:	1e45      	subs	r5, r0, #1
    91dc:	41a8      	sbcs	r0, r5
    91de:	00db      	lsls	r3, r3, #3
    91e0:	4303      	orrs	r3, r0
    91e2:	0f52      	lsrs	r2, r2, #29
    91e4:	4313      	orrs	r3, r2
    91e6:	075a      	lsls	r2, r3, #29
    91e8:	d004      	beq.n	91f4 <__aeabi_d2f+0x44>
    91ea:	220f      	movs	r2, #15
    91ec:	401a      	ands	r2, r3
    91ee:	2a04      	cmp	r2, #4
    91f0:	d000      	beq.n	91f4 <__aeabi_d2f+0x44>
    91f2:	3304      	adds	r3, #4
    91f4:	2280      	movs	r2, #128	; 0x80
    91f6:	04d2      	lsls	r2, r2, #19
    91f8:	401a      	ands	r2, r3
    91fa:	d027      	beq.n	924c <__aeabi_d2f+0x9c>
    91fc:	3401      	adds	r4, #1
    91fe:	2cff      	cmp	r4, #255	; 0xff
    9200:	d003      	beq.n	920a <__aeabi_d2f+0x5a>
    9202:	019b      	lsls	r3, r3, #6
    9204:	0a5b      	lsrs	r3, r3, #9
    9206:	b2e4      	uxtb	r4, r4
    9208:	e001      	b.n	920e <__aeabi_d2f+0x5e>
    920a:	24ff      	movs	r4, #255	; 0xff
    920c:	2300      	movs	r3, #0
    920e:	025b      	lsls	r3, r3, #9
    9210:	05e4      	lsls	r4, r4, #23
    9212:	0a5b      	lsrs	r3, r3, #9
    9214:	4323      	orrs	r3, r4
    9216:	005b      	lsls	r3, r3, #1
    9218:	07c9      	lsls	r1, r1, #31
    921a:	085b      	lsrs	r3, r3, #1
    921c:	430b      	orrs	r3, r1
    921e:	1c18      	adds	r0, r3, #0
    9220:	bd70      	pop	{r4, r5, r6, pc}
    9222:	2d00      	cmp	r5, #0
    9224:	d106      	bne.n	9234 <__aeabi_d2f+0x84>
    9226:	4313      	orrs	r3, r2
    9228:	d10e      	bne.n	9248 <__aeabi_d2f+0x98>
    922a:	2400      	movs	r4, #0
    922c:	025b      	lsls	r3, r3, #9
    922e:	0a5b      	lsrs	r3, r3, #9
    9230:	b2e4      	uxtb	r4, r4
    9232:	e7ec      	b.n	920e <__aeabi_d2f+0x5e>
    9234:	431a      	orrs	r2, r3
    9236:	d0e8      	beq.n	920a <__aeabi_d2f+0x5a>
    9238:	2080      	movs	r0, #128	; 0x80
    923a:	00db      	lsls	r3, r3, #3
    923c:	0480      	lsls	r0, r0, #18
    923e:	4303      	orrs	r3, r0
    9240:	24ff      	movs	r4, #255	; 0xff
    9242:	e7d0      	b.n	91e6 <__aeabi_d2f+0x36>
    9244:	3417      	adds	r4, #23
    9246:	da0c      	bge.n	9262 <__aeabi_d2f+0xb2>
    9248:	2305      	movs	r3, #5
    924a:	2400      	movs	r4, #0
    924c:	08db      	lsrs	r3, r3, #3
    924e:	2cff      	cmp	r4, #255	; 0xff
    9250:	d1ec      	bne.n	922c <__aeabi_d2f+0x7c>
    9252:	2b00      	cmp	r3, #0
    9254:	d02d      	beq.n	92b2 <__aeabi_d2f+0x102>
    9256:	2280      	movs	r2, #128	; 0x80
    9258:	03d2      	lsls	r2, r2, #15
    925a:	4313      	orrs	r3, r2
    925c:	025b      	lsls	r3, r3, #9
    925e:	0a5b      	lsrs	r3, r3, #9
    9260:	e7d5      	b.n	920e <__aeabi_d2f+0x5e>
    9262:	2480      	movs	r4, #128	; 0x80
    9264:	4816      	ldr	r0, [pc, #88]	; (92c0 <__aeabi_d2f+0x110>)
    9266:	0424      	lsls	r4, r4, #16
    9268:	4323      	orrs	r3, r4
    926a:	1b40      	subs	r0, r0, r5
    926c:	281f      	cmp	r0, #31
    926e:	dc0d      	bgt.n	928c <__aeabi_d2f+0xdc>
    9270:	4c14      	ldr	r4, [pc, #80]	; (92c4 <__aeabi_d2f+0x114>)
    9272:	46a4      	mov	ip, r4
    9274:	4465      	add	r5, ip
    9276:	40ab      	lsls	r3, r5
    9278:	1c1c      	adds	r4, r3, #0
    927a:	1c13      	adds	r3, r2, #0
    927c:	40ab      	lsls	r3, r5
    927e:	1e5d      	subs	r5, r3, #1
    9280:	41ab      	sbcs	r3, r5
    9282:	40c2      	lsrs	r2, r0
    9284:	4323      	orrs	r3, r4
    9286:	4313      	orrs	r3, r2
    9288:	2400      	movs	r4, #0
    928a:	e7ac      	b.n	91e6 <__aeabi_d2f+0x36>
    928c:	1c1e      	adds	r6, r3, #0
    928e:	4c0e      	ldr	r4, [pc, #56]	; (92c8 <__aeabi_d2f+0x118>)
    9290:	1b64      	subs	r4, r4, r5
    9292:	40e6      	lsrs	r6, r4
    9294:	1c34      	adds	r4, r6, #0
    9296:	2820      	cmp	r0, #32
    9298:	d00d      	beq.n	92b6 <__aeabi_d2f+0x106>
    929a:	480c      	ldr	r0, [pc, #48]	; (92cc <__aeabi_d2f+0x11c>)
    929c:	4684      	mov	ip, r0
    929e:	4465      	add	r5, ip
    92a0:	40ab      	lsls	r3, r5
    92a2:	1c1d      	adds	r5, r3, #0
    92a4:	432a      	orrs	r2, r5
    92a6:	1e53      	subs	r3, r2, #1
    92a8:	419a      	sbcs	r2, r3
    92aa:	1c13      	adds	r3, r2, #0
    92ac:	4323      	orrs	r3, r4
    92ae:	2400      	movs	r4, #0
    92b0:	e799      	b.n	91e6 <__aeabi_d2f+0x36>
    92b2:	2300      	movs	r3, #0
    92b4:	e7ab      	b.n	920e <__aeabi_d2f+0x5e>
    92b6:	2500      	movs	r5, #0
    92b8:	e7f4      	b.n	92a4 <__aeabi_d2f+0xf4>
    92ba:	46c0      	nop			; (mov r8, r8)
    92bc:	fffffc80 	.word	0xfffffc80
    92c0:	0000039e 	.word	0x0000039e
    92c4:	fffffc82 	.word	0xfffffc82
    92c8:	0000037e 	.word	0x0000037e
    92cc:	fffffca2 	.word	0xfffffca2

000092d0 <__clzsi2>:
    92d0:	211c      	movs	r1, #28
    92d2:	2301      	movs	r3, #1
    92d4:	041b      	lsls	r3, r3, #16
    92d6:	4298      	cmp	r0, r3
    92d8:	d301      	bcc.n	92de <__clzsi2+0xe>
    92da:	0c00      	lsrs	r0, r0, #16
    92dc:	3910      	subs	r1, #16
    92de:	0a1b      	lsrs	r3, r3, #8
    92e0:	4298      	cmp	r0, r3
    92e2:	d301      	bcc.n	92e8 <__clzsi2+0x18>
    92e4:	0a00      	lsrs	r0, r0, #8
    92e6:	3908      	subs	r1, #8
    92e8:	091b      	lsrs	r3, r3, #4
    92ea:	4298      	cmp	r0, r3
    92ec:	d301      	bcc.n	92f2 <__clzsi2+0x22>
    92ee:	0900      	lsrs	r0, r0, #4
    92f0:	3904      	subs	r1, #4
    92f2:	a202      	add	r2, pc, #8	; (adr r2, 92fc <__clzsi2+0x2c>)
    92f4:	5c10      	ldrb	r0, [r2, r0]
    92f6:	1840      	adds	r0, r0, r1
    92f8:	4770      	bx	lr
    92fa:	46c0      	nop			; (mov r8, r8)
    92fc:	02020304 	.word	0x02020304
    9300:	01010101 	.word	0x01010101
	...

0000930c <__cxa_atexit>:
    930c:	4b05      	ldr	r3, [pc, #20]	; (9324 <__cxa_atexit+0x18>)
    930e:	b510      	push	{r4, lr}
    9310:	1c04      	adds	r4, r0, #0
    9312:	1e18      	subs	r0, r3, #0
    9314:	d005      	beq.n	9322 <__cxa_atexit+0x16>
    9316:	1c13      	adds	r3, r2, #0
    9318:	2002      	movs	r0, #2
    931a:	1c0a      	adds	r2, r1, #0
    931c:	1c21      	adds	r1, r4, #0
    931e:	e000      	b.n	9322 <__cxa_atexit+0x16>
    9320:	bf00      	nop
    9322:	bd10      	pop	{r4, pc}
    9324:	00000000 	.word	0x00000000

00009328 <__errno>:
    9328:	4b01      	ldr	r3, [pc, #4]	; (9330 <__errno+0x8>)
    932a:	6818      	ldr	r0, [r3, #0]
    932c:	4770      	bx	lr
    932e:	46c0      	nop			; (mov r8, r8)
    9330:	20000134 	.word	0x20000134

00009334 <exit>:
    9334:	4b08      	ldr	r3, [pc, #32]	; (9358 <exit+0x24>)
    9336:	b510      	push	{r4, lr}
    9338:	1c04      	adds	r4, r0, #0
    933a:	2b00      	cmp	r3, #0
    933c:	d002      	beq.n	9344 <exit+0x10>
    933e:	2100      	movs	r1, #0
    9340:	e000      	b.n	9344 <exit+0x10>
    9342:	bf00      	nop
    9344:	4b05      	ldr	r3, [pc, #20]	; (935c <exit+0x28>)
    9346:	6818      	ldr	r0, [r3, #0]
    9348:	6a83      	ldr	r3, [r0, #40]	; 0x28
    934a:	2b00      	cmp	r3, #0
    934c:	d000      	beq.n	9350 <exit+0x1c>
    934e:	4798      	blx	r3
    9350:	1c20      	adds	r0, r4, #0
    9352:	f7fa fc6b 	bl	3c2c <_exit>
    9356:	46c0      	nop			; (mov r8, r8)
    9358:	00000000 	.word	0x00000000
    935c:	0000f6dc 	.word	0x0000f6dc

00009360 <_fclose_r>:
    9360:	b570      	push	{r4, r5, r6, lr}
    9362:	1c05      	adds	r5, r0, #0
    9364:	1e0c      	subs	r4, r1, #0
    9366:	d101      	bne.n	936c <_fclose_r+0xc>
    9368:	2000      	movs	r0, #0
    936a:	e049      	b.n	9400 <_fclose_r+0xa0>
    936c:	2800      	cmp	r0, #0
    936e:	d004      	beq.n	937a <_fclose_r+0x1a>
    9370:	6983      	ldr	r3, [r0, #24]
    9372:	2b00      	cmp	r3, #0
    9374:	d101      	bne.n	937a <_fclose_r+0x1a>
    9376:	f000 f961 	bl	963c <__sinit>
    937a:	4b22      	ldr	r3, [pc, #136]	; (9404 <_fclose_r+0xa4>)
    937c:	429c      	cmp	r4, r3
    937e:	d101      	bne.n	9384 <_fclose_r+0x24>
    9380:	686c      	ldr	r4, [r5, #4]
    9382:	e008      	b.n	9396 <_fclose_r+0x36>
    9384:	4b20      	ldr	r3, [pc, #128]	; (9408 <_fclose_r+0xa8>)
    9386:	429c      	cmp	r4, r3
    9388:	d101      	bne.n	938e <_fclose_r+0x2e>
    938a:	68ac      	ldr	r4, [r5, #8]
    938c:	e003      	b.n	9396 <_fclose_r+0x36>
    938e:	4b1f      	ldr	r3, [pc, #124]	; (940c <_fclose_r+0xac>)
    9390:	429c      	cmp	r4, r3
    9392:	d100      	bne.n	9396 <_fclose_r+0x36>
    9394:	68ec      	ldr	r4, [r5, #12]
    9396:	220c      	movs	r2, #12
    9398:	5ea3      	ldrsh	r3, [r4, r2]
    939a:	2b00      	cmp	r3, #0
    939c:	d0e4      	beq.n	9368 <_fclose_r+0x8>
    939e:	1c28      	adds	r0, r5, #0
    93a0:	1c21      	adds	r1, r4, #0
    93a2:	f000 f83f 	bl	9424 <__sflush_r>
    93a6:	6b23      	ldr	r3, [r4, #48]	; 0x30
    93a8:	1c06      	adds	r6, r0, #0
    93aa:	2b00      	cmp	r3, #0
    93ac:	d006      	beq.n	93bc <_fclose_r+0x5c>
    93ae:	1c28      	adds	r0, r5, #0
    93b0:	6a21      	ldr	r1, [r4, #32]
    93b2:	4798      	blx	r3
    93b4:	2800      	cmp	r0, #0
    93b6:	da01      	bge.n	93bc <_fclose_r+0x5c>
    93b8:	2601      	movs	r6, #1
    93ba:	4276      	negs	r6, r6
    93bc:	89a3      	ldrh	r3, [r4, #12]
    93be:	061b      	lsls	r3, r3, #24
    93c0:	d503      	bpl.n	93ca <_fclose_r+0x6a>
    93c2:	1c28      	adds	r0, r5, #0
    93c4:	6921      	ldr	r1, [r4, #16]
    93c6:	f000 fb61 	bl	9a8c <_free_r>
    93ca:	6b61      	ldr	r1, [r4, #52]	; 0x34
    93cc:	2900      	cmp	r1, #0
    93ce:	d008      	beq.n	93e2 <_fclose_r+0x82>
    93d0:	1c23      	adds	r3, r4, #0
    93d2:	3344      	adds	r3, #68	; 0x44
    93d4:	4299      	cmp	r1, r3
    93d6:	d002      	beq.n	93de <_fclose_r+0x7e>
    93d8:	1c28      	adds	r0, r5, #0
    93da:	f000 fb57 	bl	9a8c <_free_r>
    93de:	2300      	movs	r3, #0
    93e0:	6363      	str	r3, [r4, #52]	; 0x34
    93e2:	6ca1      	ldr	r1, [r4, #72]	; 0x48
    93e4:	2900      	cmp	r1, #0
    93e6:	d004      	beq.n	93f2 <_fclose_r+0x92>
    93e8:	1c28      	adds	r0, r5, #0
    93ea:	f000 fb4f 	bl	9a8c <_free_r>
    93ee:	2300      	movs	r3, #0
    93f0:	64a3      	str	r3, [r4, #72]	; 0x48
    93f2:	f000 f993 	bl	971c <__sfp_lock_acquire>
    93f6:	2300      	movs	r3, #0
    93f8:	81a3      	strh	r3, [r4, #12]
    93fa:	f000 f990 	bl	971e <__sfp_lock_release>
    93fe:	1c30      	adds	r0, r6, #0
    9400:	bd70      	pop	{r4, r5, r6, pc}
    9402:	46c0      	nop			; (mov r8, r8)
    9404:	0000f678 	.word	0x0000f678
    9408:	0000f698 	.word	0x0000f698
    940c:	0000f6b8 	.word	0x0000f6b8

00009410 <fclose>:
    9410:	b508      	push	{r3, lr}
    9412:	4b03      	ldr	r3, [pc, #12]	; (9420 <fclose+0x10>)
    9414:	1c01      	adds	r1, r0, #0
    9416:	6818      	ldr	r0, [r3, #0]
    9418:	f7ff ffa2 	bl	9360 <_fclose_r>
    941c:	bd08      	pop	{r3, pc}
    941e:	46c0      	nop			; (mov r8, r8)
    9420:	20000134 	.word	0x20000134

00009424 <__sflush_r>:
    9424:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    9426:	898a      	ldrh	r2, [r1, #12]
    9428:	1c05      	adds	r5, r0, #0
    942a:	1c0c      	adds	r4, r1, #0
    942c:	0713      	lsls	r3, r2, #28
    942e:	d45e      	bmi.n	94ee <__sflush_r+0xca>
    9430:	684b      	ldr	r3, [r1, #4]
    9432:	2b00      	cmp	r3, #0
    9434:	dc02      	bgt.n	943c <__sflush_r+0x18>
    9436:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    9438:	2b00      	cmp	r3, #0
    943a:	dd1a      	ble.n	9472 <__sflush_r+0x4e>
    943c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    943e:	2f00      	cmp	r7, #0
    9440:	d017      	beq.n	9472 <__sflush_r+0x4e>
    9442:	2300      	movs	r3, #0
    9444:	682e      	ldr	r6, [r5, #0]
    9446:	602b      	str	r3, [r5, #0]
    9448:	2380      	movs	r3, #128	; 0x80
    944a:	015b      	lsls	r3, r3, #5
    944c:	401a      	ands	r2, r3
    944e:	d001      	beq.n	9454 <__sflush_r+0x30>
    9450:	6d62      	ldr	r2, [r4, #84]	; 0x54
    9452:	e015      	b.n	9480 <__sflush_r+0x5c>
    9454:	1c28      	adds	r0, r5, #0
    9456:	6a21      	ldr	r1, [r4, #32]
    9458:	2301      	movs	r3, #1
    945a:	47b8      	blx	r7
    945c:	1c02      	adds	r2, r0, #0
    945e:	1c43      	adds	r3, r0, #1
    9460:	d10e      	bne.n	9480 <__sflush_r+0x5c>
    9462:	682b      	ldr	r3, [r5, #0]
    9464:	2b00      	cmp	r3, #0
    9466:	d00b      	beq.n	9480 <__sflush_r+0x5c>
    9468:	2b1d      	cmp	r3, #29
    946a:	d001      	beq.n	9470 <__sflush_r+0x4c>
    946c:	2b16      	cmp	r3, #22
    946e:	d102      	bne.n	9476 <__sflush_r+0x52>
    9470:	602e      	str	r6, [r5, #0]
    9472:	2000      	movs	r0, #0
    9474:	e05e      	b.n	9534 <__sflush_r+0x110>
    9476:	2140      	movs	r1, #64	; 0x40
    9478:	89a3      	ldrh	r3, [r4, #12]
    947a:	430b      	orrs	r3, r1
    947c:	81a3      	strh	r3, [r4, #12]
    947e:	e059      	b.n	9534 <__sflush_r+0x110>
    9480:	89a3      	ldrh	r3, [r4, #12]
    9482:	075b      	lsls	r3, r3, #29
    9484:	d506      	bpl.n	9494 <__sflush_r+0x70>
    9486:	6863      	ldr	r3, [r4, #4]
    9488:	1ad2      	subs	r2, r2, r3
    948a:	6b63      	ldr	r3, [r4, #52]	; 0x34
    948c:	2b00      	cmp	r3, #0
    948e:	d001      	beq.n	9494 <__sflush_r+0x70>
    9490:	6c23      	ldr	r3, [r4, #64]	; 0x40
    9492:	1ad2      	subs	r2, r2, r3
    9494:	2300      	movs	r3, #0
    9496:	1c28      	adds	r0, r5, #0
    9498:	6a21      	ldr	r1, [r4, #32]
    949a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    949c:	47b8      	blx	r7
    949e:	89a3      	ldrh	r3, [r4, #12]
    94a0:	1c42      	adds	r2, r0, #1
    94a2:	d106      	bne.n	94b2 <__sflush_r+0x8e>
    94a4:	682a      	ldr	r2, [r5, #0]
    94a6:	2a00      	cmp	r2, #0
    94a8:	d003      	beq.n	94b2 <__sflush_r+0x8e>
    94aa:	2a1d      	cmp	r2, #29
    94ac:	d001      	beq.n	94b2 <__sflush_r+0x8e>
    94ae:	2a16      	cmp	r2, #22
    94b0:	d119      	bne.n	94e6 <__sflush_r+0xc2>
    94b2:	2200      	movs	r2, #0
    94b4:	6062      	str	r2, [r4, #4]
    94b6:	6922      	ldr	r2, [r4, #16]
    94b8:	6022      	str	r2, [r4, #0]
    94ba:	04db      	lsls	r3, r3, #19
    94bc:	d505      	bpl.n	94ca <__sflush_r+0xa6>
    94be:	1c43      	adds	r3, r0, #1
    94c0:	d102      	bne.n	94c8 <__sflush_r+0xa4>
    94c2:	682b      	ldr	r3, [r5, #0]
    94c4:	2b00      	cmp	r3, #0
    94c6:	d100      	bne.n	94ca <__sflush_r+0xa6>
    94c8:	6560      	str	r0, [r4, #84]	; 0x54
    94ca:	6b61      	ldr	r1, [r4, #52]	; 0x34
    94cc:	602e      	str	r6, [r5, #0]
    94ce:	2900      	cmp	r1, #0
    94d0:	d0cf      	beq.n	9472 <__sflush_r+0x4e>
    94d2:	1c23      	adds	r3, r4, #0
    94d4:	3344      	adds	r3, #68	; 0x44
    94d6:	4299      	cmp	r1, r3
    94d8:	d002      	beq.n	94e0 <__sflush_r+0xbc>
    94da:	1c28      	adds	r0, r5, #0
    94dc:	f000 fad6 	bl	9a8c <_free_r>
    94e0:	2000      	movs	r0, #0
    94e2:	6360      	str	r0, [r4, #52]	; 0x34
    94e4:	e026      	b.n	9534 <__sflush_r+0x110>
    94e6:	2240      	movs	r2, #64	; 0x40
    94e8:	4313      	orrs	r3, r2
    94ea:	81a3      	strh	r3, [r4, #12]
    94ec:	e022      	b.n	9534 <__sflush_r+0x110>
    94ee:	690f      	ldr	r7, [r1, #16]
    94f0:	2f00      	cmp	r7, #0
    94f2:	d0be      	beq.n	9472 <__sflush_r+0x4e>
    94f4:	680b      	ldr	r3, [r1, #0]
    94f6:	600f      	str	r7, [r1, #0]
    94f8:	1bdb      	subs	r3, r3, r7
    94fa:	9301      	str	r3, [sp, #4]
    94fc:	2300      	movs	r3, #0
    94fe:	0792      	lsls	r2, r2, #30
    9500:	d100      	bne.n	9504 <__sflush_r+0xe0>
    9502:	694b      	ldr	r3, [r1, #20]
    9504:	60a3      	str	r3, [r4, #8]
    9506:	9b01      	ldr	r3, [sp, #4]
    9508:	2b00      	cmp	r3, #0
    950a:	ddb2      	ble.n	9472 <__sflush_r+0x4e>
    950c:	1c28      	adds	r0, r5, #0
    950e:	6a21      	ldr	r1, [r4, #32]
    9510:	1c3a      	adds	r2, r7, #0
    9512:	9b01      	ldr	r3, [sp, #4]
    9514:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    9516:	47b0      	blx	r6
    9518:	2800      	cmp	r0, #0
    951a:	dc06      	bgt.n	952a <__sflush_r+0x106>
    951c:	2240      	movs	r2, #64	; 0x40
    951e:	2001      	movs	r0, #1
    9520:	89a3      	ldrh	r3, [r4, #12]
    9522:	4240      	negs	r0, r0
    9524:	4313      	orrs	r3, r2
    9526:	81a3      	strh	r3, [r4, #12]
    9528:	e004      	b.n	9534 <__sflush_r+0x110>
    952a:	9b01      	ldr	r3, [sp, #4]
    952c:	183f      	adds	r7, r7, r0
    952e:	1a1b      	subs	r3, r3, r0
    9530:	9301      	str	r3, [sp, #4]
    9532:	e7e8      	b.n	9506 <__sflush_r+0xe2>
    9534:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

00009538 <_fflush_r>:
    9538:	b538      	push	{r3, r4, r5, lr}
    953a:	690b      	ldr	r3, [r1, #16]
    953c:	1c05      	adds	r5, r0, #0
    953e:	1c0c      	adds	r4, r1, #0
    9540:	2b00      	cmp	r3, #0
    9542:	d101      	bne.n	9548 <_fflush_r+0x10>
    9544:	2000      	movs	r0, #0
    9546:	e01c      	b.n	9582 <_fflush_r+0x4a>
    9548:	2800      	cmp	r0, #0
    954a:	d004      	beq.n	9556 <_fflush_r+0x1e>
    954c:	6983      	ldr	r3, [r0, #24]
    954e:	2b00      	cmp	r3, #0
    9550:	d101      	bne.n	9556 <_fflush_r+0x1e>
    9552:	f000 f873 	bl	963c <__sinit>
    9556:	4b0b      	ldr	r3, [pc, #44]	; (9584 <_fflush_r+0x4c>)
    9558:	429c      	cmp	r4, r3
    955a:	d101      	bne.n	9560 <_fflush_r+0x28>
    955c:	686c      	ldr	r4, [r5, #4]
    955e:	e008      	b.n	9572 <_fflush_r+0x3a>
    9560:	4b09      	ldr	r3, [pc, #36]	; (9588 <_fflush_r+0x50>)
    9562:	429c      	cmp	r4, r3
    9564:	d101      	bne.n	956a <_fflush_r+0x32>
    9566:	68ac      	ldr	r4, [r5, #8]
    9568:	e003      	b.n	9572 <_fflush_r+0x3a>
    956a:	4b08      	ldr	r3, [pc, #32]	; (958c <_fflush_r+0x54>)
    956c:	429c      	cmp	r4, r3
    956e:	d100      	bne.n	9572 <_fflush_r+0x3a>
    9570:	68ec      	ldr	r4, [r5, #12]
    9572:	220c      	movs	r2, #12
    9574:	5ea3      	ldrsh	r3, [r4, r2]
    9576:	2b00      	cmp	r3, #0
    9578:	d0e4      	beq.n	9544 <_fflush_r+0xc>
    957a:	1c28      	adds	r0, r5, #0
    957c:	1c21      	adds	r1, r4, #0
    957e:	f7ff ff51 	bl	9424 <__sflush_r>
    9582:	bd38      	pop	{r3, r4, r5, pc}
    9584:	0000f678 	.word	0x0000f678
    9588:	0000f698 	.word	0x0000f698
    958c:	0000f6b8 	.word	0x0000f6b8

00009590 <fflush>:
    9590:	b508      	push	{r3, lr}
    9592:	1e01      	subs	r1, r0, #0
    9594:	d105      	bne.n	95a2 <fflush+0x12>
    9596:	4b05      	ldr	r3, [pc, #20]	; (95ac <fflush+0x1c>)
    9598:	4905      	ldr	r1, [pc, #20]	; (95b0 <fflush+0x20>)
    959a:	6818      	ldr	r0, [r3, #0]
    959c:	f000 f9a6 	bl	98ec <_fwalk_reent>
    95a0:	e003      	b.n	95aa <fflush+0x1a>
    95a2:	4b04      	ldr	r3, [pc, #16]	; (95b4 <fflush+0x24>)
    95a4:	6818      	ldr	r0, [r3, #0]
    95a6:	f7ff ffc7 	bl	9538 <_fflush_r>
    95aa:	bd08      	pop	{r3, pc}
    95ac:	0000f6dc 	.word	0x0000f6dc
    95b0:	00009539 	.word	0x00009539
    95b4:	20000134 	.word	0x20000134

000095b8 <_cleanup_r>:
    95b8:	b508      	push	{r3, lr}
    95ba:	4902      	ldr	r1, [pc, #8]	; (95c4 <_cleanup_r+0xc>)
    95bc:	f000 f996 	bl	98ec <_fwalk_reent>
    95c0:	bd08      	pop	{r3, pc}
    95c2:	46c0      	nop			; (mov r8, r8)
    95c4:	00009539 	.word	0x00009539

000095c8 <std.isra.0>:
    95c8:	2300      	movs	r3, #0
    95ca:	b510      	push	{r4, lr}
    95cc:	1c04      	adds	r4, r0, #0
    95ce:	6003      	str	r3, [r0, #0]
    95d0:	6043      	str	r3, [r0, #4]
    95d2:	6083      	str	r3, [r0, #8]
    95d4:	8181      	strh	r1, [r0, #12]
    95d6:	6643      	str	r3, [r0, #100]	; 0x64
    95d8:	81c2      	strh	r2, [r0, #14]
    95da:	6103      	str	r3, [r0, #16]
    95dc:	6143      	str	r3, [r0, #20]
    95de:	6183      	str	r3, [r0, #24]
    95e0:	1c19      	adds	r1, r3, #0
    95e2:	2208      	movs	r2, #8
    95e4:	305c      	adds	r0, #92	; 0x5c
    95e6:	f000 fa49 	bl	9a7c <memset>
    95ea:	4b05      	ldr	r3, [pc, #20]	; (9600 <std.isra.0+0x38>)
    95ec:	6224      	str	r4, [r4, #32]
    95ee:	6263      	str	r3, [r4, #36]	; 0x24
    95f0:	4b04      	ldr	r3, [pc, #16]	; (9604 <std.isra.0+0x3c>)
    95f2:	62a3      	str	r3, [r4, #40]	; 0x28
    95f4:	4b04      	ldr	r3, [pc, #16]	; (9608 <std.isra.0+0x40>)
    95f6:	62e3      	str	r3, [r4, #44]	; 0x2c
    95f8:	4b04      	ldr	r3, [pc, #16]	; (960c <std.isra.0+0x44>)
    95fa:	6323      	str	r3, [r4, #48]	; 0x30
    95fc:	bd10      	pop	{r4, pc}
    95fe:	46c0      	nop			; (mov r8, r8)
    9600:	0000b121 	.word	0x0000b121
    9604:	0000b14d 	.word	0x0000b14d
    9608:	0000b185 	.word	0x0000b185
    960c:	0000b1b1 	.word	0x0000b1b1

00009610 <__sfmoreglue>:
    9610:	b570      	push	{r4, r5, r6, lr}
    9612:	2568      	movs	r5, #104	; 0x68
    9614:	1e4b      	subs	r3, r1, #1
    9616:	435d      	muls	r5, r3
    9618:	1c0e      	adds	r6, r1, #0
    961a:	1c29      	adds	r1, r5, #0
    961c:	3174      	adds	r1, #116	; 0x74
    961e:	f000 fa7b 	bl	9b18 <_malloc_r>
    9622:	1e04      	subs	r4, r0, #0
    9624:	d008      	beq.n	9638 <__sfmoreglue+0x28>
    9626:	2100      	movs	r1, #0
    9628:	1c2a      	adds	r2, r5, #0
    962a:	6001      	str	r1, [r0, #0]
    962c:	6046      	str	r6, [r0, #4]
    962e:	300c      	adds	r0, #12
    9630:	60a0      	str	r0, [r4, #8]
    9632:	3268      	adds	r2, #104	; 0x68
    9634:	f000 fa22 	bl	9a7c <memset>
    9638:	1c20      	adds	r0, r4, #0
    963a:	bd70      	pop	{r4, r5, r6, pc}

0000963c <__sinit>:
    963c:	6983      	ldr	r3, [r0, #24]
    963e:	b513      	push	{r0, r1, r4, lr}
    9640:	2b00      	cmp	r3, #0
    9642:	d128      	bne.n	9696 <__sinit+0x5a>
    9644:	6483      	str	r3, [r0, #72]	; 0x48
    9646:	64c3      	str	r3, [r0, #76]	; 0x4c
    9648:	6503      	str	r3, [r0, #80]	; 0x50
    964a:	4b13      	ldr	r3, [pc, #76]	; (9698 <__sinit+0x5c>)
    964c:	4a13      	ldr	r2, [pc, #76]	; (969c <__sinit+0x60>)
    964e:	681b      	ldr	r3, [r3, #0]
    9650:	6282      	str	r2, [r0, #40]	; 0x28
    9652:	9301      	str	r3, [sp, #4]
    9654:	4298      	cmp	r0, r3
    9656:	d101      	bne.n	965c <__sinit+0x20>
    9658:	2301      	movs	r3, #1
    965a:	6183      	str	r3, [r0, #24]
    965c:	1c04      	adds	r4, r0, #0
    965e:	f000 f81f 	bl	96a0 <__sfp>
    9662:	6060      	str	r0, [r4, #4]
    9664:	1c20      	adds	r0, r4, #0
    9666:	f000 f81b 	bl	96a0 <__sfp>
    966a:	60a0      	str	r0, [r4, #8]
    966c:	1c20      	adds	r0, r4, #0
    966e:	f000 f817 	bl	96a0 <__sfp>
    9672:	2104      	movs	r1, #4
    9674:	60e0      	str	r0, [r4, #12]
    9676:	2200      	movs	r2, #0
    9678:	6860      	ldr	r0, [r4, #4]
    967a:	f7ff ffa5 	bl	95c8 <std.isra.0>
    967e:	68a0      	ldr	r0, [r4, #8]
    9680:	2109      	movs	r1, #9
    9682:	2201      	movs	r2, #1
    9684:	f7ff ffa0 	bl	95c8 <std.isra.0>
    9688:	68e0      	ldr	r0, [r4, #12]
    968a:	2112      	movs	r1, #18
    968c:	2202      	movs	r2, #2
    968e:	f7ff ff9b 	bl	95c8 <std.isra.0>
    9692:	2301      	movs	r3, #1
    9694:	61a3      	str	r3, [r4, #24]
    9696:	bd13      	pop	{r0, r1, r4, pc}
    9698:	0000f6dc 	.word	0x0000f6dc
    969c:	000095b9 	.word	0x000095b9

000096a0 <__sfp>:
    96a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    96a2:	4b1d      	ldr	r3, [pc, #116]	; (9718 <__sfp+0x78>)
    96a4:	1c06      	adds	r6, r0, #0
    96a6:	681d      	ldr	r5, [r3, #0]
    96a8:	69ab      	ldr	r3, [r5, #24]
    96aa:	2b00      	cmp	r3, #0
    96ac:	d102      	bne.n	96b4 <__sfp+0x14>
    96ae:	1c28      	adds	r0, r5, #0
    96b0:	f7ff ffc4 	bl	963c <__sinit>
    96b4:	3548      	adds	r5, #72	; 0x48
    96b6:	68ac      	ldr	r4, [r5, #8]
    96b8:	686b      	ldr	r3, [r5, #4]
    96ba:	3b01      	subs	r3, #1
    96bc:	d405      	bmi.n	96ca <__sfp+0x2a>
    96be:	220c      	movs	r2, #12
    96c0:	5ea7      	ldrsh	r7, [r4, r2]
    96c2:	2f00      	cmp	r7, #0
    96c4:	d010      	beq.n	96e8 <__sfp+0x48>
    96c6:	3468      	adds	r4, #104	; 0x68
    96c8:	e7f7      	b.n	96ba <__sfp+0x1a>
    96ca:	682b      	ldr	r3, [r5, #0]
    96cc:	2b00      	cmp	r3, #0
    96ce:	d106      	bne.n	96de <__sfp+0x3e>
    96d0:	1c30      	adds	r0, r6, #0
    96d2:	2104      	movs	r1, #4
    96d4:	f7ff ff9c 	bl	9610 <__sfmoreglue>
    96d8:	6028      	str	r0, [r5, #0]
    96da:	2800      	cmp	r0, #0
    96dc:	d001      	beq.n	96e2 <__sfp+0x42>
    96de:	682d      	ldr	r5, [r5, #0]
    96e0:	e7e9      	b.n	96b6 <__sfp+0x16>
    96e2:	230c      	movs	r3, #12
    96e4:	6033      	str	r3, [r6, #0]
    96e6:	e016      	b.n	9716 <__sfp+0x76>
    96e8:	2301      	movs	r3, #1
    96ea:	1c20      	adds	r0, r4, #0
    96ec:	425b      	negs	r3, r3
    96ee:	81e3      	strh	r3, [r4, #14]
    96f0:	3302      	adds	r3, #2
    96f2:	81a3      	strh	r3, [r4, #12]
    96f4:	6667      	str	r7, [r4, #100]	; 0x64
    96f6:	6027      	str	r7, [r4, #0]
    96f8:	60a7      	str	r7, [r4, #8]
    96fa:	6067      	str	r7, [r4, #4]
    96fc:	6127      	str	r7, [r4, #16]
    96fe:	6167      	str	r7, [r4, #20]
    9700:	61a7      	str	r7, [r4, #24]
    9702:	305c      	adds	r0, #92	; 0x5c
    9704:	1c39      	adds	r1, r7, #0
    9706:	2208      	movs	r2, #8
    9708:	f000 f9b8 	bl	9a7c <memset>
    970c:	1c20      	adds	r0, r4, #0
    970e:	6367      	str	r7, [r4, #52]	; 0x34
    9710:	63a7      	str	r7, [r4, #56]	; 0x38
    9712:	64a7      	str	r7, [r4, #72]	; 0x48
    9714:	64e7      	str	r7, [r4, #76]	; 0x4c
    9716:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9718:	0000f6dc 	.word	0x0000f6dc

0000971c <__sfp_lock_acquire>:
    971c:	4770      	bx	lr

0000971e <__sfp_lock_release>:
    971e:	4770      	bx	lr

00009720 <_fopen_r>:
    9720:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    9722:	1c0f      	adds	r7, r1, #0
    9724:	1c11      	adds	r1, r2, #0
    9726:	aa01      	add	r2, sp, #4
    9728:	1c05      	adds	r5, r0, #0
    972a:	f003 fc8f 	bl	d04c <__sflags>
    972e:	1e06      	subs	r6, r0, #0
    9730:	d101      	bne.n	9736 <_fopen_r+0x16>
    9732:	2400      	movs	r4, #0
    9734:	e027      	b.n	9786 <_fopen_r+0x66>
    9736:	1c28      	adds	r0, r5, #0
    9738:	f7ff ffb2 	bl	96a0 <__sfp>
    973c:	1e04      	subs	r4, r0, #0
    973e:	d0f8      	beq.n	9732 <_fopen_r+0x12>
    9740:	23db      	movs	r3, #219	; 0xdb
    9742:	1c28      	adds	r0, r5, #0
    9744:	1c39      	adds	r1, r7, #0
    9746:	9a01      	ldr	r2, [sp, #4]
    9748:	005b      	lsls	r3, r3, #1
    974a:	f001 fb1f 	bl	ad8c <_open_r>
    974e:	2800      	cmp	r0, #0
    9750:	da06      	bge.n	9760 <_fopen_r+0x40>
    9752:	2500      	movs	r5, #0
    9754:	f7ff ffe2 	bl	971c <__sfp_lock_acquire>
    9758:	81a5      	strh	r5, [r4, #12]
    975a:	f7ff ffe0 	bl	971e <__sfp_lock_release>
    975e:	e7e8      	b.n	9732 <_fopen_r+0x12>
    9760:	4b0a      	ldr	r3, [pc, #40]	; (978c <_fopen_r+0x6c>)
    9762:	81e0      	strh	r0, [r4, #14]
    9764:	6263      	str	r3, [r4, #36]	; 0x24
    9766:	4b0a      	ldr	r3, [pc, #40]	; (9790 <_fopen_r+0x70>)
    9768:	81a6      	strh	r6, [r4, #12]
    976a:	62a3      	str	r3, [r4, #40]	; 0x28
    976c:	4b09      	ldr	r3, [pc, #36]	; (9794 <_fopen_r+0x74>)
    976e:	6224      	str	r4, [r4, #32]
    9770:	62e3      	str	r3, [r4, #44]	; 0x2c
    9772:	4b09      	ldr	r3, [pc, #36]	; (9798 <_fopen_r+0x78>)
    9774:	6323      	str	r3, [r4, #48]	; 0x30
    9776:	05f3      	lsls	r3, r6, #23
    9778:	d505      	bpl.n	9786 <_fopen_r+0x66>
    977a:	1c28      	adds	r0, r5, #0
    977c:	1c21      	adds	r1, r4, #0
    977e:	2200      	movs	r2, #0
    9780:	2302      	movs	r3, #2
    9782:	f000 f817 	bl	97b4 <_fseek_r>
    9786:	1c20      	adds	r0, r4, #0
    9788:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    978a:	46c0      	nop			; (mov r8, r8)
    978c:	0000b121 	.word	0x0000b121
    9790:	0000b14d 	.word	0x0000b14d
    9794:	0000b185 	.word	0x0000b185
    9798:	0000b1b1 	.word	0x0000b1b1

0000979c <fopen>:
    979c:	b508      	push	{r3, lr}
    979e:	1c03      	adds	r3, r0, #0
    97a0:	1c0a      	adds	r2, r1, #0
    97a2:	4903      	ldr	r1, [pc, #12]	; (97b0 <fopen+0x14>)
    97a4:	6808      	ldr	r0, [r1, #0]
    97a6:	1c19      	adds	r1, r3, #0
    97a8:	f7ff ffba 	bl	9720 <_fopen_r>
    97ac:	bd08      	pop	{r3, pc}
    97ae:	46c0      	nop			; (mov r8, r8)
    97b0:	20000134 	.word	0x20000134

000097b4 <_fseek_r>:
    97b4:	b508      	push	{r3, lr}
    97b6:	f000 f801 	bl	97bc <_fseeko_r>
    97ba:	bd08      	pop	{r3, pc}

000097bc <_fseeko_r>:
    97bc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    97be:	1c05      	adds	r5, r0, #0
    97c0:	1c0c      	adds	r4, r1, #0
    97c2:	9201      	str	r2, [sp, #4]
    97c4:	1c1e      	adds	r6, r3, #0
    97c6:	2800      	cmp	r0, #0
    97c8:	d004      	beq.n	97d4 <_fseeko_r+0x18>
    97ca:	6983      	ldr	r3, [r0, #24]
    97cc:	2b00      	cmp	r3, #0
    97ce:	d101      	bne.n	97d4 <_fseeko_r+0x18>
    97d0:	f7ff ff34 	bl	963c <__sinit>
    97d4:	4b41      	ldr	r3, [pc, #260]	; (98dc <_fseeko_r+0x120>)
    97d6:	429c      	cmp	r4, r3
    97d8:	d101      	bne.n	97de <_fseeko_r+0x22>
    97da:	686c      	ldr	r4, [r5, #4]
    97dc:	e008      	b.n	97f0 <_fseeko_r+0x34>
    97de:	4b40      	ldr	r3, [pc, #256]	; (98e0 <_fseeko_r+0x124>)
    97e0:	429c      	cmp	r4, r3
    97e2:	d101      	bne.n	97e8 <_fseeko_r+0x2c>
    97e4:	68ac      	ldr	r4, [r5, #8]
    97e6:	e003      	b.n	97f0 <_fseeko_r+0x34>
    97e8:	4b3e      	ldr	r3, [pc, #248]	; (98e4 <_fseeko_r+0x128>)
    97ea:	429c      	cmp	r4, r3
    97ec:	d100      	bne.n	97f0 <_fseeko_r+0x34>
    97ee:	68ec      	ldr	r4, [r5, #12]
    97f0:	2284      	movs	r2, #132	; 0x84
    97f2:	89a3      	ldrh	r3, [r4, #12]
    97f4:	0052      	lsls	r2, r2, #1
    97f6:	4013      	ands	r3, r2
    97f8:	4293      	cmp	r3, r2
    97fa:	d103      	bne.n	9804 <_fseeko_r+0x48>
    97fc:	1c28      	adds	r0, r5, #0
    97fe:	1c21      	adds	r1, r4, #0
    9800:	f7ff fe9a 	bl	9538 <_fflush_r>
    9804:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    9806:	9300      	str	r3, [sp, #0]
    9808:	2b00      	cmp	r3, #0
    980a:	d101      	bne.n	9810 <_fseeko_r+0x54>
    980c:	331d      	adds	r3, #29
    980e:	e031      	b.n	9874 <_fseeko_r+0xb8>
    9810:	2e01      	cmp	r6, #1
    9812:	d005      	beq.n	9820 <_fseeko_r+0x64>
    9814:	2e02      	cmp	r6, #2
    9816:	d031      	beq.n	987c <_fseeko_r+0xc0>
    9818:	2316      	movs	r3, #22
    981a:	2e00      	cmp	r6, #0
    981c:	d12a      	bne.n	9874 <_fseeko_r+0xb8>
    981e:	e02d      	b.n	987c <_fseeko_r+0xc0>
    9820:	1c28      	adds	r0, r5, #0
    9822:	1c21      	adds	r1, r4, #0
    9824:	f7ff fe88 	bl	9538 <_fflush_r>
    9828:	2380      	movs	r3, #128	; 0x80
    982a:	89a2      	ldrh	r2, [r4, #12]
    982c:	015b      	lsls	r3, r3, #5
    982e:	401a      	ands	r2, r3
    9830:	d001      	beq.n	9836 <_fseeko_r+0x7a>
    9832:	6d60      	ldr	r0, [r4, #84]	; 0x54
    9834:	e006      	b.n	9844 <_fseeko_r+0x88>
    9836:	1c33      	adds	r3, r6, #0
    9838:	1c28      	adds	r0, r5, #0
    983a:	6a21      	ldr	r1, [r4, #32]
    983c:	9e00      	ldr	r6, [sp, #0]
    983e:	47b0      	blx	r6
    9840:	1c43      	adds	r3, r0, #1
    9842:	d018      	beq.n	9876 <_fseeko_r+0xba>
    9844:	89a3      	ldrh	r3, [r4, #12]
    9846:	075a      	lsls	r2, r3, #29
    9848:	d507      	bpl.n	985a <_fseeko_r+0x9e>
    984a:	6863      	ldr	r3, [r4, #4]
    984c:	1ac0      	subs	r0, r0, r3
    984e:	6b63      	ldr	r3, [r4, #52]	; 0x34
    9850:	2b00      	cmp	r3, #0
    9852:	d00a      	beq.n	986a <_fseeko_r+0xae>
    9854:	6c23      	ldr	r3, [r4, #64]	; 0x40
    9856:	1ac0      	subs	r0, r0, r3
    9858:	e007      	b.n	986a <_fseeko_r+0xae>
    985a:	071b      	lsls	r3, r3, #28
    985c:	d505      	bpl.n	986a <_fseeko_r+0xae>
    985e:	6823      	ldr	r3, [r4, #0]
    9860:	2b00      	cmp	r3, #0
    9862:	d002      	beq.n	986a <_fseeko_r+0xae>
    9864:	6922      	ldr	r2, [r4, #16]
    9866:	1a9b      	subs	r3, r3, r2
    9868:	18c0      	adds	r0, r0, r3
    986a:	9b01      	ldr	r3, [sp, #4]
    986c:	2600      	movs	r6, #0
    986e:	181b      	adds	r3, r3, r0
    9870:	9301      	str	r3, [sp, #4]
    9872:	e003      	b.n	987c <_fseeko_r+0xc0>
    9874:	602b      	str	r3, [r5, #0]
    9876:	2701      	movs	r7, #1
    9878:	427f      	negs	r7, r7
    987a:	e02d      	b.n	98d8 <_fseeko_r+0x11c>
    987c:	6923      	ldr	r3, [r4, #16]
    987e:	2b00      	cmp	r3, #0
    9880:	d103      	bne.n	988a <_fseeko_r+0xce>
    9882:	1c28      	adds	r0, r5, #0
    9884:	1c21      	adds	r1, r4, #0
    9886:	f000 f879 	bl	997c <__smakebuf_r>
    988a:	1c28      	adds	r0, r5, #0
    988c:	1c21      	adds	r1, r4, #0
    988e:	f7ff fe53 	bl	9538 <_fflush_r>
    9892:	1e07      	subs	r7, r0, #0
    9894:	d1ef      	bne.n	9876 <_fseeko_r+0xba>
    9896:	1c33      	adds	r3, r6, #0
    9898:	1c28      	adds	r0, r5, #0
    989a:	6a21      	ldr	r1, [r4, #32]
    989c:	9a01      	ldr	r2, [sp, #4]
    989e:	9e00      	ldr	r6, [sp, #0]
    98a0:	47b0      	blx	r6
    98a2:	1c43      	adds	r3, r0, #1
    98a4:	d0e7      	beq.n	9876 <_fseeko_r+0xba>
    98a6:	6b61      	ldr	r1, [r4, #52]	; 0x34
    98a8:	2900      	cmp	r1, #0
    98aa:	d008      	beq.n	98be <_fseeko_r+0x102>
    98ac:	1c23      	adds	r3, r4, #0
    98ae:	3344      	adds	r3, #68	; 0x44
    98b0:	4299      	cmp	r1, r3
    98b2:	d002      	beq.n	98ba <_fseeko_r+0xfe>
    98b4:	1c28      	adds	r0, r5, #0
    98b6:	f000 f8e9 	bl	9a8c <_free_r>
    98ba:	2300      	movs	r3, #0
    98bc:	6363      	str	r3, [r4, #52]	; 0x34
    98be:	2100      	movs	r1, #0
    98c0:	1c20      	adds	r0, r4, #0
    98c2:	6923      	ldr	r3, [r4, #16]
    98c4:	89a2      	ldrh	r2, [r4, #12]
    98c6:	6023      	str	r3, [r4, #0]
    98c8:	4b07      	ldr	r3, [pc, #28]	; (98e8 <_fseeko_r+0x12c>)
    98ca:	6061      	str	r1, [r4, #4]
    98cc:	4013      	ands	r3, r2
    98ce:	81a3      	strh	r3, [r4, #12]
    98d0:	305c      	adds	r0, #92	; 0x5c
    98d2:	2208      	movs	r2, #8
    98d4:	f000 f8d2 	bl	9a7c <memset>
    98d8:	1c38      	adds	r0, r7, #0
    98da:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    98dc:	0000f678 	.word	0x0000f678
    98e0:	0000f698 	.word	0x0000f698
    98e4:	0000f6b8 	.word	0x0000f6b8
    98e8:	fffff7df 	.word	0xfffff7df

000098ec <_fwalk_reent>:
    98ec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    98ee:	1c04      	adds	r4, r0, #0
    98f0:	1c07      	adds	r7, r0, #0
    98f2:	2600      	movs	r6, #0
    98f4:	9101      	str	r1, [sp, #4]
    98f6:	3448      	adds	r4, #72	; 0x48
    98f8:	2c00      	cmp	r4, #0
    98fa:	d016      	beq.n	992a <_fwalk_reent+0x3e>
    98fc:	6863      	ldr	r3, [r4, #4]
    98fe:	68a5      	ldr	r5, [r4, #8]
    9900:	9300      	str	r3, [sp, #0]
    9902:	9b00      	ldr	r3, [sp, #0]
    9904:	3b01      	subs	r3, #1
    9906:	9300      	str	r3, [sp, #0]
    9908:	d40d      	bmi.n	9926 <_fwalk_reent+0x3a>
    990a:	89ab      	ldrh	r3, [r5, #12]
    990c:	2b01      	cmp	r3, #1
    990e:	d908      	bls.n	9922 <_fwalk_reent+0x36>
    9910:	220e      	movs	r2, #14
    9912:	5eab      	ldrsh	r3, [r5, r2]
    9914:	3301      	adds	r3, #1
    9916:	d004      	beq.n	9922 <_fwalk_reent+0x36>
    9918:	1c38      	adds	r0, r7, #0
    991a:	1c29      	adds	r1, r5, #0
    991c:	9b01      	ldr	r3, [sp, #4]
    991e:	4798      	blx	r3
    9920:	4306      	orrs	r6, r0
    9922:	3568      	adds	r5, #104	; 0x68
    9924:	e7ed      	b.n	9902 <_fwalk_reent+0x16>
    9926:	6824      	ldr	r4, [r4, #0]
    9928:	e7e6      	b.n	98f8 <_fwalk_reent+0xc>
    992a:	1c30      	adds	r0, r6, #0
    992c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

00009930 <__libc_init_array>:
    9930:	4b0e      	ldr	r3, [pc, #56]	; (996c <__libc_init_array+0x3c>)
    9932:	b570      	push	{r4, r5, r6, lr}
    9934:	2500      	movs	r5, #0
    9936:	1c1e      	adds	r6, r3, #0
    9938:	4c0d      	ldr	r4, [pc, #52]	; (9970 <__libc_init_array+0x40>)
    993a:	1ae4      	subs	r4, r4, r3
    993c:	10a4      	asrs	r4, r4, #2
    993e:	42a5      	cmp	r5, r4
    9940:	d004      	beq.n	994c <__libc_init_array+0x1c>
    9942:	00ab      	lsls	r3, r5, #2
    9944:	58f3      	ldr	r3, [r6, r3]
    9946:	4798      	blx	r3
    9948:	3501      	adds	r5, #1
    994a:	e7f8      	b.n	993e <__libc_init_array+0xe>
    994c:	f006 f836 	bl	f9bc <_init>
    9950:	4b08      	ldr	r3, [pc, #32]	; (9974 <__libc_init_array+0x44>)
    9952:	2500      	movs	r5, #0
    9954:	1c1e      	adds	r6, r3, #0
    9956:	4c08      	ldr	r4, [pc, #32]	; (9978 <__libc_init_array+0x48>)
    9958:	1ae4      	subs	r4, r4, r3
    995a:	10a4      	asrs	r4, r4, #2
    995c:	42a5      	cmp	r5, r4
    995e:	d004      	beq.n	996a <__libc_init_array+0x3a>
    9960:	00ab      	lsls	r3, r5, #2
    9962:	58f3      	ldr	r3, [r6, r3]
    9964:	4798      	blx	r3
    9966:	3501      	adds	r5, #1
    9968:	e7f8      	b.n	995c <__libc_init_array+0x2c>
    996a:	bd70      	pop	{r4, r5, r6, pc}
    996c:	0000f9c8 	.word	0x0000f9c8
    9970:	0000f9c8 	.word	0x0000f9c8
    9974:	0000f9c8 	.word	0x0000f9c8
    9978:	0000f9d8 	.word	0x0000f9d8

0000997c <__smakebuf_r>:
    997c:	b5f0      	push	{r4, r5, r6, r7, lr}
    997e:	898b      	ldrh	r3, [r1, #12]
    9980:	b091      	sub	sp, #68	; 0x44
    9982:	079b      	lsls	r3, r3, #30
    9984:	d506      	bpl.n	9994 <__smakebuf_r+0x18>
    9986:	1c0b      	adds	r3, r1, #0
    9988:	3347      	adds	r3, #71	; 0x47
    998a:	600b      	str	r3, [r1, #0]
    998c:	610b      	str	r3, [r1, #16]
    998e:	2301      	movs	r3, #1
    9990:	614b      	str	r3, [r1, #20]
    9992:	e045      	b.n	9a20 <__smakebuf_r+0xa4>
    9994:	1c0c      	adds	r4, r1, #0
    9996:	230e      	movs	r3, #14
    9998:	5ec9      	ldrsh	r1, [r1, r3]
    999a:	1c06      	adds	r6, r0, #0
    999c:	2900      	cmp	r1, #0
    999e:	da04      	bge.n	99aa <__smakebuf_r+0x2e>
    99a0:	2380      	movs	r3, #128	; 0x80
    99a2:	89a5      	ldrh	r5, [r4, #12]
    99a4:	401d      	ands	r5, r3
    99a6:	d110      	bne.n	99ca <__smakebuf_r+0x4e>
    99a8:	e00c      	b.n	99c4 <__smakebuf_r+0x48>
    99aa:	aa01      	add	r2, sp, #4
    99ac:	f003 fb86 	bl	d0bc <_fstat_r>
    99b0:	2800      	cmp	r0, #0
    99b2:	dbf5      	blt.n	99a0 <__smakebuf_r+0x24>
    99b4:	23f0      	movs	r3, #240	; 0xf0
    99b6:	9d02      	ldr	r5, [sp, #8]
    99b8:	021b      	lsls	r3, r3, #8
    99ba:	401d      	ands	r5, r3
    99bc:	4b19      	ldr	r3, [pc, #100]	; (9a24 <__smakebuf_r+0xa8>)
    99be:	18ed      	adds	r5, r5, r3
    99c0:	426b      	negs	r3, r5
    99c2:	415d      	adcs	r5, r3
    99c4:	2780      	movs	r7, #128	; 0x80
    99c6:	00ff      	lsls	r7, r7, #3
    99c8:	e001      	b.n	99ce <__smakebuf_r+0x52>
    99ca:	2500      	movs	r5, #0
    99cc:	2740      	movs	r7, #64	; 0x40
    99ce:	1c30      	adds	r0, r6, #0
    99d0:	1c39      	adds	r1, r7, #0
    99d2:	f000 f8a1 	bl	9b18 <_malloc_r>
    99d6:	2800      	cmp	r0, #0
    99d8:	d10c      	bne.n	99f4 <__smakebuf_r+0x78>
    99da:	89a3      	ldrh	r3, [r4, #12]
    99dc:	059a      	lsls	r2, r3, #22
    99de:	d41f      	bmi.n	9a20 <__smakebuf_r+0xa4>
    99e0:	2202      	movs	r2, #2
    99e2:	4313      	orrs	r3, r2
    99e4:	81a3      	strh	r3, [r4, #12]
    99e6:	1c23      	adds	r3, r4, #0
    99e8:	3347      	adds	r3, #71	; 0x47
    99ea:	6023      	str	r3, [r4, #0]
    99ec:	6123      	str	r3, [r4, #16]
    99ee:	2301      	movs	r3, #1
    99f0:	6163      	str	r3, [r4, #20]
    99f2:	e015      	b.n	9a20 <__smakebuf_r+0xa4>
    99f4:	2280      	movs	r2, #128	; 0x80
    99f6:	4b0c      	ldr	r3, [pc, #48]	; (9a28 <__smakebuf_r+0xac>)
    99f8:	62b3      	str	r3, [r6, #40]	; 0x28
    99fa:	89a3      	ldrh	r3, [r4, #12]
    99fc:	6020      	str	r0, [r4, #0]
    99fe:	4313      	orrs	r3, r2
    9a00:	81a3      	strh	r3, [r4, #12]
    9a02:	6120      	str	r0, [r4, #16]
    9a04:	6167      	str	r7, [r4, #20]
    9a06:	2d00      	cmp	r5, #0
    9a08:	d00a      	beq.n	9a20 <__smakebuf_r+0xa4>
    9a0a:	230e      	movs	r3, #14
    9a0c:	5ee1      	ldrsh	r1, [r4, r3]
    9a0e:	1c30      	adds	r0, r6, #0
    9a10:	f003 fe7e 	bl	d710 <_isatty_r>
    9a14:	2800      	cmp	r0, #0
    9a16:	d003      	beq.n	9a20 <__smakebuf_r+0xa4>
    9a18:	2201      	movs	r2, #1
    9a1a:	89a3      	ldrh	r3, [r4, #12]
    9a1c:	4313      	orrs	r3, r2
    9a1e:	81a3      	strh	r3, [r4, #12]
    9a20:	b011      	add	sp, #68	; 0x44
    9a22:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9a24:	ffffe000 	.word	0xffffe000
    9a28:	000095b9 	.word	0x000095b9

00009a2c <malloc>:
    9a2c:	b508      	push	{r3, lr}
    9a2e:	4b03      	ldr	r3, [pc, #12]	; (9a3c <malloc+0x10>)
    9a30:	1c01      	adds	r1, r0, #0
    9a32:	6818      	ldr	r0, [r3, #0]
    9a34:	f000 f870 	bl	9b18 <_malloc_r>
    9a38:	bd08      	pop	{r3, pc}
    9a3a:	46c0      	nop			; (mov r8, r8)
    9a3c:	20000134 	.word	0x20000134

00009a40 <free>:
    9a40:	b508      	push	{r3, lr}
    9a42:	4b03      	ldr	r3, [pc, #12]	; (9a50 <free+0x10>)
    9a44:	1c01      	adds	r1, r0, #0
    9a46:	6818      	ldr	r0, [r3, #0]
    9a48:	f000 f820 	bl	9a8c <_free_r>
    9a4c:	bd08      	pop	{r3, pc}
    9a4e:	46c0      	nop			; (mov r8, r8)
    9a50:	20000134 	.word	0x20000134

00009a54 <memchr>:
    9a54:	b2c9      	uxtb	r1, r1
    9a56:	1882      	adds	r2, r0, r2
    9a58:	4290      	cmp	r0, r2
    9a5a:	d004      	beq.n	9a66 <memchr+0x12>
    9a5c:	7803      	ldrb	r3, [r0, #0]
    9a5e:	428b      	cmp	r3, r1
    9a60:	d002      	beq.n	9a68 <memchr+0x14>
    9a62:	3001      	adds	r0, #1
    9a64:	e7f8      	b.n	9a58 <memchr+0x4>
    9a66:	2000      	movs	r0, #0
    9a68:	4770      	bx	lr

00009a6a <memcpy>:
    9a6a:	2300      	movs	r3, #0
    9a6c:	b510      	push	{r4, lr}
    9a6e:	4293      	cmp	r3, r2
    9a70:	d003      	beq.n	9a7a <memcpy+0x10>
    9a72:	5ccc      	ldrb	r4, [r1, r3]
    9a74:	54c4      	strb	r4, [r0, r3]
    9a76:	3301      	adds	r3, #1
    9a78:	e7f9      	b.n	9a6e <memcpy+0x4>
    9a7a:	bd10      	pop	{r4, pc}

00009a7c <memset>:
    9a7c:	1c03      	adds	r3, r0, #0
    9a7e:	1882      	adds	r2, r0, r2
    9a80:	4293      	cmp	r3, r2
    9a82:	d002      	beq.n	9a8a <memset+0xe>
    9a84:	7019      	strb	r1, [r3, #0]
    9a86:	3301      	adds	r3, #1
    9a88:	e7fa      	b.n	9a80 <memset+0x4>
    9a8a:	4770      	bx	lr

00009a8c <_free_r>:
    9a8c:	b530      	push	{r4, r5, lr}
    9a8e:	2900      	cmp	r1, #0
    9a90:	d03e      	beq.n	9b10 <_free_r+0x84>
    9a92:	3904      	subs	r1, #4
    9a94:	680b      	ldr	r3, [r1, #0]
    9a96:	2b00      	cmp	r3, #0
    9a98:	da00      	bge.n	9a9c <_free_r+0x10>
    9a9a:	18c9      	adds	r1, r1, r3
    9a9c:	4a1d      	ldr	r2, [pc, #116]	; (9b14 <_free_r+0x88>)
    9a9e:	6813      	ldr	r3, [r2, #0]
    9aa0:	1c14      	adds	r4, r2, #0
    9aa2:	2b00      	cmp	r3, #0
    9aa4:	d102      	bne.n	9aac <_free_r+0x20>
    9aa6:	604b      	str	r3, [r1, #4]
    9aa8:	6011      	str	r1, [r2, #0]
    9aaa:	e031      	b.n	9b10 <_free_r+0x84>
    9aac:	4299      	cmp	r1, r3
    9aae:	d20d      	bcs.n	9acc <_free_r+0x40>
    9ab0:	6808      	ldr	r0, [r1, #0]
    9ab2:	180a      	adds	r2, r1, r0
    9ab4:	429a      	cmp	r2, r3
    9ab6:	d103      	bne.n	9ac0 <_free_r+0x34>
    9ab8:	6813      	ldr	r3, [r2, #0]
    9aba:	18c3      	adds	r3, r0, r3
    9abc:	600b      	str	r3, [r1, #0]
    9abe:	6853      	ldr	r3, [r2, #4]
    9ac0:	604b      	str	r3, [r1, #4]
    9ac2:	6021      	str	r1, [r4, #0]
    9ac4:	e024      	b.n	9b10 <_free_r+0x84>
    9ac6:	428a      	cmp	r2, r1
    9ac8:	d803      	bhi.n	9ad2 <_free_r+0x46>
    9aca:	1c13      	adds	r3, r2, #0
    9acc:	685a      	ldr	r2, [r3, #4]
    9ace:	2a00      	cmp	r2, #0
    9ad0:	d1f9      	bne.n	9ac6 <_free_r+0x3a>
    9ad2:	681d      	ldr	r5, [r3, #0]
    9ad4:	195c      	adds	r4, r3, r5
    9ad6:	428c      	cmp	r4, r1
    9ad8:	d10b      	bne.n	9af2 <_free_r+0x66>
    9ada:	6809      	ldr	r1, [r1, #0]
    9adc:	1869      	adds	r1, r5, r1
    9ade:	1858      	adds	r0, r3, r1
    9ae0:	6019      	str	r1, [r3, #0]
    9ae2:	4290      	cmp	r0, r2
    9ae4:	d114      	bne.n	9b10 <_free_r+0x84>
    9ae6:	6810      	ldr	r0, [r2, #0]
    9ae8:	6852      	ldr	r2, [r2, #4]
    9aea:	1809      	adds	r1, r1, r0
    9aec:	6019      	str	r1, [r3, #0]
    9aee:	605a      	str	r2, [r3, #4]
    9af0:	e00e      	b.n	9b10 <_free_r+0x84>
    9af2:	428c      	cmp	r4, r1
    9af4:	d902      	bls.n	9afc <_free_r+0x70>
    9af6:	230c      	movs	r3, #12
    9af8:	6003      	str	r3, [r0, #0]
    9afa:	e009      	b.n	9b10 <_free_r+0x84>
    9afc:	6808      	ldr	r0, [r1, #0]
    9afe:	180c      	adds	r4, r1, r0
    9b00:	4294      	cmp	r4, r2
    9b02:	d103      	bne.n	9b0c <_free_r+0x80>
    9b04:	6814      	ldr	r4, [r2, #0]
    9b06:	6852      	ldr	r2, [r2, #4]
    9b08:	1900      	adds	r0, r0, r4
    9b0a:	6008      	str	r0, [r1, #0]
    9b0c:	604a      	str	r2, [r1, #4]
    9b0e:	6059      	str	r1, [r3, #4]
    9b10:	bd30      	pop	{r4, r5, pc}
    9b12:	46c0      	nop			; (mov r8, r8)
    9b14:	200045f8 	.word	0x200045f8

00009b18 <_malloc_r>:
    9b18:	2303      	movs	r3, #3
    9b1a:	b570      	push	{r4, r5, r6, lr}
    9b1c:	1ccc      	adds	r4, r1, #3
    9b1e:	439c      	bics	r4, r3
    9b20:	3408      	adds	r4, #8
    9b22:	1c05      	adds	r5, r0, #0
    9b24:	2c0c      	cmp	r4, #12
    9b26:	d201      	bcs.n	9b2c <_malloc_r+0x14>
    9b28:	240c      	movs	r4, #12
    9b2a:	e005      	b.n	9b38 <_malloc_r+0x20>
    9b2c:	2c00      	cmp	r4, #0
    9b2e:	da03      	bge.n	9b38 <_malloc_r+0x20>
    9b30:	230c      	movs	r3, #12
    9b32:	2000      	movs	r0, #0
    9b34:	602b      	str	r3, [r5, #0]
    9b36:	e042      	b.n	9bbe <_malloc_r+0xa6>
    9b38:	428c      	cmp	r4, r1
    9b3a:	d3f9      	bcc.n	9b30 <_malloc_r+0x18>
    9b3c:	4a20      	ldr	r2, [pc, #128]	; (9bc0 <_malloc_r+0xa8>)
    9b3e:	6813      	ldr	r3, [r2, #0]
    9b40:	1c10      	adds	r0, r2, #0
    9b42:	1c19      	adds	r1, r3, #0
    9b44:	2900      	cmp	r1, #0
    9b46:	d013      	beq.n	9b70 <_malloc_r+0x58>
    9b48:	680a      	ldr	r2, [r1, #0]
    9b4a:	1b12      	subs	r2, r2, r4
    9b4c:	d40d      	bmi.n	9b6a <_malloc_r+0x52>
    9b4e:	2a0b      	cmp	r2, #11
    9b50:	d902      	bls.n	9b58 <_malloc_r+0x40>
    9b52:	600a      	str	r2, [r1, #0]
    9b54:	188b      	adds	r3, r1, r2
    9b56:	e01f      	b.n	9b98 <_malloc_r+0x80>
    9b58:	428b      	cmp	r3, r1
    9b5a:	d102      	bne.n	9b62 <_malloc_r+0x4a>
    9b5c:	685a      	ldr	r2, [r3, #4]
    9b5e:	6002      	str	r2, [r0, #0]
    9b60:	e01b      	b.n	9b9a <_malloc_r+0x82>
    9b62:	684a      	ldr	r2, [r1, #4]
    9b64:	605a      	str	r2, [r3, #4]
    9b66:	1c0b      	adds	r3, r1, #0
    9b68:	e017      	b.n	9b9a <_malloc_r+0x82>
    9b6a:	1c0b      	adds	r3, r1, #0
    9b6c:	6849      	ldr	r1, [r1, #4]
    9b6e:	e7e9      	b.n	9b44 <_malloc_r+0x2c>
    9b70:	4e14      	ldr	r6, [pc, #80]	; (9bc4 <_malloc_r+0xac>)
    9b72:	6833      	ldr	r3, [r6, #0]
    9b74:	2b00      	cmp	r3, #0
    9b76:	d103      	bne.n	9b80 <_malloc_r+0x68>
    9b78:	1c28      	adds	r0, r5, #0
    9b7a:	f001 f9af 	bl	aedc <_sbrk_r>
    9b7e:	6030      	str	r0, [r6, #0]
    9b80:	1c28      	adds	r0, r5, #0
    9b82:	1c21      	adds	r1, r4, #0
    9b84:	f001 f9aa 	bl	aedc <_sbrk_r>
    9b88:	1c03      	adds	r3, r0, #0
    9b8a:	1c42      	adds	r2, r0, #1
    9b8c:	d0d0      	beq.n	9b30 <_malloc_r+0x18>
    9b8e:	2203      	movs	r2, #3
    9b90:	1cc6      	adds	r6, r0, #3
    9b92:	4396      	bics	r6, r2
    9b94:	4286      	cmp	r6, r0
    9b96:	d10a      	bne.n	9bae <_malloc_r+0x96>
    9b98:	601c      	str	r4, [r3, #0]
    9b9a:	1c18      	adds	r0, r3, #0
    9b9c:	2107      	movs	r1, #7
    9b9e:	300b      	adds	r0, #11
    9ba0:	1d1a      	adds	r2, r3, #4
    9ba2:	4388      	bics	r0, r1
    9ba4:	1a82      	subs	r2, r0, r2
    9ba6:	d00a      	beq.n	9bbe <_malloc_r+0xa6>
    9ba8:	4251      	negs	r1, r2
    9baa:	5099      	str	r1, [r3, r2]
    9bac:	e007      	b.n	9bbe <_malloc_r+0xa6>
    9bae:	1a31      	subs	r1, r6, r0
    9bb0:	1c28      	adds	r0, r5, #0
    9bb2:	f001 f993 	bl	aedc <_sbrk_r>
    9bb6:	1c43      	adds	r3, r0, #1
    9bb8:	d0ba      	beq.n	9b30 <_malloc_r+0x18>
    9bba:	1c33      	adds	r3, r6, #0
    9bbc:	e7ec      	b.n	9b98 <_malloc_r+0x80>
    9bbe:	bd70      	pop	{r4, r5, r6, pc}
    9bc0:	200045f8 	.word	0x200045f8
    9bc4:	200045f4 	.word	0x200045f4

00009bc8 <__sfputc_r>:
    9bc8:	6893      	ldr	r3, [r2, #8]
    9bca:	b510      	push	{r4, lr}
    9bcc:	3b01      	subs	r3, #1
    9bce:	6093      	str	r3, [r2, #8]
    9bd0:	2b00      	cmp	r3, #0
    9bd2:	da05      	bge.n	9be0 <__sfputc_r+0x18>
    9bd4:	6994      	ldr	r4, [r2, #24]
    9bd6:	42a3      	cmp	r3, r4
    9bd8:	db08      	blt.n	9bec <__sfputc_r+0x24>
    9bda:	b2cb      	uxtb	r3, r1
    9bdc:	2b0a      	cmp	r3, #10
    9bde:	d005      	beq.n	9bec <__sfputc_r+0x24>
    9be0:	6813      	ldr	r3, [r2, #0]
    9be2:	1c58      	adds	r0, r3, #1
    9be4:	6010      	str	r0, [r2, #0]
    9be6:	7019      	strb	r1, [r3, #0]
    9be8:	b2c8      	uxtb	r0, r1
    9bea:	e001      	b.n	9bf0 <__sfputc_r+0x28>
    9bec:	f002 fab4 	bl	c158 <__swbuf_r>
    9bf0:	bd10      	pop	{r4, pc}

00009bf2 <__sfputs_r>:
    9bf2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9bf4:	1c06      	adds	r6, r0, #0
    9bf6:	1c0f      	adds	r7, r1, #0
    9bf8:	1c14      	adds	r4, r2, #0
    9bfa:	18d5      	adds	r5, r2, r3
    9bfc:	42ac      	cmp	r4, r5
    9bfe:	d008      	beq.n	9c12 <__sfputs_r+0x20>
    9c00:	7821      	ldrb	r1, [r4, #0]
    9c02:	1c30      	adds	r0, r6, #0
    9c04:	1c3a      	adds	r2, r7, #0
    9c06:	f7ff ffdf 	bl	9bc8 <__sfputc_r>
    9c0a:	3401      	adds	r4, #1
    9c0c:	1c43      	adds	r3, r0, #1
    9c0e:	d1f5      	bne.n	9bfc <__sfputs_r+0xa>
    9c10:	e000      	b.n	9c14 <__sfputs_r+0x22>
    9c12:	2000      	movs	r0, #0
    9c14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

00009c18 <_vfiprintf_r>:
    9c18:	b5f0      	push	{r4, r5, r6, r7, lr}
    9c1a:	b09f      	sub	sp, #124	; 0x7c
    9c1c:	1c06      	adds	r6, r0, #0
    9c1e:	1c0f      	adds	r7, r1, #0
    9c20:	9202      	str	r2, [sp, #8]
    9c22:	9305      	str	r3, [sp, #20]
    9c24:	2800      	cmp	r0, #0
    9c26:	d004      	beq.n	9c32 <_vfiprintf_r+0x1a>
    9c28:	6983      	ldr	r3, [r0, #24]
    9c2a:	2b00      	cmp	r3, #0
    9c2c:	d101      	bne.n	9c32 <_vfiprintf_r+0x1a>
    9c2e:	f7ff fd05 	bl	963c <__sinit>
    9c32:	4b79      	ldr	r3, [pc, #484]	; (9e18 <_vfiprintf_r+0x200>)
    9c34:	429f      	cmp	r7, r3
    9c36:	d101      	bne.n	9c3c <_vfiprintf_r+0x24>
    9c38:	6877      	ldr	r7, [r6, #4]
    9c3a:	e008      	b.n	9c4e <_vfiprintf_r+0x36>
    9c3c:	4b77      	ldr	r3, [pc, #476]	; (9e1c <_vfiprintf_r+0x204>)
    9c3e:	429f      	cmp	r7, r3
    9c40:	d101      	bne.n	9c46 <_vfiprintf_r+0x2e>
    9c42:	68b7      	ldr	r7, [r6, #8]
    9c44:	e003      	b.n	9c4e <_vfiprintf_r+0x36>
    9c46:	4b76      	ldr	r3, [pc, #472]	; (9e20 <_vfiprintf_r+0x208>)
    9c48:	429f      	cmp	r7, r3
    9c4a:	d100      	bne.n	9c4e <_vfiprintf_r+0x36>
    9c4c:	68f7      	ldr	r7, [r6, #12]
    9c4e:	89bb      	ldrh	r3, [r7, #12]
    9c50:	071b      	lsls	r3, r3, #28
    9c52:	d50a      	bpl.n	9c6a <_vfiprintf_r+0x52>
    9c54:	693b      	ldr	r3, [r7, #16]
    9c56:	2b00      	cmp	r3, #0
    9c58:	d007      	beq.n	9c6a <_vfiprintf_r+0x52>
    9c5a:	2300      	movs	r3, #0
    9c5c:	ad06      	add	r5, sp, #24
    9c5e:	616b      	str	r3, [r5, #20]
    9c60:	3320      	adds	r3, #32
    9c62:	766b      	strb	r3, [r5, #25]
    9c64:	3310      	adds	r3, #16
    9c66:	76ab      	strb	r3, [r5, #26]
    9c68:	e03d      	b.n	9ce6 <_vfiprintf_r+0xce>
    9c6a:	1c30      	adds	r0, r6, #0
    9c6c:	1c39      	adds	r1, r7, #0
    9c6e:	f002 fadf 	bl	c230 <__swsetup_r>
    9c72:	2800      	cmp	r0, #0
    9c74:	d0f1      	beq.n	9c5a <_vfiprintf_r+0x42>
    9c76:	2001      	movs	r0, #1
    9c78:	4240      	negs	r0, r0
    9c7a:	e0ca      	b.n	9e12 <_vfiprintf_r+0x1fa>
    9c7c:	9a05      	ldr	r2, [sp, #20]
    9c7e:	1d11      	adds	r1, r2, #4
    9c80:	6812      	ldr	r2, [r2, #0]
    9c82:	9105      	str	r1, [sp, #20]
    9c84:	2a00      	cmp	r2, #0
    9c86:	db7e      	blt.n	9d86 <_vfiprintf_r+0x16e>
    9c88:	9209      	str	r2, [sp, #36]	; 0x24
    9c8a:	3401      	adds	r4, #1
    9c8c:	7823      	ldrb	r3, [r4, #0]
    9c8e:	2b2e      	cmp	r3, #46	; 0x2e
    9c90:	d100      	bne.n	9c94 <_vfiprintf_r+0x7c>
    9c92:	e089      	b.n	9da8 <_vfiprintf_r+0x190>
    9c94:	7821      	ldrb	r1, [r4, #0]
    9c96:	4863      	ldr	r0, [pc, #396]	; (9e24 <_vfiprintf_r+0x20c>)
    9c98:	2203      	movs	r2, #3
    9c9a:	f7ff fedb 	bl	9a54 <memchr>
    9c9e:	2800      	cmp	r0, #0
    9ca0:	d008      	beq.n	9cb4 <_vfiprintf_r+0x9c>
    9ca2:	4b60      	ldr	r3, [pc, #384]	; (9e24 <_vfiprintf_r+0x20c>)
    9ca4:	3401      	adds	r4, #1
    9ca6:	1ac0      	subs	r0, r0, r3
    9ca8:	2340      	movs	r3, #64	; 0x40
    9caa:	4083      	lsls	r3, r0
    9cac:	1c18      	adds	r0, r3, #0
    9cae:	682b      	ldr	r3, [r5, #0]
    9cb0:	4318      	orrs	r0, r3
    9cb2:	6028      	str	r0, [r5, #0]
    9cb4:	7821      	ldrb	r1, [r4, #0]
    9cb6:	1c63      	adds	r3, r4, #1
    9cb8:	485b      	ldr	r0, [pc, #364]	; (9e28 <_vfiprintf_r+0x210>)
    9cba:	2206      	movs	r2, #6
    9cbc:	9302      	str	r3, [sp, #8]
    9cbe:	7629      	strb	r1, [r5, #24]
    9cc0:	f7ff fec8 	bl	9a54 <memchr>
    9cc4:	2800      	cmp	r0, #0
    9cc6:	d100      	bne.n	9cca <_vfiprintf_r+0xb2>
    9cc8:	e091      	b.n	9dee <_vfiprintf_r+0x1d6>
    9cca:	4b58      	ldr	r3, [pc, #352]	; (9e2c <_vfiprintf_r+0x214>)
    9ccc:	2b00      	cmp	r3, #0
    9cce:	d000      	beq.n	9cd2 <_vfiprintf_r+0xba>
    9cd0:	e084      	b.n	9ddc <_vfiprintf_r+0x1c4>
    9cd2:	2207      	movs	r2, #7
    9cd4:	9b05      	ldr	r3, [sp, #20]
    9cd6:	3307      	adds	r3, #7
    9cd8:	4393      	bics	r3, r2
    9cda:	3308      	adds	r3, #8
    9cdc:	9305      	str	r3, [sp, #20]
    9cde:	696b      	ldr	r3, [r5, #20]
    9ce0:	9a03      	ldr	r2, [sp, #12]
    9ce2:	189b      	adds	r3, r3, r2
    9ce4:	616b      	str	r3, [r5, #20]
    9ce6:	9c02      	ldr	r4, [sp, #8]
    9ce8:	7823      	ldrb	r3, [r4, #0]
    9cea:	2b00      	cmp	r3, #0
    9cec:	d104      	bne.n	9cf8 <_vfiprintf_r+0xe0>
    9cee:	9b02      	ldr	r3, [sp, #8]
    9cf0:	1ae3      	subs	r3, r4, r3
    9cf2:	9304      	str	r3, [sp, #16]
    9cf4:	d011      	beq.n	9d1a <_vfiprintf_r+0x102>
    9cf6:	e003      	b.n	9d00 <_vfiprintf_r+0xe8>
    9cf8:	2b25      	cmp	r3, #37	; 0x25
    9cfa:	d0f8      	beq.n	9cee <_vfiprintf_r+0xd6>
    9cfc:	3401      	adds	r4, #1
    9cfe:	e7f3      	b.n	9ce8 <_vfiprintf_r+0xd0>
    9d00:	9b04      	ldr	r3, [sp, #16]
    9d02:	1c30      	adds	r0, r6, #0
    9d04:	1c39      	adds	r1, r7, #0
    9d06:	9a02      	ldr	r2, [sp, #8]
    9d08:	f7ff ff73 	bl	9bf2 <__sfputs_r>
    9d0c:	1c43      	adds	r3, r0, #1
    9d0e:	d07b      	beq.n	9e08 <_vfiprintf_r+0x1f0>
    9d10:	696a      	ldr	r2, [r5, #20]
    9d12:	9b04      	ldr	r3, [sp, #16]
    9d14:	4694      	mov	ip, r2
    9d16:	4463      	add	r3, ip
    9d18:	616b      	str	r3, [r5, #20]
    9d1a:	7823      	ldrb	r3, [r4, #0]
    9d1c:	2b00      	cmp	r3, #0
    9d1e:	d073      	beq.n	9e08 <_vfiprintf_r+0x1f0>
    9d20:	2201      	movs	r2, #1
    9d22:	2300      	movs	r3, #0
    9d24:	4252      	negs	r2, r2
    9d26:	606a      	str	r2, [r5, #4]
    9d28:	a902      	add	r1, sp, #8
    9d2a:	3254      	adds	r2, #84	; 0x54
    9d2c:	1852      	adds	r2, r2, r1
    9d2e:	3401      	adds	r4, #1
    9d30:	602b      	str	r3, [r5, #0]
    9d32:	60eb      	str	r3, [r5, #12]
    9d34:	60ab      	str	r3, [r5, #8]
    9d36:	7013      	strb	r3, [r2, #0]
    9d38:	65ab      	str	r3, [r5, #88]	; 0x58
    9d3a:	7821      	ldrb	r1, [r4, #0]
    9d3c:	483c      	ldr	r0, [pc, #240]	; (9e30 <_vfiprintf_r+0x218>)
    9d3e:	2205      	movs	r2, #5
    9d40:	f7ff fe88 	bl	9a54 <memchr>
    9d44:	2800      	cmp	r0, #0
    9d46:	d009      	beq.n	9d5c <_vfiprintf_r+0x144>
    9d48:	4b39      	ldr	r3, [pc, #228]	; (9e30 <_vfiprintf_r+0x218>)
    9d4a:	3401      	adds	r4, #1
    9d4c:	1ac0      	subs	r0, r0, r3
    9d4e:	2301      	movs	r3, #1
    9d50:	4083      	lsls	r3, r0
    9d52:	1c18      	adds	r0, r3, #0
    9d54:	682b      	ldr	r3, [r5, #0]
    9d56:	4318      	orrs	r0, r3
    9d58:	6028      	str	r0, [r5, #0]
    9d5a:	e7ee      	b.n	9d3a <_vfiprintf_r+0x122>
    9d5c:	682b      	ldr	r3, [r5, #0]
    9d5e:	06da      	lsls	r2, r3, #27
    9d60:	d504      	bpl.n	9d6c <_vfiprintf_r+0x154>
    9d62:	2253      	movs	r2, #83	; 0x53
    9d64:	2120      	movs	r1, #32
    9d66:	a802      	add	r0, sp, #8
    9d68:	1812      	adds	r2, r2, r0
    9d6a:	7011      	strb	r1, [r2, #0]
    9d6c:	071a      	lsls	r2, r3, #28
    9d6e:	d504      	bpl.n	9d7a <_vfiprintf_r+0x162>
    9d70:	2253      	movs	r2, #83	; 0x53
    9d72:	212b      	movs	r1, #43	; 0x2b
    9d74:	a802      	add	r0, sp, #8
    9d76:	1812      	adds	r2, r2, r0
    9d78:	7011      	strb	r1, [r2, #0]
    9d7a:	7822      	ldrb	r2, [r4, #0]
    9d7c:	2a2a      	cmp	r2, #42	; 0x2a
    9d7e:	d100      	bne.n	9d82 <_vfiprintf_r+0x16a>
    9d80:	e77c      	b.n	9c7c <_vfiprintf_r+0x64>
    9d82:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9d84:	e005      	b.n	9d92 <_vfiprintf_r+0x17a>
    9d86:	4252      	negs	r2, r2
    9d88:	60ea      	str	r2, [r5, #12]
    9d8a:	2202      	movs	r2, #2
    9d8c:	4313      	orrs	r3, r2
    9d8e:	602b      	str	r3, [r5, #0]
    9d90:	e77b      	b.n	9c8a <_vfiprintf_r+0x72>
    9d92:	7822      	ldrb	r2, [r4, #0]
    9d94:	3a30      	subs	r2, #48	; 0x30
    9d96:	2a09      	cmp	r2, #9
    9d98:	d804      	bhi.n	9da4 <_vfiprintf_r+0x18c>
    9d9a:	210a      	movs	r1, #10
    9d9c:	434b      	muls	r3, r1
    9d9e:	3401      	adds	r4, #1
    9da0:	189b      	adds	r3, r3, r2
    9da2:	e7f6      	b.n	9d92 <_vfiprintf_r+0x17a>
    9da4:	9309      	str	r3, [sp, #36]	; 0x24
    9da6:	e771      	b.n	9c8c <_vfiprintf_r+0x74>
    9da8:	7863      	ldrb	r3, [r4, #1]
    9daa:	2b2a      	cmp	r3, #42	; 0x2a
    9dac:	d109      	bne.n	9dc2 <_vfiprintf_r+0x1aa>
    9dae:	9b05      	ldr	r3, [sp, #20]
    9db0:	3402      	adds	r4, #2
    9db2:	1d1a      	adds	r2, r3, #4
    9db4:	681b      	ldr	r3, [r3, #0]
    9db6:	9205      	str	r2, [sp, #20]
    9db8:	2b00      	cmp	r3, #0
    9dba:	da0d      	bge.n	9dd8 <_vfiprintf_r+0x1c0>
    9dbc:	2301      	movs	r3, #1
    9dbe:	425b      	negs	r3, r3
    9dc0:	e00a      	b.n	9dd8 <_vfiprintf_r+0x1c0>
    9dc2:	2300      	movs	r3, #0
    9dc4:	3401      	adds	r4, #1
    9dc6:	7822      	ldrb	r2, [r4, #0]
    9dc8:	3a30      	subs	r2, #48	; 0x30
    9dca:	2a09      	cmp	r2, #9
    9dcc:	d804      	bhi.n	9dd8 <_vfiprintf_r+0x1c0>
    9dce:	210a      	movs	r1, #10
    9dd0:	434b      	muls	r3, r1
    9dd2:	3401      	adds	r4, #1
    9dd4:	189b      	adds	r3, r3, r2
    9dd6:	e7f6      	b.n	9dc6 <_vfiprintf_r+0x1ae>
    9dd8:	9307      	str	r3, [sp, #28]
    9dda:	e75b      	b.n	9c94 <_vfiprintf_r+0x7c>
    9ddc:	ab05      	add	r3, sp, #20
    9dde:	9300      	str	r3, [sp, #0]
    9de0:	1c30      	adds	r0, r6, #0
    9de2:	1c29      	adds	r1, r5, #0
    9de4:	1c3a      	adds	r2, r7, #0
    9de6:	4b13      	ldr	r3, [pc, #76]	; (9e34 <_vfiprintf_r+0x21c>)
    9de8:	f000 f8ca 	bl	9f80 <_printf_float>
    9dec:	e007      	b.n	9dfe <_vfiprintf_r+0x1e6>
    9dee:	ab05      	add	r3, sp, #20
    9df0:	9300      	str	r3, [sp, #0]
    9df2:	1c30      	adds	r0, r6, #0
    9df4:	1c29      	adds	r1, r5, #0
    9df6:	1c3a      	adds	r2, r7, #0
    9df8:	4b0e      	ldr	r3, [pc, #56]	; (9e34 <_vfiprintf_r+0x21c>)
    9dfa:	f000 fb6d 	bl	a4d8 <_printf_i>
    9dfe:	9003      	str	r0, [sp, #12]
    9e00:	9b03      	ldr	r3, [sp, #12]
    9e02:	3301      	adds	r3, #1
    9e04:	d000      	beq.n	9e08 <_vfiprintf_r+0x1f0>
    9e06:	e76a      	b.n	9cde <_vfiprintf_r+0xc6>
    9e08:	89bb      	ldrh	r3, [r7, #12]
    9e0a:	065b      	lsls	r3, r3, #25
    9e0c:	d500      	bpl.n	9e10 <_vfiprintf_r+0x1f8>
    9e0e:	e732      	b.n	9c76 <_vfiprintf_r+0x5e>
    9e10:	980b      	ldr	r0, [sp, #44]	; 0x2c
    9e12:	b01f      	add	sp, #124	; 0x7c
    9e14:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9e16:	46c0      	nop			; (mov r8, r8)
    9e18:	0000f678 	.word	0x0000f678
    9e1c:	0000f698 	.word	0x0000f698
    9e20:	0000f6b8 	.word	0x0000f6b8
    9e24:	0000f6e6 	.word	0x0000f6e6
    9e28:	0000f6ea 	.word	0x0000f6ea
    9e2c:	00009f81 	.word	0x00009f81
    9e30:	0000f6e0 	.word	0x0000f6e0
    9e34:	00009bf3 	.word	0x00009bf3

00009e38 <vfiprintf>:
    9e38:	b538      	push	{r3, r4, r5, lr}
    9e3a:	1c05      	adds	r5, r0, #0
    9e3c:	1c0c      	adds	r4, r1, #0
    9e3e:	1c13      	adds	r3, r2, #0
    9e40:	4a03      	ldr	r2, [pc, #12]	; (9e50 <vfiprintf+0x18>)
    9e42:	1c29      	adds	r1, r5, #0
    9e44:	6810      	ldr	r0, [r2, #0]
    9e46:	1c22      	adds	r2, r4, #0
    9e48:	f7ff fee6 	bl	9c18 <_vfiprintf_r>
    9e4c:	bd38      	pop	{r3, r4, r5, pc}
    9e4e:	46c0      	nop			; (mov r8, r8)
    9e50:	20000134 	.word	0x20000134

00009e54 <__cvt>:
    9e54:	b5f0      	push	{r4, r5, r6, r7, lr}
    9e56:	b08b      	sub	sp, #44	; 0x2c
    9e58:	1c14      	adds	r4, r2, #0
    9e5a:	1e1d      	subs	r5, r3, #0
    9e5c:	9912      	ldr	r1, [sp, #72]	; 0x48
    9e5e:	da06      	bge.n	9e6e <__cvt+0x1a>
    9e60:	2480      	movs	r4, #128	; 0x80
    9e62:	0624      	lsls	r4, r4, #24
    9e64:	192b      	adds	r3, r5, r4
    9e66:	1c1d      	adds	r5, r3, #0
    9e68:	1c14      	adds	r4, r2, #0
    9e6a:	232d      	movs	r3, #45	; 0x2d
    9e6c:	e000      	b.n	9e70 <__cvt+0x1c>
    9e6e:	2300      	movs	r3, #0
    9e70:	700b      	strb	r3, [r1, #0]
    9e72:	2320      	movs	r3, #32
    9e74:	9e14      	ldr	r6, [sp, #80]	; 0x50
    9e76:	2203      	movs	r2, #3
    9e78:	439e      	bics	r6, r3
    9e7a:	2e46      	cmp	r6, #70	; 0x46
    9e7c:	d007      	beq.n	9e8e <__cvt+0x3a>
    9e7e:	1c33      	adds	r3, r6, #0
    9e80:	3b45      	subs	r3, #69	; 0x45
    9e82:	4259      	negs	r1, r3
    9e84:	414b      	adcs	r3, r1
    9e86:	9910      	ldr	r1, [sp, #64]	; 0x40
    9e88:	3a01      	subs	r2, #1
    9e8a:	18cb      	adds	r3, r1, r3
    9e8c:	9310      	str	r3, [sp, #64]	; 0x40
    9e8e:	9b10      	ldr	r3, [sp, #64]	; 0x40
    9e90:	9200      	str	r2, [sp, #0]
    9e92:	9301      	str	r3, [sp, #4]
    9e94:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    9e96:	1c22      	adds	r2, r4, #0
    9e98:	9302      	str	r3, [sp, #8]
    9e9a:	ab08      	add	r3, sp, #32
    9e9c:	9303      	str	r3, [sp, #12]
    9e9e:	ab09      	add	r3, sp, #36	; 0x24
    9ea0:	9304      	str	r3, [sp, #16]
    9ea2:	1c2b      	adds	r3, r5, #0
    9ea4:	f002 fad2 	bl	c44c <_dtoa_r>
    9ea8:	1c07      	adds	r7, r0, #0
    9eaa:	2e47      	cmp	r6, #71	; 0x47
    9eac:	d102      	bne.n	9eb4 <__cvt+0x60>
    9eae:	9b11      	ldr	r3, [sp, #68]	; 0x44
    9eb0:	07db      	lsls	r3, r3, #31
    9eb2:	d52c      	bpl.n	9f0e <__cvt+0xba>
    9eb4:	9b10      	ldr	r3, [sp, #64]	; 0x40
    9eb6:	18fb      	adds	r3, r7, r3
    9eb8:	9307      	str	r3, [sp, #28]
    9eba:	2e46      	cmp	r6, #70	; 0x46
    9ebc:	d114      	bne.n	9ee8 <__cvt+0x94>
    9ebe:	783b      	ldrb	r3, [r7, #0]
    9ec0:	2b30      	cmp	r3, #48	; 0x30
    9ec2:	d10c      	bne.n	9ede <__cvt+0x8a>
    9ec4:	1c20      	adds	r0, r4, #0
    9ec6:	1c29      	adds	r1, r5, #0
    9ec8:	2200      	movs	r2, #0
    9eca:	2300      	movs	r3, #0
    9ecc:	f7fc fb80 	bl	65d0 <__aeabi_dcmpeq>
    9ed0:	2800      	cmp	r0, #0
    9ed2:	d104      	bne.n	9ede <__cvt+0x8a>
    9ed4:	2301      	movs	r3, #1
    9ed6:	9a10      	ldr	r2, [sp, #64]	; 0x40
    9ed8:	1a9b      	subs	r3, r3, r2
    9eda:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    9edc:	6013      	str	r3, [r2, #0]
    9ede:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    9ee0:	9a07      	ldr	r2, [sp, #28]
    9ee2:	681b      	ldr	r3, [r3, #0]
    9ee4:	18d3      	adds	r3, r2, r3
    9ee6:	9307      	str	r3, [sp, #28]
    9ee8:	1c20      	adds	r0, r4, #0
    9eea:	1c29      	adds	r1, r5, #0
    9eec:	2200      	movs	r2, #0
    9eee:	2300      	movs	r3, #0
    9ef0:	f7fc fb6e 	bl	65d0 <__aeabi_dcmpeq>
    9ef4:	2800      	cmp	r0, #0
    9ef6:	d001      	beq.n	9efc <__cvt+0xa8>
    9ef8:	9b07      	ldr	r3, [sp, #28]
    9efa:	9309      	str	r3, [sp, #36]	; 0x24
    9efc:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9efe:	9a07      	ldr	r2, [sp, #28]
    9f00:	4293      	cmp	r3, r2
    9f02:	d204      	bcs.n	9f0e <__cvt+0xba>
    9f04:	1c5a      	adds	r2, r3, #1
    9f06:	9209      	str	r2, [sp, #36]	; 0x24
    9f08:	2230      	movs	r2, #48	; 0x30
    9f0a:	701a      	strb	r2, [r3, #0]
    9f0c:	e7f6      	b.n	9efc <__cvt+0xa8>
    9f0e:	1c38      	adds	r0, r7, #0
    9f10:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9f12:	9a15      	ldr	r2, [sp, #84]	; 0x54
    9f14:	1bdb      	subs	r3, r3, r7
    9f16:	6013      	str	r3, [r2, #0]
    9f18:	b00b      	add	sp, #44	; 0x2c
    9f1a:	bdf0      	pop	{r4, r5, r6, r7, pc}

00009f1c <__exponent>:
    9f1c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    9f1e:	232b      	movs	r3, #43	; 0x2b
    9f20:	1c07      	adds	r7, r0, #0
    9f22:	1c0c      	adds	r4, r1, #0
    9f24:	7002      	strb	r2, [r0, #0]
    9f26:	1c86      	adds	r6, r0, #2
    9f28:	2900      	cmp	r1, #0
    9f2a:	da01      	bge.n	9f30 <__exponent+0x14>
    9f2c:	232d      	movs	r3, #45	; 0x2d
    9f2e:	424c      	negs	r4, r1
    9f30:	707b      	strb	r3, [r7, #1]
    9f32:	2c09      	cmp	r4, #9
    9f34:	dd1c      	ble.n	9f70 <__exponent+0x54>
    9f36:	466b      	mov	r3, sp
    9f38:	1ddd      	adds	r5, r3, #7
    9f3a:	1c20      	adds	r0, r4, #0
    9f3c:	210a      	movs	r1, #10
    9f3e:	f7fc fb2b 	bl	6598 <__aeabi_idivmod>
    9f42:	3d01      	subs	r5, #1
    9f44:	3130      	adds	r1, #48	; 0x30
    9f46:	7029      	strb	r1, [r5, #0]
    9f48:	1c20      	adds	r0, r4, #0
    9f4a:	210a      	movs	r1, #10
    9f4c:	f7fc fa3e 	bl	63cc <__aeabi_idiv>
    9f50:	1e04      	subs	r4, r0, #0
    9f52:	2c09      	cmp	r4, #9
    9f54:	dcf1      	bgt.n	9f3a <__exponent+0x1e>
    9f56:	3d01      	subs	r5, #1
    9f58:	3430      	adds	r4, #48	; 0x30
    9f5a:	702c      	strb	r4, [r5, #0]
    9f5c:	466b      	mov	r3, sp
    9f5e:	3307      	adds	r3, #7
    9f60:	1c30      	adds	r0, r6, #0
    9f62:	42ab      	cmp	r3, r5
    9f64:	d909      	bls.n	9f7a <__exponent+0x5e>
    9f66:	782b      	ldrb	r3, [r5, #0]
    9f68:	3501      	adds	r5, #1
    9f6a:	7033      	strb	r3, [r6, #0]
    9f6c:	3601      	adds	r6, #1
    9f6e:	e7f5      	b.n	9f5c <__exponent+0x40>
    9f70:	2330      	movs	r3, #48	; 0x30
    9f72:	18e4      	adds	r4, r4, r3
    9f74:	7033      	strb	r3, [r6, #0]
    9f76:	1cb0      	adds	r0, r6, #2
    9f78:	7074      	strb	r4, [r6, #1]
    9f7a:	1bc0      	subs	r0, r0, r7
    9f7c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

00009f80 <_printf_float>:
    9f80:	b5f0      	push	{r4, r5, r6, r7, lr}
    9f82:	b093      	sub	sp, #76	; 0x4c
    9f84:	1c0c      	adds	r4, r1, #0
    9f86:	9208      	str	r2, [sp, #32]
    9f88:	9309      	str	r3, [sp, #36]	; 0x24
    9f8a:	9e18      	ldr	r6, [sp, #96]	; 0x60
    9f8c:	1c05      	adds	r5, r0, #0
    9f8e:	f003 fbd1 	bl	d734 <_localeconv_r>
    9f92:	6803      	ldr	r3, [r0, #0]
    9f94:	1c18      	adds	r0, r3, #0
    9f96:	930b      	str	r3, [sp, #44]	; 0x2c
    9f98:	f001 f91a 	bl	b1d0 <strlen>
    9f9c:	2300      	movs	r3, #0
    9f9e:	6821      	ldr	r1, [r4, #0]
    9fa0:	9310      	str	r3, [sp, #64]	; 0x40
    9fa2:	900c      	str	r0, [sp, #48]	; 0x30
    9fa4:	7e27      	ldrb	r7, [r4, #24]
    9fa6:	6833      	ldr	r3, [r6, #0]
    9fa8:	2207      	movs	r2, #7
    9faa:	05c9      	lsls	r1, r1, #23
    9fac:	d501      	bpl.n	9fb2 <_printf_float+0x32>
    9fae:	189b      	adds	r3, r3, r2
    9fb0:	e000      	b.n	9fb4 <_printf_float+0x34>
    9fb2:	3307      	adds	r3, #7
    9fb4:	4393      	bics	r3, r2
    9fb6:	1c1a      	adds	r2, r3, #0
    9fb8:	3208      	adds	r2, #8
    9fba:	6032      	str	r2, [r6, #0]
    9fbc:	681a      	ldr	r2, [r3, #0]
    9fbe:	685b      	ldr	r3, [r3, #4]
    9fc0:	64a2      	str	r2, [r4, #72]	; 0x48
    9fc2:	64e3      	str	r3, [r4, #76]	; 0x4c
    9fc4:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    9fc6:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    9fc8:	f000 ff60 	bl	ae8c <__fpclassifyd>
    9fcc:	2801      	cmp	r0, #1
    9fce:	d118      	bne.n	a002 <_printf_float+0x82>
    9fd0:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    9fd2:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    9fd4:	2200      	movs	r2, #0
    9fd6:	2300      	movs	r3, #0
    9fd8:	f7fc fb00 	bl	65dc <__aeabi_dcmplt>
    9fdc:	2800      	cmp	r0, #0
    9fde:	d003      	beq.n	9fe8 <_printf_float+0x68>
    9fe0:	1c23      	adds	r3, r4, #0
    9fe2:	222d      	movs	r2, #45	; 0x2d
    9fe4:	3343      	adds	r3, #67	; 0x43
    9fe6:	701a      	strb	r2, [r3, #0]
    9fe8:	4bb6      	ldr	r3, [pc, #728]	; (a2c4 <_printf_float+0x344>)
    9fea:	930a      	str	r3, [sp, #40]	; 0x28
    9fec:	2f47      	cmp	r7, #71	; 0x47
    9fee:	d901      	bls.n	9ff4 <_printf_float+0x74>
    9ff0:	4bb5      	ldr	r3, [pc, #724]	; (a2c8 <_printf_float+0x348>)
    9ff2:	930a      	str	r3, [sp, #40]	; 0x28
    9ff4:	2303      	movs	r3, #3
    9ff6:	6822      	ldr	r2, [r4, #0]
    9ff8:	6123      	str	r3, [r4, #16]
    9ffa:	3301      	adds	r3, #1
    9ffc:	439a      	bics	r2, r3
    9ffe:	6022      	str	r2, [r4, #0]
    a000:	e012      	b.n	a028 <_printf_float+0xa8>
    a002:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    a004:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    a006:	f000 ff41 	bl	ae8c <__fpclassifyd>
    a00a:	6826      	ldr	r6, [r4, #0]
    a00c:	2800      	cmp	r0, #0
    a00e:	d10d      	bne.n	a02c <_printf_float+0xac>
    a010:	4bae      	ldr	r3, [pc, #696]	; (a2cc <_printf_float+0x34c>)
    a012:	930a      	str	r3, [sp, #40]	; 0x28
    a014:	2f47      	cmp	r7, #71	; 0x47
    a016:	d901      	bls.n	a01c <_printf_float+0x9c>
    a018:	4bad      	ldr	r3, [pc, #692]	; (a2d0 <_printf_float+0x350>)
    a01a:	930a      	str	r3, [sp, #40]	; 0x28
    a01c:	2303      	movs	r3, #3
    a01e:	1c31      	adds	r1, r6, #0
    a020:	6123      	str	r3, [r4, #16]
    a022:	3301      	adds	r3, #1
    a024:	4399      	bics	r1, r3
    a026:	6021      	str	r1, [r4, #0]
    a028:	2600      	movs	r6, #0
    a02a:	e080      	b.n	a12e <_printf_float+0x1ae>
    a02c:	2180      	movs	r1, #128	; 0x80
    a02e:	6860      	ldr	r0, [r4, #4]
    a030:	00c9      	lsls	r1, r1, #3
    a032:	1c43      	adds	r3, r0, #1
    a034:	d101      	bne.n	a03a <_printf_float+0xba>
    a036:	2306      	movs	r3, #6
    a038:	e009      	b.n	a04e <_printf_float+0xce>
    a03a:	6ca2      	ldr	r2, [r4, #72]	; 0x48
    a03c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
    a03e:	2f67      	cmp	r7, #103	; 0x67
    a040:	d001      	beq.n	a046 <_printf_float+0xc6>
    a042:	2f47      	cmp	r7, #71	; 0x47
    a044:	d104      	bne.n	a050 <_printf_float+0xd0>
    a046:	2800      	cmp	r0, #0
    a048:	d000      	beq.n	a04c <_printf_float+0xcc>
    a04a:	e1c0      	b.n	a3ce <_printf_float+0x44e>
    a04c:	2301      	movs	r3, #1
    a04e:	6063      	str	r3, [r4, #4]
    a050:	6863      	ldr	r3, [r4, #4]
    a052:	4331      	orrs	r1, r6
    a054:	9300      	str	r3, [sp, #0]
    a056:	2323      	movs	r3, #35	; 0x23
    a058:	6021      	str	r1, [r4, #0]
    a05a:	9101      	str	r1, [sp, #4]
    a05c:	2100      	movs	r1, #0
    a05e:	aa06      	add	r2, sp, #24
    a060:	189b      	adds	r3, r3, r2
    a062:	9302      	str	r3, [sp, #8]
    a064:	ab0f      	add	r3, sp, #60	; 0x3c
    a066:	9303      	str	r3, [sp, #12]
    a068:	ab10      	add	r3, sp, #64	; 0x40
    a06a:	9305      	str	r3, [sp, #20]
    a06c:	9704      	str	r7, [sp, #16]
    a06e:	6ca2      	ldr	r2, [r4, #72]	; 0x48
    a070:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
    a072:	9106      	str	r1, [sp, #24]
    a074:	1c28      	adds	r0, r5, #0
    a076:	f7ff feed 	bl	9e54 <__cvt>
    a07a:	2320      	movs	r3, #32
    a07c:	1c3a      	adds	r2, r7, #0
    a07e:	900a      	str	r0, [sp, #40]	; 0x28
    a080:	439a      	bics	r2, r3
    a082:	2a47      	cmp	r2, #71	; 0x47
    a084:	d107      	bne.n	a096 <_printf_float+0x116>
    a086:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a088:	1cda      	adds	r2, r3, #3
    a08a:	db02      	blt.n	a092 <_printf_float+0x112>
    a08c:	6862      	ldr	r2, [r4, #4]
    a08e:	4293      	cmp	r3, r2
    a090:	dd2d      	ble.n	a0ee <_printf_float+0x16e>
    a092:	3f02      	subs	r7, #2
    a094:	b2ff      	uxtb	r7, r7
    a096:	990f      	ldr	r1, [sp, #60]	; 0x3c
    a098:	2f65      	cmp	r7, #101	; 0x65
    a09a:	d812      	bhi.n	a0c2 <_printf_float+0x142>
    a09c:	1c20      	adds	r0, r4, #0
    a09e:	3901      	subs	r1, #1
    a0a0:	1c3a      	adds	r2, r7, #0
    a0a2:	3050      	adds	r0, #80	; 0x50
    a0a4:	910f      	str	r1, [sp, #60]	; 0x3c
    a0a6:	f7ff ff39 	bl	9f1c <__exponent>
    a0aa:	9a10      	ldr	r2, [sp, #64]	; 0x40
    a0ac:	1c06      	adds	r6, r0, #0
    a0ae:	1883      	adds	r3, r0, r2
    a0b0:	6123      	str	r3, [r4, #16]
    a0b2:	2a01      	cmp	r2, #1
    a0b4:	dc02      	bgt.n	a0bc <_printf_float+0x13c>
    a0b6:	6822      	ldr	r2, [r4, #0]
    a0b8:	07d2      	lsls	r2, r2, #31
    a0ba:	d52e      	bpl.n	a11a <_printf_float+0x19a>
    a0bc:	3301      	adds	r3, #1
    a0be:	6123      	str	r3, [r4, #16]
    a0c0:	e02b      	b.n	a11a <_printf_float+0x19a>
    a0c2:	2f66      	cmp	r7, #102	; 0x66
    a0c4:	d114      	bne.n	a0f0 <_printf_float+0x170>
    a0c6:	6863      	ldr	r3, [r4, #4]
    a0c8:	2900      	cmp	r1, #0
    a0ca:	dd08      	ble.n	a0de <_printf_float+0x15e>
    a0cc:	6121      	str	r1, [r4, #16]
    a0ce:	2b00      	cmp	r3, #0
    a0d0:	d102      	bne.n	a0d8 <_printf_float+0x158>
    a0d2:	6822      	ldr	r2, [r4, #0]
    a0d4:	07d2      	lsls	r2, r2, #31
    a0d6:	d51d      	bpl.n	a114 <_printf_float+0x194>
    a0d8:	3301      	adds	r3, #1
    a0da:	18cb      	adds	r3, r1, r3
    a0dc:	e011      	b.n	a102 <_printf_float+0x182>
    a0de:	2b00      	cmp	r3, #0
    a0e0:	d103      	bne.n	a0ea <_printf_float+0x16a>
    a0e2:	2201      	movs	r2, #1
    a0e4:	6821      	ldr	r1, [r4, #0]
    a0e6:	4211      	tst	r1, r2
    a0e8:	d013      	beq.n	a112 <_printf_float+0x192>
    a0ea:	1c9a      	adds	r2, r3, #2
    a0ec:	e011      	b.n	a112 <_printf_float+0x192>
    a0ee:	2767      	movs	r7, #103	; 0x67
    a0f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a0f2:	9810      	ldr	r0, [sp, #64]	; 0x40
    a0f4:	4283      	cmp	r3, r0
    a0f6:	db06      	blt.n	a106 <_printf_float+0x186>
    a0f8:	6822      	ldr	r2, [r4, #0]
    a0fa:	6123      	str	r3, [r4, #16]
    a0fc:	07d2      	lsls	r2, r2, #31
    a0fe:	d509      	bpl.n	a114 <_printf_float+0x194>
    a100:	3301      	adds	r3, #1
    a102:	6123      	str	r3, [r4, #16]
    a104:	e006      	b.n	a114 <_printf_float+0x194>
    a106:	2201      	movs	r2, #1
    a108:	2b00      	cmp	r3, #0
    a10a:	dc01      	bgt.n	a110 <_printf_float+0x190>
    a10c:	2102      	movs	r1, #2
    a10e:	1aca      	subs	r2, r1, r3
    a110:	1882      	adds	r2, r0, r2
    a112:	6122      	str	r2, [r4, #16]
    a114:	2600      	movs	r6, #0
    a116:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a118:	65a3      	str	r3, [r4, #88]	; 0x58
    a11a:	2323      	movs	r3, #35	; 0x23
    a11c:	aa06      	add	r2, sp, #24
    a11e:	189b      	adds	r3, r3, r2
    a120:	781b      	ldrb	r3, [r3, #0]
    a122:	2b00      	cmp	r3, #0
    a124:	d003      	beq.n	a12e <_printf_float+0x1ae>
    a126:	1c23      	adds	r3, r4, #0
    a128:	222d      	movs	r2, #45	; 0x2d
    a12a:	3343      	adds	r3, #67	; 0x43
    a12c:	701a      	strb	r2, [r3, #0]
    a12e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a130:	1c28      	adds	r0, r5, #0
    a132:	9300      	str	r3, [sp, #0]
    a134:	1c21      	adds	r1, r4, #0
    a136:	9b08      	ldr	r3, [sp, #32]
    a138:	aa11      	add	r2, sp, #68	; 0x44
    a13a:	f000 f95f 	bl	a3fc <_printf_common>
    a13e:	1c43      	adds	r3, r0, #1
    a140:	d102      	bne.n	a148 <_printf_float+0x1c8>
    a142:	2001      	movs	r0, #1
    a144:	4240      	negs	r0, r0
    a146:	e156      	b.n	a3f6 <_printf_float+0x476>
    a148:	6822      	ldr	r2, [r4, #0]
    a14a:	0553      	lsls	r3, r2, #21
    a14c:	d404      	bmi.n	a158 <_printf_float+0x1d8>
    a14e:	1c28      	adds	r0, r5, #0
    a150:	9908      	ldr	r1, [sp, #32]
    a152:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a154:	6923      	ldr	r3, [r4, #16]
    a156:	e116      	b.n	a386 <_printf_float+0x406>
    a158:	2f65      	cmp	r7, #101	; 0x65
    a15a:	d800      	bhi.n	a15e <_printf_float+0x1de>
    a15c:	e0d4      	b.n	a308 <_printf_float+0x388>
    a15e:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    a160:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    a162:	2200      	movs	r2, #0
    a164:	2300      	movs	r3, #0
    a166:	f7fc fa33 	bl	65d0 <__aeabi_dcmpeq>
    a16a:	2800      	cmp	r0, #0
    a16c:	d02b      	beq.n	a1c6 <_printf_float+0x246>
    a16e:	2301      	movs	r3, #1
    a170:	1c28      	adds	r0, r5, #0
    a172:	9908      	ldr	r1, [sp, #32]
    a174:	4a57      	ldr	r2, [pc, #348]	; (a2d4 <_printf_float+0x354>)
    a176:	9e09      	ldr	r6, [sp, #36]	; 0x24
    a178:	47b0      	blx	r6
    a17a:	1c43      	adds	r3, r0, #1
    a17c:	d0e1      	beq.n	a142 <_printf_float+0x1c2>
    a17e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a180:	9a10      	ldr	r2, [sp, #64]	; 0x40
    a182:	4293      	cmp	r3, r2
    a184:	db07      	blt.n	a196 <_printf_float+0x216>
    a186:	6823      	ldr	r3, [r4, #0]
    a188:	07db      	lsls	r3, r3, #31
    a18a:	d404      	bmi.n	a196 <_printf_float+0x216>
    a18c:	6823      	ldr	r3, [r4, #0]
    a18e:	079b      	lsls	r3, r3, #30
    a190:	d500      	bpl.n	a194 <_printf_float+0x214>
    a192:	e11a      	b.n	a3ca <_printf_float+0x44a>
    a194:	e113      	b.n	a3be <_printf_float+0x43e>
    a196:	9e09      	ldr	r6, [sp, #36]	; 0x24
    a198:	1c28      	adds	r0, r5, #0
    a19a:	9908      	ldr	r1, [sp, #32]
    a19c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    a19e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a1a0:	47b0      	blx	r6
    a1a2:	2600      	movs	r6, #0
    a1a4:	1c43      	adds	r3, r0, #1
    a1a6:	d0cc      	beq.n	a142 <_printf_float+0x1c2>
    a1a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
    a1aa:	3b01      	subs	r3, #1
    a1ac:	429e      	cmp	r6, r3
    a1ae:	daed      	bge.n	a18c <_printf_float+0x20c>
    a1b0:	1c22      	adds	r2, r4, #0
    a1b2:	2301      	movs	r3, #1
    a1b4:	1c28      	adds	r0, r5, #0
    a1b6:	9908      	ldr	r1, [sp, #32]
    a1b8:	321a      	adds	r2, #26
    a1ba:	9f09      	ldr	r7, [sp, #36]	; 0x24
    a1bc:	47b8      	blx	r7
    a1be:	1c43      	adds	r3, r0, #1
    a1c0:	d0bf      	beq.n	a142 <_printf_float+0x1c2>
    a1c2:	3601      	adds	r6, #1
    a1c4:	e7f0      	b.n	a1a8 <_printf_float+0x228>
    a1c6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a1c8:	2b00      	cmp	r3, #0
    a1ca:	dc2b      	bgt.n	a224 <_printf_float+0x2a4>
    a1cc:	2301      	movs	r3, #1
    a1ce:	1c28      	adds	r0, r5, #0
    a1d0:	9908      	ldr	r1, [sp, #32]
    a1d2:	4a40      	ldr	r2, [pc, #256]	; (a2d4 <_printf_float+0x354>)
    a1d4:	9e09      	ldr	r6, [sp, #36]	; 0x24
    a1d6:	47b0      	blx	r6
    a1d8:	1c43      	adds	r3, r0, #1
    a1da:	d0b2      	beq.n	a142 <_printf_float+0x1c2>
    a1dc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a1de:	2b00      	cmp	r3, #0
    a1e0:	d105      	bne.n	a1ee <_printf_float+0x26e>
    a1e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
    a1e4:	2b00      	cmp	r3, #0
    a1e6:	d102      	bne.n	a1ee <_printf_float+0x26e>
    a1e8:	6823      	ldr	r3, [r4, #0]
    a1ea:	07db      	lsls	r3, r3, #31
    a1ec:	d5ce      	bpl.n	a18c <_printf_float+0x20c>
    a1ee:	9e09      	ldr	r6, [sp, #36]	; 0x24
    a1f0:	1c28      	adds	r0, r5, #0
    a1f2:	9908      	ldr	r1, [sp, #32]
    a1f4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    a1f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a1f8:	47b0      	blx	r6
    a1fa:	2600      	movs	r6, #0
    a1fc:	1c43      	adds	r3, r0, #1
    a1fe:	d0a0      	beq.n	a142 <_printf_float+0x1c2>
    a200:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a202:	1c28      	adds	r0, r5, #0
    a204:	425b      	negs	r3, r3
    a206:	9908      	ldr	r1, [sp, #32]
    a208:	429e      	cmp	r6, r3
    a20a:	da08      	bge.n	a21e <_printf_float+0x29e>
    a20c:	1c22      	adds	r2, r4, #0
    a20e:	2301      	movs	r3, #1
    a210:	321a      	adds	r2, #26
    a212:	9f09      	ldr	r7, [sp, #36]	; 0x24
    a214:	47b8      	blx	r7
    a216:	1c43      	adds	r3, r0, #1
    a218:	d093      	beq.n	a142 <_printf_float+0x1c2>
    a21a:	3601      	adds	r6, #1
    a21c:	e7f0      	b.n	a200 <_printf_float+0x280>
    a21e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a220:	9b10      	ldr	r3, [sp, #64]	; 0x40
    a222:	e0b0      	b.n	a386 <_printf_float+0x406>
    a224:	9b10      	ldr	r3, [sp, #64]	; 0x40
    a226:	6da6      	ldr	r6, [r4, #88]	; 0x58
    a228:	429e      	cmp	r6, r3
    a22a:	dd00      	ble.n	a22e <_printf_float+0x2ae>
    a22c:	1c1e      	adds	r6, r3, #0
    a22e:	2e00      	cmp	r6, #0
    a230:	dc01      	bgt.n	a236 <_printf_float+0x2b6>
    a232:	2300      	movs	r3, #0
    a234:	e014      	b.n	a260 <_printf_float+0x2e0>
    a236:	1c33      	adds	r3, r6, #0
    a238:	1c28      	adds	r0, r5, #0
    a23a:	9908      	ldr	r1, [sp, #32]
    a23c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a23e:	9f09      	ldr	r7, [sp, #36]	; 0x24
    a240:	47b8      	blx	r7
    a242:	1c43      	adds	r3, r0, #1
    a244:	d1f5      	bne.n	a232 <_printf_float+0x2b2>
    a246:	e77c      	b.n	a142 <_printf_float+0x1c2>
    a248:	1c22      	adds	r2, r4, #0
    a24a:	2301      	movs	r3, #1
    a24c:	1c28      	adds	r0, r5, #0
    a24e:	9908      	ldr	r1, [sp, #32]
    a250:	321a      	adds	r2, #26
    a252:	9f09      	ldr	r7, [sp, #36]	; 0x24
    a254:	47b8      	blx	r7
    a256:	1c43      	adds	r3, r0, #1
    a258:	d100      	bne.n	a25c <_printf_float+0x2dc>
    a25a:	e772      	b.n	a142 <_printf_float+0x1c2>
    a25c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    a25e:	3301      	adds	r3, #1
    a260:	930d      	str	r3, [sp, #52]	; 0x34
    a262:	43f3      	mvns	r3, r6
    a264:	6da2      	ldr	r2, [r4, #88]	; 0x58
    a266:	17db      	asrs	r3, r3, #31
    a268:	990d      	ldr	r1, [sp, #52]	; 0x34
    a26a:	4033      	ands	r3, r6
    a26c:	1ad3      	subs	r3, r2, r3
    a26e:	4299      	cmp	r1, r3
    a270:	dbea      	blt.n	a248 <_printf_float+0x2c8>
    a272:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a274:	189e      	adds	r6, r3, r2
    a276:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a278:	9a10      	ldr	r2, [sp, #64]	; 0x40
    a27a:	4293      	cmp	r3, r2
    a27c:	db0e      	blt.n	a29c <_printf_float+0x31c>
    a27e:	6823      	ldr	r3, [r4, #0]
    a280:	07db      	lsls	r3, r3, #31
    a282:	d40b      	bmi.n	a29c <_printf_float+0x31c>
    a284:	9b10      	ldr	r3, [sp, #64]	; 0x40
    a286:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a288:	18d7      	adds	r7, r2, r3
    a28a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    a28c:	1bbf      	subs	r7, r7, r6
    a28e:	1a9b      	subs	r3, r3, r2
    a290:	429f      	cmp	r7, r3
    a292:	dd00      	ble.n	a296 <_printf_float+0x316>
    a294:	1c1f      	adds	r7, r3, #0
    a296:	2f00      	cmp	r7, #0
    a298:	dc09      	bgt.n	a2ae <_printf_float+0x32e>
    a29a:	e011      	b.n	a2c0 <_printf_float+0x340>
    a29c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a29e:	1c28      	adds	r0, r5, #0
    a2a0:	9908      	ldr	r1, [sp, #32]
    a2a2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    a2a4:	9f09      	ldr	r7, [sp, #36]	; 0x24
    a2a6:	47b8      	blx	r7
    a2a8:	1c43      	adds	r3, r0, #1
    a2aa:	d1eb      	bne.n	a284 <_printf_float+0x304>
    a2ac:	e749      	b.n	a142 <_printf_float+0x1c2>
    a2ae:	1c32      	adds	r2, r6, #0
    a2b0:	1c3b      	adds	r3, r7, #0
    a2b2:	1c28      	adds	r0, r5, #0
    a2b4:	9908      	ldr	r1, [sp, #32]
    a2b6:	9e09      	ldr	r6, [sp, #36]	; 0x24
    a2b8:	47b0      	blx	r6
    a2ba:	1c43      	adds	r3, r0, #1
    a2bc:	d100      	bne.n	a2c0 <_printf_float+0x340>
    a2be:	e740      	b.n	a142 <_printf_float+0x1c2>
    a2c0:	2300      	movs	r3, #0
    a2c2:	e015      	b.n	a2f0 <_printf_float+0x370>
    a2c4:	0000f6f1 	.word	0x0000f6f1
    a2c8:	0000f6f5 	.word	0x0000f6f5
    a2cc:	0000f6f9 	.word	0x0000f6f9
    a2d0:	0000f6fd 	.word	0x0000f6fd
    a2d4:	0000f74a 	.word	0x0000f74a
    a2d8:	1c22      	adds	r2, r4, #0
    a2da:	2301      	movs	r3, #1
    a2dc:	1c28      	adds	r0, r5, #0
    a2de:	9908      	ldr	r1, [sp, #32]
    a2e0:	321a      	adds	r2, #26
    a2e2:	9e09      	ldr	r6, [sp, #36]	; 0x24
    a2e4:	47b0      	blx	r6
    a2e6:	1c43      	adds	r3, r0, #1
    a2e8:	d100      	bne.n	a2ec <_printf_float+0x36c>
    a2ea:	e72a      	b.n	a142 <_printf_float+0x1c2>
    a2ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a2ee:	3301      	adds	r3, #1
    a2f0:	930a      	str	r3, [sp, #40]	; 0x28
    a2f2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    a2f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
    a2f6:	1a9a      	subs	r2, r3, r2
    a2f8:	43fb      	mvns	r3, r7
    a2fa:	17db      	asrs	r3, r3, #31
    a2fc:	403b      	ands	r3, r7
    a2fe:	1ad3      	subs	r3, r2, r3
    a300:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a302:	429a      	cmp	r2, r3
    a304:	dbe8      	blt.n	a2d8 <_printf_float+0x358>
    a306:	e741      	b.n	a18c <_printf_float+0x20c>
    a308:	9b10      	ldr	r3, [sp, #64]	; 0x40
    a30a:	1c28      	adds	r0, r5, #0
    a30c:	9908      	ldr	r1, [sp, #32]
    a30e:	2b01      	cmp	r3, #1
    a310:	dc02      	bgt.n	a318 <_printf_float+0x398>
    a312:	2301      	movs	r3, #1
    a314:	421a      	tst	r2, r3
    a316:	d03c      	beq.n	a392 <_printf_float+0x412>
    a318:	2301      	movs	r3, #1
    a31a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a31c:	9f09      	ldr	r7, [sp, #36]	; 0x24
    a31e:	47b8      	blx	r7
    a320:	1c43      	adds	r3, r0, #1
    a322:	d100      	bne.n	a326 <_printf_float+0x3a6>
    a324:	e70d      	b.n	a142 <_printf_float+0x1c2>
    a326:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a328:	1c28      	adds	r0, r5, #0
    a32a:	9908      	ldr	r1, [sp, #32]
    a32c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    a32e:	9f09      	ldr	r7, [sp, #36]	; 0x24
    a330:	47b8      	blx	r7
    a332:	1c43      	adds	r3, r0, #1
    a334:	d100      	bne.n	a338 <_printf_float+0x3b8>
    a336:	e704      	b.n	a142 <_printf_float+0x1c2>
    a338:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    a33a:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    a33c:	2300      	movs	r3, #0
    a33e:	2200      	movs	r2, #0
    a340:	f7fc f946 	bl	65d0 <__aeabi_dcmpeq>
    a344:	2300      	movs	r3, #0
    a346:	2800      	cmp	r0, #0
    a348:	d112      	bne.n	a370 <_printf_float+0x3f0>
    a34a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a34c:	9b10      	ldr	r3, [sp, #64]	; 0x40
    a34e:	3201      	adds	r2, #1
    a350:	3b01      	subs	r3, #1
    a352:	1c28      	adds	r0, r5, #0
    a354:	9908      	ldr	r1, [sp, #32]
    a356:	e01d      	b.n	a394 <_printf_float+0x414>
    a358:	1c22      	adds	r2, r4, #0
    a35a:	2301      	movs	r3, #1
    a35c:	1c28      	adds	r0, r5, #0
    a35e:	9908      	ldr	r1, [sp, #32]
    a360:	321a      	adds	r2, #26
    a362:	9f09      	ldr	r7, [sp, #36]	; 0x24
    a364:	47b8      	blx	r7
    a366:	1c43      	adds	r3, r0, #1
    a368:	d100      	bne.n	a36c <_printf_float+0x3ec>
    a36a:	e6ea      	b.n	a142 <_printf_float+0x1c2>
    a36c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a36e:	3301      	adds	r3, #1
    a370:	930a      	str	r3, [sp, #40]	; 0x28
    a372:	9b10      	ldr	r3, [sp, #64]	; 0x40
    a374:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a376:	3b01      	subs	r3, #1
    a378:	429a      	cmp	r2, r3
    a37a:	dbed      	blt.n	a358 <_printf_float+0x3d8>
    a37c:	1c22      	adds	r2, r4, #0
    a37e:	1c28      	adds	r0, r5, #0
    a380:	1c33      	adds	r3, r6, #0
    a382:	9908      	ldr	r1, [sp, #32]
    a384:	3250      	adds	r2, #80	; 0x50
    a386:	9e09      	ldr	r6, [sp, #36]	; 0x24
    a388:	47b0      	blx	r6
    a38a:	1c43      	adds	r3, r0, #1
    a38c:	d000      	beq.n	a390 <_printf_float+0x410>
    a38e:	e6fd      	b.n	a18c <_printf_float+0x20c>
    a390:	e6d7      	b.n	a142 <_printf_float+0x1c2>
    a392:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a394:	9f09      	ldr	r7, [sp, #36]	; 0x24
    a396:	47b8      	blx	r7
    a398:	1c43      	adds	r3, r0, #1
    a39a:	d1ef      	bne.n	a37c <_printf_float+0x3fc>
    a39c:	e6d1      	b.n	a142 <_printf_float+0x1c2>
    a39e:	1c22      	adds	r2, r4, #0
    a3a0:	2301      	movs	r3, #1
    a3a2:	1c28      	adds	r0, r5, #0
    a3a4:	9908      	ldr	r1, [sp, #32]
    a3a6:	3219      	adds	r2, #25
    a3a8:	9f09      	ldr	r7, [sp, #36]	; 0x24
    a3aa:	47b8      	blx	r7
    a3ac:	1c43      	adds	r3, r0, #1
    a3ae:	d100      	bne.n	a3b2 <_printf_float+0x432>
    a3b0:	e6c7      	b.n	a142 <_printf_float+0x1c2>
    a3b2:	3601      	adds	r6, #1
    a3b4:	68e3      	ldr	r3, [r4, #12]
    a3b6:	9a11      	ldr	r2, [sp, #68]	; 0x44
    a3b8:	1a9b      	subs	r3, r3, r2
    a3ba:	429e      	cmp	r6, r3
    a3bc:	dbef      	blt.n	a39e <_printf_float+0x41e>
    a3be:	9b11      	ldr	r3, [sp, #68]	; 0x44
    a3c0:	68e0      	ldr	r0, [r4, #12]
    a3c2:	4298      	cmp	r0, r3
    a3c4:	da17      	bge.n	a3f6 <_printf_float+0x476>
    a3c6:	1c18      	adds	r0, r3, #0
    a3c8:	e015      	b.n	a3f6 <_printf_float+0x476>
    a3ca:	2600      	movs	r6, #0
    a3cc:	e7f2      	b.n	a3b4 <_printf_float+0x434>
    a3ce:	4331      	orrs	r1, r6
    a3d0:	6021      	str	r1, [r4, #0]
    a3d2:	9101      	str	r1, [sp, #4]
    a3d4:	2123      	movs	r1, #35	; 0x23
    a3d6:	9000      	str	r0, [sp, #0]
    a3d8:	a806      	add	r0, sp, #24
    a3da:	1809      	adds	r1, r1, r0
    a3dc:	9102      	str	r1, [sp, #8]
    a3de:	a90f      	add	r1, sp, #60	; 0x3c
    a3e0:	9103      	str	r1, [sp, #12]
    a3e2:	a910      	add	r1, sp, #64	; 0x40
    a3e4:	9105      	str	r1, [sp, #20]
    a3e6:	2100      	movs	r1, #0
    a3e8:	9704      	str	r7, [sp, #16]
    a3ea:	9106      	str	r1, [sp, #24]
    a3ec:	1c28      	adds	r0, r5, #0
    a3ee:	f7ff fd31 	bl	9e54 <__cvt>
    a3f2:	900a      	str	r0, [sp, #40]	; 0x28
    a3f4:	e647      	b.n	a086 <_printf_float+0x106>
    a3f6:	b013      	add	sp, #76	; 0x4c
    a3f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a3fa:	46c0      	nop			; (mov r8, r8)

0000a3fc <_printf_common>:
    a3fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    a3fe:	1c17      	adds	r7, r2, #0
    a400:	9301      	str	r3, [sp, #4]
    a402:	690a      	ldr	r2, [r1, #16]
    a404:	688b      	ldr	r3, [r1, #8]
    a406:	9000      	str	r0, [sp, #0]
    a408:	1c0c      	adds	r4, r1, #0
    a40a:	4293      	cmp	r3, r2
    a40c:	da00      	bge.n	a410 <_printf_common+0x14>
    a40e:	1c13      	adds	r3, r2, #0
    a410:	1c22      	adds	r2, r4, #0
    a412:	603b      	str	r3, [r7, #0]
    a414:	3243      	adds	r2, #67	; 0x43
    a416:	7812      	ldrb	r2, [r2, #0]
    a418:	2a00      	cmp	r2, #0
    a41a:	d001      	beq.n	a420 <_printf_common+0x24>
    a41c:	3301      	adds	r3, #1
    a41e:	603b      	str	r3, [r7, #0]
    a420:	6823      	ldr	r3, [r4, #0]
    a422:	069b      	lsls	r3, r3, #26
    a424:	d502      	bpl.n	a42c <_printf_common+0x30>
    a426:	683b      	ldr	r3, [r7, #0]
    a428:	3302      	adds	r3, #2
    a42a:	603b      	str	r3, [r7, #0]
    a42c:	2506      	movs	r5, #6
    a42e:	6823      	ldr	r3, [r4, #0]
    a430:	401d      	ands	r5, r3
    a432:	d01e      	beq.n	a472 <_printf_common+0x76>
    a434:	1c23      	adds	r3, r4, #0
    a436:	3343      	adds	r3, #67	; 0x43
    a438:	781b      	ldrb	r3, [r3, #0]
    a43a:	1e5a      	subs	r2, r3, #1
    a43c:	4193      	sbcs	r3, r2
    a43e:	6822      	ldr	r2, [r4, #0]
    a440:	0692      	lsls	r2, r2, #26
    a442:	d51c      	bpl.n	a47e <_printf_common+0x82>
    a444:	2030      	movs	r0, #48	; 0x30
    a446:	18e1      	adds	r1, r4, r3
    a448:	3140      	adds	r1, #64	; 0x40
    a44a:	70c8      	strb	r0, [r1, #3]
    a44c:	1c21      	adds	r1, r4, #0
    a44e:	1c5a      	adds	r2, r3, #1
    a450:	3145      	adds	r1, #69	; 0x45
    a452:	7809      	ldrb	r1, [r1, #0]
    a454:	18a2      	adds	r2, r4, r2
    a456:	3240      	adds	r2, #64	; 0x40
    a458:	3302      	adds	r3, #2
    a45a:	70d1      	strb	r1, [r2, #3]
    a45c:	e00f      	b.n	a47e <_printf_common+0x82>
    a45e:	1c22      	adds	r2, r4, #0
    a460:	2301      	movs	r3, #1
    a462:	9800      	ldr	r0, [sp, #0]
    a464:	9901      	ldr	r1, [sp, #4]
    a466:	3219      	adds	r2, #25
    a468:	9e08      	ldr	r6, [sp, #32]
    a46a:	47b0      	blx	r6
    a46c:	1c43      	adds	r3, r0, #1
    a46e:	d00e      	beq.n	a48e <_printf_common+0x92>
    a470:	3501      	adds	r5, #1
    a472:	68e3      	ldr	r3, [r4, #12]
    a474:	683a      	ldr	r2, [r7, #0]
    a476:	1a9b      	subs	r3, r3, r2
    a478:	429d      	cmp	r5, r3
    a47a:	dbf0      	blt.n	a45e <_printf_common+0x62>
    a47c:	e7da      	b.n	a434 <_printf_common+0x38>
    a47e:	1c22      	adds	r2, r4, #0
    a480:	9800      	ldr	r0, [sp, #0]
    a482:	9901      	ldr	r1, [sp, #4]
    a484:	3243      	adds	r2, #67	; 0x43
    a486:	9d08      	ldr	r5, [sp, #32]
    a488:	47a8      	blx	r5
    a48a:	1c43      	adds	r3, r0, #1
    a48c:	d102      	bne.n	a494 <_printf_common+0x98>
    a48e:	2001      	movs	r0, #1
    a490:	4240      	negs	r0, r0
    a492:	e020      	b.n	a4d6 <_printf_common+0xda>
    a494:	2306      	movs	r3, #6
    a496:	6820      	ldr	r0, [r4, #0]
    a498:	68e1      	ldr	r1, [r4, #12]
    a49a:	683a      	ldr	r2, [r7, #0]
    a49c:	4003      	ands	r3, r0
    a49e:	2500      	movs	r5, #0
    a4a0:	2b04      	cmp	r3, #4
    a4a2:	d103      	bne.n	a4ac <_printf_common+0xb0>
    a4a4:	1a8d      	subs	r5, r1, r2
    a4a6:	43eb      	mvns	r3, r5
    a4a8:	17db      	asrs	r3, r3, #31
    a4aa:	401d      	ands	r5, r3
    a4ac:	68a3      	ldr	r3, [r4, #8]
    a4ae:	6922      	ldr	r2, [r4, #16]
    a4b0:	4293      	cmp	r3, r2
    a4b2:	dd01      	ble.n	a4b8 <_printf_common+0xbc>
    a4b4:	1a9b      	subs	r3, r3, r2
    a4b6:	18ed      	adds	r5, r5, r3
    a4b8:	2700      	movs	r7, #0
    a4ba:	42af      	cmp	r7, r5
    a4bc:	da0a      	bge.n	a4d4 <_printf_common+0xd8>
    a4be:	1c22      	adds	r2, r4, #0
    a4c0:	2301      	movs	r3, #1
    a4c2:	9800      	ldr	r0, [sp, #0]
    a4c4:	9901      	ldr	r1, [sp, #4]
    a4c6:	321a      	adds	r2, #26
    a4c8:	9e08      	ldr	r6, [sp, #32]
    a4ca:	47b0      	blx	r6
    a4cc:	1c43      	adds	r3, r0, #1
    a4ce:	d0de      	beq.n	a48e <_printf_common+0x92>
    a4d0:	3701      	adds	r7, #1
    a4d2:	e7f2      	b.n	a4ba <_printf_common+0xbe>
    a4d4:	2000      	movs	r0, #0
    a4d6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0000a4d8 <_printf_i>:
    a4d8:	b5f0      	push	{r4, r5, r6, r7, lr}
    a4da:	b08b      	sub	sp, #44	; 0x2c
    a4dc:	9206      	str	r2, [sp, #24]
    a4de:	1c0a      	adds	r2, r1, #0
    a4e0:	3243      	adds	r2, #67	; 0x43
    a4e2:	9307      	str	r3, [sp, #28]
    a4e4:	9005      	str	r0, [sp, #20]
    a4e6:	9204      	str	r2, [sp, #16]
    a4e8:	7e0a      	ldrb	r2, [r1, #24]
    a4ea:	1c0c      	adds	r4, r1, #0
    a4ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
    a4ee:	2a6e      	cmp	r2, #110	; 0x6e
    a4f0:	d100      	bne.n	a4f4 <_printf_i+0x1c>
    a4f2:	e0a8      	b.n	a646 <_printf_i+0x16e>
    a4f4:	d811      	bhi.n	a51a <_printf_i+0x42>
    a4f6:	2a63      	cmp	r2, #99	; 0x63
    a4f8:	d022      	beq.n	a540 <_printf_i+0x68>
    a4fa:	d809      	bhi.n	a510 <_printf_i+0x38>
    a4fc:	2a00      	cmp	r2, #0
    a4fe:	d100      	bne.n	a502 <_printf_i+0x2a>
    a500:	e0b2      	b.n	a668 <_printf_i+0x190>
    a502:	2a58      	cmp	r2, #88	; 0x58
    a504:	d000      	beq.n	a508 <_printf_i+0x30>
    a506:	e0c2      	b.n	a68e <_printf_i+0x1b6>
    a508:	3145      	adds	r1, #69	; 0x45
    a50a:	700a      	strb	r2, [r1, #0]
    a50c:	4a7c      	ldr	r2, [pc, #496]	; (a700 <_printf_i+0x228>)
    a50e:	e04f      	b.n	a5b0 <_printf_i+0xd8>
    a510:	2a64      	cmp	r2, #100	; 0x64
    a512:	d01d      	beq.n	a550 <_printf_i+0x78>
    a514:	2a69      	cmp	r2, #105	; 0x69
    a516:	d01b      	beq.n	a550 <_printf_i+0x78>
    a518:	e0b9      	b.n	a68e <_printf_i+0x1b6>
    a51a:	2a73      	cmp	r2, #115	; 0x73
    a51c:	d100      	bne.n	a520 <_printf_i+0x48>
    a51e:	e0a7      	b.n	a670 <_printf_i+0x198>
    a520:	d809      	bhi.n	a536 <_printf_i+0x5e>
    a522:	2a6f      	cmp	r2, #111	; 0x6f
    a524:	d029      	beq.n	a57a <_printf_i+0xa2>
    a526:	2a70      	cmp	r2, #112	; 0x70
    a528:	d000      	beq.n	a52c <_printf_i+0x54>
    a52a:	e0b0      	b.n	a68e <_printf_i+0x1b6>
    a52c:	2220      	movs	r2, #32
    a52e:	6809      	ldr	r1, [r1, #0]
    a530:	430a      	orrs	r2, r1
    a532:	6022      	str	r2, [r4, #0]
    a534:	e037      	b.n	a5a6 <_printf_i+0xce>
    a536:	2a75      	cmp	r2, #117	; 0x75
    a538:	d01f      	beq.n	a57a <_printf_i+0xa2>
    a53a:	2a78      	cmp	r2, #120	; 0x78
    a53c:	d033      	beq.n	a5a6 <_printf_i+0xce>
    a53e:	e0a6      	b.n	a68e <_printf_i+0x1b6>
    a540:	1c0e      	adds	r6, r1, #0
    a542:	681a      	ldr	r2, [r3, #0]
    a544:	3642      	adds	r6, #66	; 0x42
    a546:	1d11      	adds	r1, r2, #4
    a548:	6019      	str	r1, [r3, #0]
    a54a:	6813      	ldr	r3, [r2, #0]
    a54c:	7033      	strb	r3, [r6, #0]
    a54e:	e0a1      	b.n	a694 <_printf_i+0x1bc>
    a550:	6821      	ldr	r1, [r4, #0]
    a552:	681a      	ldr	r2, [r3, #0]
    a554:	0608      	lsls	r0, r1, #24
    a556:	d406      	bmi.n	a566 <_printf_i+0x8e>
    a558:	0649      	lsls	r1, r1, #25
    a55a:	d504      	bpl.n	a566 <_printf_i+0x8e>
    a55c:	1d11      	adds	r1, r2, #4
    a55e:	6019      	str	r1, [r3, #0]
    a560:	2300      	movs	r3, #0
    a562:	5ed5      	ldrsh	r5, [r2, r3]
    a564:	e002      	b.n	a56c <_printf_i+0x94>
    a566:	1d11      	adds	r1, r2, #4
    a568:	6019      	str	r1, [r3, #0]
    a56a:	6815      	ldr	r5, [r2, #0]
    a56c:	2d00      	cmp	r5, #0
    a56e:	da3b      	bge.n	a5e8 <_printf_i+0x110>
    a570:	232d      	movs	r3, #45	; 0x2d
    a572:	9a04      	ldr	r2, [sp, #16]
    a574:	426d      	negs	r5, r5
    a576:	7013      	strb	r3, [r2, #0]
    a578:	e036      	b.n	a5e8 <_printf_i+0x110>
    a57a:	6821      	ldr	r1, [r4, #0]
    a57c:	681a      	ldr	r2, [r3, #0]
    a57e:	0608      	lsls	r0, r1, #24
    a580:	d406      	bmi.n	a590 <_printf_i+0xb8>
    a582:	0649      	lsls	r1, r1, #25
    a584:	d504      	bpl.n	a590 <_printf_i+0xb8>
    a586:	6815      	ldr	r5, [r2, #0]
    a588:	1d11      	adds	r1, r2, #4
    a58a:	6019      	str	r1, [r3, #0]
    a58c:	b2ad      	uxth	r5, r5
    a58e:	e002      	b.n	a596 <_printf_i+0xbe>
    a590:	1d11      	adds	r1, r2, #4
    a592:	6019      	str	r1, [r3, #0]
    a594:	6815      	ldr	r5, [r2, #0]
    a596:	4b5a      	ldr	r3, [pc, #360]	; (a700 <_printf_i+0x228>)
    a598:	7e22      	ldrb	r2, [r4, #24]
    a59a:	9303      	str	r3, [sp, #12]
    a59c:	270a      	movs	r7, #10
    a59e:	2a6f      	cmp	r2, #111	; 0x6f
    a5a0:	d11d      	bne.n	a5de <_printf_i+0x106>
    a5a2:	2708      	movs	r7, #8
    a5a4:	e01b      	b.n	a5de <_printf_i+0x106>
    a5a6:	1c22      	adds	r2, r4, #0
    a5a8:	2178      	movs	r1, #120	; 0x78
    a5aa:	3245      	adds	r2, #69	; 0x45
    a5ac:	7011      	strb	r1, [r2, #0]
    a5ae:	4a55      	ldr	r2, [pc, #340]	; (a704 <_printf_i+0x22c>)
    a5b0:	6819      	ldr	r1, [r3, #0]
    a5b2:	9203      	str	r2, [sp, #12]
    a5b4:	1d08      	adds	r0, r1, #4
    a5b6:	6822      	ldr	r2, [r4, #0]
    a5b8:	6018      	str	r0, [r3, #0]
    a5ba:	680d      	ldr	r5, [r1, #0]
    a5bc:	0610      	lsls	r0, r2, #24
    a5be:	d402      	bmi.n	a5c6 <_printf_i+0xee>
    a5c0:	0650      	lsls	r0, r2, #25
    a5c2:	d500      	bpl.n	a5c6 <_printf_i+0xee>
    a5c4:	b2ad      	uxth	r5, r5
    a5c6:	07d3      	lsls	r3, r2, #31
    a5c8:	d502      	bpl.n	a5d0 <_printf_i+0xf8>
    a5ca:	2320      	movs	r3, #32
    a5cc:	431a      	orrs	r2, r3
    a5ce:	6022      	str	r2, [r4, #0]
    a5d0:	2710      	movs	r7, #16
    a5d2:	2d00      	cmp	r5, #0
    a5d4:	d103      	bne.n	a5de <_printf_i+0x106>
    a5d6:	2320      	movs	r3, #32
    a5d8:	6822      	ldr	r2, [r4, #0]
    a5da:	439a      	bics	r2, r3
    a5dc:	6022      	str	r2, [r4, #0]
    a5de:	1c23      	adds	r3, r4, #0
    a5e0:	2200      	movs	r2, #0
    a5e2:	3343      	adds	r3, #67	; 0x43
    a5e4:	701a      	strb	r2, [r3, #0]
    a5e6:	e002      	b.n	a5ee <_printf_i+0x116>
    a5e8:	270a      	movs	r7, #10
    a5ea:	4b45      	ldr	r3, [pc, #276]	; (a700 <_printf_i+0x228>)
    a5ec:	9303      	str	r3, [sp, #12]
    a5ee:	6863      	ldr	r3, [r4, #4]
    a5f0:	60a3      	str	r3, [r4, #8]
    a5f2:	2b00      	cmp	r3, #0
    a5f4:	db03      	blt.n	a5fe <_printf_i+0x126>
    a5f6:	2204      	movs	r2, #4
    a5f8:	6821      	ldr	r1, [r4, #0]
    a5fa:	4391      	bics	r1, r2
    a5fc:	6021      	str	r1, [r4, #0]
    a5fe:	2d00      	cmp	r5, #0
    a600:	d102      	bne.n	a608 <_printf_i+0x130>
    a602:	9e04      	ldr	r6, [sp, #16]
    a604:	2b00      	cmp	r3, #0
    a606:	d00e      	beq.n	a626 <_printf_i+0x14e>
    a608:	9e04      	ldr	r6, [sp, #16]
    a60a:	1c28      	adds	r0, r5, #0
    a60c:	1c39      	adds	r1, r7, #0
    a60e:	f7fb fed3 	bl	63b8 <__aeabi_uidivmod>
    a612:	9b03      	ldr	r3, [sp, #12]
    a614:	3e01      	subs	r6, #1
    a616:	5c5b      	ldrb	r3, [r3, r1]
    a618:	1c28      	adds	r0, r5, #0
    a61a:	7033      	strb	r3, [r6, #0]
    a61c:	1c39      	adds	r1, r7, #0
    a61e:	f7fb fe45 	bl	62ac <__aeabi_uidiv>
    a622:	1e05      	subs	r5, r0, #0
    a624:	d1f1      	bne.n	a60a <_printf_i+0x132>
    a626:	2f08      	cmp	r7, #8
    a628:	d109      	bne.n	a63e <_printf_i+0x166>
    a62a:	6823      	ldr	r3, [r4, #0]
    a62c:	07db      	lsls	r3, r3, #31
    a62e:	d506      	bpl.n	a63e <_printf_i+0x166>
    a630:	6863      	ldr	r3, [r4, #4]
    a632:	6922      	ldr	r2, [r4, #16]
    a634:	4293      	cmp	r3, r2
    a636:	dc02      	bgt.n	a63e <_printf_i+0x166>
    a638:	2330      	movs	r3, #48	; 0x30
    a63a:	3e01      	subs	r6, #1
    a63c:	7033      	strb	r3, [r6, #0]
    a63e:	9b04      	ldr	r3, [sp, #16]
    a640:	1b9b      	subs	r3, r3, r6
    a642:	6123      	str	r3, [r4, #16]
    a644:	e02b      	b.n	a69e <_printf_i+0x1c6>
    a646:	6809      	ldr	r1, [r1, #0]
    a648:	681a      	ldr	r2, [r3, #0]
    a64a:	0608      	lsls	r0, r1, #24
    a64c:	d407      	bmi.n	a65e <_printf_i+0x186>
    a64e:	0649      	lsls	r1, r1, #25
    a650:	d505      	bpl.n	a65e <_printf_i+0x186>
    a652:	1d11      	adds	r1, r2, #4
    a654:	6019      	str	r1, [r3, #0]
    a656:	6813      	ldr	r3, [r2, #0]
    a658:	8aa2      	ldrh	r2, [r4, #20]
    a65a:	801a      	strh	r2, [r3, #0]
    a65c:	e004      	b.n	a668 <_printf_i+0x190>
    a65e:	1d11      	adds	r1, r2, #4
    a660:	6019      	str	r1, [r3, #0]
    a662:	6813      	ldr	r3, [r2, #0]
    a664:	6962      	ldr	r2, [r4, #20]
    a666:	601a      	str	r2, [r3, #0]
    a668:	2300      	movs	r3, #0
    a66a:	9e04      	ldr	r6, [sp, #16]
    a66c:	6123      	str	r3, [r4, #16]
    a66e:	e016      	b.n	a69e <_printf_i+0x1c6>
    a670:	681a      	ldr	r2, [r3, #0]
    a672:	1d11      	adds	r1, r2, #4
    a674:	6019      	str	r1, [r3, #0]
    a676:	6816      	ldr	r6, [r2, #0]
    a678:	2100      	movs	r1, #0
    a67a:	1c30      	adds	r0, r6, #0
    a67c:	6862      	ldr	r2, [r4, #4]
    a67e:	f7ff f9e9 	bl	9a54 <memchr>
    a682:	2800      	cmp	r0, #0
    a684:	d001      	beq.n	a68a <_printf_i+0x1b2>
    a686:	1b80      	subs	r0, r0, r6
    a688:	6060      	str	r0, [r4, #4]
    a68a:	6863      	ldr	r3, [r4, #4]
    a68c:	e003      	b.n	a696 <_printf_i+0x1be>
    a68e:	1c26      	adds	r6, r4, #0
    a690:	3642      	adds	r6, #66	; 0x42
    a692:	7032      	strb	r2, [r6, #0]
    a694:	2301      	movs	r3, #1
    a696:	6123      	str	r3, [r4, #16]
    a698:	2300      	movs	r3, #0
    a69a:	9a04      	ldr	r2, [sp, #16]
    a69c:	7013      	strb	r3, [r2, #0]
    a69e:	9b07      	ldr	r3, [sp, #28]
    a6a0:	9805      	ldr	r0, [sp, #20]
    a6a2:	9300      	str	r3, [sp, #0]
    a6a4:	1c21      	adds	r1, r4, #0
    a6a6:	9b06      	ldr	r3, [sp, #24]
    a6a8:	aa09      	add	r2, sp, #36	; 0x24
    a6aa:	f7ff fea7 	bl	a3fc <_printf_common>
    a6ae:	1c43      	adds	r3, r0, #1
    a6b0:	d102      	bne.n	a6b8 <_printf_i+0x1e0>
    a6b2:	2001      	movs	r0, #1
    a6b4:	4240      	negs	r0, r0
    a6b6:	e021      	b.n	a6fc <_printf_i+0x224>
    a6b8:	6923      	ldr	r3, [r4, #16]
    a6ba:	9805      	ldr	r0, [sp, #20]
    a6bc:	9906      	ldr	r1, [sp, #24]
    a6be:	1c32      	adds	r2, r6, #0
    a6c0:	9d07      	ldr	r5, [sp, #28]
    a6c2:	47a8      	blx	r5
    a6c4:	1c43      	adds	r3, r0, #1
    a6c6:	d0f4      	beq.n	a6b2 <_printf_i+0x1da>
    a6c8:	6823      	ldr	r3, [r4, #0]
    a6ca:	079b      	lsls	r3, r3, #30
    a6cc:	d405      	bmi.n	a6da <_printf_i+0x202>
    a6ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a6d0:	68e0      	ldr	r0, [r4, #12]
    a6d2:	4298      	cmp	r0, r3
    a6d4:	da12      	bge.n	a6fc <_printf_i+0x224>
    a6d6:	1c18      	adds	r0, r3, #0
    a6d8:	e010      	b.n	a6fc <_printf_i+0x224>
    a6da:	2500      	movs	r5, #0
    a6dc:	68e3      	ldr	r3, [r4, #12]
    a6de:	9a09      	ldr	r2, [sp, #36]	; 0x24
    a6e0:	1a9b      	subs	r3, r3, r2
    a6e2:	429d      	cmp	r5, r3
    a6e4:	daf3      	bge.n	a6ce <_printf_i+0x1f6>
    a6e6:	1c22      	adds	r2, r4, #0
    a6e8:	2301      	movs	r3, #1
    a6ea:	9805      	ldr	r0, [sp, #20]
    a6ec:	9906      	ldr	r1, [sp, #24]
    a6ee:	3219      	adds	r2, #25
    a6f0:	9e07      	ldr	r6, [sp, #28]
    a6f2:	47b0      	blx	r6
    a6f4:	1c43      	adds	r3, r0, #1
    a6f6:	d0dc      	beq.n	a6b2 <_printf_i+0x1da>
    a6f8:	3501      	adds	r5, #1
    a6fa:	e7ef      	b.n	a6dc <_printf_i+0x204>
    a6fc:	b00b      	add	sp, #44	; 0x2c
    a6fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    a700:	0000f701 	.word	0x0000f701
    a704:	0000f712 	.word	0x0000f712

0000a708 <_scanf_float>:
    a708:	b5f0      	push	{r4, r5, r6, r7, lr}
    a70a:	1c15      	adds	r5, r2, #0
    a70c:	2200      	movs	r2, #0
    a70e:	b08b      	sub	sp, #44	; 0x2c
    a710:	9306      	str	r3, [sp, #24]
    a712:	688b      	ldr	r3, [r1, #8]
    a714:	9205      	str	r2, [sp, #20]
    a716:	325d      	adds	r2, #93	; 0x5d
    a718:	1c0e      	adds	r6, r1, #0
    a71a:	32ff      	adds	r2, #255	; 0xff
    a71c:	1e59      	subs	r1, r3, #1
    a71e:	9002      	str	r0, [sp, #8]
    a720:	4291      	cmp	r1, r2
    a722:	d905      	bls.n	a730 <_scanf_float+0x28>
    a724:	3b5e      	subs	r3, #94	; 0x5e
    a726:	3bff      	subs	r3, #255	; 0xff
    a728:	9305      	str	r3, [sp, #20]
    a72a:	235e      	movs	r3, #94	; 0x5e
    a72c:	33ff      	adds	r3, #255	; 0xff
    a72e:	60b3      	str	r3, [r6, #8]
    a730:	23f0      	movs	r3, #240	; 0xf0
    a732:	6832      	ldr	r2, [r6, #0]
    a734:	00db      	lsls	r3, r3, #3
    a736:	4313      	orrs	r3, r2
    a738:	6033      	str	r3, [r6, #0]
    a73a:	1c33      	adds	r3, r6, #0
    a73c:	2400      	movs	r4, #0
    a73e:	331c      	adds	r3, #28
    a740:	1c1f      	adds	r7, r3, #0
    a742:	9304      	str	r3, [sp, #16]
    a744:	9403      	str	r4, [sp, #12]
    a746:	9409      	str	r4, [sp, #36]	; 0x24
    a748:	9408      	str	r4, [sp, #32]
    a74a:	9400      	str	r4, [sp, #0]
    a74c:	9407      	str	r4, [sp, #28]
    a74e:	68b2      	ldr	r2, [r6, #8]
    a750:	2a00      	cmp	r2, #0
    a752:	d100      	bne.n	a756 <_scanf_float+0x4e>
    a754:	e0e1      	b.n	a91a <_scanf_float+0x212>
    a756:	682b      	ldr	r3, [r5, #0]
    a758:	781b      	ldrb	r3, [r3, #0]
    a75a:	2b49      	cmp	r3, #73	; 0x49
    a75c:	d077      	beq.n	a84e <_scanf_float+0x146>
    a75e:	d818      	bhi.n	a792 <_scanf_float+0x8a>
    a760:	2b39      	cmp	r3, #57	; 0x39
    a762:	d80d      	bhi.n	a780 <_scanf_float+0x78>
    a764:	2b31      	cmp	r3, #49	; 0x31
    a766:	d242      	bcs.n	a7ee <_scanf_float+0xe6>
    a768:	2b2d      	cmp	r3, #45	; 0x2d
    a76a:	d049      	beq.n	a800 <_scanf_float+0xf8>
    a76c:	d802      	bhi.n	a774 <_scanf_float+0x6c>
    a76e:	2b2b      	cmp	r3, #43	; 0x2b
    a770:	d046      	beq.n	a800 <_scanf_float+0xf8>
    a772:	e0d2      	b.n	a91a <_scanf_float+0x212>
    a774:	2b2e      	cmp	r3, #46	; 0x2e
    a776:	d100      	bne.n	a77a <_scanf_float+0x72>
    a778:	e08d      	b.n	a896 <_scanf_float+0x18e>
    a77a:	2b30      	cmp	r3, #48	; 0x30
    a77c:	d025      	beq.n	a7ca <_scanf_float+0xc2>
    a77e:	e0cc      	b.n	a91a <_scanf_float+0x212>
    a780:	2b45      	cmp	r3, #69	; 0x45
    a782:	d100      	bne.n	a786 <_scanf_float+0x7e>
    a784:	e090      	b.n	a8a8 <_scanf_float+0x1a0>
    a786:	2b46      	cmp	r3, #70	; 0x46
    a788:	d079      	beq.n	a87e <_scanf_float+0x176>
    a78a:	2b41      	cmp	r3, #65	; 0x41
    a78c:	d000      	beq.n	a790 <_scanf_float+0x88>
    a78e:	e0c4      	b.n	a91a <_scanf_float+0x212>
    a790:	e058      	b.n	a844 <_scanf_float+0x13c>
    a792:	2b65      	cmp	r3, #101	; 0x65
    a794:	d100      	bne.n	a798 <_scanf_float+0x90>
    a796:	e087      	b.n	a8a8 <_scanf_float+0x1a0>
    a798:	d80a      	bhi.n	a7b0 <_scanf_float+0xa8>
    a79a:	2b54      	cmp	r3, #84	; 0x54
    a79c:	d073      	beq.n	a886 <_scanf_float+0x17e>
    a79e:	d802      	bhi.n	a7a6 <_scanf_float+0x9e>
    a7a0:	2b4e      	cmp	r3, #78	; 0x4e
    a7a2:	d035      	beq.n	a810 <_scanf_float+0x108>
    a7a4:	e0b9      	b.n	a91a <_scanf_float+0x212>
    a7a6:	2b59      	cmp	r3, #89	; 0x59
    a7a8:	d071      	beq.n	a88e <_scanf_float+0x186>
    a7aa:	2b61      	cmp	r3, #97	; 0x61
    a7ac:	d04a      	beq.n	a844 <_scanf_float+0x13c>
    a7ae:	e0b4      	b.n	a91a <_scanf_float+0x212>
    a7b0:	2b6e      	cmp	r3, #110	; 0x6e
    a7b2:	d02d      	beq.n	a810 <_scanf_float+0x108>
    a7b4:	d804      	bhi.n	a7c0 <_scanf_float+0xb8>
    a7b6:	2b66      	cmp	r3, #102	; 0x66
    a7b8:	d061      	beq.n	a87e <_scanf_float+0x176>
    a7ba:	2b69      	cmp	r3, #105	; 0x69
    a7bc:	d047      	beq.n	a84e <_scanf_float+0x146>
    a7be:	e0ac      	b.n	a91a <_scanf_float+0x212>
    a7c0:	2b74      	cmp	r3, #116	; 0x74
    a7c2:	d060      	beq.n	a886 <_scanf_float+0x17e>
    a7c4:	2b79      	cmp	r3, #121	; 0x79
    a7c6:	d062      	beq.n	a88e <_scanf_float+0x186>
    a7c8:	e0a7      	b.n	a91a <_scanf_float+0x212>
    a7ca:	6831      	ldr	r1, [r6, #0]
    a7cc:	05c8      	lsls	r0, r1, #23
    a7ce:	d50e      	bpl.n	a7ee <_scanf_float+0xe6>
    a7d0:	2380      	movs	r3, #128	; 0x80
    a7d2:	4399      	bics	r1, r3
    a7d4:	9b00      	ldr	r3, [sp, #0]
    a7d6:	6031      	str	r1, [r6, #0]
    a7d8:	3301      	adds	r3, #1
    a7da:	9300      	str	r3, [sp, #0]
    a7dc:	9b05      	ldr	r3, [sp, #20]
    a7de:	2b00      	cmp	r3, #0
    a7e0:	d100      	bne.n	a7e4 <_scanf_float+0xdc>
    a7e2:	e082      	b.n	a8ea <_scanf_float+0x1e2>
    a7e4:	3b01      	subs	r3, #1
    a7e6:	3201      	adds	r2, #1
    a7e8:	9305      	str	r3, [sp, #20]
    a7ea:	60b2      	str	r2, [r6, #8]
    a7ec:	e07d      	b.n	a8ea <_scanf_float+0x1e2>
    a7ee:	9a03      	ldr	r2, [sp, #12]
    a7f0:	1912      	adds	r2, r2, r4
    a7f2:	2a00      	cmp	r2, #0
    a7f4:	d000      	beq.n	a7f8 <_scanf_float+0xf0>
    a7f6:	e090      	b.n	a91a <_scanf_float+0x212>
    a7f8:	4ab3      	ldr	r2, [pc, #716]	; (aac8 <_scanf_float+0x3c0>)
    a7fa:	6831      	ldr	r1, [r6, #0]
    a7fc:	400a      	ands	r2, r1
    a7fe:	e005      	b.n	a80c <_scanf_float+0x104>
    a800:	2180      	movs	r1, #128	; 0x80
    a802:	6832      	ldr	r2, [r6, #0]
    a804:	420a      	tst	r2, r1
    a806:	d100      	bne.n	a80a <_scanf_float+0x102>
    a808:	e087      	b.n	a91a <_scanf_float+0x212>
    a80a:	438a      	bics	r2, r1
    a80c:	6032      	str	r2, [r6, #0]
    a80e:	e06a      	b.n	a8e6 <_scanf_float+0x1de>
    a810:	9a03      	ldr	r2, [sp, #12]
    a812:	2a00      	cmp	r2, #0
    a814:	d10e      	bne.n	a834 <_scanf_float+0x12c>
    a816:	9a00      	ldr	r2, [sp, #0]
    a818:	2a00      	cmp	r2, #0
    a81a:	d10e      	bne.n	a83a <_scanf_float+0x132>
    a81c:	6831      	ldr	r1, [r6, #0]
    a81e:	22e0      	movs	r2, #224	; 0xe0
    a820:	1c08      	adds	r0, r1, #0
    a822:	00d2      	lsls	r2, r2, #3
    a824:	4010      	ands	r0, r2
    a826:	4290      	cmp	r0, r2
    a828:	d107      	bne.n	a83a <_scanf_float+0x132>
    a82a:	4aa8      	ldr	r2, [pc, #672]	; (aacc <_scanf_float+0x3c4>)
    a82c:	400a      	ands	r2, r1
    a82e:	6032      	str	r2, [r6, #0]
    a830:	2201      	movs	r2, #1
    a832:	e057      	b.n	a8e4 <_scanf_float+0x1dc>
    a834:	9a03      	ldr	r2, [sp, #12]
    a836:	2a02      	cmp	r2, #2
    a838:	d053      	beq.n	a8e2 <_scanf_float+0x1da>
    a83a:	2c01      	cmp	r4, #1
    a83c:	d01c      	beq.n	a878 <_scanf_float+0x170>
    a83e:	2c04      	cmp	r4, #4
    a840:	d01a      	beq.n	a878 <_scanf_float+0x170>
    a842:	e06a      	b.n	a91a <_scanf_float+0x212>
    a844:	9a03      	ldr	r2, [sp, #12]
    a846:	2a01      	cmp	r2, #1
    a848:	d167      	bne.n	a91a <_scanf_float+0x212>
    a84a:	2202      	movs	r2, #2
    a84c:	e04a      	b.n	a8e4 <_scanf_float+0x1dc>
    a84e:	2c00      	cmp	r4, #0
    a850:	d10e      	bne.n	a870 <_scanf_float+0x168>
    a852:	9a00      	ldr	r2, [sp, #0]
    a854:	2a00      	cmp	r2, #0
    a856:	d163      	bne.n	a920 <_scanf_float+0x218>
    a858:	6831      	ldr	r1, [r6, #0]
    a85a:	22e0      	movs	r2, #224	; 0xe0
    a85c:	1c08      	adds	r0, r1, #0
    a85e:	00d2      	lsls	r2, r2, #3
    a860:	4010      	ands	r0, r2
    a862:	4290      	cmp	r0, r2
    a864:	d160      	bne.n	a928 <_scanf_float+0x220>
    a866:	4a99      	ldr	r2, [pc, #612]	; (aacc <_scanf_float+0x3c4>)
    a868:	3401      	adds	r4, #1
    a86a:	400a      	ands	r2, r1
    a86c:	6032      	str	r2, [r6, #0]
    a86e:	e03a      	b.n	a8e6 <_scanf_float+0x1de>
    a870:	21fd      	movs	r1, #253	; 0xfd
    a872:	1ee2      	subs	r2, r4, #3
    a874:	420a      	tst	r2, r1
    a876:	d150      	bne.n	a91a <_scanf_float+0x212>
    a878:	3401      	adds	r4, #1
    a87a:	b2e4      	uxtb	r4, r4
    a87c:	e033      	b.n	a8e6 <_scanf_float+0x1de>
    a87e:	2c02      	cmp	r4, #2
    a880:	d14b      	bne.n	a91a <_scanf_float+0x212>
    a882:	2403      	movs	r4, #3
    a884:	e02f      	b.n	a8e6 <_scanf_float+0x1de>
    a886:	2c06      	cmp	r4, #6
    a888:	d147      	bne.n	a91a <_scanf_float+0x212>
    a88a:	2407      	movs	r4, #7
    a88c:	e02b      	b.n	a8e6 <_scanf_float+0x1de>
    a88e:	2c07      	cmp	r4, #7
    a890:	d143      	bne.n	a91a <_scanf_float+0x212>
    a892:	2408      	movs	r4, #8
    a894:	e027      	b.n	a8e6 <_scanf_float+0x1de>
    a896:	6831      	ldr	r1, [r6, #0]
    a898:	058a      	lsls	r2, r1, #22
    a89a:	d53e      	bpl.n	a91a <_scanf_float+0x212>
    a89c:	4a8c      	ldr	r2, [pc, #560]	; (aad0 <_scanf_float+0x3c8>)
    a89e:	400a      	ands	r2, r1
    a8a0:	6032      	str	r2, [r6, #0]
    a8a2:	9a00      	ldr	r2, [sp, #0]
    a8a4:	9207      	str	r2, [sp, #28]
    a8a6:	e01e      	b.n	a8e6 <_scanf_float+0x1de>
    a8a8:	22a0      	movs	r2, #160	; 0xa0
    a8aa:	2080      	movs	r0, #128	; 0x80
    a8ac:	6831      	ldr	r1, [r6, #0]
    a8ae:	00d2      	lsls	r2, r2, #3
    a8b0:	400a      	ands	r2, r1
    a8b2:	00c0      	lsls	r0, r0, #3
    a8b4:	4282      	cmp	r2, r0
    a8b6:	d004      	beq.n	a8c2 <_scanf_float+0x1ba>
    a8b8:	4201      	tst	r1, r0
    a8ba:	d02e      	beq.n	a91a <_scanf_float+0x212>
    a8bc:	9a00      	ldr	r2, [sp, #0]
    a8be:	2a00      	cmp	r2, #0
    a8c0:	d032      	beq.n	a928 <_scanf_float+0x220>
    a8c2:	058a      	lsls	r2, r1, #22
    a8c4:	d404      	bmi.n	a8d0 <_scanf_float+0x1c8>
    a8c6:	9a00      	ldr	r2, [sp, #0]
    a8c8:	9807      	ldr	r0, [sp, #28]
    a8ca:	9709      	str	r7, [sp, #36]	; 0x24
    a8cc:	1a12      	subs	r2, r2, r0
    a8ce:	9208      	str	r2, [sp, #32]
    a8d0:	4a7e      	ldr	r2, [pc, #504]	; (aacc <_scanf_float+0x3c4>)
    a8d2:	400a      	ands	r2, r1
    a8d4:	21c0      	movs	r1, #192	; 0xc0
    a8d6:	0049      	lsls	r1, r1, #1
    a8d8:	430a      	orrs	r2, r1
    a8da:	6032      	str	r2, [r6, #0]
    a8dc:	2200      	movs	r2, #0
    a8de:	9200      	str	r2, [sp, #0]
    a8e0:	e001      	b.n	a8e6 <_scanf_float+0x1de>
    a8e2:	2203      	movs	r2, #3
    a8e4:	9203      	str	r2, [sp, #12]
    a8e6:	703b      	strb	r3, [r7, #0]
    a8e8:	3701      	adds	r7, #1
    a8ea:	68b3      	ldr	r3, [r6, #8]
    a8ec:	3b01      	subs	r3, #1
    a8ee:	60b3      	str	r3, [r6, #8]
    a8f0:	6933      	ldr	r3, [r6, #16]
    a8f2:	3301      	adds	r3, #1
    a8f4:	6133      	str	r3, [r6, #16]
    a8f6:	686b      	ldr	r3, [r5, #4]
    a8f8:	3b01      	subs	r3, #1
    a8fa:	606b      	str	r3, [r5, #4]
    a8fc:	2b00      	cmp	r3, #0
    a8fe:	dd03      	ble.n	a908 <_scanf_float+0x200>
    a900:	682b      	ldr	r3, [r5, #0]
    a902:	3301      	adds	r3, #1
    a904:	602b      	str	r3, [r5, #0]
    a906:	e722      	b.n	a74e <_scanf_float+0x46>
    a908:	23c0      	movs	r3, #192	; 0xc0
    a90a:	005b      	lsls	r3, r3, #1
    a90c:	58f3      	ldr	r3, [r6, r3]
    a90e:	9802      	ldr	r0, [sp, #8]
    a910:	1c29      	adds	r1, r5, #0
    a912:	4798      	blx	r3
    a914:	2800      	cmp	r0, #0
    a916:	d100      	bne.n	a91a <_scanf_float+0x212>
    a918:	e719      	b.n	a74e <_scanf_float+0x46>
    a91a:	9b00      	ldr	r3, [sp, #0]
    a91c:	2b00      	cmp	r3, #0
    a91e:	d003      	beq.n	a928 <_scanf_float+0x220>
    a920:	6832      	ldr	r2, [r6, #0]
    a922:	4b6c      	ldr	r3, [pc, #432]	; (aad4 <_scanf_float+0x3cc>)
    a924:	4013      	ands	r3, r2
    a926:	6033      	str	r3, [r6, #0]
    a928:	9b03      	ldr	r3, [sp, #12]
    a92a:	3b01      	subs	r3, #1
    a92c:	2b01      	cmp	r3, #1
    a92e:	d810      	bhi.n	a952 <_scanf_float+0x24a>
    a930:	9b04      	ldr	r3, [sp, #16]
    a932:	429f      	cmp	r7, r3
    a934:	d90b      	bls.n	a94e <_scanf_float+0x246>
    a936:	23be      	movs	r3, #190	; 0xbe
    a938:	3f01      	subs	r7, #1
    a93a:	005b      	lsls	r3, r3, #1
    a93c:	58f3      	ldr	r3, [r6, r3]
    a93e:	7839      	ldrb	r1, [r7, #0]
    a940:	9802      	ldr	r0, [sp, #8]
    a942:	1c2a      	adds	r2, r5, #0
    a944:	4798      	blx	r3
    a946:	6933      	ldr	r3, [r6, #16]
    a948:	3b01      	subs	r3, #1
    a94a:	6133      	str	r3, [r6, #16]
    a94c:	e7f0      	b.n	a930 <_scanf_float+0x228>
    a94e:	2401      	movs	r4, #1
    a950:	e0b7      	b.n	aac2 <_scanf_float+0x3ba>
    a952:	1e63      	subs	r3, r4, #1
    a954:	2b06      	cmp	r3, #6
    a956:	d82a      	bhi.n	a9ae <_scanf_float+0x2a6>
    a958:	2c02      	cmp	r4, #2
    a95a:	d919      	bls.n	a990 <_scanf_float+0x288>
    a95c:	9405      	str	r4, [sp, #20]
    a95e:	9703      	str	r7, [sp, #12]
    a960:	9b05      	ldr	r3, [sp, #20]
    a962:	3b01      	subs	r3, #1
    a964:	b2db      	uxtb	r3, r3
    a966:	9305      	str	r3, [sp, #20]
    a968:	2b02      	cmp	r3, #2
    a96a:	d00d      	beq.n	a988 <_scanf_float+0x280>
    a96c:	9b03      	ldr	r3, [sp, #12]
    a96e:	9802      	ldr	r0, [sp, #8]
    a970:	3b01      	subs	r3, #1
    a972:	9303      	str	r3, [sp, #12]
    a974:	7819      	ldrb	r1, [r3, #0]
    a976:	23be      	movs	r3, #190	; 0xbe
    a978:	005b      	lsls	r3, r3, #1
    a97a:	58f3      	ldr	r3, [r6, r3]
    a97c:	1c2a      	adds	r2, r5, #0
    a97e:	4798      	blx	r3
    a980:	6933      	ldr	r3, [r6, #16]
    a982:	3b01      	subs	r3, #1
    a984:	6133      	str	r3, [r6, #16]
    a986:	e7eb      	b.n	a960 <_scanf_float+0x258>
    a988:	3c03      	subs	r4, #3
    a98a:	b2e4      	uxtb	r4, r4
    a98c:	1b3f      	subs	r7, r7, r4
    a98e:	e00e      	b.n	a9ae <_scanf_float+0x2a6>
    a990:	9b04      	ldr	r3, [sp, #16]
    a992:	429f      	cmp	r7, r3
    a994:	d9db      	bls.n	a94e <_scanf_float+0x246>
    a996:	23be      	movs	r3, #190	; 0xbe
    a998:	3f01      	subs	r7, #1
    a99a:	005b      	lsls	r3, r3, #1
    a99c:	58f3      	ldr	r3, [r6, r3]
    a99e:	7839      	ldrb	r1, [r7, #0]
    a9a0:	9802      	ldr	r0, [sp, #8]
    a9a2:	1c2a      	adds	r2, r5, #0
    a9a4:	4798      	blx	r3
    a9a6:	6933      	ldr	r3, [r6, #16]
    a9a8:	3b01      	subs	r3, #1
    a9aa:	6133      	str	r3, [r6, #16]
    a9ac:	e7f0      	b.n	a990 <_scanf_float+0x288>
    a9ae:	6833      	ldr	r3, [r6, #0]
    a9b0:	05da      	lsls	r2, r3, #23
    a9b2:	d52b      	bpl.n	aa0c <_scanf_float+0x304>
    a9b4:	055b      	lsls	r3, r3, #21
    a9b6:	d50e      	bpl.n	a9d6 <_scanf_float+0x2ce>
    a9b8:	9b04      	ldr	r3, [sp, #16]
    a9ba:	429f      	cmp	r7, r3
    a9bc:	d9c7      	bls.n	a94e <_scanf_float+0x246>
    a9be:	23be      	movs	r3, #190	; 0xbe
    a9c0:	3f01      	subs	r7, #1
    a9c2:	005b      	lsls	r3, r3, #1
    a9c4:	58f3      	ldr	r3, [r6, r3]
    a9c6:	7839      	ldrb	r1, [r7, #0]
    a9c8:	9802      	ldr	r0, [sp, #8]
    a9ca:	1c2a      	adds	r2, r5, #0
    a9cc:	4798      	blx	r3
    a9ce:	6933      	ldr	r3, [r6, #16]
    a9d0:	3b01      	subs	r3, #1
    a9d2:	6133      	str	r3, [r6, #16]
    a9d4:	e7f0      	b.n	a9b8 <_scanf_float+0x2b0>
    a9d6:	6933      	ldr	r3, [r6, #16]
    a9d8:	1e7c      	subs	r4, r7, #1
    a9da:	7821      	ldrb	r1, [r4, #0]
    a9dc:	3b01      	subs	r3, #1
    a9de:	6133      	str	r3, [r6, #16]
    a9e0:	2965      	cmp	r1, #101	; 0x65
    a9e2:	d00c      	beq.n	a9fe <_scanf_float+0x2f6>
    a9e4:	2945      	cmp	r1, #69	; 0x45
    a9e6:	d00a      	beq.n	a9fe <_scanf_float+0x2f6>
    a9e8:	23be      	movs	r3, #190	; 0xbe
    a9ea:	005b      	lsls	r3, r3, #1
    a9ec:	58f3      	ldr	r3, [r6, r3]
    a9ee:	9802      	ldr	r0, [sp, #8]
    a9f0:	1c2a      	adds	r2, r5, #0
    a9f2:	4798      	blx	r3
    a9f4:	6933      	ldr	r3, [r6, #16]
    a9f6:	1ebc      	subs	r4, r7, #2
    a9f8:	3b01      	subs	r3, #1
    a9fa:	7821      	ldrb	r1, [r4, #0]
    a9fc:	6133      	str	r3, [r6, #16]
    a9fe:	23be      	movs	r3, #190	; 0xbe
    aa00:	005b      	lsls	r3, r3, #1
    aa02:	58f3      	ldr	r3, [r6, r3]
    aa04:	9802      	ldr	r0, [sp, #8]
    aa06:	1c2a      	adds	r2, r5, #0
    aa08:	4798      	blx	r3
    aa0a:	1c27      	adds	r7, r4, #0
    aa0c:	2410      	movs	r4, #16
    aa0e:	6833      	ldr	r3, [r6, #0]
    aa10:	401c      	ands	r4, r3
    aa12:	d155      	bne.n	aac0 <_scanf_float+0x3b8>
    aa14:	23c0      	movs	r3, #192	; 0xc0
    aa16:	703c      	strb	r4, [r7, #0]
    aa18:	6832      	ldr	r2, [r6, #0]
    aa1a:	00db      	lsls	r3, r3, #3
    aa1c:	4013      	ands	r3, r2
    aa1e:	2280      	movs	r2, #128	; 0x80
    aa20:	00d2      	lsls	r2, r2, #3
    aa22:	4293      	cmp	r3, r2
    aa24:	d106      	bne.n	aa34 <_scanf_float+0x32c>
    aa26:	9a07      	ldr	r2, [sp, #28]
    aa28:	9b00      	ldr	r3, [sp, #0]
    aa2a:	1a9b      	subs	r3, r3, r2
    aa2c:	425a      	negs	r2, r3
    aa2e:	2b00      	cmp	r3, #0
    aa30:	d10d      	bne.n	aa4e <_scanf_float+0x346>
    aa32:	e018      	b.n	aa66 <_scanf_float+0x35e>
    aa34:	9b08      	ldr	r3, [sp, #32]
    aa36:	2b00      	cmp	r3, #0
    aa38:	d015      	beq.n	aa66 <_scanf_float+0x35e>
    aa3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    aa3c:	1c22      	adds	r2, r4, #0
    aa3e:	1c59      	adds	r1, r3, #1
    aa40:	9802      	ldr	r0, [sp, #8]
    aa42:	230a      	movs	r3, #10
    aa44:	f001 fa38 	bl	beb8 <_strtol_r>
    aa48:	9b08      	ldr	r3, [sp, #32]
    aa4a:	9f09      	ldr	r7, [sp, #36]	; 0x24
    aa4c:	1ac2      	subs	r2, r0, r3
    aa4e:	1c33      	adds	r3, r6, #0
    aa50:	3370      	adds	r3, #112	; 0x70
    aa52:	33ff      	adds	r3, #255	; 0xff
    aa54:	429f      	cmp	r7, r3
    aa56:	d302      	bcc.n	aa5e <_scanf_float+0x356>
    aa58:	1c37      	adds	r7, r6, #0
    aa5a:	376f      	adds	r7, #111	; 0x6f
    aa5c:	37ff      	adds	r7, #255	; 0xff
    aa5e:	1c38      	adds	r0, r7, #0
    aa60:	491d      	ldr	r1, [pc, #116]	; (aad8 <_scanf_float+0x3d0>)
    aa62:	f000 fb13 	bl	b08c <siprintf>
    aa66:	2200      	movs	r2, #0
    aa68:	9802      	ldr	r0, [sp, #8]
    aa6a:	9904      	ldr	r1, [sp, #16]
    aa6c:	f000 fc0a 	bl	b284 <_strtod_r>
    aa70:	9b06      	ldr	r3, [sp, #24]
    aa72:	6832      	ldr	r2, [r6, #0]
    aa74:	9000      	str	r0, [sp, #0]
    aa76:	9101      	str	r1, [sp, #4]
    aa78:	681b      	ldr	r3, [r3, #0]
    aa7a:	0791      	lsls	r1, r2, #30
    aa7c:	d401      	bmi.n	aa82 <_scanf_float+0x37a>
    aa7e:	0752      	lsls	r2, r2, #29
    aa80:	d508      	bpl.n	aa94 <_scanf_float+0x38c>
    aa82:	9906      	ldr	r1, [sp, #24]
    aa84:	1d1a      	adds	r2, r3, #4
    aa86:	600a      	str	r2, [r1, #0]
    aa88:	681b      	ldr	r3, [r3, #0]
    aa8a:	9900      	ldr	r1, [sp, #0]
    aa8c:	9a01      	ldr	r2, [sp, #4]
    aa8e:	6019      	str	r1, [r3, #0]
    aa90:	605a      	str	r2, [r3, #4]
    aa92:	e011      	b.n	aab8 <_scanf_float+0x3b0>
    aa94:	9906      	ldr	r1, [sp, #24]
    aa96:	1d1a      	adds	r2, r3, #4
    aa98:	600a      	str	r2, [r1, #0]
    aa9a:	9800      	ldr	r0, [sp, #0]
    aa9c:	9901      	ldr	r1, [sp, #4]
    aa9e:	681d      	ldr	r5, [r3, #0]
    aaa0:	f000 f9f4 	bl	ae8c <__fpclassifyd>
    aaa4:	2800      	cmp	r0, #0
    aaa6:	d102      	bne.n	aaae <_scanf_float+0x3a6>
    aaa8:	f000 faec 	bl	b084 <nanf>
    aaac:	e003      	b.n	aab6 <_scanf_float+0x3ae>
    aaae:	9800      	ldr	r0, [sp, #0]
    aab0:	9901      	ldr	r1, [sp, #4]
    aab2:	f7fe fb7d 	bl	91b0 <__aeabi_d2f>
    aab6:	6028      	str	r0, [r5, #0]
    aab8:	68f3      	ldr	r3, [r6, #12]
    aaba:	3301      	adds	r3, #1
    aabc:	60f3      	str	r3, [r6, #12]
    aabe:	e000      	b.n	aac2 <_scanf_float+0x3ba>
    aac0:	2400      	movs	r4, #0
    aac2:	1c20      	adds	r0, r4, #0
    aac4:	b00b      	add	sp, #44	; 0x2c
    aac6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    aac8:	fffffe7f 	.word	0xfffffe7f
    aacc:	fffff87f 	.word	0xfffff87f
    aad0:	fffffd7f 	.word	0xfffffd7f
    aad4:	fffffeff 	.word	0xfffffeff
    aad8:	0000f723 	.word	0x0000f723

0000aadc <_scanf_chars>:
    aadc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    aade:	1c15      	adds	r5, r2, #0
    aae0:	688a      	ldr	r2, [r1, #8]
    aae2:	9001      	str	r0, [sp, #4]
    aae4:	1c0c      	adds	r4, r1, #0
    aae6:	2a00      	cmp	r2, #0
    aae8:	d106      	bne.n	aaf8 <_scanf_chars+0x1c>
    aaea:	698a      	ldr	r2, [r1, #24]
    aaec:	1e51      	subs	r1, r2, #1
    aaee:	418a      	sbcs	r2, r1
    aaf0:	2101      	movs	r1, #1
    aaf2:	4252      	negs	r2, r2
    aaf4:	430a      	orrs	r2, r1
    aaf6:	60a2      	str	r2, [r4, #8]
    aaf8:	6822      	ldr	r2, [r4, #0]
    aafa:	06d2      	lsls	r2, r2, #27
    aafc:	d403      	bmi.n	ab06 <_scanf_chars+0x2a>
    aafe:	681a      	ldr	r2, [r3, #0]
    ab00:	1d11      	adds	r1, r2, #4
    ab02:	6019      	str	r1, [r3, #0]
    ab04:	6817      	ldr	r7, [r2, #0]
    ab06:	2600      	movs	r6, #0
    ab08:	69a0      	ldr	r0, [r4, #24]
    ab0a:	2800      	cmp	r0, #0
    ab0c:	d11d      	bne.n	ab4a <_scanf_chars+0x6e>
    ab0e:	6823      	ldr	r3, [r4, #0]
    ab10:	3601      	adds	r6, #1
    ab12:	06db      	lsls	r3, r3, #27
    ab14:	d403      	bmi.n	ab1e <_scanf_chars+0x42>
    ab16:	682b      	ldr	r3, [r5, #0]
    ab18:	781b      	ldrb	r3, [r3, #0]
    ab1a:	703b      	strb	r3, [r7, #0]
    ab1c:	3701      	adds	r7, #1
    ab1e:	682a      	ldr	r2, [r5, #0]
    ab20:	686b      	ldr	r3, [r5, #4]
    ab22:	3201      	adds	r2, #1
    ab24:	602a      	str	r2, [r5, #0]
    ab26:	68a2      	ldr	r2, [r4, #8]
    ab28:	3b01      	subs	r3, #1
    ab2a:	3a01      	subs	r2, #1
    ab2c:	606b      	str	r3, [r5, #4]
    ab2e:	60a2      	str	r2, [r4, #8]
    ab30:	2a00      	cmp	r2, #0
    ab32:	d01f      	beq.n	ab74 <_scanf_chars+0x98>
    ab34:	2b00      	cmp	r3, #0
    ab36:	dce7      	bgt.n	ab08 <_scanf_chars+0x2c>
    ab38:	23c0      	movs	r3, #192	; 0xc0
    ab3a:	005b      	lsls	r3, r3, #1
    ab3c:	58e3      	ldr	r3, [r4, r3]
    ab3e:	9801      	ldr	r0, [sp, #4]
    ab40:	1c29      	adds	r1, r5, #0
    ab42:	4798      	blx	r3
    ab44:	2800      	cmp	r0, #0
    ab46:	d0df      	beq.n	ab08 <_scanf_chars+0x2c>
    ab48:	e014      	b.n	ab74 <_scanf_chars+0x98>
    ab4a:	2801      	cmp	r0, #1
    ab4c:	d108      	bne.n	ab60 <_scanf_chars+0x84>
    ab4e:	682b      	ldr	r3, [r5, #0]
    ab50:	6962      	ldr	r2, [r4, #20]
    ab52:	781b      	ldrb	r3, [r3, #0]
    ab54:	5cd3      	ldrb	r3, [r2, r3]
    ab56:	2b00      	cmp	r3, #0
    ab58:	d1d9      	bne.n	ab0e <_scanf_chars+0x32>
    ab5a:	2e00      	cmp	r6, #0
    ab5c:	d019      	beq.n	ab92 <_scanf_chars+0xb6>
    ab5e:	e009      	b.n	ab74 <_scanf_chars+0x98>
    ab60:	2802      	cmp	r0, #2
    ab62:	d107      	bne.n	ab74 <_scanf_chars+0x98>
    ab64:	682b      	ldr	r3, [r5, #0]
    ab66:	4a0b      	ldr	r2, [pc, #44]	; (ab94 <_scanf_chars+0xb8>)
    ab68:	781b      	ldrb	r3, [r3, #0]
    ab6a:	6812      	ldr	r2, [r2, #0]
    ab6c:	18d3      	adds	r3, r2, r3
    ab6e:	785b      	ldrb	r3, [r3, #1]
    ab70:	071b      	lsls	r3, r3, #28
    ab72:	d5cc      	bpl.n	ab0e <_scanf_chars+0x32>
    ab74:	2310      	movs	r3, #16
    ab76:	6822      	ldr	r2, [r4, #0]
    ab78:	4013      	ands	r3, r2
    ab7a:	d106      	bne.n	ab8a <_scanf_chars+0xae>
    ab7c:	68e2      	ldr	r2, [r4, #12]
    ab7e:	3201      	adds	r2, #1
    ab80:	60e2      	str	r2, [r4, #12]
    ab82:	69a2      	ldr	r2, [r4, #24]
    ab84:	2a00      	cmp	r2, #0
    ab86:	d000      	beq.n	ab8a <_scanf_chars+0xae>
    ab88:	703b      	strb	r3, [r7, #0]
    ab8a:	2000      	movs	r0, #0
    ab8c:	6923      	ldr	r3, [r4, #16]
    ab8e:	199e      	adds	r6, r3, r6
    ab90:	6126      	str	r6, [r4, #16]
    ab92:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    ab94:	20000138 	.word	0x20000138

0000ab98 <_scanf_i>:
    ab98:	b5f0      	push	{r4, r5, r6, r7, lr}
    ab9a:	1c0c      	adds	r4, r1, #0
    ab9c:	b08b      	sub	sp, #44	; 0x2c
    ab9e:	9301      	str	r3, [sp, #4]
    aba0:	4b74      	ldr	r3, [pc, #464]	; (ad74 <_scanf_i+0x1dc>)
    aba2:	9004      	str	r0, [sp, #16]
    aba4:	1c16      	adds	r6, r2, #0
    aba6:	aa07      	add	r2, sp, #28
    aba8:	cb23      	ldmia	r3!, {r0, r1, r5}
    abaa:	c223      	stmia	r2!, {r0, r1, r5}
    abac:	4b72      	ldr	r3, [pc, #456]	; (ad78 <_scanf_i+0x1e0>)
    abae:	9305      	str	r3, [sp, #20]
    abb0:	69a3      	ldr	r3, [r4, #24]
    abb2:	2b03      	cmp	r3, #3
    abb4:	d001      	beq.n	abba <_scanf_i+0x22>
    abb6:	4b71      	ldr	r3, [pc, #452]	; (ad7c <_scanf_i+0x1e4>)
    abb8:	9305      	str	r3, [sp, #20]
    abba:	2200      	movs	r2, #0
    abbc:	68a3      	ldr	r3, [r4, #8]
    abbe:	9203      	str	r2, [sp, #12]
    abc0:	325d      	adds	r2, #93	; 0x5d
    abc2:	1e59      	subs	r1, r3, #1
    abc4:	32ff      	adds	r2, #255	; 0xff
    abc6:	4291      	cmp	r1, r2
    abc8:	d905      	bls.n	abd6 <_scanf_i+0x3e>
    abca:	3b5e      	subs	r3, #94	; 0x5e
    abcc:	3bff      	subs	r3, #255	; 0xff
    abce:	9303      	str	r3, [sp, #12]
    abd0:	235e      	movs	r3, #94	; 0x5e
    abd2:	33ff      	adds	r3, #255	; 0xff
    abd4:	60a3      	str	r3, [r4, #8]
    abd6:	1c23      	adds	r3, r4, #0
    abd8:	331c      	adds	r3, #28
    abda:	9300      	str	r3, [sp, #0]
    abdc:	23d0      	movs	r3, #208	; 0xd0
    abde:	2700      	movs	r7, #0
    abe0:	6822      	ldr	r2, [r4, #0]
    abe2:	011b      	lsls	r3, r3, #4
    abe4:	4313      	orrs	r3, r2
    abe6:	6023      	str	r3, [r4, #0]
    abe8:	9b00      	ldr	r3, [sp, #0]
    abea:	9302      	str	r3, [sp, #8]
    abec:	6832      	ldr	r2, [r6, #0]
    abee:	00bb      	lsls	r3, r7, #2
    abf0:	7811      	ldrb	r1, [r2, #0]
    abf2:	aa07      	add	r2, sp, #28
    abf4:	5898      	ldr	r0, [r3, r2]
    abf6:	2202      	movs	r2, #2
    abf8:	f7fe ff2c 	bl	9a54 <memchr>
    abfc:	2800      	cmp	r0, #0
    abfe:	d039      	beq.n	ac74 <_scanf_i+0xdc>
    ac00:	2f01      	cmp	r7, #1
    ac02:	d10d      	bne.n	ac20 <_scanf_i+0x88>
    ac04:	6863      	ldr	r3, [r4, #4]
    ac06:	2b00      	cmp	r3, #0
    ac08:	d106      	bne.n	ac18 <_scanf_i+0x80>
    ac0a:	3308      	adds	r3, #8
    ac0c:	6822      	ldr	r2, [r4, #0]
    ac0e:	6063      	str	r3, [r4, #4]
    ac10:	33f9      	adds	r3, #249	; 0xf9
    ac12:	33ff      	adds	r3, #255	; 0xff
    ac14:	4313      	orrs	r3, r2
    ac16:	6023      	str	r3, [r4, #0]
    ac18:	4b59      	ldr	r3, [pc, #356]	; (ad80 <_scanf_i+0x1e8>)
    ac1a:	6822      	ldr	r2, [r4, #0]
    ac1c:	4013      	ands	r3, r2
    ac1e:	e00d      	b.n	ac3c <_scanf_i+0xa4>
    ac20:	2f02      	cmp	r7, #2
    ac22:	d10c      	bne.n	ac3e <_scanf_i+0xa6>
    ac24:	22c0      	movs	r2, #192	; 0xc0
    ac26:	2180      	movs	r1, #128	; 0x80
    ac28:	6823      	ldr	r3, [r4, #0]
    ac2a:	00d2      	lsls	r2, r2, #3
    ac2c:	401a      	ands	r2, r3
    ac2e:	0089      	lsls	r1, r1, #2
    ac30:	428a      	cmp	r2, r1
    ac32:	d122      	bne.n	ac7a <_scanf_i+0xe2>
    ac34:	2210      	movs	r2, #16
    ac36:	6062      	str	r2, [r4, #4]
    ac38:	32f0      	adds	r2, #240	; 0xf0
    ac3a:	4313      	orrs	r3, r2
    ac3c:	6023      	str	r3, [r4, #0]
    ac3e:	68a3      	ldr	r3, [r4, #8]
    ac40:	1e5a      	subs	r2, r3, #1
    ac42:	60a2      	str	r2, [r4, #8]
    ac44:	2b00      	cmp	r3, #0
    ac46:	d015      	beq.n	ac74 <_scanf_i+0xdc>
    ac48:	9b02      	ldr	r3, [sp, #8]
    ac4a:	1c5d      	adds	r5, r3, #1
    ac4c:	6833      	ldr	r3, [r6, #0]
    ac4e:	1c5a      	adds	r2, r3, #1
    ac50:	6032      	str	r2, [r6, #0]
    ac52:	781b      	ldrb	r3, [r3, #0]
    ac54:	9a02      	ldr	r2, [sp, #8]
    ac56:	9502      	str	r5, [sp, #8]
    ac58:	7013      	strb	r3, [r2, #0]
    ac5a:	6873      	ldr	r3, [r6, #4]
    ac5c:	3b01      	subs	r3, #1
    ac5e:	6073      	str	r3, [r6, #4]
    ac60:	2b00      	cmp	r3, #0
    ac62:	dc07      	bgt.n	ac74 <_scanf_i+0xdc>
    ac64:	23c0      	movs	r3, #192	; 0xc0
    ac66:	005b      	lsls	r3, r3, #1
    ac68:	58e3      	ldr	r3, [r4, r3]
    ac6a:	9804      	ldr	r0, [sp, #16]
    ac6c:	1c31      	adds	r1, r6, #0
    ac6e:	4798      	blx	r3
    ac70:	2800      	cmp	r0, #0
    ac72:	d144      	bne.n	acfe <_scanf_i+0x166>
    ac74:	3701      	adds	r7, #1
    ac76:	2f03      	cmp	r7, #3
    ac78:	d1b8      	bne.n	abec <_scanf_i+0x54>
    ac7a:	6863      	ldr	r3, [r4, #4]
    ac7c:	2b00      	cmp	r3, #0
    ac7e:	d101      	bne.n	ac84 <_scanf_i+0xec>
    ac80:	330a      	adds	r3, #10
    ac82:	6063      	str	r3, [r4, #4]
    ac84:	2110      	movs	r1, #16
    ac86:	2700      	movs	r7, #0
    ac88:	6863      	ldr	r3, [r4, #4]
    ac8a:	6960      	ldr	r0, [r4, #20]
    ac8c:	1ac9      	subs	r1, r1, r3
    ac8e:	4b3d      	ldr	r3, [pc, #244]	; (ad84 <_scanf_i+0x1ec>)
    ac90:	18c9      	adds	r1, r1, r3
    ac92:	f000 f935 	bl	af00 <__sccl>
    ac96:	9d02      	ldr	r5, [sp, #8]
    ac98:	68a3      	ldr	r3, [r4, #8]
    ac9a:	2b00      	cmp	r3, #0
    ac9c:	d030      	beq.n	ad00 <_scanf_i+0x168>
    ac9e:	6832      	ldr	r2, [r6, #0]
    aca0:	6960      	ldr	r0, [r4, #20]
    aca2:	7811      	ldrb	r1, [r2, #0]
    aca4:	5c40      	ldrb	r0, [r0, r1]
    aca6:	2800      	cmp	r0, #0
    aca8:	d02a      	beq.n	ad00 <_scanf_i+0x168>
    acaa:	2930      	cmp	r1, #48	; 0x30
    acac:	d10b      	bne.n	acc6 <_scanf_i+0x12e>
    acae:	6821      	ldr	r1, [r4, #0]
    acb0:	0509      	lsls	r1, r1, #20
    acb2:	d508      	bpl.n	acc6 <_scanf_i+0x12e>
    acb4:	9a03      	ldr	r2, [sp, #12]
    acb6:	3701      	adds	r7, #1
    acb8:	2a00      	cmp	r2, #0
    acba:	d00b      	beq.n	acd4 <_scanf_i+0x13c>
    acbc:	3a01      	subs	r2, #1
    acbe:	3301      	adds	r3, #1
    acc0:	9203      	str	r2, [sp, #12]
    acc2:	60a3      	str	r3, [r4, #8]
    acc4:	e006      	b.n	acd4 <_scanf_i+0x13c>
    acc6:	6821      	ldr	r1, [r4, #0]
    acc8:	4b2f      	ldr	r3, [pc, #188]	; (ad88 <_scanf_i+0x1f0>)
    acca:	400b      	ands	r3, r1
    accc:	6023      	str	r3, [r4, #0]
    acce:	7813      	ldrb	r3, [r2, #0]
    acd0:	702b      	strb	r3, [r5, #0]
    acd2:	3501      	adds	r5, #1
    acd4:	6873      	ldr	r3, [r6, #4]
    acd6:	3b01      	subs	r3, #1
    acd8:	6073      	str	r3, [r6, #4]
    acda:	2b00      	cmp	r3, #0
    acdc:	dd03      	ble.n	ace6 <_scanf_i+0x14e>
    acde:	6833      	ldr	r3, [r6, #0]
    ace0:	3301      	adds	r3, #1
    ace2:	6033      	str	r3, [r6, #0]
    ace4:	e007      	b.n	acf6 <_scanf_i+0x15e>
    ace6:	23c0      	movs	r3, #192	; 0xc0
    ace8:	005b      	lsls	r3, r3, #1
    acea:	58e3      	ldr	r3, [r4, r3]
    acec:	9804      	ldr	r0, [sp, #16]
    acee:	1c31      	adds	r1, r6, #0
    acf0:	4798      	blx	r3
    acf2:	2800      	cmp	r0, #0
    acf4:	d104      	bne.n	ad00 <_scanf_i+0x168>
    acf6:	68a3      	ldr	r3, [r4, #8]
    acf8:	3b01      	subs	r3, #1
    acfa:	60a3      	str	r3, [r4, #8]
    acfc:	e7cc      	b.n	ac98 <_scanf_i+0x100>
    acfe:	2700      	movs	r7, #0
    ad00:	6823      	ldr	r3, [r4, #0]
    ad02:	05db      	lsls	r3, r3, #23
    ad04:	d50e      	bpl.n	ad24 <_scanf_i+0x18c>
    ad06:	9b00      	ldr	r3, [sp, #0]
    ad08:	429d      	cmp	r5, r3
    ad0a:	d907      	bls.n	ad1c <_scanf_i+0x184>
    ad0c:	23be      	movs	r3, #190	; 0xbe
    ad0e:	3d01      	subs	r5, #1
    ad10:	005b      	lsls	r3, r3, #1
    ad12:	7829      	ldrb	r1, [r5, #0]
    ad14:	58e3      	ldr	r3, [r4, r3]
    ad16:	9804      	ldr	r0, [sp, #16]
    ad18:	1c32      	adds	r2, r6, #0
    ad1a:	4798      	blx	r3
    ad1c:	9b00      	ldr	r3, [sp, #0]
    ad1e:	2001      	movs	r0, #1
    ad20:	429d      	cmp	r5, r3
    ad22:	d025      	beq.n	ad70 <_scanf_i+0x1d8>
    ad24:	2210      	movs	r2, #16
    ad26:	6823      	ldr	r3, [r4, #0]
    ad28:	401a      	ands	r2, r3
    ad2a:	d11a      	bne.n	ad62 <_scanf_i+0x1ca>
    ad2c:	702a      	strb	r2, [r5, #0]
    ad2e:	6863      	ldr	r3, [r4, #4]
    ad30:	9804      	ldr	r0, [sp, #16]
    ad32:	9900      	ldr	r1, [sp, #0]
    ad34:	9e05      	ldr	r6, [sp, #20]
    ad36:	47b0      	blx	r6
    ad38:	9b01      	ldr	r3, [sp, #4]
    ad3a:	6822      	ldr	r2, [r4, #0]
    ad3c:	681b      	ldr	r3, [r3, #0]
    ad3e:	0691      	lsls	r1, r2, #26
    ad40:	d407      	bmi.n	ad52 <_scanf_i+0x1ba>
    ad42:	07d1      	lsls	r1, r2, #31
    ad44:	d505      	bpl.n	ad52 <_scanf_i+0x1ba>
    ad46:	9901      	ldr	r1, [sp, #4]
    ad48:	1d1a      	adds	r2, r3, #4
    ad4a:	600a      	str	r2, [r1, #0]
    ad4c:	681b      	ldr	r3, [r3, #0]
    ad4e:	8018      	strh	r0, [r3, #0]
    ad50:	e004      	b.n	ad5c <_scanf_i+0x1c4>
    ad52:	9901      	ldr	r1, [sp, #4]
    ad54:	1d1a      	adds	r2, r3, #4
    ad56:	600a      	str	r2, [r1, #0]
    ad58:	681b      	ldr	r3, [r3, #0]
    ad5a:	6018      	str	r0, [r3, #0]
    ad5c:	68e3      	ldr	r3, [r4, #12]
    ad5e:	3301      	adds	r3, #1
    ad60:	60e3      	str	r3, [r4, #12]
    ad62:	2000      	movs	r0, #0
    ad64:	9b00      	ldr	r3, [sp, #0]
    ad66:	1aed      	subs	r5, r5, r3
    ad68:	6923      	ldr	r3, [r4, #16]
    ad6a:	19ed      	adds	r5, r5, r7
    ad6c:	195d      	adds	r5, r3, r5
    ad6e:	6125      	str	r5, [r4, #16]
    ad70:	b00b      	add	sp, #44	; 0x2c
    ad72:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ad74:	0000f728 	.word	0x0000f728
    ad78:	0000beb9 	.word	0x0000beb9
    ad7c:	0000bfd9 	.word	0x0000bfd9
    ad80:	fffffaff 	.word	0xfffffaff
    ad84:	0000f734 	.word	0x0000f734
    ad88:	fffff6ff 	.word	0xfffff6ff

0000ad8c <_open_r>:
    ad8c:	b538      	push	{r3, r4, r5, lr}
    ad8e:	1c05      	adds	r5, r0, #0
    ad90:	2000      	movs	r0, #0
    ad92:	4c07      	ldr	r4, [pc, #28]	; (adb0 <_open_r+0x24>)
    ad94:	6020      	str	r0, [r4, #0]
    ad96:	1c08      	adds	r0, r1, #0
    ad98:	1c11      	adds	r1, r2, #0
    ad9a:	1c1a      	adds	r2, r3, #0
    ad9c:	f7f8 fe0a 	bl	39b4 <_open>
    ada0:	1c43      	adds	r3, r0, #1
    ada2:	d103      	bne.n	adac <_open_r+0x20>
    ada4:	6823      	ldr	r3, [r4, #0]
    ada6:	2b00      	cmp	r3, #0
    ada8:	d000      	beq.n	adac <_open_r+0x20>
    adaa:	602b      	str	r3, [r5, #0]
    adac:	bd38      	pop	{r3, r4, r5, pc}
    adae:	46c0      	nop			; (mov r8, r8)
    adb0:	200046b0 	.word	0x200046b0

0000adb4 <_puts_r>:
    adb4:	b570      	push	{r4, r5, r6, lr}
    adb6:	1c05      	adds	r5, r0, #0
    adb8:	1c0e      	adds	r6, r1, #0
    adba:	2800      	cmp	r0, #0
    adbc:	d004      	beq.n	adc8 <_puts_r+0x14>
    adbe:	6983      	ldr	r3, [r0, #24]
    adc0:	2b00      	cmp	r3, #0
    adc2:	d101      	bne.n	adc8 <_puts_r+0x14>
    adc4:	f7fe fc3a 	bl	963c <__sinit>
    adc8:	68ac      	ldr	r4, [r5, #8]
    adca:	89a3      	ldrh	r3, [r4, #12]
    adcc:	071b      	lsls	r3, r3, #28
    adce:	d502      	bpl.n	add6 <_puts_r+0x22>
    add0:	6923      	ldr	r3, [r4, #16]
    add2:	2b00      	cmp	r3, #0
    add4:	d119      	bne.n	ae0a <_puts_r+0x56>
    add6:	1c28      	adds	r0, r5, #0
    add8:	1c21      	adds	r1, r4, #0
    adda:	f001 fa29 	bl	c230 <__swsetup_r>
    adde:	2800      	cmp	r0, #0
    ade0:	d013      	beq.n	ae0a <_puts_r+0x56>
    ade2:	2001      	movs	r0, #1
    ade4:	4240      	negs	r0, r0
    ade6:	e045      	b.n	ae74 <_puts_r+0xc0>
    ade8:	7831      	ldrb	r1, [r6, #0]
    adea:	2b00      	cmp	r3, #0
    adec:	da1b      	bge.n	ae26 <_puts_r+0x72>
    adee:	69a2      	ldr	r2, [r4, #24]
    adf0:	4293      	cmp	r3, r2
    adf2:	da11      	bge.n	ae18 <_puts_r+0x64>
    adf4:	1c22      	adds	r2, r4, #0
    adf6:	1c28      	adds	r0, r5, #0
    adf8:	f001 f9ae 	bl	c158 <__swbuf_r>
    adfc:	3001      	adds	r0, #1
    adfe:	4242      	negs	r2, r0
    ae00:	4142      	adcs	r2, r0
    ae02:	b2d0      	uxtb	r0, r2
    ae04:	2800      	cmp	r0, #0
    ae06:	d1ec      	bne.n	ade2 <_puts_r+0x2e>
    ae08:	3601      	adds	r6, #1
    ae0a:	68a3      	ldr	r3, [r4, #8]
    ae0c:	7832      	ldrb	r2, [r6, #0]
    ae0e:	3b01      	subs	r3, #1
    ae10:	60a3      	str	r3, [r4, #8]
    ae12:	2a00      	cmp	r2, #0
    ae14:	d1e8      	bne.n	ade8 <_puts_r+0x34>
    ae16:	e00c      	b.n	ae32 <_puts_r+0x7e>
    ae18:	6823      	ldr	r3, [r4, #0]
    ae1a:	7019      	strb	r1, [r3, #0]
    ae1c:	6823      	ldr	r3, [r4, #0]
    ae1e:	7819      	ldrb	r1, [r3, #0]
    ae20:	290a      	cmp	r1, #10
    ae22:	d103      	bne.n	ae2c <_puts_r+0x78>
    ae24:	e7e6      	b.n	adf4 <_puts_r+0x40>
    ae26:	6823      	ldr	r3, [r4, #0]
    ae28:	7019      	strb	r1, [r3, #0]
    ae2a:	6823      	ldr	r3, [r4, #0]
    ae2c:	3301      	adds	r3, #1
    ae2e:	6023      	str	r3, [r4, #0]
    ae30:	e7ea      	b.n	ae08 <_puts_r+0x54>
    ae32:	2b00      	cmp	r3, #0
    ae34:	da17      	bge.n	ae66 <_puts_r+0xb2>
    ae36:	69a2      	ldr	r2, [r4, #24]
    ae38:	4293      	cmp	r3, r2
    ae3a:	db08      	blt.n	ae4e <_puts_r+0x9a>
    ae3c:	230a      	movs	r3, #10
    ae3e:	6822      	ldr	r2, [r4, #0]
    ae40:	7013      	strb	r3, [r2, #0]
    ae42:	6823      	ldr	r3, [r4, #0]
    ae44:	7819      	ldrb	r1, [r3, #0]
    ae46:	290a      	cmp	r1, #10
    ae48:	d111      	bne.n	ae6e <_puts_r+0xba>
    ae4a:	1c28      	adds	r0, r5, #0
    ae4c:	e001      	b.n	ae52 <_puts_r+0x9e>
    ae4e:	1c28      	adds	r0, r5, #0
    ae50:	210a      	movs	r1, #10
    ae52:	1c22      	adds	r2, r4, #0
    ae54:	f001 f980 	bl	c158 <__swbuf_r>
    ae58:	3001      	adds	r0, #1
    ae5a:	4242      	negs	r2, r0
    ae5c:	4142      	adcs	r2, r0
    ae5e:	b2d0      	uxtb	r0, r2
    ae60:	2800      	cmp	r0, #0
    ae62:	d006      	beq.n	ae72 <_puts_r+0xbe>
    ae64:	e7bd      	b.n	ade2 <_puts_r+0x2e>
    ae66:	230a      	movs	r3, #10
    ae68:	6822      	ldr	r2, [r4, #0]
    ae6a:	7013      	strb	r3, [r2, #0]
    ae6c:	6823      	ldr	r3, [r4, #0]
    ae6e:	3301      	adds	r3, #1
    ae70:	6023      	str	r3, [r4, #0]
    ae72:	200a      	movs	r0, #10
    ae74:	bd70      	pop	{r4, r5, r6, pc}
	...

0000ae78 <puts>:
    ae78:	b508      	push	{r3, lr}
    ae7a:	4b03      	ldr	r3, [pc, #12]	; (ae88 <puts+0x10>)
    ae7c:	1c01      	adds	r1, r0, #0
    ae7e:	6818      	ldr	r0, [r3, #0]
    ae80:	f7ff ff98 	bl	adb4 <_puts_r>
    ae84:	bd08      	pop	{r3, pc}
    ae86:	46c0      	nop			; (mov r8, r8)
    ae88:	20000134 	.word	0x20000134

0000ae8c <__fpclassifyd>:
    ae8c:	b530      	push	{r4, r5, lr}
    ae8e:	1c0c      	adds	r4, r1, #0
    ae90:	2302      	movs	r3, #2
    ae92:	4304      	orrs	r4, r0
    ae94:	d017      	beq.n	aec6 <__fpclassifyd+0x3a>
    ae96:	2480      	movs	r4, #128	; 0x80
    ae98:	0624      	lsls	r4, r4, #24
    ae9a:	42a1      	cmp	r1, r4
    ae9c:	d101      	bne.n	aea2 <__fpclassifyd+0x16>
    ae9e:	2800      	cmp	r0, #0
    aea0:	d011      	beq.n	aec6 <__fpclassifyd+0x3a>
    aea2:	4b0a      	ldr	r3, [pc, #40]	; (aecc <__fpclassifyd+0x40>)
    aea4:	0049      	lsls	r1, r1, #1
    aea6:	0849      	lsrs	r1, r1, #1
    aea8:	4a09      	ldr	r2, [pc, #36]	; (aed0 <__fpclassifyd+0x44>)
    aeaa:	18cc      	adds	r4, r1, r3
    aeac:	2304      	movs	r3, #4
    aeae:	4294      	cmp	r4, r2
    aeb0:	d909      	bls.n	aec6 <__fpclassifyd+0x3a>
    aeb2:	4a08      	ldr	r2, [pc, #32]	; (aed4 <__fpclassifyd+0x48>)
    aeb4:	3b01      	subs	r3, #1
    aeb6:	4291      	cmp	r1, r2
    aeb8:	d905      	bls.n	aec6 <__fpclassifyd+0x3a>
    aeba:	4a07      	ldr	r2, [pc, #28]	; (aed8 <__fpclassifyd+0x4c>)
    aebc:	2300      	movs	r3, #0
    aebe:	4291      	cmp	r1, r2
    aec0:	d101      	bne.n	aec6 <__fpclassifyd+0x3a>
    aec2:	4243      	negs	r3, r0
    aec4:	4143      	adcs	r3, r0
    aec6:	1c18      	adds	r0, r3, #0
    aec8:	bd30      	pop	{r4, r5, pc}
    aeca:	46c0      	nop			; (mov r8, r8)
    aecc:	fff00000 	.word	0xfff00000
    aed0:	7fdfffff 	.word	0x7fdfffff
    aed4:	000fffff 	.word	0x000fffff
    aed8:	7ff00000 	.word	0x7ff00000

0000aedc <_sbrk_r>:
    aedc:	b538      	push	{r3, r4, r5, lr}
    aede:	2300      	movs	r3, #0
    aee0:	4c06      	ldr	r4, [pc, #24]	; (aefc <_sbrk_r+0x20>)
    aee2:	1c05      	adds	r5, r0, #0
    aee4:	1c08      	adds	r0, r1, #0
    aee6:	6023      	str	r3, [r4, #0]
    aee8:	f7f8 fe8c 	bl	3c04 <_sbrk>
    aeec:	1c43      	adds	r3, r0, #1
    aeee:	d103      	bne.n	aef8 <_sbrk_r+0x1c>
    aef0:	6823      	ldr	r3, [r4, #0]
    aef2:	2b00      	cmp	r3, #0
    aef4:	d000      	beq.n	aef8 <_sbrk_r+0x1c>
    aef6:	602b      	str	r3, [r5, #0]
    aef8:	bd38      	pop	{r3, r4, r5, pc}
    aefa:	46c0      	nop			; (mov r8, r8)
    aefc:	200046b0 	.word	0x200046b0

0000af00 <__sccl>:
    af00:	b5f0      	push	{r4, r5, r6, r7, lr}
    af02:	780a      	ldrb	r2, [r1, #0]
    af04:	2a5e      	cmp	r2, #94	; 0x5e
    af06:	d002      	beq.n	af0e <__sccl+0xe>
    af08:	1c4b      	adds	r3, r1, #1
    af0a:	2400      	movs	r4, #0
    af0c:	e002      	b.n	af14 <__sccl+0x14>
    af0e:	2401      	movs	r4, #1
    af10:	784a      	ldrb	r2, [r1, #1]
    af12:	1c8b      	adds	r3, r1, #2
    af14:	1c01      	adds	r1, r0, #0
    af16:	1c45      	adds	r5, r0, #1
    af18:	35ff      	adds	r5, #255	; 0xff
    af1a:	700c      	strb	r4, [r1, #0]
    af1c:	3101      	adds	r1, #1
    af1e:	42a9      	cmp	r1, r5
    af20:	d1fb      	bne.n	af1a <__sccl+0x1a>
    af22:	2a00      	cmp	r2, #0
    af24:	d101      	bne.n	af2a <__sccl+0x2a>
    af26:	1e58      	subs	r0, r3, #1
    af28:	e01c      	b.n	af64 <__sccl+0x64>
    af2a:	2101      	movs	r1, #1
    af2c:	1b0c      	subs	r4, r1, r4
    af2e:	b2e7      	uxtb	r7, r4
    af30:	5487      	strb	r7, [r0, r2]
    af32:	7819      	ldrb	r1, [r3, #0]
    af34:	1c5e      	adds	r6, r3, #1
    af36:	292d      	cmp	r1, #45	; 0x2d
    af38:	d006      	beq.n	af48 <__sccl+0x48>
    af3a:	295d      	cmp	r1, #93	; 0x5d
    af3c:	d00f      	beq.n	af5e <__sccl+0x5e>
    af3e:	2900      	cmp	r1, #0
    af40:	d00f      	beq.n	af62 <__sccl+0x62>
    af42:	1c0a      	adds	r2, r1, #0
    af44:	1c33      	adds	r3, r6, #0
    af46:	e7f2      	b.n	af2e <__sccl+0x2e>
    af48:	785d      	ldrb	r5, [r3, #1]
    af4a:	2d5d      	cmp	r5, #93	; 0x5d
    af4c:	d0f9      	beq.n	af42 <__sccl+0x42>
    af4e:	4295      	cmp	r5, r2
    af50:	dbf7      	blt.n	af42 <__sccl+0x42>
    af52:	3302      	adds	r3, #2
    af54:	3201      	adds	r2, #1
    af56:	5487      	strb	r7, [r0, r2]
    af58:	42aa      	cmp	r2, r5
    af5a:	dbfb      	blt.n	af54 <__sccl+0x54>
    af5c:	e7e9      	b.n	af32 <__sccl+0x32>
    af5e:	1c30      	adds	r0, r6, #0
    af60:	e000      	b.n	af64 <__sccl+0x64>
    af62:	1c18      	adds	r0, r3, #0
    af64:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000af66 <setbuf>:
    af66:	b508      	push	{r3, lr}
    af68:	424a      	negs	r2, r1
    af6a:	414a      	adcs	r2, r1
    af6c:	2380      	movs	r3, #128	; 0x80
    af6e:	0052      	lsls	r2, r2, #1
    af70:	00db      	lsls	r3, r3, #3
    af72:	f000 f801 	bl	af78 <setvbuf>
    af76:	bd08      	pop	{r3, pc}

0000af78 <setvbuf>:
    af78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    af7a:	1c1e      	adds	r6, r3, #0
    af7c:	4b3c      	ldr	r3, [pc, #240]	; (b070 <setvbuf+0xf8>)
    af7e:	1c04      	adds	r4, r0, #0
    af80:	681d      	ldr	r5, [r3, #0]
    af82:	1c0f      	adds	r7, r1, #0
    af84:	9201      	str	r2, [sp, #4]
    af86:	2d00      	cmp	r5, #0
    af88:	d005      	beq.n	af96 <setvbuf+0x1e>
    af8a:	69ab      	ldr	r3, [r5, #24]
    af8c:	2b00      	cmp	r3, #0
    af8e:	d102      	bne.n	af96 <setvbuf+0x1e>
    af90:	1c28      	adds	r0, r5, #0
    af92:	f7fe fb53 	bl	963c <__sinit>
    af96:	4b37      	ldr	r3, [pc, #220]	; (b074 <setvbuf+0xfc>)
    af98:	429c      	cmp	r4, r3
    af9a:	d101      	bne.n	afa0 <setvbuf+0x28>
    af9c:	686c      	ldr	r4, [r5, #4]
    af9e:	e008      	b.n	afb2 <setvbuf+0x3a>
    afa0:	4b35      	ldr	r3, [pc, #212]	; (b078 <setvbuf+0x100>)
    afa2:	429c      	cmp	r4, r3
    afa4:	d101      	bne.n	afaa <setvbuf+0x32>
    afa6:	68ac      	ldr	r4, [r5, #8]
    afa8:	e003      	b.n	afb2 <setvbuf+0x3a>
    afaa:	4b34      	ldr	r3, [pc, #208]	; (b07c <setvbuf+0x104>)
    afac:	429c      	cmp	r4, r3
    afae:	d100      	bne.n	afb2 <setvbuf+0x3a>
    afb0:	68ec      	ldr	r4, [r5, #12]
    afb2:	9b01      	ldr	r3, [sp, #4]
    afb4:	2b02      	cmp	r3, #2
    afb6:	d858      	bhi.n	b06a <setvbuf+0xf2>
    afb8:	2e00      	cmp	r6, #0
    afba:	db56      	blt.n	b06a <setvbuf+0xf2>
    afbc:	1c28      	adds	r0, r5, #0
    afbe:	1c21      	adds	r1, r4, #0
    afc0:	f7fe faba 	bl	9538 <_fflush_r>
    afc4:	2300      	movs	r3, #0
    afc6:	6063      	str	r3, [r4, #4]
    afc8:	61a3      	str	r3, [r4, #24]
    afca:	89a3      	ldrh	r3, [r4, #12]
    afcc:	061b      	lsls	r3, r3, #24
    afce:	d503      	bpl.n	afd8 <setvbuf+0x60>
    afd0:	1c28      	adds	r0, r5, #0
    afd2:	6921      	ldr	r1, [r4, #16]
    afd4:	f7fe fd5a 	bl	9a8c <_free_r>
    afd8:	2283      	movs	r2, #131	; 0x83
    afda:	89a3      	ldrh	r3, [r4, #12]
    afdc:	4393      	bics	r3, r2
    afde:	81a3      	strh	r3, [r4, #12]
    afe0:	9b01      	ldr	r3, [sp, #4]
    afe2:	2b02      	cmp	r3, #2
    afe4:	d013      	beq.n	b00e <setvbuf+0x96>
    afe6:	2f00      	cmp	r7, #0
    afe8:	d125      	bne.n	b036 <setvbuf+0xbe>
    afea:	2e00      	cmp	r6, #0
    afec:	d101      	bne.n	aff2 <setvbuf+0x7a>
    afee:	2680      	movs	r6, #128	; 0x80
    aff0:	00f6      	lsls	r6, r6, #3
    aff2:	1c30      	adds	r0, r6, #0
    aff4:	f7fe fd1a 	bl	9a2c <malloc>
    aff8:	1e07      	subs	r7, r0, #0
    affa:	d118      	bne.n	b02e <setvbuf+0xb6>
    affc:	2080      	movs	r0, #128	; 0x80
    affe:	00c0      	lsls	r0, r0, #3
    b000:	f7fe fd14 	bl	9a2c <malloc>
    b004:	1e07      	subs	r7, r0, #0
    b006:	d110      	bne.n	b02a <setvbuf+0xb2>
    b008:	2001      	movs	r0, #1
    b00a:	4240      	negs	r0, r0
    b00c:	e000      	b.n	b010 <setvbuf+0x98>
    b00e:	2000      	movs	r0, #0
    b010:	2202      	movs	r2, #2
    b012:	89a3      	ldrh	r3, [r4, #12]
    b014:	4313      	orrs	r3, r2
    b016:	81a3      	strh	r3, [r4, #12]
    b018:	2300      	movs	r3, #0
    b01a:	60a3      	str	r3, [r4, #8]
    b01c:	1c23      	adds	r3, r4, #0
    b01e:	3347      	adds	r3, #71	; 0x47
    b020:	6023      	str	r3, [r4, #0]
    b022:	6123      	str	r3, [r4, #16]
    b024:	2301      	movs	r3, #1
    b026:	6163      	str	r3, [r4, #20]
    b028:	e021      	b.n	b06e <setvbuf+0xf6>
    b02a:	2680      	movs	r6, #128	; 0x80
    b02c:	00f6      	lsls	r6, r6, #3
    b02e:	2280      	movs	r2, #128	; 0x80
    b030:	89a3      	ldrh	r3, [r4, #12]
    b032:	4313      	orrs	r3, r2
    b034:	81a3      	strh	r3, [r4, #12]
    b036:	9b01      	ldr	r3, [sp, #4]
    b038:	2b01      	cmp	r3, #1
    b03a:	d105      	bne.n	b048 <setvbuf+0xd0>
    b03c:	89a3      	ldrh	r3, [r4, #12]
    b03e:	9a01      	ldr	r2, [sp, #4]
    b040:	431a      	orrs	r2, r3
    b042:	4273      	negs	r3, r6
    b044:	81a2      	strh	r2, [r4, #12]
    b046:	61a3      	str	r3, [r4, #24]
    b048:	4b0d      	ldr	r3, [pc, #52]	; (b080 <setvbuf+0x108>)
    b04a:	2000      	movs	r0, #0
    b04c:	62ab      	str	r3, [r5, #40]	; 0x28
    b04e:	89a2      	ldrh	r2, [r4, #12]
    b050:	6027      	str	r7, [r4, #0]
    b052:	6127      	str	r7, [r4, #16]
    b054:	6166      	str	r6, [r4, #20]
    b056:	0713      	lsls	r3, r2, #28
    b058:	d509      	bpl.n	b06e <setvbuf+0xf6>
    b05a:	2303      	movs	r3, #3
    b05c:	401a      	ands	r2, r3
    b05e:	4253      	negs	r3, r2
    b060:	4153      	adcs	r3, r2
    b062:	425b      	negs	r3, r3
    b064:	401e      	ands	r6, r3
    b066:	60a6      	str	r6, [r4, #8]
    b068:	e001      	b.n	b06e <setvbuf+0xf6>
    b06a:	2001      	movs	r0, #1
    b06c:	4240      	negs	r0, r0
    b06e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    b070:	20000134 	.word	0x20000134
    b074:	0000f678 	.word	0x0000f678
    b078:	0000f698 	.word	0x0000f698
    b07c:	0000f6b8 	.word	0x0000f6b8
    b080:	000095b9 	.word	0x000095b9

0000b084 <nanf>:
    b084:	4800      	ldr	r0, [pc, #0]	; (b088 <nanf+0x4>)
    b086:	4770      	bx	lr
    b088:	7fc00000 	.word	0x7fc00000

0000b08c <siprintf>:
    b08c:	b40e      	push	{r1, r2, r3}
    b08e:	b510      	push	{r4, lr}
    b090:	b09d      	sub	sp, #116	; 0x74
    b092:	a902      	add	r1, sp, #8
    b094:	9002      	str	r0, [sp, #8]
    b096:	6108      	str	r0, [r1, #16]
    b098:	480b      	ldr	r0, [pc, #44]	; (b0c8 <siprintf+0x3c>)
    b09a:	2482      	movs	r4, #130	; 0x82
    b09c:	6088      	str	r0, [r1, #8]
    b09e:	6148      	str	r0, [r1, #20]
    b0a0:	2001      	movs	r0, #1
    b0a2:	4240      	negs	r0, r0
    b0a4:	ab1f      	add	r3, sp, #124	; 0x7c
    b0a6:	81c8      	strh	r0, [r1, #14]
    b0a8:	4808      	ldr	r0, [pc, #32]	; (b0cc <siprintf+0x40>)
    b0aa:	cb04      	ldmia	r3!, {r2}
    b0ac:	00a4      	lsls	r4, r4, #2
    b0ae:	6800      	ldr	r0, [r0, #0]
    b0b0:	9301      	str	r3, [sp, #4]
    b0b2:	818c      	strh	r4, [r1, #12]
    b0b4:	f003 f802 	bl	e0bc <_svfiprintf_r>
    b0b8:	2300      	movs	r3, #0
    b0ba:	9a02      	ldr	r2, [sp, #8]
    b0bc:	7013      	strb	r3, [r2, #0]
    b0be:	b01d      	add	sp, #116	; 0x74
    b0c0:	bc10      	pop	{r4}
    b0c2:	bc08      	pop	{r3}
    b0c4:	b003      	add	sp, #12
    b0c6:	4718      	bx	r3
    b0c8:	7fffffff 	.word	0x7fffffff
    b0cc:	20000134 	.word	0x20000134

0000b0d0 <siscanf>:
    b0d0:	b40e      	push	{r1, r2, r3}
    b0d2:	2381      	movs	r3, #129	; 0x81
    b0d4:	b570      	push	{r4, r5, r6, lr}
    b0d6:	b09d      	sub	sp, #116	; 0x74
    b0d8:	ac02      	add	r4, sp, #8
    b0da:	ad21      	add	r5, sp, #132	; 0x84
    b0dc:	009b      	lsls	r3, r3, #2
    b0de:	cd40      	ldmia	r5!, {r6}
    b0e0:	81a3      	strh	r3, [r4, #12]
    b0e2:	9002      	str	r0, [sp, #8]
    b0e4:	9006      	str	r0, [sp, #24]
    b0e6:	f000 f873 	bl	b1d0 <strlen>
    b0ea:	4b0b      	ldr	r3, [pc, #44]	; (b118 <siscanf+0x48>)
    b0ec:	6060      	str	r0, [r4, #4]
    b0ee:	6263      	str	r3, [r4, #36]	; 0x24
    b0f0:	2300      	movs	r3, #0
    b0f2:	6363      	str	r3, [r4, #52]	; 0x34
    b0f4:	64a3      	str	r3, [r4, #72]	; 0x48
    b0f6:	3b01      	subs	r3, #1
    b0f8:	81e3      	strh	r3, [r4, #14]
    b0fa:	4b08      	ldr	r3, [pc, #32]	; (b11c <siscanf+0x4c>)
    b0fc:	6160      	str	r0, [r4, #20]
    b0fe:	1c21      	adds	r1, r4, #0
    b100:	6818      	ldr	r0, [r3, #0]
    b102:	1c32      	adds	r2, r6, #0
    b104:	1c2b      	adds	r3, r5, #0
    b106:	9501      	str	r5, [sp, #4]
    b108:	f003 f92a 	bl	e360 <__ssvfiscanf_r>
    b10c:	b01d      	add	sp, #116	; 0x74
    b10e:	bc70      	pop	{r4, r5, r6}
    b110:	bc08      	pop	{r3}
    b112:	b003      	add	sp, #12
    b114:	4718      	bx	r3
    b116:	46c0      	nop			; (mov r8, r8)
    b118:	0000b149 	.word	0x0000b149
    b11c:	20000134 	.word	0x20000134

0000b120 <__sread>:
    b120:	b538      	push	{r3, r4, r5, lr}
    b122:	1c0c      	adds	r4, r1, #0
    b124:	250e      	movs	r5, #14
    b126:	5f49      	ldrsh	r1, [r1, r5]
    b128:	f003 fa92 	bl	e650 <_read_r>
    b12c:	2800      	cmp	r0, #0
    b12e:	db03      	blt.n	b138 <__sread+0x18>
    b130:	6d63      	ldr	r3, [r4, #84]	; 0x54
    b132:	181b      	adds	r3, r3, r0
    b134:	6563      	str	r3, [r4, #84]	; 0x54
    b136:	e003      	b.n	b140 <__sread+0x20>
    b138:	89a2      	ldrh	r2, [r4, #12]
    b13a:	4b02      	ldr	r3, [pc, #8]	; (b144 <__sread+0x24>)
    b13c:	4013      	ands	r3, r2
    b13e:	81a3      	strh	r3, [r4, #12]
    b140:	bd38      	pop	{r3, r4, r5, pc}
    b142:	46c0      	nop			; (mov r8, r8)
    b144:	ffffefff 	.word	0xffffefff

0000b148 <__seofread>:
    b148:	2000      	movs	r0, #0
    b14a:	4770      	bx	lr

0000b14c <__swrite>:
    b14c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    b14e:	1c1e      	adds	r6, r3, #0
    b150:	898b      	ldrh	r3, [r1, #12]
    b152:	1c05      	adds	r5, r0, #0
    b154:	1c0c      	adds	r4, r1, #0
    b156:	1c17      	adds	r7, r2, #0
    b158:	05db      	lsls	r3, r3, #23
    b15a:	d505      	bpl.n	b168 <__swrite+0x1c>
    b15c:	230e      	movs	r3, #14
    b15e:	5ec9      	ldrsh	r1, [r1, r3]
    b160:	2200      	movs	r2, #0
    b162:	2302      	movs	r3, #2
    b164:	f002 faea 	bl	d73c <_lseek_r>
    b168:	89a2      	ldrh	r2, [r4, #12]
    b16a:	4b05      	ldr	r3, [pc, #20]	; (b180 <__swrite+0x34>)
    b16c:	1c28      	adds	r0, r5, #0
    b16e:	4013      	ands	r3, r2
    b170:	81a3      	strh	r3, [r4, #12]
    b172:	1c3a      	adds	r2, r7, #0
    b174:	230e      	movs	r3, #14
    b176:	5ee1      	ldrsh	r1, [r4, r3]
    b178:	1c33      	adds	r3, r6, #0
    b17a:	f001 f845 	bl	c208 <_write_r>
    b17e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    b180:	ffffefff 	.word	0xffffefff

0000b184 <__sseek>:
    b184:	b538      	push	{r3, r4, r5, lr}
    b186:	1c0c      	adds	r4, r1, #0
    b188:	250e      	movs	r5, #14
    b18a:	5f49      	ldrsh	r1, [r1, r5]
    b18c:	f002 fad6 	bl	d73c <_lseek_r>
    b190:	89a3      	ldrh	r3, [r4, #12]
    b192:	1c42      	adds	r2, r0, #1
    b194:	d103      	bne.n	b19e <__sseek+0x1a>
    b196:	4a05      	ldr	r2, [pc, #20]	; (b1ac <__sseek+0x28>)
    b198:	4013      	ands	r3, r2
    b19a:	81a3      	strh	r3, [r4, #12]
    b19c:	e004      	b.n	b1a8 <__sseek+0x24>
    b19e:	2280      	movs	r2, #128	; 0x80
    b1a0:	0152      	lsls	r2, r2, #5
    b1a2:	4313      	orrs	r3, r2
    b1a4:	81a3      	strh	r3, [r4, #12]
    b1a6:	6560      	str	r0, [r4, #84]	; 0x54
    b1a8:	bd38      	pop	{r3, r4, r5, pc}
    b1aa:	46c0      	nop			; (mov r8, r8)
    b1ac:	ffffefff 	.word	0xffffefff

0000b1b0 <__sclose>:
    b1b0:	b508      	push	{r3, lr}
    b1b2:	230e      	movs	r3, #14
    b1b4:	5ec9      	ldrsh	r1, [r1, r3]
    b1b6:	f001 f8af 	bl	c318 <_close_r>
    b1ba:	bd08      	pop	{r3, pc}

0000b1bc <strcmp>:
    b1bc:	7802      	ldrb	r2, [r0, #0]
    b1be:	780b      	ldrb	r3, [r1, #0]
    b1c0:	2a00      	cmp	r2, #0
    b1c2:	d003      	beq.n	b1cc <strcmp+0x10>
    b1c4:	3001      	adds	r0, #1
    b1c6:	3101      	adds	r1, #1
    b1c8:	429a      	cmp	r2, r3
    b1ca:	d0f7      	beq.n	b1bc <strcmp>
    b1cc:	1ad0      	subs	r0, r2, r3
    b1ce:	4770      	bx	lr

0000b1d0 <strlen>:
    b1d0:	2300      	movs	r3, #0
    b1d2:	5cc2      	ldrb	r2, [r0, r3]
    b1d4:	3301      	adds	r3, #1
    b1d6:	2a00      	cmp	r2, #0
    b1d8:	d1fb      	bne.n	b1d2 <strlen+0x2>
    b1da:	1e58      	subs	r0, r3, #1
    b1dc:	4770      	bx	lr

0000b1de <strncmp>:
    b1de:	2300      	movs	r3, #0
    b1e0:	b530      	push	{r4, r5, lr}
    b1e2:	429a      	cmp	r2, r3
    b1e4:	d00d      	beq.n	b202 <strncmp+0x24>
    b1e6:	3a01      	subs	r2, #1
    b1e8:	5cc4      	ldrb	r4, [r0, r3]
    b1ea:	5ccd      	ldrb	r5, [r1, r3]
    b1ec:	42ac      	cmp	r4, r5
    b1ee:	d102      	bne.n	b1f6 <strncmp+0x18>
    b1f0:	4293      	cmp	r3, r2
    b1f2:	d102      	bne.n	b1fa <strncmp+0x1c>
    b1f4:	1c25      	adds	r5, r4, #0
    b1f6:	1b63      	subs	r3, r4, r5
    b1f8:	e003      	b.n	b202 <strncmp+0x24>
    b1fa:	3301      	adds	r3, #1
    b1fc:	2c00      	cmp	r4, #0
    b1fe:	d1f3      	bne.n	b1e8 <strncmp+0xa>
    b200:	e7f8      	b.n	b1f4 <strncmp+0x16>
    b202:	1c18      	adds	r0, r3, #0
    b204:	bd30      	pop	{r4, r5, pc}

0000b206 <strncpy>:
    b206:	1c03      	adds	r3, r0, #0
    b208:	b530      	push	{r4, r5, lr}
    b20a:	2a00      	cmp	r2, #0
    b20c:	d007      	beq.n	b21e <strncpy+0x18>
    b20e:	780c      	ldrb	r4, [r1, #0]
    b210:	3301      	adds	r3, #1
    b212:	1e5d      	subs	r5, r3, #1
    b214:	3a01      	subs	r2, #1
    b216:	702c      	strb	r4, [r5, #0]
    b218:	3101      	adds	r1, #1
    b21a:	2c00      	cmp	r4, #0
    b21c:	d1f5      	bne.n	b20a <strncpy+0x4>
    b21e:	189a      	adds	r2, r3, r2
    b220:	4293      	cmp	r3, r2
    b222:	d003      	beq.n	b22c <strncpy+0x26>
    b224:	2100      	movs	r1, #0
    b226:	7019      	strb	r1, [r3, #0]
    b228:	3301      	adds	r3, #1
    b22a:	e7f9      	b.n	b220 <strncpy+0x1a>
    b22c:	bd30      	pop	{r4, r5, pc}

0000b22e <match>:
    b22e:	b530      	push	{r4, r5, lr}
    b230:	6803      	ldr	r3, [r0, #0]
    b232:	780c      	ldrb	r4, [r1, #0]
    b234:	3301      	adds	r3, #1
    b236:	2c00      	cmp	r4, #0
    b238:	d00a      	beq.n	b250 <match+0x22>
    b23a:	781a      	ldrb	r2, [r3, #0]
    b23c:	1c15      	adds	r5, r2, #0
    b23e:	3d41      	subs	r5, #65	; 0x41
    b240:	2d19      	cmp	r5, #25
    b242:	d800      	bhi.n	b246 <match+0x18>
    b244:	3220      	adds	r2, #32
    b246:	3101      	adds	r1, #1
    b248:	42a2      	cmp	r2, r4
    b24a:	d0f2      	beq.n	b232 <match+0x4>
    b24c:	2000      	movs	r0, #0
    b24e:	e001      	b.n	b254 <match+0x26>
    b250:	6003      	str	r3, [r0, #0]
    b252:	2001      	movs	r0, #1
    b254:	bd30      	pop	{r4, r5, pc}
	...

0000b258 <sulp>:
    b258:	b570      	push	{r4, r5, r6, lr}
    b25a:	1c16      	adds	r6, r2, #0
    b25c:	1c0d      	adds	r5, r1, #0
    b25e:	f002 fd6d 	bl	dd3c <__ulp>
    b262:	2e00      	cmp	r6, #0
    b264:	d00b      	beq.n	b27e <sulp+0x26>
    b266:	226b      	movs	r2, #107	; 0x6b
    b268:	006b      	lsls	r3, r5, #1
    b26a:	0d5b      	lsrs	r3, r3, #21
    b26c:	1ad3      	subs	r3, r2, r3
    b26e:	2b00      	cmp	r3, #0
    b270:	dd05      	ble.n	b27e <sulp+0x26>
    b272:	4d03      	ldr	r5, [pc, #12]	; (b280 <sulp+0x28>)
    b274:	051c      	lsls	r4, r3, #20
    b276:	2200      	movs	r2, #0
    b278:	1963      	adds	r3, r4, r5
    b27a:	f7fd f88d 	bl	8398 <__aeabi_dmul>
    b27e:	bd70      	pop	{r4, r5, r6, pc}
    b280:	3ff00000 	.word	0x3ff00000

0000b284 <_strtod_r>:
    b284:	2300      	movs	r3, #0
    b286:	b5f0      	push	{r4, r5, r6, r7, lr}
    b288:	b0a3      	sub	sp, #140	; 0x8c
    b28a:	931e      	str	r3, [sp, #120]	; 0x78
    b28c:	2600      	movs	r6, #0
    b28e:	2700      	movs	r7, #0
    b290:	1c0b      	adds	r3, r1, #0
    b292:	9003      	str	r0, [sp, #12]
    b294:	9106      	str	r1, [sp, #24]
    b296:	9219      	str	r2, [sp, #100]	; 0x64
    b298:	931d      	str	r3, [sp, #116]	; 0x74
    b29a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b29c:	781a      	ldrb	r2, [r3, #0]
    b29e:	2a0d      	cmp	r2, #13
    b2a0:	d805      	bhi.n	b2ae <_strtod_r+0x2a>
    b2a2:	2a09      	cmp	r2, #9
    b2a4:	d214      	bcs.n	b2d0 <_strtod_r+0x4c>
    b2a6:	2a00      	cmp	r2, #0
    b2a8:	d100      	bne.n	b2ac <_strtod_r+0x28>
    b2aa:	e1c3      	b.n	b634 <_strtod_r+0x3b0>
    b2ac:	e012      	b.n	b2d4 <_strtod_r+0x50>
    b2ae:	2a2b      	cmp	r2, #43	; 0x2b
    b2b0:	d006      	beq.n	b2c0 <_strtod_r+0x3c>
    b2b2:	2a2d      	cmp	r2, #45	; 0x2d
    b2b4:	d002      	beq.n	b2bc <_strtod_r+0x38>
    b2b6:	2a20      	cmp	r2, #32
    b2b8:	d10c      	bne.n	b2d4 <_strtod_r+0x50>
    b2ba:	e009      	b.n	b2d0 <_strtod_r+0x4c>
    b2bc:	2201      	movs	r2, #1
    b2be:	e000      	b.n	b2c2 <_strtod_r+0x3e>
    b2c0:	2200      	movs	r2, #0
    b2c2:	920d      	str	r2, [sp, #52]	; 0x34
    b2c4:	1c5a      	adds	r2, r3, #1
    b2c6:	921d      	str	r2, [sp, #116]	; 0x74
    b2c8:	785b      	ldrb	r3, [r3, #1]
    b2ca:	2b00      	cmp	r3, #0
    b2cc:	d104      	bne.n	b2d8 <_strtod_r+0x54>
    b2ce:	e1b1      	b.n	b634 <_strtod_r+0x3b0>
    b2d0:	3301      	adds	r3, #1
    b2d2:	e7e1      	b.n	b298 <_strtod_r+0x14>
    b2d4:	2300      	movs	r3, #0
    b2d6:	930d      	str	r3, [sp, #52]	; 0x34
    b2d8:	2200      	movs	r2, #0
    b2da:	9d1d      	ldr	r5, [sp, #116]	; 0x74
    b2dc:	920a      	str	r2, [sp, #40]	; 0x28
    b2de:	782b      	ldrb	r3, [r5, #0]
    b2e0:	2b30      	cmp	r3, #48	; 0x30
    b2e2:	d15d      	bne.n	b3a0 <_strtod_r+0x11c>
    b2e4:	786b      	ldrb	r3, [r5, #1]
    b2e6:	2b58      	cmp	r3, #88	; 0x58
    b2e8:	d001      	beq.n	b2ee <_strtod_r+0x6a>
    b2ea:	2b78      	cmp	r3, #120	; 0x78
    b2ec:	d14c      	bne.n	b388 <_strtod_r+0x104>
    b2ee:	ab1e      	add	r3, sp, #120	; 0x78
    b2f0:	9300      	str	r3, [sp, #0]
    b2f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    b2f4:	9803      	ldr	r0, [sp, #12]
    b2f6:	9301      	str	r3, [sp, #4]
    b2f8:	a91d      	add	r1, sp, #116	; 0x74
    b2fa:	4ac2      	ldr	r2, [pc, #776]	; (b604 <_strtod_r+0x380>)
    b2fc:	ab1f      	add	r3, sp, #124	; 0x7c
    b2fe:	f001 ff38 	bl	d172 <__gethex>
    b302:	2407      	movs	r4, #7
    b304:	9004      	str	r0, [sp, #16]
    b306:	4004      	ands	r4, r0
    b308:	d101      	bne.n	b30e <_strtod_r+0x8a>
    b30a:	f000 fda7 	bl	be5c <_strtod_r+0xbd8>
    b30e:	2c06      	cmp	r4, #6
    b310:	d105      	bne.n	b31e <_strtod_r+0x9a>
    b312:	2300      	movs	r3, #0
    b314:	3501      	adds	r5, #1
    b316:	951d      	str	r5, [sp, #116]	; 0x74
    b318:	930d      	str	r3, [sp, #52]	; 0x34
    b31a:	f000 fd9f 	bl	be5c <_strtod_r+0xbd8>
    b31e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    b320:	2a00      	cmp	r2, #0
    b322:	d007      	beq.n	b334 <_strtod_r+0xb0>
    b324:	a820      	add	r0, sp, #128	; 0x80
    b326:	2135      	movs	r1, #53	; 0x35
    b328:	f002 fdfc 	bl	df24 <__copybits>
    b32c:	9803      	ldr	r0, [sp, #12]
    b32e:	991e      	ldr	r1, [sp, #120]	; 0x78
    b330:	f002 fa64 	bl	d7fc <_Bfree>
    b334:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    b336:	2c06      	cmp	r4, #6
    b338:	d81c      	bhi.n	b374 <_strtod_r+0xf0>
    b33a:	1c20      	adds	r0, r4, #0
    b33c:	f003 f9a8 	bl	e690 <__gnu_thumb1_case_uqi>
    b340:	14070a04 	.word	0x14070a04
    b344:	0a17      	.short	0x0a17
    b346:	04          	.byte	0x04
    b347:	00          	.byte	0x00
    b348:	2700      	movs	r7, #0
    b34a:	1c3e      	adds	r6, r7, #0
    b34c:	e012      	b.n	b374 <_strtod_r+0xf0>
    b34e:	9e20      	ldr	r6, [sp, #128]	; 0x80
    b350:	9f21      	ldr	r7, [sp, #132]	; 0x84
    b352:	e00f      	b.n	b374 <_strtod_r+0xf0>
    b354:	4aac      	ldr	r2, [pc, #688]	; (b608 <_strtod_r+0x384>)
    b356:	9921      	ldr	r1, [sp, #132]	; 0x84
    b358:	189b      	adds	r3, r3, r2
    b35a:	4aac      	ldr	r2, [pc, #688]	; (b60c <_strtod_r+0x388>)
    b35c:	051b      	lsls	r3, r3, #20
    b35e:	400a      	ands	r2, r1
    b360:	4313      	orrs	r3, r2
    b362:	9e20      	ldr	r6, [sp, #128]	; 0x80
    b364:	1c1f      	adds	r7, r3, #0
    b366:	e005      	b.n	b374 <_strtod_r+0xf0>
    b368:	4fa9      	ldr	r7, [pc, #676]	; (b610 <_strtod_r+0x38c>)
    b36a:	2600      	movs	r6, #0
    b36c:	e002      	b.n	b374 <_strtod_r+0xf0>
    b36e:	2601      	movs	r6, #1
    b370:	4fa8      	ldr	r7, [pc, #672]	; (b614 <_strtod_r+0x390>)
    b372:	4276      	negs	r6, r6
    b374:	9b04      	ldr	r3, [sp, #16]
    b376:	071b      	lsls	r3, r3, #28
    b378:	d401      	bmi.n	b37e <_strtod_r+0xfa>
    b37a:	f000 fd6f 	bl	be5c <_strtod_r+0xbd8>
    b37e:	2380      	movs	r3, #128	; 0x80
    b380:	061b      	lsls	r3, r3, #24
    b382:	431f      	orrs	r7, r3
    b384:	f000 fd6a 	bl	be5c <_strtod_r+0xbd8>
    b388:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b38a:	1c5a      	adds	r2, r3, #1
    b38c:	921d      	str	r2, [sp, #116]	; 0x74
    b38e:	785b      	ldrb	r3, [r3, #1]
    b390:	2b30      	cmp	r3, #48	; 0x30
    b392:	d0f9      	beq.n	b388 <_strtod_r+0x104>
    b394:	2b00      	cmp	r3, #0
    b396:	d101      	bne.n	b39c <_strtod_r+0x118>
    b398:	f000 fd60 	bl	be5c <_strtod_r+0xbd8>
    b39c:	2301      	movs	r3, #1
    b39e:	930a      	str	r3, [sp, #40]	; 0x28
    b3a0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b3a2:	930c      	str	r3, [sp, #48]	; 0x30
    b3a4:	2300      	movs	r3, #0
    b3a6:	9305      	str	r3, [sp, #20]
    b3a8:	9307      	str	r3, [sp, #28]
    b3aa:	9304      	str	r3, [sp, #16]
    b3ac:	9c1d      	ldr	r4, [sp, #116]	; 0x74
    b3ae:	7823      	ldrb	r3, [r4, #0]
    b3b0:	1c1a      	adds	r2, r3, #0
    b3b2:	3a30      	subs	r2, #48	; 0x30
    b3b4:	9308      	str	r3, [sp, #32]
    b3b6:	b2d3      	uxtb	r3, r2
    b3b8:	2b09      	cmp	r3, #9
    b3ba:	d812      	bhi.n	b3e2 <_strtod_r+0x15e>
    b3bc:	9904      	ldr	r1, [sp, #16]
    b3be:	230a      	movs	r3, #10
    b3c0:	2908      	cmp	r1, #8
    b3c2:	dc04      	bgt.n	b3ce <_strtod_r+0x14a>
    b3c4:	9907      	ldr	r1, [sp, #28]
    b3c6:	434b      	muls	r3, r1
    b3c8:	18d3      	adds	r3, r2, r3
    b3ca:	9307      	str	r3, [sp, #28]
    b3cc:	e003      	b.n	b3d6 <_strtod_r+0x152>
    b3ce:	9905      	ldr	r1, [sp, #20]
    b3d0:	434b      	muls	r3, r1
    b3d2:	18d3      	adds	r3, r2, r3
    b3d4:	9305      	str	r3, [sp, #20]
    b3d6:	9b04      	ldr	r3, [sp, #16]
    b3d8:	3401      	adds	r4, #1
    b3da:	3301      	adds	r3, #1
    b3dc:	9304      	str	r3, [sp, #16]
    b3de:	941d      	str	r4, [sp, #116]	; 0x74
    b3e0:	e7e4      	b.n	b3ac <_strtod_r+0x128>
    b3e2:	9803      	ldr	r0, [sp, #12]
    b3e4:	f002 f9a6 	bl	d734 <_localeconv_r>
    b3e8:	6805      	ldr	r5, [r0, #0]
    b3ea:	9803      	ldr	r0, [sp, #12]
    b3ec:	f002 f9a2 	bl	d734 <_localeconv_r>
    b3f0:	6800      	ldr	r0, [r0, #0]
    b3f2:	f7ff feed 	bl	b1d0 <strlen>
    b3f6:	1c29      	adds	r1, r5, #0
    b3f8:	1c02      	adds	r2, r0, #0
    b3fa:	1c20      	adds	r0, r4, #0
    b3fc:	f7ff feef 	bl	b1de <strncmp>
    b400:	1e05      	subs	r5, r0, #0
    b402:	d005      	beq.n	b410 <_strtod_r+0x18c>
    b404:	2000      	movs	r0, #0
    b406:	9b08      	ldr	r3, [sp, #32]
    b408:	9c04      	ldr	r4, [sp, #16]
    b40a:	1c01      	adds	r1, r0, #0
    b40c:	9008      	str	r0, [sp, #32]
    b40e:	e05a      	b.n	b4c6 <_strtod_r+0x242>
    b410:	9803      	ldr	r0, [sp, #12]
    b412:	f002 f98f 	bl	d734 <_localeconv_r>
    b416:	6800      	ldr	r0, [r0, #0]
    b418:	f7ff feda 	bl	b1d0 <strlen>
    b41c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b41e:	9a04      	ldr	r2, [sp, #16]
    b420:	1818      	adds	r0, r3, r0
    b422:	901d      	str	r0, [sp, #116]	; 0x74
    b424:	7803      	ldrb	r3, [r0, #0]
    b426:	1e10      	subs	r0, r2, #0
    b428:	d141      	bne.n	b4ae <_strtod_r+0x22a>
    b42a:	2b30      	cmp	r3, #48	; 0x30
    b42c:	d105      	bne.n	b43a <_strtod_r+0x1b6>
    b42e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b430:	3001      	adds	r0, #1
    b432:	1c5a      	adds	r2, r3, #1
    b434:	921d      	str	r2, [sp, #116]	; 0x74
    b436:	785b      	ldrb	r3, [r3, #1]
    b438:	e7f7      	b.n	b42a <_strtod_r+0x1a6>
    b43a:	1c1a      	adds	r2, r3, #0
    b43c:	3a31      	subs	r2, #49	; 0x31
    b43e:	2a08      	cmp	r2, #8
    b440:	d83d      	bhi.n	b4be <_strtod_r+0x23a>
    b442:	1c01      	adds	r1, r0, #0
    b444:	2000      	movs	r0, #0
    b446:	1c04      	adds	r4, r0, #0
    b448:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    b44a:	920c      	str	r2, [sp, #48]	; 0x30
    b44c:	3b30      	subs	r3, #48	; 0x30
    b44e:	1c42      	adds	r2, r0, #1
    b450:	2b00      	cmp	r3, #0
    b452:	d026      	beq.n	b4a2 <_strtod_r+0x21e>
    b454:	1889      	adds	r1, r1, r2
    b456:	1c22      	adds	r2, r4, #0
    b458:	1900      	adds	r0, r0, r4
    b45a:	4282      	cmp	r2, r0
    b45c:	d00f      	beq.n	b47e <_strtod_r+0x1fa>
    b45e:	3201      	adds	r2, #1
    b460:	1e54      	subs	r4, r2, #1
    b462:	2c08      	cmp	r4, #8
    b464:	dc04      	bgt.n	b470 <_strtod_r+0x1ec>
    b466:	240a      	movs	r4, #10
    b468:	9d07      	ldr	r5, [sp, #28]
    b46a:	4365      	muls	r5, r4
    b46c:	9507      	str	r5, [sp, #28]
    b46e:	e7f4      	b.n	b45a <_strtod_r+0x1d6>
    b470:	2a10      	cmp	r2, #16
    b472:	dcf2      	bgt.n	b45a <_strtod_r+0x1d6>
    b474:	240a      	movs	r4, #10
    b476:	9d05      	ldr	r5, [sp, #20]
    b478:	4365      	muls	r5, r4
    b47a:	9505      	str	r5, [sp, #20]
    b47c:	e7ed      	b.n	b45a <_strtod_r+0x1d6>
    b47e:	1c54      	adds	r4, r2, #1
    b480:	2a08      	cmp	r2, #8
    b482:	dc06      	bgt.n	b492 <_strtod_r+0x20e>
    b484:	220a      	movs	r2, #10
    b486:	9807      	ldr	r0, [sp, #28]
    b488:	4342      	muls	r2, r0
    b48a:	18d3      	adds	r3, r2, r3
    b48c:	9307      	str	r3, [sp, #28]
    b48e:	2200      	movs	r2, #0
    b490:	e007      	b.n	b4a2 <_strtod_r+0x21e>
    b492:	2200      	movs	r2, #0
    b494:	2c10      	cmp	r4, #16
    b496:	dc04      	bgt.n	b4a2 <_strtod_r+0x21e>
    b498:	200a      	movs	r0, #10
    b49a:	9d05      	ldr	r5, [sp, #20]
    b49c:	4368      	muls	r0, r5
    b49e:	18c3      	adds	r3, r0, r3
    b4a0:	9305      	str	r3, [sp, #20]
    b4a2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b4a4:	1c58      	adds	r0, r3, #1
    b4a6:	901d      	str	r0, [sp, #116]	; 0x74
    b4a8:	785b      	ldrb	r3, [r3, #1]
    b4aa:	1c10      	adds	r0, r2, #0
    b4ac:	e002      	b.n	b4b4 <_strtod_r+0x230>
    b4ae:	1c28      	adds	r0, r5, #0
    b4b0:	1c29      	adds	r1, r5, #0
    b4b2:	9c04      	ldr	r4, [sp, #16]
    b4b4:	1c1a      	adds	r2, r3, #0
    b4b6:	3a30      	subs	r2, #48	; 0x30
    b4b8:	2a09      	cmp	r2, #9
    b4ba:	d9c7      	bls.n	b44c <_strtod_r+0x1c8>
    b4bc:	e001      	b.n	b4c2 <_strtod_r+0x23e>
    b4be:	2400      	movs	r4, #0
    b4c0:	1c21      	adds	r1, r4, #0
    b4c2:	2201      	movs	r2, #1
    b4c4:	9208      	str	r2, [sp, #32]
    b4c6:	2220      	movs	r2, #32
    b4c8:	1c1d      	adds	r5, r3, #0
    b4ca:	4395      	bics	r5, r2
    b4cc:	2200      	movs	r2, #0
    b4ce:	2d45      	cmp	r5, #69	; 0x45
    b4d0:	d157      	bne.n	b582 <_strtod_r+0x2fe>
    b4d2:	1c23      	adds	r3, r4, #0
    b4d4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    b4d6:	4303      	orrs	r3, r0
    b4d8:	432b      	orrs	r3, r5
    b4da:	4293      	cmp	r3, r2
    b4dc:	d100      	bne.n	b4e0 <_strtod_r+0x25c>
    b4de:	e0a9      	b.n	b634 <_strtod_r+0x3b0>
    b4e0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b4e2:	9306      	str	r3, [sp, #24]
    b4e4:	3301      	adds	r3, #1
    b4e6:	931d      	str	r3, [sp, #116]	; 0x74
    b4e8:	9b06      	ldr	r3, [sp, #24]
    b4ea:	785b      	ldrb	r3, [r3, #1]
    b4ec:	2b2b      	cmp	r3, #43	; 0x2b
    b4ee:	d006      	beq.n	b4fe <_strtod_r+0x27a>
    b4f0:	2b2d      	cmp	r3, #45	; 0x2d
    b4f2:	d001      	beq.n	b4f8 <_strtod_r+0x274>
    b4f4:	9209      	str	r2, [sp, #36]	; 0x24
    b4f6:	e008      	b.n	b50a <_strtod_r+0x286>
    b4f8:	2301      	movs	r3, #1
    b4fa:	9309      	str	r3, [sp, #36]	; 0x24
    b4fc:	e000      	b.n	b500 <_strtod_r+0x27c>
    b4fe:	9209      	str	r2, [sp, #36]	; 0x24
    b500:	9b06      	ldr	r3, [sp, #24]
    b502:	3302      	adds	r3, #2
    b504:	931d      	str	r3, [sp, #116]	; 0x74
    b506:	9b06      	ldr	r3, [sp, #24]
    b508:	789b      	ldrb	r3, [r3, #2]
    b50a:	1c1a      	adds	r2, r3, #0
    b50c:	3a30      	subs	r2, #48	; 0x30
    b50e:	2a09      	cmp	r2, #9
    b510:	d834      	bhi.n	b57c <_strtod_r+0x2f8>
    b512:	2b30      	cmp	r3, #48	; 0x30
    b514:	d104      	bne.n	b520 <_strtod_r+0x29c>
    b516:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b518:	1c5a      	adds	r2, r3, #1
    b51a:	921d      	str	r2, [sp, #116]	; 0x74
    b51c:	785b      	ldrb	r3, [r3, #1]
    b51e:	e7f8      	b.n	b512 <_strtod_r+0x28e>
    b520:	2531      	movs	r5, #49	; 0x31
    b522:	426d      	negs	r5, r5
    b524:	46ac      	mov	ip, r5
    b526:	449c      	add	ip, r3
    b528:	4665      	mov	r5, ip
    b52a:	2200      	movs	r2, #0
    b52c:	2d08      	cmp	r5, #8
    b52e:	d828      	bhi.n	b582 <_strtod_r+0x2fe>
    b530:	3b30      	subs	r3, #48	; 0x30
    b532:	930b      	str	r3, [sp, #44]	; 0x2c
    b534:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b536:	930e      	str	r3, [sp, #56]	; 0x38
    b538:	2530      	movs	r5, #48	; 0x30
    b53a:	426d      	negs	r5, r5
    b53c:	46ac      	mov	ip, r5
    b53e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b540:	1c5a      	adds	r2, r3, #1
    b542:	921d      	str	r2, [sp, #116]	; 0x74
    b544:	785b      	ldrb	r3, [r3, #1]
    b546:	449c      	add	ip, r3
    b548:	4665      	mov	r5, ip
    b54a:	2d09      	cmp	r5, #9
    b54c:	d806      	bhi.n	b55c <_strtod_r+0x2d8>
    b54e:	220a      	movs	r2, #10
    b550:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    b552:	436a      	muls	r2, r5
    b554:	18d3      	adds	r3, r2, r3
    b556:	3b30      	subs	r3, #48	; 0x30
    b558:	930b      	str	r3, [sp, #44]	; 0x2c
    b55a:	e7ed      	b.n	b538 <_strtod_r+0x2b4>
    b55c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
    b55e:	1b52      	subs	r2, r2, r5
    b560:	1e15      	subs	r5, r2, #0
    b562:	4a2d      	ldr	r2, [pc, #180]	; (b618 <_strtod_r+0x394>)
    b564:	4694      	mov	ip, r2
    b566:	2d08      	cmp	r5, #8
    b568:	dc03      	bgt.n	b572 <_strtod_r+0x2ee>
    b56a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    b56c:	4562      	cmp	r2, ip
    b56e:	dd00      	ble.n	b572 <_strtod_r+0x2ee>
    b570:	4662      	mov	r2, ip
    b572:	9d09      	ldr	r5, [sp, #36]	; 0x24
    b574:	2d00      	cmp	r5, #0
    b576:	d004      	beq.n	b582 <_strtod_r+0x2fe>
    b578:	4252      	negs	r2, r2
    b57a:	e002      	b.n	b582 <_strtod_r+0x2fe>
    b57c:	9a06      	ldr	r2, [sp, #24]
    b57e:	921d      	str	r2, [sp, #116]	; 0x74
    b580:	2200      	movs	r2, #0
    b582:	2c00      	cmp	r4, #0
    b584:	d161      	bne.n	b64a <_strtod_r+0x3c6>
    b586:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    b588:	4310      	orrs	r0, r2
    b58a:	d001      	beq.n	b590 <_strtod_r+0x30c>
    b58c:	f000 fc66 	bl	be5c <_strtod_r+0xbd8>
    b590:	9a08      	ldr	r2, [sp, #32]
    b592:	2a00      	cmp	r2, #0
    b594:	d14e      	bne.n	b634 <_strtod_r+0x3b0>
    b596:	2b4e      	cmp	r3, #78	; 0x4e
    b598:	d01c      	beq.n	b5d4 <_strtod_r+0x350>
    b59a:	dc02      	bgt.n	b5a2 <_strtod_r+0x31e>
    b59c:	2b49      	cmp	r3, #73	; 0x49
    b59e:	d005      	beq.n	b5ac <_strtod_r+0x328>
    b5a0:	e048      	b.n	b634 <_strtod_r+0x3b0>
    b5a2:	2b69      	cmp	r3, #105	; 0x69
    b5a4:	d002      	beq.n	b5ac <_strtod_r+0x328>
    b5a6:	2b6e      	cmp	r3, #110	; 0x6e
    b5a8:	d014      	beq.n	b5d4 <_strtod_r+0x350>
    b5aa:	e043      	b.n	b634 <_strtod_r+0x3b0>
    b5ac:	a81d      	add	r0, sp, #116	; 0x74
    b5ae:	491b      	ldr	r1, [pc, #108]	; (b61c <_strtod_r+0x398>)
    b5b0:	f7ff fe3d 	bl	b22e <match>
    b5b4:	2800      	cmp	r0, #0
    b5b6:	d03d      	beq.n	b634 <_strtod_r+0x3b0>
    b5b8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b5ba:	a81d      	add	r0, sp, #116	; 0x74
    b5bc:	3b01      	subs	r3, #1
    b5be:	4918      	ldr	r1, [pc, #96]	; (b620 <_strtod_r+0x39c>)
    b5c0:	931d      	str	r3, [sp, #116]	; 0x74
    b5c2:	f7ff fe34 	bl	b22e <match>
    b5c6:	2800      	cmp	r0, #0
    b5c8:	d102      	bne.n	b5d0 <_strtod_r+0x34c>
    b5ca:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b5cc:	3301      	adds	r3, #1
    b5ce:	931d      	str	r3, [sp, #116]	; 0x74
    b5d0:	4f0f      	ldr	r7, [pc, #60]	; (b610 <_strtod_r+0x38c>)
    b5d2:	e02c      	b.n	b62e <_strtod_r+0x3aa>
    b5d4:	a81d      	add	r0, sp, #116	; 0x74
    b5d6:	4913      	ldr	r1, [pc, #76]	; (b624 <_strtod_r+0x3a0>)
    b5d8:	f7ff fe29 	bl	b22e <match>
    b5dc:	2800      	cmp	r0, #0
    b5de:	d029      	beq.n	b634 <_strtod_r+0x3b0>
    b5e0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    b5e2:	781b      	ldrb	r3, [r3, #0]
    b5e4:	2b28      	cmp	r3, #40	; 0x28
    b5e6:	d121      	bne.n	b62c <_strtod_r+0x3a8>
    b5e8:	a81d      	add	r0, sp, #116	; 0x74
    b5ea:	490f      	ldr	r1, [pc, #60]	; (b628 <_strtod_r+0x3a4>)
    b5ec:	aa20      	add	r2, sp, #128	; 0x80
    b5ee:	f001 fff6 	bl	d5de <__hexnan>
    b5f2:	2805      	cmp	r0, #5
    b5f4:	d11a      	bne.n	b62c <_strtod_r+0x3a8>
    b5f6:	9b21      	ldr	r3, [sp, #132]	; 0x84
    b5f8:	4a05      	ldr	r2, [pc, #20]	; (b610 <_strtod_r+0x38c>)
    b5fa:	9e20      	ldr	r6, [sp, #128]	; 0x80
    b5fc:	431a      	orrs	r2, r3
    b5fe:	1c17      	adds	r7, r2, #0
    b600:	f000 fc2c 	bl	be5c <_strtod_r+0xbd8>
    b604:	0000f790 	.word	0x0000f790
    b608:	00000433 	.word	0x00000433
    b60c:	ffefffff 	.word	0xffefffff
    b610:	7ff00000 	.word	0x7ff00000
    b614:	7fffffff 	.word	0x7fffffff
    b618:	00004e1f 	.word	0x00004e1f
    b61c:	0000f6f6 	.word	0x0000f6f6
    b620:	0000f8a8 	.word	0x0000f8a8
    b624:	0000f6fe 	.word	0x0000f6fe
    b628:	0000f750 	.word	0x0000f750
    b62c:	4f92      	ldr	r7, [pc, #584]	; (b878 <_strtod_r+0x5f4>)
    b62e:	2600      	movs	r6, #0
    b630:	f000 fc14 	bl	be5c <_strtod_r+0xbd8>
    b634:	9b06      	ldr	r3, [sp, #24]
    b636:	931d      	str	r3, [sp, #116]	; 0x74
    b638:	2300      	movs	r3, #0
    b63a:	930d      	str	r3, [sp, #52]	; 0x34
    b63c:	9b19      	ldr	r3, [sp, #100]	; 0x64
    b63e:	2b00      	cmp	r3, #0
    b640:	d001      	beq.n	b646 <_strtod_r+0x3c2>
    b642:	f000 fc0e 	bl	be62 <_strtod_r+0xbde>
    b646:	f000 fc17 	bl	be78 <_strtod_r+0xbf4>
    b64a:	1a53      	subs	r3, r2, r1
    b64c:	9309      	str	r3, [sp, #36]	; 0x24
    b64e:	9b04      	ldr	r3, [sp, #16]
    b650:	2b00      	cmp	r3, #0
    b652:	d100      	bne.n	b656 <_strtod_r+0x3d2>
    b654:	9404      	str	r4, [sp, #16]
    b656:	1e25      	subs	r5, r4, #0
    b658:	2d10      	cmp	r5, #16
    b65a:	dd00      	ble.n	b65e <_strtod_r+0x3da>
    b65c:	2510      	movs	r5, #16
    b65e:	9807      	ldr	r0, [sp, #28]
    b660:	f7fd fd20 	bl	90a4 <__aeabi_ui2d>
    b664:	1c06      	adds	r6, r0, #0
    b666:	1c0f      	adds	r7, r1, #0
    b668:	2d09      	cmp	r5, #9
    b66a:	dd15      	ble.n	b698 <_strtod_r+0x414>
    b66c:	1c2b      	adds	r3, r5, #0
    b66e:	4a83      	ldr	r2, [pc, #524]	; (b87c <_strtod_r+0x5f8>)
    b670:	3b09      	subs	r3, #9
    b672:	00db      	lsls	r3, r3, #3
    b674:	18d3      	adds	r3, r2, r3
    b676:	681a      	ldr	r2, [r3, #0]
    b678:	685b      	ldr	r3, [r3, #4]
    b67a:	f7fc fe8d 	bl	8398 <__aeabi_dmul>
    b67e:	1c06      	adds	r6, r0, #0
    b680:	9805      	ldr	r0, [sp, #20]
    b682:	1c0f      	adds	r7, r1, #0
    b684:	f7fd fd0e 	bl	90a4 <__aeabi_ui2d>
    b688:	1c02      	adds	r2, r0, #0
    b68a:	1c0b      	adds	r3, r1, #0
    b68c:	1c30      	adds	r0, r6, #0
    b68e:	1c39      	adds	r1, r7, #0
    b690:	f7fb ff1c 	bl	74cc <__aeabi_dadd>
    b694:	1c06      	adds	r6, r0, #0
    b696:	1c0f      	adds	r7, r1, #0
    b698:	2c0f      	cmp	r4, #15
    b69a:	dc37      	bgt.n	b70c <_strtod_r+0x488>
    b69c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b69e:	2b00      	cmp	r3, #0
    b6a0:	d100      	bne.n	b6a4 <_strtod_r+0x420>
    b6a2:	e3db      	b.n	be5c <_strtod_r+0xbd8>
    b6a4:	dd24      	ble.n	b6f0 <_strtod_r+0x46c>
    b6a6:	2b16      	cmp	r3, #22
    b6a8:	dc07      	bgt.n	b6ba <_strtod_r+0x436>
    b6aa:	4974      	ldr	r1, [pc, #464]	; (b87c <_strtod_r+0x5f8>)
    b6ac:	00da      	lsls	r2, r3, #3
    b6ae:	188a      	adds	r2, r1, r2
    b6b0:	6810      	ldr	r0, [r2, #0]
    b6b2:	6851      	ldr	r1, [r2, #4]
    b6b4:	1c3b      	adds	r3, r7, #0
    b6b6:	1c32      	adds	r2, r6, #0
    b6b8:	e015      	b.n	b6e6 <_strtod_r+0x462>
    b6ba:	2325      	movs	r3, #37	; 0x25
    b6bc:	9a09      	ldr	r2, [sp, #36]	; 0x24
    b6be:	1b1b      	subs	r3, r3, r4
    b6c0:	429a      	cmp	r2, r3
    b6c2:	dc23      	bgt.n	b70c <_strtod_r+0x488>
    b6c4:	220f      	movs	r2, #15
    b6c6:	4d6d      	ldr	r5, [pc, #436]	; (b87c <_strtod_r+0x5f8>)
    b6c8:	1b14      	subs	r4, r2, r4
    b6ca:	00e3      	lsls	r3, r4, #3
    b6cc:	18eb      	adds	r3, r5, r3
    b6ce:	6818      	ldr	r0, [r3, #0]
    b6d0:	6859      	ldr	r1, [r3, #4]
    b6d2:	1c32      	adds	r2, r6, #0
    b6d4:	1c3b      	adds	r3, r7, #0
    b6d6:	f7fc fe5f 	bl	8398 <__aeabi_dmul>
    b6da:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b6dc:	1b1c      	subs	r4, r3, r4
    b6de:	00e4      	lsls	r4, r4, #3
    b6e0:	192d      	adds	r5, r5, r4
    b6e2:	682a      	ldr	r2, [r5, #0]
    b6e4:	686b      	ldr	r3, [r5, #4]
    b6e6:	f7fc fe57 	bl	8398 <__aeabi_dmul>
    b6ea:	1c06      	adds	r6, r0, #0
    b6ec:	1c0f      	adds	r7, r1, #0
    b6ee:	e3b5      	b.n	be5c <_strtod_r+0xbd8>
    b6f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b6f2:	3316      	adds	r3, #22
    b6f4:	db0a      	blt.n	b70c <_strtod_r+0x488>
    b6f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b6f8:	1c30      	adds	r0, r6, #0
    b6fa:	00da      	lsls	r2, r3, #3
    b6fc:	4b5f      	ldr	r3, [pc, #380]	; (b87c <_strtod_r+0x5f8>)
    b6fe:	1c39      	adds	r1, r7, #0
    b700:	1a9a      	subs	r2, r3, r2
    b702:	6853      	ldr	r3, [r2, #4]
    b704:	6812      	ldr	r2, [r2, #0]
    b706:	f7fc fa09 	bl	7b1c <__aeabi_ddiv>
    b70a:	e7ee      	b.n	b6ea <_strtod_r+0x466>
    b70c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b70e:	1b65      	subs	r5, r4, r5
    b710:	195d      	adds	r5, r3, r5
    b712:	2d00      	cmp	r5, #0
    b714:	dd59      	ble.n	b7ca <_strtod_r+0x546>
    b716:	230f      	movs	r3, #15
    b718:	402b      	ands	r3, r5
    b71a:	d00a      	beq.n	b732 <_strtod_r+0x4ae>
    b71c:	4a57      	ldr	r2, [pc, #348]	; (b87c <_strtod_r+0x5f8>)
    b71e:	00db      	lsls	r3, r3, #3
    b720:	18d3      	adds	r3, r2, r3
    b722:	6818      	ldr	r0, [r3, #0]
    b724:	6859      	ldr	r1, [r3, #4]
    b726:	1c32      	adds	r2, r6, #0
    b728:	1c3b      	adds	r3, r7, #0
    b72a:	f7fc fe35 	bl	8398 <__aeabi_dmul>
    b72e:	1c06      	adds	r6, r0, #0
    b730:	1c0f      	adds	r7, r1, #0
    b732:	230f      	movs	r3, #15
    b734:	439d      	bics	r5, r3
    b736:	d100      	bne.n	b73a <_strtod_r+0x4b6>
    b738:	e0b0      	b.n	b89c <_strtod_r+0x618>
    b73a:	3326      	adds	r3, #38	; 0x26
    b73c:	33ff      	adds	r3, #255	; 0xff
    b73e:	429d      	cmp	r5, r3
    b740:	dd0e      	ble.n	b760 <_strtod_r+0x4dc>
    b742:	2300      	movs	r3, #0
    b744:	9304      	str	r3, [sp, #16]
    b746:	9305      	str	r3, [sp, #20]
    b748:	930b      	str	r3, [sp, #44]	; 0x2c
    b74a:	9308      	str	r3, [sp, #32]
    b74c:	2322      	movs	r3, #34	; 0x22
    b74e:	2600      	movs	r6, #0
    b750:	9a03      	ldr	r2, [sp, #12]
    b752:	4f4b      	ldr	r7, [pc, #300]	; (b880 <_strtod_r+0x5fc>)
    b754:	6013      	str	r3, [r2, #0]
    b756:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b758:	42b3      	cmp	r3, r6
    b75a:	d000      	beq.n	b75e <_strtod_r+0x4da>
    b75c:	e36a      	b.n	be34 <_strtod_r+0xbb0>
    b75e:	e37d      	b.n	be5c <_strtod_r+0xbd8>
    b760:	2300      	movs	r3, #0
    b762:	1c30      	adds	r0, r6, #0
    b764:	1c39      	adds	r1, r7, #0
    b766:	112d      	asrs	r5, r5, #4
    b768:	9305      	str	r3, [sp, #20]
    b76a:	2d01      	cmp	r5, #1
    b76c:	dd0e      	ble.n	b78c <_strtod_r+0x508>
    b76e:	07eb      	lsls	r3, r5, #31
    b770:	d507      	bpl.n	b782 <_strtod_r+0x4fe>
    b772:	9b05      	ldr	r3, [sp, #20]
    b774:	00da      	lsls	r2, r3, #3
    b776:	4b43      	ldr	r3, [pc, #268]	; (b884 <_strtod_r+0x600>)
    b778:	18d3      	adds	r3, r2, r3
    b77a:	681a      	ldr	r2, [r3, #0]
    b77c:	685b      	ldr	r3, [r3, #4]
    b77e:	f7fc fe0b 	bl	8398 <__aeabi_dmul>
    b782:	9b05      	ldr	r3, [sp, #20]
    b784:	106d      	asrs	r5, r5, #1
    b786:	3301      	adds	r3, #1
    b788:	9305      	str	r3, [sp, #20]
    b78a:	e7ee      	b.n	b76a <_strtod_r+0x4e6>
    b78c:	1c06      	adds	r6, r0, #0
    b78e:	4b3e      	ldr	r3, [pc, #248]	; (b888 <_strtod_r+0x604>)
    b790:	18cf      	adds	r7, r1, r3
    b792:	9b05      	ldr	r3, [sp, #20]
    b794:	00da      	lsls	r2, r3, #3
    b796:	4b3b      	ldr	r3, [pc, #236]	; (b884 <_strtod_r+0x600>)
    b798:	189b      	adds	r3, r3, r2
    b79a:	6818      	ldr	r0, [r3, #0]
    b79c:	6859      	ldr	r1, [r3, #4]
    b79e:	1c32      	adds	r2, r6, #0
    b7a0:	1c3b      	adds	r3, r7, #0
    b7a2:	f7fc fdf9 	bl	8398 <__aeabi_dmul>
    b7a6:	4b36      	ldr	r3, [pc, #216]	; (b880 <_strtod_r+0x5fc>)
    b7a8:	1c0f      	adds	r7, r1, #0
    b7aa:	400b      	ands	r3, r1
    b7ac:	4937      	ldr	r1, [pc, #220]	; (b88c <_strtod_r+0x608>)
    b7ae:	1c06      	adds	r6, r0, #0
    b7b0:	428b      	cmp	r3, r1
    b7b2:	d8c6      	bhi.n	b742 <_strtod_r+0x4be>
    b7b4:	4936      	ldr	r1, [pc, #216]	; (b890 <_strtod_r+0x60c>)
    b7b6:	428b      	cmp	r3, r1
    b7b8:	d903      	bls.n	b7c2 <_strtod_r+0x53e>
    b7ba:	2601      	movs	r6, #1
    b7bc:	4f35      	ldr	r7, [pc, #212]	; (b894 <_strtod_r+0x610>)
    b7be:	4276      	negs	r6, r6
    b7c0:	e06c      	b.n	b89c <_strtod_r+0x618>
    b7c2:	23d4      	movs	r3, #212	; 0xd4
    b7c4:	049b      	lsls	r3, r3, #18
    b7c6:	18ff      	adds	r7, r7, r3
    b7c8:	e068      	b.n	b89c <_strtod_r+0x618>
    b7ca:	2d00      	cmp	r5, #0
    b7cc:	d066      	beq.n	b89c <_strtod_r+0x618>
    b7ce:	230f      	movs	r3, #15
    b7d0:	426d      	negs	r5, r5
    b7d2:	402b      	ands	r3, r5
    b7d4:	d00a      	beq.n	b7ec <_strtod_r+0x568>
    b7d6:	4a29      	ldr	r2, [pc, #164]	; (b87c <_strtod_r+0x5f8>)
    b7d8:	00db      	lsls	r3, r3, #3
    b7da:	18d3      	adds	r3, r2, r3
    b7dc:	1c30      	adds	r0, r6, #0
    b7de:	681a      	ldr	r2, [r3, #0]
    b7e0:	685b      	ldr	r3, [r3, #4]
    b7e2:	1c39      	adds	r1, r7, #0
    b7e4:	f7fc f99a 	bl	7b1c <__aeabi_ddiv>
    b7e8:	1c06      	adds	r6, r0, #0
    b7ea:	1c0f      	adds	r7, r1, #0
    b7ec:	112d      	asrs	r5, r5, #4
    b7ee:	d055      	beq.n	b89c <_strtod_r+0x618>
    b7f0:	2d1f      	cmp	r5, #31
    b7f2:	dd05      	ble.n	b800 <_strtod_r+0x57c>
    b7f4:	2300      	movs	r3, #0
    b7f6:	9304      	str	r3, [sp, #16]
    b7f8:	9305      	str	r3, [sp, #20]
    b7fa:	930b      	str	r3, [sp, #44]	; 0x2c
    b7fc:	9308      	str	r3, [sp, #32]
    b7fe:	e118      	b.n	ba32 <_strtod_r+0x7ae>
    b800:	2300      	movs	r3, #0
    b802:	9306      	str	r3, [sp, #24]
    b804:	06eb      	lsls	r3, r5, #27
    b806:	d501      	bpl.n	b80c <_strtod_r+0x588>
    b808:	236a      	movs	r3, #106	; 0x6a
    b80a:	9306      	str	r3, [sp, #24]
    b80c:	1c39      	adds	r1, r7, #0
    b80e:	1c30      	adds	r0, r6, #0
    b810:	4e21      	ldr	r6, [pc, #132]	; (b898 <_strtod_r+0x614>)
    b812:	2d00      	cmp	r5, #0
    b814:	dd08      	ble.n	b828 <_strtod_r+0x5a4>
    b816:	07eb      	lsls	r3, r5, #31
    b818:	d503      	bpl.n	b822 <_strtod_r+0x59e>
    b81a:	6832      	ldr	r2, [r6, #0]
    b81c:	6873      	ldr	r3, [r6, #4]
    b81e:	f7fc fdbb 	bl	8398 <__aeabi_dmul>
    b822:	106d      	asrs	r5, r5, #1
    b824:	3608      	adds	r6, #8
    b826:	e7f4      	b.n	b812 <_strtod_r+0x58e>
    b828:	9b06      	ldr	r3, [sp, #24]
    b82a:	1c06      	adds	r6, r0, #0
    b82c:	1c0f      	adds	r7, r1, #0
    b82e:	2b00      	cmp	r3, #0
    b830:	d019      	beq.n	b866 <_strtod_r+0x5e2>
    b832:	226b      	movs	r2, #107	; 0x6b
    b834:	004b      	lsls	r3, r1, #1
    b836:	0d5b      	lsrs	r3, r3, #21
    b838:	1c08      	adds	r0, r1, #0
    b83a:	1ad3      	subs	r3, r2, r3
    b83c:	2b00      	cmp	r3, #0
    b83e:	dd12      	ble.n	b866 <_strtod_r+0x5e2>
    b840:	2b1f      	cmp	r3, #31
    b842:	dd0c      	ble.n	b85e <_strtod_r+0x5da>
    b844:	2600      	movs	r6, #0
    b846:	2b34      	cmp	r3, #52	; 0x34
    b848:	dd02      	ble.n	b850 <_strtod_r+0x5cc>
    b84a:	27dc      	movs	r7, #220	; 0xdc
    b84c:	04bf      	lsls	r7, r7, #18
    b84e:	e00a      	b.n	b866 <_strtod_r+0x5e2>
    b850:	2201      	movs	r2, #1
    b852:	3b20      	subs	r3, #32
    b854:	4252      	negs	r2, r2
    b856:	409a      	lsls	r2, r3
    b858:	4010      	ands	r0, r2
    b85a:	1c07      	adds	r7, r0, #0
    b85c:	e003      	b.n	b866 <_strtod_r+0x5e2>
    b85e:	2201      	movs	r2, #1
    b860:	4252      	negs	r2, r2
    b862:	409a      	lsls	r2, r3
    b864:	4016      	ands	r6, r2
    b866:	1c30      	adds	r0, r6, #0
    b868:	1c39      	adds	r1, r7, #0
    b86a:	2200      	movs	r2, #0
    b86c:	2300      	movs	r3, #0
    b86e:	f7fa feaf 	bl	65d0 <__aeabi_dcmpeq>
    b872:	2800      	cmp	r0, #0
    b874:	d1be      	bne.n	b7f4 <_strtod_r+0x570>
    b876:	e013      	b.n	b8a0 <_strtod_r+0x61c>
    b878:	fff80000 	.word	0xfff80000
    b87c:	0000f8c0 	.word	0x0000f8c0
    b880:	7ff00000 	.word	0x7ff00000
    b884:	0000f988 	.word	0x0000f988
    b888:	fcb00000 	.word	0xfcb00000
    b88c:	7ca00000 	.word	0x7ca00000
    b890:	7c900000 	.word	0x7c900000
    b894:	7fefffff 	.word	0x7fefffff
    b898:	0000f768 	.word	0x0000f768
    b89c:	2300      	movs	r3, #0
    b89e:	9306      	str	r3, [sp, #24]
    b8a0:	9b07      	ldr	r3, [sp, #28]
    b8a2:	9803      	ldr	r0, [sp, #12]
    b8a4:	9300      	str	r3, [sp, #0]
    b8a6:	990c      	ldr	r1, [sp, #48]	; 0x30
    b8a8:	9a04      	ldr	r2, [sp, #16]
    b8aa:	1c23      	adds	r3, r4, #0
    b8ac:	f001 fffb 	bl	d8a6 <__s2b>
    b8b0:	900b      	str	r0, [sp, #44]	; 0x2c
    b8b2:	2800      	cmp	r0, #0
    b8b4:	d100      	bne.n	b8b8 <_strtod_r+0x634>
    b8b6:	e744      	b.n	b742 <_strtod_r+0x4be>
    b8b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b8ba:	9a09      	ldr	r2, [sp, #36]	; 0x24
    b8bc:	425b      	negs	r3, r3
    b8be:	17d2      	asrs	r2, r2, #31
    b8c0:	4013      	ands	r3, r2
    b8c2:	9313      	str	r3, [sp, #76]	; 0x4c
    b8c4:	2300      	movs	r3, #0
    b8c6:	9304      	str	r3, [sp, #16]
    b8c8:	9305      	str	r3, [sp, #20]
    b8ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b8cc:	9803      	ldr	r0, [sp, #12]
    b8ce:	6859      	ldr	r1, [r3, #4]
    b8d0:	f001 ff5c 	bl	d78c <_Balloc>
    b8d4:	9008      	str	r0, [sp, #32]
    b8d6:	2800      	cmp	r0, #0
    b8d8:	d100      	bne.n	b8dc <_strtod_r+0x658>
    b8da:	e737      	b.n	b74c <_strtod_r+0x4c8>
    b8dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b8de:	990b      	ldr	r1, [sp, #44]	; 0x2c
    b8e0:	691b      	ldr	r3, [r3, #16]
    b8e2:	310c      	adds	r1, #12
    b8e4:	1c9a      	adds	r2, r3, #2
    b8e6:	0092      	lsls	r2, r2, #2
    b8e8:	300c      	adds	r0, #12
    b8ea:	9307      	str	r3, [sp, #28]
    b8ec:	f7fe f8bd 	bl	9a6a <memcpy>
    b8f0:	ab1f      	add	r3, sp, #124	; 0x7c
    b8f2:	9300      	str	r3, [sp, #0]
    b8f4:	ab20      	add	r3, sp, #128	; 0x80
    b8f6:	9301      	str	r3, [sp, #4]
    b8f8:	9803      	ldr	r0, [sp, #12]
    b8fa:	1c32      	adds	r2, r6, #0
    b8fc:	1c3b      	adds	r3, r7, #0
    b8fe:	960e      	str	r6, [sp, #56]	; 0x38
    b900:	970f      	str	r7, [sp, #60]	; 0x3c
    b902:	f002 fa91 	bl	de28 <__d2b>
    b906:	901e      	str	r0, [sp, #120]	; 0x78
    b908:	2800      	cmp	r0, #0
    b90a:	d100      	bne.n	b90e <_strtod_r+0x68a>
    b90c:	e71e      	b.n	b74c <_strtod_r+0x4c8>
    b90e:	9803      	ldr	r0, [sp, #12]
    b910:	2101      	movs	r1, #1
    b912:	f002 f852 	bl	d9ba <__i2b>
    b916:	9005      	str	r0, [sp, #20]
    b918:	2800      	cmp	r0, #0
    b91a:	d100      	bne.n	b91e <_strtod_r+0x69a>
    b91c:	e716      	b.n	b74c <_strtod_r+0x4c8>
    b91e:	2300      	movs	r3, #0
    b920:	9a09      	ldr	r2, [sp, #36]	; 0x24
    b922:	930a      	str	r3, [sp, #40]	; 0x28
    b924:	4293      	cmp	r3, r2
    b926:	da00      	bge.n	b92a <_strtod_r+0x6a6>
    b928:	920a      	str	r2, [sp, #40]	; 0x28
    b92a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    b92c:	2b00      	cmp	r3, #0
    b92e:	da00      	bge.n	b932 <_strtod_r+0x6ae>
    b930:	e089      	b.n	ba46 <_strtod_r+0x7c2>
    b932:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    b934:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    b936:	18d5      	adds	r5, r2, r3
    b938:	9a06      	ldr	r2, [sp, #24]
    b93a:	9920      	ldr	r1, [sp, #128]	; 0x80
    b93c:	1a9b      	subs	r3, r3, r2
    b93e:	2236      	movs	r2, #54	; 0x36
    b940:	185b      	adds	r3, r3, r1
    b942:	1a52      	subs	r2, r2, r1
    b944:	49c8      	ldr	r1, [pc, #800]	; (bc68 <_strtod_r+0x9e4>)
    b946:	2001      	movs	r0, #1
    b948:	428b      	cmp	r3, r1
    b94a:	db00      	blt.n	b94e <_strtod_r+0x6ca>
    b94c:	e085      	b.n	ba5a <_strtod_r+0x7d6>
    b94e:	1ac9      	subs	r1, r1, r3
    b950:	1a52      	subs	r2, r2, r1
    b952:	291f      	cmp	r1, #31
    b954:	dc7b      	bgt.n	ba4e <_strtod_r+0x7ca>
    b956:	4088      	lsls	r0, r1
    b958:	2300      	movs	r3, #0
    b95a:	9018      	str	r0, [sp, #96]	; 0x60
    b95c:	9312      	str	r3, [sp, #72]	; 0x48
    b95e:	18ab      	adds	r3, r5, r2
    b960:	9307      	str	r3, [sp, #28]
    b962:	9b06      	ldr	r3, [sp, #24]
    b964:	18a4      	adds	r4, r4, r2
    b966:	18e4      	adds	r4, r4, r3
    b968:	9b07      	ldr	r3, [sp, #28]
    b96a:	42ab      	cmp	r3, r5
    b96c:	dd00      	ble.n	b970 <_strtod_r+0x6ec>
    b96e:	1c2b      	adds	r3, r5, #0
    b970:	42a3      	cmp	r3, r4
    b972:	dd00      	ble.n	b976 <_strtod_r+0x6f2>
    b974:	1c23      	adds	r3, r4, #0
    b976:	2b00      	cmp	r3, #0
    b978:	dd04      	ble.n	b984 <_strtod_r+0x700>
    b97a:	9a07      	ldr	r2, [sp, #28]
    b97c:	1ae4      	subs	r4, r4, r3
    b97e:	1ad2      	subs	r2, r2, r3
    b980:	9207      	str	r2, [sp, #28]
    b982:	1aed      	subs	r5, r5, r3
    b984:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    b986:	2b00      	cmp	r3, #0
    b988:	d16b      	bne.n	ba62 <_strtod_r+0x7de>
    b98a:	9b07      	ldr	r3, [sp, #28]
    b98c:	2b00      	cmp	r3, #0
    b98e:	dd00      	ble.n	b992 <_strtod_r+0x70e>
    b990:	e080      	b.n	ba94 <_strtod_r+0x810>
    b992:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    b994:	2b00      	cmp	r3, #0
    b996:	d000      	beq.n	b99a <_strtod_r+0x716>
    b998:	e086      	b.n	baa8 <_strtod_r+0x824>
    b99a:	2c00      	cmp	r4, #0
    b99c:	dd00      	ble.n	b9a0 <_strtod_r+0x71c>
    b99e:	e08d      	b.n	babc <_strtod_r+0x838>
    b9a0:	2d00      	cmp	r5, #0
    b9a2:	dd00      	ble.n	b9a6 <_strtod_r+0x722>
    b9a4:	e094      	b.n	bad0 <_strtod_r+0x84c>
    b9a6:	9803      	ldr	r0, [sp, #12]
    b9a8:	991e      	ldr	r1, [sp, #120]	; 0x78
    b9aa:	9a08      	ldr	r2, [sp, #32]
    b9ac:	f002 f95b 	bl	dc66 <__mdiff>
    b9b0:	9004      	str	r0, [sp, #16]
    b9b2:	2800      	cmp	r0, #0
    b9b4:	d100      	bne.n	b9b8 <_strtod_r+0x734>
    b9b6:	e6c9      	b.n	b74c <_strtod_r+0x4c8>
    b9b8:	2200      	movs	r2, #0
    b9ba:	68c3      	ldr	r3, [r0, #12]
    b9bc:	9905      	ldr	r1, [sp, #20]
    b9be:	60c2      	str	r2, [r0, #12]
    b9c0:	930c      	str	r3, [sp, #48]	; 0x30
    b9c2:	f002 f935 	bl	dc30 <__mcmp>
    b9c6:	2800      	cmp	r0, #0
    b9c8:	db00      	blt.n	b9cc <_strtod_r+0x748>
    b9ca:	e091      	b.n	baf0 <_strtod_r+0x86c>
    b9cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b9ce:	2b00      	cmp	r3, #0
    b9d0:	d000      	beq.n	b9d4 <_strtod_r+0x750>
    b9d2:	e21a      	b.n	be0a <_strtod_r+0xb86>
    b9d4:	2e00      	cmp	r6, #0
    b9d6:	d000      	beq.n	b9da <_strtod_r+0x756>
    b9d8:	e217      	b.n	be0a <_strtod_r+0xb86>
    b9da:	033b      	lsls	r3, r7, #12
    b9dc:	d000      	beq.n	b9e0 <_strtod_r+0x75c>
    b9de:	e214      	b.n	be0a <_strtod_r+0xb86>
    b9e0:	22d6      	movs	r2, #214	; 0xd6
    b9e2:	4ba2      	ldr	r3, [pc, #648]	; (bc6c <_strtod_r+0x9e8>)
    b9e4:	04d2      	lsls	r2, r2, #19
    b9e6:	403b      	ands	r3, r7
    b9e8:	4293      	cmp	r3, r2
    b9ea:	d800      	bhi.n	b9ee <_strtod_r+0x76a>
    b9ec:	e20d      	b.n	be0a <_strtod_r+0xb86>
    b9ee:	9b04      	ldr	r3, [sp, #16]
    b9f0:	695b      	ldr	r3, [r3, #20]
    b9f2:	9307      	str	r3, [sp, #28]
    b9f4:	2b00      	cmp	r3, #0
    b9f6:	d075      	beq.n	bae4 <_strtod_r+0x860>
    b9f8:	9904      	ldr	r1, [sp, #16]
    b9fa:	9803      	ldr	r0, [sp, #12]
    b9fc:	2201      	movs	r2, #1
    b9fe:	f002 f8c5 	bl	db8c <__lshift>
    ba02:	9905      	ldr	r1, [sp, #20]
    ba04:	9004      	str	r0, [sp, #16]
    ba06:	f002 f913 	bl	dc30 <__mcmp>
    ba0a:	2800      	cmp	r0, #0
    ba0c:	dc00      	bgt.n	ba10 <_strtod_r+0x78c>
    ba0e:	e1fc      	b.n	be0a <_strtod_r+0xb86>
    ba10:	9a06      	ldr	r2, [sp, #24]
    ba12:	4b96      	ldr	r3, [pc, #600]	; (bc6c <_strtod_r+0x9e8>)
    ba14:	2a00      	cmp	r2, #0
    ba16:	d100      	bne.n	ba1a <_strtod_r+0x796>
    ba18:	e09a      	b.n	bb50 <_strtod_r+0x8cc>
    ba1a:	1c1a      	adds	r2, r3, #0
    ba1c:	21d6      	movs	r1, #214	; 0xd6
    ba1e:	403a      	ands	r2, r7
    ba20:	04c9      	lsls	r1, r1, #19
    ba22:	428a      	cmp	r2, r1
    ba24:	dd00      	ble.n	ba28 <_strtod_r+0x7a4>
    ba26:	e093      	b.n	bb50 <_strtod_r+0x8cc>
    ba28:	23dc      	movs	r3, #220	; 0xdc
    ba2a:	049b      	lsls	r3, r3, #18
    ba2c:	429a      	cmp	r2, r3
    ba2e:	dd00      	ble.n	ba32 <_strtod_r+0x7ae>
    ba30:	e1ee      	b.n	be10 <_strtod_r+0xb8c>
    ba32:	2322      	movs	r3, #34	; 0x22
    ba34:	9a03      	ldr	r2, [sp, #12]
    ba36:	2600      	movs	r6, #0
    ba38:	6013      	str	r3, [r2, #0]
    ba3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    ba3c:	2700      	movs	r7, #0
    ba3e:	2b00      	cmp	r3, #0
    ba40:	d000      	beq.n	ba44 <_strtod_r+0x7c0>
    ba42:	e1f7      	b.n	be34 <_strtod_r+0xbb0>
    ba44:	e20a      	b.n	be5c <_strtod_r+0xbd8>
    ba46:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    ba48:	9d13      	ldr	r5, [sp, #76]	; 0x4c
    ba4a:	1ad4      	subs	r4, r2, r3
    ba4c:	e774      	b.n	b938 <_strtod_r+0x6b4>
    ba4e:	4988      	ldr	r1, [pc, #544]	; (bc70 <_strtod_r+0x9ec>)
    ba50:	1acb      	subs	r3, r1, r3
    ba52:	1c01      	adds	r1, r0, #0
    ba54:	4099      	lsls	r1, r3
    ba56:	9112      	str	r1, [sp, #72]	; 0x48
    ba58:	e001      	b.n	ba5e <_strtod_r+0x7da>
    ba5a:	2300      	movs	r3, #0
    ba5c:	9312      	str	r3, [sp, #72]	; 0x48
    ba5e:	9018      	str	r0, [sp, #96]	; 0x60
    ba60:	e77d      	b.n	b95e <_strtod_r+0x6da>
    ba62:	1c1a      	adds	r2, r3, #0
    ba64:	9803      	ldr	r0, [sp, #12]
    ba66:	9905      	ldr	r1, [sp, #20]
    ba68:	f002 f83e 	bl	dae8 <__pow5mult>
    ba6c:	9005      	str	r0, [sp, #20]
    ba6e:	1e03      	subs	r3, r0, #0
    ba70:	d100      	bne.n	ba74 <_strtod_r+0x7f0>
    ba72:	e66b      	b.n	b74c <_strtod_r+0x4c8>
    ba74:	9803      	ldr	r0, [sp, #12]
    ba76:	1c19      	adds	r1, r3, #0
    ba78:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    ba7a:	f001 ffa7 	bl	d9cc <__multiply>
    ba7e:	900c      	str	r0, [sp, #48]	; 0x30
    ba80:	2800      	cmp	r0, #0
    ba82:	d100      	bne.n	ba86 <_strtod_r+0x802>
    ba84:	e662      	b.n	b74c <_strtod_r+0x4c8>
    ba86:	9803      	ldr	r0, [sp, #12]
    ba88:	991e      	ldr	r1, [sp, #120]	; 0x78
    ba8a:	f001 feb7 	bl	d7fc <_Bfree>
    ba8e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    ba90:	931e      	str	r3, [sp, #120]	; 0x78
    ba92:	e77a      	b.n	b98a <_strtod_r+0x706>
    ba94:	9803      	ldr	r0, [sp, #12]
    ba96:	991e      	ldr	r1, [sp, #120]	; 0x78
    ba98:	9a07      	ldr	r2, [sp, #28]
    ba9a:	f002 f877 	bl	db8c <__lshift>
    ba9e:	901e      	str	r0, [sp, #120]	; 0x78
    baa0:	2800      	cmp	r0, #0
    baa2:	d000      	beq.n	baa6 <_strtod_r+0x822>
    baa4:	e775      	b.n	b992 <_strtod_r+0x70e>
    baa6:	e651      	b.n	b74c <_strtod_r+0x4c8>
    baa8:	9803      	ldr	r0, [sp, #12]
    baaa:	9908      	ldr	r1, [sp, #32]
    baac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    baae:	f002 f81b 	bl	dae8 <__pow5mult>
    bab2:	9008      	str	r0, [sp, #32]
    bab4:	2800      	cmp	r0, #0
    bab6:	d000      	beq.n	baba <_strtod_r+0x836>
    bab8:	e76f      	b.n	b99a <_strtod_r+0x716>
    baba:	e647      	b.n	b74c <_strtod_r+0x4c8>
    babc:	9803      	ldr	r0, [sp, #12]
    babe:	9908      	ldr	r1, [sp, #32]
    bac0:	1c22      	adds	r2, r4, #0
    bac2:	f002 f863 	bl	db8c <__lshift>
    bac6:	9008      	str	r0, [sp, #32]
    bac8:	2800      	cmp	r0, #0
    baca:	d000      	beq.n	bace <_strtod_r+0x84a>
    bacc:	e768      	b.n	b9a0 <_strtod_r+0x71c>
    bace:	e63d      	b.n	b74c <_strtod_r+0x4c8>
    bad0:	9803      	ldr	r0, [sp, #12]
    bad2:	9905      	ldr	r1, [sp, #20]
    bad4:	1c2a      	adds	r2, r5, #0
    bad6:	f002 f859 	bl	db8c <__lshift>
    bada:	9005      	str	r0, [sp, #20]
    badc:	2800      	cmp	r0, #0
    bade:	d000      	beq.n	bae2 <_strtod_r+0x85e>
    bae0:	e761      	b.n	b9a6 <_strtod_r+0x722>
    bae2:	e633      	b.n	b74c <_strtod_r+0x4c8>
    bae4:	9b04      	ldr	r3, [sp, #16]
    bae6:	691b      	ldr	r3, [r3, #16]
    bae8:	9307      	str	r3, [sp, #28]
    baea:	2b01      	cmp	r3, #1
    baec:	dc84      	bgt.n	b9f8 <_strtod_r+0x774>
    baee:	e18c      	b.n	be0a <_strtod_r+0xb86>
    baf0:	2800      	cmp	r0, #0
    baf2:	d164      	bne.n	bbbe <_strtod_r+0x93a>
    baf4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    baf6:	033b      	lsls	r3, r7, #12
    baf8:	2a00      	cmp	r2, #0
    bafa:	d024      	beq.n	bb46 <_strtod_r+0x8c2>
    bafc:	4a5d      	ldr	r2, [pc, #372]	; (bc74 <_strtod_r+0x9f0>)
    bafe:	1c39      	adds	r1, r7, #0
    bb00:	0b1b      	lsrs	r3, r3, #12
    bb02:	4293      	cmp	r3, r2
    bb04:	d12d      	bne.n	bb62 <_strtod_r+0x8de>
    bb06:	9a06      	ldr	r2, [sp, #24]
    bb08:	3801      	subs	r0, #1
    bb0a:	1c34      	adds	r4, r6, #0
    bb0c:	1c03      	adds	r3, r0, #0
    bb0e:	2a00      	cmp	r2, #0
    bb10:	d00a      	beq.n	bb28 <_strtod_r+0x8a4>
    bb12:	25d4      	movs	r5, #212	; 0xd4
    bb14:	4a55      	ldr	r2, [pc, #340]	; (bc6c <_strtod_r+0x9e8>)
    bb16:	04ed      	lsls	r5, r5, #19
    bb18:	403a      	ands	r2, r7
    bb1a:	42aa      	cmp	r2, r5
    bb1c:	d804      	bhi.n	bb28 <_strtod_r+0x8a4>
    bb1e:	336c      	adds	r3, #108	; 0x6c
    bb20:	0d12      	lsrs	r2, r2, #20
    bb22:	1a9a      	subs	r2, r3, r2
    bb24:	1c03      	adds	r3, r0, #0
    bb26:	4093      	lsls	r3, r2
    bb28:	429c      	cmp	r4, r3
    bb2a:	d11a      	bne.n	bb62 <_strtod_r+0x8de>
    bb2c:	4b52      	ldr	r3, [pc, #328]	; (bc78 <_strtod_r+0x9f4>)
    bb2e:	4299      	cmp	r1, r3
    bb30:	d102      	bne.n	bb38 <_strtod_r+0x8b4>
    bb32:	1c63      	adds	r3, r4, #1
    bb34:	d100      	bne.n	bb38 <_strtod_r+0x8b4>
    bb36:	e609      	b.n	b74c <_strtod_r+0x4c8>
    bb38:	4b4c      	ldr	r3, [pc, #304]	; (bc6c <_strtod_r+0x9e8>)
    bb3a:	2600      	movs	r6, #0
    bb3c:	4019      	ands	r1, r3
    bb3e:	2380      	movs	r3, #128	; 0x80
    bb40:	035b      	lsls	r3, r3, #13
    bb42:	18cf      	adds	r7, r1, r3
    bb44:	e161      	b.n	be0a <_strtod_r+0xb86>
    bb46:	2b00      	cmp	r3, #0
    bb48:	d10b      	bne.n	bb62 <_strtod_r+0x8de>
    bb4a:	2e00      	cmp	r6, #0
    bb4c:	d109      	bne.n	bb62 <_strtod_r+0x8de>
    bb4e:	e75f      	b.n	ba10 <_strtod_r+0x78c>
    bb50:	2601      	movs	r6, #1
    bb52:	4a4a      	ldr	r2, [pc, #296]	; (bc7c <_strtod_r+0x9f8>)
    bb54:	403b      	ands	r3, r7
    bb56:	189b      	adds	r3, r3, r2
    bb58:	4a46      	ldr	r2, [pc, #280]	; (bc74 <_strtod_r+0x9f0>)
    bb5a:	4276      	negs	r6, r6
    bb5c:	431a      	orrs	r2, r3
    bb5e:	1c17      	adds	r7, r2, #0
    bb60:	e153      	b.n	be0a <_strtod_r+0xb86>
    bb62:	9b12      	ldr	r3, [sp, #72]	; 0x48
    bb64:	2b00      	cmp	r3, #0
    bb66:	d003      	beq.n	bb70 <_strtod_r+0x8ec>
    bb68:	423b      	tst	r3, r7
    bb6a:	d100      	bne.n	bb6e <_strtod_r+0x8ea>
    bb6c:	e14d      	b.n	be0a <_strtod_r+0xb86>
    bb6e:	e003      	b.n	bb78 <_strtod_r+0x8f4>
    bb70:	9b18      	ldr	r3, [sp, #96]	; 0x60
    bb72:	4233      	tst	r3, r6
    bb74:	d100      	bne.n	bb78 <_strtod_r+0x8f4>
    bb76:	e148      	b.n	be0a <_strtod_r+0xb86>
    bb78:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bb7a:	1c30      	adds	r0, r6, #0
    bb7c:	1c39      	adds	r1, r7, #0
    bb7e:	9a06      	ldr	r2, [sp, #24]
    bb80:	2b00      	cmp	r3, #0
    bb82:	d00a      	beq.n	bb9a <_strtod_r+0x916>
    bb84:	f7ff fb68 	bl	b258 <sulp>
    bb88:	1c02      	adds	r2, r0, #0
    bb8a:	1c0b      	adds	r3, r1, #0
    bb8c:	980e      	ldr	r0, [sp, #56]	; 0x38
    bb8e:	990f      	ldr	r1, [sp, #60]	; 0x3c
    bb90:	f7fb fc9c 	bl	74cc <__aeabi_dadd>
    bb94:	1c06      	adds	r6, r0, #0
    bb96:	1c0f      	adds	r7, r1, #0
    bb98:	e137      	b.n	be0a <_strtod_r+0xb86>
    bb9a:	f7ff fb5d 	bl	b258 <sulp>
    bb9e:	1c02      	adds	r2, r0, #0
    bba0:	1c0b      	adds	r3, r1, #0
    bba2:	980e      	ldr	r0, [sp, #56]	; 0x38
    bba4:	990f      	ldr	r1, [sp, #60]	; 0x3c
    bba6:	f7fc fe91 	bl	88cc <__aeabi_dsub>
    bbaa:	2200      	movs	r2, #0
    bbac:	2300      	movs	r3, #0
    bbae:	1c06      	adds	r6, r0, #0
    bbb0:	1c0f      	adds	r7, r1, #0
    bbb2:	f7fa fd0d 	bl	65d0 <__aeabi_dcmpeq>
    bbb6:	2800      	cmp	r0, #0
    bbb8:	d000      	beq.n	bbbc <_strtod_r+0x938>
    bbba:	e73a      	b.n	ba32 <_strtod_r+0x7ae>
    bbbc:	e125      	b.n	be0a <_strtod_r+0xb86>
    bbbe:	9804      	ldr	r0, [sp, #16]
    bbc0:	9905      	ldr	r1, [sp, #20]
    bbc2:	f002 f985 	bl	ded0 <__ratio>
    bbc6:	2380      	movs	r3, #128	; 0x80
    bbc8:	2200      	movs	r2, #0
    bbca:	05db      	lsls	r3, r3, #23
    bbcc:	1c04      	adds	r4, r0, #0
    bbce:	1c0d      	adds	r5, r1, #0
    bbd0:	f7fa fd0e 	bl	65f0 <__aeabi_dcmple>
    bbd4:	2800      	cmp	r0, #0
    bbd6:	d036      	beq.n	bc46 <_strtod_r+0x9c2>
    bbd8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bbda:	2b00      	cmp	r3, #0
    bbdc:	d002      	beq.n	bbe4 <_strtod_r+0x960>
    bbde:	2400      	movs	r4, #0
    bbe0:	4d27      	ldr	r5, [pc, #156]	; (bc80 <_strtod_r+0x9fc>)
    bbe2:	e00b      	b.n	bbfc <_strtod_r+0x978>
    bbe4:	2e00      	cmp	r6, #0
    bbe6:	d102      	bne.n	bbee <_strtod_r+0x96a>
    bbe8:	033b      	lsls	r3, r7, #12
    bbea:	d105      	bne.n	bbf8 <_strtod_r+0x974>
    bbec:	e00b      	b.n	bc06 <_strtod_r+0x982>
    bbee:	2e01      	cmp	r6, #1
    bbf0:	d102      	bne.n	bbf8 <_strtod_r+0x974>
    bbf2:	2f00      	cmp	r7, #0
    bbf4:	d100      	bne.n	bbf8 <_strtod_r+0x974>
    bbf6:	e71c      	b.n	ba32 <_strtod_r+0x7ae>
    bbf8:	2400      	movs	r4, #0
    bbfa:	4d22      	ldr	r5, [pc, #136]	; (bc84 <_strtod_r+0xa00>)
    bbfc:	2300      	movs	r3, #0
    bbfe:	9307      	str	r3, [sp, #28]
    bc00:	4b1f      	ldr	r3, [pc, #124]	; (bc80 <_strtod_r+0x9fc>)
    bc02:	930a      	str	r3, [sp, #40]	; 0x28
    bc04:	e048      	b.n	bc98 <_strtod_r+0xa14>
    bc06:	1c20      	adds	r0, r4, #0
    bc08:	1c29      	adds	r1, r5, #0
    bc0a:	2200      	movs	r2, #0
    bc0c:	4b1c      	ldr	r3, [pc, #112]	; (bc80 <_strtod_r+0x9fc>)
    bc0e:	f7fa fce5 	bl	65dc <__aeabi_dcmplt>
    bc12:	2800      	cmp	r0, #0
    bc14:	d108      	bne.n	bc28 <_strtod_r+0x9a4>
    bc16:	1c20      	adds	r0, r4, #0
    bc18:	1c29      	adds	r1, r5, #0
    bc1a:	2200      	movs	r2, #0
    bc1c:	4b1a      	ldr	r3, [pc, #104]	; (bc88 <_strtod_r+0xa04>)
    bc1e:	f7fc fbbb 	bl	8398 <__aeabi_dmul>
    bc22:	9007      	str	r0, [sp, #28]
    bc24:	910a      	str	r1, [sp, #40]	; 0x28
    bc26:	e003      	b.n	bc30 <_strtod_r+0x9ac>
    bc28:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bc2a:	9307      	str	r3, [sp, #28]
    bc2c:	4b16      	ldr	r3, [pc, #88]	; (bc88 <_strtod_r+0xa04>)
    bc2e:	930a      	str	r3, [sp, #40]	; 0x28
    bc30:	2280      	movs	r2, #128	; 0x80
    bc32:	0612      	lsls	r2, r2, #24
    bc34:	4694      	mov	ip, r2
    bc36:	9b07      	ldr	r3, [sp, #28]
    bc38:	931a      	str	r3, [sp, #104]	; 0x68
    bc3a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    bc3c:	4463      	add	r3, ip
    bc3e:	931b      	str	r3, [sp, #108]	; 0x6c
    bc40:	9c1a      	ldr	r4, [sp, #104]	; 0x68
    bc42:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
    bc44:	e028      	b.n	bc98 <_strtod_r+0xa14>
    bc46:	4b10      	ldr	r3, [pc, #64]	; (bc88 <_strtod_r+0xa04>)
    bc48:	1c20      	adds	r0, r4, #0
    bc4a:	1c29      	adds	r1, r5, #0
    bc4c:	2200      	movs	r2, #0
    bc4e:	f7fc fba3 	bl	8398 <__aeabi_dmul>
    bc52:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bc54:	9007      	str	r0, [sp, #28]
    bc56:	910a      	str	r1, [sp, #40]	; 0x28
    bc58:	2b00      	cmp	r3, #0
    bc5a:	d117      	bne.n	bc8c <_strtod_r+0xa08>
    bc5c:	2380      	movs	r3, #128	; 0x80
    bc5e:	061b      	lsls	r3, r3, #24
    bc60:	18cb      	adds	r3, r1, r3
    bc62:	9014      	str	r0, [sp, #80]	; 0x50
    bc64:	9315      	str	r3, [sp, #84]	; 0x54
    bc66:	e015      	b.n	bc94 <_strtod_r+0xa10>
    bc68:	fffffc03 	.word	0xfffffc03
    bc6c:	7ff00000 	.word	0x7ff00000
    bc70:	fffffbe3 	.word	0xfffffbe3
    bc74:	000fffff 	.word	0x000fffff
    bc78:	7fefffff 	.word	0x7fefffff
    bc7c:	fff00000 	.word	0xfff00000
    bc80:	3ff00000 	.word	0x3ff00000
    bc84:	bff00000 	.word	0xbff00000
    bc88:	3fe00000 	.word	0x3fe00000
    bc8c:	9a07      	ldr	r2, [sp, #28]
    bc8e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    bc90:	9214      	str	r2, [sp, #80]	; 0x50
    bc92:	9315      	str	r3, [sp, #84]	; 0x54
    bc94:	9c14      	ldr	r4, [sp, #80]	; 0x50
    bc96:	9d15      	ldr	r5, [sp, #84]	; 0x54
    bc98:	4b7a      	ldr	r3, [pc, #488]	; (be84 <_strtod_r+0xc00>)
    bc9a:	403b      	ands	r3, r7
    bc9c:	9312      	str	r3, [sp, #72]	; 0x48
    bc9e:	9a12      	ldr	r2, [sp, #72]	; 0x48
    bca0:	4b79      	ldr	r3, [pc, #484]	; (be88 <_strtod_r+0xc04>)
    bca2:	429a      	cmp	r2, r3
    bca4:	d12b      	bne.n	bcfe <_strtod_r+0xa7a>
    bca6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    bca8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    bcaa:	9210      	str	r2, [sp, #64]	; 0x40
    bcac:	9311      	str	r3, [sp, #68]	; 0x44
    bcae:	4b77      	ldr	r3, [pc, #476]	; (be8c <_strtod_r+0xc08>)
    bcb0:	1c30      	adds	r0, r6, #0
    bcb2:	18ff      	adds	r7, r7, r3
    bcb4:	1c39      	adds	r1, r7, #0
    bcb6:	f002 f841 	bl	dd3c <__ulp>
    bcba:	1c02      	adds	r2, r0, #0
    bcbc:	1c0b      	adds	r3, r1, #0
    bcbe:	1c20      	adds	r0, r4, #0
    bcc0:	1c29      	adds	r1, r5, #0
    bcc2:	f7fc fb69 	bl	8398 <__aeabi_dmul>
    bcc6:	1c02      	adds	r2, r0, #0
    bcc8:	1c0b      	adds	r3, r1, #0
    bcca:	1c30      	adds	r0, r6, #0
    bccc:	1c39      	adds	r1, r7, #0
    bcce:	f7fb fbfd 	bl	74cc <__aeabi_dadd>
    bcd2:	4b6c      	ldr	r3, [pc, #432]	; (be84 <_strtod_r+0xc00>)
    bcd4:	4a6e      	ldr	r2, [pc, #440]	; (be90 <_strtod_r+0xc0c>)
    bcd6:	1c06      	adds	r6, r0, #0
    bcd8:	400b      	ands	r3, r1
    bcda:	4293      	cmp	r3, r2
    bcdc:	d90b      	bls.n	bcf6 <_strtod_r+0xa72>
    bcde:	4b6d      	ldr	r3, [pc, #436]	; (be94 <_strtod_r+0xc10>)
    bce0:	9a11      	ldr	r2, [sp, #68]	; 0x44
    bce2:	429a      	cmp	r2, r3
    bce4:	d103      	bne.n	bcee <_strtod_r+0xa6a>
    bce6:	9b10      	ldr	r3, [sp, #64]	; 0x40
    bce8:	3301      	adds	r3, #1
    bcea:	d100      	bne.n	bcee <_strtod_r+0xa6a>
    bcec:	e52e      	b.n	b74c <_strtod_r+0x4c8>
    bcee:	2601      	movs	r6, #1
    bcf0:	4f68      	ldr	r7, [pc, #416]	; (be94 <_strtod_r+0xc10>)
    bcf2:	4276      	negs	r6, r6
    bcf4:	e078      	b.n	bde8 <_strtod_r+0xb64>
    bcf6:	23d4      	movs	r3, #212	; 0xd4
    bcf8:	049b      	lsls	r3, r3, #18
    bcfa:	18cf      	adds	r7, r1, r3
    bcfc:	e040      	b.n	bd80 <_strtod_r+0xafc>
    bcfe:	9b06      	ldr	r3, [sp, #24]
    bd00:	2b00      	cmp	r3, #0
    bd02:	d02b      	beq.n	bd5c <_strtod_r+0xad8>
    bd04:	23d4      	movs	r3, #212	; 0xd4
    bd06:	9a12      	ldr	r2, [sp, #72]	; 0x48
    bd08:	04db      	lsls	r3, r3, #19
    bd0a:	429a      	cmp	r2, r3
    bd0c:	d826      	bhi.n	bd5c <_strtod_r+0xad8>
    bd0e:	9807      	ldr	r0, [sp, #28]
    bd10:	990a      	ldr	r1, [sp, #40]	; 0x28
    bd12:	4a61      	ldr	r2, [pc, #388]	; (be98 <_strtod_r+0xc14>)
    bd14:	4b61      	ldr	r3, [pc, #388]	; (be9c <_strtod_r+0xc18>)
    bd16:	f7fa fc6b 	bl	65f0 <__aeabi_dcmple>
    bd1a:	2800      	cmp	r0, #0
    bd1c:	d019      	beq.n	bd52 <_strtod_r+0xace>
    bd1e:	9807      	ldr	r0, [sp, #28]
    bd20:	990a      	ldr	r1, [sp, #40]	; 0x28
    bd22:	f7fa fce7 	bl	66f4 <__aeabi_d2uiz>
    bd26:	2800      	cmp	r0, #0
    bd28:	d100      	bne.n	bd2c <_strtod_r+0xaa8>
    bd2a:	3001      	adds	r0, #1
    bd2c:	f7fd f9ba 	bl	90a4 <__aeabi_ui2d>
    bd30:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bd32:	9007      	str	r0, [sp, #28]
    bd34:	910a      	str	r1, [sp, #40]	; 0x28
    bd36:	2b00      	cmp	r3, #0
    bd38:	d105      	bne.n	bd46 <_strtod_r+0xac2>
    bd3a:	2380      	movs	r3, #128	; 0x80
    bd3c:	061b      	lsls	r3, r3, #24
    bd3e:	18cb      	adds	r3, r1, r3
    bd40:	9016      	str	r0, [sp, #88]	; 0x58
    bd42:	9317      	str	r3, [sp, #92]	; 0x5c
    bd44:	e003      	b.n	bd4e <_strtod_r+0xaca>
    bd46:	9a07      	ldr	r2, [sp, #28]
    bd48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    bd4a:	9216      	str	r2, [sp, #88]	; 0x58
    bd4c:	9317      	str	r3, [sp, #92]	; 0x5c
    bd4e:	9c16      	ldr	r4, [sp, #88]	; 0x58
    bd50:	9d17      	ldr	r5, [sp, #92]	; 0x5c
    bd52:	23d6      	movs	r3, #214	; 0xd6
    bd54:	9a12      	ldr	r2, [sp, #72]	; 0x48
    bd56:	04db      	lsls	r3, r3, #19
    bd58:	18eb      	adds	r3, r5, r3
    bd5a:	1a9d      	subs	r5, r3, r2
    bd5c:	980e      	ldr	r0, [sp, #56]	; 0x38
    bd5e:	990f      	ldr	r1, [sp, #60]	; 0x3c
    bd60:	f001 ffec 	bl	dd3c <__ulp>
    bd64:	1c02      	adds	r2, r0, #0
    bd66:	1c0b      	adds	r3, r1, #0
    bd68:	1c20      	adds	r0, r4, #0
    bd6a:	1c29      	adds	r1, r5, #0
    bd6c:	f7fc fb14 	bl	8398 <__aeabi_dmul>
    bd70:	1c02      	adds	r2, r0, #0
    bd72:	1c0b      	adds	r3, r1, #0
    bd74:	980e      	ldr	r0, [sp, #56]	; 0x38
    bd76:	990f      	ldr	r1, [sp, #60]	; 0x3c
    bd78:	f7fb fba8 	bl	74cc <__aeabi_dadd>
    bd7c:	1c06      	adds	r6, r0, #0
    bd7e:	1c0f      	adds	r7, r1, #0
    bd80:	9b06      	ldr	r3, [sp, #24]
    bd82:	970e      	str	r7, [sp, #56]	; 0x38
    bd84:	2b00      	cmp	r3, #0
    bd86:	d12f      	bne.n	bde8 <_strtod_r+0xb64>
    bd88:	4b3e      	ldr	r3, [pc, #248]	; (be84 <_strtod_r+0xc00>)
    bd8a:	9a12      	ldr	r2, [sp, #72]	; 0x48
    bd8c:	403b      	ands	r3, r7
    bd8e:	429a      	cmp	r2, r3
    bd90:	d12a      	bne.n	bde8 <_strtod_r+0xb64>
    bd92:	990a      	ldr	r1, [sp, #40]	; 0x28
    bd94:	9807      	ldr	r0, [sp, #28]
    bd96:	f7fd f913 	bl	8fc0 <__aeabi_d2iz>
    bd9a:	f7fd f947 	bl	902c <__aeabi_i2d>
    bd9e:	1c0b      	adds	r3, r1, #0
    bda0:	1c02      	adds	r2, r0, #0
    bda2:	990a      	ldr	r1, [sp, #40]	; 0x28
    bda4:	9807      	ldr	r0, [sp, #28]
    bda6:	f7fc fd91 	bl	88cc <__aeabi_dsub>
    bdaa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bdac:	1c04      	adds	r4, r0, #0
    bdae:	1c0d      	adds	r5, r1, #0
    bdb0:	2b00      	cmp	r3, #0
    bdb2:	d104      	bne.n	bdbe <_strtod_r+0xb3a>
    bdb4:	2e00      	cmp	r6, #0
    bdb6:	d102      	bne.n	bdbe <_strtod_r+0xb3a>
    bdb8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    bdba:	031b      	lsls	r3, r3, #12
    bdbc:	d00e      	beq.n	bddc <_strtod_r+0xb58>
    bdbe:	1c20      	adds	r0, r4, #0
    bdc0:	1c29      	adds	r1, r5, #0
    bdc2:	4a37      	ldr	r2, [pc, #220]	; (bea0 <_strtod_r+0xc1c>)
    bdc4:	4b37      	ldr	r3, [pc, #220]	; (bea4 <_strtod_r+0xc20>)
    bdc6:	f7fa fc09 	bl	65dc <__aeabi_dcmplt>
    bdca:	2800      	cmp	r0, #0
    bdcc:	d132      	bne.n	be34 <_strtod_r+0xbb0>
    bdce:	1c20      	adds	r0, r4, #0
    bdd0:	1c29      	adds	r1, r5, #0
    bdd2:	4a35      	ldr	r2, [pc, #212]	; (bea8 <_strtod_r+0xc24>)
    bdd4:	4b35      	ldr	r3, [pc, #212]	; (beac <_strtod_r+0xc28>)
    bdd6:	f7fa fc15 	bl	6604 <__aeabi_dcmpgt>
    bdda:	e003      	b.n	bde4 <_strtod_r+0xb60>
    bddc:	4a30      	ldr	r2, [pc, #192]	; (bea0 <_strtod_r+0xc1c>)
    bdde:	4b34      	ldr	r3, [pc, #208]	; (beb0 <_strtod_r+0xc2c>)
    bde0:	f7fa fbfc 	bl	65dc <__aeabi_dcmplt>
    bde4:	2800      	cmp	r0, #0
    bde6:	d125      	bne.n	be34 <_strtod_r+0xbb0>
    bde8:	9803      	ldr	r0, [sp, #12]
    bdea:	991e      	ldr	r1, [sp, #120]	; 0x78
    bdec:	f001 fd06 	bl	d7fc <_Bfree>
    bdf0:	9803      	ldr	r0, [sp, #12]
    bdf2:	9908      	ldr	r1, [sp, #32]
    bdf4:	f001 fd02 	bl	d7fc <_Bfree>
    bdf8:	9803      	ldr	r0, [sp, #12]
    bdfa:	9905      	ldr	r1, [sp, #20]
    bdfc:	f001 fcfe 	bl	d7fc <_Bfree>
    be00:	9803      	ldr	r0, [sp, #12]
    be02:	9904      	ldr	r1, [sp, #16]
    be04:	f001 fcfa 	bl	d7fc <_Bfree>
    be08:	e55f      	b.n	b8ca <_strtod_r+0x646>
    be0a:	9b06      	ldr	r3, [sp, #24]
    be0c:	2b00      	cmp	r3, #0
    be0e:	d011      	beq.n	be34 <_strtod_r+0xbb0>
    be10:	4b28      	ldr	r3, [pc, #160]	; (beb4 <_strtod_r+0xc30>)
    be12:	1c30      	adds	r0, r6, #0
    be14:	9311      	str	r3, [sp, #68]	; 0x44
    be16:	2300      	movs	r3, #0
    be18:	9310      	str	r3, [sp, #64]	; 0x40
    be1a:	1c39      	adds	r1, r7, #0
    be1c:	9a10      	ldr	r2, [sp, #64]	; 0x40
    be1e:	9b11      	ldr	r3, [sp, #68]	; 0x44
    be20:	f7fc faba 	bl	8398 <__aeabi_dmul>
    be24:	1c06      	adds	r6, r0, #0
    be26:	1e0f      	subs	r7, r1, #0
    be28:	d104      	bne.n	be34 <_strtod_r+0xbb0>
    be2a:	2800      	cmp	r0, #0
    be2c:	d102      	bne.n	be34 <_strtod_r+0xbb0>
    be2e:	2322      	movs	r3, #34	; 0x22
    be30:	9a03      	ldr	r2, [sp, #12]
    be32:	6013      	str	r3, [r2, #0]
    be34:	9803      	ldr	r0, [sp, #12]
    be36:	991e      	ldr	r1, [sp, #120]	; 0x78
    be38:	f001 fce0 	bl	d7fc <_Bfree>
    be3c:	9803      	ldr	r0, [sp, #12]
    be3e:	9908      	ldr	r1, [sp, #32]
    be40:	f001 fcdc 	bl	d7fc <_Bfree>
    be44:	9803      	ldr	r0, [sp, #12]
    be46:	9905      	ldr	r1, [sp, #20]
    be48:	f001 fcd8 	bl	d7fc <_Bfree>
    be4c:	9803      	ldr	r0, [sp, #12]
    be4e:	990b      	ldr	r1, [sp, #44]	; 0x2c
    be50:	f001 fcd4 	bl	d7fc <_Bfree>
    be54:	9803      	ldr	r0, [sp, #12]
    be56:	9904      	ldr	r1, [sp, #16]
    be58:	f001 fcd0 	bl	d7fc <_Bfree>
    be5c:	9b19      	ldr	r3, [sp, #100]	; 0x64
    be5e:	2b00      	cmp	r3, #0
    be60:	d002      	beq.n	be68 <_strtod_r+0xbe4>
    be62:	9b19      	ldr	r3, [sp, #100]	; 0x64
    be64:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    be66:	601a      	str	r2, [r3, #0]
    be68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    be6a:	2b00      	cmp	r3, #0
    be6c:	d004      	beq.n	be78 <_strtod_r+0xbf4>
    be6e:	2380      	movs	r3, #128	; 0x80
    be70:	061b      	lsls	r3, r3, #24
    be72:	1c32      	adds	r2, r6, #0
    be74:	18fb      	adds	r3, r7, r3
    be76:	e001      	b.n	be7c <_strtod_r+0xbf8>
    be78:	1c32      	adds	r2, r6, #0
    be7a:	1c3b      	adds	r3, r7, #0
    be7c:	1c10      	adds	r0, r2, #0
    be7e:	1c19      	adds	r1, r3, #0
    be80:	b023      	add	sp, #140	; 0x8c
    be82:	bdf0      	pop	{r4, r5, r6, r7, pc}
    be84:	7ff00000 	.word	0x7ff00000
    be88:	7fe00000 	.word	0x7fe00000
    be8c:	fcb00000 	.word	0xfcb00000
    be90:	7c9fffff 	.word	0x7c9fffff
    be94:	7fefffff 	.word	0x7fefffff
    be98:	ffc00000 	.word	0xffc00000
    be9c:	41dfffff 	.word	0x41dfffff
    bea0:	94a03595 	.word	0x94a03595
    bea4:	3fdfffff 	.word	0x3fdfffff
    bea8:	35afe535 	.word	0x35afe535
    beac:	3fe00000 	.word	0x3fe00000
    beb0:	3fcfffff 	.word	0x3fcfffff
    beb4:	39500000 	.word	0x39500000

0000beb8 <_strtol_r>:
    beb8:	b5f0      	push	{r4, r5, r6, r7, lr}
    beba:	1c1e      	adds	r6, r3, #0
    bebc:	4b44      	ldr	r3, [pc, #272]	; (bfd0 <_strtol_r+0x118>)
    bebe:	b087      	sub	sp, #28
    bec0:	681b      	ldr	r3, [r3, #0]
    bec2:	9005      	str	r0, [sp, #20]
    bec4:	9302      	str	r3, [sp, #8]
    bec6:	1c0b      	adds	r3, r1, #0
    bec8:	9103      	str	r1, [sp, #12]
    beca:	9201      	str	r2, [sp, #4]
    becc:	781c      	ldrb	r4, [r3, #0]
    bece:	9a02      	ldr	r2, [sp, #8]
    bed0:	1c5d      	adds	r5, r3, #1
    bed2:	1912      	adds	r2, r2, r4
    bed4:	7850      	ldrb	r0, [r2, #1]
    bed6:	2208      	movs	r2, #8
    bed8:	4010      	ands	r0, r2
    beda:	d001      	beq.n	bee0 <_strtol_r+0x28>
    bedc:	1c2b      	adds	r3, r5, #0
    bede:	e7f5      	b.n	becc <_strtol_r+0x14>
    bee0:	2c2d      	cmp	r4, #45	; 0x2d
    bee2:	d104      	bne.n	beee <_strtol_r+0x36>
    bee4:	1c9d      	adds	r5, r3, #2
    bee6:	785c      	ldrb	r4, [r3, #1]
    bee8:	2301      	movs	r3, #1
    beea:	9300      	str	r3, [sp, #0]
    beec:	e004      	b.n	bef8 <_strtol_r+0x40>
    beee:	9000      	str	r0, [sp, #0]
    bef0:	2c2b      	cmp	r4, #43	; 0x2b
    bef2:	d101      	bne.n	bef8 <_strtol_r+0x40>
    bef4:	785c      	ldrb	r4, [r3, #1]
    bef6:	1c9d      	adds	r5, r3, #2
    bef8:	2e00      	cmp	r6, #0
    befa:	d002      	beq.n	bf02 <_strtol_r+0x4a>
    befc:	2e10      	cmp	r6, #16
    befe:	d10a      	bne.n	bf16 <_strtol_r+0x5e>
    bf00:	e060      	b.n	bfc4 <_strtol_r+0x10c>
    bf02:	2c30      	cmp	r4, #48	; 0x30
    bf04:	d15c      	bne.n	bfc0 <_strtol_r+0x108>
    bf06:	2220      	movs	r2, #32
    bf08:	782b      	ldrb	r3, [r5, #0]
    bf0a:	4393      	bics	r3, r2
    bf0c:	2b58      	cmp	r3, #88	; 0x58
    bf0e:	d152      	bne.n	bfb6 <_strtol_r+0xfe>
    bf10:	2610      	movs	r6, #16
    bf12:	786c      	ldrb	r4, [r5, #1]
    bf14:	3502      	adds	r5, #2
    bf16:	9f00      	ldr	r7, [sp, #0]
    bf18:	1c31      	adds	r1, r6, #0
    bf1a:	1e7b      	subs	r3, r7, #1
    bf1c:	419f      	sbcs	r7, r3
    bf1e:	4b2d      	ldr	r3, [pc, #180]	; (bfd4 <_strtol_r+0x11c>)
    bf20:	18ff      	adds	r7, r7, r3
    bf22:	1c38      	adds	r0, r7, #0
    bf24:	f7fa fa48 	bl	63b8 <__aeabi_uidivmod>
    bf28:	1c38      	adds	r0, r7, #0
    bf2a:	9104      	str	r1, [sp, #16]
    bf2c:	1c31      	adds	r1, r6, #0
    bf2e:	f7fa f9bd 	bl	62ac <__aeabi_uidiv>
    bf32:	2200      	movs	r2, #0
    bf34:	1c07      	adds	r7, r0, #0
    bf36:	1c13      	adds	r3, r2, #0
    bf38:	9902      	ldr	r1, [sp, #8]
    bf3a:	1909      	adds	r1, r1, r4
    bf3c:	7849      	ldrb	r1, [r1, #1]
    bf3e:	0748      	lsls	r0, r1, #29
    bf40:	d501      	bpl.n	bf46 <_strtol_r+0x8e>
    bf42:	3c30      	subs	r4, #48	; 0x30
    bf44:	e007      	b.n	bf56 <_strtol_r+0x9e>
    bf46:	2003      	movs	r0, #3
    bf48:	4008      	ands	r0, r1
    bf4a:	d017      	beq.n	bf7c <_strtol_r+0xc4>
    bf4c:	2137      	movs	r1, #55	; 0x37
    bf4e:	2801      	cmp	r0, #1
    bf50:	d000      	beq.n	bf54 <_strtol_r+0x9c>
    bf52:	3120      	adds	r1, #32
    bf54:	1a64      	subs	r4, r4, r1
    bf56:	42b4      	cmp	r4, r6
    bf58:	da10      	bge.n	bf7c <_strtol_r+0xc4>
    bf5a:	1c51      	adds	r1, r2, #1
    bf5c:	d00b      	beq.n	bf76 <_strtol_r+0xbe>
    bf5e:	42bb      	cmp	r3, r7
    bf60:	d807      	bhi.n	bf72 <_strtol_r+0xba>
    bf62:	d102      	bne.n	bf6a <_strtol_r+0xb2>
    bf64:	9a04      	ldr	r2, [sp, #16]
    bf66:	4294      	cmp	r4, r2
    bf68:	dc03      	bgt.n	bf72 <_strtol_r+0xba>
    bf6a:	4373      	muls	r3, r6
    bf6c:	2201      	movs	r2, #1
    bf6e:	18e3      	adds	r3, r4, r3
    bf70:	e001      	b.n	bf76 <_strtol_r+0xbe>
    bf72:	2201      	movs	r2, #1
    bf74:	4252      	negs	r2, r2
    bf76:	782c      	ldrb	r4, [r5, #0]
    bf78:	3501      	adds	r5, #1
    bf7a:	e7dd      	b.n	bf38 <_strtol_r+0x80>
    bf7c:	1c18      	adds	r0, r3, #0
    bf7e:	1c51      	adds	r1, r2, #1
    bf80:	d10b      	bne.n	bf9a <_strtol_r+0xe2>
    bf82:	9800      	ldr	r0, [sp, #0]
    bf84:	9a05      	ldr	r2, [sp, #20]
    bf86:	1e43      	subs	r3, r0, #1
    bf88:	4198      	sbcs	r0, r3
    bf8a:	4b12      	ldr	r3, [pc, #72]	; (bfd4 <_strtol_r+0x11c>)
    bf8c:	18c0      	adds	r0, r0, r3
    bf8e:	2322      	movs	r3, #34	; 0x22
    bf90:	6013      	str	r3, [r2, #0]
    bf92:	9b01      	ldr	r3, [sp, #4]
    bf94:	2b00      	cmp	r3, #0
    bf96:	d10a      	bne.n	bfae <_strtol_r+0xf6>
    bf98:	e017      	b.n	bfca <_strtol_r+0x112>
    bf9a:	9900      	ldr	r1, [sp, #0]
    bf9c:	2900      	cmp	r1, #0
    bf9e:	d000      	beq.n	bfa2 <_strtol_r+0xea>
    bfa0:	4258      	negs	r0, r3
    bfa2:	9b01      	ldr	r3, [sp, #4]
    bfa4:	2b00      	cmp	r3, #0
    bfa6:	d010      	beq.n	bfca <_strtol_r+0x112>
    bfa8:	9b03      	ldr	r3, [sp, #12]
    bfaa:	2a00      	cmp	r2, #0
    bfac:	d000      	beq.n	bfb0 <_strtol_r+0xf8>
    bfae:	1e6b      	subs	r3, r5, #1
    bfb0:	9a01      	ldr	r2, [sp, #4]
    bfb2:	6013      	str	r3, [r2, #0]
    bfb4:	e009      	b.n	bfca <_strtol_r+0x112>
    bfb6:	2430      	movs	r4, #48	; 0x30
    bfb8:	2e00      	cmp	r6, #0
    bfba:	d1ac      	bne.n	bf16 <_strtol_r+0x5e>
    bfbc:	2608      	movs	r6, #8
    bfbe:	e7aa      	b.n	bf16 <_strtol_r+0x5e>
    bfc0:	260a      	movs	r6, #10
    bfc2:	e7a8      	b.n	bf16 <_strtol_r+0x5e>
    bfc4:	2c30      	cmp	r4, #48	; 0x30
    bfc6:	d1a6      	bne.n	bf16 <_strtol_r+0x5e>
    bfc8:	e79d      	b.n	bf06 <_strtol_r+0x4e>
    bfca:	b007      	add	sp, #28
    bfcc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    bfce:	46c0      	nop			; (mov r8, r8)
    bfd0:	20000138 	.word	0x20000138
    bfd4:	7fffffff 	.word	0x7fffffff

0000bfd8 <_strtoul_r>:
    bfd8:	b5f0      	push	{r4, r5, r6, r7, lr}
    bfda:	1c1e      	adds	r6, r3, #0
    bfdc:	4b3e      	ldr	r3, [pc, #248]	; (c0d8 <_strtoul_r+0x100>)
    bfde:	b087      	sub	sp, #28
    bfe0:	681b      	ldr	r3, [r3, #0]
    bfe2:	1c17      	adds	r7, r2, #0
    bfe4:	9302      	str	r3, [sp, #8]
    bfe6:	1c0b      	adds	r3, r1, #0
    bfe8:	9005      	str	r0, [sp, #20]
    bfea:	9104      	str	r1, [sp, #16]
    bfec:	781c      	ldrb	r4, [r3, #0]
    bfee:	9a02      	ldr	r2, [sp, #8]
    bff0:	1c5d      	adds	r5, r3, #1
    bff2:	1912      	adds	r2, r2, r4
    bff4:	7851      	ldrb	r1, [r2, #1]
    bff6:	2208      	movs	r2, #8
    bff8:	400a      	ands	r2, r1
    bffa:	d001      	beq.n	c000 <_strtoul_r+0x28>
    bffc:	1c2b      	adds	r3, r5, #0
    bffe:	e7f5      	b.n	bfec <_strtoul_r+0x14>
    c000:	2c2d      	cmp	r4, #45	; 0x2d
    c002:	d104      	bne.n	c00e <_strtoul_r+0x36>
    c004:	1c9d      	adds	r5, r3, #2
    c006:	785c      	ldrb	r4, [r3, #1]
    c008:	2301      	movs	r3, #1
    c00a:	9301      	str	r3, [sp, #4]
    c00c:	e004      	b.n	c018 <_strtoul_r+0x40>
    c00e:	9201      	str	r2, [sp, #4]
    c010:	2c2b      	cmp	r4, #43	; 0x2b
    c012:	d101      	bne.n	c018 <_strtoul_r+0x40>
    c014:	785c      	ldrb	r4, [r3, #1]
    c016:	1c9d      	adds	r5, r3, #2
    c018:	2e00      	cmp	r6, #0
    c01a:	d002      	beq.n	c022 <_strtoul_r+0x4a>
    c01c:	2e10      	cmp	r6, #16
    c01e:	d10a      	bne.n	c036 <_strtoul_r+0x5e>
    c020:	e054      	b.n	c0cc <_strtoul_r+0xf4>
    c022:	2c30      	cmp	r4, #48	; 0x30
    c024:	d150      	bne.n	c0c8 <_strtoul_r+0xf0>
    c026:	2220      	movs	r2, #32
    c028:	782b      	ldrb	r3, [r5, #0]
    c02a:	4393      	bics	r3, r2
    c02c:	2b58      	cmp	r3, #88	; 0x58
    c02e:	d146      	bne.n	c0be <_strtoul_r+0xe6>
    c030:	2610      	movs	r6, #16
    c032:	786c      	ldrb	r4, [r5, #1]
    c034:	3502      	adds	r5, #2
    c036:	2001      	movs	r0, #1
    c038:	1c31      	adds	r1, r6, #0
    c03a:	4240      	negs	r0, r0
    c03c:	f7fa f936 	bl	62ac <__aeabi_uidiv>
    c040:	9003      	str	r0, [sp, #12]
    c042:	2001      	movs	r0, #1
    c044:	1c31      	adds	r1, r6, #0
    c046:	4240      	negs	r0, r0
    c048:	f7fa f9b6 	bl	63b8 <__aeabi_uidivmod>
    c04c:	2200      	movs	r2, #0
    c04e:	468c      	mov	ip, r1
    c050:	1c13      	adds	r3, r2, #0
    c052:	9902      	ldr	r1, [sp, #8]
    c054:	1909      	adds	r1, r1, r4
    c056:	7849      	ldrb	r1, [r1, #1]
    c058:	0748      	lsls	r0, r1, #29
    c05a:	d501      	bpl.n	c060 <_strtoul_r+0x88>
    c05c:	3c30      	subs	r4, #48	; 0x30
    c05e:	e007      	b.n	c070 <_strtoul_r+0x98>
    c060:	2003      	movs	r0, #3
    c062:	4008      	ands	r0, r1
    c064:	d017      	beq.n	c096 <_strtoul_r+0xbe>
    c066:	2137      	movs	r1, #55	; 0x37
    c068:	2801      	cmp	r0, #1
    c06a:	d000      	beq.n	c06e <_strtoul_r+0x96>
    c06c:	3120      	adds	r1, #32
    c06e:	1a64      	subs	r4, r4, r1
    c070:	42b4      	cmp	r4, r6
    c072:	da10      	bge.n	c096 <_strtoul_r+0xbe>
    c074:	1c51      	adds	r1, r2, #1
    c076:	d00b      	beq.n	c090 <_strtoul_r+0xb8>
    c078:	9a03      	ldr	r2, [sp, #12]
    c07a:	4293      	cmp	r3, r2
    c07c:	d806      	bhi.n	c08c <_strtoul_r+0xb4>
    c07e:	d101      	bne.n	c084 <_strtoul_r+0xac>
    c080:	4564      	cmp	r4, ip
    c082:	dc03      	bgt.n	c08c <_strtoul_r+0xb4>
    c084:	4373      	muls	r3, r6
    c086:	2201      	movs	r2, #1
    c088:	18e3      	adds	r3, r4, r3
    c08a:	e001      	b.n	c090 <_strtoul_r+0xb8>
    c08c:	2201      	movs	r2, #1
    c08e:	4252      	negs	r2, r2
    c090:	782c      	ldrb	r4, [r5, #0]
    c092:	3501      	adds	r5, #1
    c094:	e7dd      	b.n	c052 <_strtoul_r+0x7a>
    c096:	1c18      	adds	r0, r3, #0
    c098:	1c51      	adds	r1, r2, #1
    c09a:	d104      	bne.n	c0a6 <_strtoul_r+0xce>
    c09c:	2322      	movs	r3, #34	; 0x22
    c09e:	9905      	ldr	r1, [sp, #20]
    c0a0:	1c10      	adds	r0, r2, #0
    c0a2:	600b      	str	r3, [r1, #0]
    c0a4:	e003      	b.n	c0ae <_strtoul_r+0xd6>
    c0a6:	9901      	ldr	r1, [sp, #4]
    c0a8:	2900      	cmp	r1, #0
    c0aa:	d000      	beq.n	c0ae <_strtoul_r+0xd6>
    c0ac:	4258      	negs	r0, r3
    c0ae:	2f00      	cmp	r7, #0
    c0b0:	d00f      	beq.n	c0d2 <_strtoul_r+0xfa>
    c0b2:	9b04      	ldr	r3, [sp, #16]
    c0b4:	2a00      	cmp	r2, #0
    c0b6:	d000      	beq.n	c0ba <_strtoul_r+0xe2>
    c0b8:	1e6b      	subs	r3, r5, #1
    c0ba:	603b      	str	r3, [r7, #0]
    c0bc:	e009      	b.n	c0d2 <_strtoul_r+0xfa>
    c0be:	2430      	movs	r4, #48	; 0x30
    c0c0:	2e00      	cmp	r6, #0
    c0c2:	d1b8      	bne.n	c036 <_strtoul_r+0x5e>
    c0c4:	2608      	movs	r6, #8
    c0c6:	e7b6      	b.n	c036 <_strtoul_r+0x5e>
    c0c8:	260a      	movs	r6, #10
    c0ca:	e7b4      	b.n	c036 <_strtoul_r+0x5e>
    c0cc:	2c30      	cmp	r4, #48	; 0x30
    c0ce:	d1b2      	bne.n	c036 <_strtoul_r+0x5e>
    c0d0:	e7a9      	b.n	c026 <_strtoul_r+0x4e>
    c0d2:	b007      	add	sp, #28
    c0d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    c0d6:	46c0      	nop			; (mov r8, r8)
    c0d8:	20000138 	.word	0x20000138

0000c0dc <__submore>:
    c0dc:	1c0b      	adds	r3, r1, #0
    c0de:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    c0e0:	6b4d      	ldr	r5, [r1, #52]	; 0x34
    c0e2:	3344      	adds	r3, #68	; 0x44
    c0e4:	1c0c      	adds	r4, r1, #0
    c0e6:	429d      	cmp	r5, r3
    c0e8:	d11b      	bne.n	c122 <__submore+0x46>
    c0ea:	2680      	movs	r6, #128	; 0x80
    c0ec:	00f6      	lsls	r6, r6, #3
    c0ee:	1c31      	adds	r1, r6, #0
    c0f0:	f7fd fd12 	bl	9b18 <_malloc_r>
    c0f4:	2800      	cmp	r0, #0
    c0f6:	d102      	bne.n	c0fe <__submore+0x22>
    c0f8:	2001      	movs	r0, #1
    c0fa:	4240      	negs	r0, r0
    c0fc:	e025      	b.n	c14a <__submore+0x6e>
    c0fe:	1c23      	adds	r3, r4, #0
    c100:	6360      	str	r0, [r4, #52]	; 0x34
    c102:	63a6      	str	r6, [r4, #56]	; 0x38
    c104:	3346      	adds	r3, #70	; 0x46
    c106:	781a      	ldrb	r2, [r3, #0]
    c108:	4b10      	ldr	r3, [pc, #64]	; (c14c <__submore+0x70>)
    c10a:	54c2      	strb	r2, [r0, r3]
    c10c:	1c23      	adds	r3, r4, #0
    c10e:	3345      	adds	r3, #69	; 0x45
    c110:	781a      	ldrb	r2, [r3, #0]
    c112:	4b0f      	ldr	r3, [pc, #60]	; (c150 <__submore+0x74>)
    c114:	54c2      	strb	r2, [r0, r3]
    c116:	782a      	ldrb	r2, [r5, #0]
    c118:	4b0e      	ldr	r3, [pc, #56]	; (c154 <__submore+0x78>)
    c11a:	54c2      	strb	r2, [r0, r3]
    c11c:	18c0      	adds	r0, r0, r3
    c11e:	6020      	str	r0, [r4, #0]
    c120:	e012      	b.n	c148 <__submore+0x6c>
    c122:	6b8e      	ldr	r6, [r1, #56]	; 0x38
    c124:	1c29      	adds	r1, r5, #0
    c126:	0073      	lsls	r3, r6, #1
    c128:	1c1a      	adds	r2, r3, #0
    c12a:	9301      	str	r3, [sp, #4]
    c12c:	f001 ff3f 	bl	dfae <_realloc_r>
    c130:	1e05      	subs	r5, r0, #0
    c132:	d0e1      	beq.n	c0f8 <__submore+0x1c>
    c134:	1987      	adds	r7, r0, r6
    c136:	1c38      	adds	r0, r7, #0
    c138:	1c29      	adds	r1, r5, #0
    c13a:	1c32      	adds	r2, r6, #0
    c13c:	f7fd fc95 	bl	9a6a <memcpy>
    c140:	9b01      	ldr	r3, [sp, #4]
    c142:	6027      	str	r7, [r4, #0]
    c144:	6365      	str	r5, [r4, #52]	; 0x34
    c146:	63a3      	str	r3, [r4, #56]	; 0x38
    c148:	2000      	movs	r0, #0
    c14a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    c14c:	000003ff 	.word	0x000003ff
    c150:	000003fe 	.word	0x000003fe
    c154:	000003fd 	.word	0x000003fd

0000c158 <__swbuf_r>:
    c158:	b570      	push	{r4, r5, r6, lr}
    c15a:	1c05      	adds	r5, r0, #0
    c15c:	1c0e      	adds	r6, r1, #0
    c15e:	1c14      	adds	r4, r2, #0
    c160:	2800      	cmp	r0, #0
    c162:	d004      	beq.n	c16e <__swbuf_r+0x16>
    c164:	6983      	ldr	r3, [r0, #24]
    c166:	2b00      	cmp	r3, #0
    c168:	d101      	bne.n	c16e <__swbuf_r+0x16>
    c16a:	f7fd fa67 	bl	963c <__sinit>
    c16e:	4b23      	ldr	r3, [pc, #140]	; (c1fc <__swbuf_r+0xa4>)
    c170:	429c      	cmp	r4, r3
    c172:	d101      	bne.n	c178 <__swbuf_r+0x20>
    c174:	686c      	ldr	r4, [r5, #4]
    c176:	e008      	b.n	c18a <__swbuf_r+0x32>
    c178:	4b21      	ldr	r3, [pc, #132]	; (c200 <__swbuf_r+0xa8>)
    c17a:	429c      	cmp	r4, r3
    c17c:	d101      	bne.n	c182 <__swbuf_r+0x2a>
    c17e:	68ac      	ldr	r4, [r5, #8]
    c180:	e003      	b.n	c18a <__swbuf_r+0x32>
    c182:	4b20      	ldr	r3, [pc, #128]	; (c204 <__swbuf_r+0xac>)
    c184:	429c      	cmp	r4, r3
    c186:	d100      	bne.n	c18a <__swbuf_r+0x32>
    c188:	68ec      	ldr	r4, [r5, #12]
    c18a:	69a3      	ldr	r3, [r4, #24]
    c18c:	60a3      	str	r3, [r4, #8]
    c18e:	89a3      	ldrh	r3, [r4, #12]
    c190:	071b      	lsls	r3, r3, #28
    c192:	d50a      	bpl.n	c1aa <__swbuf_r+0x52>
    c194:	6923      	ldr	r3, [r4, #16]
    c196:	2b00      	cmp	r3, #0
    c198:	d007      	beq.n	c1aa <__swbuf_r+0x52>
    c19a:	6823      	ldr	r3, [r4, #0]
    c19c:	6922      	ldr	r2, [r4, #16]
    c19e:	b2f6      	uxtb	r6, r6
    c1a0:	1a98      	subs	r0, r3, r2
    c1a2:	6963      	ldr	r3, [r4, #20]
    c1a4:	4298      	cmp	r0, r3
    c1a6:	db0f      	blt.n	c1c8 <__swbuf_r+0x70>
    c1a8:	e008      	b.n	c1bc <__swbuf_r+0x64>
    c1aa:	1c28      	adds	r0, r5, #0
    c1ac:	1c21      	adds	r1, r4, #0
    c1ae:	f000 f83f 	bl	c230 <__swsetup_r>
    c1b2:	2800      	cmp	r0, #0
    c1b4:	d0f1      	beq.n	c19a <__swbuf_r+0x42>
    c1b6:	2001      	movs	r0, #1
    c1b8:	4240      	negs	r0, r0
    c1ba:	e01d      	b.n	c1f8 <__swbuf_r+0xa0>
    c1bc:	1c28      	adds	r0, r5, #0
    c1be:	1c21      	adds	r1, r4, #0
    c1c0:	f7fd f9ba 	bl	9538 <_fflush_r>
    c1c4:	2800      	cmp	r0, #0
    c1c6:	d1f6      	bne.n	c1b6 <__swbuf_r+0x5e>
    c1c8:	68a3      	ldr	r3, [r4, #8]
    c1ca:	3001      	adds	r0, #1
    c1cc:	3b01      	subs	r3, #1
    c1ce:	60a3      	str	r3, [r4, #8]
    c1d0:	6823      	ldr	r3, [r4, #0]
    c1d2:	1c5a      	adds	r2, r3, #1
    c1d4:	6022      	str	r2, [r4, #0]
    c1d6:	701e      	strb	r6, [r3, #0]
    c1d8:	6963      	ldr	r3, [r4, #20]
    c1da:	4298      	cmp	r0, r3
    c1dc:	d005      	beq.n	c1ea <__swbuf_r+0x92>
    c1de:	89a3      	ldrh	r3, [r4, #12]
    c1e0:	1c30      	adds	r0, r6, #0
    c1e2:	07db      	lsls	r3, r3, #31
    c1e4:	d508      	bpl.n	c1f8 <__swbuf_r+0xa0>
    c1e6:	2e0a      	cmp	r6, #10
    c1e8:	d106      	bne.n	c1f8 <__swbuf_r+0xa0>
    c1ea:	1c28      	adds	r0, r5, #0
    c1ec:	1c21      	adds	r1, r4, #0
    c1ee:	f7fd f9a3 	bl	9538 <_fflush_r>
    c1f2:	2800      	cmp	r0, #0
    c1f4:	d1df      	bne.n	c1b6 <__swbuf_r+0x5e>
    c1f6:	1c30      	adds	r0, r6, #0
    c1f8:	bd70      	pop	{r4, r5, r6, pc}
    c1fa:	46c0      	nop			; (mov r8, r8)
    c1fc:	0000f678 	.word	0x0000f678
    c200:	0000f698 	.word	0x0000f698
    c204:	0000f6b8 	.word	0x0000f6b8

0000c208 <_write_r>:
    c208:	b538      	push	{r3, r4, r5, lr}
    c20a:	1c05      	adds	r5, r0, #0
    c20c:	2000      	movs	r0, #0
    c20e:	4c07      	ldr	r4, [pc, #28]	; (c22c <_write_r+0x24>)
    c210:	6020      	str	r0, [r4, #0]
    c212:	1c08      	adds	r0, r1, #0
    c214:	1c11      	adds	r1, r2, #0
    c216:	1c1a      	adds	r2, r3, #0
    c218:	f7f7 fc5e 	bl	3ad8 <_write>
    c21c:	1c43      	adds	r3, r0, #1
    c21e:	d103      	bne.n	c228 <_write_r+0x20>
    c220:	6823      	ldr	r3, [r4, #0]
    c222:	2b00      	cmp	r3, #0
    c224:	d000      	beq.n	c228 <_write_r+0x20>
    c226:	602b      	str	r3, [r5, #0]
    c228:	bd38      	pop	{r3, r4, r5, pc}
    c22a:	46c0      	nop			; (mov r8, r8)
    c22c:	200046b0 	.word	0x200046b0

0000c230 <__swsetup_r>:
    c230:	4b35      	ldr	r3, [pc, #212]	; (c308 <__swsetup_r+0xd8>)
    c232:	b570      	push	{r4, r5, r6, lr}
    c234:	681d      	ldr	r5, [r3, #0]
    c236:	1c06      	adds	r6, r0, #0
    c238:	1c0c      	adds	r4, r1, #0
    c23a:	2d00      	cmp	r5, #0
    c23c:	d005      	beq.n	c24a <__swsetup_r+0x1a>
    c23e:	69ab      	ldr	r3, [r5, #24]
    c240:	2b00      	cmp	r3, #0
    c242:	d102      	bne.n	c24a <__swsetup_r+0x1a>
    c244:	1c28      	adds	r0, r5, #0
    c246:	f7fd f9f9 	bl	963c <__sinit>
    c24a:	4b30      	ldr	r3, [pc, #192]	; (c30c <__swsetup_r+0xdc>)
    c24c:	429c      	cmp	r4, r3
    c24e:	d101      	bne.n	c254 <__swsetup_r+0x24>
    c250:	686c      	ldr	r4, [r5, #4]
    c252:	e008      	b.n	c266 <__swsetup_r+0x36>
    c254:	4b2e      	ldr	r3, [pc, #184]	; (c310 <__swsetup_r+0xe0>)
    c256:	429c      	cmp	r4, r3
    c258:	d101      	bne.n	c25e <__swsetup_r+0x2e>
    c25a:	68ac      	ldr	r4, [r5, #8]
    c25c:	e003      	b.n	c266 <__swsetup_r+0x36>
    c25e:	4b2d      	ldr	r3, [pc, #180]	; (c314 <__swsetup_r+0xe4>)
    c260:	429c      	cmp	r4, r3
    c262:	d100      	bne.n	c266 <__swsetup_r+0x36>
    c264:	68ec      	ldr	r4, [r5, #12]
    c266:	89a3      	ldrh	r3, [r4, #12]
    c268:	b29a      	uxth	r2, r3
    c26a:	0711      	lsls	r1, r2, #28
    c26c:	d423      	bmi.n	c2b6 <__swsetup_r+0x86>
    c26e:	06d1      	lsls	r1, r2, #27
    c270:	d407      	bmi.n	c282 <__swsetup_r+0x52>
    c272:	2209      	movs	r2, #9
    c274:	2001      	movs	r0, #1
    c276:	6032      	str	r2, [r6, #0]
    c278:	3237      	adds	r2, #55	; 0x37
    c27a:	4313      	orrs	r3, r2
    c27c:	81a3      	strh	r3, [r4, #12]
    c27e:	4240      	negs	r0, r0
    c280:	e040      	b.n	c304 <__swsetup_r+0xd4>
    c282:	0753      	lsls	r3, r2, #29
    c284:	d513      	bpl.n	c2ae <__swsetup_r+0x7e>
    c286:	6b61      	ldr	r1, [r4, #52]	; 0x34
    c288:	2900      	cmp	r1, #0
    c28a:	d008      	beq.n	c29e <__swsetup_r+0x6e>
    c28c:	1c23      	adds	r3, r4, #0
    c28e:	3344      	adds	r3, #68	; 0x44
    c290:	4299      	cmp	r1, r3
    c292:	d002      	beq.n	c29a <__swsetup_r+0x6a>
    c294:	1c30      	adds	r0, r6, #0
    c296:	f7fd fbf9 	bl	9a8c <_free_r>
    c29a:	2300      	movs	r3, #0
    c29c:	6363      	str	r3, [r4, #52]	; 0x34
    c29e:	2224      	movs	r2, #36	; 0x24
    c2a0:	89a3      	ldrh	r3, [r4, #12]
    c2a2:	4393      	bics	r3, r2
    c2a4:	81a3      	strh	r3, [r4, #12]
    c2a6:	2300      	movs	r3, #0
    c2a8:	6063      	str	r3, [r4, #4]
    c2aa:	6923      	ldr	r3, [r4, #16]
    c2ac:	6023      	str	r3, [r4, #0]
    c2ae:	2208      	movs	r2, #8
    c2b0:	89a3      	ldrh	r3, [r4, #12]
    c2b2:	4313      	orrs	r3, r2
    c2b4:	81a3      	strh	r3, [r4, #12]
    c2b6:	6923      	ldr	r3, [r4, #16]
    c2b8:	2b00      	cmp	r3, #0
    c2ba:	d10b      	bne.n	c2d4 <__swsetup_r+0xa4>
    c2bc:	23a0      	movs	r3, #160	; 0xa0
    c2be:	89a2      	ldrh	r2, [r4, #12]
    c2c0:	009b      	lsls	r3, r3, #2
    c2c2:	4013      	ands	r3, r2
    c2c4:	2280      	movs	r2, #128	; 0x80
    c2c6:	0092      	lsls	r2, r2, #2
    c2c8:	4293      	cmp	r3, r2
    c2ca:	d003      	beq.n	c2d4 <__swsetup_r+0xa4>
    c2cc:	1c30      	adds	r0, r6, #0
    c2ce:	1c21      	adds	r1, r4, #0
    c2d0:	f7fd fb54 	bl	997c <__smakebuf_r>
    c2d4:	2301      	movs	r3, #1
    c2d6:	89a2      	ldrh	r2, [r4, #12]
    c2d8:	4013      	ands	r3, r2
    c2da:	d005      	beq.n	c2e8 <__swsetup_r+0xb8>
    c2dc:	2300      	movs	r3, #0
    c2de:	60a3      	str	r3, [r4, #8]
    c2e0:	6963      	ldr	r3, [r4, #20]
    c2e2:	425b      	negs	r3, r3
    c2e4:	61a3      	str	r3, [r4, #24]
    c2e6:	e003      	b.n	c2f0 <__swsetup_r+0xc0>
    c2e8:	0791      	lsls	r1, r2, #30
    c2ea:	d400      	bmi.n	c2ee <__swsetup_r+0xbe>
    c2ec:	6963      	ldr	r3, [r4, #20]
    c2ee:	60a3      	str	r3, [r4, #8]
    c2f0:	2000      	movs	r0, #0
    c2f2:	6923      	ldr	r3, [r4, #16]
    c2f4:	4283      	cmp	r3, r0
    c2f6:	d105      	bne.n	c304 <__swsetup_r+0xd4>
    c2f8:	0613      	lsls	r3, r2, #24
    c2fa:	d503      	bpl.n	c304 <__swsetup_r+0xd4>
    c2fc:	2340      	movs	r3, #64	; 0x40
    c2fe:	431a      	orrs	r2, r3
    c300:	81a2      	strh	r2, [r4, #12]
    c302:	3801      	subs	r0, #1
    c304:	bd70      	pop	{r4, r5, r6, pc}
    c306:	46c0      	nop			; (mov r8, r8)
    c308:	20000134 	.word	0x20000134
    c30c:	0000f678 	.word	0x0000f678
    c310:	0000f698 	.word	0x0000f698
    c314:	0000f6b8 	.word	0x0000f6b8

0000c318 <_close_r>:
    c318:	b538      	push	{r3, r4, r5, lr}
    c31a:	2300      	movs	r3, #0
    c31c:	4c06      	ldr	r4, [pc, #24]	; (c338 <_close_r+0x20>)
    c31e:	1c05      	adds	r5, r0, #0
    c320:	1c08      	adds	r0, r1, #0
    c322:	6023      	str	r3, [r4, #0]
    c324:	f7f7 fbc2 	bl	3aac <_close>
    c328:	1c43      	adds	r3, r0, #1
    c32a:	d103      	bne.n	c334 <_close_r+0x1c>
    c32c:	6823      	ldr	r3, [r4, #0]
    c32e:	2b00      	cmp	r3, #0
    c330:	d000      	beq.n	c334 <_close_r+0x1c>
    c332:	602b      	str	r3, [r5, #0]
    c334:	bd38      	pop	{r3, r4, r5, pc}
    c336:	46c0      	nop			; (mov r8, r8)
    c338:	200046b0 	.word	0x200046b0

0000c33c <quorem>:
    c33c:	b5f0      	push	{r4, r5, r6, r7, lr}
    c33e:	6903      	ldr	r3, [r0, #16]
    c340:	690c      	ldr	r4, [r1, #16]
    c342:	b089      	sub	sp, #36	; 0x24
    c344:	2600      	movs	r6, #0
    c346:	42a3      	cmp	r3, r4
    c348:	db7c      	blt.n	c444 <quorem+0x108>
    c34a:	1c0b      	adds	r3, r1, #0
    c34c:	3c01      	subs	r4, #1
    c34e:	3314      	adds	r3, #20
    c350:	00a5      	lsls	r5, r4, #2
    c352:	9303      	str	r3, [sp, #12]
    c354:	195b      	adds	r3, r3, r5
    c356:	9304      	str	r3, [sp, #16]
    c358:	1c03      	adds	r3, r0, #0
    c35a:	3314      	adds	r3, #20
    c35c:	9301      	str	r3, [sp, #4]
    c35e:	195d      	adds	r5, r3, r5
    c360:	9b04      	ldr	r3, [sp, #16]
    c362:	9107      	str	r1, [sp, #28]
    c364:	681b      	ldr	r3, [r3, #0]
    c366:	9002      	str	r0, [sp, #8]
    c368:	1c59      	adds	r1, r3, #1
    c36a:	6828      	ldr	r0, [r5, #0]
    c36c:	9305      	str	r3, [sp, #20]
    c36e:	f7f9 ff9d 	bl	62ac <__aeabi_uidiv>
    c372:	1e07      	subs	r7, r0, #0
    c374:	42b7      	cmp	r7, r6
    c376:	d035      	beq.n	c3e4 <quorem+0xa8>
    c378:	9b03      	ldr	r3, [sp, #12]
    c37a:	9801      	ldr	r0, [sp, #4]
    c37c:	469c      	mov	ip, r3
    c37e:	9605      	str	r6, [sp, #20]
    c380:	4663      	mov	r3, ip
    c382:	cb04      	ldmia	r3!, {r2}
    c384:	b291      	uxth	r1, r2
    c386:	4379      	muls	r1, r7
    c388:	0c12      	lsrs	r2, r2, #16
    c38a:	437a      	muls	r2, r7
    c38c:	1871      	adds	r1, r6, r1
    c38e:	0c0e      	lsrs	r6, r1, #16
    c390:	469c      	mov	ip, r3
    c392:	18b3      	adds	r3, r6, r2
    c394:	9306      	str	r3, [sp, #24]
    c396:	8802      	ldrh	r2, [r0, #0]
    c398:	0c1e      	lsrs	r6, r3, #16
    c39a:	9b05      	ldr	r3, [sp, #20]
    c39c:	b289      	uxth	r1, r1
    c39e:	18d2      	adds	r2, r2, r3
    c3a0:	6803      	ldr	r3, [r0, #0]
    c3a2:	1a52      	subs	r2, r2, r1
    c3a4:	0c19      	lsrs	r1, r3, #16
    c3a6:	466b      	mov	r3, sp
    c3a8:	8b1b      	ldrh	r3, [r3, #24]
    c3aa:	1acb      	subs	r3, r1, r3
    c3ac:	1411      	asrs	r1, r2, #16
    c3ae:	185b      	adds	r3, r3, r1
    c3b0:	1419      	asrs	r1, r3, #16
    c3b2:	b292      	uxth	r2, r2
    c3b4:	041b      	lsls	r3, r3, #16
    c3b6:	431a      	orrs	r2, r3
    c3b8:	9b04      	ldr	r3, [sp, #16]
    c3ba:	9105      	str	r1, [sp, #20]
    c3bc:	c004      	stmia	r0!, {r2}
    c3be:	4563      	cmp	r3, ip
    c3c0:	d2de      	bcs.n	c380 <quorem+0x44>
    c3c2:	682b      	ldr	r3, [r5, #0]
    c3c4:	2b00      	cmp	r3, #0
    c3c6:	d10d      	bne.n	c3e4 <quorem+0xa8>
    c3c8:	1c23      	adds	r3, r4, #0
    c3ca:	9a01      	ldr	r2, [sp, #4]
    c3cc:	3d04      	subs	r5, #4
    c3ce:	4295      	cmp	r5, r2
    c3d0:	d803      	bhi.n	c3da <quorem+0x9e>
    c3d2:	9a02      	ldr	r2, [sp, #8]
    c3d4:	1c1c      	adds	r4, r3, #0
    c3d6:	6113      	str	r3, [r2, #16]
    c3d8:	e004      	b.n	c3e4 <quorem+0xa8>
    c3da:	682a      	ldr	r2, [r5, #0]
    c3dc:	2a00      	cmp	r2, #0
    c3de:	d1f8      	bne.n	c3d2 <quorem+0x96>
    c3e0:	3b01      	subs	r3, #1
    c3e2:	e7f2      	b.n	c3ca <quorem+0x8e>
    c3e4:	9802      	ldr	r0, [sp, #8]
    c3e6:	9907      	ldr	r1, [sp, #28]
    c3e8:	f001 fc22 	bl	dc30 <__mcmp>
    c3ec:	2800      	cmp	r0, #0
    c3ee:	db28      	blt.n	c442 <quorem+0x106>
    c3f0:	2000      	movs	r0, #0
    c3f2:	9901      	ldr	r1, [sp, #4]
    c3f4:	9a03      	ldr	r2, [sp, #12]
    c3f6:	3701      	adds	r7, #1
    c3f8:	ca20      	ldmia	r2!, {r5}
    c3fa:	880b      	ldrh	r3, [r1, #0]
    c3fc:	1818      	adds	r0, r3, r0
    c3fe:	b2ab      	uxth	r3, r5
    c400:	1ac3      	subs	r3, r0, r3
    c402:	6808      	ldr	r0, [r1, #0]
    c404:	0c2d      	lsrs	r5, r5, #16
    c406:	0c00      	lsrs	r0, r0, #16
    c408:	1b45      	subs	r5, r0, r5
    c40a:	141e      	asrs	r6, r3, #16
    c40c:	19ad      	adds	r5, r5, r6
    c40e:	1428      	asrs	r0, r5, #16
    c410:	b29b      	uxth	r3, r3
    c412:	042d      	lsls	r5, r5, #16
    c414:	432b      	orrs	r3, r5
    c416:	c108      	stmia	r1!, {r3}
    c418:	9b04      	ldr	r3, [sp, #16]
    c41a:	4293      	cmp	r3, r2
    c41c:	d2ec      	bcs.n	c3f8 <quorem+0xbc>
    c41e:	9a01      	ldr	r2, [sp, #4]
    c420:	00a3      	lsls	r3, r4, #2
    c422:	18d3      	adds	r3, r2, r3
    c424:	681a      	ldr	r2, [r3, #0]
    c426:	2a00      	cmp	r2, #0
    c428:	d10b      	bne.n	c442 <quorem+0x106>
    c42a:	9a01      	ldr	r2, [sp, #4]
    c42c:	3b04      	subs	r3, #4
    c42e:	4293      	cmp	r3, r2
    c430:	d802      	bhi.n	c438 <quorem+0xfc>
    c432:	9b02      	ldr	r3, [sp, #8]
    c434:	611c      	str	r4, [r3, #16]
    c436:	e004      	b.n	c442 <quorem+0x106>
    c438:	681a      	ldr	r2, [r3, #0]
    c43a:	2a00      	cmp	r2, #0
    c43c:	d1f9      	bne.n	c432 <quorem+0xf6>
    c43e:	3c01      	subs	r4, #1
    c440:	e7f3      	b.n	c42a <quorem+0xee>
    c442:	1c3e      	adds	r6, r7, #0
    c444:	1c30      	adds	r0, r6, #0
    c446:	b009      	add	sp, #36	; 0x24
    c448:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0000c44c <_dtoa_r>:
    c44c:	b5f0      	push	{r4, r5, r6, r7, lr}
    c44e:	1c16      	adds	r6, r2, #0
    c450:	1c1f      	adds	r7, r3, #0
    c452:	6a44      	ldr	r4, [r0, #36]	; 0x24
    c454:	b09b      	sub	sp, #108	; 0x6c
    c456:	9008      	str	r0, [sp, #32]
    c458:	9d23      	ldr	r5, [sp, #140]	; 0x8c
    c45a:	9606      	str	r6, [sp, #24]
    c45c:	9707      	str	r7, [sp, #28]
    c45e:	2c00      	cmp	r4, #0
    c460:	d108      	bne.n	c474 <_dtoa_r+0x28>
    c462:	2010      	movs	r0, #16
    c464:	f7fd fae2 	bl	9a2c <malloc>
    c468:	9b08      	ldr	r3, [sp, #32]
    c46a:	6258      	str	r0, [r3, #36]	; 0x24
    c46c:	6044      	str	r4, [r0, #4]
    c46e:	6084      	str	r4, [r0, #8]
    c470:	6004      	str	r4, [r0, #0]
    c472:	60c4      	str	r4, [r0, #12]
    c474:	9b08      	ldr	r3, [sp, #32]
    c476:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    c478:	6819      	ldr	r1, [r3, #0]
    c47a:	2900      	cmp	r1, #0
    c47c:	d00b      	beq.n	c496 <_dtoa_r+0x4a>
    c47e:	685a      	ldr	r2, [r3, #4]
    c480:	2301      	movs	r3, #1
    c482:	4093      	lsls	r3, r2
    c484:	604a      	str	r2, [r1, #4]
    c486:	608b      	str	r3, [r1, #8]
    c488:	9808      	ldr	r0, [sp, #32]
    c48a:	f001 f9b7 	bl	d7fc <_Bfree>
    c48e:	2200      	movs	r2, #0
    c490:	9b08      	ldr	r3, [sp, #32]
    c492:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    c494:	601a      	str	r2, [r3, #0]
    c496:	9b07      	ldr	r3, [sp, #28]
    c498:	2b00      	cmp	r3, #0
    c49a:	da05      	bge.n	c4a8 <_dtoa_r+0x5c>
    c49c:	2301      	movs	r3, #1
    c49e:	602b      	str	r3, [r5, #0]
    c4a0:	007b      	lsls	r3, r7, #1
    c4a2:	085b      	lsrs	r3, r3, #1
    c4a4:	9307      	str	r3, [sp, #28]
    c4a6:	e001      	b.n	c4ac <_dtoa_r+0x60>
    c4a8:	2300      	movs	r3, #0
    c4aa:	602b      	str	r3, [r5, #0]
    c4ac:	9c07      	ldr	r4, [sp, #28]
    c4ae:	4bc6      	ldr	r3, [pc, #792]	; (c7c8 <_dtoa_r+0x37c>)
    c4b0:	1c22      	adds	r2, r4, #0
    c4b2:	9317      	str	r3, [sp, #92]	; 0x5c
    c4b4:	401a      	ands	r2, r3
    c4b6:	429a      	cmp	r2, r3
    c4b8:	d119      	bne.n	c4ee <_dtoa_r+0xa2>
    c4ba:	4bc4      	ldr	r3, [pc, #784]	; (c7cc <_dtoa_r+0x380>)
    c4bc:	9a22      	ldr	r2, [sp, #136]	; 0x88
    c4be:	6013      	str	r3, [r2, #0]
    c4c0:	9a06      	ldr	r2, [sp, #24]
    c4c2:	4bc3      	ldr	r3, [pc, #780]	; (c7d0 <_dtoa_r+0x384>)
    c4c4:	2a00      	cmp	r2, #0
    c4c6:	d102      	bne.n	c4ce <_dtoa_r+0x82>
    c4c8:	0324      	lsls	r4, r4, #12
    c4ca:	d100      	bne.n	c4ce <_dtoa_r+0x82>
    c4cc:	4bc1      	ldr	r3, [pc, #772]	; (c7d4 <_dtoa_r+0x388>)
    c4ce:	9a24      	ldr	r2, [sp, #144]	; 0x90
    c4d0:	1c18      	adds	r0, r3, #0
    c4d2:	2a00      	cmp	r2, #0
    c4d4:	d101      	bne.n	c4da <_dtoa_r+0x8e>
    c4d6:	f000 fdb6 	bl	d046 <_dtoa_r+0xbfa>
    c4da:	78d9      	ldrb	r1, [r3, #3]
    c4dc:	1cda      	adds	r2, r3, #3
    c4de:	2900      	cmp	r1, #0
    c4e0:	d000      	beq.n	c4e4 <_dtoa_r+0x98>
    c4e2:	3205      	adds	r2, #5
    c4e4:	9924      	ldr	r1, [sp, #144]	; 0x90
    c4e6:	1c18      	adds	r0, r3, #0
    c4e8:	600a      	str	r2, [r1, #0]
    c4ea:	f000 fdac 	bl	d046 <_dtoa_r+0xbfa>
    c4ee:	9e06      	ldr	r6, [sp, #24]
    c4f0:	9f07      	ldr	r7, [sp, #28]
    c4f2:	2200      	movs	r2, #0
    c4f4:	1c30      	adds	r0, r6, #0
    c4f6:	1c39      	adds	r1, r7, #0
    c4f8:	2300      	movs	r3, #0
    c4fa:	f7fa f869 	bl	65d0 <__aeabi_dcmpeq>
    c4fe:	1e05      	subs	r5, r0, #0
    c500:	d00e      	beq.n	c520 <_dtoa_r+0xd4>
    c502:	2301      	movs	r3, #1
    c504:	9a22      	ldr	r2, [sp, #136]	; 0x88
    c506:	6013      	str	r3, [r2, #0]
    c508:	4bb3      	ldr	r3, [pc, #716]	; (c7d8 <_dtoa_r+0x38c>)
    c50a:	9a24      	ldr	r2, [sp, #144]	; 0x90
    c50c:	1c18      	adds	r0, r3, #0
    c50e:	2a00      	cmp	r2, #0
    c510:	d101      	bne.n	c516 <_dtoa_r+0xca>
    c512:	f000 fd98 	bl	d046 <_dtoa_r+0xbfa>
    c516:	4ab1      	ldr	r2, [pc, #708]	; (c7dc <_dtoa_r+0x390>)
    c518:	9924      	ldr	r1, [sp, #144]	; 0x90
    c51a:	600a      	str	r2, [r1, #0]
    c51c:	f000 fd93 	bl	d046 <_dtoa_r+0xbfa>
    c520:	ab19      	add	r3, sp, #100	; 0x64
    c522:	9300      	str	r3, [sp, #0]
    c524:	ab18      	add	r3, sp, #96	; 0x60
    c526:	9301      	str	r3, [sp, #4]
    c528:	9808      	ldr	r0, [sp, #32]
    c52a:	1c32      	adds	r2, r6, #0
    c52c:	1c3b      	adds	r3, r7, #0
    c52e:	f001 fc7b 	bl	de28 <__d2b>
    c532:	0061      	lsls	r1, r4, #1
    c534:	900a      	str	r0, [sp, #40]	; 0x28
    c536:	0d49      	lsrs	r1, r1, #21
    c538:	d009      	beq.n	c54e <_dtoa_r+0x102>
    c53a:	0338      	lsls	r0, r7, #12
    c53c:	4ca8      	ldr	r4, [pc, #672]	; (c7e0 <_dtoa_r+0x394>)
    c53e:	0b00      	lsrs	r0, r0, #12
    c540:	4304      	orrs	r4, r0
    c542:	48a8      	ldr	r0, [pc, #672]	; (c7e4 <_dtoa_r+0x398>)
    c544:	1c32      	adds	r2, r6, #0
    c546:	1c23      	adds	r3, r4, #0
    c548:	180e      	adds	r6, r1, r0
    c54a:	9516      	str	r5, [sp, #88]	; 0x58
    c54c:	e01c      	b.n	c588 <_dtoa_r+0x13c>
    c54e:	9b18      	ldr	r3, [sp, #96]	; 0x60
    c550:	9a19      	ldr	r2, [sp, #100]	; 0x64
    c552:	189e      	adds	r6, r3, r2
    c554:	4ba4      	ldr	r3, [pc, #656]	; (c7e8 <_dtoa_r+0x39c>)
    c556:	429e      	cmp	r6, r3
    c558:	db09      	blt.n	c56e <_dtoa_r+0x122>
    c55a:	4ba4      	ldr	r3, [pc, #656]	; (c7ec <_dtoa_r+0x3a0>)
    c55c:	18f0      	adds	r0, r6, r3
    c55e:	9b06      	ldr	r3, [sp, #24]
    c560:	40c3      	lsrs	r3, r0
    c562:	1c18      	adds	r0, r3, #0
    c564:	4ba2      	ldr	r3, [pc, #648]	; (c7f0 <_dtoa_r+0x3a4>)
    c566:	1b9b      	subs	r3, r3, r6
    c568:	409c      	lsls	r4, r3
    c56a:	4320      	orrs	r0, r4
    c56c:	e004      	b.n	c578 <_dtoa_r+0x12c>
    c56e:	48a1      	ldr	r0, [pc, #644]	; (c7f4 <_dtoa_r+0x3a8>)
    c570:	9b06      	ldr	r3, [sp, #24]
    c572:	1b80      	subs	r0, r0, r6
    c574:	4083      	lsls	r3, r0
    c576:	1c18      	adds	r0, r3, #0
    c578:	f7fc fd94 	bl	90a4 <__aeabi_ui2d>
    c57c:	4c9e      	ldr	r4, [pc, #632]	; (c7f8 <_dtoa_r+0x3ac>)
    c57e:	1c02      	adds	r2, r0, #0
    c580:	190b      	adds	r3, r1, r4
    c582:	2101      	movs	r1, #1
    c584:	3e01      	subs	r6, #1
    c586:	9116      	str	r1, [sp, #88]	; 0x58
    c588:	1c10      	adds	r0, r2, #0
    c58a:	1c19      	adds	r1, r3, #0
    c58c:	2200      	movs	r2, #0
    c58e:	4b9b      	ldr	r3, [pc, #620]	; (c7fc <_dtoa_r+0x3b0>)
    c590:	f7fc f99c 	bl	88cc <__aeabi_dsub>
    c594:	4a9a      	ldr	r2, [pc, #616]	; (c800 <_dtoa_r+0x3b4>)
    c596:	4b9b      	ldr	r3, [pc, #620]	; (c804 <_dtoa_r+0x3b8>)
    c598:	f7fb fefe 	bl	8398 <__aeabi_dmul>
    c59c:	4a9a      	ldr	r2, [pc, #616]	; (c808 <_dtoa_r+0x3bc>)
    c59e:	4b9b      	ldr	r3, [pc, #620]	; (c80c <_dtoa_r+0x3c0>)
    c5a0:	f7fa ff94 	bl	74cc <__aeabi_dadd>
    c5a4:	1c04      	adds	r4, r0, #0
    c5a6:	1c30      	adds	r0, r6, #0
    c5a8:	1c0d      	adds	r5, r1, #0
    c5aa:	f7fc fd3f 	bl	902c <__aeabi_i2d>
    c5ae:	4a98      	ldr	r2, [pc, #608]	; (c810 <_dtoa_r+0x3c4>)
    c5b0:	4b98      	ldr	r3, [pc, #608]	; (c814 <_dtoa_r+0x3c8>)
    c5b2:	f7fb fef1 	bl	8398 <__aeabi_dmul>
    c5b6:	1c02      	adds	r2, r0, #0
    c5b8:	1c0b      	adds	r3, r1, #0
    c5ba:	1c20      	adds	r0, r4, #0
    c5bc:	1c29      	adds	r1, r5, #0
    c5be:	f7fa ff85 	bl	74cc <__aeabi_dadd>
    c5c2:	1c04      	adds	r4, r0, #0
    c5c4:	1c0d      	adds	r5, r1, #0
    c5c6:	f7fc fcfb 	bl	8fc0 <__aeabi_d2iz>
    c5ca:	1c29      	adds	r1, r5, #0
    c5cc:	9003      	str	r0, [sp, #12]
    c5ce:	2200      	movs	r2, #0
    c5d0:	1c20      	adds	r0, r4, #0
    c5d2:	2300      	movs	r3, #0
    c5d4:	f7fa f802 	bl	65dc <__aeabi_dcmplt>
    c5d8:	2800      	cmp	r0, #0
    c5da:	d00d      	beq.n	c5f8 <_dtoa_r+0x1ac>
    c5dc:	9803      	ldr	r0, [sp, #12]
    c5de:	f7fc fd25 	bl	902c <__aeabi_i2d>
    c5e2:	1c02      	adds	r2, r0, #0
    c5e4:	1c0b      	adds	r3, r1, #0
    c5e6:	1c20      	adds	r0, r4, #0
    c5e8:	1c29      	adds	r1, r5, #0
    c5ea:	f7f9 fff1 	bl	65d0 <__aeabi_dcmpeq>
    c5ee:	4243      	negs	r3, r0
    c5f0:	4143      	adcs	r3, r0
    c5f2:	9a03      	ldr	r2, [sp, #12]
    c5f4:	1ad3      	subs	r3, r2, r3
    c5f6:	9303      	str	r3, [sp, #12]
    c5f8:	2301      	movs	r3, #1
    c5fa:	9313      	str	r3, [sp, #76]	; 0x4c
    c5fc:	9b03      	ldr	r3, [sp, #12]
    c5fe:	2b16      	cmp	r3, #22
    c600:	d811      	bhi.n	c626 <_dtoa_r+0x1da>
    c602:	4a85      	ldr	r2, [pc, #532]	; (c818 <_dtoa_r+0x3cc>)
    c604:	00db      	lsls	r3, r3, #3
    c606:	18d3      	adds	r3, r2, r3
    c608:	6818      	ldr	r0, [r3, #0]
    c60a:	6859      	ldr	r1, [r3, #4]
    c60c:	9a06      	ldr	r2, [sp, #24]
    c60e:	9b07      	ldr	r3, [sp, #28]
    c610:	f7f9 fff8 	bl	6604 <__aeabi_dcmpgt>
    c614:	2800      	cmp	r0, #0
    c616:	d005      	beq.n	c624 <_dtoa_r+0x1d8>
    c618:	9b03      	ldr	r3, [sp, #12]
    c61a:	3b01      	subs	r3, #1
    c61c:	9303      	str	r3, [sp, #12]
    c61e:	2300      	movs	r3, #0
    c620:	9313      	str	r3, [sp, #76]	; 0x4c
    c622:	e000      	b.n	c626 <_dtoa_r+0x1da>
    c624:	9013      	str	r0, [sp, #76]	; 0x4c
    c626:	9b18      	ldr	r3, [sp, #96]	; 0x60
    c628:	1b9e      	subs	r6, r3, r6
    c62a:	2300      	movs	r3, #0
    c62c:	930d      	str	r3, [sp, #52]	; 0x34
    c62e:	3e01      	subs	r6, #1
    c630:	960e      	str	r6, [sp, #56]	; 0x38
    c632:	d504      	bpl.n	c63e <_dtoa_r+0x1f2>
    c634:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    c636:	425b      	negs	r3, r3
    c638:	930d      	str	r3, [sp, #52]	; 0x34
    c63a:	2300      	movs	r3, #0
    c63c:	930e      	str	r3, [sp, #56]	; 0x38
    c63e:	9b03      	ldr	r3, [sp, #12]
    c640:	2b00      	cmp	r3, #0
    c642:	db08      	blt.n	c656 <_dtoa_r+0x20a>
    c644:	9a03      	ldr	r2, [sp, #12]
    c646:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    c648:	4694      	mov	ip, r2
    c64a:	4463      	add	r3, ip
    c64c:	930e      	str	r3, [sp, #56]	; 0x38
    c64e:	2300      	movs	r3, #0
    c650:	9212      	str	r2, [sp, #72]	; 0x48
    c652:	930f      	str	r3, [sp, #60]	; 0x3c
    c654:	e007      	b.n	c666 <_dtoa_r+0x21a>
    c656:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    c658:	9a03      	ldr	r2, [sp, #12]
    c65a:	1a9b      	subs	r3, r3, r2
    c65c:	930d      	str	r3, [sp, #52]	; 0x34
    c65e:	4253      	negs	r3, r2
    c660:	930f      	str	r3, [sp, #60]	; 0x3c
    c662:	2300      	movs	r3, #0
    c664:	9312      	str	r3, [sp, #72]	; 0x48
    c666:	9b20      	ldr	r3, [sp, #128]	; 0x80
    c668:	2501      	movs	r5, #1
    c66a:	2b09      	cmp	r3, #9
    c66c:	d827      	bhi.n	c6be <_dtoa_r+0x272>
    c66e:	2b05      	cmp	r3, #5
    c670:	dd02      	ble.n	c678 <_dtoa_r+0x22c>
    c672:	2500      	movs	r5, #0
    c674:	3b04      	subs	r3, #4
    c676:	9320      	str	r3, [sp, #128]	; 0x80
    c678:	9b20      	ldr	r3, [sp, #128]	; 0x80
    c67a:	1e98      	subs	r0, r3, #2
    c67c:	2803      	cmp	r0, #3
    c67e:	d823      	bhi.n	c6c8 <_dtoa_r+0x27c>
    c680:	f002 f806 	bl	e690 <__gnu_thumb1_case_uqi>
    c684:	10040e02 	.word	0x10040e02
    c688:	2300      	movs	r3, #0
    c68a:	e000      	b.n	c68e <_dtoa_r+0x242>
    c68c:	2301      	movs	r3, #1
    c68e:	9310      	str	r3, [sp, #64]	; 0x40
    c690:	9b21      	ldr	r3, [sp, #132]	; 0x84
    c692:	2b00      	cmp	r3, #0
    c694:	dc21      	bgt.n	c6da <_dtoa_r+0x28e>
    c696:	2301      	movs	r3, #1
    c698:	930b      	str	r3, [sp, #44]	; 0x2c
    c69a:	9309      	str	r3, [sp, #36]	; 0x24
    c69c:	1c1a      	adds	r2, r3, #0
    c69e:	e01a      	b.n	c6d6 <_dtoa_r+0x28a>
    c6a0:	2300      	movs	r3, #0
    c6a2:	e000      	b.n	c6a6 <_dtoa_r+0x25a>
    c6a4:	2301      	movs	r3, #1
    c6a6:	9a03      	ldr	r2, [sp, #12]
    c6a8:	9310      	str	r3, [sp, #64]	; 0x40
    c6aa:	4694      	mov	ip, r2
    c6ac:	9b21      	ldr	r3, [sp, #132]	; 0x84
    c6ae:	4463      	add	r3, ip
    c6b0:	930b      	str	r3, [sp, #44]	; 0x2c
    c6b2:	3301      	adds	r3, #1
    c6b4:	9309      	str	r3, [sp, #36]	; 0x24
    c6b6:	2b00      	cmp	r3, #0
    c6b8:	dc12      	bgt.n	c6e0 <_dtoa_r+0x294>
    c6ba:	2301      	movs	r3, #1
    c6bc:	e010      	b.n	c6e0 <_dtoa_r+0x294>
    c6be:	2300      	movs	r3, #0
    c6c0:	9510      	str	r5, [sp, #64]	; 0x40
    c6c2:	9320      	str	r3, [sp, #128]	; 0x80
    c6c4:	3b01      	subs	r3, #1
    c6c6:	e002      	b.n	c6ce <_dtoa_r+0x282>
    c6c8:	2301      	movs	r3, #1
    c6ca:	9310      	str	r3, [sp, #64]	; 0x40
    c6cc:	3b02      	subs	r3, #2
    c6ce:	2200      	movs	r2, #0
    c6d0:	930b      	str	r3, [sp, #44]	; 0x2c
    c6d2:	9309      	str	r3, [sp, #36]	; 0x24
    c6d4:	3313      	adds	r3, #19
    c6d6:	9221      	str	r2, [sp, #132]	; 0x84
    c6d8:	e002      	b.n	c6e0 <_dtoa_r+0x294>
    c6da:	9b21      	ldr	r3, [sp, #132]	; 0x84
    c6dc:	930b      	str	r3, [sp, #44]	; 0x2c
    c6de:	9309      	str	r3, [sp, #36]	; 0x24
    c6e0:	9a08      	ldr	r2, [sp, #32]
    c6e2:	6a54      	ldr	r4, [r2, #36]	; 0x24
    c6e4:	2200      	movs	r2, #0
    c6e6:	6062      	str	r2, [r4, #4]
    c6e8:	3204      	adds	r2, #4
    c6ea:	1c11      	adds	r1, r2, #0
    c6ec:	3114      	adds	r1, #20
    c6ee:	4299      	cmp	r1, r3
    c6f0:	d804      	bhi.n	c6fc <_dtoa_r+0x2b0>
    c6f2:	6861      	ldr	r1, [r4, #4]
    c6f4:	0052      	lsls	r2, r2, #1
    c6f6:	3101      	adds	r1, #1
    c6f8:	6061      	str	r1, [r4, #4]
    c6fa:	e7f6      	b.n	c6ea <_dtoa_r+0x29e>
    c6fc:	9808      	ldr	r0, [sp, #32]
    c6fe:	6861      	ldr	r1, [r4, #4]
    c700:	f001 f844 	bl	d78c <_Balloc>
    c704:	9b08      	ldr	r3, [sp, #32]
    c706:	6020      	str	r0, [r4, #0]
    c708:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    c70a:	681b      	ldr	r3, [r3, #0]
    c70c:	930c      	str	r3, [sp, #48]	; 0x30
    c70e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    c710:	2b0e      	cmp	r3, #14
    c712:	d900      	bls.n	c716 <_dtoa_r+0x2ca>
    c714:	e188      	b.n	ca28 <_dtoa_r+0x5dc>
    c716:	2d00      	cmp	r5, #0
    c718:	d100      	bne.n	c71c <_dtoa_r+0x2d0>
    c71a:	e185      	b.n	ca28 <_dtoa_r+0x5dc>
    c71c:	9b06      	ldr	r3, [sp, #24]
    c71e:	9c07      	ldr	r4, [sp, #28]
    c720:	9314      	str	r3, [sp, #80]	; 0x50
    c722:	9415      	str	r4, [sp, #84]	; 0x54
    c724:	9b03      	ldr	r3, [sp, #12]
    c726:	2b00      	cmp	r3, #0
    c728:	dd30      	ble.n	c78c <_dtoa_r+0x340>
    c72a:	220f      	movs	r2, #15
    c72c:	493a      	ldr	r1, [pc, #232]	; (c818 <_dtoa_r+0x3cc>)
    c72e:	4013      	ands	r3, r2
    c730:	00db      	lsls	r3, r3, #3
    c732:	18cb      	adds	r3, r1, r3
    c734:	685c      	ldr	r4, [r3, #4]
    c736:	681b      	ldr	r3, [r3, #0]
    c738:	9304      	str	r3, [sp, #16]
    c73a:	9405      	str	r4, [sp, #20]
    c73c:	9b03      	ldr	r3, [sp, #12]
    c73e:	2702      	movs	r7, #2
    c740:	111d      	asrs	r5, r3, #4
    c742:	06eb      	lsls	r3, r5, #27
    c744:	d50a      	bpl.n	c75c <_dtoa_r+0x310>
    c746:	9814      	ldr	r0, [sp, #80]	; 0x50
    c748:	9915      	ldr	r1, [sp, #84]	; 0x54
    c74a:	4b34      	ldr	r3, [pc, #208]	; (c81c <_dtoa_r+0x3d0>)
    c74c:	4015      	ands	r5, r2
    c74e:	6a1a      	ldr	r2, [r3, #32]
    c750:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    c752:	f7fb f9e3 	bl	7b1c <__aeabi_ddiv>
    c756:	9006      	str	r0, [sp, #24]
    c758:	9107      	str	r1, [sp, #28]
    c75a:	3701      	adds	r7, #1
    c75c:	4c2f      	ldr	r4, [pc, #188]	; (c81c <_dtoa_r+0x3d0>)
    c75e:	2d00      	cmp	r5, #0
    c760:	d00d      	beq.n	c77e <_dtoa_r+0x332>
    c762:	07eb      	lsls	r3, r5, #31
    c764:	d508      	bpl.n	c778 <_dtoa_r+0x32c>
    c766:	9804      	ldr	r0, [sp, #16]
    c768:	9905      	ldr	r1, [sp, #20]
    c76a:	6822      	ldr	r2, [r4, #0]
    c76c:	6863      	ldr	r3, [r4, #4]
    c76e:	f7fb fe13 	bl	8398 <__aeabi_dmul>
    c772:	9004      	str	r0, [sp, #16]
    c774:	9105      	str	r1, [sp, #20]
    c776:	3701      	adds	r7, #1
    c778:	106d      	asrs	r5, r5, #1
    c77a:	3408      	adds	r4, #8
    c77c:	e7ef      	b.n	c75e <_dtoa_r+0x312>
    c77e:	9806      	ldr	r0, [sp, #24]
    c780:	9907      	ldr	r1, [sp, #28]
    c782:	9a04      	ldr	r2, [sp, #16]
    c784:	9b05      	ldr	r3, [sp, #20]
    c786:	f7fb f9c9 	bl	7b1c <__aeabi_ddiv>
    c78a:	e049      	b.n	c820 <_dtoa_r+0x3d4>
    c78c:	9b03      	ldr	r3, [sp, #12]
    c78e:	2702      	movs	r7, #2
    c790:	425d      	negs	r5, r3
    c792:	2d00      	cmp	r5, #0
    c794:	d046      	beq.n	c824 <_dtoa_r+0x3d8>
    c796:	9814      	ldr	r0, [sp, #80]	; 0x50
    c798:	9915      	ldr	r1, [sp, #84]	; 0x54
    c79a:	230f      	movs	r3, #15
    c79c:	4a1e      	ldr	r2, [pc, #120]	; (c818 <_dtoa_r+0x3cc>)
    c79e:	402b      	ands	r3, r5
    c7a0:	00db      	lsls	r3, r3, #3
    c7a2:	18d3      	adds	r3, r2, r3
    c7a4:	681a      	ldr	r2, [r3, #0]
    c7a6:	685b      	ldr	r3, [r3, #4]
    c7a8:	f7fb fdf6 	bl	8398 <__aeabi_dmul>
    c7ac:	4c1b      	ldr	r4, [pc, #108]	; (c81c <_dtoa_r+0x3d0>)
    c7ae:	112d      	asrs	r5, r5, #4
    c7b0:	2d00      	cmp	r5, #0
    c7b2:	d035      	beq.n	c820 <_dtoa_r+0x3d4>
    c7b4:	07eb      	lsls	r3, r5, #31
    c7b6:	d504      	bpl.n	c7c2 <_dtoa_r+0x376>
    c7b8:	6822      	ldr	r2, [r4, #0]
    c7ba:	6863      	ldr	r3, [r4, #4]
    c7bc:	3701      	adds	r7, #1
    c7be:	f7fb fdeb 	bl	8398 <__aeabi_dmul>
    c7c2:	106d      	asrs	r5, r5, #1
    c7c4:	3408      	adds	r4, #8
    c7c6:	e7f3      	b.n	c7b0 <_dtoa_r+0x364>
    c7c8:	7ff00000 	.word	0x7ff00000
    c7cc:	0000270f 	.word	0x0000270f
    c7d0:	0000f8ae 	.word	0x0000f8ae
    c7d4:	0000f8a5 	.word	0x0000f8a5
    c7d8:	0000f74a 	.word	0x0000f74a
    c7dc:	0000f74b 	.word	0x0000f74b
    c7e0:	3ff00000 	.word	0x3ff00000
    c7e4:	fffffc01 	.word	0xfffffc01
    c7e8:	fffffbef 	.word	0xfffffbef
    c7ec:	00000412 	.word	0x00000412
    c7f0:	fffffc0e 	.word	0xfffffc0e
    c7f4:	fffffbee 	.word	0xfffffbee
    c7f8:	fe100000 	.word	0xfe100000
    c7fc:	3ff80000 	.word	0x3ff80000
    c800:	636f4361 	.word	0x636f4361
    c804:	3fd287a7 	.word	0x3fd287a7
    c808:	8b60c8b3 	.word	0x8b60c8b3
    c80c:	3fc68a28 	.word	0x3fc68a28
    c810:	509f79fb 	.word	0x509f79fb
    c814:	3fd34413 	.word	0x3fd34413
    c818:	0000f8c0 	.word	0x0000f8c0
    c81c:	0000f988 	.word	0x0000f988
    c820:	9006      	str	r0, [sp, #24]
    c822:	9107      	str	r1, [sp, #28]
    c824:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    c826:	2b00      	cmp	r3, #0
    c828:	d01e      	beq.n	c868 <_dtoa_r+0x41c>
    c82a:	9c06      	ldr	r4, [sp, #24]
    c82c:	9d07      	ldr	r5, [sp, #28]
    c82e:	2200      	movs	r2, #0
    c830:	1c20      	adds	r0, r4, #0
    c832:	1c29      	adds	r1, r5, #0
    c834:	4bce      	ldr	r3, [pc, #824]	; (cb70 <_dtoa_r+0x724>)
    c836:	f7f9 fed1 	bl	65dc <__aeabi_dcmplt>
    c83a:	2800      	cmp	r0, #0
    c83c:	d014      	beq.n	c868 <_dtoa_r+0x41c>
    c83e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    c840:	2b00      	cmp	r3, #0
    c842:	d011      	beq.n	c868 <_dtoa_r+0x41c>
    c844:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    c846:	2b00      	cmp	r3, #0
    c848:	dc00      	bgt.n	c84c <_dtoa_r+0x400>
    c84a:	e0e9      	b.n	ca20 <_dtoa_r+0x5d4>
    c84c:	9b03      	ldr	r3, [sp, #12]
    c84e:	1c29      	adds	r1, r5, #0
    c850:	3b01      	subs	r3, #1
    c852:	9311      	str	r3, [sp, #68]	; 0x44
    c854:	1c20      	adds	r0, r4, #0
    c856:	2200      	movs	r2, #0
    c858:	4bc6      	ldr	r3, [pc, #792]	; (cb74 <_dtoa_r+0x728>)
    c85a:	f7fb fd9d 	bl	8398 <__aeabi_dmul>
    c85e:	3701      	adds	r7, #1
    c860:	9006      	str	r0, [sp, #24]
    c862:	9107      	str	r1, [sp, #28]
    c864:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    c866:	e002      	b.n	c86e <_dtoa_r+0x422>
    c868:	9b03      	ldr	r3, [sp, #12]
    c86a:	9d09      	ldr	r5, [sp, #36]	; 0x24
    c86c:	9311      	str	r3, [sp, #68]	; 0x44
    c86e:	1c38      	adds	r0, r7, #0
    c870:	9b06      	ldr	r3, [sp, #24]
    c872:	9c07      	ldr	r4, [sp, #28]
    c874:	9304      	str	r3, [sp, #16]
    c876:	9405      	str	r4, [sp, #20]
    c878:	f7fc fbd8 	bl	902c <__aeabi_i2d>
    c87c:	9a04      	ldr	r2, [sp, #16]
    c87e:	9b05      	ldr	r3, [sp, #20]
    c880:	f7fb fd8a 	bl	8398 <__aeabi_dmul>
    c884:	2200      	movs	r2, #0
    c886:	4bbc      	ldr	r3, [pc, #752]	; (cb78 <_dtoa_r+0x72c>)
    c888:	f7fa fe20 	bl	74cc <__aeabi_dadd>
    c88c:	9006      	str	r0, [sp, #24]
    c88e:	9107      	str	r1, [sp, #28]
    c890:	9e06      	ldr	r6, [sp, #24]
    c892:	9f07      	ldr	r7, [sp, #28]
    c894:	9b07      	ldr	r3, [sp, #28]
    c896:	4ab9      	ldr	r2, [pc, #740]	; (cb7c <_dtoa_r+0x730>)
    c898:	189c      	adds	r4, r3, r2
    c89a:	2d00      	cmp	r5, #0
    c89c:	d11c      	bne.n	c8d8 <_dtoa_r+0x48c>
    c89e:	9804      	ldr	r0, [sp, #16]
    c8a0:	9905      	ldr	r1, [sp, #20]
    c8a2:	2200      	movs	r2, #0
    c8a4:	4bb6      	ldr	r3, [pc, #728]	; (cb80 <_dtoa_r+0x734>)
    c8a6:	f7fc f811 	bl	88cc <__aeabi_dsub>
    c8aa:	1c32      	adds	r2, r6, #0
    c8ac:	1c23      	adds	r3, r4, #0
    c8ae:	9004      	str	r0, [sp, #16]
    c8b0:	9105      	str	r1, [sp, #20]
    c8b2:	f7f9 fea7 	bl	6604 <__aeabi_dcmpgt>
    c8b6:	2800      	cmp	r0, #0
    c8b8:	d000      	beq.n	c8bc <_dtoa_r+0x470>
    c8ba:	e263      	b.n	cd84 <_dtoa_r+0x938>
    c8bc:	9804      	ldr	r0, [sp, #16]
    c8be:	9905      	ldr	r1, [sp, #20]
    c8c0:	1c32      	adds	r2, r6, #0
    c8c2:	4eb0      	ldr	r6, [pc, #704]	; (cb84 <_dtoa_r+0x738>)
    c8c4:	9c07      	ldr	r4, [sp, #28]
    c8c6:	46b4      	mov	ip, r6
    c8c8:	4464      	add	r4, ip
    c8ca:	1c23      	adds	r3, r4, #0
    c8cc:	f7f9 fe86 	bl	65dc <__aeabi_dcmplt>
    c8d0:	2800      	cmp	r0, #0
    c8d2:	d000      	beq.n	c8d6 <_dtoa_r+0x48a>
    c8d4:	e24c      	b.n	cd70 <_dtoa_r+0x924>
    c8d6:	e0a3      	b.n	ca20 <_dtoa_r+0x5d4>
    c8d8:	4aab      	ldr	r2, [pc, #684]	; (cb88 <_dtoa_r+0x73c>)
    c8da:	1e6b      	subs	r3, r5, #1
    c8dc:	9910      	ldr	r1, [sp, #64]	; 0x40
    c8de:	00db      	lsls	r3, r3, #3
    c8e0:	18d3      	adds	r3, r2, r3
    c8e2:	2900      	cmp	r1, #0
    c8e4:	d04e      	beq.n	c984 <_dtoa_r+0x538>
    c8e6:	681a      	ldr	r2, [r3, #0]
    c8e8:	685b      	ldr	r3, [r3, #4]
    c8ea:	2000      	movs	r0, #0
    c8ec:	49a7      	ldr	r1, [pc, #668]	; (cb8c <_dtoa_r+0x740>)
    c8ee:	f7fb f915 	bl	7b1c <__aeabi_ddiv>
    c8f2:	1c32      	adds	r2, r6, #0
    c8f4:	1c23      	adds	r3, r4, #0
    c8f6:	f7fb ffe9 	bl	88cc <__aeabi_dsub>
    c8fa:	9e04      	ldr	r6, [sp, #16]
    c8fc:	9f05      	ldr	r7, [sp, #20]
    c8fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    c900:	9006      	str	r0, [sp, #24]
    c902:	9107      	str	r1, [sp, #28]
    c904:	9304      	str	r3, [sp, #16]
    c906:	1c39      	adds	r1, r7, #0
    c908:	1c30      	adds	r0, r6, #0
    c90a:	f7fc fb59 	bl	8fc0 <__aeabi_d2iz>
    c90e:	1c04      	adds	r4, r0, #0
    c910:	f7fc fb8c 	bl	902c <__aeabi_i2d>
    c914:	1c02      	adds	r2, r0, #0
    c916:	1c0b      	adds	r3, r1, #0
    c918:	1c30      	adds	r0, r6, #0
    c91a:	1c39      	adds	r1, r7, #0
    c91c:	f7fb ffd6 	bl	88cc <__aeabi_dsub>
    c920:	9b04      	ldr	r3, [sp, #16]
    c922:	3430      	adds	r4, #48	; 0x30
    c924:	3301      	adds	r3, #1
    c926:	9304      	str	r3, [sp, #16]
    c928:	3b01      	subs	r3, #1
    c92a:	701c      	strb	r4, [r3, #0]
    c92c:	9a06      	ldr	r2, [sp, #24]
    c92e:	9b07      	ldr	r3, [sp, #28]
    c930:	1c06      	adds	r6, r0, #0
    c932:	1c0f      	adds	r7, r1, #0
    c934:	f7f9 fe52 	bl	65dc <__aeabi_dcmplt>
    c938:	2800      	cmp	r0, #0
    c93a:	d000      	beq.n	c93e <_dtoa_r+0x4f2>
    c93c:	e361      	b.n	d002 <_dtoa_r+0xbb6>
    c93e:	1c32      	adds	r2, r6, #0
    c940:	1c3b      	adds	r3, r7, #0
    c942:	2000      	movs	r0, #0
    c944:	498a      	ldr	r1, [pc, #552]	; (cb70 <_dtoa_r+0x724>)
    c946:	f7fb ffc1 	bl	88cc <__aeabi_dsub>
    c94a:	9a06      	ldr	r2, [sp, #24]
    c94c:	9b07      	ldr	r3, [sp, #28]
    c94e:	f7f9 fe45 	bl	65dc <__aeabi_dcmplt>
    c952:	2800      	cmp	r0, #0
    c954:	d000      	beq.n	c958 <_dtoa_r+0x50c>
    c956:	e0cd      	b.n	caf4 <_dtoa_r+0x6a8>
    c958:	9b04      	ldr	r3, [sp, #16]
    c95a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    c95c:	1a9b      	subs	r3, r3, r2
    c95e:	42ab      	cmp	r3, r5
    c960:	da5e      	bge.n	ca20 <_dtoa_r+0x5d4>
    c962:	9806      	ldr	r0, [sp, #24]
    c964:	9907      	ldr	r1, [sp, #28]
    c966:	2200      	movs	r2, #0
    c968:	4b82      	ldr	r3, [pc, #520]	; (cb74 <_dtoa_r+0x728>)
    c96a:	f7fb fd15 	bl	8398 <__aeabi_dmul>
    c96e:	2200      	movs	r2, #0
    c970:	9006      	str	r0, [sp, #24]
    c972:	9107      	str	r1, [sp, #28]
    c974:	4b7f      	ldr	r3, [pc, #508]	; (cb74 <_dtoa_r+0x728>)
    c976:	1c30      	adds	r0, r6, #0
    c978:	1c39      	adds	r1, r7, #0
    c97a:	f7fb fd0d 	bl	8398 <__aeabi_dmul>
    c97e:	1c06      	adds	r6, r0, #0
    c980:	1c0f      	adds	r7, r1, #0
    c982:	e7c0      	b.n	c906 <_dtoa_r+0x4ba>
    c984:	6818      	ldr	r0, [r3, #0]
    c986:	6859      	ldr	r1, [r3, #4]
    c988:	1c32      	adds	r2, r6, #0
    c98a:	1c23      	adds	r3, r4, #0
    c98c:	f7fb fd04 	bl	8398 <__aeabi_dmul>
    c990:	9e04      	ldr	r6, [sp, #16]
    c992:	9f05      	ldr	r7, [sp, #20]
    c994:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    c996:	9006      	str	r0, [sp, #24]
    c998:	9107      	str	r1, [sp, #28]
    c99a:	1963      	adds	r3, r4, r5
    c99c:	9304      	str	r3, [sp, #16]
    c99e:	1c39      	adds	r1, r7, #0
    c9a0:	1c30      	adds	r0, r6, #0
    c9a2:	f7fc fb0d 	bl	8fc0 <__aeabi_d2iz>
    c9a6:	1c05      	adds	r5, r0, #0
    c9a8:	f7fc fb40 	bl	902c <__aeabi_i2d>
    c9ac:	1c0b      	adds	r3, r1, #0
    c9ae:	1c02      	adds	r2, r0, #0
    c9b0:	1c39      	adds	r1, r7, #0
    c9b2:	1c30      	adds	r0, r6, #0
    c9b4:	f7fb ff8a 	bl	88cc <__aeabi_dsub>
    c9b8:	3530      	adds	r5, #48	; 0x30
    c9ba:	9b04      	ldr	r3, [sp, #16]
    c9bc:	7025      	strb	r5, [r4, #0]
    c9be:	3401      	adds	r4, #1
    c9c0:	1c06      	adds	r6, r0, #0
    c9c2:	1c0f      	adds	r7, r1, #0
    c9c4:	42a3      	cmp	r3, r4
    c9c6:	d124      	bne.n	ca12 <_dtoa_r+0x5c6>
    c9c8:	2200      	movs	r2, #0
    c9ca:	9806      	ldr	r0, [sp, #24]
    c9cc:	9907      	ldr	r1, [sp, #28]
    c9ce:	4b6f      	ldr	r3, [pc, #444]	; (cb8c <_dtoa_r+0x740>)
    c9d0:	f7fa fd7c 	bl	74cc <__aeabi_dadd>
    c9d4:	1c02      	adds	r2, r0, #0
    c9d6:	1c0b      	adds	r3, r1, #0
    c9d8:	1c30      	adds	r0, r6, #0
    c9da:	1c39      	adds	r1, r7, #0
    c9dc:	f7f9 fe12 	bl	6604 <__aeabi_dcmpgt>
    c9e0:	2800      	cmp	r0, #0
    c9e2:	d000      	beq.n	c9e6 <_dtoa_r+0x59a>
    c9e4:	e086      	b.n	caf4 <_dtoa_r+0x6a8>
    c9e6:	9a06      	ldr	r2, [sp, #24]
    c9e8:	9b07      	ldr	r3, [sp, #28]
    c9ea:	2000      	movs	r0, #0
    c9ec:	4967      	ldr	r1, [pc, #412]	; (cb8c <_dtoa_r+0x740>)
    c9ee:	f7fb ff6d 	bl	88cc <__aeabi_dsub>
    c9f2:	1c02      	adds	r2, r0, #0
    c9f4:	1c0b      	adds	r3, r1, #0
    c9f6:	1c30      	adds	r0, r6, #0
    c9f8:	1c39      	adds	r1, r7, #0
    c9fa:	f7f9 fdef 	bl	65dc <__aeabi_dcmplt>
    c9fe:	2800      	cmp	r0, #0
    ca00:	d00e      	beq.n	ca20 <_dtoa_r+0x5d4>
    ca02:	9b04      	ldr	r3, [sp, #16]
    ca04:	3b01      	subs	r3, #1
    ca06:	781a      	ldrb	r2, [r3, #0]
    ca08:	2a30      	cmp	r2, #48	; 0x30
    ca0a:	d000      	beq.n	ca0e <_dtoa_r+0x5c2>
    ca0c:	e2f9      	b.n	d002 <_dtoa_r+0xbb6>
    ca0e:	9304      	str	r3, [sp, #16]
    ca10:	e7f7      	b.n	ca02 <_dtoa_r+0x5b6>
    ca12:	2200      	movs	r2, #0
    ca14:	4b57      	ldr	r3, [pc, #348]	; (cb74 <_dtoa_r+0x728>)
    ca16:	f7fb fcbf 	bl	8398 <__aeabi_dmul>
    ca1a:	1c06      	adds	r6, r0, #0
    ca1c:	1c0f      	adds	r7, r1, #0
    ca1e:	e7be      	b.n	c99e <_dtoa_r+0x552>
    ca20:	9b14      	ldr	r3, [sp, #80]	; 0x50
    ca22:	9c15      	ldr	r4, [sp, #84]	; 0x54
    ca24:	9306      	str	r3, [sp, #24]
    ca26:	9407      	str	r4, [sp, #28]
    ca28:	9b19      	ldr	r3, [sp, #100]	; 0x64
    ca2a:	2b00      	cmp	r3, #0
    ca2c:	da00      	bge.n	ca30 <_dtoa_r+0x5e4>
    ca2e:	e086      	b.n	cb3e <_dtoa_r+0x6f2>
    ca30:	9a03      	ldr	r2, [sp, #12]
    ca32:	2a0e      	cmp	r2, #14
    ca34:	dd00      	ble.n	ca38 <_dtoa_r+0x5ec>
    ca36:	e082      	b.n	cb3e <_dtoa_r+0x6f2>
    ca38:	00d3      	lsls	r3, r2, #3
    ca3a:	4a53      	ldr	r2, [pc, #332]	; (cb88 <_dtoa_r+0x73c>)
    ca3c:	18d3      	adds	r3, r2, r3
    ca3e:	681e      	ldr	r6, [r3, #0]
    ca40:	685f      	ldr	r7, [r3, #4]
    ca42:	9b21      	ldr	r3, [sp, #132]	; 0x84
    ca44:	2b00      	cmp	r3, #0
    ca46:	da14      	bge.n	ca72 <_dtoa_r+0x626>
    ca48:	9b09      	ldr	r3, [sp, #36]	; 0x24
    ca4a:	2b00      	cmp	r3, #0
    ca4c:	dc11      	bgt.n	ca72 <_dtoa_r+0x626>
    ca4e:	d000      	beq.n	ca52 <_dtoa_r+0x606>
    ca50:	e190      	b.n	cd74 <_dtoa_r+0x928>
    ca52:	1c30      	adds	r0, r6, #0
    ca54:	1c39      	adds	r1, r7, #0
    ca56:	2200      	movs	r2, #0
    ca58:	4b49      	ldr	r3, [pc, #292]	; (cb80 <_dtoa_r+0x734>)
    ca5a:	f7fb fc9d 	bl	8398 <__aeabi_dmul>
    ca5e:	9a06      	ldr	r2, [sp, #24]
    ca60:	9b07      	ldr	r3, [sp, #28]
    ca62:	f7f9 fdd9 	bl	6618 <__aeabi_dcmpge>
    ca66:	9f09      	ldr	r7, [sp, #36]	; 0x24
    ca68:	1c3e      	adds	r6, r7, #0
    ca6a:	2800      	cmp	r0, #0
    ca6c:	d000      	beq.n	ca70 <_dtoa_r+0x624>
    ca6e:	e183      	b.n	cd78 <_dtoa_r+0x92c>
    ca70:	e18c      	b.n	cd8c <_dtoa_r+0x940>
    ca72:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    ca74:	9c06      	ldr	r4, [sp, #24]
    ca76:	9d07      	ldr	r5, [sp, #28]
    ca78:	9304      	str	r3, [sp, #16]
    ca7a:	1c32      	adds	r2, r6, #0
    ca7c:	1c3b      	adds	r3, r7, #0
    ca7e:	1c20      	adds	r0, r4, #0
    ca80:	1c29      	adds	r1, r5, #0
    ca82:	f7fb f84b 	bl	7b1c <__aeabi_ddiv>
    ca86:	f7fc fa9b 	bl	8fc0 <__aeabi_d2iz>
    ca8a:	9006      	str	r0, [sp, #24]
    ca8c:	f7fc face 	bl	902c <__aeabi_i2d>
    ca90:	1c32      	adds	r2, r6, #0
    ca92:	1c3b      	adds	r3, r7, #0
    ca94:	f7fb fc80 	bl	8398 <__aeabi_dmul>
    ca98:	1c02      	adds	r2, r0, #0
    ca9a:	1c0b      	adds	r3, r1, #0
    ca9c:	1c20      	adds	r0, r4, #0
    ca9e:	1c29      	adds	r1, r5, #0
    caa0:	f7fb ff14 	bl	88cc <__aeabi_dsub>
    caa4:	1c0b      	adds	r3, r1, #0
    caa6:	9904      	ldr	r1, [sp, #16]
    caa8:	1c02      	adds	r2, r0, #0
    caaa:	9806      	ldr	r0, [sp, #24]
    caac:	3101      	adds	r1, #1
    caae:	9104      	str	r1, [sp, #16]
    cab0:	3030      	adds	r0, #48	; 0x30
    cab2:	3901      	subs	r1, #1
    cab4:	7008      	strb	r0, [r1, #0]
    cab6:	980c      	ldr	r0, [sp, #48]	; 0x30
    cab8:	9904      	ldr	r1, [sp, #16]
    caba:	1a09      	subs	r1, r1, r0
    cabc:	9809      	ldr	r0, [sp, #36]	; 0x24
    cabe:	4281      	cmp	r1, r0
    cac0:	d12e      	bne.n	cb20 <_dtoa_r+0x6d4>
    cac2:	1c10      	adds	r0, r2, #0
    cac4:	1c19      	adds	r1, r3, #0
    cac6:	f7fa fd01 	bl	74cc <__aeabi_dadd>
    caca:	1c32      	adds	r2, r6, #0
    cacc:	1c3b      	adds	r3, r7, #0
    cace:	1c04      	adds	r4, r0, #0
    cad0:	1c0d      	adds	r5, r1, #0
    cad2:	f7f9 fd97 	bl	6604 <__aeabi_dcmpgt>
    cad6:	2800      	cmp	r0, #0
    cad8:	d110      	bne.n	cafc <_dtoa_r+0x6b0>
    cada:	1c20      	adds	r0, r4, #0
    cadc:	1c29      	adds	r1, r5, #0
    cade:	1c32      	adds	r2, r6, #0
    cae0:	1c3b      	adds	r3, r7, #0
    cae2:	f7f9 fd75 	bl	65d0 <__aeabi_dcmpeq>
    cae6:	2800      	cmp	r0, #0
    cae8:	d100      	bne.n	caec <_dtoa_r+0x6a0>
    caea:	e28c      	b.n	d006 <_dtoa_r+0xbba>
    caec:	9b06      	ldr	r3, [sp, #24]
    caee:	07db      	lsls	r3, r3, #31
    caf0:	d404      	bmi.n	cafc <_dtoa_r+0x6b0>
    caf2:	e288      	b.n	d006 <_dtoa_r+0xbba>
    caf4:	9b11      	ldr	r3, [sp, #68]	; 0x44
    caf6:	9303      	str	r3, [sp, #12]
    caf8:	e000      	b.n	cafc <_dtoa_r+0x6b0>
    cafa:	9304      	str	r3, [sp, #16]
    cafc:	9b04      	ldr	r3, [sp, #16]
    cafe:	3b01      	subs	r3, #1
    cb00:	781a      	ldrb	r2, [r3, #0]
    cb02:	2a39      	cmp	r2, #57	; 0x39
    cb04:	d108      	bne.n	cb18 <_dtoa_r+0x6cc>
    cb06:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    cb08:	4293      	cmp	r3, r2
    cb0a:	d1f6      	bne.n	cafa <_dtoa_r+0x6ae>
    cb0c:	9b03      	ldr	r3, [sp, #12]
    cb0e:	3301      	adds	r3, #1
    cb10:	9303      	str	r3, [sp, #12]
    cb12:	2330      	movs	r3, #48	; 0x30
    cb14:	7013      	strb	r3, [r2, #0]
    cb16:	1c13      	adds	r3, r2, #0
    cb18:	781a      	ldrb	r2, [r3, #0]
    cb1a:	3201      	adds	r2, #1
    cb1c:	701a      	strb	r2, [r3, #0]
    cb1e:	e272      	b.n	d006 <_dtoa_r+0xbba>
    cb20:	1c10      	adds	r0, r2, #0
    cb22:	1c19      	adds	r1, r3, #0
    cb24:	2200      	movs	r2, #0
    cb26:	4b13      	ldr	r3, [pc, #76]	; (cb74 <_dtoa_r+0x728>)
    cb28:	f7fb fc36 	bl	8398 <__aeabi_dmul>
    cb2c:	2200      	movs	r2, #0
    cb2e:	2300      	movs	r3, #0
    cb30:	1c04      	adds	r4, r0, #0
    cb32:	1c0d      	adds	r5, r1, #0
    cb34:	f7f9 fd4c 	bl	65d0 <__aeabi_dcmpeq>
    cb38:	2800      	cmp	r0, #0
    cb3a:	d09e      	beq.n	ca7a <_dtoa_r+0x62e>
    cb3c:	e263      	b.n	d006 <_dtoa_r+0xbba>
    cb3e:	9a10      	ldr	r2, [sp, #64]	; 0x40
    cb40:	2a00      	cmp	r2, #0
    cb42:	d044      	beq.n	cbce <_dtoa_r+0x782>
    cb44:	9a20      	ldr	r2, [sp, #128]	; 0x80
    cb46:	2a01      	cmp	r2, #1
    cb48:	dc0b      	bgt.n	cb62 <_dtoa_r+0x716>
    cb4a:	9a16      	ldr	r2, [sp, #88]	; 0x58
    cb4c:	2a00      	cmp	r2, #0
    cb4e:	d002      	beq.n	cb56 <_dtoa_r+0x70a>
    cb50:	4a0f      	ldr	r2, [pc, #60]	; (cb90 <_dtoa_r+0x744>)
    cb52:	189b      	adds	r3, r3, r2
    cb54:	e002      	b.n	cb5c <_dtoa_r+0x710>
    cb56:	2336      	movs	r3, #54	; 0x36
    cb58:	9a18      	ldr	r2, [sp, #96]	; 0x60
    cb5a:	1a9b      	subs	r3, r3, r2
    cb5c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
    cb5e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    cb60:	e029      	b.n	cbb6 <_dtoa_r+0x76a>
    cb62:	9b09      	ldr	r3, [sp, #36]	; 0x24
    cb64:	1e5d      	subs	r5, r3, #1
    cb66:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    cb68:	42ab      	cmp	r3, r5
    cb6a:	db13      	blt.n	cb94 <_dtoa_r+0x748>
    cb6c:	1b5d      	subs	r5, r3, r5
    cb6e:	e018      	b.n	cba2 <_dtoa_r+0x756>
    cb70:	3ff00000 	.word	0x3ff00000
    cb74:	40240000 	.word	0x40240000
    cb78:	401c0000 	.word	0x401c0000
    cb7c:	fcc00000 	.word	0xfcc00000
    cb80:	40140000 	.word	0x40140000
    cb84:	7cc00000 	.word	0x7cc00000
    cb88:	0000f8c0 	.word	0x0000f8c0
    cb8c:	3fe00000 	.word	0x3fe00000
    cb90:	00000433 	.word	0x00000433
    cb94:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    cb96:	950f      	str	r5, [sp, #60]	; 0x3c
    cb98:	1aea      	subs	r2, r5, r3
    cb9a:	2500      	movs	r5, #0
    cb9c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    cb9e:	189b      	adds	r3, r3, r2
    cba0:	9312      	str	r3, [sp, #72]	; 0x48
    cba2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    cba4:	2b00      	cmp	r3, #0
    cba6:	da04      	bge.n	cbb2 <_dtoa_r+0x766>
    cba8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    cbaa:	9a09      	ldr	r2, [sp, #36]	; 0x24
    cbac:	1a9c      	subs	r4, r3, r2
    cbae:	2300      	movs	r3, #0
    cbb0:	e001      	b.n	cbb6 <_dtoa_r+0x76a>
    cbb2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    cbb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    cbb6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    cbb8:	9808      	ldr	r0, [sp, #32]
    cbba:	18d2      	adds	r2, r2, r3
    cbbc:	920d      	str	r2, [sp, #52]	; 0x34
    cbbe:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    cbc0:	2101      	movs	r1, #1
    cbc2:	18d3      	adds	r3, r2, r3
    cbc4:	930e      	str	r3, [sp, #56]	; 0x38
    cbc6:	f000 fef8 	bl	d9ba <__i2b>
    cbca:	1c06      	adds	r6, r0, #0
    cbcc:	e002      	b.n	cbd4 <_dtoa_r+0x788>
    cbce:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
    cbd0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    cbd2:	9e10      	ldr	r6, [sp, #64]	; 0x40
    cbd4:	2c00      	cmp	r4, #0
    cbd6:	d00c      	beq.n	cbf2 <_dtoa_r+0x7a6>
    cbd8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    cbda:	2b00      	cmp	r3, #0
    cbdc:	dd09      	ble.n	cbf2 <_dtoa_r+0x7a6>
    cbde:	42a3      	cmp	r3, r4
    cbe0:	dd00      	ble.n	cbe4 <_dtoa_r+0x798>
    cbe2:	1c23      	adds	r3, r4, #0
    cbe4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    cbe6:	1ae4      	subs	r4, r4, r3
    cbe8:	1ad2      	subs	r2, r2, r3
    cbea:	920d      	str	r2, [sp, #52]	; 0x34
    cbec:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    cbee:	1ad3      	subs	r3, r2, r3
    cbf0:	930e      	str	r3, [sp, #56]	; 0x38
    cbf2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    cbf4:	2b00      	cmp	r3, #0
    cbf6:	dd21      	ble.n	cc3c <_dtoa_r+0x7f0>
    cbf8:	9b10      	ldr	r3, [sp, #64]	; 0x40
    cbfa:	2b00      	cmp	r3, #0
    cbfc:	d018      	beq.n	cc30 <_dtoa_r+0x7e4>
    cbfe:	2d00      	cmp	r5, #0
    cc00:	dd10      	ble.n	cc24 <_dtoa_r+0x7d8>
    cc02:	1c31      	adds	r1, r6, #0
    cc04:	1c2a      	adds	r2, r5, #0
    cc06:	9808      	ldr	r0, [sp, #32]
    cc08:	f000 ff6e 	bl	dae8 <__pow5mult>
    cc0c:	1c06      	adds	r6, r0, #0
    cc0e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    cc10:	1c31      	adds	r1, r6, #0
    cc12:	9808      	ldr	r0, [sp, #32]
    cc14:	f000 feda 	bl	d9cc <__multiply>
    cc18:	1c07      	adds	r7, r0, #0
    cc1a:	990a      	ldr	r1, [sp, #40]	; 0x28
    cc1c:	9808      	ldr	r0, [sp, #32]
    cc1e:	f000 fded 	bl	d7fc <_Bfree>
    cc22:	970a      	str	r7, [sp, #40]	; 0x28
    cc24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    cc26:	1b5a      	subs	r2, r3, r5
    cc28:	d008      	beq.n	cc3c <_dtoa_r+0x7f0>
    cc2a:	9808      	ldr	r0, [sp, #32]
    cc2c:	990a      	ldr	r1, [sp, #40]	; 0x28
    cc2e:	e002      	b.n	cc36 <_dtoa_r+0x7ea>
    cc30:	9808      	ldr	r0, [sp, #32]
    cc32:	990a      	ldr	r1, [sp, #40]	; 0x28
    cc34:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    cc36:	f000 ff57 	bl	dae8 <__pow5mult>
    cc3a:	900a      	str	r0, [sp, #40]	; 0x28
    cc3c:	9808      	ldr	r0, [sp, #32]
    cc3e:	2101      	movs	r1, #1
    cc40:	f000 febb 	bl	d9ba <__i2b>
    cc44:	9b12      	ldr	r3, [sp, #72]	; 0x48
    cc46:	1c07      	adds	r7, r0, #0
    cc48:	2b00      	cmp	r3, #0
    cc4a:	dd0a      	ble.n	cc62 <_dtoa_r+0x816>
    cc4c:	1c39      	adds	r1, r7, #0
    cc4e:	1c1a      	adds	r2, r3, #0
    cc50:	9808      	ldr	r0, [sp, #32]
    cc52:	f000 ff49 	bl	dae8 <__pow5mult>
    cc56:	9b20      	ldr	r3, [sp, #128]	; 0x80
    cc58:	1c07      	adds	r7, r0, #0
    cc5a:	2500      	movs	r5, #0
    cc5c:	2b01      	cmp	r3, #1
    cc5e:	dc1b      	bgt.n	cc98 <_dtoa_r+0x84c>
    cc60:	e003      	b.n	cc6a <_dtoa_r+0x81e>
    cc62:	9b20      	ldr	r3, [sp, #128]	; 0x80
    cc64:	2500      	movs	r5, #0
    cc66:	2b01      	cmp	r3, #1
    cc68:	dc12      	bgt.n	cc90 <_dtoa_r+0x844>
    cc6a:	2500      	movs	r5, #0
    cc6c:	9b06      	ldr	r3, [sp, #24]
    cc6e:	42ab      	cmp	r3, r5
    cc70:	d10e      	bne.n	cc90 <_dtoa_r+0x844>
    cc72:	9b07      	ldr	r3, [sp, #28]
    cc74:	031b      	lsls	r3, r3, #12
    cc76:	42ab      	cmp	r3, r5
    cc78:	d10a      	bne.n	cc90 <_dtoa_r+0x844>
    cc7a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    cc7c:	9a07      	ldr	r2, [sp, #28]
    cc7e:	4213      	tst	r3, r2
    cc80:	d006      	beq.n	cc90 <_dtoa_r+0x844>
    cc82:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    cc84:	3501      	adds	r5, #1
    cc86:	3301      	adds	r3, #1
    cc88:	930d      	str	r3, [sp, #52]	; 0x34
    cc8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    cc8c:	3301      	adds	r3, #1
    cc8e:	930e      	str	r3, [sp, #56]	; 0x38
    cc90:	9b12      	ldr	r3, [sp, #72]	; 0x48
    cc92:	2001      	movs	r0, #1
    cc94:	2b00      	cmp	r3, #0
    cc96:	d008      	beq.n	ccaa <_dtoa_r+0x85e>
    cc98:	693b      	ldr	r3, [r7, #16]
    cc9a:	3303      	adds	r3, #3
    cc9c:	009b      	lsls	r3, r3, #2
    cc9e:	18fb      	adds	r3, r7, r3
    cca0:	6858      	ldr	r0, [r3, #4]
    cca2:	f000 fe40 	bl	d926 <__hi0bits>
    cca6:	2320      	movs	r3, #32
    cca8:	1a18      	subs	r0, r3, r0
    ccaa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    ccac:	18c0      	adds	r0, r0, r3
    ccae:	231f      	movs	r3, #31
    ccb0:	4018      	ands	r0, r3
    ccb2:	d009      	beq.n	ccc8 <_dtoa_r+0x87c>
    ccb4:	3301      	adds	r3, #1
    ccb6:	1a1b      	subs	r3, r3, r0
    ccb8:	2b04      	cmp	r3, #4
    ccba:	dd02      	ble.n	ccc2 <_dtoa_r+0x876>
    ccbc:	231c      	movs	r3, #28
    ccbe:	1a18      	subs	r0, r3, r0
    ccc0:	e003      	b.n	ccca <_dtoa_r+0x87e>
    ccc2:	2b04      	cmp	r3, #4
    ccc4:	d008      	beq.n	ccd8 <_dtoa_r+0x88c>
    ccc6:	1c18      	adds	r0, r3, #0
    ccc8:	301c      	adds	r0, #28
    ccca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    cccc:	1824      	adds	r4, r4, r0
    ccce:	181b      	adds	r3, r3, r0
    ccd0:	930d      	str	r3, [sp, #52]	; 0x34
    ccd2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    ccd4:	181b      	adds	r3, r3, r0
    ccd6:	930e      	str	r3, [sp, #56]	; 0x38
    ccd8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    ccda:	2b00      	cmp	r3, #0
    ccdc:	dd05      	ble.n	ccea <_dtoa_r+0x89e>
    ccde:	9808      	ldr	r0, [sp, #32]
    cce0:	990a      	ldr	r1, [sp, #40]	; 0x28
    cce2:	1c1a      	adds	r2, r3, #0
    cce4:	f000 ff52 	bl	db8c <__lshift>
    cce8:	900a      	str	r0, [sp, #40]	; 0x28
    ccea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    ccec:	2b00      	cmp	r3, #0
    ccee:	dd05      	ble.n	ccfc <_dtoa_r+0x8b0>
    ccf0:	1c39      	adds	r1, r7, #0
    ccf2:	9808      	ldr	r0, [sp, #32]
    ccf4:	1c1a      	adds	r2, r3, #0
    ccf6:	f000 ff49 	bl	db8c <__lshift>
    ccfa:	1c07      	adds	r7, r0, #0
    ccfc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    ccfe:	2b00      	cmp	r3, #0
    cd00:	d01e      	beq.n	cd40 <_dtoa_r+0x8f4>
    cd02:	980a      	ldr	r0, [sp, #40]	; 0x28
    cd04:	1c39      	adds	r1, r7, #0
    cd06:	f000 ff93 	bl	dc30 <__mcmp>
    cd0a:	2800      	cmp	r0, #0
    cd0c:	da18      	bge.n	cd40 <_dtoa_r+0x8f4>
    cd0e:	9b03      	ldr	r3, [sp, #12]
    cd10:	9808      	ldr	r0, [sp, #32]
    cd12:	3b01      	subs	r3, #1
    cd14:	9303      	str	r3, [sp, #12]
    cd16:	990a      	ldr	r1, [sp, #40]	; 0x28
    cd18:	2300      	movs	r3, #0
    cd1a:	220a      	movs	r2, #10
    cd1c:	f000 fd87 	bl	d82e <__multadd>
    cd20:	9b10      	ldr	r3, [sp, #64]	; 0x40
    cd22:	900a      	str	r0, [sp, #40]	; 0x28
    cd24:	2b00      	cmp	r3, #0
    cd26:	d100      	bne.n	cd2a <_dtoa_r+0x8de>
    cd28:	e17f      	b.n	d02a <_dtoa_r+0xbde>
    cd2a:	1c31      	adds	r1, r6, #0
    cd2c:	2300      	movs	r3, #0
    cd2e:	9808      	ldr	r0, [sp, #32]
    cd30:	220a      	movs	r2, #10
    cd32:	f000 fd7c 	bl	d82e <__multadd>
    cd36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    cd38:	1c06      	adds	r6, r0, #0
    cd3a:	2b00      	cmp	r3, #0
    cd3c:	dc3c      	bgt.n	cdb8 <_dtoa_r+0x96c>
    cd3e:	e17d      	b.n	d03c <_dtoa_r+0xbf0>
    cd40:	9b09      	ldr	r3, [sp, #36]	; 0x24
    cd42:	2b00      	cmp	r3, #0
    cd44:	dc2e      	bgt.n	cda4 <_dtoa_r+0x958>
    cd46:	9b20      	ldr	r3, [sp, #128]	; 0x80
    cd48:	2b02      	cmp	r3, #2
    cd4a:	dd2b      	ble.n	cda4 <_dtoa_r+0x958>
    cd4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    cd4e:	930b      	str	r3, [sp, #44]	; 0x2c
    cd50:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    cd52:	2b00      	cmp	r3, #0
    cd54:	d110      	bne.n	cd78 <_dtoa_r+0x92c>
    cd56:	1c39      	adds	r1, r7, #0
    cd58:	9808      	ldr	r0, [sp, #32]
    cd5a:	2205      	movs	r2, #5
    cd5c:	f000 fd67 	bl	d82e <__multadd>
    cd60:	1c07      	adds	r7, r0, #0
    cd62:	980a      	ldr	r0, [sp, #40]	; 0x28
    cd64:	1c39      	adds	r1, r7, #0
    cd66:	f000 ff63 	bl	dc30 <__mcmp>
    cd6a:	2800      	cmp	r0, #0
    cd6c:	dc0e      	bgt.n	cd8c <_dtoa_r+0x940>
    cd6e:	e003      	b.n	cd78 <_dtoa_r+0x92c>
    cd70:	1c2f      	adds	r7, r5, #0
    cd72:	e000      	b.n	cd76 <_dtoa_r+0x92a>
    cd74:	2700      	movs	r7, #0
    cd76:	1c3e      	adds	r6, r7, #0
    cd78:	9b21      	ldr	r3, [sp, #132]	; 0x84
    cd7a:	43db      	mvns	r3, r3
    cd7c:	9303      	str	r3, [sp, #12]
    cd7e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    cd80:	9304      	str	r3, [sp, #16]
    cd82:	e00c      	b.n	cd9e <_dtoa_r+0x952>
    cd84:	1c2f      	adds	r7, r5, #0
    cd86:	1c2e      	adds	r6, r5, #0
    cd88:	9b11      	ldr	r3, [sp, #68]	; 0x44
    cd8a:	9303      	str	r3, [sp, #12]
    cd8c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    cd8e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    cd90:	3301      	adds	r3, #1
    cd92:	9304      	str	r3, [sp, #16]
    cd94:	2331      	movs	r3, #49	; 0x31
    cd96:	7013      	strb	r3, [r2, #0]
    cd98:	9b03      	ldr	r3, [sp, #12]
    cd9a:	3301      	adds	r3, #1
    cd9c:	9303      	str	r3, [sp, #12]
    cd9e:	9609      	str	r6, [sp, #36]	; 0x24
    cda0:	2600      	movs	r6, #0
    cda2:	e11a      	b.n	cfda <_dtoa_r+0xb8e>
    cda4:	9b10      	ldr	r3, [sp, #64]	; 0x40
    cda6:	2b00      	cmp	r3, #0
    cda8:	d104      	bne.n	cdb4 <_dtoa_r+0x968>
    cdaa:	9b09      	ldr	r3, [sp, #36]	; 0x24
    cdac:	930b      	str	r3, [sp, #44]	; 0x2c
    cdae:	9d0c      	ldr	r5, [sp, #48]	; 0x30
    cdb0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    cdb2:	e0d0      	b.n	cf56 <_dtoa_r+0xb0a>
    cdb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    cdb6:	930b      	str	r3, [sp, #44]	; 0x2c
    cdb8:	2c00      	cmp	r4, #0
    cdba:	dd05      	ble.n	cdc8 <_dtoa_r+0x97c>
    cdbc:	1c31      	adds	r1, r6, #0
    cdbe:	9808      	ldr	r0, [sp, #32]
    cdc0:	1c22      	adds	r2, r4, #0
    cdc2:	f000 fee3 	bl	db8c <__lshift>
    cdc6:	1c06      	adds	r6, r0, #0
    cdc8:	9609      	str	r6, [sp, #36]	; 0x24
    cdca:	2d00      	cmp	r5, #0
    cdcc:	d012      	beq.n	cdf4 <_dtoa_r+0x9a8>
    cdce:	6871      	ldr	r1, [r6, #4]
    cdd0:	9808      	ldr	r0, [sp, #32]
    cdd2:	f000 fcdb 	bl	d78c <_Balloc>
    cdd6:	1c31      	adds	r1, r6, #0
    cdd8:	1c04      	adds	r4, r0, #0
    cdda:	6933      	ldr	r3, [r6, #16]
    cddc:	310c      	adds	r1, #12
    cdde:	1c9a      	adds	r2, r3, #2
    cde0:	0092      	lsls	r2, r2, #2
    cde2:	300c      	adds	r0, #12
    cde4:	f7fc fe41 	bl	9a6a <memcpy>
    cde8:	9808      	ldr	r0, [sp, #32]
    cdea:	1c21      	adds	r1, r4, #0
    cdec:	2201      	movs	r2, #1
    cdee:	f000 fecd 	bl	db8c <__lshift>
    cdf2:	9009      	str	r0, [sp, #36]	; 0x24
    cdf4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    cdf6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    cdf8:	930e      	str	r3, [sp, #56]	; 0x38
    cdfa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    cdfc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    cdfe:	3b01      	subs	r3, #1
    ce00:	18d3      	adds	r3, r2, r3
    ce02:	9310      	str	r3, [sp, #64]	; 0x40
    ce04:	1c39      	adds	r1, r7, #0
    ce06:	1c20      	adds	r0, r4, #0
    ce08:	f7ff fa98 	bl	c33c <quorem>
    ce0c:	1c03      	adds	r3, r0, #0
    ce0e:	900f      	str	r0, [sp, #60]	; 0x3c
    ce10:	3330      	adds	r3, #48	; 0x30
    ce12:	1c31      	adds	r1, r6, #0
    ce14:	1c20      	adds	r0, r4, #0
    ce16:	930d      	str	r3, [sp, #52]	; 0x34
    ce18:	f000 ff0a 	bl	dc30 <__mcmp>
    ce1c:	1c39      	adds	r1, r7, #0
    ce1e:	900b      	str	r0, [sp, #44]	; 0x2c
    ce20:	9a09      	ldr	r2, [sp, #36]	; 0x24
    ce22:	9808      	ldr	r0, [sp, #32]
    ce24:	f000 ff1f 	bl	dc66 <__mdiff>
    ce28:	2301      	movs	r3, #1
    ce2a:	9304      	str	r3, [sp, #16]
    ce2c:	68c3      	ldr	r3, [r0, #12]
    ce2e:	1c05      	adds	r5, r0, #0
    ce30:	2b00      	cmp	r3, #0
    ce32:	d104      	bne.n	ce3e <_dtoa_r+0x9f2>
    ce34:	1c20      	adds	r0, r4, #0
    ce36:	1c29      	adds	r1, r5, #0
    ce38:	f000 fefa 	bl	dc30 <__mcmp>
    ce3c:	9004      	str	r0, [sp, #16]
    ce3e:	9808      	ldr	r0, [sp, #32]
    ce40:	1c29      	adds	r1, r5, #0
    ce42:	f000 fcdb 	bl	d7fc <_Bfree>
    ce46:	9b04      	ldr	r3, [sp, #16]
    ce48:	9a20      	ldr	r2, [sp, #128]	; 0x80
    ce4a:	4313      	orrs	r3, r2
    ce4c:	d110      	bne.n	ce70 <_dtoa_r+0xa24>
    ce4e:	9a06      	ldr	r2, [sp, #24]
    ce50:	3301      	adds	r3, #1
    ce52:	4213      	tst	r3, r2
    ce54:	d10c      	bne.n	ce70 <_dtoa_r+0xa24>
    ce56:	980d      	ldr	r0, [sp, #52]	; 0x34
    ce58:	940a      	str	r4, [sp, #40]	; 0x28
    ce5a:	2839      	cmp	r0, #57	; 0x39
    ce5c:	d03d      	beq.n	ceda <_dtoa_r+0xa8e>
    ce5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    ce60:	2b00      	cmp	r3, #0
    ce62:	dd01      	ble.n	ce68 <_dtoa_r+0xa1c>
    ce64:	980f      	ldr	r0, [sp, #60]	; 0x3c
    ce66:	3031      	adds	r0, #49	; 0x31
    ce68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    ce6a:	3301      	adds	r3, #1
    ce6c:	9304      	str	r3, [sp, #16]
    ce6e:	e03e      	b.n	ceee <_dtoa_r+0xaa2>
    ce70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    ce72:	2b00      	cmp	r3, #0
    ce74:	da05      	bge.n	ce82 <_dtoa_r+0xa36>
    ce76:	9b04      	ldr	r3, [sp, #16]
    ce78:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    ce7a:	940a      	str	r4, [sp, #40]	; 0x28
    ce7c:	2b00      	cmp	r3, #0
    ce7e:	dc09      	bgt.n	ce94 <_dtoa_r+0xa48>
    ce80:	e01c      	b.n	cebc <_dtoa_r+0xa70>
    ce82:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    ce84:	9b20      	ldr	r3, [sp, #128]	; 0x80
    ce86:	431d      	orrs	r5, r3
    ce88:	d11e      	bne.n	cec8 <_dtoa_r+0xa7c>
    ce8a:	2301      	movs	r3, #1
    ce8c:	9a06      	ldr	r2, [sp, #24]
    ce8e:	4213      	tst	r3, r2
    ce90:	d11a      	bne.n	cec8 <_dtoa_r+0xa7c>
    ce92:	e7f0      	b.n	ce76 <_dtoa_r+0xa2a>
    ce94:	1c21      	adds	r1, r4, #0
    ce96:	9808      	ldr	r0, [sp, #32]
    ce98:	2201      	movs	r2, #1
    ce9a:	f000 fe77 	bl	db8c <__lshift>
    ce9e:	1c39      	adds	r1, r7, #0
    cea0:	900a      	str	r0, [sp, #40]	; 0x28
    cea2:	f000 fec5 	bl	dc30 <__mcmp>
    cea6:	2800      	cmp	r0, #0
    cea8:	dc03      	bgt.n	ceb2 <_dtoa_r+0xa66>
    ceaa:	d107      	bne.n	cebc <_dtoa_r+0xa70>
    ceac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    ceae:	07db      	lsls	r3, r3, #31
    ceb0:	d504      	bpl.n	cebc <_dtoa_r+0xa70>
    ceb2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    ceb4:	2b39      	cmp	r3, #57	; 0x39
    ceb6:	d010      	beq.n	ceda <_dtoa_r+0xa8e>
    ceb8:	1c1d      	adds	r5, r3, #0
    ceba:	3501      	adds	r5, #1
    cebc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    cebe:	3301      	adds	r3, #1
    cec0:	9304      	str	r3, [sp, #16]
    cec2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    cec4:	701d      	strb	r5, [r3, #0]
    cec6:	e088      	b.n	cfda <_dtoa_r+0xb8e>
    cec8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    ceca:	1c5d      	adds	r5, r3, #1
    cecc:	9b04      	ldr	r3, [sp, #16]
    cece:	2b00      	cmp	r3, #0
    ced0:	dd10      	ble.n	cef4 <_dtoa_r+0xaa8>
    ced2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    ced4:	940a      	str	r4, [sp, #40]	; 0x28
    ced6:	2b39      	cmp	r3, #57	; 0x39
    ced8:	d106      	bne.n	cee8 <_dtoa_r+0xa9c>
    ceda:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    cedc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    cede:	3301      	adds	r3, #1
    cee0:	9304      	str	r3, [sp, #16]
    cee2:	2339      	movs	r3, #57	; 0x39
    cee4:	7013      	strb	r3, [r2, #0]
    cee6:	e060      	b.n	cfaa <_dtoa_r+0xb5e>
    cee8:	980d      	ldr	r0, [sp, #52]	; 0x34
    ceea:	9504      	str	r5, [sp, #16]
    ceec:	3001      	adds	r0, #1
    ceee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    cef0:	7018      	strb	r0, [r3, #0]
    cef2:	e072      	b.n	cfda <_dtoa_r+0xb8e>
    cef4:	466a      	mov	r2, sp
    cef6:	2134      	movs	r1, #52	; 0x34
    cef8:	1852      	adds	r2, r2, r1
    cefa:	7812      	ldrb	r2, [r2, #0]
    cefc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    cefe:	9504      	str	r5, [sp, #16]
    cf00:	701a      	strb	r2, [r3, #0]
    cf02:	9a10      	ldr	r2, [sp, #64]	; 0x40
    cf04:	4293      	cmp	r3, r2
    cf06:	d03f      	beq.n	cf88 <_dtoa_r+0xb3c>
    cf08:	1c21      	adds	r1, r4, #0
    cf0a:	220a      	movs	r2, #10
    cf0c:	2300      	movs	r3, #0
    cf0e:	9808      	ldr	r0, [sp, #32]
    cf10:	f000 fc8d 	bl	d82e <__multadd>
    cf14:	9b09      	ldr	r3, [sp, #36]	; 0x24
    cf16:	1c04      	adds	r4, r0, #0
    cf18:	1c31      	adds	r1, r6, #0
    cf1a:	9808      	ldr	r0, [sp, #32]
    cf1c:	220a      	movs	r2, #10
    cf1e:	429e      	cmp	r6, r3
    cf20:	d105      	bne.n	cf2e <_dtoa_r+0xae2>
    cf22:	2300      	movs	r3, #0
    cf24:	f000 fc83 	bl	d82e <__multadd>
    cf28:	1c06      	adds	r6, r0, #0
    cf2a:	9009      	str	r0, [sp, #36]	; 0x24
    cf2c:	e00a      	b.n	cf44 <_dtoa_r+0xaf8>
    cf2e:	2300      	movs	r3, #0
    cf30:	f000 fc7d 	bl	d82e <__multadd>
    cf34:	9909      	ldr	r1, [sp, #36]	; 0x24
    cf36:	1c06      	adds	r6, r0, #0
    cf38:	220a      	movs	r2, #10
    cf3a:	9808      	ldr	r0, [sp, #32]
    cf3c:	2300      	movs	r3, #0
    cf3e:	f000 fc76 	bl	d82e <__multadd>
    cf42:	9009      	str	r0, [sp, #36]	; 0x24
    cf44:	950e      	str	r5, [sp, #56]	; 0x38
    cf46:	e75d      	b.n	ce04 <_dtoa_r+0x9b8>
    cf48:	1c21      	adds	r1, r4, #0
    cf4a:	9808      	ldr	r0, [sp, #32]
    cf4c:	220a      	movs	r2, #10
    cf4e:	2300      	movs	r3, #0
    cf50:	f000 fc6d 	bl	d82e <__multadd>
    cf54:	1c04      	adds	r4, r0, #0
    cf56:	1c20      	adds	r0, r4, #0
    cf58:	1c39      	adds	r1, r7, #0
    cf5a:	f7ff f9ef 	bl	c33c <quorem>
    cf5e:	2234      	movs	r2, #52	; 0x34
    cf60:	466b      	mov	r3, sp
    cf62:	3030      	adds	r0, #48	; 0x30
    cf64:	189b      	adds	r3, r3, r2
    cf66:	900d      	str	r0, [sp, #52]	; 0x34
    cf68:	781b      	ldrb	r3, [r3, #0]
    cf6a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    cf6c:	702b      	strb	r3, [r5, #0]
    cf6e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    cf70:	3501      	adds	r5, #1
    cf72:	1aeb      	subs	r3, r5, r3
    cf74:	4293      	cmp	r3, r2
    cf76:	dbe7      	blt.n	cf48 <_dtoa_r+0xafc>
    cf78:	1e13      	subs	r3, r2, #0
    cf7a:	dc00      	bgt.n	cf7e <_dtoa_r+0xb32>
    cf7c:	2301      	movs	r3, #1
    cf7e:	9609      	str	r6, [sp, #36]	; 0x24
    cf80:	2600      	movs	r6, #0
    cf82:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    cf84:	18d3      	adds	r3, r2, r3
    cf86:	9304      	str	r3, [sp, #16]
    cf88:	1c21      	adds	r1, r4, #0
    cf8a:	9808      	ldr	r0, [sp, #32]
    cf8c:	2201      	movs	r2, #1
    cf8e:	f000 fdfd 	bl	db8c <__lshift>
    cf92:	1c39      	adds	r1, r7, #0
    cf94:	900a      	str	r0, [sp, #40]	; 0x28
    cf96:	f000 fe4b 	bl	dc30 <__mcmp>
    cf9a:	2800      	cmp	r0, #0
    cf9c:	dc05      	bgt.n	cfaa <_dtoa_r+0xb5e>
    cf9e:	d115      	bne.n	cfcc <_dtoa_r+0xb80>
    cfa0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    cfa2:	07db      	lsls	r3, r3, #31
    cfa4:	d401      	bmi.n	cfaa <_dtoa_r+0xb5e>
    cfa6:	e011      	b.n	cfcc <_dtoa_r+0xb80>
    cfa8:	9304      	str	r3, [sp, #16]
    cfaa:	9b04      	ldr	r3, [sp, #16]
    cfac:	3b01      	subs	r3, #1
    cfae:	781a      	ldrb	r2, [r3, #0]
    cfb0:	2a39      	cmp	r2, #57	; 0x39
    cfb2:	d108      	bne.n	cfc6 <_dtoa_r+0xb7a>
    cfb4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    cfb6:	4293      	cmp	r3, r2
    cfb8:	d1f6      	bne.n	cfa8 <_dtoa_r+0xb5c>
    cfba:	9b03      	ldr	r3, [sp, #12]
    cfbc:	3301      	adds	r3, #1
    cfbe:	9303      	str	r3, [sp, #12]
    cfc0:	2331      	movs	r3, #49	; 0x31
    cfc2:	7013      	strb	r3, [r2, #0]
    cfc4:	e009      	b.n	cfda <_dtoa_r+0xb8e>
    cfc6:	3201      	adds	r2, #1
    cfc8:	701a      	strb	r2, [r3, #0]
    cfca:	e006      	b.n	cfda <_dtoa_r+0xb8e>
    cfcc:	9b04      	ldr	r3, [sp, #16]
    cfce:	3b01      	subs	r3, #1
    cfd0:	781a      	ldrb	r2, [r3, #0]
    cfd2:	2a30      	cmp	r2, #48	; 0x30
    cfd4:	d101      	bne.n	cfda <_dtoa_r+0xb8e>
    cfd6:	9304      	str	r3, [sp, #16]
    cfd8:	e7f8      	b.n	cfcc <_dtoa_r+0xb80>
    cfda:	9808      	ldr	r0, [sp, #32]
    cfdc:	1c39      	adds	r1, r7, #0
    cfde:	f000 fc0d 	bl	d7fc <_Bfree>
    cfe2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    cfe4:	2b00      	cmp	r3, #0
    cfe6:	d00e      	beq.n	d006 <_dtoa_r+0xbba>
    cfe8:	2e00      	cmp	r6, #0
    cfea:	d005      	beq.n	cff8 <_dtoa_r+0xbac>
    cfec:	429e      	cmp	r6, r3
    cfee:	d003      	beq.n	cff8 <_dtoa_r+0xbac>
    cff0:	9808      	ldr	r0, [sp, #32]
    cff2:	1c31      	adds	r1, r6, #0
    cff4:	f000 fc02 	bl	d7fc <_Bfree>
    cff8:	9808      	ldr	r0, [sp, #32]
    cffa:	9909      	ldr	r1, [sp, #36]	; 0x24
    cffc:	f000 fbfe 	bl	d7fc <_Bfree>
    d000:	e001      	b.n	d006 <_dtoa_r+0xbba>
    d002:	9b11      	ldr	r3, [sp, #68]	; 0x44
    d004:	9303      	str	r3, [sp, #12]
    d006:	9808      	ldr	r0, [sp, #32]
    d008:	990a      	ldr	r1, [sp, #40]	; 0x28
    d00a:	f000 fbf7 	bl	d7fc <_Bfree>
    d00e:	2300      	movs	r3, #0
    d010:	9a04      	ldr	r2, [sp, #16]
    d012:	980c      	ldr	r0, [sp, #48]	; 0x30
    d014:	7013      	strb	r3, [r2, #0]
    d016:	9b03      	ldr	r3, [sp, #12]
    d018:	9a22      	ldr	r2, [sp, #136]	; 0x88
    d01a:	3301      	adds	r3, #1
    d01c:	6013      	str	r3, [r2, #0]
    d01e:	9b24      	ldr	r3, [sp, #144]	; 0x90
    d020:	2b00      	cmp	r3, #0
    d022:	d010      	beq.n	d046 <_dtoa_r+0xbfa>
    d024:	9a04      	ldr	r2, [sp, #16]
    d026:	601a      	str	r2, [r3, #0]
    d028:	e00d      	b.n	d046 <_dtoa_r+0xbfa>
    d02a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    d02c:	2b00      	cmp	r3, #0
    d02e:	dd00      	ble.n	d032 <_dtoa_r+0xbe6>
    d030:	e6bd      	b.n	cdae <_dtoa_r+0x962>
    d032:	9b20      	ldr	r3, [sp, #128]	; 0x80
    d034:	2b02      	cmp	r3, #2
    d036:	dd00      	ble.n	d03a <_dtoa_r+0xbee>
    d038:	e68a      	b.n	cd50 <_dtoa_r+0x904>
    d03a:	e6b8      	b.n	cdae <_dtoa_r+0x962>
    d03c:	9b20      	ldr	r3, [sp, #128]	; 0x80
    d03e:	2b02      	cmp	r3, #2
    d040:	dd00      	ble.n	d044 <_dtoa_r+0xbf8>
    d042:	e685      	b.n	cd50 <_dtoa_r+0x904>
    d044:	e6b8      	b.n	cdb8 <_dtoa_r+0x96c>
    d046:	b01b      	add	sp, #108	; 0x6c
    d048:	bdf0      	pop	{r4, r5, r6, r7, pc}
    d04a:	46c0      	nop			; (mov r8, r8)

0000d04c <__sflags>:
    d04c:	780b      	ldrb	r3, [r1, #0]
    d04e:	b530      	push	{r4, r5, lr}
    d050:	2b72      	cmp	r3, #114	; 0x72
    d052:	d00e      	beq.n	d072 <__sflags+0x26>
    d054:	2b77      	cmp	r3, #119	; 0x77
    d056:	d007      	beq.n	d068 <__sflags+0x1c>
    d058:	2b61      	cmp	r3, #97	; 0x61
    d05a:	d10e      	bne.n	d07a <__sflags+0x2e>
    d05c:	2582      	movs	r5, #130	; 0x82
    d05e:	2084      	movs	r0, #132	; 0x84
    d060:	00ad      	lsls	r5, r5, #2
    d062:	2301      	movs	r3, #1
    d064:	0040      	lsls	r0, r0, #1
    d066:	e01b      	b.n	d0a0 <__sflags+0x54>
    d068:	25c0      	movs	r5, #192	; 0xc0
    d06a:	2301      	movs	r3, #1
    d06c:	00ed      	lsls	r5, r5, #3
    d06e:	2008      	movs	r0, #8
    d070:	e016      	b.n	d0a0 <__sflags+0x54>
    d072:	2500      	movs	r5, #0
    d074:	2004      	movs	r0, #4
    d076:	1c2b      	adds	r3, r5, #0
    d078:	e012      	b.n	d0a0 <__sflags+0x54>
    d07a:	2316      	movs	r3, #22
    d07c:	6003      	str	r3, [r0, #0]
    d07e:	2000      	movs	r0, #0
    d080:	e01b      	b.n	d0ba <__sflags+0x6e>
    d082:	2c62      	cmp	r4, #98	; 0x62
    d084:	d011      	beq.n	d0aa <__sflags+0x5e>
    d086:	2c78      	cmp	r4, #120	; 0x78
    d088:	d012      	beq.n	d0b0 <__sflags+0x64>
    d08a:	2c2b      	cmp	r4, #43	; 0x2b
    d08c:	d108      	bne.n	d0a0 <__sflags+0x54>
    d08e:	3c0f      	subs	r4, #15
    d090:	43a0      	bics	r0, r4
    d092:	3c0c      	subs	r4, #12
    d094:	4320      	orrs	r0, r4
    d096:	3c0d      	subs	r4, #13
    d098:	43a3      	bics	r3, r4
    d09a:	1c1c      	adds	r4, r3, #0
    d09c:	2302      	movs	r3, #2
    d09e:	4323      	orrs	r3, r4
    d0a0:	3101      	adds	r1, #1
    d0a2:	780c      	ldrb	r4, [r1, #0]
    d0a4:	2c00      	cmp	r4, #0
    d0a6:	d1ec      	bne.n	d082 <__sflags+0x36>
    d0a8:	e005      	b.n	d0b6 <__sflags+0x6a>
    d0aa:	2480      	movs	r4, #128	; 0x80
    d0ac:	0264      	lsls	r4, r4, #9
    d0ae:	e7f6      	b.n	d09e <__sflags+0x52>
    d0b0:	2480      	movs	r4, #128	; 0x80
    d0b2:	0124      	lsls	r4, r4, #4
    d0b4:	e7f3      	b.n	d09e <__sflags+0x52>
    d0b6:	432b      	orrs	r3, r5
    d0b8:	6013      	str	r3, [r2, #0]
    d0ba:	bd30      	pop	{r4, r5, pc}

0000d0bc <_fstat_r>:
    d0bc:	b538      	push	{r3, r4, r5, lr}
    d0be:	2300      	movs	r3, #0
    d0c0:	4c06      	ldr	r4, [pc, #24]	; (d0dc <_fstat_r+0x20>)
    d0c2:	1c05      	adds	r5, r0, #0
    d0c4:	1c08      	adds	r0, r1, #0
    d0c6:	1c11      	adds	r1, r2, #0
    d0c8:	6023      	str	r3, [r4, #0]
    d0ca:	f7f6 fd7d 	bl	3bc8 <_fstat>
    d0ce:	1c43      	adds	r3, r0, #1
    d0d0:	d103      	bne.n	d0da <_fstat_r+0x1e>
    d0d2:	6823      	ldr	r3, [r4, #0]
    d0d4:	2b00      	cmp	r3, #0
    d0d6:	d000      	beq.n	d0da <_fstat_r+0x1e>
    d0d8:	602b      	str	r3, [r5, #0]
    d0da:	bd38      	pop	{r3, r4, r5, pc}
    d0dc:	200046b0 	.word	0x200046b0

0000d0e0 <rshift>:
    d0e0:	b5f0      	push	{r4, r5, r6, r7, lr}
    d0e2:	1c06      	adds	r6, r0, #0
    d0e4:	6905      	ldr	r5, [r0, #16]
    d0e6:	3614      	adds	r6, #20
    d0e8:	114a      	asrs	r2, r1, #5
    d0ea:	1c34      	adds	r4, r6, #0
    d0ec:	42aa      	cmp	r2, r5
    d0ee:	da25      	bge.n	d13c <rshift+0x5c>
    d0f0:	231f      	movs	r3, #31
    d0f2:	00ad      	lsls	r5, r5, #2
    d0f4:	0092      	lsls	r2, r2, #2
    d0f6:	4019      	ands	r1, r3
    d0f8:	1975      	adds	r5, r6, r5
    d0fa:	18b2      	adds	r2, r6, r2
    d0fc:	1c33      	adds	r3, r6, #0
    d0fe:	2900      	cmp	r1, #0
    d100:	d016      	beq.n	d130 <rshift+0x50>
    d102:	1c13      	adds	r3, r2, #0
    d104:	cb04      	ldmia	r3!, {r2}
    d106:	2720      	movs	r7, #32
    d108:	40ca      	lsrs	r2, r1
    d10a:	46b4      	mov	ip, r6
    d10c:	1a7f      	subs	r7, r7, r1
    d10e:	4664      	mov	r4, ip
    d110:	42ab      	cmp	r3, r5
    d112:	d208      	bcs.n	d126 <rshift+0x46>
    d114:	681c      	ldr	r4, [r3, #0]
    d116:	40bc      	lsls	r4, r7
    d118:	4322      	orrs	r2, r4
    d11a:	4664      	mov	r4, ip
    d11c:	c404      	stmia	r4!, {r2}
    d11e:	cb04      	ldmia	r3!, {r2}
    d120:	46a4      	mov	ip, r4
    d122:	40ca      	lsrs	r2, r1
    d124:	e7f3      	b.n	d10e <rshift+0x2e>
    d126:	6022      	str	r2, [r4, #0]
    d128:	2a00      	cmp	r2, #0
    d12a:	d007      	beq.n	d13c <rshift+0x5c>
    d12c:	3404      	adds	r4, #4
    d12e:	e005      	b.n	d13c <rshift+0x5c>
    d130:	1c1c      	adds	r4, r3, #0
    d132:	42aa      	cmp	r2, r5
    d134:	d202      	bcs.n	d13c <rshift+0x5c>
    d136:	ca02      	ldmia	r2!, {r1}
    d138:	c302      	stmia	r3!, {r1}
    d13a:	e7f9      	b.n	d130 <rshift+0x50>
    d13c:	1ba3      	subs	r3, r4, r6
    d13e:	109b      	asrs	r3, r3, #2
    d140:	6103      	str	r3, [r0, #16]
    d142:	d100      	bne.n	d146 <rshift+0x66>
    d144:	6143      	str	r3, [r0, #20]
    d146:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000d148 <__hexdig_fun>:
    d148:	1c03      	adds	r3, r0, #0
    d14a:	3b30      	subs	r3, #48	; 0x30
    d14c:	2b09      	cmp	r3, #9
    d14e:	d801      	bhi.n	d154 <__hexdig_fun+0xc>
    d150:	3820      	subs	r0, #32
    d152:	e00b      	b.n	d16c <__hexdig_fun+0x24>
    d154:	1c03      	adds	r3, r0, #0
    d156:	3b61      	subs	r3, #97	; 0x61
    d158:	2b05      	cmp	r3, #5
    d15a:	d801      	bhi.n	d160 <__hexdig_fun+0x18>
    d15c:	3847      	subs	r0, #71	; 0x47
    d15e:	e005      	b.n	d16c <__hexdig_fun+0x24>
    d160:	1c02      	adds	r2, r0, #0
    d162:	3a41      	subs	r2, #65	; 0x41
    d164:	2300      	movs	r3, #0
    d166:	2a05      	cmp	r2, #5
    d168:	d801      	bhi.n	d16e <__hexdig_fun+0x26>
    d16a:	3827      	subs	r0, #39	; 0x27
    d16c:	b2c3      	uxtb	r3, r0
    d16e:	1c18      	adds	r0, r3, #0
    d170:	4770      	bx	lr

0000d172 <__gethex>:
    d172:	b5f0      	push	{r4, r5, r6, r7, lr}
    d174:	b08d      	sub	sp, #52	; 0x34
    d176:	9109      	str	r1, [sp, #36]	; 0x24
    d178:	9202      	str	r2, [sp, #8]
    d17a:	930a      	str	r3, [sp, #40]	; 0x28
    d17c:	9005      	str	r0, [sp, #20]
    d17e:	f000 fad9 	bl	d734 <_localeconv_r>
    d182:	6803      	ldr	r3, [r0, #0]
    d184:	1c18      	adds	r0, r3, #0
    d186:	9307      	str	r3, [sp, #28]
    d188:	f7fe f822 	bl	b1d0 <strlen>
    d18c:	9b07      	ldr	r3, [sp, #28]
    d18e:	9004      	str	r0, [sp, #16]
    d190:	181b      	adds	r3, r3, r0
    d192:	3b01      	subs	r3, #1
    d194:	781b      	ldrb	r3, [r3, #0]
    d196:	930b      	str	r3, [sp, #44]	; 0x2c
    d198:	9b09      	ldr	r3, [sp, #36]	; 0x24
    d19a:	6819      	ldr	r1, [r3, #0]
    d19c:	1c8a      	adds	r2, r1, #2
    d19e:	9201      	str	r2, [sp, #4]
    d1a0:	9801      	ldr	r0, [sp, #4]
    d1a2:	1a53      	subs	r3, r2, r1
    d1a4:	7800      	ldrb	r0, [r0, #0]
    d1a6:	3b02      	subs	r3, #2
    d1a8:	3201      	adds	r2, #1
    d1aa:	2830      	cmp	r0, #48	; 0x30
    d1ac:	d0f7      	beq.n	d19e <__gethex+0x2c>
    d1ae:	9308      	str	r3, [sp, #32]
    d1b0:	f7ff ffca 	bl	d148 <__hexdig_fun>
    d1b4:	1e06      	subs	r6, r0, #0
    d1b6:	d120      	bne.n	d1fa <__gethex+0x88>
    d1b8:	9801      	ldr	r0, [sp, #4]
    d1ba:	9907      	ldr	r1, [sp, #28]
    d1bc:	9a04      	ldr	r2, [sp, #16]
    d1be:	f7fe f80e 	bl	b1de <strncmp>
    d1c2:	2800      	cmp	r0, #0
    d1c4:	d13c      	bne.n	d240 <__gethex+0xce>
    d1c6:	9b01      	ldr	r3, [sp, #4]
    d1c8:	9a04      	ldr	r2, [sp, #16]
    d1ca:	189c      	adds	r4, r3, r2
    d1cc:	7820      	ldrb	r0, [r4, #0]
    d1ce:	f7ff ffbb 	bl	d148 <__hexdig_fun>
    d1d2:	2800      	cmp	r0, #0
    d1d4:	d037      	beq.n	d246 <__gethex+0xd4>
    d1d6:	9401      	str	r4, [sp, #4]
    d1d8:	9b01      	ldr	r3, [sp, #4]
    d1da:	7818      	ldrb	r0, [r3, #0]
    d1dc:	2830      	cmp	r0, #48	; 0x30
    d1de:	d103      	bne.n	d1e8 <__gethex+0x76>
    d1e0:	9b01      	ldr	r3, [sp, #4]
    d1e2:	3301      	adds	r3, #1
    d1e4:	9301      	str	r3, [sp, #4]
    d1e6:	e7f7      	b.n	d1d8 <__gethex+0x66>
    d1e8:	f7ff ffae 	bl	d148 <__hexdig_fun>
    d1ec:	4243      	negs	r3, r0
    d1ee:	4143      	adcs	r3, r0
    d1f0:	9303      	str	r3, [sp, #12]
    d1f2:	2301      	movs	r3, #1
    d1f4:	1c26      	adds	r6, r4, #0
    d1f6:	9308      	str	r3, [sp, #32]
    d1f8:	e002      	b.n	d200 <__gethex+0x8e>
    d1fa:	2300      	movs	r3, #0
    d1fc:	1c1e      	adds	r6, r3, #0
    d1fe:	9303      	str	r3, [sp, #12]
    d200:	9c01      	ldr	r4, [sp, #4]
    d202:	7820      	ldrb	r0, [r4, #0]
    d204:	f7ff ffa0 	bl	d148 <__hexdig_fun>
    d208:	2800      	cmp	r0, #0
    d20a:	d001      	beq.n	d210 <__gethex+0x9e>
    d20c:	3401      	adds	r4, #1
    d20e:	e7f8      	b.n	d202 <__gethex+0x90>
    d210:	1c20      	adds	r0, r4, #0
    d212:	9907      	ldr	r1, [sp, #28]
    d214:	9a04      	ldr	r2, [sp, #16]
    d216:	f7fd ffe2 	bl	b1de <strncmp>
    d21a:	2800      	cmp	r0, #0
    d21c:	d10b      	bne.n	d236 <__gethex+0xc4>
    d21e:	2e00      	cmp	r6, #0
    d220:	d10b      	bne.n	d23a <__gethex+0xc8>
    d222:	9b04      	ldr	r3, [sp, #16]
    d224:	18e6      	adds	r6, r4, r3
    d226:	1c34      	adds	r4, r6, #0
    d228:	7820      	ldrb	r0, [r4, #0]
    d22a:	f7ff ff8d 	bl	d148 <__hexdig_fun>
    d22e:	2800      	cmp	r0, #0
    d230:	d001      	beq.n	d236 <__gethex+0xc4>
    d232:	3401      	adds	r4, #1
    d234:	e7f8      	b.n	d228 <__gethex+0xb6>
    d236:	1e37      	subs	r7, r6, #0
    d238:	d008      	beq.n	d24c <__gethex+0xda>
    d23a:	1b36      	subs	r6, r6, r4
    d23c:	00b7      	lsls	r7, r6, #2
    d23e:	e005      	b.n	d24c <__gethex+0xda>
    d240:	9c01      	ldr	r4, [sp, #4]
    d242:	1c37      	adds	r7, r6, #0
    d244:	e000      	b.n	d248 <__gethex+0xd6>
    d246:	1c07      	adds	r7, r0, #0
    d248:	2301      	movs	r3, #1
    d24a:	9303      	str	r3, [sp, #12]
    d24c:	7823      	ldrb	r3, [r4, #0]
    d24e:	2b50      	cmp	r3, #80	; 0x50
    d250:	d001      	beq.n	d256 <__gethex+0xe4>
    d252:	2b70      	cmp	r3, #112	; 0x70
    d254:	d128      	bne.n	d2a8 <__gethex+0x136>
    d256:	7863      	ldrb	r3, [r4, #1]
    d258:	2b2b      	cmp	r3, #43	; 0x2b
    d25a:	d007      	beq.n	d26c <__gethex+0xfa>
    d25c:	2b2d      	cmp	r3, #45	; 0x2d
    d25e:	d003      	beq.n	d268 <__gethex+0xf6>
    d260:	2300      	movs	r3, #0
    d262:	1c65      	adds	r5, r4, #1
    d264:	9306      	str	r3, [sp, #24]
    d266:	e004      	b.n	d272 <__gethex+0x100>
    d268:	2301      	movs	r3, #1
    d26a:	e000      	b.n	d26e <__gethex+0xfc>
    d26c:	2300      	movs	r3, #0
    d26e:	9306      	str	r3, [sp, #24]
    d270:	1ca5      	adds	r5, r4, #2
    d272:	7828      	ldrb	r0, [r5, #0]
    d274:	f7ff ff68 	bl	d148 <__hexdig_fun>
    d278:	1e43      	subs	r3, r0, #1
    d27a:	b2db      	uxtb	r3, r3
    d27c:	2b18      	cmp	r3, #24
    d27e:	d813      	bhi.n	d2a8 <__gethex+0x136>
    d280:	3810      	subs	r0, #16
    d282:	3501      	adds	r5, #1
    d284:	1c06      	adds	r6, r0, #0
    d286:	7828      	ldrb	r0, [r5, #0]
    d288:	f7ff ff5e 	bl	d148 <__hexdig_fun>
    d28c:	1e43      	subs	r3, r0, #1
    d28e:	b2db      	uxtb	r3, r3
    d290:	2b18      	cmp	r3, #24
    d292:	d803      	bhi.n	d29c <__gethex+0x12a>
    d294:	230a      	movs	r3, #10
    d296:	435e      	muls	r6, r3
    d298:	1830      	adds	r0, r6, r0
    d29a:	e7f1      	b.n	d280 <__gethex+0x10e>
    d29c:	9b06      	ldr	r3, [sp, #24]
    d29e:	2b00      	cmp	r3, #0
    d2a0:	d000      	beq.n	d2a4 <__gethex+0x132>
    d2a2:	4276      	negs	r6, r6
    d2a4:	19bf      	adds	r7, r7, r6
    d2a6:	e000      	b.n	d2aa <__gethex+0x138>
    d2a8:	1c25      	adds	r5, r4, #0
    d2aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
    d2ac:	601d      	str	r5, [r3, #0]
    d2ae:	9b03      	ldr	r3, [sp, #12]
    d2b0:	2b00      	cmp	r3, #0
    d2b2:	d006      	beq.n	d2c2 <__gethex+0x150>
    d2b4:	2000      	movs	r0, #0
    d2b6:	9b08      	ldr	r3, [sp, #32]
    d2b8:	4283      	cmp	r3, r0
    d2ba:	d000      	beq.n	d2be <__gethex+0x14c>
    d2bc:	e17b      	b.n	d5b6 <__gethex+0x444>
    d2be:	3006      	adds	r0, #6
    d2c0:	e179      	b.n	d5b6 <__gethex+0x444>
    d2c2:	9b01      	ldr	r3, [sp, #4]
    d2c4:	9903      	ldr	r1, [sp, #12]
    d2c6:	1ae3      	subs	r3, r4, r3
    d2c8:	3b01      	subs	r3, #1
    d2ca:	2b07      	cmp	r3, #7
    d2cc:	dd02      	ble.n	d2d4 <__gethex+0x162>
    d2ce:	3101      	adds	r1, #1
    d2d0:	105b      	asrs	r3, r3, #1
    d2d2:	e7fa      	b.n	d2ca <__gethex+0x158>
    d2d4:	9805      	ldr	r0, [sp, #20]
    d2d6:	f000 fa59 	bl	d78c <_Balloc>
    d2da:	1c03      	adds	r3, r0, #0
    d2dc:	2600      	movs	r6, #0
    d2de:	1c05      	adds	r5, r0, #0
    d2e0:	3314      	adds	r3, #20
    d2e2:	9303      	str	r3, [sp, #12]
    d2e4:	9308      	str	r3, [sp, #32]
    d2e6:	9606      	str	r6, [sp, #24]
    d2e8:	9b01      	ldr	r3, [sp, #4]
    d2ea:	429c      	cmp	r4, r3
    d2ec:	d92a      	bls.n	d344 <__gethex+0x1d2>
    d2ee:	1e63      	subs	r3, r4, #1
    d2f0:	9309      	str	r3, [sp, #36]	; 0x24
    d2f2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    d2f4:	781b      	ldrb	r3, [r3, #0]
    d2f6:	4293      	cmp	r3, r2
    d2f8:	d009      	beq.n	d30e <__gethex+0x19c>
    d2fa:	9b06      	ldr	r3, [sp, #24]
    d2fc:	2b20      	cmp	r3, #32
    d2fe:	d114      	bne.n	d32a <__gethex+0x1b8>
    d300:	9b08      	ldr	r3, [sp, #32]
    d302:	601e      	str	r6, [r3, #0]
    d304:	2600      	movs	r6, #0
    d306:	3304      	adds	r3, #4
    d308:	9308      	str	r3, [sp, #32]
    d30a:	9606      	str	r6, [sp, #24]
    d30c:	e00d      	b.n	d32a <__gethex+0x1b8>
    d30e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    d310:	9a04      	ldr	r2, [sp, #16]
    d312:	1a9c      	subs	r4, r3, r2
    d314:	9b01      	ldr	r3, [sp, #4]
    d316:	3401      	adds	r4, #1
    d318:	429c      	cmp	r4, r3
    d31a:	d3ee      	bcc.n	d2fa <__gethex+0x188>
    d31c:	1c20      	adds	r0, r4, #0
    d31e:	9907      	ldr	r1, [sp, #28]
    d320:	f7fd ff5d 	bl	b1de <strncmp>
    d324:	2800      	cmp	r0, #0
    d326:	d0df      	beq.n	d2e8 <__gethex+0x176>
    d328:	e7e7      	b.n	d2fa <__gethex+0x188>
    d32a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    d32c:	7818      	ldrb	r0, [r3, #0]
    d32e:	f7ff ff0b 	bl	d148 <__hexdig_fun>
    d332:	230f      	movs	r3, #15
    d334:	4018      	ands	r0, r3
    d336:	9b06      	ldr	r3, [sp, #24]
    d338:	9c09      	ldr	r4, [sp, #36]	; 0x24
    d33a:	4098      	lsls	r0, r3
    d33c:	3304      	adds	r3, #4
    d33e:	4306      	orrs	r6, r0
    d340:	9306      	str	r3, [sp, #24]
    d342:	e7d1      	b.n	d2e8 <__gethex+0x176>
    d344:	9c08      	ldr	r4, [sp, #32]
    d346:	9b03      	ldr	r3, [sp, #12]
    d348:	c440      	stmia	r4!, {r6}
    d34a:	1ae4      	subs	r4, r4, r3
    d34c:	10a4      	asrs	r4, r4, #2
    d34e:	612c      	str	r4, [r5, #16]
    d350:	1c30      	adds	r0, r6, #0
    d352:	f000 fae8 	bl	d926 <__hi0bits>
    d356:	9b02      	ldr	r3, [sp, #8]
    d358:	0164      	lsls	r4, r4, #5
    d35a:	681b      	ldr	r3, [r3, #0]
    d35c:	1a26      	subs	r6, r4, r0
    d35e:	9301      	str	r3, [sp, #4]
    d360:	429e      	cmp	r6, r3
    d362:	dd25      	ble.n	d3b0 <__gethex+0x23e>
    d364:	1af6      	subs	r6, r6, r3
    d366:	1c28      	adds	r0, r5, #0
    d368:	1c31      	adds	r1, r6, #0
    d36a:	f000 fdf1 	bl	df50 <__any_on>
    d36e:	2400      	movs	r4, #0
    d370:	42a0      	cmp	r0, r4
    d372:	d017      	beq.n	d3a4 <__gethex+0x232>
    d374:	231f      	movs	r3, #31
    d376:	3401      	adds	r4, #1
    d378:	1c20      	adds	r0, r4, #0
    d37a:	1e72      	subs	r2, r6, #1
    d37c:	4013      	ands	r3, r2
    d37e:	4098      	lsls	r0, r3
    d380:	1c03      	adds	r3, r0, #0
    d382:	1151      	asrs	r1, r2, #5
    d384:	9803      	ldr	r0, [sp, #12]
    d386:	0089      	lsls	r1, r1, #2
    d388:	5809      	ldr	r1, [r1, r0]
    d38a:	4219      	tst	r1, r3
    d38c:	d00a      	beq.n	d3a4 <__gethex+0x232>
    d38e:	42a2      	cmp	r2, r4
    d390:	dc01      	bgt.n	d396 <__gethex+0x224>
    d392:	2402      	movs	r4, #2
    d394:	e006      	b.n	d3a4 <__gethex+0x232>
    d396:	1eb1      	subs	r1, r6, #2
    d398:	1c28      	adds	r0, r5, #0
    d39a:	f000 fdd9 	bl	df50 <__any_on>
    d39e:	2800      	cmp	r0, #0
    d3a0:	d0f7      	beq.n	d392 <__gethex+0x220>
    d3a2:	2403      	movs	r4, #3
    d3a4:	1c28      	adds	r0, r5, #0
    d3a6:	1c31      	adds	r1, r6, #0
    d3a8:	f7ff fe9a 	bl	d0e0 <rshift>
    d3ac:	19bf      	adds	r7, r7, r6
    d3ae:	e00e      	b.n	d3ce <__gethex+0x25c>
    d3b0:	9b01      	ldr	r3, [sp, #4]
    d3b2:	2400      	movs	r4, #0
    d3b4:	429e      	cmp	r6, r3
    d3b6:	da0a      	bge.n	d3ce <__gethex+0x25c>
    d3b8:	1b9e      	subs	r6, r3, r6
    d3ba:	1c29      	adds	r1, r5, #0
    d3bc:	9805      	ldr	r0, [sp, #20]
    d3be:	1c32      	adds	r2, r6, #0
    d3c0:	f000 fbe4 	bl	db8c <__lshift>
    d3c4:	1c03      	adds	r3, r0, #0
    d3c6:	1c05      	adds	r5, r0, #0
    d3c8:	3314      	adds	r3, #20
    d3ca:	1bbf      	subs	r7, r7, r6
    d3cc:	9303      	str	r3, [sp, #12]
    d3ce:	9b02      	ldr	r3, [sp, #8]
    d3d0:	689b      	ldr	r3, [r3, #8]
    d3d2:	9304      	str	r3, [sp, #16]
    d3d4:	429f      	cmp	r7, r3
    d3d6:	dd08      	ble.n	d3ea <__gethex+0x278>
    d3d8:	9805      	ldr	r0, [sp, #20]
    d3da:	1c29      	adds	r1, r5, #0
    d3dc:	f000 fa0e 	bl	d7fc <_Bfree>
    d3e0:	2300      	movs	r3, #0
    d3e2:	9a12      	ldr	r2, [sp, #72]	; 0x48
    d3e4:	20a3      	movs	r0, #163	; 0xa3
    d3e6:	6013      	str	r3, [r2, #0]
    d3e8:	e0e5      	b.n	d5b6 <__gethex+0x444>
    d3ea:	9b02      	ldr	r3, [sp, #8]
    d3ec:	685e      	ldr	r6, [r3, #4]
    d3ee:	42b7      	cmp	r7, r6
    d3f0:	da5a      	bge.n	d4a8 <__gethex+0x336>
    d3f2:	9b01      	ldr	r3, [sp, #4]
    d3f4:	1bf6      	subs	r6, r6, r7
    d3f6:	429e      	cmp	r6, r3
    d3f8:	db32      	blt.n	d460 <__gethex+0x2ee>
    d3fa:	9b02      	ldr	r3, [sp, #8]
    d3fc:	68db      	ldr	r3, [r3, #12]
    d3fe:	2b02      	cmp	r3, #2
    d400:	d01e      	beq.n	d440 <__gethex+0x2ce>
    d402:	2b03      	cmp	r3, #3
    d404:	d020      	beq.n	d448 <__gethex+0x2d6>
    d406:	2b01      	cmp	r3, #1
    d408:	d121      	bne.n	d44e <__gethex+0x2dc>
    d40a:	9b01      	ldr	r3, [sp, #4]
    d40c:	429e      	cmp	r6, r3
    d40e:	d11e      	bne.n	d44e <__gethex+0x2dc>
    d410:	2b01      	cmp	r3, #1
    d412:	dc0d      	bgt.n	d430 <__gethex+0x2be>
    d414:	9b02      	ldr	r3, [sp, #8]
    d416:	2062      	movs	r0, #98	; 0x62
    d418:	685b      	ldr	r3, [r3, #4]
    d41a:	9301      	str	r3, [sp, #4]
    d41c:	9a01      	ldr	r2, [sp, #4]
    d41e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    d420:	601a      	str	r2, [r3, #0]
    d422:	2301      	movs	r3, #1
    d424:	9a03      	ldr	r2, [sp, #12]
    d426:	612b      	str	r3, [r5, #16]
    d428:	6013      	str	r3, [r2, #0]
    d42a:	9b12      	ldr	r3, [sp, #72]	; 0x48
    d42c:	601d      	str	r5, [r3, #0]
    d42e:	e0c2      	b.n	d5b6 <__gethex+0x444>
    d430:	9901      	ldr	r1, [sp, #4]
    d432:	1c28      	adds	r0, r5, #0
    d434:	3901      	subs	r1, #1
    d436:	f000 fd8b 	bl	df50 <__any_on>
    d43a:	2800      	cmp	r0, #0
    d43c:	d1ea      	bne.n	d414 <__gethex+0x2a2>
    d43e:	e006      	b.n	d44e <__gethex+0x2dc>
    d440:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    d442:	2b00      	cmp	r3, #0
    d444:	d0e6      	beq.n	d414 <__gethex+0x2a2>
    d446:	e002      	b.n	d44e <__gethex+0x2dc>
    d448:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    d44a:	2b00      	cmp	r3, #0
    d44c:	d1e2      	bne.n	d414 <__gethex+0x2a2>
    d44e:	9805      	ldr	r0, [sp, #20]
    d450:	1c29      	adds	r1, r5, #0
    d452:	f000 f9d3 	bl	d7fc <_Bfree>
    d456:	2300      	movs	r3, #0
    d458:	9a12      	ldr	r2, [sp, #72]	; 0x48
    d45a:	2050      	movs	r0, #80	; 0x50
    d45c:	6013      	str	r3, [r2, #0]
    d45e:	e0aa      	b.n	d5b6 <__gethex+0x444>
    d460:	1e77      	subs	r7, r6, #1
    d462:	2c00      	cmp	r4, #0
    d464:	d107      	bne.n	d476 <__gethex+0x304>
    d466:	2f00      	cmp	r7, #0
    d468:	dd06      	ble.n	d478 <__gethex+0x306>
    d46a:	1c28      	adds	r0, r5, #0
    d46c:	1c39      	adds	r1, r7, #0
    d46e:	f000 fd6f 	bl	df50 <__any_on>
    d472:	1c04      	adds	r4, r0, #0
    d474:	e000      	b.n	d478 <__gethex+0x306>
    d476:	2401      	movs	r4, #1
    d478:	231f      	movs	r3, #31
    d47a:	117a      	asrs	r2, r7, #5
    d47c:	401f      	ands	r7, r3
    d47e:	3b1e      	subs	r3, #30
    d480:	40bb      	lsls	r3, r7
    d482:	1c1f      	adds	r7, r3, #0
    d484:	9b03      	ldr	r3, [sp, #12]
    d486:	0092      	lsls	r2, r2, #2
    d488:	58d3      	ldr	r3, [r2, r3]
    d48a:	423b      	tst	r3, r7
    d48c:	d001      	beq.n	d492 <__gethex+0x320>
    d48e:	2302      	movs	r3, #2
    d490:	431c      	orrs	r4, r3
    d492:	9b01      	ldr	r3, [sp, #4]
    d494:	1c31      	adds	r1, r6, #0
    d496:	1b9b      	subs	r3, r3, r6
    d498:	1c28      	adds	r0, r5, #0
    d49a:	9301      	str	r3, [sp, #4]
    d49c:	f7ff fe20 	bl	d0e0 <rshift>
    d4a0:	9b02      	ldr	r3, [sp, #8]
    d4a2:	2602      	movs	r6, #2
    d4a4:	685f      	ldr	r7, [r3, #4]
    d4a6:	e000      	b.n	d4aa <__gethex+0x338>
    d4a8:	2601      	movs	r6, #1
    d4aa:	2c00      	cmp	r4, #0
    d4ac:	d07e      	beq.n	d5ac <__gethex+0x43a>
    d4ae:	9b02      	ldr	r3, [sp, #8]
    d4b0:	68db      	ldr	r3, [r3, #12]
    d4b2:	2b02      	cmp	r3, #2
    d4b4:	d00b      	beq.n	d4ce <__gethex+0x35c>
    d4b6:	2b03      	cmp	r3, #3
    d4b8:	d00d      	beq.n	d4d6 <__gethex+0x364>
    d4ba:	2b01      	cmp	r3, #1
    d4bc:	d174      	bne.n	d5a8 <__gethex+0x436>
    d4be:	07a2      	lsls	r2, r4, #30
    d4c0:	d572      	bpl.n	d5a8 <__gethex+0x436>
    d4c2:	9a03      	ldr	r2, [sp, #12]
    d4c4:	6812      	ldr	r2, [r2, #0]
    d4c6:	4314      	orrs	r4, r2
    d4c8:	421c      	tst	r4, r3
    d4ca:	d107      	bne.n	d4dc <__gethex+0x36a>
    d4cc:	e06c      	b.n	d5a8 <__gethex+0x436>
    d4ce:	2301      	movs	r3, #1
    d4d0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    d4d2:	1a9b      	subs	r3, r3, r2
    d4d4:	9313      	str	r3, [sp, #76]	; 0x4c
    d4d6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    d4d8:	2b00      	cmp	r3, #0
    d4da:	d065      	beq.n	d5a8 <__gethex+0x436>
    d4dc:	692c      	ldr	r4, [r5, #16]
    d4de:	00a3      	lsls	r3, r4, #2
    d4e0:	9303      	str	r3, [sp, #12]
    d4e2:	1c2b      	adds	r3, r5, #0
    d4e4:	9a03      	ldr	r2, [sp, #12]
    d4e6:	3314      	adds	r3, #20
    d4e8:	1899      	adds	r1, r3, r2
    d4ea:	681a      	ldr	r2, [r3, #0]
    d4ec:	1c50      	adds	r0, r2, #1
    d4ee:	d002      	beq.n	d4f6 <__gethex+0x384>
    d4f0:	3201      	adds	r2, #1
    d4f2:	601a      	str	r2, [r3, #0]
    d4f4:	e021      	b.n	d53a <__gethex+0x3c8>
    d4f6:	2200      	movs	r2, #0
    d4f8:	c304      	stmia	r3!, {r2}
    d4fa:	4299      	cmp	r1, r3
    d4fc:	d8f5      	bhi.n	d4ea <__gethex+0x378>
    d4fe:	68ab      	ldr	r3, [r5, #8]
    d500:	429c      	cmp	r4, r3
    d502:	db12      	blt.n	d52a <__gethex+0x3b8>
    d504:	686b      	ldr	r3, [r5, #4]
    d506:	9805      	ldr	r0, [sp, #20]
    d508:	1c59      	adds	r1, r3, #1
    d50a:	f000 f93f 	bl	d78c <_Balloc>
    d50e:	1c29      	adds	r1, r5, #0
    d510:	692b      	ldr	r3, [r5, #16]
    d512:	9004      	str	r0, [sp, #16]
    d514:	1c9a      	adds	r2, r3, #2
    d516:	310c      	adds	r1, #12
    d518:	0092      	lsls	r2, r2, #2
    d51a:	300c      	adds	r0, #12
    d51c:	f7fc faa5 	bl	9a6a <memcpy>
    d520:	1c29      	adds	r1, r5, #0
    d522:	9805      	ldr	r0, [sp, #20]
    d524:	f000 f96a 	bl	d7fc <_Bfree>
    d528:	9d04      	ldr	r5, [sp, #16]
    d52a:	692b      	ldr	r3, [r5, #16]
    d52c:	1c5a      	adds	r2, r3, #1
    d52e:	612a      	str	r2, [r5, #16]
    d530:	2201      	movs	r2, #1
    d532:	3304      	adds	r3, #4
    d534:	009b      	lsls	r3, r3, #2
    d536:	18eb      	adds	r3, r5, r3
    d538:	605a      	str	r2, [r3, #4]
    d53a:	1c2b      	adds	r3, r5, #0
    d53c:	3314      	adds	r3, #20
    d53e:	2e02      	cmp	r6, #2
    d540:	d111      	bne.n	d566 <__gethex+0x3f4>
    d542:	9a02      	ldr	r2, [sp, #8]
    d544:	9901      	ldr	r1, [sp, #4]
    d546:	6812      	ldr	r2, [r2, #0]
    d548:	3a01      	subs	r2, #1
    d54a:	4291      	cmp	r1, r2
    d54c:	d12a      	bne.n	d5a4 <__gethex+0x432>
    d54e:	114a      	asrs	r2, r1, #5
    d550:	211f      	movs	r1, #31
    d552:	9801      	ldr	r0, [sp, #4]
    d554:	0092      	lsls	r2, r2, #2
    d556:	4001      	ands	r1, r0
    d558:	2001      	movs	r0, #1
    d55a:	1c04      	adds	r4, r0, #0
    d55c:	408c      	lsls	r4, r1
    d55e:	58d3      	ldr	r3, [r2, r3]
    d560:	4223      	tst	r3, r4
    d562:	d01f      	beq.n	d5a4 <__gethex+0x432>
    d564:	e00c      	b.n	d580 <__gethex+0x40e>
    d566:	692a      	ldr	r2, [r5, #16]
    d568:	42a2      	cmp	r2, r4
    d56a:	dd0b      	ble.n	d584 <__gethex+0x412>
    d56c:	1c28      	adds	r0, r5, #0
    d56e:	2101      	movs	r1, #1
    d570:	f7ff fdb6 	bl	d0e0 <rshift>
    d574:	9b02      	ldr	r3, [sp, #8]
    d576:	3701      	adds	r7, #1
    d578:	689b      	ldr	r3, [r3, #8]
    d57a:	429f      	cmp	r7, r3
    d57c:	dd00      	ble.n	d580 <__gethex+0x40e>
    d57e:	e72b      	b.n	d3d8 <__gethex+0x266>
    d580:	2601      	movs	r6, #1
    d582:	e00f      	b.n	d5a4 <__gethex+0x432>
    d584:	241f      	movs	r4, #31
    d586:	9a01      	ldr	r2, [sp, #4]
    d588:	2601      	movs	r6, #1
    d58a:	4022      	ands	r2, r4
    d58c:	1e14      	subs	r4, r2, #0
    d58e:	d009      	beq.n	d5a4 <__gethex+0x432>
    d590:	9a03      	ldr	r2, [sp, #12]
    d592:	189b      	adds	r3, r3, r2
    d594:	3b04      	subs	r3, #4
    d596:	6818      	ldr	r0, [r3, #0]
    d598:	f000 f9c5 	bl	d926 <__hi0bits>
    d59c:	2120      	movs	r1, #32
    d59e:	1b0c      	subs	r4, r1, r4
    d5a0:	42a0      	cmp	r0, r4
    d5a2:	dbe3      	blt.n	d56c <__gethex+0x3fa>
    d5a4:	2320      	movs	r3, #32
    d5a6:	e000      	b.n	d5aa <__gethex+0x438>
    d5a8:	2310      	movs	r3, #16
    d5aa:	431e      	orrs	r6, r3
    d5ac:	1c30      	adds	r0, r6, #0
    d5ae:	9b12      	ldr	r3, [sp, #72]	; 0x48
    d5b0:	601d      	str	r5, [r3, #0]
    d5b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    d5b4:	601f      	str	r7, [r3, #0]
    d5b6:	b00d      	add	sp, #52	; 0x34
    d5b8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000d5ba <L_shift>:
    d5ba:	2308      	movs	r3, #8
    d5bc:	b570      	push	{r4, r5, r6, lr}
    d5be:	2520      	movs	r5, #32
    d5c0:	1a9a      	subs	r2, r3, r2
    d5c2:	0092      	lsls	r2, r2, #2
    d5c4:	1aad      	subs	r5, r5, r2
    d5c6:	6843      	ldr	r3, [r0, #4]
    d5c8:	6806      	ldr	r6, [r0, #0]
    d5ca:	1c1c      	adds	r4, r3, #0
    d5cc:	40ac      	lsls	r4, r5
    d5ce:	40d3      	lsrs	r3, r2
    d5d0:	4334      	orrs	r4, r6
    d5d2:	6004      	str	r4, [r0, #0]
    d5d4:	6043      	str	r3, [r0, #4]
    d5d6:	3004      	adds	r0, #4
    d5d8:	4288      	cmp	r0, r1
    d5da:	d3f4      	bcc.n	d5c6 <L_shift+0xc>
    d5dc:	bd70      	pop	{r4, r5, r6, pc}

0000d5de <__hexnan>:
    d5de:	b5f0      	push	{r4, r5, r6, r7, lr}
    d5e0:	b089      	sub	sp, #36	; 0x24
    d5e2:	9200      	str	r2, [sp, #0]
    d5e4:	680a      	ldr	r2, [r1, #0]
    d5e6:	9900      	ldr	r1, [sp, #0]
    d5e8:	1153      	asrs	r3, r2, #5
    d5ea:	009b      	lsls	r3, r3, #2
    d5ec:	18cb      	adds	r3, r1, r3
    d5ee:	9302      	str	r3, [sp, #8]
    d5f0:	231f      	movs	r3, #31
    d5f2:	401a      	ands	r2, r3
    d5f4:	9007      	str	r0, [sp, #28]
    d5f6:	9205      	str	r2, [sp, #20]
    d5f8:	d002      	beq.n	d600 <__hexnan+0x22>
    d5fa:	9b02      	ldr	r3, [sp, #8]
    d5fc:	3304      	adds	r3, #4
    d5fe:	9302      	str	r3, [sp, #8]
    d600:	9b02      	ldr	r3, [sp, #8]
    d602:	2500      	movs	r5, #0
    d604:	1f1e      	subs	r6, r3, #4
    d606:	1c37      	adds	r7, r6, #0
    d608:	1c34      	adds	r4, r6, #0
    d60a:	9b07      	ldr	r3, [sp, #28]
    d60c:	6035      	str	r5, [r6, #0]
    d60e:	681b      	ldr	r3, [r3, #0]
    d610:	9506      	str	r5, [sp, #24]
    d612:	9303      	str	r3, [sp, #12]
    d614:	9501      	str	r5, [sp, #4]
    d616:	9b03      	ldr	r3, [sp, #12]
    d618:	3301      	adds	r3, #1
    d61a:	9303      	str	r3, [sp, #12]
    d61c:	781b      	ldrb	r3, [r3, #0]
    d61e:	9304      	str	r3, [sp, #16]
    d620:	2b00      	cmp	r3, #0
    d622:	d03b      	beq.n	d69c <__hexnan+0xbe>
    d624:	9804      	ldr	r0, [sp, #16]
    d626:	f7ff fd8f 	bl	d148 <__hexdig_fun>
    d62a:	2800      	cmp	r0, #0
    d62c:	d122      	bne.n	d674 <__hexnan+0x96>
    d62e:	9b04      	ldr	r3, [sp, #16]
    d630:	2b20      	cmp	r3, #32
    d632:	d817      	bhi.n	d664 <__hexnan+0x86>
    d634:	9b06      	ldr	r3, [sp, #24]
    d636:	9a01      	ldr	r2, [sp, #4]
    d638:	4293      	cmp	r3, r2
    d63a:	daec      	bge.n	d616 <__hexnan+0x38>
    d63c:	42bc      	cmp	r4, r7
    d63e:	d206      	bcs.n	d64e <__hexnan+0x70>
    d640:	2d07      	cmp	r5, #7
    d642:	dc04      	bgt.n	d64e <__hexnan+0x70>
    d644:	1c20      	adds	r0, r4, #0
    d646:	1c39      	adds	r1, r7, #0
    d648:	1c2a      	adds	r2, r5, #0
    d64a:	f7ff ffb6 	bl	d5ba <L_shift>
    d64e:	9b00      	ldr	r3, [sp, #0]
    d650:	2508      	movs	r5, #8
    d652:	429c      	cmp	r4, r3
    d654:	d9df      	bls.n	d616 <__hexnan+0x38>
    d656:	2500      	movs	r5, #0
    d658:	9b01      	ldr	r3, [sp, #4]
    d65a:	1f27      	subs	r7, r4, #4
    d65c:	603d      	str	r5, [r7, #0]
    d65e:	9306      	str	r3, [sp, #24]
    d660:	1c3c      	adds	r4, r7, #0
    d662:	e7d8      	b.n	d616 <__hexnan+0x38>
    d664:	9b04      	ldr	r3, [sp, #16]
    d666:	2b29      	cmp	r3, #41	; 0x29
    d668:	d14c      	bne.n	d704 <__hexnan+0x126>
    d66a:	9b03      	ldr	r3, [sp, #12]
    d66c:	9a07      	ldr	r2, [sp, #28]
    d66e:	3301      	adds	r3, #1
    d670:	6013      	str	r3, [r2, #0]
    d672:	e013      	b.n	d69c <__hexnan+0xbe>
    d674:	9b01      	ldr	r3, [sp, #4]
    d676:	3501      	adds	r5, #1
    d678:	3301      	adds	r3, #1
    d67a:	9301      	str	r3, [sp, #4]
    d67c:	2d08      	cmp	r5, #8
    d67e:	dd06      	ble.n	d68e <__hexnan+0xb0>
    d680:	9b00      	ldr	r3, [sp, #0]
    d682:	429c      	cmp	r4, r3
    d684:	d9c7      	bls.n	d616 <__hexnan+0x38>
    d686:	2300      	movs	r3, #0
    d688:	2501      	movs	r5, #1
    d68a:	3c04      	subs	r4, #4
    d68c:	6023      	str	r3, [r4, #0]
    d68e:	6823      	ldr	r3, [r4, #0]
    d690:	011a      	lsls	r2, r3, #4
    d692:	230f      	movs	r3, #15
    d694:	4018      	ands	r0, r3
    d696:	4310      	orrs	r0, r2
    d698:	6020      	str	r0, [r4, #0]
    d69a:	e7bc      	b.n	d616 <__hexnan+0x38>
    d69c:	9b01      	ldr	r3, [sp, #4]
    d69e:	2b00      	cmp	r3, #0
    d6a0:	d030      	beq.n	d704 <__hexnan+0x126>
    d6a2:	42bc      	cmp	r4, r7
    d6a4:	d206      	bcs.n	d6b4 <__hexnan+0xd6>
    d6a6:	2d07      	cmp	r5, #7
    d6a8:	dc04      	bgt.n	d6b4 <__hexnan+0xd6>
    d6aa:	1c20      	adds	r0, r4, #0
    d6ac:	1c39      	adds	r1, r7, #0
    d6ae:	1c2a      	adds	r2, r5, #0
    d6b0:	f7ff ff83 	bl	d5ba <L_shift>
    d6b4:	9b00      	ldr	r3, [sp, #0]
    d6b6:	429c      	cmp	r4, r3
    d6b8:	d90a      	bls.n	d6d0 <__hexnan+0xf2>
    d6ba:	3304      	adds	r3, #4
    d6bc:	cc02      	ldmia	r4!, {r1}
    d6be:	1f1a      	subs	r2, r3, #4
    d6c0:	6011      	str	r1, [r2, #0]
    d6c2:	42a6      	cmp	r6, r4
    d6c4:	d2f9      	bcs.n	d6ba <__hexnan+0xdc>
    d6c6:	2200      	movs	r2, #0
    d6c8:	c304      	stmia	r3!, {r2}
    d6ca:	429e      	cmp	r6, r3
    d6cc:	d2fb      	bcs.n	d6c6 <__hexnan+0xe8>
    d6ce:	e00e      	b.n	d6ee <__hexnan+0x110>
    d6d0:	9b05      	ldr	r3, [sp, #20]
    d6d2:	2b00      	cmp	r3, #0
    d6d4:	d00b      	beq.n	d6ee <__hexnan+0x110>
    d6d6:	2220      	movs	r2, #32
    d6d8:	9905      	ldr	r1, [sp, #20]
    d6da:	9b02      	ldr	r3, [sp, #8]
    d6dc:	1a52      	subs	r2, r2, r1
    d6de:	2101      	movs	r1, #1
    d6e0:	4249      	negs	r1, r1
    d6e2:	40d1      	lsrs	r1, r2
    d6e4:	1c0a      	adds	r2, r1, #0
    d6e6:	3b04      	subs	r3, #4
    d6e8:	6819      	ldr	r1, [r3, #0]
    d6ea:	400a      	ands	r2, r1
    d6ec:	601a      	str	r2, [r3, #0]
    d6ee:	6833      	ldr	r3, [r6, #0]
    d6f0:	2b00      	cmp	r3, #0
    d6f2:	d109      	bne.n	d708 <__hexnan+0x12a>
    d6f4:	9b00      	ldr	r3, [sp, #0]
    d6f6:	429e      	cmp	r6, r3
    d6f8:	d102      	bne.n	d700 <__hexnan+0x122>
    d6fa:	2301      	movs	r3, #1
    d6fc:	6033      	str	r3, [r6, #0]
    d6fe:	e003      	b.n	d708 <__hexnan+0x12a>
    d700:	3e04      	subs	r6, #4
    d702:	e7f4      	b.n	d6ee <__hexnan+0x110>
    d704:	2004      	movs	r0, #4
    d706:	e000      	b.n	d70a <__hexnan+0x12c>
    d708:	2005      	movs	r0, #5
    d70a:	b009      	add	sp, #36	; 0x24
    d70c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0000d710 <_isatty_r>:
    d710:	b538      	push	{r3, r4, r5, lr}
    d712:	2300      	movs	r3, #0
    d714:	4c06      	ldr	r4, [pc, #24]	; (d730 <_isatty_r+0x20>)
    d716:	1c05      	adds	r5, r0, #0
    d718:	1c08      	adds	r0, r1, #0
    d71a:	6023      	str	r3, [r4, #0]
    d71c:	f7f6 fa2c 	bl	3b78 <_isatty>
    d720:	1c43      	adds	r3, r0, #1
    d722:	d103      	bne.n	d72c <_isatty_r+0x1c>
    d724:	6823      	ldr	r3, [r4, #0]
    d726:	2b00      	cmp	r3, #0
    d728:	d000      	beq.n	d72c <_isatty_r+0x1c>
    d72a:	602b      	str	r3, [r5, #0]
    d72c:	bd38      	pop	{r3, r4, r5, pc}
    d72e:	46c0      	nop			; (mov r8, r8)
    d730:	200046b0 	.word	0x200046b0

0000d734 <_localeconv_r>:
    d734:	4800      	ldr	r0, [pc, #0]	; (d738 <_localeconv_r+0x4>)
    d736:	4770      	bx	lr
    d738:	2000013c 	.word	0x2000013c

0000d73c <_lseek_r>:
    d73c:	b538      	push	{r3, r4, r5, lr}
    d73e:	1c05      	adds	r5, r0, #0
    d740:	2000      	movs	r0, #0
    d742:	4c07      	ldr	r4, [pc, #28]	; (d760 <_lseek_r+0x24>)
    d744:	6020      	str	r0, [r4, #0]
    d746:	1c08      	adds	r0, r1, #0
    d748:	1c11      	adds	r1, r2, #0
    d74a:	1c1a      	adds	r2, r3, #0
    d74c:	f7f6 fa28 	bl	3ba0 <_lseek>
    d750:	1c43      	adds	r3, r0, #1
    d752:	d103      	bne.n	d75c <_lseek_r+0x20>
    d754:	6823      	ldr	r3, [r4, #0]
    d756:	2b00      	cmp	r3, #0
    d758:	d000      	beq.n	d75c <_lseek_r+0x20>
    d75a:	602b      	str	r3, [r5, #0]
    d75c:	bd38      	pop	{r3, r4, r5, pc}
    d75e:	46c0      	nop			; (mov r8, r8)
    d760:	200046b0 	.word	0x200046b0

0000d764 <memmove>:
    d764:	b510      	push	{r4, lr}
    d766:	4281      	cmp	r1, r0
    d768:	d208      	bcs.n	d77c <memmove+0x18>
    d76a:	188b      	adds	r3, r1, r2
    d76c:	4298      	cmp	r0, r3
    d76e:	d205      	bcs.n	d77c <memmove+0x18>
    d770:	1a9b      	subs	r3, r3, r2
    d772:	3a01      	subs	r2, #1
    d774:	d309      	bcc.n	d78a <memmove+0x26>
    d776:	5c99      	ldrb	r1, [r3, r2]
    d778:	5481      	strb	r1, [r0, r2]
    d77a:	e7fa      	b.n	d772 <memmove+0xe>
    d77c:	2300      	movs	r3, #0
    d77e:	4293      	cmp	r3, r2
    d780:	d003      	beq.n	d78a <memmove+0x26>
    d782:	5ccc      	ldrb	r4, [r1, r3]
    d784:	54c4      	strb	r4, [r0, r3]
    d786:	3301      	adds	r3, #1
    d788:	e7f9      	b.n	d77e <memmove+0x1a>
    d78a:	bd10      	pop	{r4, pc}

0000d78c <_Balloc>:
    d78c:	b570      	push	{r4, r5, r6, lr}
    d78e:	6a46      	ldr	r6, [r0, #36]	; 0x24
    d790:	1c04      	adds	r4, r0, #0
    d792:	1c0d      	adds	r5, r1, #0
    d794:	2e00      	cmp	r6, #0
    d796:	d107      	bne.n	d7a8 <_Balloc+0x1c>
    d798:	2010      	movs	r0, #16
    d79a:	f7fc f947 	bl	9a2c <malloc>
    d79e:	6260      	str	r0, [r4, #36]	; 0x24
    d7a0:	6046      	str	r6, [r0, #4]
    d7a2:	6086      	str	r6, [r0, #8]
    d7a4:	6006      	str	r6, [r0, #0]
    d7a6:	60c6      	str	r6, [r0, #12]
    d7a8:	6a66      	ldr	r6, [r4, #36]	; 0x24
    d7aa:	68f3      	ldr	r3, [r6, #12]
    d7ac:	2b00      	cmp	r3, #0
    d7ae:	d009      	beq.n	d7c4 <_Balloc+0x38>
    d7b0:	6a62      	ldr	r2, [r4, #36]	; 0x24
    d7b2:	00ab      	lsls	r3, r5, #2
    d7b4:	68d2      	ldr	r2, [r2, #12]
    d7b6:	18d3      	adds	r3, r2, r3
    d7b8:	6818      	ldr	r0, [r3, #0]
    d7ba:	2800      	cmp	r0, #0
    d7bc:	d00e      	beq.n	d7dc <_Balloc+0x50>
    d7be:	6802      	ldr	r2, [r0, #0]
    d7c0:	601a      	str	r2, [r3, #0]
    d7c2:	e017      	b.n	d7f4 <_Balloc+0x68>
    d7c4:	1c20      	adds	r0, r4, #0
    d7c6:	2104      	movs	r1, #4
    d7c8:	2221      	movs	r2, #33	; 0x21
    d7ca:	f000 fbe2 	bl	df92 <_calloc_r>
    d7ce:	6a63      	ldr	r3, [r4, #36]	; 0x24
    d7d0:	60f0      	str	r0, [r6, #12]
    d7d2:	68db      	ldr	r3, [r3, #12]
    d7d4:	2b00      	cmp	r3, #0
    d7d6:	d1eb      	bne.n	d7b0 <_Balloc+0x24>
    d7d8:	2000      	movs	r0, #0
    d7da:	e00e      	b.n	d7fa <_Balloc+0x6e>
    d7dc:	2101      	movs	r1, #1
    d7de:	1c0e      	adds	r6, r1, #0
    d7e0:	40ae      	lsls	r6, r5
    d7e2:	1d72      	adds	r2, r6, #5
    d7e4:	0092      	lsls	r2, r2, #2
    d7e6:	1c20      	adds	r0, r4, #0
    d7e8:	f000 fbd3 	bl	df92 <_calloc_r>
    d7ec:	2800      	cmp	r0, #0
    d7ee:	d0f3      	beq.n	d7d8 <_Balloc+0x4c>
    d7f0:	6045      	str	r5, [r0, #4]
    d7f2:	6086      	str	r6, [r0, #8]
    d7f4:	2300      	movs	r3, #0
    d7f6:	6103      	str	r3, [r0, #16]
    d7f8:	60c3      	str	r3, [r0, #12]
    d7fa:	bd70      	pop	{r4, r5, r6, pc}

0000d7fc <_Bfree>:
    d7fc:	b570      	push	{r4, r5, r6, lr}
    d7fe:	6a45      	ldr	r5, [r0, #36]	; 0x24
    d800:	1c06      	adds	r6, r0, #0
    d802:	1c0c      	adds	r4, r1, #0
    d804:	2d00      	cmp	r5, #0
    d806:	d107      	bne.n	d818 <_Bfree+0x1c>
    d808:	2010      	movs	r0, #16
    d80a:	f7fc f90f 	bl	9a2c <malloc>
    d80e:	6270      	str	r0, [r6, #36]	; 0x24
    d810:	6045      	str	r5, [r0, #4]
    d812:	6085      	str	r5, [r0, #8]
    d814:	6005      	str	r5, [r0, #0]
    d816:	60c5      	str	r5, [r0, #12]
    d818:	2c00      	cmp	r4, #0
    d81a:	d007      	beq.n	d82c <_Bfree+0x30>
    d81c:	6a72      	ldr	r2, [r6, #36]	; 0x24
    d81e:	6863      	ldr	r3, [r4, #4]
    d820:	68d2      	ldr	r2, [r2, #12]
    d822:	009b      	lsls	r3, r3, #2
    d824:	18d3      	adds	r3, r2, r3
    d826:	681a      	ldr	r2, [r3, #0]
    d828:	6022      	str	r2, [r4, #0]
    d82a:	601c      	str	r4, [r3, #0]
    d82c:	bd70      	pop	{r4, r5, r6, pc}

0000d82e <__multadd>:
    d82e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    d830:	1c1e      	adds	r6, r3, #0
    d832:	2314      	movs	r3, #20
    d834:	469c      	mov	ip, r3
    d836:	1c07      	adds	r7, r0, #0
    d838:	1c0c      	adds	r4, r1, #0
    d83a:	2000      	movs	r0, #0
    d83c:	690d      	ldr	r5, [r1, #16]
    d83e:	448c      	add	ip, r1
    d840:	4663      	mov	r3, ip
    d842:	8819      	ldrh	r1, [r3, #0]
    d844:	681b      	ldr	r3, [r3, #0]
    d846:	4351      	muls	r1, r2
    d848:	0c1b      	lsrs	r3, r3, #16
    d84a:	4353      	muls	r3, r2
    d84c:	1989      	adds	r1, r1, r6
    d84e:	0c0e      	lsrs	r6, r1, #16
    d850:	18f3      	adds	r3, r6, r3
    d852:	b289      	uxth	r1, r1
    d854:	0c1e      	lsrs	r6, r3, #16
    d856:	041b      	lsls	r3, r3, #16
    d858:	185b      	adds	r3, r3, r1
    d85a:	4661      	mov	r1, ip
    d85c:	3001      	adds	r0, #1
    d85e:	c108      	stmia	r1!, {r3}
    d860:	468c      	mov	ip, r1
    d862:	42a8      	cmp	r0, r5
    d864:	dbec      	blt.n	d840 <__multadd+0x12>
    d866:	2e00      	cmp	r6, #0
    d868:	d01b      	beq.n	d8a2 <__multadd+0x74>
    d86a:	68a3      	ldr	r3, [r4, #8]
    d86c:	429d      	cmp	r5, r3
    d86e:	db12      	blt.n	d896 <__multadd+0x68>
    d870:	6863      	ldr	r3, [r4, #4]
    d872:	1c38      	adds	r0, r7, #0
    d874:	1c59      	adds	r1, r3, #1
    d876:	f7ff ff89 	bl	d78c <_Balloc>
    d87a:	1c21      	adds	r1, r4, #0
    d87c:	6923      	ldr	r3, [r4, #16]
    d87e:	9001      	str	r0, [sp, #4]
    d880:	1c9a      	adds	r2, r3, #2
    d882:	310c      	adds	r1, #12
    d884:	0092      	lsls	r2, r2, #2
    d886:	300c      	adds	r0, #12
    d888:	f7fc f8ef 	bl	9a6a <memcpy>
    d88c:	1c21      	adds	r1, r4, #0
    d88e:	1c38      	adds	r0, r7, #0
    d890:	f7ff ffb4 	bl	d7fc <_Bfree>
    d894:	9c01      	ldr	r4, [sp, #4]
    d896:	1d2b      	adds	r3, r5, #4
    d898:	009b      	lsls	r3, r3, #2
    d89a:	18e3      	adds	r3, r4, r3
    d89c:	3501      	adds	r5, #1
    d89e:	605e      	str	r6, [r3, #4]
    d8a0:	6125      	str	r5, [r4, #16]
    d8a2:	1c20      	adds	r0, r4, #0
    d8a4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0000d8a6 <__s2b>:
    d8a6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    d8a8:	1c06      	adds	r6, r0, #0
    d8aa:	1c18      	adds	r0, r3, #0
    d8ac:	1c0c      	adds	r4, r1, #0
    d8ae:	3008      	adds	r0, #8
    d8b0:	2109      	movs	r1, #9
    d8b2:	9301      	str	r3, [sp, #4]
    d8b4:	1c15      	adds	r5, r2, #0
    d8b6:	f7f8 fd89 	bl	63cc <__aeabi_idiv>
    d8ba:	2301      	movs	r3, #1
    d8bc:	2100      	movs	r1, #0
    d8be:	4298      	cmp	r0, r3
    d8c0:	dd02      	ble.n	d8c8 <__s2b+0x22>
    d8c2:	005b      	lsls	r3, r3, #1
    d8c4:	3101      	adds	r1, #1
    d8c6:	e7fa      	b.n	d8be <__s2b+0x18>
    d8c8:	1c30      	adds	r0, r6, #0
    d8ca:	f7ff ff5f 	bl	d78c <_Balloc>
    d8ce:	9b08      	ldr	r3, [sp, #32]
    d8d0:	1c01      	adds	r1, r0, #0
    d8d2:	6143      	str	r3, [r0, #20]
    d8d4:	2301      	movs	r3, #1
    d8d6:	6103      	str	r3, [r0, #16]
    d8d8:	2d09      	cmp	r5, #9
    d8da:	dd12      	ble.n	d902 <__s2b+0x5c>
    d8dc:	1c23      	adds	r3, r4, #0
    d8de:	3309      	adds	r3, #9
    d8e0:	1c1f      	adds	r7, r3, #0
    d8e2:	9300      	str	r3, [sp, #0]
    d8e4:	1964      	adds	r4, r4, r5
    d8e6:	783b      	ldrb	r3, [r7, #0]
    d8e8:	1c30      	adds	r0, r6, #0
    d8ea:	3b30      	subs	r3, #48	; 0x30
    d8ec:	220a      	movs	r2, #10
    d8ee:	f7ff ff9e 	bl	d82e <__multadd>
    d8f2:	3701      	adds	r7, #1
    d8f4:	1c01      	adds	r1, r0, #0
    d8f6:	42a7      	cmp	r7, r4
    d8f8:	d1f5      	bne.n	d8e6 <__s2b+0x40>
    d8fa:	9b00      	ldr	r3, [sp, #0]
    d8fc:	195c      	adds	r4, r3, r5
    d8fe:	3c08      	subs	r4, #8
    d900:	e001      	b.n	d906 <__s2b+0x60>
    d902:	2509      	movs	r5, #9
    d904:	340a      	adds	r4, #10
    d906:	1c2f      	adds	r7, r5, #0
    d908:	9b01      	ldr	r3, [sp, #4]
    d90a:	429f      	cmp	r7, r3
    d90c:	da09      	bge.n	d922 <__s2b+0x7c>
    d90e:	1b63      	subs	r3, r4, r5
    d910:	5ddb      	ldrb	r3, [r3, r7]
    d912:	1c30      	adds	r0, r6, #0
    d914:	3b30      	subs	r3, #48	; 0x30
    d916:	220a      	movs	r2, #10
    d918:	f7ff ff89 	bl	d82e <__multadd>
    d91c:	3701      	adds	r7, #1
    d91e:	1c01      	adds	r1, r0, #0
    d920:	e7f2      	b.n	d908 <__s2b+0x62>
    d922:	1c08      	adds	r0, r1, #0
    d924:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0000d926 <__hi0bits>:
    d926:	2200      	movs	r2, #0
    d928:	1c03      	adds	r3, r0, #0
    d92a:	0c01      	lsrs	r1, r0, #16
    d92c:	4291      	cmp	r1, r2
    d92e:	d101      	bne.n	d934 <__hi0bits+0xe>
    d930:	0403      	lsls	r3, r0, #16
    d932:	3210      	adds	r2, #16
    d934:	0e19      	lsrs	r1, r3, #24
    d936:	d101      	bne.n	d93c <__hi0bits+0x16>
    d938:	3208      	adds	r2, #8
    d93a:	021b      	lsls	r3, r3, #8
    d93c:	0f19      	lsrs	r1, r3, #28
    d93e:	d101      	bne.n	d944 <__hi0bits+0x1e>
    d940:	3204      	adds	r2, #4
    d942:	011b      	lsls	r3, r3, #4
    d944:	0f99      	lsrs	r1, r3, #30
    d946:	d101      	bne.n	d94c <__hi0bits+0x26>
    d948:	3202      	adds	r2, #2
    d94a:	009b      	lsls	r3, r3, #2
    d94c:	1c10      	adds	r0, r2, #0
    d94e:	2b00      	cmp	r3, #0
    d950:	db03      	blt.n	d95a <__hi0bits+0x34>
    d952:	2020      	movs	r0, #32
    d954:	005b      	lsls	r3, r3, #1
    d956:	d500      	bpl.n	d95a <__hi0bits+0x34>
    d958:	1c50      	adds	r0, r2, #1
    d95a:	4770      	bx	lr

0000d95c <__lo0bits>:
    d95c:	2207      	movs	r2, #7
    d95e:	6803      	ldr	r3, [r0, #0]
    d960:	b510      	push	{r4, lr}
    d962:	1c01      	adds	r1, r0, #0
    d964:	401a      	ands	r2, r3
    d966:	d00c      	beq.n	d982 <__lo0bits+0x26>
    d968:	2401      	movs	r4, #1
    d96a:	2000      	movs	r0, #0
    d96c:	4223      	tst	r3, r4
    d96e:	d123      	bne.n	d9b8 <__lo0bits+0x5c>
    d970:	2202      	movs	r2, #2
    d972:	4213      	tst	r3, r2
    d974:	d003      	beq.n	d97e <__lo0bits+0x22>
    d976:	40e3      	lsrs	r3, r4
    d978:	1c20      	adds	r0, r4, #0
    d97a:	600b      	str	r3, [r1, #0]
    d97c:	e01c      	b.n	d9b8 <__lo0bits+0x5c>
    d97e:	089b      	lsrs	r3, r3, #2
    d980:	e018      	b.n	d9b4 <__lo0bits+0x58>
    d982:	b298      	uxth	r0, r3
    d984:	2800      	cmp	r0, #0
    d986:	d101      	bne.n	d98c <__lo0bits+0x30>
    d988:	2210      	movs	r2, #16
    d98a:	0c1b      	lsrs	r3, r3, #16
    d98c:	b2d8      	uxtb	r0, r3
    d98e:	2800      	cmp	r0, #0
    d990:	d101      	bne.n	d996 <__lo0bits+0x3a>
    d992:	3208      	adds	r2, #8
    d994:	0a1b      	lsrs	r3, r3, #8
    d996:	0718      	lsls	r0, r3, #28
    d998:	d101      	bne.n	d99e <__lo0bits+0x42>
    d99a:	3204      	adds	r2, #4
    d99c:	091b      	lsrs	r3, r3, #4
    d99e:	0798      	lsls	r0, r3, #30
    d9a0:	d101      	bne.n	d9a6 <__lo0bits+0x4a>
    d9a2:	3202      	adds	r2, #2
    d9a4:	089b      	lsrs	r3, r3, #2
    d9a6:	07d8      	lsls	r0, r3, #31
    d9a8:	d404      	bmi.n	d9b4 <__lo0bits+0x58>
    d9aa:	085b      	lsrs	r3, r3, #1
    d9ac:	2020      	movs	r0, #32
    d9ae:	2b00      	cmp	r3, #0
    d9b0:	d002      	beq.n	d9b8 <__lo0bits+0x5c>
    d9b2:	3201      	adds	r2, #1
    d9b4:	1c10      	adds	r0, r2, #0
    d9b6:	600b      	str	r3, [r1, #0]
    d9b8:	bd10      	pop	{r4, pc}

0000d9ba <__i2b>:
    d9ba:	b510      	push	{r4, lr}
    d9bc:	1c0c      	adds	r4, r1, #0
    d9be:	2101      	movs	r1, #1
    d9c0:	f7ff fee4 	bl	d78c <_Balloc>
    d9c4:	2301      	movs	r3, #1
    d9c6:	6144      	str	r4, [r0, #20]
    d9c8:	6103      	str	r3, [r0, #16]
    d9ca:	bd10      	pop	{r4, pc}

0000d9cc <__multiply>:
    d9cc:	b5f0      	push	{r4, r5, r6, r7, lr}
    d9ce:	690b      	ldr	r3, [r1, #16]
    d9d0:	1c14      	adds	r4, r2, #0
    d9d2:	6912      	ldr	r2, [r2, #16]
    d9d4:	b089      	sub	sp, #36	; 0x24
    d9d6:	1c0d      	adds	r5, r1, #0
    d9d8:	4293      	cmp	r3, r2
    d9da:	da01      	bge.n	d9e0 <__multiply+0x14>
    d9dc:	1c25      	adds	r5, r4, #0
    d9de:	1c0c      	adds	r4, r1, #0
    d9e0:	692f      	ldr	r7, [r5, #16]
    d9e2:	6926      	ldr	r6, [r4, #16]
    d9e4:	68aa      	ldr	r2, [r5, #8]
    d9e6:	19bb      	adds	r3, r7, r6
    d9e8:	6869      	ldr	r1, [r5, #4]
    d9ea:	9300      	str	r3, [sp, #0]
    d9ec:	4293      	cmp	r3, r2
    d9ee:	dd00      	ble.n	d9f2 <__multiply+0x26>
    d9f0:	3101      	adds	r1, #1
    d9f2:	f7ff fecb 	bl	d78c <_Balloc>
    d9f6:	1c01      	adds	r1, r0, #0
    d9f8:	9b00      	ldr	r3, [sp, #0]
    d9fa:	3114      	adds	r1, #20
    d9fc:	4684      	mov	ip, r0
    d9fe:	0098      	lsls	r0, r3, #2
    da00:	1c0b      	adds	r3, r1, #0
    da02:	1808      	adds	r0, r1, r0
    da04:	4283      	cmp	r3, r0
    da06:	d202      	bcs.n	da0e <__multiply+0x42>
    da08:	2200      	movs	r2, #0
    da0a:	c304      	stmia	r3!, {r2}
    da0c:	e7fa      	b.n	da04 <__multiply+0x38>
    da0e:	3514      	adds	r5, #20
    da10:	00bf      	lsls	r7, r7, #2
    da12:	19eb      	adds	r3, r5, r7
    da14:	3414      	adds	r4, #20
    da16:	00b6      	lsls	r6, r6, #2
    da18:	9304      	str	r3, [sp, #16]
    da1a:	19a3      	adds	r3, r4, r6
    da1c:	9502      	str	r5, [sp, #8]
    da1e:	9306      	str	r3, [sp, #24]
    da20:	9b06      	ldr	r3, [sp, #24]
    da22:	429c      	cmp	r4, r3
    da24:	d256      	bcs.n	dad4 <__multiply+0x108>
    da26:	8823      	ldrh	r3, [r4, #0]
    da28:	9303      	str	r3, [sp, #12]
    da2a:	2b00      	cmp	r3, #0
    da2c:	d022      	beq.n	da74 <__multiply+0xa8>
    da2e:	1c0e      	adds	r6, r1, #0
    da30:	2700      	movs	r7, #0
    da32:	9b02      	ldr	r3, [sp, #8]
    da34:	9301      	str	r3, [sp, #4]
    da36:	9b01      	ldr	r3, [sp, #4]
    da38:	9d03      	ldr	r5, [sp, #12]
    da3a:	cb04      	ldmia	r3!, {r2}
    da3c:	9605      	str	r6, [sp, #20]
    da3e:	9301      	str	r3, [sp, #4]
    da40:	8833      	ldrh	r3, [r6, #0]
    da42:	9307      	str	r3, [sp, #28]
    da44:	b293      	uxth	r3, r2
    da46:	436b      	muls	r3, r5
    da48:	9d07      	ldr	r5, [sp, #28]
    da4a:	0c12      	lsrs	r2, r2, #16
    da4c:	18eb      	adds	r3, r5, r3
    da4e:	6835      	ldr	r5, [r6, #0]
    da50:	19db      	adds	r3, r3, r7
    da52:	0c2f      	lsrs	r7, r5, #16
    da54:	9d03      	ldr	r5, [sp, #12]
    da56:	436a      	muls	r2, r5
    da58:	18ba      	adds	r2, r7, r2
    da5a:	0c1f      	lsrs	r7, r3, #16
    da5c:	19d2      	adds	r2, r2, r7
    da5e:	0c17      	lsrs	r7, r2, #16
    da60:	b29b      	uxth	r3, r3
    da62:	0412      	lsls	r2, r2, #16
    da64:	4313      	orrs	r3, r2
    da66:	c608      	stmia	r6!, {r3}
    da68:	9a01      	ldr	r2, [sp, #4]
    da6a:	9b04      	ldr	r3, [sp, #16]
    da6c:	429a      	cmp	r2, r3
    da6e:	d3e2      	bcc.n	da36 <__multiply+0x6a>
    da70:	9b05      	ldr	r3, [sp, #20]
    da72:	605f      	str	r7, [r3, #4]
    da74:	6823      	ldr	r3, [r4, #0]
    da76:	0c1b      	lsrs	r3, r3, #16
    da78:	9301      	str	r3, [sp, #4]
    da7a:	d021      	beq.n	dac0 <__multiply+0xf4>
    da7c:	2200      	movs	r2, #0
    da7e:	1c0d      	adds	r5, r1, #0
    da80:	680b      	ldr	r3, [r1, #0]
    da82:	9f02      	ldr	r7, [sp, #8]
    da84:	9203      	str	r2, [sp, #12]
    da86:	883e      	ldrh	r6, [r7, #0]
    da88:	9a01      	ldr	r2, [sp, #4]
    da8a:	b29b      	uxth	r3, r3
    da8c:	4356      	muls	r6, r2
    da8e:	682a      	ldr	r2, [r5, #0]
    da90:	9505      	str	r5, [sp, #20]
    da92:	0c12      	lsrs	r2, r2, #16
    da94:	18b2      	adds	r2, r6, r2
    da96:	9e03      	ldr	r6, [sp, #12]
    da98:	1992      	adds	r2, r2, r6
    da9a:	0416      	lsls	r6, r2, #16
    da9c:	4333      	orrs	r3, r6
    da9e:	602b      	str	r3, [r5, #0]
    daa0:	cf08      	ldmia	r7!, {r3}
    daa2:	9e01      	ldr	r6, [sp, #4]
    daa4:	0c1b      	lsrs	r3, r3, #16
    daa6:	4373      	muls	r3, r6
    daa8:	88ae      	ldrh	r6, [r5, #4]
    daaa:	0c12      	lsrs	r2, r2, #16
    daac:	199b      	adds	r3, r3, r6
    daae:	189b      	adds	r3, r3, r2
    dab0:	0c1a      	lsrs	r2, r3, #16
    dab2:	9203      	str	r2, [sp, #12]
    dab4:	9a04      	ldr	r2, [sp, #16]
    dab6:	3504      	adds	r5, #4
    dab8:	42ba      	cmp	r2, r7
    daba:	d8e4      	bhi.n	da86 <__multiply+0xba>
    dabc:	9a05      	ldr	r2, [sp, #20]
    dabe:	6053      	str	r3, [r2, #4]
    dac0:	3404      	adds	r4, #4
    dac2:	3104      	adds	r1, #4
    dac4:	e7ac      	b.n	da20 <__multiply+0x54>
    dac6:	3804      	subs	r0, #4
    dac8:	6803      	ldr	r3, [r0, #0]
    daca:	2b00      	cmp	r3, #0
    dacc:	d105      	bne.n	dada <__multiply+0x10e>
    dace:	9b00      	ldr	r3, [sp, #0]
    dad0:	3b01      	subs	r3, #1
    dad2:	9300      	str	r3, [sp, #0]
    dad4:	9b00      	ldr	r3, [sp, #0]
    dad6:	2b00      	cmp	r3, #0
    dad8:	dcf5      	bgt.n	dac6 <__multiply+0xfa>
    dada:	4663      	mov	r3, ip
    dadc:	4660      	mov	r0, ip
    dade:	9a00      	ldr	r2, [sp, #0]
    dae0:	611a      	str	r2, [r3, #16]
    dae2:	b009      	add	sp, #36	; 0x24
    dae4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0000dae8 <__pow5mult>:
    dae8:	2303      	movs	r3, #3
    daea:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    daec:	4013      	ands	r3, r2
    daee:	1c05      	adds	r5, r0, #0
    daf0:	1c0e      	adds	r6, r1, #0
    daf2:	1c14      	adds	r4, r2, #0
    daf4:	2b00      	cmp	r3, #0
    daf6:	d007      	beq.n	db08 <__pow5mult+0x20>
    daf8:	4a22      	ldr	r2, [pc, #136]	; (db84 <__pow5mult+0x9c>)
    dafa:	3b01      	subs	r3, #1
    dafc:	009b      	lsls	r3, r3, #2
    dafe:	589a      	ldr	r2, [r3, r2]
    db00:	2300      	movs	r3, #0
    db02:	f7ff fe94 	bl	d82e <__multadd>
    db06:	1c06      	adds	r6, r0, #0
    db08:	10a3      	asrs	r3, r4, #2
    db0a:	9301      	str	r3, [sp, #4]
    db0c:	d037      	beq.n	db7e <__pow5mult+0x96>
    db0e:	6a6c      	ldr	r4, [r5, #36]	; 0x24
    db10:	2c00      	cmp	r4, #0
    db12:	d107      	bne.n	db24 <__pow5mult+0x3c>
    db14:	2010      	movs	r0, #16
    db16:	f7fb ff89 	bl	9a2c <malloc>
    db1a:	6268      	str	r0, [r5, #36]	; 0x24
    db1c:	6044      	str	r4, [r0, #4]
    db1e:	6084      	str	r4, [r0, #8]
    db20:	6004      	str	r4, [r0, #0]
    db22:	60c4      	str	r4, [r0, #12]
    db24:	6a6f      	ldr	r7, [r5, #36]	; 0x24
    db26:	68bc      	ldr	r4, [r7, #8]
    db28:	2c00      	cmp	r4, #0
    db2a:	d110      	bne.n	db4e <__pow5mult+0x66>
    db2c:	1c28      	adds	r0, r5, #0
    db2e:	4916      	ldr	r1, [pc, #88]	; (db88 <__pow5mult+0xa0>)
    db30:	f7ff ff43 	bl	d9ba <__i2b>
    db34:	2300      	movs	r3, #0
    db36:	60b8      	str	r0, [r7, #8]
    db38:	1c04      	adds	r4, r0, #0
    db3a:	6003      	str	r3, [r0, #0]
    db3c:	e007      	b.n	db4e <__pow5mult+0x66>
    db3e:	9b01      	ldr	r3, [sp, #4]
    db40:	105b      	asrs	r3, r3, #1
    db42:	9301      	str	r3, [sp, #4]
    db44:	d01b      	beq.n	db7e <__pow5mult+0x96>
    db46:	6820      	ldr	r0, [r4, #0]
    db48:	2800      	cmp	r0, #0
    db4a:	d00f      	beq.n	db6c <__pow5mult+0x84>
    db4c:	1c04      	adds	r4, r0, #0
    db4e:	9b01      	ldr	r3, [sp, #4]
    db50:	07db      	lsls	r3, r3, #31
    db52:	d5f4      	bpl.n	db3e <__pow5mult+0x56>
    db54:	1c31      	adds	r1, r6, #0
    db56:	1c22      	adds	r2, r4, #0
    db58:	1c28      	adds	r0, r5, #0
    db5a:	f7ff ff37 	bl	d9cc <__multiply>
    db5e:	1c07      	adds	r7, r0, #0
    db60:	1c31      	adds	r1, r6, #0
    db62:	1c28      	adds	r0, r5, #0
    db64:	f7ff fe4a 	bl	d7fc <_Bfree>
    db68:	1c3e      	adds	r6, r7, #0
    db6a:	e7e8      	b.n	db3e <__pow5mult+0x56>
    db6c:	1c28      	adds	r0, r5, #0
    db6e:	1c21      	adds	r1, r4, #0
    db70:	1c22      	adds	r2, r4, #0
    db72:	f7ff ff2b 	bl	d9cc <__multiply>
    db76:	2300      	movs	r3, #0
    db78:	6020      	str	r0, [r4, #0]
    db7a:	6003      	str	r3, [r0, #0]
    db7c:	e7e6      	b.n	db4c <__pow5mult+0x64>
    db7e:	1c30      	adds	r0, r6, #0
    db80:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    db82:	46c0      	nop			; (mov r8, r8)
    db84:	0000f9b0 	.word	0x0000f9b0
    db88:	00000271 	.word	0x00000271

0000db8c <__lshift>:
    db8c:	b5f0      	push	{r4, r5, r6, r7, lr}
    db8e:	1c0c      	adds	r4, r1, #0
    db90:	1c17      	adds	r7, r2, #0
    db92:	6923      	ldr	r3, [r4, #16]
    db94:	1155      	asrs	r5, r2, #5
    db96:	b085      	sub	sp, #20
    db98:	18eb      	adds	r3, r5, r3
    db9a:	9301      	str	r3, [sp, #4]
    db9c:	3301      	adds	r3, #1
    db9e:	9300      	str	r3, [sp, #0]
    dba0:	6849      	ldr	r1, [r1, #4]
    dba2:	68a3      	ldr	r3, [r4, #8]
    dba4:	9002      	str	r0, [sp, #8]
    dba6:	9a00      	ldr	r2, [sp, #0]
    dba8:	429a      	cmp	r2, r3
    dbaa:	dd02      	ble.n	dbb2 <__lshift+0x26>
    dbac:	3101      	adds	r1, #1
    dbae:	005b      	lsls	r3, r3, #1
    dbb0:	e7f9      	b.n	dba6 <__lshift+0x1a>
    dbb2:	9802      	ldr	r0, [sp, #8]
    dbb4:	f7ff fdea 	bl	d78c <_Balloc>
    dbb8:	1c02      	adds	r2, r0, #0
    dbba:	1c06      	adds	r6, r0, #0
    dbbc:	2300      	movs	r3, #0
    dbbe:	3214      	adds	r2, #20
    dbc0:	42ab      	cmp	r3, r5
    dbc2:	da04      	bge.n	dbce <__lshift+0x42>
    dbc4:	2000      	movs	r0, #0
    dbc6:	0099      	lsls	r1, r3, #2
    dbc8:	5050      	str	r0, [r2, r1]
    dbca:	3301      	adds	r3, #1
    dbcc:	e7f8      	b.n	dbc0 <__lshift+0x34>
    dbce:	43eb      	mvns	r3, r5
    dbd0:	17db      	asrs	r3, r3, #31
    dbd2:	401d      	ands	r5, r3
    dbd4:	1c23      	adds	r3, r4, #0
    dbd6:	00ad      	lsls	r5, r5, #2
    dbd8:	1955      	adds	r5, r2, r5
    dbda:	6922      	ldr	r2, [r4, #16]
    dbdc:	3314      	adds	r3, #20
    dbde:	0092      	lsls	r2, r2, #2
    dbe0:	189a      	adds	r2, r3, r2
    dbe2:	4694      	mov	ip, r2
    dbe4:	221f      	movs	r2, #31
    dbe6:	4017      	ands	r7, r2
    dbe8:	d014      	beq.n	dc14 <__lshift+0x88>
    dbea:	3201      	adds	r2, #1
    dbec:	1bd2      	subs	r2, r2, r7
    dbee:	9203      	str	r2, [sp, #12]
    dbf0:	2200      	movs	r2, #0
    dbf2:	6819      	ldr	r1, [r3, #0]
    dbf4:	1c28      	adds	r0, r5, #0
    dbf6:	40b9      	lsls	r1, r7
    dbf8:	430a      	orrs	r2, r1
    dbfa:	c504      	stmia	r5!, {r2}
    dbfc:	cb04      	ldmia	r3!, {r2}
    dbfe:	9903      	ldr	r1, [sp, #12]
    dc00:	40ca      	lsrs	r2, r1
    dc02:	459c      	cmp	ip, r3
    dc04:	d8f5      	bhi.n	dbf2 <__lshift+0x66>
    dc06:	6042      	str	r2, [r0, #4]
    dc08:	2a00      	cmp	r2, #0
    dc0a:	d007      	beq.n	dc1c <__lshift+0x90>
    dc0c:	9b01      	ldr	r3, [sp, #4]
    dc0e:	3302      	adds	r3, #2
    dc10:	9300      	str	r3, [sp, #0]
    dc12:	e003      	b.n	dc1c <__lshift+0x90>
    dc14:	cb04      	ldmia	r3!, {r2}
    dc16:	c504      	stmia	r5!, {r2}
    dc18:	459c      	cmp	ip, r3
    dc1a:	d8fb      	bhi.n	dc14 <__lshift+0x88>
    dc1c:	9b00      	ldr	r3, [sp, #0]
    dc1e:	9802      	ldr	r0, [sp, #8]
    dc20:	3b01      	subs	r3, #1
    dc22:	6133      	str	r3, [r6, #16]
    dc24:	1c21      	adds	r1, r4, #0
    dc26:	f7ff fde9 	bl	d7fc <_Bfree>
    dc2a:	1c30      	adds	r0, r6, #0
    dc2c:	b005      	add	sp, #20
    dc2e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000dc30 <__mcmp>:
    dc30:	6903      	ldr	r3, [r0, #16]
    dc32:	690a      	ldr	r2, [r1, #16]
    dc34:	b510      	push	{r4, lr}
    dc36:	1a9b      	subs	r3, r3, r2
    dc38:	1c04      	adds	r4, r0, #0
    dc3a:	1e18      	subs	r0, r3, #0
    dc3c:	d112      	bne.n	dc64 <__mcmp+0x34>
    dc3e:	0093      	lsls	r3, r2, #2
    dc40:	3414      	adds	r4, #20
    dc42:	3114      	adds	r1, #20
    dc44:	18e2      	adds	r2, r4, r3
    dc46:	18c9      	adds	r1, r1, r3
    dc48:	3a04      	subs	r2, #4
    dc4a:	3904      	subs	r1, #4
    dc4c:	6813      	ldr	r3, [r2, #0]
    dc4e:	6808      	ldr	r0, [r1, #0]
    dc50:	4283      	cmp	r3, r0
    dc52:	d004      	beq.n	dc5e <__mcmp+0x2e>
    dc54:	4283      	cmp	r3, r0
    dc56:	419b      	sbcs	r3, r3
    dc58:	2001      	movs	r0, #1
    dc5a:	4318      	orrs	r0, r3
    dc5c:	e002      	b.n	dc64 <__mcmp+0x34>
    dc5e:	42a2      	cmp	r2, r4
    dc60:	d8f2      	bhi.n	dc48 <__mcmp+0x18>
    dc62:	2000      	movs	r0, #0
    dc64:	bd10      	pop	{r4, pc}

0000dc66 <__mdiff>:
    dc66:	b5f0      	push	{r4, r5, r6, r7, lr}
    dc68:	1c07      	adds	r7, r0, #0
    dc6a:	b085      	sub	sp, #20
    dc6c:	1c08      	adds	r0, r1, #0
    dc6e:	1c0c      	adds	r4, r1, #0
    dc70:	1c11      	adds	r1, r2, #0
    dc72:	1c15      	adds	r5, r2, #0
    dc74:	f7ff ffdc 	bl	dc30 <__mcmp>
    dc78:	1e06      	subs	r6, r0, #0
    dc7a:	d107      	bne.n	dc8c <__mdiff+0x26>
    dc7c:	1c38      	adds	r0, r7, #0
    dc7e:	1c31      	adds	r1, r6, #0
    dc80:	f7ff fd84 	bl	d78c <_Balloc>
    dc84:	2301      	movs	r3, #1
    dc86:	6146      	str	r6, [r0, #20]
    dc88:	6103      	str	r3, [r0, #16]
    dc8a:	e055      	b.n	dd38 <__mdiff+0xd2>
    dc8c:	2300      	movs	r3, #0
    dc8e:	9301      	str	r3, [sp, #4]
    dc90:	4298      	cmp	r0, r3
    dc92:	da04      	bge.n	dc9e <__mdiff+0x38>
    dc94:	1c23      	adds	r3, r4, #0
    dc96:	1c2c      	adds	r4, r5, #0
    dc98:	1c1d      	adds	r5, r3, #0
    dc9a:	2301      	movs	r3, #1
    dc9c:	9301      	str	r3, [sp, #4]
    dc9e:	1c38      	adds	r0, r7, #0
    dca0:	6861      	ldr	r1, [r4, #4]
    dca2:	f7ff fd73 	bl	d78c <_Balloc>
    dca6:	9b01      	ldr	r3, [sp, #4]
    dca8:	6926      	ldr	r6, [r4, #16]
    dcaa:	1c2f      	adds	r7, r5, #0
    dcac:	60c3      	str	r3, [r0, #12]
    dcae:	3414      	adds	r4, #20
    dcb0:	00b3      	lsls	r3, r6, #2
    dcb2:	18e3      	adds	r3, r4, r3
    dcb4:	1c02      	adds	r2, r0, #0
    dcb6:	9302      	str	r3, [sp, #8]
    dcb8:	692b      	ldr	r3, [r5, #16]
    dcba:	2500      	movs	r5, #0
    dcbc:	3714      	adds	r7, #20
    dcbe:	009b      	lsls	r3, r3, #2
    dcc0:	18fb      	adds	r3, r7, r3
    dcc2:	9303      	str	r3, [sp, #12]
    dcc4:	3214      	adds	r2, #20
    dcc6:	cc08      	ldmia	r4!, {r3}
    dcc8:	4669      	mov	r1, sp
    dcca:	469c      	mov	ip, r3
    dccc:	cf08      	ldmia	r7!, {r3}
    dcce:	3204      	adds	r2, #4
    dcd0:	9300      	str	r3, [sp, #0]
    dcd2:	4663      	mov	r3, ip
    dcd4:	808b      	strh	r3, [r1, #4]
    dcd6:	888b      	ldrh	r3, [r1, #4]
    dcd8:	195d      	adds	r5, r3, r5
    dcda:	9b00      	ldr	r3, [sp, #0]
    dcdc:	b29b      	uxth	r3, r3
    dcde:	1aeb      	subs	r3, r5, r3
    dce0:	4665      	mov	r5, ip
    dce2:	9301      	str	r3, [sp, #4]
    dce4:	9b00      	ldr	r3, [sp, #0]
    dce6:	0c2d      	lsrs	r5, r5, #16
    dce8:	0c19      	lsrs	r1, r3, #16
    dcea:	9b01      	ldr	r3, [sp, #4]
    dcec:	1a69      	subs	r1, r5, r1
    dcee:	141d      	asrs	r5, r3, #16
    dcf0:	1f13      	subs	r3, r2, #4
    dcf2:	469c      	mov	ip, r3
    dcf4:	466b      	mov	r3, sp
    dcf6:	1949      	adds	r1, r1, r5
    dcf8:	889b      	ldrh	r3, [r3, #4]
    dcfa:	140d      	asrs	r5, r1, #16
    dcfc:	0409      	lsls	r1, r1, #16
    dcfe:	430b      	orrs	r3, r1
    dd00:	4661      	mov	r1, ip
    dd02:	600b      	str	r3, [r1, #0]
    dd04:	9b03      	ldr	r3, [sp, #12]
    dd06:	429f      	cmp	r7, r3
    dd08:	d3dd      	bcc.n	dcc6 <__mdiff+0x60>
    dd0a:	9902      	ldr	r1, [sp, #8]
    dd0c:	1c13      	adds	r3, r2, #0
    dd0e:	428c      	cmp	r4, r1
    dd10:	d20b      	bcs.n	dd2a <__mdiff+0xc4>
    dd12:	cc08      	ldmia	r4!, {r3}
    dd14:	b299      	uxth	r1, r3
    dd16:	1949      	adds	r1, r1, r5
    dd18:	140d      	asrs	r5, r1, #16
    dd1a:	0c1b      	lsrs	r3, r3, #16
    dd1c:	18eb      	adds	r3, r5, r3
    dd1e:	141d      	asrs	r5, r3, #16
    dd20:	b289      	uxth	r1, r1
    dd22:	041b      	lsls	r3, r3, #16
    dd24:	430b      	orrs	r3, r1
    dd26:	c208      	stmia	r2!, {r3}
    dd28:	e7ef      	b.n	dd0a <__mdiff+0xa4>
    dd2a:	3b04      	subs	r3, #4
    dd2c:	681a      	ldr	r2, [r3, #0]
    dd2e:	2a00      	cmp	r2, #0
    dd30:	d101      	bne.n	dd36 <__mdiff+0xd0>
    dd32:	3e01      	subs	r6, #1
    dd34:	e7f9      	b.n	dd2a <__mdiff+0xc4>
    dd36:	6106      	str	r6, [r0, #16]
    dd38:	b005      	add	sp, #20
    dd3a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000dd3c <__ulp>:
    dd3c:	4b0f      	ldr	r3, [pc, #60]	; (dd7c <__ulp+0x40>)
    dd3e:	b510      	push	{r4, lr}
    dd40:	4019      	ands	r1, r3
    dd42:	4b0f      	ldr	r3, [pc, #60]	; (dd80 <__ulp+0x44>)
    dd44:	18c9      	adds	r1, r1, r3
    dd46:	2900      	cmp	r1, #0
    dd48:	dd02      	ble.n	dd50 <__ulp+0x14>
    dd4a:	2200      	movs	r2, #0
    dd4c:	1c0b      	adds	r3, r1, #0
    dd4e:	e011      	b.n	dd74 <__ulp+0x38>
    dd50:	4249      	negs	r1, r1
    dd52:	1509      	asrs	r1, r1, #20
    dd54:	2200      	movs	r2, #0
    dd56:	2300      	movs	r3, #0
    dd58:	2913      	cmp	r1, #19
    dd5a:	dc04      	bgt.n	dd66 <__ulp+0x2a>
    dd5c:	2080      	movs	r0, #128	; 0x80
    dd5e:	0300      	lsls	r0, r0, #12
    dd60:	4108      	asrs	r0, r1
    dd62:	1c03      	adds	r3, r0, #0
    dd64:	e006      	b.n	dd74 <__ulp+0x38>
    dd66:	2001      	movs	r0, #1
    dd68:	2932      	cmp	r1, #50	; 0x32
    dd6a:	dc02      	bgt.n	dd72 <__ulp+0x36>
    dd6c:	2433      	movs	r4, #51	; 0x33
    dd6e:	1a61      	subs	r1, r4, r1
    dd70:	4088      	lsls	r0, r1
    dd72:	1c02      	adds	r2, r0, #0
    dd74:	1c10      	adds	r0, r2, #0
    dd76:	1c19      	adds	r1, r3, #0
    dd78:	bd10      	pop	{r4, pc}
    dd7a:	46c0      	nop			; (mov r8, r8)
    dd7c:	7ff00000 	.word	0x7ff00000
    dd80:	fcc00000 	.word	0xfcc00000

0000dd84 <__b2d>:
    dd84:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    dd86:	1c06      	adds	r6, r0, #0
    dd88:	6903      	ldr	r3, [r0, #16]
    dd8a:	3614      	adds	r6, #20
    dd8c:	009b      	lsls	r3, r3, #2
    dd8e:	18f3      	adds	r3, r6, r3
    dd90:	1f1d      	subs	r5, r3, #4
    dd92:	682c      	ldr	r4, [r5, #0]
    dd94:	1c0f      	adds	r7, r1, #0
    dd96:	1c20      	adds	r0, r4, #0
    dd98:	9301      	str	r3, [sp, #4]
    dd9a:	f7ff fdc4 	bl	d926 <__hi0bits>
    dd9e:	2320      	movs	r3, #32
    dda0:	1a1b      	subs	r3, r3, r0
    dda2:	603b      	str	r3, [r7, #0]
    dda4:	491f      	ldr	r1, [pc, #124]	; (de24 <__b2d+0xa0>)
    dda6:	280a      	cmp	r0, #10
    dda8:	dc13      	bgt.n	ddd2 <__b2d+0x4e>
    ddaa:	230b      	movs	r3, #11
    ddac:	1c27      	adds	r7, r4, #0
    ddae:	1a1b      	subs	r3, r3, r0
    ddb0:	40df      	lsrs	r7, r3
    ddb2:	4339      	orrs	r1, r7
    ddb4:	469c      	mov	ip, r3
    ddb6:	1c0b      	adds	r3, r1, #0
    ddb8:	2100      	movs	r1, #0
    ddba:	42b5      	cmp	r5, r6
    ddbc:	d902      	bls.n	ddc4 <__b2d+0x40>
    ddbe:	9901      	ldr	r1, [sp, #4]
    ddc0:	3908      	subs	r1, #8
    ddc2:	6809      	ldr	r1, [r1, #0]
    ddc4:	4665      	mov	r5, ip
    ddc6:	3015      	adds	r0, #21
    ddc8:	40e9      	lsrs	r1, r5
    ddca:	4084      	lsls	r4, r0
    ddcc:	4321      	orrs	r1, r4
    ddce:	1c0a      	adds	r2, r1, #0
    ddd0:	e024      	b.n	de1c <__b2d+0x98>
    ddd2:	2700      	movs	r7, #0
    ddd4:	42b5      	cmp	r5, r6
    ddd6:	d902      	bls.n	ddde <__b2d+0x5a>
    ddd8:	9d01      	ldr	r5, [sp, #4]
    ddda:	3d08      	subs	r5, #8
    dddc:	682f      	ldr	r7, [r5, #0]
    ddde:	230b      	movs	r3, #11
    dde0:	425b      	negs	r3, r3
    dde2:	469c      	mov	ip, r3
    dde4:	4484      	add	ip, r0
    dde6:	4663      	mov	r3, ip
    dde8:	2b00      	cmp	r3, #0
    ddea:	d014      	beq.n	de16 <__b2d+0x92>
    ddec:	232b      	movs	r3, #43	; 0x2b
    ddee:	1a18      	subs	r0, r3, r0
    ddf0:	4663      	mov	r3, ip
    ddf2:	409c      	lsls	r4, r3
    ddf4:	4321      	orrs	r1, r4
    ddf6:	1c3c      	adds	r4, r7, #0
    ddf8:	40c4      	lsrs	r4, r0
    ddfa:	4321      	orrs	r1, r4
    ddfc:	1c0b      	adds	r3, r1, #0
    ddfe:	2400      	movs	r4, #0
    de00:	42b5      	cmp	r5, r6
    de02:	d901      	bls.n	de08 <__b2d+0x84>
    de04:	3d04      	subs	r5, #4
    de06:	682c      	ldr	r4, [r5, #0]
    de08:	40c4      	lsrs	r4, r0
    de0a:	4661      	mov	r1, ip
    de0c:	1c20      	adds	r0, r4, #0
    de0e:	408f      	lsls	r7, r1
    de10:	4338      	orrs	r0, r7
    de12:	1c02      	adds	r2, r0, #0
    de14:	e002      	b.n	de1c <__b2d+0x98>
    de16:	4321      	orrs	r1, r4
    de18:	1c0b      	adds	r3, r1, #0
    de1a:	1c3a      	adds	r2, r7, #0
    de1c:	1c10      	adds	r0, r2, #0
    de1e:	1c19      	adds	r1, r3, #0
    de20:	b003      	add	sp, #12
    de22:	bdf0      	pop	{r4, r5, r6, r7, pc}
    de24:	3ff00000 	.word	0x3ff00000

0000de28 <__d2b>:
    de28:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    de2a:	1c1d      	adds	r5, r3, #0
    de2c:	2101      	movs	r1, #1
    de2e:	9f08      	ldr	r7, [sp, #32]
    de30:	1c14      	adds	r4, r2, #0
    de32:	f7ff fcab 	bl	d78c <_Balloc>
    de36:	032b      	lsls	r3, r5, #12
    de38:	006d      	lsls	r5, r5, #1
    de3a:	1c06      	adds	r6, r0, #0
    de3c:	0b1b      	lsrs	r3, r3, #12
    de3e:	0d6d      	lsrs	r5, r5, #21
    de40:	d002      	beq.n	de48 <__d2b+0x20>
    de42:	2280      	movs	r2, #128	; 0x80
    de44:	0352      	lsls	r2, r2, #13
    de46:	4313      	orrs	r3, r2
    de48:	9301      	str	r3, [sp, #4]
    de4a:	2c00      	cmp	r4, #0
    de4c:	d018      	beq.n	de80 <__d2b+0x58>
    de4e:	4668      	mov	r0, sp
    de50:	9400      	str	r4, [sp, #0]
    de52:	f7ff fd83 	bl	d95c <__lo0bits>
    de56:	9c00      	ldr	r4, [sp, #0]
    de58:	2800      	cmp	r0, #0
    de5a:	d009      	beq.n	de70 <__d2b+0x48>
    de5c:	2320      	movs	r3, #32
    de5e:	9a01      	ldr	r2, [sp, #4]
    de60:	1a19      	subs	r1, r3, r0
    de62:	1c13      	adds	r3, r2, #0
    de64:	408b      	lsls	r3, r1
    de66:	40c2      	lsrs	r2, r0
    de68:	4323      	orrs	r3, r4
    de6a:	6173      	str	r3, [r6, #20]
    de6c:	9201      	str	r2, [sp, #4]
    de6e:	e000      	b.n	de72 <__d2b+0x4a>
    de70:	6174      	str	r4, [r6, #20]
    de72:	9c01      	ldr	r4, [sp, #4]
    de74:	61b4      	str	r4, [r6, #24]
    de76:	1e63      	subs	r3, r4, #1
    de78:	419c      	sbcs	r4, r3
    de7a:	3401      	adds	r4, #1
    de7c:	6134      	str	r4, [r6, #16]
    de7e:	e007      	b.n	de90 <__d2b+0x68>
    de80:	a801      	add	r0, sp, #4
    de82:	f7ff fd6b 	bl	d95c <__lo0bits>
    de86:	2401      	movs	r4, #1
    de88:	9b01      	ldr	r3, [sp, #4]
    de8a:	6134      	str	r4, [r6, #16]
    de8c:	6173      	str	r3, [r6, #20]
    de8e:	3020      	adds	r0, #32
    de90:	2d00      	cmp	r5, #0
    de92:	d006      	beq.n	dea2 <__d2b+0x7a>
    de94:	4b0b      	ldr	r3, [pc, #44]	; (dec4 <__d2b+0x9c>)
    de96:	18ed      	adds	r5, r5, r3
    de98:	2335      	movs	r3, #53	; 0x35
    de9a:	182d      	adds	r5, r5, r0
    de9c:	603d      	str	r5, [r7, #0]
    de9e:	1a18      	subs	r0, r3, r0
    dea0:	e00b      	b.n	deba <__d2b+0x92>
    dea2:	4b09      	ldr	r3, [pc, #36]	; (dec8 <__d2b+0xa0>)
    dea4:	18c0      	adds	r0, r0, r3
    dea6:	4b09      	ldr	r3, [pc, #36]	; (decc <__d2b+0xa4>)
    dea8:	6038      	str	r0, [r7, #0]
    deaa:	18e3      	adds	r3, r4, r3
    deac:	009b      	lsls	r3, r3, #2
    deae:	18f3      	adds	r3, r6, r3
    deb0:	6958      	ldr	r0, [r3, #20]
    deb2:	f7ff fd38 	bl	d926 <__hi0bits>
    deb6:	0164      	lsls	r4, r4, #5
    deb8:	1a20      	subs	r0, r4, r0
    deba:	9b09      	ldr	r3, [sp, #36]	; 0x24
    debc:	6018      	str	r0, [r3, #0]
    debe:	1c30      	adds	r0, r6, #0
    dec0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    dec2:	46c0      	nop			; (mov r8, r8)
    dec4:	fffffbcd 	.word	0xfffffbcd
    dec8:	fffffbce 	.word	0xfffffbce
    decc:	3fffffff 	.word	0x3fffffff

0000ded0 <__ratio>:
    ded0:	b5f0      	push	{r4, r5, r6, r7, lr}
    ded2:	b087      	sub	sp, #28
    ded4:	1c0e      	adds	r6, r1, #0
    ded6:	a904      	add	r1, sp, #16
    ded8:	1c07      	adds	r7, r0, #0
    deda:	f7ff ff53 	bl	dd84 <__b2d>
    dede:	1c04      	adds	r4, r0, #0
    dee0:	1c0d      	adds	r5, r1, #0
    dee2:	1c30      	adds	r0, r6, #0
    dee4:	a905      	add	r1, sp, #20
    dee6:	9400      	str	r4, [sp, #0]
    dee8:	9501      	str	r5, [sp, #4]
    deea:	f7ff ff4b 	bl	dd84 <__b2d>
    deee:	9b04      	ldr	r3, [sp, #16]
    def0:	9a05      	ldr	r2, [sp, #20]
    def2:	693f      	ldr	r7, [r7, #16]
    def4:	1a9a      	subs	r2, r3, r2
    def6:	6933      	ldr	r3, [r6, #16]
    def8:	9002      	str	r0, [sp, #8]
    defa:	9103      	str	r1, [sp, #12]
    defc:	1afb      	subs	r3, r7, r3
    defe:	015b      	lsls	r3, r3, #5
    df00:	18d3      	adds	r3, r2, r3
    df02:	2b00      	cmp	r3, #0
    df04:	dd03      	ble.n	df0e <__ratio+0x3e>
    df06:	051b      	lsls	r3, r3, #20
    df08:	195b      	adds	r3, r3, r5
    df0a:	9301      	str	r3, [sp, #4]
    df0c:	e002      	b.n	df14 <__ratio+0x44>
    df0e:	051b      	lsls	r3, r3, #20
    df10:	1acb      	subs	r3, r1, r3
    df12:	9303      	str	r3, [sp, #12]
    df14:	9800      	ldr	r0, [sp, #0]
    df16:	9901      	ldr	r1, [sp, #4]
    df18:	9a02      	ldr	r2, [sp, #8]
    df1a:	9b03      	ldr	r3, [sp, #12]
    df1c:	f7f9 fdfe 	bl	7b1c <__aeabi_ddiv>
    df20:	b007      	add	sp, #28
    df22:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000df24 <__copybits>:
    df24:	1c13      	adds	r3, r2, #0
    df26:	3901      	subs	r1, #1
    df28:	b510      	push	{r4, lr}
    df2a:	1149      	asrs	r1, r1, #5
    df2c:	6912      	ldr	r2, [r2, #16]
    df2e:	3101      	adds	r1, #1
    df30:	0089      	lsls	r1, r1, #2
    df32:	3314      	adds	r3, #20
    df34:	0092      	lsls	r2, r2, #2
    df36:	1841      	adds	r1, r0, r1
    df38:	189a      	adds	r2, r3, r2
    df3a:	4293      	cmp	r3, r2
    df3c:	d202      	bcs.n	df44 <__copybits+0x20>
    df3e:	cb10      	ldmia	r3!, {r4}
    df40:	c010      	stmia	r0!, {r4}
    df42:	e7fa      	b.n	df3a <__copybits+0x16>
    df44:	4288      	cmp	r0, r1
    df46:	d202      	bcs.n	df4e <__copybits+0x2a>
    df48:	2300      	movs	r3, #0
    df4a:	c008      	stmia	r0!, {r3}
    df4c:	e7fa      	b.n	df44 <__copybits+0x20>
    df4e:	bd10      	pop	{r4, pc}

0000df50 <__any_on>:
    df50:	b530      	push	{r4, r5, lr}
    df52:	1c04      	adds	r4, r0, #0
    df54:	6902      	ldr	r2, [r0, #16]
    df56:	3414      	adds	r4, #20
    df58:	114b      	asrs	r3, r1, #5
    df5a:	4293      	cmp	r3, r2
    df5c:	dc0c      	bgt.n	df78 <__any_on+0x28>
    df5e:	da0c      	bge.n	df7a <__any_on+0x2a>
    df60:	221f      	movs	r2, #31
    df62:	4011      	ands	r1, r2
    df64:	d009      	beq.n	df7a <__any_on+0x2a>
    df66:	009a      	lsls	r2, r3, #2
    df68:	5915      	ldr	r5, [r2, r4]
    df6a:	2001      	movs	r0, #1
    df6c:	1c2a      	adds	r2, r5, #0
    df6e:	40ca      	lsrs	r2, r1
    df70:	408a      	lsls	r2, r1
    df72:	42aa      	cmp	r2, r5
    df74:	d10c      	bne.n	df90 <__any_on+0x40>
    df76:	e000      	b.n	df7a <__any_on+0x2a>
    df78:	1c13      	adds	r3, r2, #0
    df7a:	009b      	lsls	r3, r3, #2
    df7c:	18e3      	adds	r3, r4, r3
    df7e:	42a3      	cmp	r3, r4
    df80:	d905      	bls.n	df8e <__any_on+0x3e>
    df82:	3b04      	subs	r3, #4
    df84:	681a      	ldr	r2, [r3, #0]
    df86:	2a00      	cmp	r2, #0
    df88:	d0f9      	beq.n	df7e <__any_on+0x2e>
    df8a:	2001      	movs	r0, #1
    df8c:	e000      	b.n	df90 <__any_on+0x40>
    df8e:	2000      	movs	r0, #0
    df90:	bd30      	pop	{r4, r5, pc}

0000df92 <_calloc_r>:
    df92:	434a      	muls	r2, r1
    df94:	b538      	push	{r3, r4, r5, lr}
    df96:	1c11      	adds	r1, r2, #0
    df98:	1c14      	adds	r4, r2, #0
    df9a:	f7fb fdbd 	bl	9b18 <_malloc_r>
    df9e:	1e05      	subs	r5, r0, #0
    dfa0:	d003      	beq.n	dfaa <_calloc_r+0x18>
    dfa2:	2100      	movs	r1, #0
    dfa4:	1c22      	adds	r2, r4, #0
    dfa6:	f7fb fd69 	bl	9a7c <memset>
    dfaa:	1c28      	adds	r0, r5, #0
    dfac:	bd38      	pop	{r3, r4, r5, pc}

0000dfae <_realloc_r>:
    dfae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    dfb0:	1c06      	adds	r6, r0, #0
    dfb2:	1c0c      	adds	r4, r1, #0
    dfb4:	1c15      	adds	r5, r2, #0
    dfb6:	2900      	cmp	r1, #0
    dfb8:	d104      	bne.n	dfc4 <_realloc_r+0x16>
    dfba:	1c11      	adds	r1, r2, #0
    dfbc:	f7fb fdac 	bl	9b18 <_malloc_r>
    dfc0:	1c04      	adds	r4, r0, #0
    dfc2:	e018      	b.n	dff6 <_realloc_r+0x48>
    dfc4:	2a00      	cmp	r2, #0
    dfc6:	d103      	bne.n	dfd0 <_realloc_r+0x22>
    dfc8:	f7fb fd60 	bl	9a8c <_free_r>
    dfcc:	1c2c      	adds	r4, r5, #0
    dfce:	e012      	b.n	dff6 <_realloc_r+0x48>
    dfd0:	f000 fb52 	bl	e678 <_malloc_usable_size_r>
    dfd4:	42a8      	cmp	r0, r5
    dfd6:	d20e      	bcs.n	dff6 <_realloc_r+0x48>
    dfd8:	1c30      	adds	r0, r6, #0
    dfda:	1c29      	adds	r1, r5, #0
    dfdc:	f7fb fd9c 	bl	9b18 <_malloc_r>
    dfe0:	1e07      	subs	r7, r0, #0
    dfe2:	d007      	beq.n	dff4 <_realloc_r+0x46>
    dfe4:	1c21      	adds	r1, r4, #0
    dfe6:	1c2a      	adds	r2, r5, #0
    dfe8:	f7fb fd3f 	bl	9a6a <memcpy>
    dfec:	1c30      	adds	r0, r6, #0
    dfee:	1c21      	adds	r1, r4, #0
    dff0:	f7fb fd4c 	bl	9a8c <_free_r>
    dff4:	1c3c      	adds	r4, r7, #0
    dff6:	1c20      	adds	r0, r4, #0
    dff8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0000dffc <__ssputs_r>:
    dffc:	b5f0      	push	{r4, r5, r6, r7, lr}
    dffe:	688e      	ldr	r6, [r1, #8]
    e000:	b085      	sub	sp, #20
    e002:	1c07      	adds	r7, r0, #0
    e004:	1c0c      	adds	r4, r1, #0
    e006:	9203      	str	r2, [sp, #12]
    e008:	9301      	str	r3, [sp, #4]
    e00a:	42b3      	cmp	r3, r6
    e00c:	d345      	bcc.n	e09a <__ssputs_r+0x9e>
    e00e:	2390      	movs	r3, #144	; 0x90
    e010:	898a      	ldrh	r2, [r1, #12]
    e012:	00db      	lsls	r3, r3, #3
    e014:	421a      	tst	r2, r3
    e016:	d03d      	beq.n	e094 <__ssputs_r+0x98>
    e018:	2503      	movs	r5, #3
    e01a:	6909      	ldr	r1, [r1, #16]
    e01c:	6823      	ldr	r3, [r4, #0]
    e01e:	9801      	ldr	r0, [sp, #4]
    e020:	1a5b      	subs	r3, r3, r1
    e022:	9302      	str	r3, [sp, #8]
    e024:	6963      	ldr	r3, [r4, #20]
    e026:	435d      	muls	r5, r3
    e028:	0feb      	lsrs	r3, r5, #31
    e02a:	195d      	adds	r5, r3, r5
    e02c:	9b02      	ldr	r3, [sp, #8]
    e02e:	106d      	asrs	r5, r5, #1
    e030:	3301      	adds	r3, #1
    e032:	181b      	adds	r3, r3, r0
    e034:	429d      	cmp	r5, r3
    e036:	d200      	bcs.n	e03a <__ssputs_r+0x3e>
    e038:	1c1d      	adds	r5, r3, #0
    e03a:	1c38      	adds	r0, r7, #0
    e03c:	0553      	lsls	r3, r2, #21
    e03e:	d50f      	bpl.n	e060 <__ssputs_r+0x64>
    e040:	1c29      	adds	r1, r5, #0
    e042:	f7fb fd69 	bl	9b18 <_malloc_r>
    e046:	1e06      	subs	r6, r0, #0
    e048:	d013      	beq.n	e072 <__ssputs_r+0x76>
    e04a:	9a02      	ldr	r2, [sp, #8]
    e04c:	6921      	ldr	r1, [r4, #16]
    e04e:	f7fb fd0c 	bl	9a6a <memcpy>
    e052:	89a2      	ldrh	r2, [r4, #12]
    e054:	4b18      	ldr	r3, [pc, #96]	; (e0b8 <__ssputs_r+0xbc>)
    e056:	4013      	ands	r3, r2
    e058:	2280      	movs	r2, #128	; 0x80
    e05a:	4313      	orrs	r3, r2
    e05c:	81a3      	strh	r3, [r4, #12]
    e05e:	e011      	b.n	e084 <__ssputs_r+0x88>
    e060:	1c2a      	adds	r2, r5, #0
    e062:	f7ff ffa4 	bl	dfae <_realloc_r>
    e066:	1e06      	subs	r6, r0, #0
    e068:	d10c      	bne.n	e084 <__ssputs_r+0x88>
    e06a:	1c38      	adds	r0, r7, #0
    e06c:	6921      	ldr	r1, [r4, #16]
    e06e:	f7fb fd0d 	bl	9a8c <_free_r>
    e072:	230c      	movs	r3, #12
    e074:	2240      	movs	r2, #64	; 0x40
    e076:	2001      	movs	r0, #1
    e078:	603b      	str	r3, [r7, #0]
    e07a:	89a3      	ldrh	r3, [r4, #12]
    e07c:	4240      	negs	r0, r0
    e07e:	4313      	orrs	r3, r2
    e080:	81a3      	strh	r3, [r4, #12]
    e082:	e017      	b.n	e0b4 <__ssputs_r+0xb8>
    e084:	9b02      	ldr	r3, [sp, #8]
    e086:	6126      	str	r6, [r4, #16]
    e088:	18f6      	adds	r6, r6, r3
    e08a:	6026      	str	r6, [r4, #0]
    e08c:	6165      	str	r5, [r4, #20]
    e08e:	9e01      	ldr	r6, [sp, #4]
    e090:	1aed      	subs	r5, r5, r3
    e092:	60a5      	str	r5, [r4, #8]
    e094:	9b01      	ldr	r3, [sp, #4]
    e096:	42b3      	cmp	r3, r6
    e098:	d200      	bcs.n	e09c <__ssputs_r+0xa0>
    e09a:	9e01      	ldr	r6, [sp, #4]
    e09c:	1c32      	adds	r2, r6, #0
    e09e:	6820      	ldr	r0, [r4, #0]
    e0a0:	9903      	ldr	r1, [sp, #12]
    e0a2:	f7ff fb5f 	bl	d764 <memmove>
    e0a6:	2000      	movs	r0, #0
    e0a8:	68a3      	ldr	r3, [r4, #8]
    e0aa:	1b9b      	subs	r3, r3, r6
    e0ac:	60a3      	str	r3, [r4, #8]
    e0ae:	6823      	ldr	r3, [r4, #0]
    e0b0:	199e      	adds	r6, r3, r6
    e0b2:	6026      	str	r6, [r4, #0]
    e0b4:	b005      	add	sp, #20
    e0b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    e0b8:	fffffb7f 	.word	0xfffffb7f

0000e0bc <_svfiprintf_r>:
    e0bc:	b5f0      	push	{r4, r5, r6, r7, lr}
    e0be:	b09f      	sub	sp, #124	; 0x7c
    e0c0:	9002      	str	r0, [sp, #8]
    e0c2:	9305      	str	r3, [sp, #20]
    e0c4:	898b      	ldrh	r3, [r1, #12]
    e0c6:	1c0e      	adds	r6, r1, #0
    e0c8:	1c17      	adds	r7, r2, #0
    e0ca:	061b      	lsls	r3, r3, #24
    e0cc:	d510      	bpl.n	e0f0 <_svfiprintf_r+0x34>
    e0ce:	690b      	ldr	r3, [r1, #16]
    e0d0:	2b00      	cmp	r3, #0
    e0d2:	d10d      	bne.n	e0f0 <_svfiprintf_r+0x34>
    e0d4:	2140      	movs	r1, #64	; 0x40
    e0d6:	f7fb fd1f 	bl	9b18 <_malloc_r>
    e0da:	6030      	str	r0, [r6, #0]
    e0dc:	6130      	str	r0, [r6, #16]
    e0de:	2800      	cmp	r0, #0
    e0e0:	d104      	bne.n	e0ec <_svfiprintf_r+0x30>
    e0e2:	230c      	movs	r3, #12
    e0e4:	9a02      	ldr	r2, [sp, #8]
    e0e6:	3801      	subs	r0, #1
    e0e8:	6013      	str	r3, [r2, #0]
    e0ea:	e0d0      	b.n	e28e <_svfiprintf_r+0x1d2>
    e0ec:	2340      	movs	r3, #64	; 0x40
    e0ee:	6173      	str	r3, [r6, #20]
    e0f0:	2300      	movs	r3, #0
    e0f2:	ad06      	add	r5, sp, #24
    e0f4:	616b      	str	r3, [r5, #20]
    e0f6:	3320      	adds	r3, #32
    e0f8:	766b      	strb	r3, [r5, #25]
    e0fa:	3310      	adds	r3, #16
    e0fc:	76ab      	strb	r3, [r5, #26]
    e0fe:	1c3c      	adds	r4, r7, #0
    e100:	7823      	ldrb	r3, [r4, #0]
    e102:	2b00      	cmp	r3, #0
    e104:	d103      	bne.n	e10e <_svfiprintf_r+0x52>
    e106:	1be3      	subs	r3, r4, r7
    e108:	9304      	str	r3, [sp, #16]
    e10a:	d012      	beq.n	e132 <_svfiprintf_r+0x76>
    e10c:	e003      	b.n	e116 <_svfiprintf_r+0x5a>
    e10e:	2b25      	cmp	r3, #37	; 0x25
    e110:	d0f9      	beq.n	e106 <_svfiprintf_r+0x4a>
    e112:	3401      	adds	r4, #1
    e114:	e7f4      	b.n	e100 <_svfiprintf_r+0x44>
    e116:	9b04      	ldr	r3, [sp, #16]
    e118:	9802      	ldr	r0, [sp, #8]
    e11a:	1c31      	adds	r1, r6, #0
    e11c:	1c3a      	adds	r2, r7, #0
    e11e:	f7ff ff6d 	bl	dffc <__ssputs_r>
    e122:	1c43      	adds	r3, r0, #1
    e124:	d100      	bne.n	e128 <_svfiprintf_r+0x6c>
    e126:	e0ac      	b.n	e282 <_svfiprintf_r+0x1c6>
    e128:	696a      	ldr	r2, [r5, #20]
    e12a:	9b04      	ldr	r3, [sp, #16]
    e12c:	4694      	mov	ip, r2
    e12e:	4463      	add	r3, ip
    e130:	616b      	str	r3, [r5, #20]
    e132:	7823      	ldrb	r3, [r4, #0]
    e134:	2b00      	cmp	r3, #0
    e136:	d100      	bne.n	e13a <_svfiprintf_r+0x7e>
    e138:	e0a3      	b.n	e282 <_svfiprintf_r+0x1c6>
    e13a:	2201      	movs	r2, #1
    e13c:	2300      	movs	r3, #0
    e13e:	4252      	negs	r2, r2
    e140:	606a      	str	r2, [r5, #4]
    e142:	a902      	add	r1, sp, #8
    e144:	3254      	adds	r2, #84	; 0x54
    e146:	1852      	adds	r2, r2, r1
    e148:	3401      	adds	r4, #1
    e14a:	602b      	str	r3, [r5, #0]
    e14c:	60eb      	str	r3, [r5, #12]
    e14e:	60ab      	str	r3, [r5, #8]
    e150:	7013      	strb	r3, [r2, #0]
    e152:	65ab      	str	r3, [r5, #88]	; 0x58
    e154:	4f4f      	ldr	r7, [pc, #316]	; (e294 <_svfiprintf_r+0x1d8>)
    e156:	7821      	ldrb	r1, [r4, #0]
    e158:	1c38      	adds	r0, r7, #0
    e15a:	2205      	movs	r2, #5
    e15c:	f7fb fc7a 	bl	9a54 <memchr>
    e160:	2800      	cmp	r0, #0
    e162:	d008      	beq.n	e176 <_svfiprintf_r+0xba>
    e164:	1bc0      	subs	r0, r0, r7
    e166:	2701      	movs	r7, #1
    e168:	4087      	lsls	r7, r0
    e16a:	1c38      	adds	r0, r7, #0
    e16c:	682b      	ldr	r3, [r5, #0]
    e16e:	3401      	adds	r4, #1
    e170:	4318      	orrs	r0, r3
    e172:	6028      	str	r0, [r5, #0]
    e174:	e7ee      	b.n	e154 <_svfiprintf_r+0x98>
    e176:	682b      	ldr	r3, [r5, #0]
    e178:	06da      	lsls	r2, r3, #27
    e17a:	d504      	bpl.n	e186 <_svfiprintf_r+0xca>
    e17c:	2253      	movs	r2, #83	; 0x53
    e17e:	2120      	movs	r1, #32
    e180:	a802      	add	r0, sp, #8
    e182:	1812      	adds	r2, r2, r0
    e184:	7011      	strb	r1, [r2, #0]
    e186:	071a      	lsls	r2, r3, #28
    e188:	d504      	bpl.n	e194 <_svfiprintf_r+0xd8>
    e18a:	2253      	movs	r2, #83	; 0x53
    e18c:	212b      	movs	r1, #43	; 0x2b
    e18e:	a802      	add	r0, sp, #8
    e190:	1812      	adds	r2, r2, r0
    e192:	7011      	strb	r1, [r2, #0]
    e194:	7822      	ldrb	r2, [r4, #0]
    e196:	2a2a      	cmp	r2, #42	; 0x2a
    e198:	d001      	beq.n	e19e <_svfiprintf_r+0xe2>
    e19a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    e19c:	e00e      	b.n	e1bc <_svfiprintf_r+0x100>
    e19e:	9a05      	ldr	r2, [sp, #20]
    e1a0:	1d11      	adds	r1, r2, #4
    e1a2:	6812      	ldr	r2, [r2, #0]
    e1a4:	9105      	str	r1, [sp, #20]
    e1a6:	2a00      	cmp	r2, #0
    e1a8:	db01      	blt.n	e1ae <_svfiprintf_r+0xf2>
    e1aa:	9209      	str	r2, [sp, #36]	; 0x24
    e1ac:	e004      	b.n	e1b8 <_svfiprintf_r+0xfc>
    e1ae:	4252      	negs	r2, r2
    e1b0:	60ea      	str	r2, [r5, #12]
    e1b2:	2202      	movs	r2, #2
    e1b4:	4313      	orrs	r3, r2
    e1b6:	602b      	str	r3, [r5, #0]
    e1b8:	3401      	adds	r4, #1
    e1ba:	e009      	b.n	e1d0 <_svfiprintf_r+0x114>
    e1bc:	7822      	ldrb	r2, [r4, #0]
    e1be:	3a30      	subs	r2, #48	; 0x30
    e1c0:	2a09      	cmp	r2, #9
    e1c2:	d804      	bhi.n	e1ce <_svfiprintf_r+0x112>
    e1c4:	210a      	movs	r1, #10
    e1c6:	434b      	muls	r3, r1
    e1c8:	3401      	adds	r4, #1
    e1ca:	189b      	adds	r3, r3, r2
    e1cc:	e7f6      	b.n	e1bc <_svfiprintf_r+0x100>
    e1ce:	9309      	str	r3, [sp, #36]	; 0x24
    e1d0:	7823      	ldrb	r3, [r4, #0]
    e1d2:	2b2e      	cmp	r3, #46	; 0x2e
    e1d4:	d118      	bne.n	e208 <_svfiprintf_r+0x14c>
    e1d6:	7863      	ldrb	r3, [r4, #1]
    e1d8:	2b2a      	cmp	r3, #42	; 0x2a
    e1da:	d109      	bne.n	e1f0 <_svfiprintf_r+0x134>
    e1dc:	9b05      	ldr	r3, [sp, #20]
    e1de:	3402      	adds	r4, #2
    e1e0:	1d1a      	adds	r2, r3, #4
    e1e2:	681b      	ldr	r3, [r3, #0]
    e1e4:	9205      	str	r2, [sp, #20]
    e1e6:	2b00      	cmp	r3, #0
    e1e8:	da0d      	bge.n	e206 <_svfiprintf_r+0x14a>
    e1ea:	2301      	movs	r3, #1
    e1ec:	425b      	negs	r3, r3
    e1ee:	e00a      	b.n	e206 <_svfiprintf_r+0x14a>
    e1f0:	2300      	movs	r3, #0
    e1f2:	3401      	adds	r4, #1
    e1f4:	7822      	ldrb	r2, [r4, #0]
    e1f6:	3a30      	subs	r2, #48	; 0x30
    e1f8:	2a09      	cmp	r2, #9
    e1fa:	d804      	bhi.n	e206 <_svfiprintf_r+0x14a>
    e1fc:	210a      	movs	r1, #10
    e1fe:	434b      	muls	r3, r1
    e200:	3401      	adds	r4, #1
    e202:	189b      	adds	r3, r3, r2
    e204:	e7f6      	b.n	e1f4 <_svfiprintf_r+0x138>
    e206:	9307      	str	r3, [sp, #28]
    e208:	4f23      	ldr	r7, [pc, #140]	; (e298 <_svfiprintf_r+0x1dc>)
    e20a:	7821      	ldrb	r1, [r4, #0]
    e20c:	1c38      	adds	r0, r7, #0
    e20e:	2203      	movs	r2, #3
    e210:	f7fb fc20 	bl	9a54 <memchr>
    e214:	2800      	cmp	r0, #0
    e216:	d007      	beq.n	e228 <_svfiprintf_r+0x16c>
    e218:	1bc0      	subs	r0, r0, r7
    e21a:	2740      	movs	r7, #64	; 0x40
    e21c:	4087      	lsls	r7, r0
    e21e:	1c38      	adds	r0, r7, #0
    e220:	682b      	ldr	r3, [r5, #0]
    e222:	3401      	adds	r4, #1
    e224:	4318      	orrs	r0, r3
    e226:	6028      	str	r0, [r5, #0]
    e228:	7821      	ldrb	r1, [r4, #0]
    e22a:	481c      	ldr	r0, [pc, #112]	; (e29c <_svfiprintf_r+0x1e0>)
    e22c:	2206      	movs	r2, #6
    e22e:	1c67      	adds	r7, r4, #1
    e230:	7629      	strb	r1, [r5, #24]
    e232:	f7fb fc0f 	bl	9a54 <memchr>
    e236:	2800      	cmp	r0, #0
    e238:	d012      	beq.n	e260 <_svfiprintf_r+0x1a4>
    e23a:	4b19      	ldr	r3, [pc, #100]	; (e2a0 <_svfiprintf_r+0x1e4>)
    e23c:	2b00      	cmp	r3, #0
    e23e:	d106      	bne.n	e24e <_svfiprintf_r+0x192>
    e240:	2207      	movs	r2, #7
    e242:	9b05      	ldr	r3, [sp, #20]
    e244:	3307      	adds	r3, #7
    e246:	4393      	bics	r3, r2
    e248:	3308      	adds	r3, #8
    e24a:	9305      	str	r3, [sp, #20]
    e24c:	e014      	b.n	e278 <_svfiprintf_r+0x1bc>
    e24e:	ab05      	add	r3, sp, #20
    e250:	9300      	str	r3, [sp, #0]
    e252:	9802      	ldr	r0, [sp, #8]
    e254:	1c29      	adds	r1, r5, #0
    e256:	1c32      	adds	r2, r6, #0
    e258:	4b12      	ldr	r3, [pc, #72]	; (e2a4 <_svfiprintf_r+0x1e8>)
    e25a:	f7fb fe91 	bl	9f80 <_printf_float>
    e25e:	e007      	b.n	e270 <_svfiprintf_r+0x1b4>
    e260:	ab05      	add	r3, sp, #20
    e262:	9300      	str	r3, [sp, #0]
    e264:	9802      	ldr	r0, [sp, #8]
    e266:	1c29      	adds	r1, r5, #0
    e268:	1c32      	adds	r2, r6, #0
    e26a:	4b0e      	ldr	r3, [pc, #56]	; (e2a4 <_svfiprintf_r+0x1e8>)
    e26c:	f7fc f934 	bl	a4d8 <_printf_i>
    e270:	9003      	str	r0, [sp, #12]
    e272:	9b03      	ldr	r3, [sp, #12]
    e274:	3301      	adds	r3, #1
    e276:	d004      	beq.n	e282 <_svfiprintf_r+0x1c6>
    e278:	696b      	ldr	r3, [r5, #20]
    e27a:	9a03      	ldr	r2, [sp, #12]
    e27c:	189b      	adds	r3, r3, r2
    e27e:	616b      	str	r3, [r5, #20]
    e280:	e73d      	b.n	e0fe <_svfiprintf_r+0x42>
    e282:	89b3      	ldrh	r3, [r6, #12]
    e284:	980b      	ldr	r0, [sp, #44]	; 0x2c
    e286:	065b      	lsls	r3, r3, #25
    e288:	d501      	bpl.n	e28e <_svfiprintf_r+0x1d2>
    e28a:	2001      	movs	r0, #1
    e28c:	4240      	negs	r0, r0
    e28e:	b01f      	add	sp, #124	; 0x7c
    e290:	bdf0      	pop	{r4, r5, r6, r7, pc}
    e292:	46c0      	nop			; (mov r8, r8)
    e294:	0000f6e0 	.word	0x0000f6e0
    e298:	0000f6e6 	.word	0x0000f6e6
    e29c:	0000f6ea 	.word	0x0000f6ea
    e2a0:	00009f81 	.word	0x00009f81
    e2a4:	0000dffd 	.word	0x0000dffd

0000e2a8 <_sungetc_r>:
    e2a8:	b538      	push	{r3, r4, r5, lr}
    e2aa:	1c14      	adds	r4, r2, #0
    e2ac:	1c4b      	adds	r3, r1, #1
    e2ae:	d102      	bne.n	e2b6 <_sungetc_r+0xe>
    e2b0:	2001      	movs	r0, #1
    e2b2:	4240      	negs	r0, r0
    e2b4:	e034      	b.n	e320 <_sungetc_r+0x78>
    e2b6:	8993      	ldrh	r3, [r2, #12]
    e2b8:	2220      	movs	r2, #32
    e2ba:	4393      	bics	r3, r2
    e2bc:	6b62      	ldr	r2, [r4, #52]	; 0x34
    e2be:	81a3      	strh	r3, [r4, #12]
    e2c0:	b2cd      	uxtb	r5, r1
    e2c2:	6863      	ldr	r3, [r4, #4]
    e2c4:	2a00      	cmp	r2, #0
    e2c6:	d00f      	beq.n	e2e8 <_sungetc_r+0x40>
    e2c8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    e2ca:	4293      	cmp	r3, r2
    e2cc:	da06      	bge.n	e2dc <_sungetc_r+0x34>
    e2ce:	6823      	ldr	r3, [r4, #0]
    e2d0:	3b01      	subs	r3, #1
    e2d2:	6023      	str	r3, [r4, #0]
    e2d4:	701d      	strb	r5, [r3, #0]
    e2d6:	6863      	ldr	r3, [r4, #4]
    e2d8:	3301      	adds	r3, #1
    e2da:	e01f      	b.n	e31c <_sungetc_r+0x74>
    e2dc:	1c21      	adds	r1, r4, #0
    e2de:	f7fd fefd 	bl	c0dc <__submore>
    e2e2:	2800      	cmp	r0, #0
    e2e4:	d0f3      	beq.n	e2ce <_sungetc_r+0x26>
    e2e6:	e7e3      	b.n	e2b0 <_sungetc_r+0x8>
    e2e8:	6921      	ldr	r1, [r4, #16]
    e2ea:	6822      	ldr	r2, [r4, #0]
    e2ec:	2900      	cmp	r1, #0
    e2ee:	d009      	beq.n	e304 <_sungetc_r+0x5c>
    e2f0:	428a      	cmp	r2, r1
    e2f2:	d907      	bls.n	e304 <_sungetc_r+0x5c>
    e2f4:	1e51      	subs	r1, r2, #1
    e2f6:	7808      	ldrb	r0, [r1, #0]
    e2f8:	42a8      	cmp	r0, r5
    e2fa:	d103      	bne.n	e304 <_sungetc_r+0x5c>
    e2fc:	3301      	adds	r3, #1
    e2fe:	6021      	str	r1, [r4, #0]
    e300:	6063      	str	r3, [r4, #4]
    e302:	e00d      	b.n	e320 <_sungetc_r+0x78>
    e304:	6423      	str	r3, [r4, #64]	; 0x40
    e306:	1c23      	adds	r3, r4, #0
    e308:	3344      	adds	r3, #68	; 0x44
    e30a:	6363      	str	r3, [r4, #52]	; 0x34
    e30c:	2303      	movs	r3, #3
    e30e:	63a3      	str	r3, [r4, #56]	; 0x38
    e310:	1c23      	adds	r3, r4, #0
    e312:	3346      	adds	r3, #70	; 0x46
    e314:	63e2      	str	r2, [r4, #60]	; 0x3c
    e316:	701d      	strb	r5, [r3, #0]
    e318:	6023      	str	r3, [r4, #0]
    e31a:	2301      	movs	r3, #1
    e31c:	1c28      	adds	r0, r5, #0
    e31e:	6063      	str	r3, [r4, #4]
    e320:	bd38      	pop	{r3, r4, r5, pc}

0000e322 <__ssrefill_r>:
    e322:	b510      	push	{r4, lr}
    e324:	1c0c      	adds	r4, r1, #0
    e326:	6b49      	ldr	r1, [r1, #52]	; 0x34
    e328:	2900      	cmp	r1, #0
    e32a:	d00e      	beq.n	e34a <__ssrefill_r+0x28>
    e32c:	1c23      	adds	r3, r4, #0
    e32e:	3344      	adds	r3, #68	; 0x44
    e330:	4299      	cmp	r1, r3
    e332:	d001      	beq.n	e338 <__ssrefill_r+0x16>
    e334:	f7fb fbaa 	bl	9a8c <_free_r>
    e338:	2000      	movs	r0, #0
    e33a:	6c23      	ldr	r3, [r4, #64]	; 0x40
    e33c:	6360      	str	r0, [r4, #52]	; 0x34
    e33e:	6063      	str	r3, [r4, #4]
    e340:	4283      	cmp	r3, r0
    e342:	d002      	beq.n	e34a <__ssrefill_r+0x28>
    e344:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    e346:	6023      	str	r3, [r4, #0]
    e348:	e009      	b.n	e35e <__ssrefill_r+0x3c>
    e34a:	6923      	ldr	r3, [r4, #16]
    e34c:	2220      	movs	r2, #32
    e34e:	6023      	str	r3, [r4, #0]
    e350:	2300      	movs	r3, #0
    e352:	2001      	movs	r0, #1
    e354:	6063      	str	r3, [r4, #4]
    e356:	89a3      	ldrh	r3, [r4, #12]
    e358:	4240      	negs	r0, r0
    e35a:	4313      	orrs	r3, r2
    e35c:	81a3      	strh	r3, [r4, #12]
    e35e:	bd10      	pop	{r4, pc}

0000e360 <__ssvfiscanf_r>:
    e360:	b5f0      	push	{r4, r5, r6, r7, lr}
    e362:	4cb5      	ldr	r4, [pc, #724]	; (e638 <__ssvfiscanf_r+0x2d8>)
    e364:	1c07      	adds	r7, r0, #0
    e366:	44a5      	add	sp, r4
    e368:	9303      	str	r3, [sp, #12]
    e36a:	2300      	movs	r3, #0
    e36c:	2086      	movs	r0, #134	; 0x86
    e36e:	9348      	str	r3, [sp, #288]	; 0x120
    e370:	9349      	str	r3, [sp, #292]	; 0x124
    e372:	ab05      	add	r3, sp, #20
    e374:	934a      	str	r3, [sp, #296]	; 0x128
    e376:	23be      	movs	r3, #190	; 0xbe
    e378:	0040      	lsls	r0, r0, #1
    e37a:	1c0d      	adds	r5, r1, #0
    e37c:	9201      	str	r2, [sp, #4]
    e37e:	a902      	add	r1, sp, #8
    e380:	4aae      	ldr	r2, [pc, #696]	; (e63c <__ssvfiscanf_r+0x2dc>)
    e382:	005b      	lsls	r3, r3, #1
    e384:	1809      	adds	r1, r1, r0
    e386:	50ca      	str	r2, [r1, r3]
    e388:	4aad      	ldr	r2, [pc, #692]	; (e640 <__ssvfiscanf_r+0x2e0>)
    e38a:	a902      	add	r1, sp, #8
    e38c:	3304      	adds	r3, #4
    e38e:	1809      	adds	r1, r1, r0
    e390:	50ca      	str	r2, [r1, r3]
    e392:	9b01      	ldr	r3, [sp, #4]
    e394:	781c      	ldrb	r4, [r3, #0]
    e396:	2c00      	cmp	r4, #0
    e398:	d100      	bne.n	e39c <__ssvfiscanf_r+0x3c>
    e39a:	e144      	b.n	e626 <__ssvfiscanf_r+0x2c6>
    e39c:	4ea9      	ldr	r6, [pc, #676]	; (e644 <__ssvfiscanf_r+0x2e4>)
    e39e:	6833      	ldr	r3, [r6, #0]
    e3a0:	191b      	adds	r3, r3, r4
    e3a2:	785a      	ldrb	r2, [r3, #1]
    e3a4:	2308      	movs	r3, #8
    e3a6:	4013      	ands	r3, r2
    e3a8:	d023      	beq.n	e3f2 <__ssvfiscanf_r+0x92>
    e3aa:	686b      	ldr	r3, [r5, #4]
    e3ac:	2b00      	cmp	r3, #0
    e3ae:	dd10      	ble.n	e3d2 <__ssvfiscanf_r+0x72>
    e3b0:	682b      	ldr	r3, [r5, #0]
    e3b2:	6831      	ldr	r1, [r6, #0]
    e3b4:	781a      	ldrb	r2, [r3, #0]
    e3b6:	188a      	adds	r2, r1, r2
    e3b8:	7852      	ldrb	r2, [r2, #1]
    e3ba:	0712      	lsls	r2, r2, #28
    e3bc:	d515      	bpl.n	e3ea <__ssvfiscanf_r+0x8a>
    e3be:	9a49      	ldr	r2, [sp, #292]	; 0x124
    e3c0:	3301      	adds	r3, #1
    e3c2:	9202      	str	r2, [sp, #8]
    e3c4:	3201      	adds	r2, #1
    e3c6:	9249      	str	r2, [sp, #292]	; 0x124
    e3c8:	686a      	ldr	r2, [r5, #4]
    e3ca:	602b      	str	r3, [r5, #0]
    e3cc:	3a01      	subs	r2, #1
    e3ce:	606a      	str	r2, [r5, #4]
    e3d0:	e7eb      	b.n	e3aa <__ssvfiscanf_r+0x4a>
    e3d2:	2186      	movs	r1, #134	; 0x86
    e3d4:	23c0      	movs	r3, #192	; 0xc0
    e3d6:	0049      	lsls	r1, r1, #1
    e3d8:	aa02      	add	r2, sp, #8
    e3da:	1852      	adds	r2, r2, r1
    e3dc:	005b      	lsls	r3, r3, #1
    e3de:	58d3      	ldr	r3, [r2, r3]
    e3e0:	1c38      	adds	r0, r7, #0
    e3e2:	1c29      	adds	r1, r5, #0
    e3e4:	4798      	blx	r3
    e3e6:	2800      	cmp	r0, #0
    e3e8:	d0e2      	beq.n	e3b0 <__ssvfiscanf_r+0x50>
    e3ea:	9e01      	ldr	r6, [sp, #4]
    e3ec:	3601      	adds	r6, #1
    e3ee:	9601      	str	r6, [sp, #4]
    e3f0:	e7cf      	b.n	e392 <__ssvfiscanf_r+0x32>
    e3f2:	9a01      	ldr	r2, [sp, #4]
    e3f4:	1c56      	adds	r6, r2, #1
    e3f6:	2c25      	cmp	r4, #37	; 0x25
    e3f8:	d14f      	bne.n	e49a <__ssvfiscanf_r+0x13a>
    e3fa:	9347      	str	r3, [sp, #284]	; 0x11c
    e3fc:	9345      	str	r3, [sp, #276]	; 0x114
    e3fe:	7853      	ldrb	r3, [r2, #1]
    e400:	2b2a      	cmp	r3, #42	; 0x2a
    e402:	d102      	bne.n	e40a <__ssvfiscanf_r+0xaa>
    e404:	3b1a      	subs	r3, #26
    e406:	9345      	str	r3, [sp, #276]	; 0x114
    e408:	3601      	adds	r6, #1
    e40a:	1c34      	adds	r4, r6, #0
    e40c:	7821      	ldrb	r1, [r4, #0]
    e40e:	1c0b      	adds	r3, r1, #0
    e410:	3b30      	subs	r3, #48	; 0x30
    e412:	2b09      	cmp	r3, #9
    e414:	d809      	bhi.n	e42a <__ssvfiscanf_r+0xca>
    e416:	9b47      	ldr	r3, [sp, #284]	; 0x11c
    e418:	3401      	adds	r4, #1
    e41a:	9301      	str	r3, [sp, #4]
    e41c:	230a      	movs	r3, #10
    e41e:	9a01      	ldr	r2, [sp, #4]
    e420:	4353      	muls	r3, r2
    e422:	3b30      	subs	r3, #48	; 0x30
    e424:	1859      	adds	r1, r3, r1
    e426:	9147      	str	r1, [sp, #284]	; 0x11c
    e428:	e7f0      	b.n	e40c <__ssvfiscanf_r+0xac>
    e42a:	4e87      	ldr	r6, [pc, #540]	; (e648 <__ssvfiscanf_r+0x2e8>)
    e42c:	2203      	movs	r2, #3
    e42e:	1c30      	adds	r0, r6, #0
    e430:	f7fb fb10 	bl	9a54 <memchr>
    e434:	2800      	cmp	r0, #0
    e436:	d008      	beq.n	e44a <__ssvfiscanf_r+0xea>
    e438:	1b80      	subs	r0, r0, r6
    e43a:	2601      	movs	r6, #1
    e43c:	4086      	lsls	r6, r0
    e43e:	1c30      	adds	r0, r6, #0
    e440:	9b45      	ldr	r3, [sp, #276]	; 0x114
    e442:	3401      	adds	r4, #1
    e444:	4318      	orrs	r0, r3
    e446:	9301      	str	r3, [sp, #4]
    e448:	9045      	str	r0, [sp, #276]	; 0x114
    e44a:	1c66      	adds	r6, r4, #1
    e44c:	7824      	ldrb	r4, [r4, #0]
    e44e:	2c67      	cmp	r4, #103	; 0x67
    e450:	d810      	bhi.n	e474 <__ssvfiscanf_r+0x114>
    e452:	2c65      	cmp	r4, #101	; 0x65
    e454:	d300      	bcc.n	e458 <__ssvfiscanf_r+0xf8>
    e456:	e084      	b.n	e562 <__ssvfiscanf_r+0x202>
    e458:	2c5b      	cmp	r4, #91	; 0x5b
    e45a:	d05a      	beq.n	e512 <__ssvfiscanf_r+0x1b2>
    e45c:	d805      	bhi.n	e46a <__ssvfiscanf_r+0x10a>
    e45e:	2c00      	cmp	r4, #0
    e460:	d100      	bne.n	e464 <__ssvfiscanf_r+0x104>
    e462:	e0e2      	b.n	e62a <__ssvfiscanf_r+0x2ca>
    e464:	2c25      	cmp	r4, #37	; 0x25
    e466:	d018      	beq.n	e49a <__ssvfiscanf_r+0x13a>
    e468:	e07d      	b.n	e566 <__ssvfiscanf_r+0x206>
    e46a:	2c63      	cmp	r4, #99	; 0x63
    e46c:	d05f      	beq.n	e52e <__ssvfiscanf_r+0x1ce>
    e46e:	2c64      	cmp	r4, #100	; 0x64
    e470:	d046      	beq.n	e500 <__ssvfiscanf_r+0x1a0>
    e472:	e078      	b.n	e566 <__ssvfiscanf_r+0x206>
    e474:	2c70      	cmp	r4, #112	; 0x70
    e476:	d034      	beq.n	e4e2 <__ssvfiscanf_r+0x182>
    e478:	d807      	bhi.n	e48a <__ssvfiscanf_r+0x12a>
    e47a:	2c6e      	cmp	r4, #110	; 0x6e
    e47c:	d05f      	beq.n	e53e <__ssvfiscanf_r+0x1de>
    e47e:	d841      	bhi.n	e504 <__ssvfiscanf_r+0x1a4>
    e480:	2c69      	cmp	r4, #105	; 0x69
    e482:	d170      	bne.n	e566 <__ssvfiscanf_r+0x206>
    e484:	2300      	movs	r3, #0
    e486:	9346      	str	r3, [sp, #280]	; 0x118
    e488:	e041      	b.n	e50e <__ssvfiscanf_r+0x1ae>
    e48a:	2c75      	cmp	r4, #117	; 0x75
    e48c:	d038      	beq.n	e500 <__ssvfiscanf_r+0x1a0>
    e48e:	2c78      	cmp	r4, #120	; 0x78
    e490:	d02d      	beq.n	e4ee <__ssvfiscanf_r+0x18e>
    e492:	2c73      	cmp	r4, #115	; 0x73
    e494:	d167      	bne.n	e566 <__ssvfiscanf_r+0x206>
    e496:	2302      	movs	r3, #2
    e498:	e047      	b.n	e52a <__ssvfiscanf_r+0x1ca>
    e49a:	686b      	ldr	r3, [r5, #4]
    e49c:	2b00      	cmp	r3, #0
    e49e:	dd0e      	ble.n	e4be <__ssvfiscanf_r+0x15e>
    e4a0:	682b      	ldr	r3, [r5, #0]
    e4a2:	781a      	ldrb	r2, [r3, #0]
    e4a4:	42a2      	cmp	r2, r4
    e4a6:	d000      	beq.n	e4aa <__ssvfiscanf_r+0x14a>
    e4a8:	e0bd      	b.n	e626 <__ssvfiscanf_r+0x2c6>
    e4aa:	3301      	adds	r3, #1
    e4ac:	686a      	ldr	r2, [r5, #4]
    e4ae:	602b      	str	r3, [r5, #0]
    e4b0:	9b49      	ldr	r3, [sp, #292]	; 0x124
    e4b2:	3a01      	subs	r2, #1
    e4b4:	9301      	str	r3, [sp, #4]
    e4b6:	3301      	adds	r3, #1
    e4b8:	606a      	str	r2, [r5, #4]
    e4ba:	9349      	str	r3, [sp, #292]	; 0x124
    e4bc:	e797      	b.n	e3ee <__ssvfiscanf_r+0x8e>
    e4be:	2186      	movs	r1, #134	; 0x86
    e4c0:	23c0      	movs	r3, #192	; 0xc0
    e4c2:	0049      	lsls	r1, r1, #1
    e4c4:	aa02      	add	r2, sp, #8
    e4c6:	1852      	adds	r2, r2, r1
    e4c8:	005b      	lsls	r3, r3, #1
    e4ca:	58d3      	ldr	r3, [r2, r3]
    e4cc:	1c38      	adds	r0, r7, #0
    e4ce:	1c29      	adds	r1, r5, #0
    e4d0:	4798      	blx	r3
    e4d2:	2800      	cmp	r0, #0
    e4d4:	d0e4      	beq.n	e4a0 <__ssvfiscanf_r+0x140>
    e4d6:	9848      	ldr	r0, [sp, #288]	; 0x120
    e4d8:	2800      	cmp	r0, #0
    e4da:	d000      	beq.n	e4de <__ssvfiscanf_r+0x17e>
    e4dc:	e09f      	b.n	e61e <__ssvfiscanf_r+0x2be>
    e4de:	3801      	subs	r0, #1
    e4e0:	e0a5      	b.n	e62e <__ssvfiscanf_r+0x2ce>
    e4e2:	9b45      	ldr	r3, [sp, #276]	; 0x114
    e4e4:	9301      	str	r3, [sp, #4]
    e4e6:	2320      	movs	r3, #32
    e4e8:	9a01      	ldr	r2, [sp, #4]
    e4ea:	4313      	orrs	r3, r2
    e4ec:	9345      	str	r3, [sp, #276]	; 0x114
    e4ee:	9b45      	ldr	r3, [sp, #276]	; 0x114
    e4f0:	9301      	str	r3, [sp, #4]
    e4f2:	2380      	movs	r3, #128	; 0x80
    e4f4:	9a01      	ldr	r2, [sp, #4]
    e4f6:	009b      	lsls	r3, r3, #2
    e4f8:	4313      	orrs	r3, r2
    e4fa:	9345      	str	r3, [sp, #276]	; 0x114
    e4fc:	2310      	movs	r3, #16
    e4fe:	e002      	b.n	e506 <__ssvfiscanf_r+0x1a6>
    e500:	230a      	movs	r3, #10
    e502:	e000      	b.n	e506 <__ssvfiscanf_r+0x1a6>
    e504:	2308      	movs	r3, #8
    e506:	9346      	str	r3, [sp, #280]	; 0x118
    e508:	2304      	movs	r3, #4
    e50a:	2c6e      	cmp	r4, #110	; 0x6e
    e50c:	dc0d      	bgt.n	e52a <__ssvfiscanf_r+0x1ca>
    e50e:	2303      	movs	r3, #3
    e510:	e00b      	b.n	e52a <__ssvfiscanf_r+0x1ca>
    e512:	1c31      	adds	r1, r6, #0
    e514:	a805      	add	r0, sp, #20
    e516:	f7fc fcf3 	bl	af00 <__sccl>
    e51a:	9b45      	ldr	r3, [sp, #276]	; 0x114
    e51c:	1c06      	adds	r6, r0, #0
    e51e:	9301      	str	r3, [sp, #4]
    e520:	2340      	movs	r3, #64	; 0x40
    e522:	9a01      	ldr	r2, [sp, #4]
    e524:	4313      	orrs	r3, r2
    e526:	9345      	str	r3, [sp, #276]	; 0x114
    e528:	2301      	movs	r3, #1
    e52a:	934b      	str	r3, [sp, #300]	; 0x12c
    e52c:	e01f      	b.n	e56e <__ssvfiscanf_r+0x20e>
    e52e:	9b45      	ldr	r3, [sp, #276]	; 0x114
    e530:	9301      	str	r3, [sp, #4]
    e532:	2340      	movs	r3, #64	; 0x40
    e534:	9a01      	ldr	r2, [sp, #4]
    e536:	4313      	orrs	r3, r2
    e538:	9345      	str	r3, [sp, #276]	; 0x114
    e53a:	2300      	movs	r3, #0
    e53c:	e7f5      	b.n	e52a <__ssvfiscanf_r+0x1ca>
    e53e:	9945      	ldr	r1, [sp, #276]	; 0x114
    e540:	06cb      	lsls	r3, r1, #27
    e542:	d500      	bpl.n	e546 <__ssvfiscanf_r+0x1e6>
    e544:	e753      	b.n	e3ee <__ssvfiscanf_r+0x8e>
    e546:	9b03      	ldr	r3, [sp, #12]
    e548:	9a49      	ldr	r2, [sp, #292]	; 0x124
    e54a:	07c8      	lsls	r0, r1, #31
    e54c:	d504      	bpl.n	e558 <__ssvfiscanf_r+0x1f8>
    e54e:	1d19      	adds	r1, r3, #4
    e550:	9103      	str	r1, [sp, #12]
    e552:	681b      	ldr	r3, [r3, #0]
    e554:	801a      	strh	r2, [r3, #0]
    e556:	e74a      	b.n	e3ee <__ssvfiscanf_r+0x8e>
    e558:	1d19      	adds	r1, r3, #4
    e55a:	9103      	str	r1, [sp, #12]
    e55c:	681b      	ldr	r3, [r3, #0]
    e55e:	601a      	str	r2, [r3, #0]
    e560:	e745      	b.n	e3ee <__ssvfiscanf_r+0x8e>
    e562:	2305      	movs	r3, #5
    e564:	e7e1      	b.n	e52a <__ssvfiscanf_r+0x1ca>
    e566:	2303      	movs	r3, #3
    e568:	934b      	str	r3, [sp, #300]	; 0x12c
    e56a:	3307      	adds	r3, #7
    e56c:	9346      	str	r3, [sp, #280]	; 0x118
    e56e:	686b      	ldr	r3, [r5, #4]
    e570:	2b00      	cmp	r3, #0
    e572:	dd04      	ble.n	e57e <__ssvfiscanf_r+0x21e>
    e574:	9b45      	ldr	r3, [sp, #276]	; 0x114
    e576:	9301      	str	r3, [sp, #4]
    e578:	065b      	lsls	r3, r3, #25
    e57a:	d518      	bpl.n	e5ae <__ssvfiscanf_r+0x24e>
    e57c:	e01f      	b.n	e5be <__ssvfiscanf_r+0x25e>
    e57e:	2186      	movs	r1, #134	; 0x86
    e580:	23c0      	movs	r3, #192	; 0xc0
    e582:	0049      	lsls	r1, r1, #1
    e584:	aa02      	add	r2, sp, #8
    e586:	1852      	adds	r2, r2, r1
    e588:	005b      	lsls	r3, r3, #1
    e58a:	58d3      	ldr	r3, [r2, r3]
    e58c:	1c38      	adds	r0, r7, #0
    e58e:	1c29      	adds	r1, r5, #0
    e590:	4798      	blx	r3
    e592:	2800      	cmp	r0, #0
    e594:	d0ee      	beq.n	e574 <__ssvfiscanf_r+0x214>
    e596:	e79e      	b.n	e4d6 <__ssvfiscanf_r+0x176>
    e598:	9a49      	ldr	r2, [sp, #292]	; 0x124
    e59a:	9201      	str	r2, [sp, #4]
    e59c:	3201      	adds	r2, #1
    e59e:	9249      	str	r2, [sp, #292]	; 0x124
    e5a0:	686a      	ldr	r2, [r5, #4]
    e5a2:	3a01      	subs	r2, #1
    e5a4:	606a      	str	r2, [r5, #4]
    e5a6:	2a00      	cmp	r2, #0
    e5a8:	dd13      	ble.n	e5d2 <__ssvfiscanf_r+0x272>
    e5aa:	3301      	adds	r3, #1
    e5ac:	602b      	str	r3, [r5, #0]
    e5ae:	682b      	ldr	r3, [r5, #0]
    e5b0:	4924      	ldr	r1, [pc, #144]	; (e644 <__ssvfiscanf_r+0x2e4>)
    e5b2:	781a      	ldrb	r2, [r3, #0]
    e5b4:	6809      	ldr	r1, [r1, #0]
    e5b6:	188a      	adds	r2, r1, r2
    e5b8:	7852      	ldrb	r2, [r2, #1]
    e5ba:	0712      	lsls	r2, r2, #28
    e5bc:	d4ec      	bmi.n	e598 <__ssvfiscanf_r+0x238>
    e5be:	9b4b      	ldr	r3, [sp, #300]	; 0x12c
    e5c0:	2b02      	cmp	r3, #2
    e5c2:	dc13      	bgt.n	e5ec <__ssvfiscanf_r+0x28c>
    e5c4:	1c38      	adds	r0, r7, #0
    e5c6:	a945      	add	r1, sp, #276	; 0x114
    e5c8:	1c2a      	adds	r2, r5, #0
    e5ca:	ab03      	add	r3, sp, #12
    e5cc:	f7fc fa86 	bl	aadc <_scanf_chars>
    e5d0:	e01f      	b.n	e612 <__ssvfiscanf_r+0x2b2>
    e5d2:	2186      	movs	r1, #134	; 0x86
    e5d4:	23c0      	movs	r3, #192	; 0xc0
    e5d6:	0049      	lsls	r1, r1, #1
    e5d8:	aa02      	add	r2, sp, #8
    e5da:	1852      	adds	r2, r2, r1
    e5dc:	005b      	lsls	r3, r3, #1
    e5de:	58d3      	ldr	r3, [r2, r3]
    e5e0:	1c38      	adds	r0, r7, #0
    e5e2:	1c29      	adds	r1, r5, #0
    e5e4:	4798      	blx	r3
    e5e6:	2800      	cmp	r0, #0
    e5e8:	d0e1      	beq.n	e5ae <__ssvfiscanf_r+0x24e>
    e5ea:	e774      	b.n	e4d6 <__ssvfiscanf_r+0x176>
    e5ec:	2b04      	cmp	r3, #4
    e5ee:	dc06      	bgt.n	e5fe <__ssvfiscanf_r+0x29e>
    e5f0:	1c38      	adds	r0, r7, #0
    e5f2:	a945      	add	r1, sp, #276	; 0x114
    e5f4:	1c2a      	adds	r2, r5, #0
    e5f6:	ab03      	add	r3, sp, #12
    e5f8:	f7fc face 	bl	ab98 <_scanf_i>
    e5fc:	e009      	b.n	e612 <__ssvfiscanf_r+0x2b2>
    e5fe:	4b13      	ldr	r3, [pc, #76]	; (e64c <__ssvfiscanf_r+0x2ec>)
    e600:	2b00      	cmp	r3, #0
    e602:	d100      	bne.n	e606 <__ssvfiscanf_r+0x2a6>
    e604:	e6f3      	b.n	e3ee <__ssvfiscanf_r+0x8e>
    e606:	1c38      	adds	r0, r7, #0
    e608:	a945      	add	r1, sp, #276	; 0x114
    e60a:	1c2a      	adds	r2, r5, #0
    e60c:	ab03      	add	r3, sp, #12
    e60e:	f7fc f87b 	bl	a708 <_scanf_float>
    e612:	2801      	cmp	r0, #1
    e614:	d007      	beq.n	e626 <__ssvfiscanf_r+0x2c6>
    e616:	2802      	cmp	r0, #2
    e618:	d000      	beq.n	e61c <__ssvfiscanf_r+0x2bc>
    e61a:	e6e8      	b.n	e3ee <__ssvfiscanf_r+0x8e>
    e61c:	e75b      	b.n	e4d6 <__ssvfiscanf_r+0x176>
    e61e:	89ab      	ldrh	r3, [r5, #12]
    e620:	065b      	lsls	r3, r3, #25
    e622:	d504      	bpl.n	e62e <__ssvfiscanf_r+0x2ce>
    e624:	e001      	b.n	e62a <__ssvfiscanf_r+0x2ca>
    e626:	9848      	ldr	r0, [sp, #288]	; 0x120
    e628:	e001      	b.n	e62e <__ssvfiscanf_r+0x2ce>
    e62a:	2001      	movs	r0, #1
    e62c:	4240      	negs	r0, r0
    e62e:	23a7      	movs	r3, #167	; 0xa7
    e630:	009b      	lsls	r3, r3, #2
    e632:	449d      	add	sp, r3
    e634:	bdf0      	pop	{r4, r5, r6, r7, pc}
    e636:	46c0      	nop			; (mov r8, r8)
    e638:	fffffd64 	.word	0xfffffd64
    e63c:	0000e2a9 	.word	0x0000e2a9
    e640:	0000e323 	.word	0x0000e323
    e644:	20000138 	.word	0x20000138
    e648:	0000f6e6 	.word	0x0000f6e6
    e64c:	0000a709 	.word	0x0000a709

0000e650 <_read_r>:
    e650:	b538      	push	{r3, r4, r5, lr}
    e652:	1c05      	adds	r5, r0, #0
    e654:	2000      	movs	r0, #0
    e656:	4c07      	ldr	r4, [pc, #28]	; (e674 <_read_r+0x24>)
    e658:	6020      	str	r0, [r4, #0]
    e65a:	1c08      	adds	r0, r1, #0
    e65c:	1c11      	adds	r1, r2, #0
    e65e:	1c1a      	adds	r2, r3, #0
    e660:	f7f5 fa66 	bl	3b30 <_read>
    e664:	1c43      	adds	r3, r0, #1
    e666:	d103      	bne.n	e670 <_read_r+0x20>
    e668:	6823      	ldr	r3, [r4, #0]
    e66a:	2b00      	cmp	r3, #0
    e66c:	d000      	beq.n	e670 <_read_r+0x20>
    e66e:	602b      	str	r3, [r5, #0]
    e670:	bd38      	pop	{r3, r4, r5, pc}
    e672:	46c0      	nop			; (mov r8, r8)
    e674:	200046b0 	.word	0x200046b0

0000e678 <_malloc_usable_size_r>:
    e678:	1f0b      	subs	r3, r1, #4
    e67a:	681a      	ldr	r2, [r3, #0]
    e67c:	1f10      	subs	r0, r2, #4
    e67e:	2a00      	cmp	r2, #0
    e680:	da04      	bge.n	e68c <_malloc_usable_size_r+0x14>
    e682:	1889      	adds	r1, r1, r2
    e684:	3904      	subs	r1, #4
    e686:	680b      	ldr	r3, [r1, #0]
    e688:	18d0      	adds	r0, r2, r3
    e68a:	3804      	subs	r0, #4
    e68c:	4770      	bx	lr
	...

0000e690 <__gnu_thumb1_case_uqi>:
    e690:	b402      	push	{r1}
    e692:	4671      	mov	r1, lr
    e694:	0849      	lsrs	r1, r1, #1
    e696:	0049      	lsls	r1, r1, #1
    e698:	5c09      	ldrb	r1, [r1, r0]
    e69a:	0049      	lsls	r1, r1, #1
    e69c:	448e      	add	lr, r1
    e69e:	bc02      	pop	{r1}
    e6a0:	4770      	bx	lr
    e6a2:	46c0      	nop			; (mov r8, r8)
    e6a4:	454c4449 	.word	0x454c4449
    e6a8:	00000000 	.word	0x00000000
    e6ac:	2d6a626f 	.word	0x2d6a626f
    e6b0:	6e69703e 	.word	0x6e69703e
    e6b4:	203d2120 	.word	0x203d2120
    e6b8:	6e695028 	.word	0x6e695028
    e6bc:	656d614e 	.word	0x656d614e
    e6c0:	00434e29 	.word	0x00434e29
    e6c4:	2e2f2e2e 	.word	0x2e2f2e2e
    e6c8:	65626d2f 	.word	0x65626d2f
    e6cc:	41542f64 	.word	0x41542f64
    e6d0:	54454752 	.word	0x54454752
    e6d4:	4d41535f 	.word	0x4d41535f
    e6d8:	47313252 	.word	0x47313252
    e6dc:	2f413831 	.word	0x2f413831
    e6e0:	47524154 	.word	0x47524154
    e6e4:	415f5445 	.word	0x415f5445
    e6e8:	6c656d74 	.word	0x6c656d74
    e6ec:	5241542f 	.word	0x5241542f
    e6f0:	5f544547 	.word	0x5f544547
    e6f4:	5f4d4153 	.word	0x5f4d4153
    e6f8:	74726f43 	.word	0x74726f43
    e6fc:	304d7865 	.word	0x304d7865
    e700:	70672f50 	.word	0x70672f50
    e704:	6f5f6f69 	.word	0x6f5f6f69
    e708:	63656a62 	.word	0x63656a62
    e70c:	00682e74 	.word	0x00682e74
    e710:	65746e69 	.word	0x65746e69
    e714:	6c616e72 	.word	0x6c616e72
    e718:	6f6c6320 	.word	0x6f6c6320
    e71c:	63206b63 	.word	0x63206b63
    e720:	69666e6f 	.word	0x69666e6f
    e724:	000a0d67 	.word	0x000a0d67
    e728:	7774656e 	.word	0x7774656e
    e72c:	206b726f 	.word	0x206b726f
    e730:	666e6f63 	.word	0x666e6f63
    e734:	0a0d6769 	.word	0x0a0d6769
    e738:	00000000 	.word	0x00000000
    e73c:	0a0d0a0d 	.word	0x0a0d0a0d
    e740:	2a2a2a2a 	.word	0x2a2a2a2a
    e744:	2a2a2a2a 	.word	0x2a2a2a2a
    e748:	2a2a2a2a 	.word	0x2a2a2a2a
    e74c:	2a2a2a2a 	.word	0x2a2a2a2a
    e750:	2a2a2a2a 	.word	0x2a2a2a2a
    e754:	2a2a2a2a 	.word	0x2a2a2a2a
    e758:	2a2a2a2a 	.word	0x2a2a2a2a
    e75c:	2a2a2a2a 	.word	0x2a2a2a2a
    e760:	2a2a2a2a 	.word	0x2a2a2a2a
    e764:	2a2a2a2a 	.word	0x2a2a2a2a
    e768:	2a2a2a2a 	.word	0x2a2a2a2a
    e76c:	2a2a2a2a 	.word	0x2a2a2a2a
    e770:	2a2a2a2a 	.word	0x2a2a2a2a
    e774:	2a2a2a2a 	.word	0x2a2a2a2a
    e778:	2a2a2a2a 	.word	0x2a2a2a2a
    e77c:	2a2a2a2a 	.word	0x2a2a2a2a
    e780:	2a2a2a2a 	.word	0x2a2a2a2a
    e784:	0a0d2a2a 	.word	0x0a0d2a2a
    e788:	00000000 	.word	0x00000000
    e78c:	6b636974 	.word	0x6b636974
    e790:	6d697420 	.word	0x6d697420
    e794:	25203a65 	.word	0x25203a65
    e798:	6d20756c 	.word	0x6d20756c
    e79c:	000a0d73 	.word	0x000a0d73
    e7a0:	76616c53 	.word	0x76616c53
    e7a4:	6c432065 	.word	0x6c432065
    e7a8:	206b636f 	.word	0x206b636f
    e7ac:	00000a0d 	.word	0x00000a0d
    e7b0:	20646e65 	.word	0x20646e65
    e7b4:	666e6f63 	.word	0x666e6f63
    e7b8:	61206769 	.word	0x61206769
    e7bc:	696c7070 	.word	0x696c7070
    e7c0:	69746163 	.word	0x69746163
    e7c4:	62206e6f 	.word	0x62206e6f
    e7c8:	6e696765 	.word	0x6e696765
    e7cc:	00000a0d 	.word	0x00000a0d
    e7d0:	2a2a0a0d 	.word	0x2a2a0a0d
    e7d4:	2a2a2a2a 	.word	0x2a2a2a2a
    e7d8:	2a2a2a2a 	.word	0x2a2a2a2a
    e7dc:	2a2a2a2a 	.word	0x2a2a2a2a
    e7e0:	2a2a2a2a 	.word	0x2a2a2a2a
    e7e4:	2a2a2a2a 	.word	0x2a2a2a2a
    e7e8:	2a2a2a2a 	.word	0x2a2a2a2a
    e7ec:	2a2a2a2a 	.word	0x2a2a2a2a
    e7f0:	2a2a2a2a 	.word	0x2a2a2a2a
    e7f4:	2a2a2a2a 	.word	0x2a2a2a2a
    e7f8:	2a2a2a2a 	.word	0x2a2a2a2a
    e7fc:	2a2a2a2a 	.word	0x2a2a2a2a
    e800:	2a2a2a2a 	.word	0x2a2a2a2a
    e804:	2a2a2a2a 	.word	0x2a2a2a2a
    e808:	2a2a2a2a 	.word	0x2a2a2a2a
    e80c:	2a2a2a2a 	.word	0x2a2a2a2a
    e810:	2a2a2a2a 	.word	0x2a2a2a2a
    e814:	2a2a2a2a 	.word	0x2a2a2a2a
    e818:	000d0a0d 	.word	0x000d0a0d
    e81c:	70617274 	.word	0x70617274
    e820:	21212121 	.word	0x21212121
    e824:	21212121 	.word	0x21212121
    e828:	21212121 	.word	0x21212121
    e82c:	21212121 	.word	0x21212121
    e830:	21212121 	.word	0x21212121
    e834:	21212121 	.word	0x21212121
    e838:	21212121 	.word	0x21212121
    e83c:	21212121 	.word	0x21212121
    e840:	21212121 	.word	0x21212121
    e844:	21212121 	.word	0x21212121
    e848:	0a0d2121 	.word	0x0a0d2121
    e84c:	00000000 	.word	0x00000000
    e850:	00002194 	.word	0x00002194
    e854:	000021b4 	.word	0x000021b4
    e858:	000021a4 	.word	0x000021a4
    e85c:	000021d4 	.word	0x000021d4
    e860:	000021c4 	.word	0x000021c4
    e864:	000021e4 	.word	0x000021e4
    e868:	000023da 	.word	0x000023da
    e86c:	000024a2 	.word	0x000024a2
    e870:	000023fc 	.word	0x000023fc
    e874:	00002442 	.word	0x00002442
    e878:	00002424 	.word	0x00002424
    e87c:	0000244c 	.word	0x0000244c
    e880:	00002460 	.word	0x00002460
    e884:	00002474 	.word	0x00002474
    e888:	00002494 	.word	0x00002494

0000e88c <_ZZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_tE8pwrtable>:
    e88c:	0f0f0f0f 0e0e0e0f 0c0c0d0d 08090a0b     ................
    e89c:	02040607 00000000 6e72656b 63206c65     ........kernel c
    e8ac:	69666e6f 000a0d67 00494d48 656d6974     onfig...HMI.time
    e8bc:	00000000 72650909 20726f72 3a737070     ......error pps:
    e8cc:	756c2520 75252073 253a7409 0073756c      %lus %u.t:%lus.
    e8dc:	72650909 20726f72 3a737070 6c252d20     ..error pps: -%l
    e8ec:	25207375 3a740975 73756c25 00000000     us %u.t:%lus....
    e8fc:	666e6f63 70206669 0a0d7370 00000000     confif pps......
    e90c:	666f5309 72617774 6f432065 63657272     .Software Correc
    e91c:	6e6f6974 00000020 70750909 65746164     tion .....update
    e92c:	6d697420 6f632065 203a7272 25286425      time corr: %d(%
    e93c:	73202964 206e6769 6425203a 74697720     d) sign : %d wit
    e94c:	64252068 6d617320 00656c70 646e6509     h %d sample..end
    e95c:	666f5320 72617774 6f632065 63657272      Software correc
    e96c:	6e6f6974 00000000 72614809 72617764     tion.....Hardwar
    e97c:	6f632065 63657272 6e6f6974 00000000     e correction....
    e98c:	62460909 3a747365 20752520 202c7a48     ..Fbest: %u Hz, 
    e99c:	65737546 7525203d 207a4820 6e756f63     Fuse= %u Hz coun
    e9ac:	64253d74 00000000 646e6509 726f6320     t=%d.....end cor
    e9bc:	74636572 006e6f69 20756c25 75252c73     rection.%lu s,%u
    e9cc:	00000a0d 756c252d 252c7320 000a0d75     ....-%lu s,%u...
    e9dc:	70750909 65746164 6f6c6320 6f206b63     ..update clock o
    e9ec:	65736666 2b203a74 73756c25 646c252c     ffset: +%lus,%ld
    e9fc:	6c252b5b 252c7375 6d20756c 257e2c73     [+%lus,%lu ms,~%
    ea0c:	7520756c 74095d73 6c25203a 6c252c75     lu us].t: %lu,%l
    ea1c:	00000075 70750909 65746164 6f6c6320     u.....update clo
    ea2c:	6f206b63 65736666 2d203a74 73756c25     ck offset: -%lus
    ea3c:	646c252c 6c252d5b 252c7375 736d756c     ,%ld[-%lus,%lums
    ea4c:	6c257e2c 73752075 3a74095d 756c2520     ,~%lu us].t: %lu
    ea5c:	756c252c 00000000 6e797309 65722063     ,%lu.....sync re
    ea6c:	76696563 00000065 65727265 63207275     ceive...erreur c
    ea7c:	00006372 6e797309 6f632063 656c706d     rc...sync comple
    ea8c:	00646574 6c656409 72207961 6f707365     ted..delay respo
    ea9c:	2065736e 65636572 00657669 70750909     nse receive...up
    eaac:	65746164 6c656420 203a7961 756c252b     date delay: +%lu
    eabc:	75252c73 2c736d20 756c257e 00737520     s,%u ms,~%lu us.
    eacc:	70750909 65746164 6c656420 203a7961     ..update delay: 
    eadc:	756c252d 75252c73 2c736d20 756c257e     -%lus,%u ms,~%lu
    eaec:	00737520 6c656409 72207961 6f707365      us..delay respo
    eafc:	2065736e 706d6f63 6574656c 00000064     nse completed...
    eb0c:	6c656409 72207961 6f707365 2065736e     .delay response 
    eb1c:	20746f6e 20726f66 0000656d 72724509     not for me...Err
    eb2c:	20727565 65707974 6b6e7520 00776f6e     eur type unknow.
    eb3c:	6c656409 72207961 65757165 73207473     .delay request s
    eb4c:	00646e65 666e6f63 48206769 0d20494d     end.config HMI .
    eb5c:	0000000a                                ....

0000eb60 <__stdin_name>:
    eb60:	6474732f 00006e69                       /stdin..

0000eb68 <__stderr_name>:
    eb68:	6474732f 00727265                       /stderr.

0000eb70 <__stdout_name>:
    eb70:	6474732f 0074756f                       /stdout.

0000eb78 <_ZTVN4mbed10FileHandleE>:
	...
    eb80:	00003be9 00003be9 00003be9 00003be9     .;...;...;...;..
    eb90:	00003be9 00003be9 0000393d 00000000     .;...;..=9......
    eba0:	00000000 0070253a 65637845 6f697470     ....:%p.Exceptio
    ebb0:	0000006e                                n...

0000ebb4 <CSWTCH.41>:
    ebb4:	00100000 00200000 00300000 006a626f     ...... ...0.obj.
    ebc4:	4a5c3a43 696b6e65 775c736e 736b726f     C:\Jenkins\works
    ebd4:	65636170 65626d5c 2d322d64 6c697562     pace\mbed-2-buil
    ebe4:	696c2d64 72617262 61685c79 61745c6c     d-library\hal\ta
    ebf4:	74656772 61685c73 41545c6c 54454752     rgets\hal\TARGET
    ec04:	6d74415f 545c6c65 45475241 41535f54     _Atmel\TARGET_SA
    ec14:	6f435f4d 78657472 5c50304d 69726573     M_CortexM0P\seri
    ec24:	615f6c61 632e6970 00000000 75616228     al_api.c....(bau
    ec34:	74617264 3d3d2065 30313120 7c7c2029     drate == 110) ||
    ec44:	61622820 61726475 3d206574 3531203d      (baudrate == 15
    ec54:	7c202930 6228207c 72647561 20657461     0) || (baudrate 
    ec64:	33203d3d 20293030 28207c7c 64756162     == 300) || (baud
    ec74:	65746172 203d3d20 30303231 7c7c2029     rate == 1200) ||
    ec84:	61622820 61726475 3d206574 3432203d      (baudrate == 24
    ec94:	20293030 28207c7c 64756162 65746172     00) || (baudrate
    eca4:	203d3d20 30303834 7c7c2029 61622820      == 4800) || (ba
    ecb4:	61726475 3d206574 3639203d 20293030     udrate == 9600) 
    ecc4:	28207c7c 64756162 65746172 203d3d20     || (baudrate == 
    ecd4:	30323931 7c202930 6228207c 72647561     19200) || (baudr
    ece4:	20657461 33203d3d 30303438 7c7c2029     ate == 38400) ||
    ecf4:	61622820 61726475 3d206574 3735203d      (baudrate == 57
    ed04:	29303036 207c7c20 75616228 74617264     600) || (baudrat
    ed14:	3d3d2065 35313120 29303032 207c7c20     e == 115200) || 
    ed24:	75616228 74617264 3d3d2065 30333220     (baudrate == 230
    ed34:	29303034 207c7c20 75616228 74617264     400) || (baudrat
    ed44:	3d3d2065 30363420 29303038 207c7c20     e == 460800) || 
    ed54:	75616228 74617264 3d3d2065 31323920     (baudrate == 921
    ed64:	29303036 00000000 6f747328 69625f70     600)....(stop_bi
    ed74:	3d207374 2931203d 207c7c20 6f747328     ts == 1) || (sto
    ed84:	69625f70 3d207374 2932203d 00000000     p_bits == 2)....
    ed94:	72617028 20797469 50203d3d 74697261     (parity == Parit
    eda4:	6e6f4e79 7c202965 7028207c 74697261     yNone) || (parit
    edb4:	3d3d2079 72615020 4f797469 20296464     y == ParityOdd) 
    edc4:	28207c7c 69726170 3d207974 6150203d     || (parity == Pa
    edd4:	79746972 6e657645 00000029 74616428     rityEven)...(dat
    ede4:	69625f61 3d207374 2935203d 207c7c20     a_bits == 5) || 
    edf4:	74616428 69625f61 3d207374 2936203d     (data_bits == 6)
    ee04:	207c7c20 74616428 69625f61 3d207374      || (data_bits =
    ee14:	2937203d 207c7c20 74616428 69625f61     = 7) || (data_bi
    ee24:	3d207374 2938203d 00000000 21207874     ts == 8)....tx !
    ee34:	7628203d 2a64696f 00003029 74646977     = (void*)0..widt
    ee44:	3d3d2068 00003820 21207872 7628203d     h == 8..rx != (v
    ee54:	2a64696f 00003029 00000000              oid*)0......

0000ee60 <_ZTVN4mbed3SPIE>:
	...
    ee68:	00004915 000047a5 000047d5 00000000     .I...G...G......

0000ee78 <_ZTVN4mbed6SerialE>:
	...
    ee80:	0000374d 00003859 00004929 00004941     M7..Y8..)I..AI..
    ee90:	ffffff24 00000000 00004ab9 00004ab5     $........J...J..
    eea0:	00004ae5 00004b15 00004b11 00004b19     .J...K...K...K..
    eeb0:	00004b1d 00003775 0000388d 00004949     .K..u7...8..II..
    eec0:	00004931 ffffff20 00000000 00003785     1I.. ........7..
    eed0:	0000389d 00000000                       .8......

0000eed8 <_ZTVN4mbed10SerialBaseE>:
	...
    eee0:	00003749 00003795                       I7...7..

0000eee8 <_ZTVN4mbed6StreamE>:
	...
    eef0:	00004ab9 00004ab5 00004ae5 00004b15     .J...J...J...K..
    ef00:	00004b11 00004b19 00004b1d 00000000     .K...K...K......
    ef10:	00000000 00003be9 00003be9 fffffffc     .....;...;......
	...
    ef2c:	00002b77 6465626d 73736120 61747265     w+..mbed asserta
    ef3c:	6e6f6974 69616620 3a64656c 2c732520     tion failed: %s,
    ef4c:	6c696620 25203a65 6c202c73 20656e69      file: %s, line 
    ef5c:	0a206425 00000000 4a5c3a43 696b6e65     %d .....C:\Jenki
    ef6c:	775c736e 736b726f 65636170 65626d5c     ns\workspace\mbe
    ef7c:	2d322d64 6c697562 696c2d64 72617262     d-2-build-librar
    ef8c:	622e5c79 646c6975 65626d5c 41545c64     y\.build\mbed\TA
    ef9c:	54454752 4d41535f 47313252 5c413831     RGET_SAMR21G18A\
    efac:	47524154 415f5445 6c656d74 5241545c     TARGET_Atmel\TAR
    efbc:	5f544547 5f4d4153 74726f43 304d7865     GET_SAM_CortexM0
    efcc:	70672f50 6f5f6f69 63656a62 00682e74     P/gpio_object.h.
    efdc:	6c756f63 6f6e2064 69702074 74756f6e     could not pinout
    efec:	00000000 6d6e6970 6d207061 6d2d7369     ....pinmap mis-m
    effc:	68637461 00000000 6d6e6970 6e207061     atch....pinmap n
    f00c:	6620746f 646e756f 726f6620 72657020     ot found for per
    f01c:	65687069 006c6172 6d6e6970 6e207061     ipheral.pinmap n
    f02c:	6620746f 646e756f 726f6620 6e756620     ot found for fun
    f03c:	6f697463 0000006e                       ction...

0000f044 <PinMap_SERCOM_PADEx>:
    f044:	00000008 00000002 00000003 00000009     ................
    f054:	00000012 00000003 00000010 00000003     ................
    f064:	00000003 00000011 00000013 00000003     ................
    f074:	00000012 00000023 00000003 00000013     ....#...........
    f084:	00000033 00000003 00000016 00000005     3...............
    f094:	00000003 00000017 00000015 00000003     ................
    f0a4:	00000018 00000025 00000003 00000019     ....%...........
    f0b4:	00000035 00000003 000000ff ffffffff     5...............
    f0c4:	ffffffff                                ....

0000f0c8 <PinMap_SERCOM_PAD>:
    f0c8:	00000000 00000001 00000003 00000001     ................
    f0d8:	00000011 00000003 00000004 00000000     ................
    f0e8:	00000003 00000005 00000010 00000003     ................
    f0f8:	00000006 00000020 00000003 00000007     .... ...........
    f108:	00000030 00000003 00000008 00000000     0...............
    f118:	00000002 00000009 00000010 00000002     ................
    f128:	0000000c 00000002 00000002 0000000d     ................
    f138:	00000012 00000002 0000000e 00000022     ............"...
    f148:	00000002 0000000f 00000032 00000002     ........2.......
    f158:	00000010 00000001 00000002 00000011     ................
    f168:	00000011 00000002 00000012 00000021     ............!...
    f178:	00000002 00000013 00000031 00000002     ........1.......
    f188:	00000016 00000003 00000002 00000017     ................
    f198:	00000013 00000002 00000018 00000023     ............#...
    f1a8:	00000002 00000019 00000033 00000002     ........3.......
    f1b8:	0000001b 00000003 00000005 0000001c     ................
    f1c8:	00000013 00000005 0000001e 00000021     ............!...
    f1d8:	00000003 0000001f 00000031 00000003     ........1.......
    f1e8:	00000022 00000005 00000003 00000023     "...........#...
    f1f8:	00000015 00000003 00000036 00000025     ........6...%...
    f208:	00000003 00000037 00000035 00000003     ....7...5.......
    f218:	0000003e 00000024 00000005 0000003f     >...$.......?...
    f228:	00000014 00000005 00000052 00000034     ........R...4...
    f238:	00000005 00000053 00000004 00000005     ....S...........
    f248:	000000ff ffffffff ffffffff 42000800     ...............B
    f258:	42000c00 42001000 42001400 42001800     ...B...B...B...B
    f268:	42001c00 00004f28 00004f40 00004f40     ...B(O..@O..@O..
    f278:	00004eee 00004eee 00004ef4 00004efa     .N...N...N...N..
    f288:	00004f0a 00004f2e 00004fe4 00004ff2     .O...O...O...O..
    f298:	00004ff2 00004f76 00004f7a 00004f88     .O..vO..zO...O..
    f2a8:	00004f96 00004fa4 00004fd4 206e6970     .O...O...O..pin 
    f2b8:	28203d21 4e6e6950 29656d61 0000434e     != (PinName)NC..
    f2c8:	4a5c3a43 696b6e65 775c736e 736b726f     C:\Jenkins\works
    f2d8:	65636170 65626d5c 2d322d64 6c697562     pace\mbed-2-buil
    f2e8:	696c2d64 72617262 61685c79 61745c6c     d-library\hal\ta
    f2f8:	74656772 61685c73 41545c6c 54454752     rgets\hal\TARGET
    f308:	6d74415f 545c6c65 45475241 41535f54     _Atmel\TARGET_SA
    f318:	6f435f4d 78657472 5c50304d 6f697067     M_CortexM0P\gpio
    f328:	6970615f 0000632e 4a5c3a43 696b6e65     _api.c..C:\Jenki
    f338:	775c736e 736b726f 65636170 65626d5c     ns\workspace\mbe
    f348:	2d322d64 6c697562 696c2d64 72617262     d-2-build-librar
    f358:	61685c79 61745c6c 74656772 61685c73     y\hal\targets\ha
    f368:	41545c6c 54454752 6d74415f 545c6c65     l\TARGET_Atmel\T
    f378:	45475241 41535f54 6f435f4d 78657472     ARGET_SAM_Cortex
    f388:	5c50304d 6d6e6970 632e7061 00000000     M0P\pinmap.c....
    f398:	74726f70 00000000 42000800 42000c00     port.......B...B
    f3a8:	42001000 42001400 42001800 42001c00     ...B...B...B...B
    f3b8:	6c637963 705f7365 755f7265 203e2073     cycles_per_us > 
    f3c8:	00000030 4a5c3a43 696b6e65 775c736e     0...C:\Jenkins\w
    f3d8:	736b726f 65636170 65626d5c 2d322d64     orkspace\mbed-2-
    f3e8:	6c697562 696c2d64 72617262 61685c79     build-library\ha
    f3f8:	61745c6c 74656772 61685c73 41545c6c     l\targets\hal\TA
    f408:	54454752 6d74415f 545c6c65 45475241     RGET_Atmel\TARGE
    f418:	41535f54 6f435f4d 78657472 5c50304d     T_SAM_CortexM0P\
    f428:	745f7375 656b6369 00632e72 75646f6d     us_ticker.c.modu
    f438:	0000656c                                le..

0000f43c <tc_interrupt_vectors.12802>:
    f43c:	00141312 4a5c3a43 696b6e65 775c736e     ....C:\Jenkins\w
    f44c:	736b726f 65636170 65626d5c 2d322d64     orkspace\mbed-2-
    f45c:	6c697562 696c2d64 72617262 61685c79     build-library\ha
    f46c:	61745c6c 74656772 61685c73 41545c6c     l\targets\hal\TA
    f47c:	54454752 6d74415f 545c6c65 45475241     RGET_Atmel\TARGE
    f48c:	41535f54 6f435f4d 78657472 5c50304d     T_SAM_CortexM0P\
    f49c:	5f697073 2e697061 00000063 6b6c6373     spi_api.c...sclk
    f4ac:	203d2120 0000434e 00000000               != NC......

0000f4b8 <_ZTVN4mbed8FileBaseE>:
	...
    f4c0:	00005cd9 00005d0d                       .\...]..

0000f4c8 <_ZTVN4mbed8FileLikeE>:
	...
    f4d0:	00003be9 00003be9 00003be9 00003be9     .;...;...;...;..
    f4e0:	00003be9 00003be9 0000393d 00000000     .;...;..=9......
    f4f0:	00000000 fffffffc 00000000 00000000     ................
    f500:	00000000                                ....

0000f504 <us_interface>:
    f504:	000055fd 00005611 00005699 000056bd     .U...V...V...V..
    f514:	00005631                                1V..

0000f518 <us_data>:
    f518:	0000f504 200045ec 42002c00 42003000     .....E. .,.B.0.B
    f528:	42003400 001c1c1b 10000800 00002000     .4.B......... ..
    f538:	00006b7e 00006b46 00006b62 00006b3a     ~k..Fk..bk..:k..
    f548:	00006b62 00006aa6 00006b62 00006b3a     bk...j..bk..:k..
    f558:	00006b46 00006b46 00006aa6 00006b3a     Fk..Fk...j..:k..
    f568:	00006be4 00006be4 00006be4 00006b68     .k...k...k..hk..
    f578:	00006b46 00006b46 00006c2e 00006b38     Fk..Fk...l..8k..
    f588:	00006c2e 00006aa6 00006c2e 00006b38     .l...j...l..8k..
    f598:	00006b46 00006b46 00006aa6 00006b38     Fk..Fk...j..8k..
    f5a8:	00006be4 00006be4 00006be4 00006c12     .k...k...k...l..
    f5b8:	00006f46 00006f3e 00006f3e 00006f36     Fo..>o..>o..6o..
    f5c8:	00006e88 00006e88 00006f2c 00006f36     .n...n..,o..6o..
    f5d8:	00006e88 00006f2c 00006e88 00006f36     .n..,o...n..6o..
    f5e8:	00006e8a 00006e8a 00006e8a 00006fd0     .n...n...n...o..
    f5f8:	00007cf0 00007bde 00007cc4 00007bca     .|...{...|...{..
    f608:	00007cc4 00007cce 00007cc4 00007bca     .|...|...|...{..
    f618:	00007bde 00007bde 00007cce 00007bca     .{...{...|...{..
    f628:	00007bd4 00007bd4 00007bd4 00007f36     .{...{...{..6...
    f638:	00008584 00008562 00008562 00008556     ....b...b...V...
    f648:	0000844a 0000844a 0000854a 00008556     J...J...J...V...
    f658:	0000844a 0000854a 0000844a 00008556     J...J...J...V...
    f668:	0000844e 0000844e 0000844e 00008764     N...N...N...d...

0000f678 <__sf_fake_stdin>:
	...

0000f698 <__sf_fake_stdout>:
	...

0000f6b8 <__sf_fake_stderr>:
	...
    f6d8:	00000043                                C...

0000f6dc <_global_impure_ptr>:
    f6dc:	200000d4 2b302d23 6c680020 6665004c     ... #-0+ .hlL.ef
    f6ec:	47464567 464e4900 666e6900 4e414e00     gEFG.INF.inf.NAN
    f6fc:	6e616e00 32313000 36353433 41393837     .nan.0123456789A
    f70c:	45444342 31300046 35343332 39383736     BCDEF.0123456789
    f71c:	64636261 65006665 00646c25 0000f746     abcdef.e%ld.F...
    f72c:	0000f749 0000f74c 61462d41 3938662d     I...L...A-Fa-f89
    f73c:	33323130 37363534 2d2b005d 00303000     01234567].+-.00.
    f74c:	00005878                                xX..

0000f750 <fpinan.5315>:
    f750:	00000034 fffffbce 000003cb 00000001     4...............
	...

0000f768 <tinytens>:
    f768:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
    f778:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
    f788:	64ac6f43 11680628                       Co.d(.h.

0000f790 <fpi.5279>:
    f790:	00000035 fffffbce 000003cb 00000001     5...............
    f7a0:	00000000                                ....

0000f7a4 <_ctype_>:
    f7a4:	20202000 20202020 28282020 20282828     .         ((((( 
    f7b4:	20202020 20202020 20202020 20202020                     
    f7c4:	10108820 10101010 10101010 10101010      ...............
    f7d4:	04040410 04040404 10040404 10101010     ................
    f7e4:	41411010 41414141 01010101 01010101     ..AAAAAA........
    f7f4:	01010101 01010101 01010101 10101010     ................
    f804:	42421010 42424242 02020202 02020202     ..BBBBBB........
    f814:	02020202 02020202 02020202 10101010     ................
    f824:	00000020 00000000 00000000 00000000      ...............
	...
    f8a4:	666e4900 74696e69 614e0079 4f50004e     .Infinity.NaN.PO
    f8b4:	00584953 0000002e 00000000              SIX.........

0000f8c0 <__mprec_tens>:
    f8c0:	00000000 3ff00000 00000000 40240000     .......?......$@
    f8d0:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    f8e0:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    f8f0:	00000000 412e8480 00000000 416312d0     .......A......cA
    f900:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    f910:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    f920:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    f930:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    f940:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    f950:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    f960:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    f970:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    f980:	79d99db4 44ea7843                       ...yCx.D

0000f988 <__mprec_bigtens>:
    f988:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    f998:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    f9a8:	7f73bf3c 75154fdd                       <.s..O.u

0000f9b0 <p05.5314>:
    f9b0:	00000005 00000019 0000007d              ........}...

0000f9bc <_init>:
    f9bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    f9be:	46c0      	nop			; (mov r8, r8)
    f9c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
    f9c2:	bc08      	pop	{r3}
    f9c4:	469e      	mov	lr, r3
    f9c6:	4770      	bx	lr

0000f9c8 <__init_array_start>:
    f9c8:	000000dd 	.word	0x000000dd
    f9cc:	000016ed 	.word	0x000016ed
    f9d0:	000018cd 	.word	0x000018cd
    f9d4:	000038ad 	.word	0x000038ad

0000f9d8 <_fini>:
    f9d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    f9da:	46c0      	nop			; (mov r8, r8)
    f9dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
    f9de:	bc08      	pop	{r3}
    f9e0:	469e      	mov	lr, r3
    f9e2:	4770      	bx	lr

0000f9e4 <__fini_array_start>:
    f9e4:	000000b5 	.word	0x000000b5
