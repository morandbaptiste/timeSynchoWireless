
TimeSyncMbedWirelless.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000e690  00000000  00000000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     000000c4  200000b0  0000e690  000180b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000044b4  20000174  0000e754  00018174  2**2
                  ALLOC
  3 .heap         000019d8  20004628  00012c08  00018174  2**0
                  ALLOC
  4 .stack        00002000  20006000  000145e0  00018174  2**0
                  ALLOC
  5 .ARM.attributes 00000028  00000000  00000000  00018174  2**0
                  CONTENTS, READONLY
  6 .comment      000000cb  00000000  00000000  0001819c  2**0
                  CONTENTS, READONLY
  7 .debug_info   0003e51a  00000000  00000000  00018267  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00006166  00000000  00000000  00056781  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00005577  00000000  00000000  0005c8e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000007a0  00000000  00000000  00061e5e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000006f0  00000000  00000000  000625fe  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00022165  00000000  00000000  00062cee  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0001b3a4  00000000  00000000  00084e53  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00088022  00000000  00000000  000a01f7  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  000028b8  00000000  00000000  0012821c  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .stabstr      00000076  00000000  00000000  0012aad4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <_sfixed>:
       0:	20008000 	.word	0x20008000
       4:	000037a5 	.word	0x000037a5
       8:	000037a1 	.word	0x000037a1
       c:	000037a1 	.word	0x000037a1
	...
      2c:	00000eed 	.word	0x00000eed
	...
      38:	00000f59 	.word	0x00000f59
      3c:	00000f9d 	.word	0x00000f9d
      40:	000037a1 	.word	0x000037a1
      44:	000037a1 	.word	0x000037a1
      48:	000037a1 	.word	0x000037a1
      4c:	0000162d 	.word	0x0000162d
      50:	00003865 	.word	0x00003865
      54:	000037a1 	.word	0x000037a1
      58:	000037a1 	.word	0x000037a1
      5c:	00000000 	.word	0x00000000
      60:	000037a1 	.word	0x000037a1
      64:	000037a1 	.word	0x000037a1
      68:	000037a1 	.word	0x000037a1
      6c:	000037a1 	.word	0x000037a1
      70:	000037a1 	.word	0x000037a1
	...
      7c:	000037a1 	.word	0x000037a1
      80:	000037a1 	.word	0x000037a1
      84:	000037a1 	.word	0x000037a1
      88:	00005a1d 	.word	0x00005a1d
      8c:	00005a29 	.word	0x00005a29
      90:	00005a35 	.word	0x00005a35
	...
      ac:	000037a1 	.word	0x000037a1
      b0:	00000000 	.word	0x00000000

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	20000174 	.word	0x20000174
      d4:	00000000 	.word	0x00000000
      d8:	0000e690 	.word	0x0000e690

000000dc <frame_dummy>:
      dc:	b508      	push	{r3, lr}
      de:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4807      	ldr	r0, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4908      	ldr	r1, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd08      	pop	{r3, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	0000e690 	.word	0x0000e690
     108:	20000178 	.word	0x20000178
     10c:	0000e690 	.word	0x0000e690
     110:	00000000 	.word	0x00000000

00000114 <prvCopyDataToQueue>:

#endif /* configUSE_TRACE_FACILITY */
/*-----------------------------------------------------------*/

static void prvCopyDataToQueue( xQUEUE *pxQueue, const void *pvItemToQueue, portBASE_TYPE xPosition )
{
     114:	b510      	push	{r4, lr}
     116:	1c04      	adds	r4, r0, #0
	if( pxQueue->uxItemSize == ( unsigned portBASE_TYPE ) 0 )
     118:	6c03      	ldr	r3, [r0, #64]	; 0x40
     11a:	2b00      	cmp	r3, #0
     11c:	d108      	bne.n	130 <prvCopyDataToQueue+0x1c>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
     11e:	6803      	ldr	r3, [r0, #0]
     120:	2b00      	cmp	r3, #0
     122:	d126      	bne.n	172 <prvCopyDataToQueue+0x5e>
			{
				/* The mutex is no longer being held. */
				vTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
     124:	6840      	ldr	r0, [r0, #4]
     126:	4b15      	ldr	r3, [pc, #84]	; (17c <prvCopyDataToQueue+0x68>)
     128:	4798      	blx	r3
				pxQueue->pxMutexHolder = NULL;
     12a:	2300      	movs	r3, #0
     12c:	6063      	str	r3, [r4, #4]
     12e:	e020      	b.n	172 <prvCopyDataToQueue+0x5e>
			}
		}
		#endif
	}
	else if( xPosition == queueSEND_TO_BACK )
     130:	2a00      	cmp	r2, #0
     132:	d10e      	bne.n	152 <prvCopyDataToQueue+0x3e>
	{
		memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
     134:	6880      	ldr	r0, [r0, #8]
     136:	1c1a      	adds	r2, r3, #0
     138:	4b11      	ldr	r3, [pc, #68]	; (180 <prvCopyDataToQueue+0x6c>)
     13a:	4798      	blx	r3
		pxQueue->pcWriteTo += pxQueue->uxItemSize;
     13c:	68a3      	ldr	r3, [r4, #8]
     13e:	6c22      	ldr	r2, [r4, #64]	; 0x40
     140:	4694      	mov	ip, r2
     142:	4463      	add	r3, ip
     144:	60a3      	str	r3, [r4, #8]
		if( pxQueue->pcWriteTo >= pxQueue->pcTail )
     146:	6862      	ldr	r2, [r4, #4]
     148:	4293      	cmp	r3, r2
     14a:	d312      	bcc.n	172 <prvCopyDataToQueue+0x5e>
		{
			pxQueue->pcWriteTo = pxQueue->pcHead;
     14c:	6823      	ldr	r3, [r4, #0]
     14e:	60a3      	str	r3, [r4, #8]
     150:	e00f      	b.n	172 <prvCopyDataToQueue+0x5e>
		}
	}
	else
	{
		memcpy( ( void * ) pxQueue->pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
     152:	68c0      	ldr	r0, [r0, #12]
     154:	1c1a      	adds	r2, r3, #0
     156:	4b0a      	ldr	r3, [pc, #40]	; (180 <prvCopyDataToQueue+0x6c>)
     158:	4798      	blx	r3
		pxQueue->pcReadFrom -= pxQueue->uxItemSize;
     15a:	6c23      	ldr	r3, [r4, #64]	; 0x40
     15c:	425b      	negs	r3, r3
     15e:	68e2      	ldr	r2, [r4, #12]
     160:	18d2      	adds	r2, r2, r3
     162:	60e2      	str	r2, [r4, #12]
		if( pxQueue->pcReadFrom < pxQueue->pcHead )
     164:	6821      	ldr	r1, [r4, #0]
     166:	428a      	cmp	r2, r1
     168:	d203      	bcs.n	172 <prvCopyDataToQueue+0x5e>
		{
			pxQueue->pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
     16a:	6862      	ldr	r2, [r4, #4]
     16c:	4694      	mov	ip, r2
     16e:	4463      	add	r3, ip
     170:	60e3      	str	r3, [r4, #12]
		}
	}

	++( pxQueue->uxMessagesWaiting );
     172:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     174:	3301      	adds	r3, #1
     176:	63a3      	str	r3, [r4, #56]	; 0x38
}
     178:	bd10      	pop	{r4, pc}
     17a:	46c0      	nop			; (mov r8, r8)
     17c:	00000e65 	.word	0x00000e65
     180:	0000870b 	.word	0x0000870b

00000184 <prvCopyDataFromQueue>:
/*-----------------------------------------------------------*/

static void prvCopyDataFromQueue( xQUEUE * const pxQueue, const void *pvBuffer )
{
     184:	b538      	push	{r3, r4, r5, lr}
	if( pxQueue->uxQueueType != queueQUEUE_IS_MUTEX )
     186:	6804      	ldr	r4, [r0, #0]
     188:	2c00      	cmp	r4, #0
     18a:	d00c      	beq.n	1a6 <prvCopyDataFromQueue+0x22>
	{
		pxQueue->pcReadFrom += pxQueue->uxItemSize;
     18c:	6c02      	ldr	r2, [r0, #64]	; 0x40
     18e:	68c3      	ldr	r3, [r0, #12]
     190:	189b      	adds	r3, r3, r2
     192:	60c3      	str	r3, [r0, #12]
		if( pxQueue->pcReadFrom >= pxQueue->pcTail )
     194:	6845      	ldr	r5, [r0, #4]
     196:	42ab      	cmp	r3, r5
     198:	d300      	bcc.n	19c <prvCopyDataFromQueue+0x18>
		{
			pxQueue->pcReadFrom = pxQueue->pcHead;
     19a:	60c4      	str	r4, [r0, #12]
     19c:	1c0b      	adds	r3, r1, #0
		}
		memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->pcReadFrom, ( size_t ) pxQueue->uxItemSize );
     19e:	68c1      	ldr	r1, [r0, #12]
     1a0:	1c18      	adds	r0, r3, #0
     1a2:	4b01      	ldr	r3, [pc, #4]	; (1a8 <prvCopyDataFromQueue+0x24>)
     1a4:	4798      	blx	r3
	}
}
     1a6:	bd38      	pop	{r3, r4, r5, pc}
     1a8:	0000870b 	.word	0x0000870b

000001ac <prvUnlockQueue>:
/*-----------------------------------------------------------*/

static void prvUnlockQueue( xQUEUE *pxQueue )
{
     1ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     1ae:	1c04      	adds	r4, r0, #0

	/* The lock counts contains the number of extra data items placed or
	removed from the queue while the queue was locked.  When a queue is
	locked items can be added or removed, but the event lists cannot be
	updated. */
	taskENTER_CRITICAL();
     1b0:	4b21      	ldr	r3, [pc, #132]	; (238 <prvUnlockQueue+0x8c>)
     1b2:	4798      	blx	r3
	{
		/* See if data was added to the queue while it was locked. */
		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
     1b4:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     1b6:	2b00      	cmp	r3, #0
     1b8:	dd16      	ble.n	1e8 <prvUnlockQueue+0x3c>
			}
			#else /* configUSE_QUEUE_SETS */
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     1ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
     1bc:	2b00      	cmp	r3, #0
     1be:	d104      	bne.n	1ca <prvUnlockQueue+0x1e>
     1c0:	e012      	b.n	1e8 <prvUnlockQueue+0x3c>
     1c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
     1c4:	2b00      	cmp	r3, #0
     1c6:	d104      	bne.n	1d2 <prvUnlockQueue+0x26>
     1c8:	e00e      	b.n	1e8 <prvUnlockQueue+0x3c>
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     1ca:	1c25      	adds	r5, r4, #0
     1cc:	3524      	adds	r5, #36	; 0x24
     1ce:	4f1b      	ldr	r7, [pc, #108]	; (23c <prvUnlockQueue+0x90>)
					{
						/* The task waiting has a higher priority so record that a
						context	switch is required. */
						vTaskMissedYield();
     1d0:	4e1b      	ldr	r6, [pc, #108]	; (240 <prvUnlockQueue+0x94>)
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     1d2:	1c28      	adds	r0, r5, #0
     1d4:	47b8      	blx	r7
     1d6:	2800      	cmp	r0, #0
     1d8:	d000      	beq.n	1dc <prvUnlockQueue+0x30>
					{
						/* The task waiting has a higher priority so record that a
						context	switch is required. */
						vTaskMissedYield();
     1da:	47b0      	blx	r6
					break;
				}
			}
			#endif /* configUSE_QUEUE_SETS */

			--( pxQueue->xTxLock );
     1dc:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     1de:	3b01      	subs	r3, #1
     1e0:	64a3      	str	r3, [r4, #72]	; 0x48
	locked items can be added or removed, but the event lists cannot be
	updated. */
	taskENTER_CRITICAL();
	{
		/* See if data was added to the queue while it was locked. */
		while( pxQueue->xTxLock > queueLOCKED_UNMODIFIED )
     1e2:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     1e4:	2b00      	cmp	r3, #0
     1e6:	dcec      	bgt.n	1c2 <prvUnlockQueue+0x16>
			#endif /* configUSE_QUEUE_SETS */

			--( pxQueue->xTxLock );
		}

		pxQueue->xTxLock = queueUNLOCKED;
     1e8:	2301      	movs	r3, #1
     1ea:	425b      	negs	r3, r3
     1ec:	64a3      	str	r3, [r4, #72]	; 0x48
	}
	taskEXIT_CRITICAL();
     1ee:	4b15      	ldr	r3, [pc, #84]	; (244 <prvUnlockQueue+0x98>)
     1f0:	4798      	blx	r3

	/* Do the same for the Rx lock. */
	taskENTER_CRITICAL();
     1f2:	4b11      	ldr	r3, [pc, #68]	; (238 <prvUnlockQueue+0x8c>)
     1f4:	4798      	blx	r3
	{
		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
     1f6:	6c63      	ldr	r3, [r4, #68]	; 0x44
     1f8:	2b00      	cmp	r3, #0
     1fa:	dd16      	ble.n	22a <prvUnlockQueue+0x7e>
		{
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     1fc:	6923      	ldr	r3, [r4, #16]
     1fe:	2b00      	cmp	r3, #0
     200:	d104      	bne.n	20c <prvUnlockQueue+0x60>
     202:	e012      	b.n	22a <prvUnlockQueue+0x7e>
     204:	6923      	ldr	r3, [r4, #16]
     206:	2b00      	cmp	r3, #0
     208:	d104      	bne.n	214 <prvUnlockQueue+0x68>
     20a:	e00e      	b.n	22a <prvUnlockQueue+0x7e>
			{
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     20c:	1c25      	adds	r5, r4, #0
     20e:	3510      	adds	r5, #16
     210:	4f0a      	ldr	r7, [pc, #40]	; (23c <prvUnlockQueue+0x90>)
				{
					vTaskMissedYield();
     212:	4e0b      	ldr	r6, [pc, #44]	; (240 <prvUnlockQueue+0x94>)
	{
		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
		{
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
			{
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
     214:	1c28      	adds	r0, r5, #0
     216:	47b8      	blx	r7
     218:	2800      	cmp	r0, #0
     21a:	d000      	beq.n	21e <prvUnlockQueue+0x72>
				{
					vTaskMissedYield();
     21c:	47b0      	blx	r6
				}

				--( pxQueue->xRxLock );
     21e:	6c63      	ldr	r3, [r4, #68]	; 0x44
     220:	3b01      	subs	r3, #1
     222:	6463      	str	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();

	/* Do the same for the Rx lock. */
	taskENTER_CRITICAL();
	{
		while( pxQueue->xRxLock > queueLOCKED_UNMODIFIED )
     224:	6c63      	ldr	r3, [r4, #68]	; 0x44
     226:	2b00      	cmp	r3, #0
     228:	dcec      	bgt.n	204 <prvUnlockQueue+0x58>
			{
				break;
			}
		}

		pxQueue->xRxLock = queueUNLOCKED;
     22a:	2301      	movs	r3, #1
     22c:	425b      	negs	r3, r3
     22e:	6463      	str	r3, [r4, #68]	; 0x44
	}
	taskEXIT_CRITICAL();
     230:	4b04      	ldr	r3, [pc, #16]	; (244 <prvUnlockQueue+0x98>)
     232:	4798      	blx	r3
}
     234:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     236:	46c0      	nop			; (mov r8, r8)
     238:	00000f2d 	.word	0x00000f2d
     23c:	00000cc5 	.word	0x00000cc5
     240:	00000dd1 	.word	0x00000dd1
     244:	00000f45 	.word	0x00000f45

00000248 <xQueueGenericReset>:
	}														\
	taskEXIT_CRITICAL()
/*-----------------------------------------------------------*/

portBASE_TYPE xQueueGenericReset( xQueueHandle xQueue, portBASE_TYPE xNewQueue )
{
     248:	b538      	push	{r3, r4, r5, lr}
xQUEUE *pxQueue;

	pxQueue = ( xQUEUE * ) xQueue;
	configASSERT( pxQueue );
     24a:	2800      	cmp	r0, #0
     24c:	d101      	bne.n	252 <xQueueGenericReset+0xa>
     24e:	b672      	cpsid	i
     250:	e7fe      	b.n	250 <xQueueGenericReset+0x8>
     252:	1c0d      	adds	r5, r1, #0
     254:	1c04      	adds	r4, r0, #0

	taskENTER_CRITICAL();
     256:	4b15      	ldr	r3, [pc, #84]	; (2ac <xQueueGenericReset+0x64>)
     258:	4798      	blx	r3
	{
		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
     25a:	6822      	ldr	r2, [r4, #0]
     25c:	6c21      	ldr	r1, [r4, #64]	; 0x40
     25e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     260:	434b      	muls	r3, r1
     262:	18d0      	adds	r0, r2, r3
     264:	6060      	str	r0, [r4, #4]
		pxQueue->uxMessagesWaiting = ( unsigned portBASE_TYPE ) 0U;
     266:	2000      	movs	r0, #0
     268:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
     26a:	60a2      	str	r2, [r4, #8]
		pxQueue->pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( unsigned portBASE_TYPE ) 1U ) * pxQueue->uxItemSize );
     26c:	1a5b      	subs	r3, r3, r1
     26e:	18d3      	adds	r3, r2, r3
     270:	60e3      	str	r3, [r4, #12]
		pxQueue->xRxLock = queueUNLOCKED;
     272:	2301      	movs	r3, #1
     274:	425b      	negs	r3, r3
     276:	6463      	str	r3, [r4, #68]	; 0x44
		pxQueue->xTxLock = queueUNLOCKED;
     278:	64a3      	str	r3, [r4, #72]	; 0x48

		if( xNewQueue == pdFALSE )
     27a:	2d00      	cmp	r5, #0
     27c:	d10b      	bne.n	296 <xQueueGenericReset+0x4e>
			/* If there are tasks blocked waiting to read from the queue, then
			the tasks will remain blocked as after this function exits the queue
			will still be empty.  If there are tasks blocked waiting to	write to
			the queue, then one should be unblocked as after this function exits
			it will be possible to write to it. */
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     27e:	6923      	ldr	r3, [r4, #16]
     280:	2b00      	cmp	r3, #0
     282:	d00f      	beq.n	2a4 <xQueueGenericReset+0x5c>
			{
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
     284:	1c20      	adds	r0, r4, #0
     286:	3010      	adds	r0, #16
     288:	4b09      	ldr	r3, [pc, #36]	; (2b0 <xQueueGenericReset+0x68>)
     28a:	4798      	blx	r3
     28c:	2801      	cmp	r0, #1
     28e:	d109      	bne.n	2a4 <xQueueGenericReset+0x5c>
				{
					portYIELD_WITHIN_API();
     290:	4b08      	ldr	r3, [pc, #32]	; (2b4 <xQueueGenericReset+0x6c>)
     292:	4798      	blx	r3
     294:	e006      	b.n	2a4 <xQueueGenericReset+0x5c>
			}
		}
		else
		{
			/* Ensure the event queues start in the correct state. */
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
     296:	1c20      	adds	r0, r4, #0
     298:	3010      	adds	r0, #16
     29a:	4d07      	ldr	r5, [pc, #28]	; (2b8 <xQueueGenericReset+0x70>)
     29c:	47a8      	blx	r5
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
     29e:	1c20      	adds	r0, r4, #0
     2a0:	3024      	adds	r0, #36	; 0x24
     2a2:	47a8      	blx	r5
		}
	}
	taskEXIT_CRITICAL();
     2a4:	4b05      	ldr	r3, [pc, #20]	; (2bc <xQueueGenericReset+0x74>)
     2a6:	4798      	blx	r3

	/* A value is returned for calling semantic consistency with previous
	versions. */
	return pdPASS;
}
     2a8:	2001      	movs	r0, #1
     2aa:	bd38      	pop	{r3, r4, r5, pc}
     2ac:	00000f2d 	.word	0x00000f2d
     2b0:	00000cc5 	.word	0x00000cc5
     2b4:	00000f15 	.word	0x00000f15
     2b8:	00000611 	.word	0x00000611
     2bc:	00000f45 	.word	0x00000f45

000002c0 <xQueueGenericCreate>:
/*-----------------------------------------------------------*/

xQueueHandle xQueueGenericCreate( unsigned portBASE_TYPE uxQueueLength, unsigned portBASE_TYPE uxItemSize, unsigned char ucQueueType )
{
     2c0:	b570      	push	{r4, r5, r6, lr}
	/* Remove compiler warnings about unused parameters should
	configUSE_TRACE_FACILITY not be set to 1. */
	( void ) ucQueueType;

	/* Allocate the new queue structure. */
	if( uxQueueLength > ( unsigned portBASE_TYPE ) 0 )
     2c2:	2800      	cmp	r0, #0
     2c4:	d013      	beq.n	2ee <xQueueGenericCreate+0x2e>
     2c6:	1c0e      	adds	r6, r1, #0
     2c8:	1c05      	adds	r5, r0, #0
	{
		pxNewQueue = ( xQUEUE * ) pvPortMalloc( sizeof( xQUEUE ) );
     2ca:	204c      	movs	r0, #76	; 0x4c
     2cc:	4b0d      	ldr	r3, [pc, #52]	; (304 <xQueueGenericCreate+0x44>)
     2ce:	4798      	blx	r3
     2d0:	1e04      	subs	r4, r0, #0
		if( pxNewQueue != NULL )
     2d2:	d00c      	beq.n	2ee <xQueueGenericCreate+0x2e>
		{
			/* Create the list of pointers to queue items.  The queue is one byte
			longer than asked for to make wrap checking easier/faster. */
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ) + ( size_t ) 1;
     2d4:	1c30      	adds	r0, r6, #0
     2d6:	4368      	muls	r0, r5
     2d8:	3001      	adds	r0, #1

			pxNewQueue->pcHead = ( signed char * ) pvPortMalloc( xQueueSizeInBytes );
     2da:	4b0a      	ldr	r3, [pc, #40]	; (304 <xQueueGenericCreate+0x44>)
     2dc:	4798      	blx	r3
     2de:	6020      	str	r0, [r4, #0]
			if( pxNewQueue->pcHead != NULL )
     2e0:	2800      	cmp	r0, #0
     2e2:	d106      	bne.n	2f2 <xQueueGenericCreate+0x32>
				xReturn = pxNewQueue;
			}
			else
			{
				traceQUEUE_CREATE_FAILED( ucQueueType );
				vPortFree( pxNewQueue );
     2e4:	1c20      	adds	r0, r4, #0
     2e6:	4b08      	ldr	r3, [pc, #32]	; (308 <xQueueGenericCreate+0x48>)
     2e8:	4798      	blx	r3
     2ea:	e000      	b.n	2ee <xQueueGenericCreate+0x2e>
			}
		}
	}

	configASSERT( xReturn );
     2ec:	e7fe      	b.n	2ec <xQueueGenericCreate+0x2c>
     2ee:	b672      	cpsid	i
     2f0:	e7fc      	b.n	2ec <xQueueGenericCreate+0x2c>
			pxNewQueue->pcHead = ( signed char * ) pvPortMalloc( xQueueSizeInBytes );
			if( pxNewQueue->pcHead != NULL )
			{
				/* Initialise the queue members as described above where the
				queue type is defined. */
				pxNewQueue->uxLength = uxQueueLength;
     2f2:	63e5      	str	r5, [r4, #60]	; 0x3c
				pxNewQueue->uxItemSize = uxItemSize;
     2f4:	6426      	str	r6, [r4, #64]	; 0x40
				xQueueGenericReset( pxNewQueue, pdTRUE );
     2f6:	1c20      	adds	r0, r4, #0
     2f8:	2101      	movs	r1, #1
     2fa:	4b04      	ldr	r3, [pc, #16]	; (30c <xQueueGenericCreate+0x4c>)
     2fc:	4798      	blx	r3
	}

	configASSERT( xReturn );

	return xReturn;
}
     2fe:	1c20      	adds	r0, r4, #0
     300:	bd70      	pop	{r4, r5, r6, pc}
     302:	46c0      	nop			; (mov r8, r8)
     304:	0000102d 	.word	0x0000102d
     308:	00001095 	.word	0x00001095
     30c:	00000249 	.word	0x00000249

00000310 <xQueueGenericSend>:

#endif /* configUSE_COUNTING_SEMAPHORES */
/*-----------------------------------------------------------*/

signed portBASE_TYPE xQueueGenericSend( xQueueHandle xQueue, const void * const pvItemToQueue, portTickType xTicksToWait, portBASE_TYPE xCopyPosition )
{
     310:	b5f0      	push	{r4, r5, r6, r7, lr}
     312:	4657      	mov	r7, sl
     314:	b480      	push	{r7}
     316:	b086      	sub	sp, #24
     318:	9203      	str	r2, [sp, #12]
signed portBASE_TYPE xEntryTimeSet = pdFALSE;
xTimeOutType xTimeOut;
xQUEUE *pxQueue;

	pxQueue = ( xQUEUE * ) xQueue;
	configASSERT( pxQueue );
     31a:	2800      	cmp	r0, #0
     31c:	d101      	bne.n	322 <xQueueGenericSend+0x12>
     31e:	b672      	cpsid	i
     320:	e7fe      	b.n	320 <xQueueGenericSend+0x10>
     322:	2700      	movs	r7, #0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U ) ) );
     324:	2900      	cmp	r1, #0
     326:	d105      	bne.n	334 <xQueueGenericSend+0x24>
     328:	6c02      	ldr	r2, [r0, #64]	; 0x40
     32a:	2a00      	cmp	r2, #0
     32c:	d001      	beq.n	332 <xQueueGenericSend+0x22>
     32e:	b672      	cpsid	i
     330:	e7fe      	b.n	330 <xQueueGenericSend+0x20>
     332:	2700      	movs	r7, #0
     334:	9302      	str	r3, [sp, #8]
     336:	9101      	str	r1, [sp, #4]
     338:	1c04      	adds	r4, r0, #0
	/* This function relaxes the coding standard somewhat to allow return
	statements within the function itself.  This is done in the interest
	of execution time efficiency. */
	for( ;; )
	{
		taskENTER_CRITICAL();
     33a:	4d33      	ldr	r5, [pc, #204]	; (408 <xQueueGenericSend+0xf8>)
     33c:	47a8      	blx	r5
		{
			/* Is there room on the queue now?  To be running we must be
			the highest priority task wanting to access the queue. */
			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
     33e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     340:	6be2      	ldr	r2, [r4, #60]	; 0x3c
     342:	4293      	cmp	r3, r2
     344:	d213      	bcs.n	36e <xQueueGenericSend+0x5e>
			{
				traceQUEUE_SEND( pxQueue );
				prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
     346:	1c20      	adds	r0, r4, #0
     348:	9901      	ldr	r1, [sp, #4]
     34a:	9a02      	ldr	r2, [sp, #8]
     34c:	4b2f      	ldr	r3, [pc, #188]	; (40c <xQueueGenericSend+0xfc>)
     34e:	4798      	blx	r3
				}
				#else /* configUSE_QUEUE_SETS */
				{
					/* If there was a task waiting for data to arrive on the
					queue then unblock it now. */
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     350:	6a63      	ldr	r3, [r4, #36]	; 0x24
     352:	2b00      	cmp	r3, #0
     354:	d007      	beq.n	366 <xQueueGenericSend+0x56>
					{
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) == pdTRUE )
     356:	1c20      	adds	r0, r4, #0
     358:	3024      	adds	r0, #36	; 0x24
     35a:	4b2d      	ldr	r3, [pc, #180]	; (410 <xQueueGenericSend+0x100>)
     35c:	4798      	blx	r3
     35e:	2801      	cmp	r0, #1
     360:	d101      	bne.n	366 <xQueueGenericSend+0x56>
						{
							/* The unblocked task has a priority higher than
							our own so yield immediately.  Yes it is ok to do
							this from within the critical section - the kernel
							takes care of that. */
							portYIELD_WITHIN_API();
     362:	4b2c      	ldr	r3, [pc, #176]	; (414 <xQueueGenericSend+0x104>)
     364:	4798      	blx	r3
						}
					}
				}
				#endif /* configUSE_QUEUE_SETS */

				taskEXIT_CRITICAL();
     366:	4b2c      	ldr	r3, [pc, #176]	; (418 <xQueueGenericSend+0x108>)
     368:	4798      	blx	r3

				/* Return to the original privilege level before exiting the
				function. */
				return pdPASS;
     36a:	2001      	movs	r0, #1
     36c:	e048      	b.n	400 <xQueueGenericSend+0xf0>
			}
			else
			{
				if( xTicksToWait == ( portTickType ) 0 )
     36e:	9b03      	ldr	r3, [sp, #12]
     370:	2b00      	cmp	r3, #0
     372:	d103      	bne.n	37c <xQueueGenericSend+0x6c>
				{
					/* The queue was full and no block time is specified (or
					the block time has expired) so leave now. */
					taskEXIT_CRITICAL();
     374:	4b28      	ldr	r3, [pc, #160]	; (418 <xQueueGenericSend+0x108>)
     376:	4798      	blx	r3

					/* Return to the original privilege level before exiting
					the function. */
					traceQUEUE_SEND_FAILED( pxQueue );
					return errQUEUE_FULL;
     378:	2000      	movs	r0, #0
     37a:	e041      	b.n	400 <xQueueGenericSend+0xf0>
				}
				else if( xEntryTimeSet == pdFALSE )
     37c:	2f00      	cmp	r7, #0
     37e:	d103      	bne.n	388 <xQueueGenericSend+0x78>
				{
					/* The queue was full and a block time was specified so
					configure the timeout structure. */
					vTaskSetTimeOutState( &xTimeOut );
     380:	a804      	add	r0, sp, #16
     382:	4b26      	ldr	r3, [pc, #152]	; (41c <xQueueGenericSend+0x10c>)
     384:	4798      	blx	r3
					xEntryTimeSet = pdTRUE;
     386:	3701      	adds	r7, #1
				}
			}
		}
		taskEXIT_CRITICAL();
     388:	4b23      	ldr	r3, [pc, #140]	; (418 <xQueueGenericSend+0x108>)
     38a:	4798      	blx	r3

		/* Interrupts and other tasks can send to and receive from the queue
		now the critical section has been exited. */

		vTaskSuspendAll();
     38c:	4b24      	ldr	r3, [pc, #144]	; (420 <xQueueGenericSend+0x110>)
     38e:	4798      	blx	r3
		prvLockQueue( pxQueue );
     390:	4b1d      	ldr	r3, [pc, #116]	; (408 <xQueueGenericSend+0xf8>)
     392:	4798      	blx	r3
     394:	6c63      	ldr	r3, [r4, #68]	; 0x44
     396:	3301      	adds	r3, #1
     398:	d101      	bne.n	39e <xQueueGenericSend+0x8e>
     39a:	2300      	movs	r3, #0
     39c:	6463      	str	r3, [r4, #68]	; 0x44
     39e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     3a0:	3301      	adds	r3, #1
     3a2:	d101      	bne.n	3a8 <xQueueGenericSend+0x98>
     3a4:	2300      	movs	r3, #0
     3a6:	64a3      	str	r3, [r4, #72]	; 0x48
     3a8:	4b1b      	ldr	r3, [pc, #108]	; (418 <xQueueGenericSend+0x108>)
     3aa:	4798      	blx	r3

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
     3ac:	a804      	add	r0, sp, #16
     3ae:	a903      	add	r1, sp, #12
     3b0:	4b1c      	ldr	r3, [pc, #112]	; (424 <xQueueGenericSend+0x114>)
     3b2:	4798      	blx	r3
     3b4:	2800      	cmp	r0, #0
     3b6:	d11d      	bne.n	3f4 <xQueueGenericSend+0xe4>

static signed portBASE_TYPE prvIsQueueFull( const xQUEUE *pxQueue )
{
signed portBASE_TYPE xReturn;

	taskENTER_CRITICAL();
     3b8:	4b13      	ldr	r3, [pc, #76]	; (408 <xQueueGenericSend+0xf8>)
     3ba:	4798      	blx	r3
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
     3bc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     3be:	469a      	mov	sl, r3
     3c0:	6be6      	ldr	r6, [r4, #60]	; 0x3c
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
     3c2:	4b15      	ldr	r3, [pc, #84]	; (418 <xQueueGenericSend+0x108>)
     3c4:	4798      	blx	r3
		prvLockQueue( pxQueue );

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
		{
			if( prvIsQueueFull( pxQueue ) != pdFALSE )
     3c6:	45b2      	cmp	sl, r6
     3c8:	d10e      	bne.n	3e8 <xQueueGenericSend+0xd8>
			{
				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
     3ca:	1c20      	adds	r0, r4, #0
     3cc:	3010      	adds	r0, #16
     3ce:	9903      	ldr	r1, [sp, #12]
     3d0:	4b15      	ldr	r3, [pc, #84]	; (428 <xQueueGenericSend+0x118>)
     3d2:	4798      	blx	r3
				/* Unlocking the queue means queue events can effect the
				event list.  It is possible	that interrupts occurring now
				remove this task from the event	list again - but as the
				scheduler is suspended the task will go onto the pending
				ready last instead of the actual ready list. */
				prvUnlockQueue( pxQueue );
     3d4:	1c20      	adds	r0, r4, #0
     3d6:	4b15      	ldr	r3, [pc, #84]	; (42c <xQueueGenericSend+0x11c>)
     3d8:	4798      	blx	r3
				/* Resuming the scheduler will move tasks from the pending
				ready list into the ready list - so it is feasible that this
				task is already in a ready list before it yields - in which
				case the yield will not cause a context switch unless there
				is also a higher priority task in the pending ready list. */
				if( xTaskResumeAll() == pdFALSE )
     3da:	4b15      	ldr	r3, [pc, #84]	; (430 <xQueueGenericSend+0x120>)
     3dc:	4798      	blx	r3
     3de:	2800      	cmp	r0, #0
     3e0:	d1ac      	bne.n	33c <xQueueGenericSend+0x2c>
				{
					portYIELD_WITHIN_API();
     3e2:	4b0c      	ldr	r3, [pc, #48]	; (414 <xQueueGenericSend+0x104>)
     3e4:	4798      	blx	r3
     3e6:	e7a9      	b.n	33c <xQueueGenericSend+0x2c>
				}
			}
			else
			{
				/* Try again. */
				prvUnlockQueue( pxQueue );
     3e8:	1c20      	adds	r0, r4, #0
     3ea:	4b10      	ldr	r3, [pc, #64]	; (42c <xQueueGenericSend+0x11c>)
     3ec:	4798      	blx	r3
				( void ) xTaskResumeAll();
     3ee:	4b10      	ldr	r3, [pc, #64]	; (430 <xQueueGenericSend+0x120>)
     3f0:	4798      	blx	r3
     3f2:	e7a3      	b.n	33c <xQueueGenericSend+0x2c>
			}
		}
		else
		{
			/* The timeout has expired. */
			prvUnlockQueue( pxQueue );
     3f4:	1c20      	adds	r0, r4, #0
     3f6:	4b0d      	ldr	r3, [pc, #52]	; (42c <xQueueGenericSend+0x11c>)
     3f8:	4798      	blx	r3
			( void ) xTaskResumeAll();
     3fa:	4b0d      	ldr	r3, [pc, #52]	; (430 <xQueueGenericSend+0x120>)
     3fc:	4798      	blx	r3

			/* Return to the original privilege level before exiting the
			function. */
			traceQUEUE_SEND_FAILED( pxQueue );
			return errQUEUE_FULL;
     3fe:	2000      	movs	r0, #0
		}
	}
}
     400:	b006      	add	sp, #24
     402:	bc04      	pop	{r2}
     404:	4692      	mov	sl, r2
     406:	bdf0      	pop	{r4, r5, r6, r7, pc}
     408:	00000f2d 	.word	0x00000f2d
     40c:	00000115 	.word	0x00000115
     410:	00000cc5 	.word	0x00000cc5
     414:	00000f15 	.word	0x00000f15
     418:	00000f45 	.word	0x00000f45
     41c:	00000d41 	.word	0x00000d41
     420:	0000094d 	.word	0x0000094d
     424:	00000d61 	.word	0x00000d61
     428:	00000c85 	.word	0x00000c85
     42c:	000001ad 	.word	0x000001ad
     430:	00000a99 	.word	0x00000a99

00000434 <xQueueGenericSendFromISR>:

#endif /* configUSE_ALTERNATIVE_API */
/*-----------------------------------------------------------*/

signed portBASE_TYPE xQueueGenericSendFromISR( xQueueHandle xQueue, const void * const pvItemToQueue, signed portBASE_TYPE *pxHigherPriorityTaskWoken, portBASE_TYPE xCopyPosition )
{
     434:	b570      	push	{r4, r5, r6, lr}
signed portBASE_TYPE xReturn;
unsigned portBASE_TYPE uxSavedInterruptStatus;
xQUEUE *pxQueue;

	pxQueue = ( xQUEUE * ) xQueue;
	configASSERT( pxQueue );
     436:	2800      	cmp	r0, #0
     438:	d101      	bne.n	43e <xQueueGenericSendFromISR+0xa>
     43a:	b672      	cpsid	i
     43c:	e7fe      	b.n	43c <xQueueGenericSendFromISR+0x8>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U ) ) );
     43e:	2900      	cmp	r1, #0
     440:	d104      	bne.n	44c <xQueueGenericSendFromISR+0x18>
     442:	6c04      	ldr	r4, [r0, #64]	; 0x40
     444:	2c00      	cmp	r4, #0
     446:	d001      	beq.n	44c <xQueueGenericSendFromISR+0x18>
     448:	b672      	cpsid	i
     44a:	e7fe      	b.n	44a <xQueueGenericSendFromISR+0x16>
	/* Similar to xQueueGenericSend, except we don't block if there is no room
	in the queue.  Also we don't directly wake a task that was blocked on a
	queue read, instead we return a flag to say whether a context switch is
	required or not (i.e. has a task with a higher priority than us been woken
	by this	post). */
	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
     44c:	b672      	cpsid	i
	{
		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
     44e:	6b84      	ldr	r4, [r0, #56]	; 0x38
			xReturn = pdPASS;
		}
		else
		{
			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
			xReturn = errQUEUE_FULL;
     450:	2500      	movs	r5, #0
	queue read, instead we return a flag to say whether a context switch is
	required or not (i.e. has a task with a higher priority than us been woken
	by this	post). */
	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
	{
		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
     452:	6bc6      	ldr	r6, [r0, #60]	; 0x3c
     454:	42b4      	cmp	r4, r6
     456:	d21c      	bcs.n	492 <xQueueGenericSendFromISR+0x5e>
     458:	1c16      	adds	r6, r2, #0
     45a:	1c04      	adds	r4, r0, #0
		{
			traceQUEUE_SEND_FROM_ISR( pxQueue );

			prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
     45c:	1c1a      	adds	r2, r3, #0
     45e:	4b0e      	ldr	r3, [pc, #56]	; (498 <xQueueGenericSendFromISR+0x64>)
     460:	4798      	blx	r3

			/* If the queue is locked we do not alter the event list.  This will
			be done when the queue is unlocked later. */
			if( pxQueue->xTxLock == queueUNLOCKED )
     462:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     464:	3301      	adds	r3, #1
     466:	d10e      	bne.n	486 <xQueueGenericSendFromISR+0x52>
						}
					}
				}
				#else /* configUSE_QUEUE_SETS */
				{
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     468:	6a63      	ldr	r3, [r4, #36]	; 0x24
				/* Increment the lock count so the task that unlocks the queue
				knows that data was posted while it was locked. */
				++( pxQueue->xTxLock );
			}

			xReturn = pdPASS;
     46a:	3501      	adds	r5, #1
						}
					}
				}
				#else /* configUSE_QUEUE_SETS */
				{
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     46c:	2b00      	cmp	r3, #0
     46e:	d010      	beq.n	492 <xQueueGenericSendFromISR+0x5e>
					{
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     470:	1c20      	adds	r0, r4, #0
     472:	3024      	adds	r0, #36	; 0x24
     474:	4b09      	ldr	r3, [pc, #36]	; (49c <xQueueGenericSendFromISR+0x68>)
     476:	4798      	blx	r3
     478:	2800      	cmp	r0, #0
     47a:	d00a      	beq.n	492 <xQueueGenericSendFromISR+0x5e>
						{
							/* The task waiting has a higher priority so record that a
							context	switch is required. */
							if( pxHigherPriorityTaskWoken != NULL )
     47c:	2e00      	cmp	r6, #0
     47e:	d007      	beq.n	490 <xQueueGenericSendFromISR+0x5c>
							{
								*pxHigherPriorityTaskWoken = pdTRUE;
     480:	2301      	movs	r3, #1
     482:	6033      	str	r3, [r6, #0]
     484:	e005      	b.n	492 <xQueueGenericSendFromISR+0x5e>
			}
			else
			{
				/* Increment the lock count so the task that unlocks the queue
				knows that data was posted while it was locked. */
				++( pxQueue->xTxLock );
     486:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     488:	3301      	adds	r3, #1
     48a:	64a3      	str	r3, [r4, #72]	; 0x48
			}

			xReturn = pdPASS;
     48c:	2501      	movs	r5, #1
     48e:	e000      	b.n	492 <xQueueGenericSendFromISR+0x5e>
     490:	2501      	movs	r5, #1
		{
			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
			xReturn = errQUEUE_FULL;
		}
	}
	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
     492:	b662      	cpsie	i

	return xReturn;
}
     494:	1c28      	adds	r0, r5, #0
     496:	bd70      	pop	{r4, r5, r6, pc}
     498:	00000115 	.word	0x00000115
     49c:	00000cc5 	.word	0x00000cc5

000004a0 <xQueueGenericReceive>:
/*-----------------------------------------------------------*/

signed portBASE_TYPE xQueueGenericReceive( xQueueHandle xQueue, void * const pvBuffer, portTickType xTicksToWait, portBASE_TYPE xJustPeeking )
{
     4a0:	b5f0      	push	{r4, r5, r6, r7, lr}
     4a2:	464f      	mov	r7, r9
     4a4:	b480      	push	{r7}
     4a6:	b084      	sub	sp, #16
     4a8:	9201      	str	r2, [sp, #4]
xTimeOutType xTimeOut;
signed char *pcOriginalReadPosition;
xQUEUE *pxQueue;

	pxQueue = ( xQUEUE * ) xQueue;
	configASSERT( pxQueue );
     4aa:	2800      	cmp	r0, #0
     4ac:	d101      	bne.n	4b2 <xQueueGenericReceive+0x12>
     4ae:	b672      	cpsid	i
     4b0:	e7fe      	b.n	4b0 <xQueueGenericReceive+0x10>
     4b2:	2700      	movs	r7, #0
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( unsigned portBASE_TYPE ) 0U ) ) );
     4b4:	2900      	cmp	r1, #0
     4b6:	d105      	bne.n	4c4 <xQueueGenericReceive+0x24>
     4b8:	6c02      	ldr	r2, [r0, #64]	; 0x40
     4ba:	2a00      	cmp	r2, #0
     4bc:	d001      	beq.n	4c2 <xQueueGenericReceive+0x22>
     4be:	b672      	cpsid	i
     4c0:	e7fe      	b.n	4c0 <xQueueGenericReceive+0x20>
     4c2:	2700      	movs	r7, #0
     4c4:	1c1d      	adds	r5, r3, #0
     4c6:	9100      	str	r1, [sp, #0]
     4c8:	1c04      	adds	r4, r0, #0
	statements within the function itself.  This is done in the interest
	of execution time efficiency. */

	for( ;; )
	{
		taskENTER_CRITICAL();
     4ca:	4e44      	ldr	r6, [pc, #272]	; (5dc <xQueueGenericReceive+0x13c>)
     4cc:	47b0      	blx	r6
		{
			/* Is there data in the queue now?  To be running we must be
			the highest priority task wanting to access the queue. */
			if( pxQueue->uxMessagesWaiting > ( unsigned portBASE_TYPE ) 0 )
     4ce:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     4d0:	2b00      	cmp	r3, #0
     4d2:	d02b      	beq.n	52c <xQueueGenericReceive+0x8c>
			{
				/* Remember our read position in case we are just peeking. */
				pcOriginalReadPosition = pxQueue->pcReadFrom;
     4d4:	68e7      	ldr	r7, [r4, #12]

				prvCopyDataFromQueue( pxQueue, pvBuffer );
     4d6:	1c20      	adds	r0, r4, #0
     4d8:	9900      	ldr	r1, [sp, #0]
     4da:	4b41      	ldr	r3, [pc, #260]	; (5e0 <xQueueGenericReceive+0x140>)
     4dc:	4798      	blx	r3

				if( xJustPeeking == pdFALSE )
     4de:	2d00      	cmp	r5, #0
     4e0:	d114      	bne.n	50c <xQueueGenericReceive+0x6c>
				{
					traceQUEUE_RECEIVE( pxQueue );

					/* We are actually removing data. */
					--( pxQueue->uxMessagesWaiting );
     4e2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     4e4:	3b01      	subs	r3, #1
     4e6:	63a3      	str	r3, [r4, #56]	; 0x38

					#if ( configUSE_MUTEXES == 1 )
					{
						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
     4e8:	6823      	ldr	r3, [r4, #0]
     4ea:	2b00      	cmp	r3, #0
     4ec:	d102      	bne.n	4f4 <xQueueGenericReceive+0x54>
						{
							/* Record the information required to implement
							priority inheritance should it become necessary. */
							pxQueue->pxMutexHolder = xTaskGetCurrentTaskHandle();
     4ee:	4b3d      	ldr	r3, [pc, #244]	; (5e4 <xQueueGenericReceive+0x144>)
     4f0:	4798      	blx	r3
     4f2:	6060      	str	r0, [r4, #4]
						}
					}
					#endif

					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
     4f4:	6923      	ldr	r3, [r4, #16]
     4f6:	2b00      	cmp	r3, #0
     4f8:	d014      	beq.n	524 <xQueueGenericReceive+0x84>
					{
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) == pdTRUE )
     4fa:	1c20      	adds	r0, r4, #0
     4fc:	3010      	adds	r0, #16
     4fe:	4b3a      	ldr	r3, [pc, #232]	; (5e8 <xQueueGenericReceive+0x148>)
     500:	4798      	blx	r3
     502:	2801      	cmp	r0, #1
     504:	d10e      	bne.n	524 <xQueueGenericReceive+0x84>
						{
							portYIELD_WITHIN_API();
     506:	4b39      	ldr	r3, [pc, #228]	; (5ec <xQueueGenericReceive+0x14c>)
     508:	4798      	blx	r3
     50a:	e00b      	b.n	524 <xQueueGenericReceive+0x84>
				{
					traceQUEUE_PEEK( pxQueue );

					/* The data is not being removed, so reset the read
					pointer. */
					pxQueue->pcReadFrom = pcOriginalReadPosition;
     50c:	60e7      	str	r7, [r4, #12]

					/* The data is being left in the queue, so see if there are
					any other tasks waiting for the data. */
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
     50e:	6a63      	ldr	r3, [r4, #36]	; 0x24
     510:	2b00      	cmp	r3, #0
     512:	d007      	beq.n	524 <xQueueGenericReceive+0x84>
					{
						/* Tasks that are removed from the event list will get added to
						the pending ready list as the scheduler is still suspended. */
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
     514:	1c20      	adds	r0, r4, #0
     516:	3024      	adds	r0, #36	; 0x24
     518:	4b33      	ldr	r3, [pc, #204]	; (5e8 <xQueueGenericReceive+0x148>)
     51a:	4798      	blx	r3
     51c:	2800      	cmp	r0, #0
     51e:	d001      	beq.n	524 <xQueueGenericReceive+0x84>
						{
							/* The task waiting has a higher priority than this task. */
							portYIELD_WITHIN_API();
     520:	4b32      	ldr	r3, [pc, #200]	; (5ec <xQueueGenericReceive+0x14c>)
     522:	4798      	blx	r3
						}
					}
				}

				taskEXIT_CRITICAL();
     524:	4b32      	ldr	r3, [pc, #200]	; (5f0 <xQueueGenericReceive+0x150>)
     526:	4798      	blx	r3
				return pdPASS;
     528:	2001      	movs	r0, #1
     52a:	e052      	b.n	5d2 <xQueueGenericReceive+0x132>
			}
			else
			{
				if( xTicksToWait == ( portTickType ) 0 )
     52c:	9b01      	ldr	r3, [sp, #4]
     52e:	2b00      	cmp	r3, #0
     530:	d103      	bne.n	53a <xQueueGenericReceive+0x9a>
				{
					/* The queue was empty and no block time is specified (or
					the block time has expired) so leave now. */
					taskEXIT_CRITICAL();
     532:	4b2f      	ldr	r3, [pc, #188]	; (5f0 <xQueueGenericReceive+0x150>)
     534:	4798      	blx	r3
					traceQUEUE_RECEIVE_FAILED( pxQueue );
					return errQUEUE_EMPTY;
     536:	2000      	movs	r0, #0
     538:	e04b      	b.n	5d2 <xQueueGenericReceive+0x132>
				}
				else if( xEntryTimeSet == pdFALSE )
     53a:	2f00      	cmp	r7, #0
     53c:	d103      	bne.n	546 <xQueueGenericReceive+0xa6>
				{
					/* The queue was empty and a block time was specified so
					configure the timeout structure. */
					vTaskSetTimeOutState( &xTimeOut );
     53e:	a802      	add	r0, sp, #8
     540:	4b2c      	ldr	r3, [pc, #176]	; (5f4 <xQueueGenericReceive+0x154>)
     542:	4798      	blx	r3
					xEntryTimeSet = pdTRUE;
     544:	3701      	adds	r7, #1
				}
			}
		}
		taskEXIT_CRITICAL();
     546:	4b2a      	ldr	r3, [pc, #168]	; (5f0 <xQueueGenericReceive+0x150>)
     548:	4798      	blx	r3

		/* Interrupts and other tasks can send to and receive from the queue
		now the critical section has been exited. */

		vTaskSuspendAll();
     54a:	4b2b      	ldr	r3, [pc, #172]	; (5f8 <xQueueGenericReceive+0x158>)
     54c:	4798      	blx	r3
		prvLockQueue( pxQueue );
     54e:	4b23      	ldr	r3, [pc, #140]	; (5dc <xQueueGenericReceive+0x13c>)
     550:	4798      	blx	r3
     552:	6c63      	ldr	r3, [r4, #68]	; 0x44
     554:	3301      	adds	r3, #1
     556:	d101      	bne.n	55c <xQueueGenericReceive+0xbc>
     558:	2300      	movs	r3, #0
     55a:	6463      	str	r3, [r4, #68]	; 0x44
     55c:	6ca3      	ldr	r3, [r4, #72]	; 0x48
     55e:	3301      	adds	r3, #1
     560:	d101      	bne.n	566 <xQueueGenericReceive+0xc6>
     562:	2300      	movs	r3, #0
     564:	64a3      	str	r3, [r4, #72]	; 0x48
     566:	4b22      	ldr	r3, [pc, #136]	; (5f0 <xQueueGenericReceive+0x150>)
     568:	4798      	blx	r3

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
     56a:	a802      	add	r0, sp, #8
     56c:	a901      	add	r1, sp, #4
     56e:	4b23      	ldr	r3, [pc, #140]	; (5fc <xQueueGenericReceive+0x15c>)
     570:	4798      	blx	r3
     572:	2800      	cmp	r0, #0
     574:	d127      	bne.n	5c6 <xQueueGenericReceive+0x126>

static signed portBASE_TYPE prvIsQueueEmpty( const xQUEUE *pxQueue )
{
signed portBASE_TYPE xReturn;

	taskENTER_CRITICAL();
     576:	4b19      	ldr	r3, [pc, #100]	; (5dc <xQueueGenericReceive+0x13c>)
     578:	4798      	blx	r3
	{
		if( pxQueue->uxMessagesWaiting == 0 )
     57a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
     57c:	4699      	mov	r9, r3
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
     57e:	4b1c      	ldr	r3, [pc, #112]	; (5f0 <xQueueGenericReceive+0x150>)
     580:	4798      	blx	r3
		prvLockQueue( pxQueue );

		/* Update the timeout state to see if it has expired yet. */
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
		{
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
     582:	464b      	mov	r3, r9
     584:	2b00      	cmp	r3, #0
     586:	d118      	bne.n	5ba <xQueueGenericReceive+0x11a>
			{
				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );

				#if ( configUSE_MUTEXES == 1 )
				{
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
     588:	6823      	ldr	r3, [r4, #0]
     58a:	2b00      	cmp	r3, #0
     58c:	d106      	bne.n	59c <xQueueGenericReceive+0xfc>
					{
						portENTER_CRITICAL();
     58e:	4b13      	ldr	r3, [pc, #76]	; (5dc <xQueueGenericReceive+0x13c>)
     590:	4798      	blx	r3
						{
							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
     592:	6860      	ldr	r0, [r4, #4]
     594:	4b1a      	ldr	r3, [pc, #104]	; (600 <xQueueGenericReceive+0x160>)
     596:	4798      	blx	r3
						}
						portEXIT_CRITICAL();
     598:	4b15      	ldr	r3, [pc, #84]	; (5f0 <xQueueGenericReceive+0x150>)
     59a:	4798      	blx	r3
					}
				}
				#endif

				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
     59c:	1c20      	adds	r0, r4, #0
     59e:	3024      	adds	r0, #36	; 0x24
     5a0:	9901      	ldr	r1, [sp, #4]
     5a2:	4b18      	ldr	r3, [pc, #96]	; (604 <xQueueGenericReceive+0x164>)
     5a4:	4798      	blx	r3
				prvUnlockQueue( pxQueue );
     5a6:	1c20      	adds	r0, r4, #0
     5a8:	4b17      	ldr	r3, [pc, #92]	; (608 <xQueueGenericReceive+0x168>)
     5aa:	4798      	blx	r3
				if( xTaskResumeAll() == pdFALSE )
     5ac:	4b17      	ldr	r3, [pc, #92]	; (60c <xQueueGenericReceive+0x16c>)
     5ae:	4798      	blx	r3
     5b0:	2800      	cmp	r0, #0
     5b2:	d18b      	bne.n	4cc <xQueueGenericReceive+0x2c>
				{
					portYIELD_WITHIN_API();
     5b4:	4b0d      	ldr	r3, [pc, #52]	; (5ec <xQueueGenericReceive+0x14c>)
     5b6:	4798      	blx	r3
     5b8:	e788      	b.n	4cc <xQueueGenericReceive+0x2c>
				}
			}
			else
			{
				/* Try again. */
				prvUnlockQueue( pxQueue );
     5ba:	1c20      	adds	r0, r4, #0
     5bc:	4b12      	ldr	r3, [pc, #72]	; (608 <xQueueGenericReceive+0x168>)
     5be:	4798      	blx	r3
				( void ) xTaskResumeAll();
     5c0:	4b12      	ldr	r3, [pc, #72]	; (60c <xQueueGenericReceive+0x16c>)
     5c2:	4798      	blx	r3
     5c4:	e782      	b.n	4cc <xQueueGenericReceive+0x2c>
			}
		}
		else
		{
			prvUnlockQueue( pxQueue );
     5c6:	1c20      	adds	r0, r4, #0
     5c8:	4b0f      	ldr	r3, [pc, #60]	; (608 <xQueueGenericReceive+0x168>)
     5ca:	4798      	blx	r3
			( void ) xTaskResumeAll();
     5cc:	4b0f      	ldr	r3, [pc, #60]	; (60c <xQueueGenericReceive+0x16c>)
     5ce:	4798      	blx	r3
			traceQUEUE_RECEIVE_FAILED( pxQueue );
			return errQUEUE_EMPTY;
     5d0:	2000      	movs	r0, #0
		}
	}
}
     5d2:	b004      	add	sp, #16
     5d4:	bc04      	pop	{r2}
     5d6:	4691      	mov	r9, r2
     5d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
     5da:	46c0      	nop			; (mov r8, r8)
     5dc:	00000f2d 	.word	0x00000f2d
     5e0:	00000185 	.word	0x00000185
     5e4:	00000ddd 	.word	0x00000ddd
     5e8:	00000cc5 	.word	0x00000cc5
     5ec:	00000f15 	.word	0x00000f15
     5f0:	00000f45 	.word	0x00000f45
     5f4:	00000d41 	.word	0x00000d41
     5f8:	0000094d 	.word	0x0000094d
     5fc:	00000d61 	.word	0x00000d61
     600:	00000de9 	.word	0x00000de9
     604:	00000c85 	.word	0x00000c85
     608:	000001ad 	.word	0x000001ad
     60c:	00000a99 	.word	0x00000a99

00000610 <vListInitialise>:
void vListInitialise( xList *pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( xListItem * ) &( pxList->xListEnd );
     610:	1c03      	adds	r3, r0, #0
     612:	3308      	adds	r3, #8
     614:	6043      	str	r3, [r0, #4]

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
     616:	2201      	movs	r2, #1
     618:	4252      	negs	r2, r2
     61a:	6082      	str	r2, [r0, #8]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( xListItem * ) &( pxList->xListEnd );
     61c:	60c3      	str	r3, [r0, #12]
	pxList->xListEnd.pxPrevious = ( xListItem * ) &( pxList->xListEnd );
     61e:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( unsigned portBASE_TYPE ) 0U;
     620:	2300      	movs	r3, #0
     622:	6003      	str	r3, [r0, #0]
}
     624:	4770      	bx	lr
     626:	46c0      	nop			; (mov r8, r8)

00000628 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( xListItem *pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pvContainer = NULL;
     628:	2300      	movs	r3, #0
     62a:	6103      	str	r3, [r0, #16]
}
     62c:	4770      	bx	lr
     62e:	46c0      	nop			; (mov r8, r8)

00000630 <vListInsertEnd>:

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	pvListGetOwnerOfNextEntry.  This means it has to be the item pointed to by
	the pxIndex member. */
	pxIndex = pxList->pxIndex;
     630:	6843      	ldr	r3, [r0, #4]

	pxNewListItem->pxNext = pxIndex->pxNext;
     632:	685a      	ldr	r2, [r3, #4]
     634:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxPrevious = pxList->pxIndex;
     636:	6842      	ldr	r2, [r0, #4]
     638:	608a      	str	r2, [r1, #8]
	pxIndex->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
     63a:	685a      	ldr	r2, [r3, #4]
     63c:	6091      	str	r1, [r2, #8]
	pxIndex->pxNext = ( volatile xListItem * ) pxNewListItem;
     63e:	6059      	str	r1, [r3, #4]
	pxList->pxIndex = ( volatile xListItem * ) pxNewListItem;
     640:	6041      	str	r1, [r0, #4]

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;
     642:	6108      	str	r0, [r1, #16]

	( pxList->uxNumberOfItems )++;
     644:	6803      	ldr	r3, [r0, #0]
     646:	3301      	adds	r3, #1
     648:	6003      	str	r3, [r0, #0]
}
     64a:	4770      	bx	lr

0000064c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( xList *pxList, xListItem *pxNewListItem )
{
     64c:	b510      	push	{r4, lr}
volatile xListItem *pxIterator;
portTickType xValueOfInsertion;

	/* Insert the new list item into the list, sorted in ulListItem order. */
	xValueOfInsertion = pxNewListItem->xItemValue;
     64e:	680c      	ldr	r4, [r1, #0]
	are stored in ready lists (all of which have the same ulListItem value)
	get an equal share of the CPU.  However, if the xItemValue is the same as
	the back marker the iteration loop below will not end.  This means we need
	to guard against this by checking the value first and modifying the
	algorithm slightly if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
     650:	1c63      	adds	r3, r4, #1
     652:	d101      	bne.n	658 <vListInsert+0xc>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
     654:	6903      	ldr	r3, [r0, #16]
     656:	e00a      	b.n	66e <vListInsert+0x22>
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		See http://www.freertos.org/FAQHelp.html for more tips.
		**********************************************************************/

		for( pxIterator = ( xListItem * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext )
     658:	1c03      	adds	r3, r0, #0
     65a:	3308      	adds	r3, #8
     65c:	68c2      	ldr	r2, [r0, #12]
     65e:	6812      	ldr	r2, [r2, #0]
     660:	4294      	cmp	r4, r2
     662:	d304      	bcc.n	66e <vListInsert+0x22>
     664:	685b      	ldr	r3, [r3, #4]
     666:	685a      	ldr	r2, [r3, #4]
     668:	6812      	ldr	r2, [r2, #0]
     66a:	4294      	cmp	r4, r2
     66c:	d2fa      	bcs.n	664 <vListInsert+0x18>
			/* There is nothing to do here, we are just iterating to the
			wanted insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
     66e:	685a      	ldr	r2, [r3, #4]
     670:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = ( volatile xListItem * ) pxNewListItem;
     672:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
     674:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = ( volatile xListItem * ) pxNewListItem;
     676:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;
     678:	6108      	str	r0, [r1, #16]

	( pxList->uxNumberOfItems )++;
     67a:	6803      	ldr	r3, [r0, #0]
     67c:	3301      	adds	r3, #1
     67e:	6003      	str	r3, [r0, #0]
}
     680:	bd10      	pop	{r4, pc}
     682:	46c0      	nop			; (mov r8, r8)

00000684 <uxListRemove>:

unsigned portBASE_TYPE uxListRemove( xListItem *pxItemToRemove )
{
xList * pxList;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
     684:	6843      	ldr	r3, [r0, #4]
     686:	6882      	ldr	r2, [r0, #8]
     688:	609a      	str	r2, [r3, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
     68a:	6883      	ldr	r3, [r0, #8]
     68c:	6842      	ldr	r2, [r0, #4]
     68e:	605a      	str	r2, [r3, #4]

	/* The list item knows which list it is in.  Obtain the list from the list
	item. */
	pxList = ( xList * ) pxItemToRemove->pvContainer;
     690:	6903      	ldr	r3, [r0, #16]

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
     692:	685a      	ldr	r2, [r3, #4]
     694:	4282      	cmp	r2, r0
     696:	d101      	bne.n	69c <uxListRemove+0x18>
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
     698:	6882      	ldr	r2, [r0, #8]
     69a:	605a      	str	r2, [r3, #4]
	}

	pxItemToRemove->pvContainer = NULL;
     69c:	2200      	movs	r2, #0
     69e:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
     6a0:	681a      	ldr	r2, [r3, #0]
     6a2:	3a01      	subs	r2, #1
     6a4:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
     6a6:	6818      	ldr	r0, [r3, #0]
}
     6a8:	4770      	bx	lr
     6aa:	46c0      	nop			; (mov r8, r8)

000006ac <prvIdleTask>:
				}
				xTaskResumeAll();
			}
		}
		#endif /* configUSE_TICKLESS_IDLE */
	}
     6ac:	e7fe      	b.n	6ac <prvIdleTask>
     6ae:	46c0      	nop			; (mov r8, r8)

000006b0 <prvAddCurrentTaskToDelayedList>:
	#endif /* vTaskDelete */
}
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( portTickType xTimeToWake )
{
     6b0:	b510      	push	{r4, lr}
     6b2:	1e04      	subs	r4, r0, #0
	/* The list item will be inserted in wake time order. */
	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
     6b4:	4b0e      	ldr	r3, [pc, #56]	; (6f0 <prvAddCurrentTaskToDelayedList+0x40>)
     6b6:	681b      	ldr	r3, [r3, #0]
     6b8:	6058      	str	r0, [r3, #4]

	if( xTimeToWake < xTickCount )
     6ba:	4b0e      	ldr	r3, [pc, #56]	; (6f4 <prvAddCurrentTaskToDelayedList+0x44>)
     6bc:	681b      	ldr	r3, [r3, #0]
     6be:	429c      	cmp	r4, r3
     6c0:	d207      	bcs.n	6d2 <prvAddCurrentTaskToDelayedList+0x22>
	{
		/* Wake time has overflowed.  Place this item in the overflow list. */
		vListInsert( ( xList * ) pxOverflowDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
     6c2:	4b0d      	ldr	r3, [pc, #52]	; (6f8 <prvAddCurrentTaskToDelayedList+0x48>)
     6c4:	6818      	ldr	r0, [r3, #0]
     6c6:	4b0a      	ldr	r3, [pc, #40]	; (6f0 <prvAddCurrentTaskToDelayedList+0x40>)
     6c8:	6819      	ldr	r1, [r3, #0]
     6ca:	3104      	adds	r1, #4
     6cc:	4b0b      	ldr	r3, [pc, #44]	; (6fc <prvAddCurrentTaskToDelayedList+0x4c>)
     6ce:	4798      	blx	r3
     6d0:	e00c      	b.n	6ec <prvAddCurrentTaskToDelayedList+0x3c>
	}
	else
	{
		/* The wake time has not overflowed, so we can use the current block list. */
		vListInsert( ( xList * ) pxDelayedTaskList, ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) );
     6d2:	4b0b      	ldr	r3, [pc, #44]	; (700 <prvAddCurrentTaskToDelayedList+0x50>)
     6d4:	6818      	ldr	r0, [r3, #0]
     6d6:	4b06      	ldr	r3, [pc, #24]	; (6f0 <prvAddCurrentTaskToDelayedList+0x40>)
     6d8:	6819      	ldr	r1, [r3, #0]
     6da:	3104      	adds	r1, #4
     6dc:	4b07      	ldr	r3, [pc, #28]	; (6fc <prvAddCurrentTaskToDelayedList+0x4c>)
     6de:	4798      	blx	r3

		/* If the task entering the blocked state was placed at the head of the
		list of blocked tasks then xNextTaskUnblockTime needs to be updated
		too. */
		if( xTimeToWake < xNextTaskUnblockTime )
     6e0:	4b08      	ldr	r3, [pc, #32]	; (704 <prvAddCurrentTaskToDelayedList+0x54>)
     6e2:	681b      	ldr	r3, [r3, #0]
     6e4:	429c      	cmp	r4, r3
     6e6:	d201      	bcs.n	6ec <prvAddCurrentTaskToDelayedList+0x3c>
		{
			xNextTaskUnblockTime = xTimeToWake;
     6e8:	4b06      	ldr	r3, [pc, #24]	; (704 <prvAddCurrentTaskToDelayedList+0x54>)
     6ea:	601c      	str	r4, [r3, #0]
		}
	}
}
     6ec:	bd10      	pop	{r4, pc}
     6ee:	46c0      	nop			; (mov r8, r8)
     6f0:	20000230 	.word	0x20000230
     6f4:	20000248 	.word	0x20000248
     6f8:	2000024c 	.word	0x2000024c
     6fc:	0000064d 	.word	0x0000064d
     700:	20000194 	.word	0x20000194
     704:	200000b4 	.word	0x200000b4

00000708 <xTaskGenericCreate>:
#endif

/*lint +e956 */

signed portBASE_TYPE xTaskGenericCreate( pdTASK_CODE pxTaskCode, const signed char * const pcName, unsigned short usStackDepth, void *pvParameters, unsigned portBASE_TYPE uxPriority, xTaskHandle *pxCreatedTask, portSTACK_TYPE *puxStackBuffer, const xMemoryRegion * const xRegions )
{
     708:	b5f0      	push	{r4, r5, r6, r7, lr}
     70a:	464f      	mov	r7, r9
     70c:	4646      	mov	r6, r8
     70e:	b4c0      	push	{r6, r7}
     710:	b085      	sub	sp, #20
     712:	9c0c      	ldr	r4, [sp, #48]	; 0x30
signed portBASE_TYPE xReturn;
tskTCB * pxNewTCB;

	configASSERT( pxTaskCode );
     714:	2800      	cmp	r0, #0
     716:	d101      	bne.n	71c <xTaskGenericCreate+0x14>
     718:	b672      	cpsid	i
     71a:	e7fe      	b.n	71a <xTaskGenericCreate+0x12>
	configASSERT( ( ( uxPriority & ( ~portPRIVILEGE_BIT ) ) < configMAX_PRIORITIES ) );
     71c:	2c05      	cmp	r4, #5
     71e:	d901      	bls.n	724 <xTaskGenericCreate+0x1c>
     720:	b672      	cpsid	i
     722:	e7fe      	b.n	722 <xTaskGenericCreate+0x1a>
     724:	9303      	str	r3, [sp, #12]
     726:	1c16      	adds	r6, r2, #0
     728:	1c0f      	adds	r7, r1, #0
     72a:	9002      	str	r0, [sp, #8]
{
tskTCB *pxNewTCB;

	/* Allocate space for the TCB.  Where the memory comes from depends on
	the implementation of the port malloc function. */
	pxNewTCB = ( tskTCB * ) pvPortMalloc( sizeof( tskTCB ) );
     72c:	2040      	movs	r0, #64	; 0x40
     72e:	4b59      	ldr	r3, [pc, #356]	; (894 <xTaskGenericCreate+0x18c>)
     730:	4798      	blx	r3
     732:	1e05      	subs	r5, r0, #0

	if( pxNewTCB != NULL )
     734:	d100      	bne.n	738 <xTaskGenericCreate+0x30>
     736:	e0a5      	b.n	884 <xTaskGenericCreate+0x17c>
	{
		/* Allocate space for the stack used by the task being created.
		The base of the stack memory stored in the TCB so the task can
		be deleted later if required. */
		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMallocAligned( ( ( ( size_t )usStackDepth ) * sizeof( portSTACK_TYPE ) ), puxStackBuffer );
     738:	9b0e      	ldr	r3, [sp, #56]	; 0x38
     73a:	2b00      	cmp	r3, #0
     73c:	d000      	beq.n	740 <xTaskGenericCreate+0x38>
     73e:	e09d      	b.n	87c <xTaskGenericCreate+0x174>
     740:	00b0      	lsls	r0, r6, #2
     742:	4b54      	ldr	r3, [pc, #336]	; (894 <xTaskGenericCreate+0x18c>)
     744:	4798      	blx	r3
     746:	6328      	str	r0, [r5, #48]	; 0x30

		if( pxNewTCB->pxStack == NULL )
     748:	2800      	cmp	r0, #0
     74a:	d103      	bne.n	754 <xTaskGenericCreate+0x4c>
		{
			/* Could not allocate the stack.  Delete the allocated TCB. */
			vPortFree( pxNewTCB );
     74c:	1c28      	adds	r0, r5, #0
     74e:	4b52      	ldr	r3, [pc, #328]	; (898 <xTaskGenericCreate+0x190>)
     750:	4798      	blx	r3
     752:	e097      	b.n	884 <xTaskGenericCreate+0x17c>
			pxNewTCB = NULL;
		}
		else
		{
			/* Just to help debugging. */
			memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) usStackDepth * sizeof( portSTACK_TYPE ) );
     754:	00b2      	lsls	r2, r6, #2
     756:	21a5      	movs	r1, #165	; 0xa5
     758:	4b50      	ldr	r3, [pc, #320]	; (89c <xTaskGenericCreate+0x194>)
     75a:	4798      	blx	r3
		stack grows from high memory to low (as per the 80x86) or visa versa.
		portSTACK_GROWTH is used to make the result positive or negative as
		required by the port. */
		#if( portSTACK_GROWTH < 0 )
		{
			pxTopOfStack = pxNewTCB->pxStack + ( usStackDepth - ( unsigned short ) 1 );
     75c:	4b50      	ldr	r3, [pc, #320]	; (8a0 <xTaskGenericCreate+0x198>)
     75e:	18f3      	adds	r3, r6, r3
     760:	009b      	lsls	r3, r3, #2
     762:	6b2a      	ldr	r2, [r5, #48]	; 0x30
     764:	4694      	mov	ip, r2
     766:	4463      	add	r3, ip
			pxTopOfStack = ( portSTACK_TYPE * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ( portPOINTER_SIZE_TYPE ) ~portBYTE_ALIGNMENT_MASK  ) );
     768:	2207      	movs	r2, #7
     76a:	4393      	bics	r3, r2
     76c:	4698      	mov	r8, r3
{
	/* Store the function name in the TCB. */
	#if configMAX_TASK_NAME_LEN > 1
	{
		/* Don't bring strncpy into the build unnecessarily. */
		strncpy( ( char * ) pxTCB->pcTaskName, ( const char * ) pcName, ( unsigned short ) configMAX_TASK_NAME_LEN );
     76e:	1c28      	adds	r0, r5, #0
     770:	3034      	adds	r0, #52	; 0x34
     772:	1c39      	adds	r1, r7, #0
     774:	3201      	adds	r2, #1
     776:	4b4b      	ldr	r3, [pc, #300]	; (8a4 <xTaskGenericCreate+0x19c>)
     778:	4798      	blx	r3
	}
	#endif /* configMAX_TASK_NAME_LEN */
	pxTCB->pcTaskName[ ( unsigned short ) configMAX_TASK_NAME_LEN - ( unsigned short ) 1 ] = ( signed char ) '\0';
     77a:	2200      	movs	r2, #0
     77c:	233b      	movs	r3, #59	; 0x3b
     77e:	54ea      	strb	r2, [r5, r3]
     780:	1e27      	subs	r7, r4, #0
     782:	2f05      	cmp	r7, #5
     784:	d900      	bls.n	788 <xTaskGenericCreate+0x80>
     786:	2705      	movs	r7, #5
	if( uxPriority >= configMAX_PRIORITIES )
	{
		uxPriority = configMAX_PRIORITIES - ( unsigned portBASE_TYPE ) 1U;
	}

	pxTCB->uxPriority = uxPriority;
     788:	62ef      	str	r7, [r5, #44]	; 0x2c
	#if ( configUSE_MUTEXES == 1 )
	{
		pxTCB->uxBasePriority = uxPriority;
     78a:	63ef      	str	r7, [r5, #60]	; 0x3c
	}
	#endif /* configUSE_MUTEXES */

	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
     78c:	1d2b      	adds	r3, r5, #4
     78e:	9301      	str	r3, [sp, #4]
     790:	1c18      	adds	r0, r3, #0
     792:	4e45      	ldr	r6, [pc, #276]	; (8a8 <xTaskGenericCreate+0x1a0>)
     794:	47b0      	blx	r6
	vListInitialiseItem( &( pxTCB->xEventListItem ) );
     796:	1c28      	adds	r0, r5, #0
     798:	3018      	adds	r0, #24
     79a:	47b0      	blx	r6

	/* Set the pxTCB as a link back from the xListItem.  This is so we can get
	back to	the containing TCB from a generic item in a list. */
	listSET_LIST_ITEM_OWNER( &( pxTCB->xGenericListItem ), pxTCB );
     79c:	612d      	str	r5, [r5, #16]

	/* Event lists are always in priority order. */
	listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) uxPriority );
     79e:	2306      	movs	r3, #6
     7a0:	1bdb      	subs	r3, r3, r7
     7a2:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxTCB->xEventListItem ), pxTCB );
     7a4:	626d      	str	r5, [r5, #36]	; 0x24
		{
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivileged );
		}
		#else /* portUSING_MPU_WRAPPERS */
		{
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
     7a6:	4640      	mov	r0, r8
     7a8:	9902      	ldr	r1, [sp, #8]
     7aa:	9a03      	ldr	r2, [sp, #12]
     7ac:	4b3f      	ldr	r3, [pc, #252]	; (8ac <xTaskGenericCreate+0x1a4>)
     7ae:	4798      	blx	r3
     7b0:	6028      	str	r0, [r5, #0]
		}
		#endif /* portUSING_MPU_WRAPPERS */

		/* Check the alignment of the initialised stack. */
		portALIGNMENT_ASSERT_pxCurrentTCB( ( ( ( unsigned long ) pxNewTCB->pxTopOfStack & ( unsigned long ) portBYTE_ALIGNMENT_MASK ) == 0UL ) );
     7b2:	0743      	lsls	r3, r0, #29
     7b4:	d001      	beq.n	7ba <xTaskGenericCreate+0xb2>
     7b6:	b672      	cpsid	i
     7b8:	e7fe      	b.n	7b8 <xTaskGenericCreate+0xb0>

		if( ( void * ) pxCreatedTask != NULL )
     7ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
     7bc:	2b00      	cmp	r3, #0
     7be:	d000      	beq.n	7c2 <xTaskGenericCreate+0xba>
		{
			/* Pass the TCB out - in an anonymous way.  The calling function/
			task can use this as a handle to delete the task later if
			required.*/
			*pxCreatedTask = ( xTaskHandle ) pxNewTCB;
     7c0:	601d      	str	r5, [r3, #0]
		}

		/* We are going to manipulate the task queues to add this task to a
		ready list, so must make sure no interrupts occur. */
		taskENTER_CRITICAL();
     7c2:	4b3b      	ldr	r3, [pc, #236]	; (8b0 <xTaskGenericCreate+0x1a8>)
     7c4:	4798      	blx	r3
		{
			uxCurrentNumberOfTasks++;
     7c6:	4a3b      	ldr	r2, [pc, #236]	; (8b4 <xTaskGenericCreate+0x1ac>)
     7c8:	6813      	ldr	r3, [r2, #0]
     7ca:	3301      	adds	r3, #1
     7cc:	6013      	str	r3, [r2, #0]
			if( pxCurrentTCB == NULL )
     7ce:	4b3a      	ldr	r3, [pc, #232]	; (8b8 <xTaskGenericCreate+0x1b0>)
     7d0:	681b      	ldr	r3, [r3, #0]
     7d2:	2b00      	cmp	r3, #0
     7d4:	d11e      	bne.n	814 <xTaskGenericCreate+0x10c>
			{
				/* There are no other tasks, or all the other tasks are in
				the suspended state - make this the current task. */
				pxCurrentTCB =  pxNewTCB;
     7d6:	4b38      	ldr	r3, [pc, #224]	; (8b8 <xTaskGenericCreate+0x1b0>)
     7d8:	601d      	str	r5, [r3, #0]

				if( uxCurrentNumberOfTasks == ( unsigned portBASE_TYPE ) 1 )
     7da:	6813      	ldr	r3, [r2, #0]
     7dc:	2b01      	cmp	r3, #1
     7de:	d124      	bne.n	82a <xTaskGenericCreate+0x122>
     7e0:	4e36      	ldr	r6, [pc, #216]	; (8bc <xTaskGenericCreate+0x1b4>)
     7e2:	3377      	adds	r3, #119	; 0x77
     7e4:	4699      	mov	r9, r3
     7e6:	44b1      	add	r9, r6
{
unsigned portBASE_TYPE uxPriority;

	for( uxPriority = ( unsigned portBASE_TYPE ) 0U; uxPriority < configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
     7e8:	4f35      	ldr	r7, [pc, #212]	; (8c0 <xTaskGenericCreate+0x1b8>)
     7ea:	1c30      	adds	r0, r6, #0
     7ec:	47b8      	blx	r7
     7ee:	3614      	adds	r6, #20

static void prvInitialiseTaskLists( void )
{
unsigned portBASE_TYPE uxPriority;

	for( uxPriority = ( unsigned portBASE_TYPE ) 0U; uxPriority < configMAX_PRIORITIES; uxPriority++ )
     7f0:	454e      	cmp	r6, r9
     7f2:	d1fa      	bne.n	7ea <xTaskGenericCreate+0xe2>
	{
		vListInitialise( ( xList * ) &( pxReadyTasksLists[ uxPriority ] ) );
	}

	vListInitialise( ( xList * ) &xDelayedTaskList1 );
     7f4:	4b33      	ldr	r3, [pc, #204]	; (8c4 <xTaskGenericCreate+0x1bc>)
     7f6:	4699      	mov	r9, r3
     7f8:	1c18      	adds	r0, r3, #0
     7fa:	4e31      	ldr	r6, [pc, #196]	; (8c0 <xTaskGenericCreate+0x1b8>)
     7fc:	47b0      	blx	r6
	vListInitialise( ( xList * ) &xDelayedTaskList2 );
     7fe:	4f32      	ldr	r7, [pc, #200]	; (8c8 <xTaskGenericCreate+0x1c0>)
     800:	1c38      	adds	r0, r7, #0
     802:	47b0      	blx	r6
	vListInitialise( ( xList * ) &xPendingReadyList );
     804:	4831      	ldr	r0, [pc, #196]	; (8cc <xTaskGenericCreate+0x1c4>)
     806:	47b0      	blx	r6
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
     808:	4b31      	ldr	r3, [pc, #196]	; (8d0 <xTaskGenericCreate+0x1c8>)
     80a:	464a      	mov	r2, r9
     80c:	601a      	str	r2, [r3, #0]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
     80e:	4b31      	ldr	r3, [pc, #196]	; (8d4 <xTaskGenericCreate+0x1cc>)
     810:	601f      	str	r7, [r3, #0]
     812:	e00a      	b.n	82a <xTaskGenericCreate+0x122>
			else
			{
				/* If the scheduler is not already running, make this task the
				current task if it is the highest priority task to be created
				so far. */
				if( xSchedulerRunning == pdFALSE )
     814:	4b30      	ldr	r3, [pc, #192]	; (8d8 <xTaskGenericCreate+0x1d0>)
     816:	681b      	ldr	r3, [r3, #0]
     818:	2b00      	cmp	r3, #0
     81a:	d106      	bne.n	82a <xTaskGenericCreate+0x122>
				{
					if( pxCurrentTCB->uxPriority <= uxPriority )
     81c:	4b26      	ldr	r3, [pc, #152]	; (8b8 <xTaskGenericCreate+0x1b0>)
     81e:	681b      	ldr	r3, [r3, #0]
     820:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     822:	429c      	cmp	r4, r3
     824:	d301      	bcc.n	82a <xTaskGenericCreate+0x122>
					{
						pxCurrentTCB = pxNewTCB;
     826:	4b24      	ldr	r3, [pc, #144]	; (8b8 <xTaskGenericCreate+0x1b0>)
     828:	601d      	str	r5, [r3, #0]
				}
			}

			/* Remember the top priority to make context switching faster.  Use
			the priority in pxNewTCB as this has been capped to a valid value. */
			if( pxNewTCB->uxPriority > uxTopUsedPriority )
     82a:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
     82c:	4a2b      	ldr	r2, [pc, #172]	; (8dc <xTaskGenericCreate+0x1d4>)
     82e:	6812      	ldr	r2, [r2, #0]
     830:	4293      	cmp	r3, r2
     832:	d901      	bls.n	838 <xTaskGenericCreate+0x130>
			{
				uxTopUsedPriority = pxNewTCB->uxPriority;
     834:	4a29      	ldr	r2, [pc, #164]	; (8dc <xTaskGenericCreate+0x1d4>)
     836:	6013      	str	r3, [r2, #0]
			}

			uxTaskNumber++;
     838:	4929      	ldr	r1, [pc, #164]	; (8e0 <xTaskGenericCreate+0x1d8>)
     83a:	680a      	ldr	r2, [r1, #0]
     83c:	3201      	adds	r2, #1
     83e:	600a      	str	r2, [r1, #0]
				pxNewTCB->uxTCBNumber = uxTaskNumber;
			}
			#endif /* configUSE_TRACE_FACILITY */
			traceTASK_CREATE( pxNewTCB );

			prvAddTaskToReadyQueue( pxNewTCB );
     840:	4a28      	ldr	r2, [pc, #160]	; (8e4 <xTaskGenericCreate+0x1dc>)
     842:	6812      	ldr	r2, [r2, #0]
     844:	4293      	cmp	r3, r2
     846:	d901      	bls.n	84c <xTaskGenericCreate+0x144>
     848:	4a26      	ldr	r2, [pc, #152]	; (8e4 <xTaskGenericCreate+0x1dc>)
     84a:	6013      	str	r3, [r2, #0]
     84c:	0098      	lsls	r0, r3, #2
     84e:	18c3      	adds	r3, r0, r3
     850:	009b      	lsls	r3, r3, #2
     852:	481a      	ldr	r0, [pc, #104]	; (8bc <xTaskGenericCreate+0x1b4>)
     854:	18c0      	adds	r0, r0, r3
     856:	9901      	ldr	r1, [sp, #4]
     858:	4b23      	ldr	r3, [pc, #140]	; (8e8 <xTaskGenericCreate+0x1e0>)
     85a:	4798      	blx	r3

			xReturn = pdPASS;
			portSETUP_TCB( pxNewTCB );
		}
		taskEXIT_CRITICAL();
     85c:	4b23      	ldr	r3, [pc, #140]	; (8ec <xTaskGenericCreate+0x1e4>)
     85e:	4798      	blx	r3
		traceTASK_CREATE_FAILED();
	}

	if( xReturn == pdPASS )
	{
		if( xSchedulerRunning != pdFALSE )
     860:	4b1d      	ldr	r3, [pc, #116]	; (8d8 <xTaskGenericCreate+0x1d0>)
     862:	681b      	ldr	r3, [r3, #0]
     864:	2001      	movs	r0, #1
     866:	2b00      	cmp	r3, #0
     868:	d00e      	beq.n	888 <xTaskGenericCreate+0x180>
		{
			/* If the created task is of a higher priority than the current task
			then it should run now. */
			if( pxCurrentTCB->uxPriority < uxPriority )
     86a:	4b13      	ldr	r3, [pc, #76]	; (8b8 <xTaskGenericCreate+0x1b0>)
     86c:	681b      	ldr	r3, [r3, #0]
     86e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     870:	429c      	cmp	r4, r3
     872:	d909      	bls.n	888 <xTaskGenericCreate+0x180>
			{
				portYIELD_WITHIN_API();
     874:	4b1e      	ldr	r3, [pc, #120]	; (8f0 <xTaskGenericCreate+0x1e8>)
     876:	4798      	blx	r3
     878:	2001      	movs	r0, #1
     87a:	e005      	b.n	888 <xTaskGenericCreate+0x180>
	if( pxNewTCB != NULL )
	{
		/* Allocate space for the stack used by the task being created.
		The base of the stack memory stored in the TCB so the task can
		be deleted later if required. */
		pxNewTCB->pxStack = ( portSTACK_TYPE * ) pvPortMallocAligned( ( ( ( size_t )usStackDepth ) * sizeof( portSTACK_TYPE ) ), puxStackBuffer );
     87c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
     87e:	6303      	str	r3, [r0, #48]	; 0x30
     880:	1c18      	adds	r0, r3, #0
     882:	e767      	b.n	754 <xTaskGenericCreate+0x4c>
		}
		taskEXIT_CRITICAL();
	}
	else
	{
		xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
     884:	2001      	movs	r0, #1
     886:	4240      	negs	r0, r0
			}
		}
	}

	return xReturn;
}
     888:	b005      	add	sp, #20
     88a:	bc0c      	pop	{r2, r3}
     88c:	4690      	mov	r8, r2
     88e:	4699      	mov	r9, r3
     890:	bdf0      	pop	{r4, r5, r6, r7, pc}
     892:	46c0      	nop			; (mov r8, r8)
     894:	0000102d 	.word	0x0000102d
     898:	00001095 	.word	0x00001095
     89c:	0000871d 	.word	0x0000871d
     8a0:	3fffffff 	.word	0x3fffffff
     8a4:	00009ea7 	.word	0x00009ea7
     8a8:	00000629 	.word	0x00000629
     8ac:	00000ed5 	.word	0x00000ed5
     8b0:	00000f2d 	.word	0x00000f2d
     8b4:	20000270 	.word	0x20000270
     8b8:	20000230 	.word	0x20000230
     8bc:	200001b4 	.word	0x200001b4
     8c0:	00000611 	.word	0x00000611
     8c4:	20000258 	.word	0x20000258
     8c8:	200001a0 	.word	0x200001a0
     8cc:	20000234 	.word	0x20000234
     8d0:	20000194 	.word	0x20000194
     8d4:	2000024c 	.word	0x2000024c
     8d8:	20000198 	.word	0x20000198
     8dc:	20000274 	.word	0x20000274
     8e0:	20000254 	.word	0x20000254
     8e4:	20000250 	.word	0x20000250
     8e8:	00000631 	.word	0x00000631
     8ec:	00000f45 	.word	0x00000f45
     8f0:	00000f15 	.word	0x00000f15

000008f4 <vTaskStartScheduler>:

#endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
/*-----------------------------------------------------------*/

void vTaskStartScheduler( void )
{
     8f4:	b510      	push	{r4, lr}
     8f6:	b084      	sub	sp, #16
		xReturn = xTaskCreate( prvIdleTask, ( signed char * ) "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL, ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), &xIdleTaskHandle );
	}
	#else
	{
		/* Create the idle task without storing its handle. */
		xReturn = xTaskCreate( prvIdleTask, ( signed char * ) "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL, ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), NULL );
     8f8:	2300      	movs	r3, #0
     8fa:	9300      	str	r3, [sp, #0]
     8fc:	9301      	str	r3, [sp, #4]
     8fe:	9302      	str	r3, [sp, #8]
     900:	9303      	str	r3, [sp, #12]
     902:	480c      	ldr	r0, [pc, #48]	; (934 <vTaskStartScheduler+0x40>)
     904:	490c      	ldr	r1, [pc, #48]	; (938 <vTaskStartScheduler+0x44>)
     906:	2296      	movs	r2, #150	; 0x96
     908:	0052      	lsls	r2, r2, #1
     90a:	4c0c      	ldr	r4, [pc, #48]	; (93c <vTaskStartScheduler+0x48>)
     90c:	47a0      	blx	r4
			xReturn = xTimerCreateTimerTask();
		}
	}
	#endif /* configUSE_TIMERS */

	if( xReturn == pdPASS )
     90e:	2801      	cmp	r0, #1
     910:	d109      	bne.n	926 <vTaskStartScheduler+0x32>
		so interrupts will automatically get re-enabled when the first task
		starts to run.

		STEPPING THROUGH HERE USING A DEBUGGER CAN CAUSE BIG PROBLEMS IF THE
		DEBUGGER ALLOWS INTERRUPTS TO BE PROCESSED. */
		portDISABLE_INTERRUPTS();
     912:	b672      	cpsid	i

		xSchedulerRunning = pdTRUE;
     914:	2201      	movs	r2, #1
     916:	4b0a      	ldr	r3, [pc, #40]	; (940 <vTaskStartScheduler+0x4c>)
     918:	601a      	str	r2, [r3, #0]
		xTickCount = ( portTickType ) 0U;
     91a:	2200      	movs	r2, #0
     91c:	4b09      	ldr	r3, [pc, #36]	; (944 <vTaskStartScheduler+0x50>)
     91e:	601a      	str	r2, [r3, #0]
		the run time counter time base. */
		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();

		/* Setting up the timer tick is hardware specific and thus in the
		portable interface. */
		if( xPortStartScheduler() != pdFALSE )
     920:	4b09      	ldr	r3, [pc, #36]	; (948 <vTaskStartScheduler+0x54>)
     922:	4798      	blx	r3
     924:	e003      	b.n	92e <vTaskStartScheduler+0x3a>
	else
	{
		/* This line will only be reached if the kernel could not be started,
		because there was not enough FreeRTOS heap to create the idle task
		or the timer task. */
		configASSERT( xReturn );
     926:	2800      	cmp	r0, #0
     928:	d101      	bne.n	92e <vTaskStartScheduler+0x3a>
     92a:	b672      	cpsid	i
     92c:	e7fe      	b.n	92c <vTaskStartScheduler+0x38>
	}
}
     92e:	b004      	add	sp, #16
     930:	bd10      	pop	{r4, pc}
     932:	46c0      	nop			; (mov r8, r8)
     934:	000006ad 	.word	0x000006ad
     938:	0000d344 	.word	0x0000d344
     93c:	00000709 	.word	0x00000709
     940:	20000198 	.word	0x20000198
     944:	20000248 	.word	0x20000248
     948:	00000ff1 	.word	0x00000ff1

0000094c <vTaskSuspendAll>:

void vTaskSuspendAll( void )
{
	/* A critical section is not required as the variable is of type
	portBASE_TYPE. */
	++uxSchedulerSuspended;
     94c:	4a02      	ldr	r2, [pc, #8]	; (958 <vTaskSuspendAll+0xc>)
     94e:	6813      	ldr	r3, [r2, #0]
     950:	3301      	adds	r3, #1
     952:	6013      	str	r3, [r2, #0]
}
     954:	4770      	bx	lr
     956:	46c0      	nop			; (mov r8, r8)
     958:	2000022c 	.word	0x2000022c

0000095c <xTaskGetTickCount>:
	return xAlreadyYielded;
}
/*-----------------------------------------------------------*/

portTickType xTaskGetTickCount( void )
{
     95c:	b510      	push	{r4, lr}
portTickType xTicks;

	/* Critical section required if running on a 16 bit processor. */
	taskENTER_CRITICAL();
     95e:	4b04      	ldr	r3, [pc, #16]	; (970 <xTaskGetTickCount+0x14>)
     960:	4798      	blx	r3
	{
		xTicks = xTickCount;
     962:	4b04      	ldr	r3, [pc, #16]	; (974 <xTaskGetTickCount+0x18>)
     964:	681c      	ldr	r4, [r3, #0]
	}
	taskEXIT_CRITICAL();
     966:	4b04      	ldr	r3, [pc, #16]	; (978 <xTaskGetTickCount+0x1c>)
     968:	4798      	blx	r3

	return xTicks;
}
     96a:	1c20      	adds	r0, r4, #0
     96c:	bd10      	pop	{r4, pc}
     96e:	46c0      	nop			; (mov r8, r8)
     970:	00000f2d 	.word	0x00000f2d
     974:	20000248 	.word	0x20000248
     978:	00000f45 	.word	0x00000f45

0000097c <vTaskIncrementTick>:

#endif /* configUSE_TICKLESS_IDLE */
/*----------------------------------------------------------*/

void vTaskIncrementTick( void )
{
     97c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}

	/* Called by the portable layer each time a tick interrupt occurs.
	Increments the tick then checks to see if the new tick value will cause any
	tasks to be unblocked. */
	traceTASK_INCREMENT_TICK( xTickCount );
	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
     97e:	4b3b      	ldr	r3, [pc, #236]	; (a6c <vTaskIncrementTick+0xf0>)
     980:	681b      	ldr	r3, [r3, #0]
     982:	2b00      	cmp	r3, #0
     984:	d16d      	bne.n	a62 <vTaskIncrementTick+0xe6>
	{
		++xTickCount;
     986:	4b3a      	ldr	r3, [pc, #232]	; (a70 <vTaskIncrementTick+0xf4>)
     988:	681a      	ldr	r2, [r3, #0]
     98a:	3201      	adds	r2, #1
     98c:	601a      	str	r2, [r3, #0]
		if( xTickCount == ( portTickType ) 0U )
     98e:	681b      	ldr	r3, [r3, #0]
     990:	2b00      	cmp	r3, #0
     992:	d120      	bne.n	9d6 <vTaskIncrementTick+0x5a>
			xList *pxTemp;

			/* Tick count has overflowed so we need to swap the delay lists.
			If there are any items in pxDelayedTaskList here then there is
			an error! */
			configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );
     994:	4b37      	ldr	r3, [pc, #220]	; (a74 <vTaskIncrementTick+0xf8>)
     996:	681b      	ldr	r3, [r3, #0]
     998:	681b      	ldr	r3, [r3, #0]
     99a:	2b00      	cmp	r3, #0
     99c:	d001      	beq.n	9a2 <vTaskIncrementTick+0x26>
     99e:	b672      	cpsid	i
     9a0:	e7fe      	b.n	9a0 <vTaskIncrementTick+0x24>

			pxTemp = pxDelayedTaskList;
     9a2:	4b34      	ldr	r3, [pc, #208]	; (a74 <vTaskIncrementTick+0xf8>)
     9a4:	6819      	ldr	r1, [r3, #0]
			pxDelayedTaskList = pxOverflowDelayedTaskList;
     9a6:	4a34      	ldr	r2, [pc, #208]	; (a78 <vTaskIncrementTick+0xfc>)
     9a8:	6810      	ldr	r0, [r2, #0]
     9aa:	6018      	str	r0, [r3, #0]
			pxOverflowDelayedTaskList = pxTemp;
     9ac:	6011      	str	r1, [r2, #0]
			xNumOfOverflows++;
     9ae:	4933      	ldr	r1, [pc, #204]	; (a7c <vTaskIncrementTick+0x100>)
     9b0:	680a      	ldr	r2, [r1, #0]
     9b2:	3201      	adds	r2, #1
     9b4:	600a      	str	r2, [r1, #0]

			if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
     9b6:	681b      	ldr	r3, [r3, #0]
     9b8:	681b      	ldr	r3, [r3, #0]
     9ba:	2b00      	cmp	r3, #0
     9bc:	d104      	bne.n	9c8 <vTaskIncrementTick+0x4c>
				/* The new current delayed list is empty.  Set
				xNextTaskUnblockTime to the maximum possible value so it is
				extremely unlikely that the
				if( xTickCount >= xNextTaskUnblockTime ) test will pass until
				there is an item in the delayed list. */
				xNextTaskUnblockTime = portMAX_DELAY;
     9be:	2201      	movs	r2, #1
     9c0:	4252      	negs	r2, r2
     9c2:	4b2f      	ldr	r3, [pc, #188]	; (a80 <vTaskIncrementTick+0x104>)
     9c4:	601a      	str	r2, [r3, #0]
     9c6:	e006      	b.n	9d6 <vTaskIncrementTick+0x5a>
			{
				/* The new current delayed list is not empty, get the value of
				the item at the head of the delayed list.  This is the time at
				which the task at the head of the delayed list should be removed
				from the Blocked state. */
				pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
     9c8:	4b2a      	ldr	r3, [pc, #168]	; (a74 <vTaskIncrementTick+0xf8>)
     9ca:	681b      	ldr	r3, [r3, #0]
     9cc:	68db      	ldr	r3, [r3, #12]
     9ce:	68db      	ldr	r3, [r3, #12]
				xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
     9d0:	685a      	ldr	r2, [r3, #4]
     9d2:	4b2b      	ldr	r3, [pc, #172]	; (a80 <vTaskIncrementTick+0x104>)
     9d4:	601a      	str	r2, [r3, #0]
			}
		}

		/* See if this tick has made a timeout expire. */
		prvCheckDelayedTasks();
     9d6:	4b26      	ldr	r3, [pc, #152]	; (a70 <vTaskIncrementTick+0xf4>)
     9d8:	681a      	ldr	r2, [r3, #0]
     9da:	4b29      	ldr	r3, [pc, #164]	; (a80 <vTaskIncrementTick+0x104>)
     9dc:	681b      	ldr	r3, [r3, #0]
     9de:	429a      	cmp	r2, r3
     9e0:	d343      	bcc.n	a6a <vTaskIncrementTick+0xee>
     9e2:	4b24      	ldr	r3, [pc, #144]	; (a74 <vTaskIncrementTick+0xf8>)
     9e4:	681b      	ldr	r3, [r3, #0]
     9e6:	681b      	ldr	r3, [r3, #0]
     9e8:	2b00      	cmp	r3, #0
     9ea:	d00b      	beq.n	a04 <vTaskIncrementTick+0x88>
     9ec:	4b21      	ldr	r3, [pc, #132]	; (a74 <vTaskIncrementTick+0xf8>)
     9ee:	681b      	ldr	r3, [r3, #0]
     9f0:	68db      	ldr	r3, [r3, #12]
     9f2:	68dd      	ldr	r5, [r3, #12]
     9f4:	686b      	ldr	r3, [r5, #4]
     9f6:	4a1e      	ldr	r2, [pc, #120]	; (a70 <vTaskIncrementTick+0xf4>)
     9f8:	6812      	ldr	r2, [r2, #0]
     9fa:	4293      	cmp	r3, r2
     9fc:	d810      	bhi.n	a20 <vTaskIncrementTick+0xa4>
     9fe:	4f21      	ldr	r7, [pc, #132]	; (a84 <vTaskIncrementTick+0x108>)
     a00:	4e21      	ldr	r6, [pc, #132]	; (a88 <vTaskIncrementTick+0x10c>)
     a02:	e010      	b.n	a26 <vTaskIncrementTick+0xaa>
     a04:	2201      	movs	r2, #1
     a06:	4252      	negs	r2, r2
     a08:	4b1d      	ldr	r3, [pc, #116]	; (a80 <vTaskIncrementTick+0x104>)
     a0a:	601a      	str	r2, [r3, #0]
     a0c:	e02d      	b.n	a6a <vTaskIncrementTick+0xee>
     a0e:	4b19      	ldr	r3, [pc, #100]	; (a74 <vTaskIncrementTick+0xf8>)
     a10:	681b      	ldr	r3, [r3, #0]
     a12:	68db      	ldr	r3, [r3, #12]
     a14:	68dd      	ldr	r5, [r3, #12]
     a16:	686b      	ldr	r3, [r5, #4]
     a18:	4a15      	ldr	r2, [pc, #84]	; (a70 <vTaskIncrementTick+0xf4>)
     a1a:	6812      	ldr	r2, [r2, #0]
     a1c:	4293      	cmp	r3, r2
     a1e:	d902      	bls.n	a26 <vTaskIncrementTick+0xaa>
     a20:	4a17      	ldr	r2, [pc, #92]	; (a80 <vTaskIncrementTick+0x104>)
     a22:	6013      	str	r3, [r2, #0]
     a24:	e021      	b.n	a6a <vTaskIncrementTick+0xee>
     a26:	1d2c      	adds	r4, r5, #4
     a28:	1c20      	adds	r0, r4, #0
     a2a:	47b8      	blx	r7
     a2c:	6aab      	ldr	r3, [r5, #40]	; 0x28
     a2e:	2b00      	cmp	r3, #0
     a30:	d003      	beq.n	a3a <vTaskIncrementTick+0xbe>
     a32:	1c28      	adds	r0, r5, #0
     a34:	3018      	adds	r0, #24
     a36:	4b13      	ldr	r3, [pc, #76]	; (a84 <vTaskIncrementTick+0x108>)
     a38:	4798      	blx	r3
     a3a:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
     a3c:	6832      	ldr	r2, [r6, #0]
     a3e:	4293      	cmp	r3, r2
     a40:	d901      	bls.n	a46 <vTaskIncrementTick+0xca>
     a42:	4a11      	ldr	r2, [pc, #68]	; (a88 <vTaskIncrementTick+0x10c>)
     a44:	6013      	str	r3, [r2, #0]
     a46:	0098      	lsls	r0, r3, #2
     a48:	18c3      	adds	r3, r0, r3
     a4a:	009b      	lsls	r3, r3, #2
     a4c:	480f      	ldr	r0, [pc, #60]	; (a8c <vTaskIncrementTick+0x110>)
     a4e:	18c0      	adds	r0, r0, r3
     a50:	1c21      	adds	r1, r4, #0
     a52:	4b0f      	ldr	r3, [pc, #60]	; (a90 <vTaskIncrementTick+0x114>)
     a54:	4798      	blx	r3
     a56:	4b07      	ldr	r3, [pc, #28]	; (a74 <vTaskIncrementTick+0xf8>)
     a58:	681b      	ldr	r3, [r3, #0]
     a5a:	681b      	ldr	r3, [r3, #0]
     a5c:	2b00      	cmp	r3, #0
     a5e:	d1d6      	bne.n	a0e <vTaskIncrementTick+0x92>
     a60:	e7d0      	b.n	a04 <vTaskIncrementTick+0x88>
	}
	else
	{
		++uxMissedTicks;
     a62:	4a0c      	ldr	r2, [pc, #48]	; (a94 <vTaskIncrementTick+0x118>)
     a64:	6813      	ldr	r3, [r2, #0]
     a66:	3301      	adds	r3, #1
     a68:	6013      	str	r3, [r2, #0]
		{
			vApplicationTickHook();
		}
	}
	#endif /* configUSE_TICK_HOOK */
}
     a6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     a6c:	2000022c 	.word	0x2000022c
     a70:	20000248 	.word	0x20000248
     a74:	20000194 	.word	0x20000194
     a78:	2000024c 	.word	0x2000024c
     a7c:	2000019c 	.word	0x2000019c
     a80:	200000b4 	.word	0x200000b4
     a84:	00000685 	.word	0x00000685
     a88:	20000250 	.word	0x20000250
     a8c:	200001b4 	.word	0x200001b4
     a90:	00000631 	.word	0x00000631
     a94:	20000190 	.word	0x20000190

00000a98 <xTaskResumeAll>:

#endif /* configUSE_TICKLESS_IDLE */
/*----------------------------------------------------------*/

signed portBASE_TYPE xTaskResumeAll( void )
{
     a98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
register tskTCB *pxTCB;
signed portBASE_TYPE xAlreadyYielded = pdFALSE;

	/* If uxSchedulerSuspended is zero then this function does not match a
	previous call to vTaskSuspendAll(). */
	configASSERT( uxSchedulerSuspended );
     a9a:	4b2f      	ldr	r3, [pc, #188]	; (b58 <xTaskResumeAll+0xc0>)
     a9c:	681b      	ldr	r3, [r3, #0]
     a9e:	2b00      	cmp	r3, #0
     aa0:	d101      	bne.n	aa6 <xTaskResumeAll+0xe>
     aa2:	b672      	cpsid	i
     aa4:	e7fe      	b.n	aa4 <xTaskResumeAll+0xc>
	/* It is possible that an ISR caused a task to be removed from an event
	list while the scheduler was suspended.  If this was the case then the
	removed task will have been added to the xPendingReadyList.  Once the
	scheduler has been resumed it is safe to move all the pending ready
	tasks from this list into their appropriate ready list. */
	taskENTER_CRITICAL();
     aa6:	4b2d      	ldr	r3, [pc, #180]	; (b5c <xTaskResumeAll+0xc4>)
     aa8:	4798      	blx	r3
	{
		--uxSchedulerSuspended;
     aaa:	4b2b      	ldr	r3, [pc, #172]	; (b58 <xTaskResumeAll+0xc0>)
     aac:	681a      	ldr	r2, [r3, #0]
     aae:	3a01      	subs	r2, #1
     ab0:	601a      	str	r2, [r3, #0]

		if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
     ab2:	681b      	ldr	r3, [r3, #0]
/*----------------------------------------------------------*/

signed portBASE_TYPE xTaskResumeAll( void )
{
register tskTCB *pxTCB;
signed portBASE_TYPE xAlreadyYielded = pdFALSE;
     ab4:	2400      	movs	r4, #0
	tasks from this list into their appropriate ready list. */
	taskENTER_CRITICAL();
	{
		--uxSchedulerSuspended;

		if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
     ab6:	2b00      	cmp	r3, #0
     ab8:	d149      	bne.n	b4e <xTaskResumeAll+0xb6>
		{
			if( uxCurrentNumberOfTasks > ( unsigned portBASE_TYPE ) 0U )
     aba:	4b29      	ldr	r3, [pc, #164]	; (b60 <xTaskResumeAll+0xc8>)
     abc:	681b      	ldr	r3, [r3, #0]
     abe:	2b00      	cmp	r3, #0
     ac0:	d122      	bne.n	b08 <xTaskResumeAll+0x70>
     ac2:	e044      	b.n	b4e <xTaskResumeAll+0xb6>

				/* Move any readied tasks from the pending list into the
				appropriate ready list. */
				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
				{
					pxTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY(  ( ( xList * ) &xPendingReadyList ) );
     ac4:	4b27      	ldr	r3, [pc, #156]	; (b64 <xTaskResumeAll+0xcc>)
     ac6:	68db      	ldr	r3, [r3, #12]
     ac8:	68df      	ldr	r7, [r3, #12]
					uxListRemove( &( pxTCB->xEventListItem ) );
     aca:	1c38      	adds	r0, r7, #0
     acc:	3018      	adds	r0, #24
     ace:	4b26      	ldr	r3, [pc, #152]	; (b68 <xTaskResumeAll+0xd0>)
     ad0:	4798      	blx	r3
					uxListRemove( &( pxTCB->xGenericListItem ) );
     ad2:	1d3d      	adds	r5, r7, #4
     ad4:	1c28      	adds	r0, r5, #0
     ad6:	4b24      	ldr	r3, [pc, #144]	; (b68 <xTaskResumeAll+0xd0>)
     ad8:	4798      	blx	r3
					prvAddTaskToReadyQueue( pxTCB );
     ada:	6afb      	ldr	r3, [r7, #44]	; 0x2c
     adc:	4a23      	ldr	r2, [pc, #140]	; (b6c <xTaskResumeAll+0xd4>)
     ade:	6812      	ldr	r2, [r2, #0]
     ae0:	4293      	cmp	r3, r2
     ae2:	d901      	bls.n	ae8 <xTaskResumeAll+0x50>
     ae4:	4a21      	ldr	r2, [pc, #132]	; (b6c <xTaskResumeAll+0xd4>)
     ae6:	6013      	str	r3, [r2, #0]
     ae8:	0098      	lsls	r0, r3, #2
     aea:	18c3      	adds	r3, r0, r3
     aec:	009b      	lsls	r3, r3, #2
     aee:	4820      	ldr	r0, [pc, #128]	; (b70 <xTaskResumeAll+0xd8>)
     af0:	18c0      	adds	r0, r0, r3
     af2:	1c29      	adds	r1, r5, #0
     af4:	4b1f      	ldr	r3, [pc, #124]	; (b74 <xTaskResumeAll+0xdc>)
     af6:	4798      	blx	r3

					/* If we have moved a task that has a priority higher than
					the current task then we should yield. */
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
     af8:	4b1f      	ldr	r3, [pc, #124]	; (b78 <xTaskResumeAll+0xe0>)
     afa:	681b      	ldr	r3, [r3, #0]
     afc:	6afa      	ldr	r2, [r7, #44]	; 0x2c
     afe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     b00:	429a      	cmp	r2, r3
     b02:	d302      	bcc.n	b0a <xTaskResumeAll+0x72>
					{
						xYieldRequired = pdTRUE;
     b04:	2401      	movs	r4, #1
     b06:	e000      	b.n	b0a <xTaskResumeAll+0x72>
			{
				portBASE_TYPE xYieldRequired = pdFALSE;

				/* Move any readied tasks from the pending list into the
				appropriate ready list. */
				while( listLIST_IS_EMPTY( ( xList * ) &xPendingReadyList ) == pdFALSE )
     b08:	4e16      	ldr	r6, [pc, #88]	; (b64 <xTaskResumeAll+0xcc>)
     b0a:	6833      	ldr	r3, [r6, #0]
     b0c:	2b00      	cmp	r3, #0
     b0e:	d1d9      	bne.n	ac4 <xTaskResumeAll+0x2c>
				}

				/* If any ticks occurred while the scheduler was suspended then
				they should be processed now.  This ensures the tick count does not
				slip, and that any delayed tasks are resumed at the correct time. */
				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
     b10:	4b1a      	ldr	r3, [pc, #104]	; (b7c <xTaskResumeAll+0xe4>)
     b12:	681b      	ldr	r3, [r3, #0]
     b14:	2b00      	cmp	r3, #0
     b16:	d00d      	beq.n	b34 <xTaskResumeAll+0x9c>
				{
					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
     b18:	4b18      	ldr	r3, [pc, #96]	; (b7c <xTaskResumeAll+0xe4>)
     b1a:	681b      	ldr	r3, [r3, #0]
     b1c:	2b00      	cmp	r3, #0
     b1e:	d010      	beq.n	b42 <xTaskResumeAll+0xaa>
					{
						vTaskIncrementTick();
     b20:	4d17      	ldr	r5, [pc, #92]	; (b80 <xTaskResumeAll+0xe8>)
						--uxMissedTicks;
     b22:	4c16      	ldr	r4, [pc, #88]	; (b7c <xTaskResumeAll+0xe4>)
				slip, and that any delayed tasks are resumed at the correct time. */
				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
				{
					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
					{
						vTaskIncrementTick();
     b24:	47a8      	blx	r5
						--uxMissedTicks;
     b26:	6823      	ldr	r3, [r4, #0]
     b28:	3b01      	subs	r3, #1
     b2a:	6023      	str	r3, [r4, #0]
				/* If any ticks occurred while the scheduler was suspended then
				they should be processed now.  This ensures the tick count does not
				slip, and that any delayed tasks are resumed at the correct time. */
				if( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
				{
					while( uxMissedTicks > ( unsigned portBASE_TYPE ) 0U )
     b2c:	6823      	ldr	r3, [r4, #0]
     b2e:	2b00      	cmp	r3, #0
     b30:	d1f8      	bne.n	b24 <xTaskResumeAll+0x8c>
     b32:	e006      	b.n	b42 <xTaskResumeAll+0xaa>
						xYieldRequired = pdTRUE;
					}
					#endif
				}

				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
     b34:	2c01      	cmp	r4, #1
     b36:	d004      	beq.n	b42 <xTaskResumeAll+0xaa>
     b38:	4b12      	ldr	r3, [pc, #72]	; (b84 <xTaskResumeAll+0xec>)
     b3a:	681b      	ldr	r3, [r3, #0]
/*----------------------------------------------------------*/

signed portBASE_TYPE xTaskResumeAll( void )
{
register tskTCB *pxTCB;
signed portBASE_TYPE xAlreadyYielded = pdFALSE;
     b3c:	2400      	movs	r4, #0
						xYieldRequired = pdTRUE;
					}
					#endif
				}

				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
     b3e:	2b01      	cmp	r3, #1
     b40:	d105      	bne.n	b4e <xTaskResumeAll+0xb6>
				{
					xAlreadyYielded = pdTRUE;
					xMissedYield = pdFALSE;
     b42:	2200      	movs	r2, #0
     b44:	4b0f      	ldr	r3, [pc, #60]	; (b84 <xTaskResumeAll+0xec>)
     b46:	601a      	str	r2, [r3, #0]
					portYIELD_WITHIN_API();
     b48:	4b0f      	ldr	r3, [pc, #60]	; (b88 <xTaskResumeAll+0xf0>)
     b4a:	4798      	blx	r3
					#endif
				}

				if( ( xYieldRequired == pdTRUE ) || ( xMissedYield == pdTRUE ) )
				{
					xAlreadyYielded = pdTRUE;
     b4c:	2401      	movs	r4, #1
					portYIELD_WITHIN_API();
				}
			}
		}
	}
	taskEXIT_CRITICAL();
     b4e:	4b0f      	ldr	r3, [pc, #60]	; (b8c <xTaskResumeAll+0xf4>)
     b50:	4798      	blx	r3

	return xAlreadyYielded;
}
     b52:	1c20      	adds	r0, r4, #0
     b54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
     b56:	46c0      	nop			; (mov r8, r8)
     b58:	2000022c 	.word	0x2000022c
     b5c:	00000f2d 	.word	0x00000f2d
     b60:	20000270 	.word	0x20000270
     b64:	20000234 	.word	0x20000234
     b68:	00000685 	.word	0x00000685
     b6c:	20000250 	.word	0x20000250
     b70:	200001b4 	.word	0x200001b4
     b74:	00000631 	.word	0x00000631
     b78:	20000230 	.word	0x20000230
     b7c:	20000190 	.word	0x20000190
     b80:	0000097d 	.word	0x0000097d
     b84:	2000026c 	.word	0x2000026c
     b88:	00000f15 	.word	0x00000f15
     b8c:	00000f45 	.word	0x00000f45

00000b90 <vTaskDelay>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelay == 1 )

	void vTaskDelay( portTickType xTicksToDelay )
	{
     b90:	b510      	push	{r4, lr}
     b92:	1e04      	subs	r4, r0, #0
	portTickType xTimeToWake;
	signed portBASE_TYPE xAlreadyYielded = pdFALSE;

		/* A delay time of zero just forces a reschedule. */
		if( xTicksToDelay > ( portTickType ) 0U )
     b94:	d010      	beq.n	bb8 <vTaskDelay+0x28>
		{
			vTaskSuspendAll();
     b96:	4b0a      	ldr	r3, [pc, #40]	; (bc0 <vTaskDelay+0x30>)
     b98:	4798      	blx	r3
				This task cannot be in an event list as it is the currently
				executing task. */

				/* Calculate the time to wake - this may overflow but this is
				not a problem. */
				xTimeToWake = xTickCount + xTicksToDelay;
     b9a:	4b0a      	ldr	r3, [pc, #40]	; (bc4 <vTaskDelay+0x34>)
     b9c:	681b      	ldr	r3, [r3, #0]
     b9e:	18e4      	adds	r4, r4, r3

				/* We must remove ourselves from the ready list before adding
				ourselves to the blocked list as the same list item is used for
				both lists. */
				if( uxListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) ) == 0 )
     ba0:	4b09      	ldr	r3, [pc, #36]	; (bc8 <vTaskDelay+0x38>)
     ba2:	6818      	ldr	r0, [r3, #0]
     ba4:	3004      	adds	r0, #4
     ba6:	4b09      	ldr	r3, [pc, #36]	; (bcc <vTaskDelay+0x3c>)
     ba8:	4798      	blx	r3
					/* The current task must be in a ready list, so there is
					no need to check, and the port reset macro can be called
					directly. */
					portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
				}
				prvAddCurrentTaskToDelayedList( xTimeToWake );
     baa:	1c20      	adds	r0, r4, #0
     bac:	4b08      	ldr	r3, [pc, #32]	; (bd0 <vTaskDelay+0x40>)
     bae:	4798      	blx	r3
			}
			xAlreadyYielded = xTaskResumeAll();
     bb0:	4b08      	ldr	r3, [pc, #32]	; (bd4 <vTaskDelay+0x44>)
     bb2:	4798      	blx	r3
		}

		/* Force a reschedule if xTaskResumeAll has not already done so, we may
		have put ourselves to sleep. */
		if( xAlreadyYielded == pdFALSE )
     bb4:	2800      	cmp	r0, #0
     bb6:	d101      	bne.n	bbc <vTaskDelay+0x2c>
		{
			portYIELD_WITHIN_API();
     bb8:	4b07      	ldr	r3, [pc, #28]	; (bd8 <vTaskDelay+0x48>)
     bba:	4798      	blx	r3
		}
	}
     bbc:	bd10      	pop	{r4, pc}
     bbe:	46c0      	nop			; (mov r8, r8)
     bc0:	0000094d 	.word	0x0000094d
     bc4:	20000248 	.word	0x20000248
     bc8:	20000230 	.word	0x20000230
     bcc:	00000685 	.word	0x00000685
     bd0:	000006b1 	.word	0x000006b1
     bd4:	00000a99 	.word	0x00000a99
     bd8:	00000f15 	.word	0x00000f15

00000bdc <vTaskSwitchContext>:

#endif /* configUSE_APPLICATION_TASK_TAG */
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
     bdc:	b510      	push	{r4, lr}
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
     bde:	4b24      	ldr	r3, [pc, #144]	; (c70 <vTaskSwitchContext+0x94>)
     be0:	681b      	ldr	r3, [r3, #0]
     be2:	2b00      	cmp	r3, #0
     be4:	d110      	bne.n	c08 <vTaskSwitchContext+0x2c>
		#endif /* configGENERATE_RUN_TIME_STATS */

		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();

		taskSELECT_HIGHEST_PRIORITY_TASK();
     be6:	4b23      	ldr	r3, [pc, #140]	; (c74 <vTaskSwitchContext+0x98>)
     be8:	681b      	ldr	r3, [r3, #0]
     bea:	009a      	lsls	r2, r3, #2
     bec:	18d3      	adds	r3, r2, r3
     bee:	009b      	lsls	r3, r3, #2
     bf0:	4a21      	ldr	r2, [pc, #132]	; (c78 <vTaskSwitchContext+0x9c>)
     bf2:	589b      	ldr	r3, [r3, r2]
     bf4:	2b00      	cmp	r3, #0
     bf6:	d11a      	bne.n	c2e <vTaskSwitchContext+0x52>
     bf8:	4b1e      	ldr	r3, [pc, #120]	; (c74 <vTaskSwitchContext+0x98>)
     bfa:	681b      	ldr	r3, [r3, #0]
     bfc:	2b00      	cmp	r3, #0
     bfe:	d00a      	beq.n	c16 <vTaskSwitchContext+0x3a>
     c00:	4a1c      	ldr	r2, [pc, #112]	; (c74 <vTaskSwitchContext+0x98>)
     c02:	4c1d      	ldr	r4, [pc, #116]	; (c78 <vTaskSwitchContext+0x9c>)
     c04:	1c10      	adds	r0, r2, #0
     c06:	e008      	b.n	c1a <vTaskSwitchContext+0x3e>
{
	if( uxSchedulerSuspended != ( unsigned portBASE_TYPE ) pdFALSE )
	{
		/* The scheduler is currently suspended - do not allow a context
		switch. */
		xMissedYield = pdTRUE;
     c08:	2201      	movs	r2, #1
     c0a:	4b1c      	ldr	r3, [pc, #112]	; (c7c <vTaskSwitchContext+0xa0>)
     c0c:	601a      	str	r2, [r3, #0]
     c0e:	e02d      	b.n	c6c <vTaskSwitchContext+0x90>
		#endif /* configGENERATE_RUN_TIME_STATS */

		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
		taskSECOND_CHECK_FOR_STACK_OVERFLOW();

		taskSELECT_HIGHEST_PRIORITY_TASK();
     c10:	6803      	ldr	r3, [r0, #0]
     c12:	2b00      	cmp	r3, #0
     c14:	d101      	bne.n	c1a <vTaskSwitchContext+0x3e>
     c16:	b672      	cpsid	i
     c18:	e7fe      	b.n	c18 <vTaskSwitchContext+0x3c>
     c1a:	6813      	ldr	r3, [r2, #0]
     c1c:	3b01      	subs	r3, #1
     c1e:	6013      	str	r3, [r2, #0]
     c20:	6813      	ldr	r3, [r2, #0]
     c22:	0099      	lsls	r1, r3, #2
     c24:	18cb      	adds	r3, r1, r3
     c26:	009b      	lsls	r3, r3, #2
     c28:	591b      	ldr	r3, [r3, r4]
     c2a:	2b00      	cmp	r3, #0
     c2c:	d0f0      	beq.n	c10 <vTaskSwitchContext+0x34>
     c2e:	4b11      	ldr	r3, [pc, #68]	; (c74 <vTaskSwitchContext+0x98>)
     c30:	681b      	ldr	r3, [r3, #0]
     c32:	4c11      	ldr	r4, [pc, #68]	; (c78 <vTaskSwitchContext+0x9c>)
     c34:	009a      	lsls	r2, r3, #2
     c36:	18d1      	adds	r1, r2, r3
     c38:	0089      	lsls	r1, r1, #2
     c3a:	1861      	adds	r1, r4, r1
     c3c:	6848      	ldr	r0, [r1, #4]
     c3e:	6840      	ldr	r0, [r0, #4]
     c40:	6048      	str	r0, [r1, #4]
     c42:	18d2      	adds	r2, r2, r3
     c44:	0092      	lsls	r2, r2, #2
     c46:	3208      	adds	r2, #8
     c48:	18a2      	adds	r2, r4, r2
     c4a:	4290      	cmp	r0, r2
     c4c:	d105      	bne.n	c5a <vTaskSwitchContext+0x7e>
     c4e:	6841      	ldr	r1, [r0, #4]
     c50:	009a      	lsls	r2, r3, #2
     c52:	18d2      	adds	r2, r2, r3
     c54:	0092      	lsls	r2, r2, #2
     c56:	18a2      	adds	r2, r4, r2
     c58:	6051      	str	r1, [r2, #4]
     c5a:	009a      	lsls	r2, r3, #2
     c5c:	18d3      	adds	r3, r2, r3
     c5e:	009b      	lsls	r3, r3, #2
     c60:	4a05      	ldr	r2, [pc, #20]	; (c78 <vTaskSwitchContext+0x9c>)
     c62:	18d3      	adds	r3, r2, r3
     c64:	685b      	ldr	r3, [r3, #4]
     c66:	68da      	ldr	r2, [r3, #12]
     c68:	4b05      	ldr	r3, [pc, #20]	; (c80 <vTaskSwitchContext+0xa4>)
     c6a:	601a      	str	r2, [r3, #0]

		traceTASK_SWITCHED_IN();
	}
}
     c6c:	bd10      	pop	{r4, pc}
     c6e:	46c0      	nop			; (mov r8, r8)
     c70:	2000022c 	.word	0x2000022c
     c74:	20000250 	.word	0x20000250
     c78:	200001b4 	.word	0x200001b4
     c7c:	2000026c 	.word	0x2000026c
     c80:	20000230 	.word	0x20000230

00000c84 <vTaskPlaceOnEventList>:
/*-----------------------------------------------------------*/

void vTaskPlaceOnEventList( const xList * const pxEventList, portTickType xTicksToWait )
{
     c84:	b538      	push	{r3, r4, r5, lr}
portTickType xTimeToWake;

	configASSERT( pxEventList );
     c86:	2800      	cmp	r0, #0
     c88:	d101      	bne.n	c8e <vTaskPlaceOnEventList+0xa>
     c8a:	b672      	cpsid	i
     c8c:	e7fe      	b.n	c8c <vTaskPlaceOnEventList+0x8>
     c8e:	1c0c      	adds	r4, r1, #0
	SCHEDULER SUSPENDED. */

	/* Place the event list item of the TCB in the appropriate event list.
	This is placed in the list in priority order so the highest priority task
	is the first to be woken by the event. */
	vListInsert( ( xList * ) pxEventList, ( xListItem * ) &( pxCurrentTCB->xEventListItem ) );
     c90:	4d07      	ldr	r5, [pc, #28]	; (cb0 <vTaskPlaceOnEventList+0x2c>)
     c92:	6829      	ldr	r1, [r5, #0]
     c94:	3118      	adds	r1, #24
     c96:	4b07      	ldr	r3, [pc, #28]	; (cb4 <vTaskPlaceOnEventList+0x30>)
     c98:	4798      	blx	r3

	/* We must remove ourselves from the ready list before adding ourselves
	to the blocked list as the same list item is used for both lists.  We have
	exclusive access to the ready lists as the scheduler is locked. */
	if( uxListRemove( ( xListItem * ) &( pxCurrentTCB->xGenericListItem ) ) == 0 )
     c9a:	6828      	ldr	r0, [r5, #0]
     c9c:	3004      	adds	r0, #4
     c9e:	4b06      	ldr	r3, [pc, #24]	; (cb8 <vTaskPlaceOnEventList+0x34>)
     ca0:	4798      	blx	r3
	}
	#else /* INCLUDE_vTaskSuspend */
	{
			/* Calculate the time at which the task should be woken if the event does
			not occur.  This may overflow but this doesn't matter. */
			xTimeToWake = xTickCount + xTicksToWait;
     ca2:	4b06      	ldr	r3, [pc, #24]	; (cbc <vTaskPlaceOnEventList+0x38>)
     ca4:	6818      	ldr	r0, [r3, #0]
     ca6:	1820      	adds	r0, r4, r0
			prvAddCurrentTaskToDelayedList( xTimeToWake );
     ca8:	4b05      	ldr	r3, [pc, #20]	; (cc0 <vTaskPlaceOnEventList+0x3c>)
     caa:	4798      	blx	r3
	}
	#endif /* INCLUDE_vTaskSuspend */
}
     cac:	bd38      	pop	{r3, r4, r5, pc}
     cae:	46c0      	nop			; (mov r8, r8)
     cb0:	20000230 	.word	0x20000230
     cb4:	0000064d 	.word	0x0000064d
     cb8:	00000685 	.word	0x00000685
     cbc:	20000248 	.word	0x20000248
     cc0:	000006b1 	.word	0x000006b1

00000cc4 <xTaskRemoveFromEventList>:

#endif /* configUSE_TIMERS */
/*-----------------------------------------------------------*/

signed portBASE_TYPE xTaskRemoveFromEventList( const xList * const pxEventList )
{
     cc4:	b538      	push	{r3, r4, r5, lr}
	get called - the lock count on the queue will get modified instead.  This
	means we can always expect exclusive access to the event list here.

	This function assumes that a check has already been made to ensure that
	pxEventList is not empty. */
	pxUnblockedTCB = ( tskTCB * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
     cc6:	68c3      	ldr	r3, [r0, #12]
     cc8:	68dd      	ldr	r5, [r3, #12]
	configASSERT( pxUnblockedTCB );
     cca:	2d00      	cmp	r5, #0
     ccc:	d101      	bne.n	cd2 <xTaskRemoveFromEventList+0xe>
     cce:	b672      	cpsid	i
     cd0:	e7fe      	b.n	cd0 <xTaskRemoveFromEventList+0xc>
	uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
     cd2:	1c2c      	adds	r4, r5, #0
     cd4:	3418      	adds	r4, #24
     cd6:	1c20      	adds	r0, r4, #0
     cd8:	4b12      	ldr	r3, [pc, #72]	; (d24 <xTaskRemoveFromEventList+0x60>)
     cda:	4798      	blx	r3

	if( uxSchedulerSuspended == ( unsigned portBASE_TYPE ) pdFALSE )
     cdc:	4b12      	ldr	r3, [pc, #72]	; (d28 <xTaskRemoveFromEventList+0x64>)
     cde:	681b      	ldr	r3, [r3, #0]
     ce0:	2b00      	cmp	r3, #0
     ce2:	d113      	bne.n	d0c <xTaskRemoveFromEventList+0x48>
	{
		uxListRemove( &( pxUnblockedTCB->xGenericListItem ) );
     ce4:	1d2c      	adds	r4, r5, #4
     ce6:	1c20      	adds	r0, r4, #0
     ce8:	4b0e      	ldr	r3, [pc, #56]	; (d24 <xTaskRemoveFromEventList+0x60>)
     cea:	4798      	blx	r3
		prvAddTaskToReadyQueue( pxUnblockedTCB );
     cec:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
     cee:	4a0f      	ldr	r2, [pc, #60]	; (d2c <xTaskRemoveFromEventList+0x68>)
     cf0:	6812      	ldr	r2, [r2, #0]
     cf2:	4293      	cmp	r3, r2
     cf4:	d901      	bls.n	cfa <xTaskRemoveFromEventList+0x36>
     cf6:	4a0d      	ldr	r2, [pc, #52]	; (d2c <xTaskRemoveFromEventList+0x68>)
     cf8:	6013      	str	r3, [r2, #0]
     cfa:	0098      	lsls	r0, r3, #2
     cfc:	18c3      	adds	r3, r0, r3
     cfe:	009b      	lsls	r3, r3, #2
     d00:	480b      	ldr	r0, [pc, #44]	; (d30 <xTaskRemoveFromEventList+0x6c>)
     d02:	18c0      	adds	r0, r0, r3
     d04:	1c21      	adds	r1, r4, #0
     d06:	4b0b      	ldr	r3, [pc, #44]	; (d34 <xTaskRemoveFromEventList+0x70>)
     d08:	4798      	blx	r3
     d0a:	e003      	b.n	d14 <xTaskRemoveFromEventList+0x50>
	}
	else
	{
		/* We cannot access the delayed or ready lists, so will hold this
		task pending until the scheduler is resumed. */
		vListInsertEnd( ( xList * ) &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
     d0c:	480a      	ldr	r0, [pc, #40]	; (d38 <xTaskRemoveFromEventList+0x74>)
     d0e:	1c21      	adds	r1, r4, #0
     d10:	4b08      	ldr	r3, [pc, #32]	; (d34 <xTaskRemoveFromEventList+0x70>)
     d12:	4798      	blx	r3
	}

	if( pxUnblockedTCB->uxPriority >= pxCurrentTCB->uxPriority )
     d14:	4b09      	ldr	r3, [pc, #36]	; (d3c <xTaskRemoveFromEventList+0x78>)
     d16:	681b      	ldr	r3, [r3, #0]
     d18:	6aea      	ldr	r2, [r5, #44]	; 0x2c
     d1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     d1c:	2000      	movs	r0, #0
     d1e:	429a      	cmp	r2, r3
     d20:	4140      	adcs	r0, r0
	{
		xReturn = pdFALSE;
	}

	return xReturn;
}
     d22:	bd38      	pop	{r3, r4, r5, pc}
     d24:	00000685 	.word	0x00000685
     d28:	2000022c 	.word	0x2000022c
     d2c:	20000250 	.word	0x20000250
     d30:	200001b4 	.word	0x200001b4
     d34:	00000631 	.word	0x00000631
     d38:	20000234 	.word	0x20000234
     d3c:	20000230 	.word	0x20000230

00000d40 <vTaskSetTimeOutState>:
/*-----------------------------------------------------------*/

void vTaskSetTimeOutState( xTimeOutType * const pxTimeOut )
{
	configASSERT( pxTimeOut );
     d40:	2800      	cmp	r0, #0
     d42:	d101      	bne.n	d48 <vTaskSetTimeOutState+0x8>
     d44:	b672      	cpsid	i
     d46:	e7fe      	b.n	d46 <vTaskSetTimeOutState+0x6>
	pxTimeOut->xOverflowCount = xNumOfOverflows;
     d48:	4b03      	ldr	r3, [pc, #12]	; (d58 <vTaskSetTimeOutState+0x18>)
     d4a:	681b      	ldr	r3, [r3, #0]
     d4c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
     d4e:	4b03      	ldr	r3, [pc, #12]	; (d5c <vTaskSetTimeOutState+0x1c>)
     d50:	681b      	ldr	r3, [r3, #0]
     d52:	6043      	str	r3, [r0, #4]
}
     d54:	4770      	bx	lr
     d56:	46c0      	nop			; (mov r8, r8)
     d58:	2000019c 	.word	0x2000019c
     d5c:	20000248 	.word	0x20000248

00000d60 <xTaskCheckForTimeOut>:
/*-----------------------------------------------------------*/

portBASE_TYPE xTaskCheckForTimeOut( xTimeOutType * const pxTimeOut, portTickType * const pxTicksToWait )
{
     d60:	b570      	push	{r4, r5, r6, lr}
portBASE_TYPE xReturn;

	configASSERT( pxTimeOut );
     d62:	2800      	cmp	r0, #0
     d64:	d101      	bne.n	d6a <xTaskCheckForTimeOut+0xa>
     d66:	b672      	cpsid	i
     d68:	e7fe      	b.n	d68 <xTaskCheckForTimeOut+0x8>
	configASSERT( pxTicksToWait );
     d6a:	2900      	cmp	r1, #0
     d6c:	d101      	bne.n	d72 <xTaskCheckForTimeOut+0x12>
     d6e:	b672      	cpsid	i
     d70:	e7fe      	b.n	d70 <xTaskCheckForTimeOut+0x10>
     d72:	1c0d      	adds	r5, r1, #0
     d74:	1c04      	adds	r4, r0, #0

	taskENTER_CRITICAL();
     d76:	4b11      	ldr	r3, [pc, #68]	; (dbc <xTaskCheckForTimeOut+0x5c>)
     d78:	4798      	blx	r3
				xReturn = pdFALSE;
			}
			else /* We are not blocking indefinitely, perform the checks below. */
		#endif

		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( ( portTickType ) xTickCount >= ( portTickType ) pxTimeOut->xTimeOnEntering ) )
     d7a:	4b11      	ldr	r3, [pc, #68]	; (dc0 <xTaskCheckForTimeOut+0x60>)
     d7c:	681b      	ldr	r3, [r3, #0]
     d7e:	6822      	ldr	r2, [r4, #0]
     d80:	429a      	cmp	r2, r3
     d82:	d005      	beq.n	d90 <xTaskCheckForTimeOut+0x30>
     d84:	4b0f      	ldr	r3, [pc, #60]	; (dc4 <xTaskCheckForTimeOut+0x64>)
     d86:	681b      	ldr	r3, [r3, #0]
		{
			/* The tick count is greater than the time at which vTaskSetTimeout()
			was called, but has also overflowed since vTaskSetTimeOut() was called.
			It must have wrapped all the way around and gone past us again. This
			passed since vTaskSetTimeout() was called. */
			xReturn = pdTRUE;
     d88:	2601      	movs	r6, #1
				xReturn = pdFALSE;
			}
			else /* We are not blocking indefinitely, perform the checks below. */
		#endif

		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( ( portTickType ) xTickCount >= ( portTickType ) pxTimeOut->xTimeOnEntering ) )
     d8a:	6862      	ldr	r2, [r4, #4]
     d8c:	429a      	cmp	r2, r3
     d8e:	d910      	bls.n	db2 <xTaskCheckForTimeOut+0x52>
			was called, but has also overflowed since vTaskSetTimeOut() was called.
			It must have wrapped all the way around and gone past us again. This
			passed since vTaskSetTimeout() was called. */
			xReturn = pdTRUE;
		}
		else if( ( ( portTickType ) ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEntering ) ) < ( portTickType ) *pxTicksToWait )
     d90:	4b0c      	ldr	r3, [pc, #48]	; (dc4 <xTaskCheckForTimeOut+0x64>)
     d92:	6819      	ldr	r1, [r3, #0]
     d94:	6860      	ldr	r0, [r4, #4]
     d96:	682b      	ldr	r3, [r5, #0]
     d98:	1a09      	subs	r1, r1, r0
			vTaskSetTimeOutState( pxTimeOut );
			xReturn = pdFALSE;
		}
		else
		{
			xReturn = pdTRUE;
     d9a:	2601      	movs	r6, #1
			was called, but has also overflowed since vTaskSetTimeOut() was called.
			It must have wrapped all the way around and gone past us again. This
			passed since vTaskSetTimeout() was called. */
			xReturn = pdTRUE;
		}
		else if( ( ( portTickType ) ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEntering ) ) < ( portTickType ) *pxTicksToWait )
     d9c:	4299      	cmp	r1, r3
     d9e:	d208      	bcs.n	db2 <xTaskCheckForTimeOut+0x52>
		{
			/* Not a genuine timeout. Adjust parameters for time remaining. */
			*pxTicksToWait -= ( ( portTickType ) xTickCount - ( portTickType ) pxTimeOut->xTimeOnEntering );
     da0:	4a08      	ldr	r2, [pc, #32]	; (dc4 <xTaskCheckForTimeOut+0x64>)
     da2:	6812      	ldr	r2, [r2, #0]
     da4:	1a12      	subs	r2, r2, r0
     da6:	1a9b      	subs	r3, r3, r2
     da8:	602b      	str	r3, [r5, #0]
			vTaskSetTimeOutState( pxTimeOut );
     daa:	1c20      	adds	r0, r4, #0
     dac:	4b06      	ldr	r3, [pc, #24]	; (dc8 <xTaskCheckForTimeOut+0x68>)
     dae:	4798      	blx	r3
			xReturn = pdFALSE;
     db0:	2600      	movs	r6, #0
		else
		{
			xReturn = pdTRUE;
		}
	}
	taskEXIT_CRITICAL();
     db2:	4b06      	ldr	r3, [pc, #24]	; (dcc <xTaskCheckForTimeOut+0x6c>)
     db4:	4798      	blx	r3

	return xReturn;
}
     db6:	1c30      	adds	r0, r6, #0
     db8:	bd70      	pop	{r4, r5, r6, pc}
     dba:	46c0      	nop			; (mov r8, r8)
     dbc:	00000f2d 	.word	0x00000f2d
     dc0:	2000019c 	.word	0x2000019c
     dc4:	20000248 	.word	0x20000248
     dc8:	00000d41 	.word	0x00000d41
     dcc:	00000f45 	.word	0x00000f45

00000dd0 <vTaskMissedYield>:
/*-----------------------------------------------------------*/

void vTaskMissedYield( void )
{
	xMissedYield = pdTRUE;
     dd0:	2201      	movs	r2, #1
     dd2:	4b01      	ldr	r3, [pc, #4]	; (dd8 <vTaskMissedYield+0x8>)
     dd4:	601a      	str	r2, [r3, #0]
}
     dd6:	4770      	bx	lr
     dd8:	2000026c 	.word	0x2000026c

00000ddc <xTaskGetCurrentTaskHandle>:
	xTaskHandle xReturn;

		/* A critical section is not required as this is not called from
		an interrupt and the current TCB will always be the same for any
		individual execution thread. */
		xReturn = pxCurrentTCB;
     ddc:	4b01      	ldr	r3, [pc, #4]	; (de4 <xTaskGetCurrentTaskHandle+0x8>)
     dde:	6818      	ldr	r0, [r3, #0]

		return xReturn;
	}
     de0:	4770      	bx	lr
     de2:	46c0      	nop			; (mov r8, r8)
     de4:	20000230 	.word	0x20000230

00000de8 <vTaskPriorityInherit>:
/*-----------------------------------------------------------*/

#if ( configUSE_MUTEXES == 1 )

	void vTaskPriorityInherit( xTaskHandle * const pxMutexHolder )
	{
     de8:	b538      	push	{r3, r4, r5, lr}
	tskTCB * const pxTCB = ( tskTCB * ) pxMutexHolder;

		/* If the mutex was given back by an interrupt while the queue was
		locked then the mutex holder might now be NULL. */
		if( pxMutexHolder != NULL )
     dea:	2800      	cmp	r0, #0
     dec:	d02f      	beq.n	e4e <vTaskPriorityInherit+0x66>
		{
			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
     dee:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
     df0:	4a17      	ldr	r2, [pc, #92]	; (e50 <vTaskPriorityInherit+0x68>)
     df2:	6812      	ldr	r2, [r2, #0]
     df4:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
     df6:	4293      	cmp	r3, r2
     df8:	d229      	bcs.n	e4e <vTaskPriorityInherit+0x66>
			{
				/* Adjust the mutex holder state to account for its new priority. */
				listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) pxCurrentTCB->uxPriority );
     dfa:	4a15      	ldr	r2, [pc, #84]	; (e50 <vTaskPriorityInherit+0x68>)
     dfc:	6812      	ldr	r2, [r2, #0]
     dfe:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
     e00:	2206      	movs	r2, #6
     e02:	1a52      	subs	r2, r2, r1
     e04:	6182      	str	r2, [r0, #24]

				/* If the task being modified is in the ready state it will need to
				be moved into a new list. */
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xGenericListItem ) ) != pdFALSE )
     e06:	009a      	lsls	r2, r3, #2
     e08:	18d3      	adds	r3, r2, r3
     e0a:	009b      	lsls	r3, r3, #2
     e0c:	4a11      	ldr	r2, [pc, #68]	; (e54 <vTaskPriorityInherit+0x6c>)
     e0e:	18d3      	adds	r3, r2, r3
     e10:	6942      	ldr	r2, [r0, #20]
     e12:	429a      	cmp	r2, r3
     e14:	d117      	bne.n	e46 <vTaskPriorityInherit+0x5e>
     e16:	1c05      	adds	r5, r0, #0
				{
					if( uxListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) ) == 0 )
     e18:	1d04      	adds	r4, r0, #4
     e1a:	1c20      	adds	r0, r4, #0
     e1c:	4b0e      	ldr	r3, [pc, #56]	; (e58 <vTaskPriorityInherit+0x70>)
     e1e:	4798      	blx	r3
					{
						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
					}

					/* Inherit the priority before being moved into the new list. */
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
     e20:	4b0b      	ldr	r3, [pc, #44]	; (e50 <vTaskPriorityInherit+0x68>)
     e22:	681b      	ldr	r3, [r3, #0]
     e24:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     e26:	62eb      	str	r3, [r5, #44]	; 0x2c
					prvAddTaskToReadyQueue( pxTCB );
     e28:	4a0c      	ldr	r2, [pc, #48]	; (e5c <vTaskPriorityInherit+0x74>)
     e2a:	6812      	ldr	r2, [r2, #0]
     e2c:	4293      	cmp	r3, r2
     e2e:	d901      	bls.n	e34 <vTaskPriorityInherit+0x4c>
     e30:	4a0a      	ldr	r2, [pc, #40]	; (e5c <vTaskPriorityInherit+0x74>)
     e32:	6013      	str	r3, [r2, #0]
     e34:	0098      	lsls	r0, r3, #2
     e36:	18c0      	adds	r0, r0, r3
     e38:	0083      	lsls	r3, r0, #2
     e3a:	4806      	ldr	r0, [pc, #24]	; (e54 <vTaskPriorityInherit+0x6c>)
     e3c:	18c0      	adds	r0, r0, r3
     e3e:	1c21      	adds	r1, r4, #0
     e40:	4b07      	ldr	r3, [pc, #28]	; (e60 <vTaskPriorityInherit+0x78>)
     e42:	4798      	blx	r3
     e44:	e003      	b.n	e4e <vTaskPriorityInherit+0x66>
				}
				else
				{
					/* Just inherit the priority. */
					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
     e46:	4b02      	ldr	r3, [pc, #8]	; (e50 <vTaskPriorityInherit+0x68>)
     e48:	681b      	ldr	r3, [r3, #0]
     e4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     e4c:	62c3      	str	r3, [r0, #44]	; 0x2c
				}

				traceTASK_PRIORITY_INHERIT( pxTCB, pxCurrentTCB->uxPriority );
			}
		}
	}
     e4e:	bd38      	pop	{r3, r4, r5, pc}
     e50:	20000230 	.word	0x20000230
     e54:	200001b4 	.word	0x200001b4
     e58:	00000685 	.word	0x00000685
     e5c:	20000250 	.word	0x20000250
     e60:	00000631 	.word	0x00000631

00000e64 <vTaskPriorityDisinherit>:
/*-----------------------------------------------------------*/

#if ( configUSE_MUTEXES == 1 )

	void vTaskPriorityDisinherit( xTaskHandle * const pxMutexHolder )
	{
     e64:	b538      	push	{r3, r4, r5, lr}
	tskTCB * const pxTCB = ( tskTCB * ) pxMutexHolder;

		if( pxMutexHolder != NULL )
     e66:	2800      	cmp	r0, #0
     e68:	d01b      	beq.n	ea2 <vTaskPriorityDisinherit+0x3e>
		{
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
     e6a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
     e6c:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
     e6e:	4293      	cmp	r3, r2
     e70:	d017      	beq.n	ea2 <vTaskPriorityDisinherit+0x3e>
     e72:	1c04      	adds	r4, r0, #0
			{
				/* We must be the running task to be able to give the mutex back.
				Remove ourselves from the ready list we currently appear in. */
				if( uxListRemove( ( xListItem * ) &( pxTCB->xGenericListItem ) ) == 0 )
     e74:	1d05      	adds	r5, r0, #4
     e76:	1c28      	adds	r0, r5, #0
     e78:	4b0a      	ldr	r3, [pc, #40]	; (ea4 <vTaskPriorityDisinherit+0x40>)
     e7a:	4798      	blx	r3
				}

				/* Disinherit the priority before adding the task into the new
				ready list. */
				traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
				pxTCB->uxPriority = pxTCB->uxBasePriority;
     e7c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
     e7e:	62e3      	str	r3, [r4, #44]	; 0x2c
				listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), configMAX_PRIORITIES - ( portTickType ) pxTCB->uxPriority );
     e80:	2206      	movs	r2, #6
     e82:	1ad2      	subs	r2, r2, r3
     e84:	61a2      	str	r2, [r4, #24]
				prvAddTaskToReadyQueue( pxTCB );
     e86:	4a08      	ldr	r2, [pc, #32]	; (ea8 <vTaskPriorityDisinherit+0x44>)
     e88:	6812      	ldr	r2, [r2, #0]
     e8a:	4293      	cmp	r3, r2
     e8c:	d901      	bls.n	e92 <vTaskPriorityDisinherit+0x2e>
     e8e:	4a06      	ldr	r2, [pc, #24]	; (ea8 <vTaskPriorityDisinherit+0x44>)
     e90:	6013      	str	r3, [r2, #0]
     e92:	0098      	lsls	r0, r3, #2
     e94:	18c0      	adds	r0, r0, r3
     e96:	0083      	lsls	r3, r0, #2
     e98:	4804      	ldr	r0, [pc, #16]	; (eac <vTaskPriorityDisinherit+0x48>)
     e9a:	18c0      	adds	r0, r0, r3
     e9c:	1c29      	adds	r1, r5, #0
     e9e:	4b04      	ldr	r3, [pc, #16]	; (eb0 <vTaskPriorityDisinherit+0x4c>)
     ea0:	4798      	blx	r3
			}
		}
	}
     ea2:	bd38      	pop	{r3, r4, r5, pc}
     ea4:	00000685 	.word	0x00000685
     ea8:	20000250 	.word	0x20000250
     eac:	200001b4 	.word	0x200001b4
     eb0:	00000631 	.word	0x00000631

00000eb4 <vPortStartFirstTask>:
void vPortStartFirstTask( void )
{
	/* The MSP stack is not reset as, unlike on M3/4 parts, there is no vector
	table offset register that can be used to locate the initial stack value.
	Not all M0 parts have the application vector table at address 0. */
	__asm volatile(
     eb4:	4a06      	ldr	r2, [pc, #24]	; (ed0 <pxCurrentTCBConst3>)
     eb6:	6813      	ldr	r3, [r2, #0]
     eb8:	6818      	ldr	r0, [r3, #0]
     eba:	3020      	adds	r0, #32
     ebc:	f380 8809 	msr	PSP, r0
     ec0:	2002      	movs	r0, #2
     ec2:	f380 8814 	msr	CONTROL, r0
     ec6:	bc3f      	pop	{r0, r1, r2, r3, r4, r5}
     ec8:	46ae      	mov	lr, r5
     eca:	b662      	cpsie	i
     ecc:	bd00      	pop	{pc}
     ece:	46c0      	nop			; (mov r8, r8)

00000ed0 <pxCurrentTCBConst3>:
     ed0:	20000230 	.word	0x20000230

00000ed4 <pxPortInitialiseStack>:

/*
 * See header file for description.
 */
portSTACK_TYPE *pxPortInitialiseStack( portSTACK_TYPE *pxTopOfStack, pdTASK_CODE pxCode, void *pvParameters )
{
     ed4:	b510      	push	{r4, lr}
	/* Simulate the stack frame as it would be created by a context switch
	interrupt. */
	pxTopOfStack--; /* Offset added to account for the way the MCU uses the stack on entry/exit of interrupts. */
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
     ed6:	1f03      	subs	r3, r0, #4
     ed8:	2480      	movs	r4, #128	; 0x80
     eda:	0464      	lsls	r4, r4, #17
     edc:	601c      	str	r4, [r3, #0]
	pxTopOfStack--;
	*pxTopOfStack = ( portSTACK_TYPE ) pxCode;	/* PC */
     ede:	3b04      	subs	r3, #4
     ee0:	6019      	str	r1, [r3, #0]
	pxTopOfStack -= 6;	/* LR, R12, R3..R1 */
	*pxTopOfStack = ( portSTACK_TYPE ) pvParameters;	/* R0 */
     ee2:	3b18      	subs	r3, #24
     ee4:	601a      	str	r2, [r3, #0]
	pxTopOfStack -= 8; /* R11..R4. */
     ee6:	3840      	subs	r0, #64	; 0x40

	return pxTopOfStack;
}
     ee8:	bd10      	pop	{r4, pc}
     eea:	46c0      	nop			; (mov r8, r8)

00000eec <SVC_Handler>:
/*-----------------------------------------------------------*/

void vPortSVCHandler( void )
{
	__asm volatile (
     eec:	4b08      	ldr	r3, [pc, #32]	; (f10 <pxCurrentTCBConst2>)
     eee:	6819      	ldr	r1, [r3, #0]
     ef0:	6808      	ldr	r0, [r1, #0]
     ef2:	3010      	adds	r0, #16
     ef4:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
     ef6:	46a0      	mov	r8, r4
     ef8:	46a9      	mov	r9, r5
     efa:	46b2      	mov	sl, r6
     efc:	46bb      	mov	fp, r7
     efe:	f380 8809 	msr	PSP, r0
     f02:	3820      	subs	r0, #32
     f04:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
     f06:	4671      	mov	r1, lr
     f08:	200d      	movs	r0, #13
     f0a:	4301      	orrs	r1, r0
     f0c:	4708      	bx	r1
     f0e:	46c0      	nop			; (mov r8, r8)

00000f10 <pxCurrentTCBConst2>:
     f10:	20000230 	.word	0x20000230

00000f14 <vPortYield>:
/*-----------------------------------------------------------*/

void vPortYield( void )
{
	/* Set a PendSV to request a context switch. */
	*( portNVIC_INT_CTRL ) = portNVIC_PENDSVSET;
     f14:	2280      	movs	r2, #128	; 0x80
     f16:	0552      	lsls	r2, r2, #21
     f18:	4b03      	ldr	r3, [pc, #12]	; (f28 <vPortYield+0x14>)
     f1a:	601a      	str	r2, [r3, #0]

	/* Barriers are normally not required but do ensure the code is completely
	within the specified behaviour for the architecture. */
	__asm volatile( "dsb" );
     f1c:	f3bf 8f4f 	dsb	sy
	__asm volatile( "isb" );
     f20:	f3bf 8f6f 	isb	sy
}
     f24:	4770      	bx	lr
     f26:	46c0      	nop			; (mov r8, r8)
     f28:	e000ed04 	.word	0xe000ed04

00000f2c <vPortEnterCritical>:
/*-----------------------------------------------------------*/

void vPortEnterCritical( void )
{
    portDISABLE_INTERRUPTS();
     f2c:	b672      	cpsid	i
    uxCriticalNesting++;
     f2e:	4a04      	ldr	r2, [pc, #16]	; (f40 <vPortEnterCritical+0x14>)
     f30:	6813      	ldr	r3, [r2, #0]
     f32:	3301      	adds	r3, #1
     f34:	6013      	str	r3, [r2, #0]
	__asm volatile( "dsb" );
     f36:	f3bf 8f4f 	dsb	sy
	__asm volatile( "isb" );
     f3a:	f3bf 8f6f 	isb	sy
}
     f3e:	4770      	bx	lr
     f40:	200000b8 	.word	0x200000b8

00000f44 <vPortExitCritical>:
/*-----------------------------------------------------------*/

void vPortExitCritical( void )
{
    uxCriticalNesting--;
     f44:	4a03      	ldr	r2, [pc, #12]	; (f54 <vPortExitCritical+0x10>)
     f46:	6813      	ldr	r3, [r2, #0]
     f48:	3b01      	subs	r3, #1
     f4a:	6013      	str	r3, [r2, #0]
    if( uxCriticalNesting == 0 )
     f4c:	2b00      	cmp	r3, #0
     f4e:	d100      	bne.n	f52 <vPortExitCritical+0xe>
    {
        portENABLE_INTERRUPTS();
     f50:	b662      	cpsie	i
    }
}
     f52:	4770      	bx	lr
     f54:	200000b8 	.word	0x200000b8

00000f58 <PendSV_Handler>:

void xPortPendSVHandler( void )
{
	/* This is a naked function. */

	__asm volatile
     f58:	f3ef 8009 	mrs	r0, PSP
     f5c:	4b0e      	ldr	r3, [pc, #56]	; (f98 <pxCurrentTCBConst>)
     f5e:	681a      	ldr	r2, [r3, #0]
     f60:	3820      	subs	r0, #32
     f62:	6010      	str	r0, [r2, #0]
     f64:	c0f0      	stmia	r0!, {r4, r5, r6, r7}
     f66:	4644      	mov	r4, r8
     f68:	464d      	mov	r5, r9
     f6a:	4656      	mov	r6, sl
     f6c:	465f      	mov	r7, fp
     f6e:	c0f0      	stmia	r0!, {r4, r5, r6, r7}
     f70:	b508      	push	{r3, lr}
     f72:	b672      	cpsid	i
     f74:	f7ff fe32 	bl	bdc <vTaskSwitchContext>
     f78:	b662      	cpsie	i
     f7a:	bc0c      	pop	{r2, r3}
     f7c:	6811      	ldr	r1, [r2, #0]
     f7e:	6808      	ldr	r0, [r1, #0]
     f80:	3010      	adds	r0, #16
     f82:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
     f84:	46a0      	mov	r8, r4
     f86:	46a9      	mov	r9, r5
     f88:	46b2      	mov	sl, r6
     f8a:	46bb      	mov	fp, r7
     f8c:	f380 8809 	msr	PSP, r0
     f90:	3820      	subs	r0, #32
     f92:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
     f94:	4718      	bx	r3
     f96:	46c0      	nop			; (mov r8, r8)

00000f98 <pxCurrentTCBConst>:
     f98:	20000230 	.word	0x20000230

00000f9c <SysTick_Handler>:
	);
}
/*-----------------------------------------------------------*/

void xPortSysTickHandler( void )
{
     f9c:	b508      	push	{r3, lr}
unsigned long ulDummy;

	/* If using preemption, also force a context switch. */
	#if configUSE_PREEMPTION == 1
		*(portNVIC_INT_CTRL) = portNVIC_PENDSVSET;
     f9e:	2280      	movs	r2, #128	; 0x80
     fa0:	0552      	lsls	r2, r2, #21
     fa2:	4b03      	ldr	r3, [pc, #12]	; (fb0 <SysTick_Handler+0x14>)
     fa4:	601a      	str	r2, [r3, #0]
	#endif

	ulDummy = portSET_INTERRUPT_MASK_FROM_ISR();
     fa6:	b672      	cpsid	i
	{
		vTaskIncrementTick();
     fa8:	4b02      	ldr	r3, [pc, #8]	; (fb4 <SysTick_Handler+0x18>)
     faa:	4798      	blx	r3
	}
	portCLEAR_INTERRUPT_MASK_FROM_ISR( ulDummy );
     fac:	b662      	cpsie	i
}
     fae:	bd08      	pop	{r3, pc}
     fb0:	e000ed04 	.word	0xe000ed04
     fb4:	0000097d 	.word	0x0000097d

00000fb8 <vPortSetupTimerInterrupt>:
/*
 * Setup the systick timer to generate the tick interrupts at the required
 * frequency.
 */
__attribute__(( weak )) void vPortSetupTimerInterrupt( void )
{
     fb8:	b508      	push	{r3, lr}
	/* Configure SysTick to interrupt at the requested rate. */
	*(portNVIC_SYSTICK_VAL)  = 0; /* Load the SysTick Counter Value */
     fba:	2200      	movs	r2, #0
     fbc:	4b07      	ldr	r3, [pc, #28]	; (fdc <vPortSetupTimerInterrupt+0x24>)
     fbe:	601a      	str	r2, [r3, #0]
	*(portNVIC_SYSTICK_LOAD) = ( configCPU_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
     fc0:	2000      	movs	r0, #0
     fc2:	4b07      	ldr	r3, [pc, #28]	; (fe0 <vPortSetupTimerInterrupt+0x28>)
     fc4:	4798      	blx	r3
     fc6:	21fa      	movs	r1, #250	; 0xfa
     fc8:	0089      	lsls	r1, r1, #2
     fca:	4b06      	ldr	r3, [pc, #24]	; (fe4 <vPortSetupTimerInterrupt+0x2c>)
     fcc:	4798      	blx	r3
     fce:	3801      	subs	r0, #1
     fd0:	4b05      	ldr	r3, [pc, #20]	; (fe8 <vPortSetupTimerInterrupt+0x30>)
     fd2:	6018      	str	r0, [r3, #0]
	*(portNVIC_SYSTICK_CTRL) = portNVIC_SYSTICK_CLK | portNVIC_SYSTICK_INT | portNVIC_SYSTICK_ENABLE;
     fd4:	2207      	movs	r2, #7
     fd6:	4b05      	ldr	r3, [pc, #20]	; (fec <vPortSetupTimerInterrupt+0x34>)
     fd8:	601a      	str	r2, [r3, #0]
}
     fda:	bd08      	pop	{r3, pc}
     fdc:	e000e018 	.word	0xe000e018
     fe0:	00003b75 	.word	0x00003b75
     fe4:	00005e05 	.word	0x00005e05
     fe8:	e000e014 	.word	0xe000e014
     fec:	e000e010 	.word	0xe000e010

00000ff0 <xPortStartScheduler>:

/*
 * See header file for description.
 */
portBASE_TYPE xPortStartScheduler( void )
{
     ff0:	b508      	push	{r3, lr}
	/* Make PendSV, CallSV and SysTick the same priroity as the kernel. */
	*(portNVIC_SYSPRI2) |= portNVIC_PENDSV_PRI;
     ff2:	4b0a      	ldr	r3, [pc, #40]	; (101c <xPortStartScheduler+0x2c>)
     ff4:	681a      	ldr	r2, [r3, #0]
     ff6:	21ff      	movs	r1, #255	; 0xff
     ff8:	0409      	lsls	r1, r1, #16
     ffa:	430a      	orrs	r2, r1
     ffc:	601a      	str	r2, [r3, #0]
	*(portNVIC_SYSPRI2) |= portNVIC_SYSTICK_PRI;
     ffe:	681a      	ldr	r2, [r3, #0]
    1000:	21ff      	movs	r1, #255	; 0xff
    1002:	0609      	lsls	r1, r1, #24
    1004:	430a      	orrs	r2, r1
    1006:	601a      	str	r2, [r3, #0]

	/* Start the timer that generates the tick ISR.  Interrupts are disabled
	here already. */
	vPortSetupTimerInterrupt();
    1008:	4b05      	ldr	r3, [pc, #20]	; (1020 <xPortStartScheduler+0x30>)
    100a:	4798      	blx	r3

	/* Initialise the critical nesting count ready for the first task. */
	uxCriticalNesting = 0;
    100c:	2200      	movs	r2, #0
    100e:	4b05      	ldr	r3, [pc, #20]	; (1024 <xPortStartScheduler+0x34>)
    1010:	601a      	str	r2, [r3, #0]

	/* Start the first task. */
	vPortStartFirstTask();
    1012:	4b05      	ldr	r3, [pc, #20]	; (1028 <xPortStartScheduler+0x38>)
    1014:	4798      	blx	r3

	/* Should not get here! */
	return 0;
}
    1016:	2000      	movs	r0, #0
    1018:	bd08      	pop	{r3, pc}
    101a:	46c0      	nop			; (mov r8, r8)
    101c:	e000ed20 	.word	0xe000ed20
    1020:	00000fb9 	.word	0x00000fb9
    1024:	200000b8 	.word	0x200000b8
    1028:	00000eb5 	.word	0x00000eb5

0000102c <pvPortMalloc>:
static size_t xNextFreeByte = ( size_t ) 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
    102c:	b538      	push	{r3, r4, r5, lr}
    102e:	1c04      	adds	r4, r0, #0
void *pvReturn = NULL;
static unsigned char *pucAlignedHeap = NULL;

	/* Ensure that blocks are always aligned to the required number of bytes. */
	#if portBYTE_ALIGNMENT != 1
		if( xWantedSize & portBYTE_ALIGNMENT_MASK )
    1030:	0743      	lsls	r3, r0, #29
    1032:	d002      	beq.n	103a <pvPortMalloc+0xe>
		{
			/* Byte alignment required. */
			xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
    1034:	2307      	movs	r3, #7
    1036:	439c      	bics	r4, r3
    1038:	3408      	adds	r4, #8
		}
	#endif

	vTaskSuspendAll();
    103a:	4b10      	ldr	r3, [pc, #64]	; (107c <pvPortMalloc+0x50>)
    103c:	4798      	blx	r3
	{
		if( pucAlignedHeap == NULL )
    103e:	4b10      	ldr	r3, [pc, #64]	; (1080 <pvPortMalloc+0x54>)
    1040:	681b      	ldr	r3, [r3, #0]
    1042:	2b00      	cmp	r3, #0
    1044:	d105      	bne.n	1052 <pvPortMalloc+0x26>
		{
			/* Ensure the heap starts on a correctly aligned boundary. */
			pucAlignedHeap = ( unsigned char * ) ( ( ( portPOINTER_SIZE_TYPE ) &ucHeap[ portBYTE_ALIGNMENT ] ) & ( ( portPOINTER_SIZE_TYPE ) ~portBYTE_ALIGNMENT_MASK ) );
    1046:	2207      	movs	r2, #7
    1048:	4b0e      	ldr	r3, [pc, #56]	; (1084 <pvPortMalloc+0x58>)
    104a:	3308      	adds	r3, #8
    104c:	4393      	bics	r3, r2
    104e:	4a0c      	ldr	r2, [pc, #48]	; (1080 <pvPortMalloc+0x54>)
    1050:	6013      	str	r3, [r2, #0]
		}

		/* Check there is enough room left for the allocation. */
		if( ( ( xNextFreeByte + xWantedSize ) < configADJUSTED_HEAP_SIZE ) &&
    1052:	4b0d      	ldr	r3, [pc, #52]	; (1088 <pvPortMalloc+0x5c>)
    1054:	681b      	ldr	r3, [r3, #0]
    1056:	18e4      	adds	r4, r4, r3
    1058:	4a0c      	ldr	r2, [pc, #48]	; (108c <pvPortMalloc+0x60>)
    105a:	4294      	cmp	r4, r2
    105c:	d807      	bhi.n	106e <pvPortMalloc+0x42>
    105e:	42a3      	cmp	r3, r4
    1060:	d207      	bcs.n	1072 <pvPortMalloc+0x46>
			( ( xNextFreeByte + xWantedSize ) > xNextFreeByte )	)/* Check for overflow. */
		{
			/* Return the next free byte then increment the index past this
			block. */
			pvReturn = pucAlignedHeap + xNextFreeByte;
    1062:	4a07      	ldr	r2, [pc, #28]	; (1080 <pvPortMalloc+0x54>)
    1064:	6815      	ldr	r5, [r2, #0]
    1066:	18ed      	adds	r5, r5, r3
			xNextFreeByte += xWantedSize;
    1068:	4b07      	ldr	r3, [pc, #28]	; (1088 <pvPortMalloc+0x5c>)
    106a:	601c      	str	r4, [r3, #0]
    106c:	e002      	b.n	1074 <pvPortMalloc+0x48>

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
void *pvReturn = NULL;
    106e:	2500      	movs	r5, #0
    1070:	e000      	b.n	1074 <pvPortMalloc+0x48>
    1072:	2500      	movs	r5, #0
			block. */
			pvReturn = pucAlignedHeap + xNextFreeByte;
			xNextFreeByte += xWantedSize;
		}
	}
	xTaskResumeAll();
    1074:	4b06      	ldr	r3, [pc, #24]	; (1090 <pvPortMalloc+0x64>)
    1076:	4798      	blx	r3
		}
	}
	#endif

	return pvReturn;
}
    1078:	1c28      	adds	r0, r5, #0
    107a:	bd38      	pop	{r3, r4, r5, pc}
    107c:	0000094d 	.word	0x0000094d
    1080:	20003d14 	.word	0x20003d14
    1084:	2000027c 	.word	0x2000027c
    1088:	20000278 	.word	0x20000278
    108c:	00003a8f 	.word	0x00003a8f
    1090:	00000a99 	.word	0x00000a99

00001094 <vPortFree>:
	heap_4.c for alternative implementations, and the memory management pages of
	http://www.FreeRTOS.org for more information. */
	( void ) pv;

	/* Force an assert as it is invalid to call this function. */
	configASSERT( pv == NULL );
    1094:	2800      	cmp	r0, #0
    1096:	d001      	beq.n	109c <vPortFree+0x8>
    1098:	b672      	cpsid	i
    109a:	e7fe      	b.n	109a <vPortFree+0x6>
}
    109c:	4770      	bx	lr
    109e:	46c0      	nop			; (mov r8, r8)

000010a0 <_Z3sup11structClockS_>:



Clock timeManage={0,0,true};

bool sup(Clock clock1,Clock clock2){
    10a0:	b082      	sub	sp, #8
    10a2:	b084      	sub	sp, #16
    10a4:	9001      	str	r0, [sp, #4]
    10a6:	9102      	str	r1, [sp, #8]
    10a8:	9203      	str	r2, [sp, #12]
    10aa:	9305      	str	r3, [sp, #20]
		if(clock1.second>clock2.second){//clock1>clock2
    10ac:	9a01      	ldr	r2, [sp, #4]
    10ae:	9b05      	ldr	r3, [sp, #20]
			return true;
    10b0:	2001      	movs	r0, #1


Clock timeManage={0,0,true};

bool sup(Clock clock1,Clock clock2){
		if(clock1.second>clock2.second){//clock1>clock2
    10b2:	429a      	cmp	r2, r3
    10b4:	d809      	bhi.n	10ca <_Z3sup11structClockS_+0x2a>
			return true;
		}
		else{
			if(clock1.second<clock2.second){
    10b6:	9a01      	ldr	r2, [sp, #4]
    10b8:	9b05      	ldr	r3, [sp, #20]
				return false;
    10ba:	2000      	movs	r0, #0
bool sup(Clock clock1,Clock clock2){
		if(clock1.second>clock2.second){//clock1>clock2
			return true;
		}
		else{
			if(clock1.second<clock2.second){
    10bc:	429a      	cmp	r2, r3
    10be:	d304      	bcc.n	10ca <_Z3sup11structClockS_+0x2a>
				return false;
			}
			else{//egual
				if(clock1.halfmillis>clock2.halfmillis){
    10c0:	9802      	ldr	r0, [sp, #8]
    10c2:	9b06      	ldr	r3, [sp, #24]
    10c4:	4283      	cmp	r3, r0
    10c6:	4180      	sbcs	r0, r0
    10c8:	4240      	negs	r0, r0
					return false;
				}
			}
		}

}
    10ca:	b004      	add	sp, #16
    10cc:	b002      	add	sp, #8
    10ce:	4770      	bx	lr

000010d0 <_Z11subClockPos11structClockS_>:
	}

	
	return ret;
}
Clock subClockPos(Clock clock1,Clock clock2 ){
    10d0:	b084      	sub	sp, #16
    10d2:	9101      	str	r1, [sp, #4]
    10d4:	9202      	str	r2, [sp, #8]
    10d6:	9303      	str	r3, [sp, #12]
	Clock ret={0,0,true};
    10d8:	2300      	movs	r3, #0
    10da:	6003      	str	r3, [r0, #0]
    10dc:	6043      	str	r3, [r0, #4]
    10de:	3301      	adds	r3, #1
    10e0:	7203      	strb	r3, [r0, #8]
	//clock1.second+=clock1.halfmillis/RTC_FREQ;
	//clock1.halfmillis=clock1.halfmillis%RTC_FREQ;	
		
	//clock2.second+=clock2.halfmillis/RTC_FREQ;
	//clock2.halfmillis=clock2.halfmillis%RTC_FREQ;
	long int halfmillis=clock2.halfmillis;
    10e2:	9905      	ldr	r1, [sp, #20]
	ret.second=clock1.second-clock2.second;
    10e4:	9a01      	ldr	r2, [sp, #4]
    10e6:	9b04      	ldr	r3, [sp, #16]
    10e8:	1ad2      	subs	r2, r2, r3
    10ea:	6002      	str	r2, [r0, #0]
	halfmillis=(long int)clock1.halfmillis-halfmillis;
    10ec:	9b02      	ldr	r3, [sp, #8]
    10ee:	1a5b      	subs	r3, r3, r1
	
	
	
	if(halfmillis<0){
    10f0:	d50b      	bpl.n	110a <_Z11subClockPos11structClockS_+0x3a>
		
		if(ret.second!=0){
    10f2:	6802      	ldr	r2, [r0, #0]
    10f4:	2a00      	cmp	r2, #0
    10f6:	d009      	beq.n	110c <_Z11subClockPos11structClockS_+0x3c>
				pc.printf("c1:%ld,%ld",clock1.second,clock1.halfmillis);
				pc.printf("c2:%ld,%ld",clock2.second,clock2.halfmillis);*/
				//sendHMI("error clock");
			}
			
			ret.second--;
    10f8:	6802      	ldr	r2, [r0, #0]
    10fa:	3a01      	subs	r2, #1
    10fc:	6002      	str	r2, [r0, #0]
			ret.halfmillis=(unsigned int)(halfmillis+RTC_FREQ);
    10fe:	22fa      	movs	r2, #250	; 0xfa
    1100:	01d2      	lsls	r2, r2, #7
    1102:	4694      	mov	ip, r2
    1104:	4463      	add	r3, ip
    1106:	6043      	str	r3, [r0, #4]
    1108:	e000      	b.n	110c <_Z11subClockPos11structClockS_+0x3c>
		}
	}
	else{
		ret.halfmillis=halfmillis;
    110a:	6043      	str	r3, [r0, #4]
	}
			
	return ret;
    110c:	b004      	add	sp, #16
    110e:	4770      	bx	lr

00001110 <_Z8subClock11structClockS_>:
	if(clk.sign==false){
		clk.sign=true;
	}
	return clk;
}
Clock subClock(Clock clock1,Clock clock2 ){
    1110:	b570      	push	{r4, r5, r6, lr}
    1112:	b08e      	sub	sp, #56	; 0x38
    1114:	1c04      	adds	r4, r0, #0
    1116:	a805      	add	r0, sp, #20
    1118:	9105      	str	r1, [sp, #20]
    111a:	9206      	str	r2, [sp, #24]
    111c:	9307      	str	r3, [sp, #28]
	Clock ret={0,0,true};
    111e:	2300      	movs	r3, #0
    1120:	6023      	str	r3, [r4, #0]
    1122:	6063      	str	r3, [r4, #4]
    1124:	3301      	adds	r3, #1
    1126:	7223      	strb	r3, [r4, #8]
	if(clock1.sign!=clock2.sign){
    1128:	7a03      	ldrb	r3, [r0, #8]
    112a:	aa12      	add	r2, sp, #72	; 0x48
    112c:	7a12      	ldrb	r2, [r2, #8]
    112e:	b2db      	uxtb	r3, r3
    1130:	4293      	cmp	r3, r2
    1132:	d020      	beq.n	1176 <_Z8subClock11structClockS_+0x66>
		if(clock1.sign==true){// + - -
    1134:	7a03      	ldrb	r3, [r0, #8]
    1136:	2b00      	cmp	r3, #0
    1138:	d00d      	beq.n	1156 <_Z8subClock11structClockS_+0x46>
			clock2.sign=true;
    113a:	2201      	movs	r2, #1
    113c:	ab12      	add	r3, sp, #72	; 0x48
    113e:	721a      	strb	r2, [r3, #8]
			ret=sumClock(clock1,clock2);
    1140:	466b      	mov	r3, sp
    1142:	aa12      	add	r2, sp, #72	; 0x48
    1144:	ca23      	ldmia	r2!, {r0, r1, r5}
    1146:	c323      	stmia	r3!, {r0, r1, r5}
    1148:	1c20      	adds	r0, r4, #0
    114a:	9905      	ldr	r1, [sp, #20]
    114c:	9a06      	ldr	r2, [sp, #24]
    114e:	9b07      	ldr	r3, [sp, #28]
    1150:	4d2e      	ldr	r5, [pc, #184]	; (120c <_Z8subClock11structClockS_+0xfc>)
    1152:	47a8      	blx	r5
    1154:	e056      	b.n	1204 <_Z8subClock11structClockS_+0xf4>
		}
		else{// - - +
			clock1.sign=true;
    1156:	ab05      	add	r3, sp, #20
    1158:	2201      	movs	r2, #1
    115a:	721a      	strb	r2, [r3, #8]
			ret=sumClock(clock1,clock2);
    115c:	466a      	mov	r2, sp
    115e:	a912      	add	r1, sp, #72	; 0x48
    1160:	c961      	ldmia	r1!, {r0, r5, r6}
    1162:	c261      	stmia	r2!, {r0, r5, r6}
    1164:	1c20      	adds	r0, r4, #0
    1166:	9905      	ldr	r1, [sp, #20]
    1168:	9a06      	ldr	r2, [sp, #24]
    116a:	9b07      	ldr	r3, [sp, #28]
    116c:	4d27      	ldr	r5, [pc, #156]	; (120c <_Z8subClock11structClockS_+0xfc>)
    116e:	47a8      	blx	r5
			ret.sign=false;
    1170:	2300      	movs	r3, #0
    1172:	7223      	strb	r3, [r4, #8]
    1174:	e046      	b.n	1204 <_Z8subClock11structClockS_+0xf4>
		}
	}
	else{
		if(clock1.sign==true){ //+ - +
    1176:	ab05      	add	r3, sp, #20
    1178:	7a1b      	ldrb	r3, [r3, #8]
    117a:	2b00      	cmp	r3, #0
    117c:	d02b      	beq.n	11d6 <_Z8subClock11structClockS_+0xc6>
    117e:	aa08      	add	r2, sp, #32
    1180:	ab05      	add	r3, sp, #20
    1182:	cb23      	ldmia	r3!, {r0, r1, r5}
    1184:	c223      	stmia	r2!, {r0, r1, r5}
    1186:	ab0b      	add	r3, sp, #44	; 0x2c
    1188:	aa12      	add	r2, sp, #72	; 0x48
    118a:	ca23      	ldmia	r2!, {r0, r1, r5}
    118c:	c323      	stmia	r3!, {r0, r1, r5}


Clock timeManage={0,0,true};

bool sup(Clock clock1,Clock clock2){
		if(clock1.second>clock2.second){//clock1>clock2
    118e:	9a08      	ldr	r2, [sp, #32]
    1190:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    1192:	429a      	cmp	r2, r3
    1194:	d807      	bhi.n	11a6 <_Z8subClock11structClockS_+0x96>
			return true;
		}
		else{
			if(clock1.second<clock2.second){
    1196:	9a08      	ldr	r2, [sp, #32]
    1198:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    119a:	429a      	cmp	r2, r3
    119c:	d30e      	bcc.n	11bc <_Z8subClock11structClockS_+0xac>
				return false;
			}
			else{//egual
				if(clock1.halfmillis>clock2.halfmillis){
    119e:	9a09      	ldr	r2, [sp, #36]	; 0x24
    11a0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
			ret.sign=false;
		}
	}
	else{
		if(clock1.sign==true){ //+ - +
			if(sup(clock1,clock2)){//clock1>Clock2
    11a2:	429a      	cmp	r2, r3
    11a4:	d90a      	bls.n	11bc <_Z8subClock11structClockS_+0xac>
				
				ret=subClockPos(clock1,clock2);
    11a6:	466b      	mov	r3, sp
    11a8:	aa12      	add	r2, sp, #72	; 0x48
    11aa:	ca23      	ldmia	r2!, {r0, r1, r5}
    11ac:	c323      	stmia	r3!, {r0, r1, r5}
    11ae:	1c20      	adds	r0, r4, #0
    11b0:	9905      	ldr	r1, [sp, #20]
    11b2:	9a06      	ldr	r2, [sp, #24]
    11b4:	9b07      	ldr	r3, [sp, #28]
    11b6:	4d16      	ldr	r5, [pc, #88]	; (1210 <_Z8subClock11structClockS_+0x100>)
    11b8:	47a8      	blx	r5
    11ba:	e023      	b.n	1204 <_Z8subClock11structClockS_+0xf4>
			}
			else{
				ret=subClockPos(clock2,clock1);
    11bc:	ab05      	add	r3, sp, #20
    11be:	466a      	mov	r2, sp
    11c0:	cb23      	ldmia	r3!, {r0, r1, r5}
    11c2:	c223      	stmia	r2!, {r0, r1, r5}
    11c4:	1c20      	adds	r0, r4, #0
    11c6:	9912      	ldr	r1, [sp, #72]	; 0x48
    11c8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    11ca:	9b14      	ldr	r3, [sp, #80]	; 0x50
    11cc:	4d10      	ldr	r5, [pc, #64]	; (1210 <_Z8subClock11structClockS_+0x100>)
    11ce:	47a8      	blx	r5
				ret.sign=false;
    11d0:	2300      	movs	r3, #0
    11d2:	7223      	strb	r3, [r4, #8]
    11d4:	e016      	b.n	1204 <_Z8subClock11structClockS_+0xf4>
			}
		}
		else{// - - - 
			clock2.sign=true;
    11d6:	2201      	movs	r2, #1
    11d8:	ab12      	add	r3, sp, #72	; 0x48
    11da:	721a      	strb	r2, [r3, #8]
			clock1.sign=true;	
    11dc:	ab05      	add	r3, sp, #20
    11de:	721a      	strb	r2, [r3, #8]
			ret=subClock(clock1,clock2);
    11e0:	466a      	mov	r2, sp
    11e2:	a912      	add	r1, sp, #72	; 0x48
    11e4:	c961      	ldmia	r1!, {r0, r5, r6}
    11e6:	c261      	stmia	r2!, {r0, r5, r6}
    11e8:	1c20      	adds	r0, r4, #0
    11ea:	9905      	ldr	r1, [sp, #20]
    11ec:	9a06      	ldr	r2, [sp, #24]
    11ee:	9b07      	ldr	r3, [sp, #28]
    11f0:	f7ff ff8e 	bl	1110 <_Z8subClock11structClockS_>
			if(ret.sign==true){
    11f4:	7a23      	ldrb	r3, [r4, #8]
    11f6:	2b00      	cmp	r3, #0
    11f8:	d002      	beq.n	1200 <_Z8subClock11structClockS_+0xf0>
				ret.sign=false;
    11fa:	2300      	movs	r3, #0
    11fc:	7223      	strb	r3, [r4, #8]
    11fe:	e001      	b.n	1204 <_Z8subClock11structClockS_+0xf4>
			}
			else{
				ret.sign=true;
    1200:	2301      	movs	r3, #1
    1202:	7223      	strb	r3, [r4, #8]
		}
	}

	
	return ret;
}
    1204:	1c20      	adds	r0, r4, #0
    1206:	b00e      	add	sp, #56	; 0x38
    1208:	bd70      	pop	{r4, r5, r6, pc}
    120a:	46c0      	nop			; (mov r8, r8)
    120c:	00001215 	.word	0x00001215
    1210:	000010d1 	.word	0x000010d1

00001214 <_Z8sumClock11structClockS_>:
	ret.second=ret.second+(halfmillis/RTC_FREQ);
	ret.halfmillis=halfmillis%RTC_FREQ;
	return ret;
	
}
Clock sumClock(Clock clock1,Clock clock2 ){
    1214:	b5f0      	push	{r4, r5, r6, r7, lr}
    1216:	4647      	mov	r7, r8
    1218:	b480      	push	{r7}
    121a:	b09a      	sub	sp, #104	; 0x68
    121c:	1c04      	adds	r4, r0, #0
    121e:	a805      	add	r0, sp, #20
    1220:	9105      	str	r1, [sp, #20]
    1222:	9206      	str	r2, [sp, #24]
    1224:	9307      	str	r3, [sp, #28]
	Clock ret={0,0,true};
    1226:	2300      	movs	r3, #0
    1228:	6023      	str	r3, [r4, #0]
    122a:	6063      	str	r3, [r4, #4]
    122c:	3301      	adds	r3, #1
    122e:	7223      	strb	r3, [r4, #8]
		
	if((clock1.sign==true)&&(clock2.sign==true)){// + + +
    1230:	7a03      	ldrb	r3, [r0, #8]
    1232:	2b00      	cmp	r3, #0
    1234:	d013      	beq.n	125e <_Z8sumClock11structClockS_+0x4a>
    1236:	ab20      	add	r3, sp, #128	; 0x80
    1238:	7a1b      	ldrb	r3, [r3, #8]
    123a:	2b00      	cmp	r3, #0
    123c:	d114      	bne.n	1268 <_Z8sumClock11structClockS_+0x54>
    123e:	e00e      	b.n	125e <_Z8sumClock11structClockS_+0x4a>
		ret=sumClockPos(clock1,clock2);
	}
	else{
		if((clock1.sign==true)&&(clock2.sign==false)){ // + + -
    1240:	ab20      	add	r3, sp, #128	; 0x80
    1242:	7a1b      	ldrb	r3, [r3, #8]
    1244:	2b00      	cmp	r3, #0
    1246:	d146      	bne.n	12d6 <_Z8sumClock11structClockS_+0xc2>
    1248:	e037      	b.n	12ba <_Z8sumClock11structClockS_+0xa6>
			clock2.sign=true;
			ret=subClock(clock1,clock2);
		}
		else{
					if((clock1.sign==false)&&(clock2.sign==true)){ // - + + 
    124a:	ab20      	add	r3, sp, #128	; 0x80
    124c:	7a1b      	ldrb	r3, [r3, #8]
    124e:	2b00      	cmp	r3, #0
    1250:	d146      	bne.n	12e0 <_Z8sumClock11structClockS_+0xcc>
    1252:	e052      	b.n	12fa <_Z8sumClock11structClockS_+0xe6>
						clock1.sign=true;
						ret=subClock(clock2,clock1);
					}
					else{
						if((clock1.sign==false)&&(clock2.sign==false)){ // - + -
    1254:	ab20      	add	r3, sp, #128	; 0x80
    1256:	7a1b      	ldrb	r3, [r3, #8]
    1258:	2b00      	cmp	r3, #0
    125a:	d053      	beq.n	1304 <_Z8sumClock11structClockS_+0xf0>
    125c:	e081      	b.n	1362 <_Z8sumClock11structClockS_+0x14e>
		
	if((clock1.sign==true)&&(clock2.sign==true)){// + + +
		ret=sumClockPos(clock1,clock2);
	}
	else{
		if((clock1.sign==true)&&(clock2.sign==false)){ // + + -
    125e:	ab05      	add	r3, sp, #20
    1260:	7a1b      	ldrb	r3, [r3, #8]
    1262:	2b00      	cmp	r3, #0
    1264:	d1ec      	bne.n	1240 <_Z8sumClock11structClockS_+0x2c>
    1266:	e036      	b.n	12d6 <_Z8sumClock11structClockS_+0xc2>
    1268:	aa08      	add	r2, sp, #32
    126a:	ab05      	add	r3, sp, #20
    126c:	1c11      	adds	r1, r2, #0
    126e:	cb61      	ldmia	r3!, {r0, r5, r6}
    1270:	c161      	stmia	r1!, {r0, r5, r6}
    1272:	ab0b      	add	r3, sp, #44	; 0x2c
    1274:	1c19      	adds	r1, r3, #0
    1276:	a820      	add	r0, sp, #128	; 0x80
    1278:	c8e0      	ldmia	r0!, {r5, r6, r7}
    127a:	c1e0      	stmia	r1!, {r5, r6, r7}
			}
		}

}
Clock sumClockPos(Clock clock1,Clock clock2 ){
	Clock ret={0,0,true};
    127c:	ad14      	add	r5, sp, #80	; 0x50
    127e:	2100      	movs	r1, #0
    1280:	9114      	str	r1, [sp, #80]	; 0x50
    1282:	9115      	str	r1, [sp, #84]	; 0x54
    1284:	3101      	adds	r1, #1
    1286:	7229      	strb	r1, [r5, #8]
	unsigned long int halfmillis=clock1.halfmillis;
    1288:	9909      	ldr	r1, [sp, #36]	; 0x24
	ret.second=clock1.second+clock2.second;
    128a:	9a08      	ldr	r2, [sp, #32]
    128c:	980b      	ldr	r0, [sp, #44]	; 0x2c
    128e:	1882      	adds	r2, r0, r2
    1290:	9214      	str	r2, [sp, #80]	; 0x50
	halfmillis=halfmillis+clock2.halfmillis;
    1292:	9e0c      	ldr	r6, [sp, #48]	; 0x30
    1294:	1876      	adds	r6, r6, r1
	ret.second=ret.second+(halfmillis/RTC_FREQ);
    1296:	9f14      	ldr	r7, [sp, #80]	; 0x50
    1298:	1c30      	adds	r0, r6, #0
    129a:	21fa      	movs	r1, #250	; 0xfa
    129c:	01c9      	lsls	r1, r1, #7
    129e:	4b3a      	ldr	r3, [pc, #232]	; (1388 <_Z8sumClock11structClockS_+0x174>)
    12a0:	4798      	blx	r3
    12a2:	19c7      	adds	r7, r0, r7
    12a4:	9714      	str	r7, [sp, #80]	; 0x50
	ret.halfmillis=halfmillis%RTC_FREQ;
    12a6:	1c30      	adds	r0, r6, #0
    12a8:	21fa      	movs	r1, #250	; 0xfa
    12aa:	01c9      	lsls	r1, r1, #7
    12ac:	4b37      	ldr	r3, [pc, #220]	; (138c <_Z8sumClock11structClockS_+0x178>)
    12ae:	4798      	blx	r3
    12b0:	6069      	str	r1, [r5, #4]
}
Clock sumClock(Clock clock1,Clock clock2 ){
	Clock ret={0,0,true};
		
	if((clock1.sign==true)&&(clock2.sign==true)){// + + +
		ret=sumClockPos(clock1,clock2);
    12b2:	1c23      	adds	r3, r4, #0
    12b4:	cd07      	ldmia	r5!, {r0, r1, r2}
    12b6:	c307      	stmia	r3!, {r0, r1, r2}
    12b8:	e053      	b.n	1362 <_Z8sumClock11structClockS_+0x14e>
	}
	else{
		if((clock1.sign==true)&&(clock2.sign==false)){ // + + -
			clock2.sign=true;
    12ba:	2201      	movs	r2, #1
    12bc:	ab20      	add	r3, sp, #128	; 0x80
    12be:	721a      	strb	r2, [r3, #8]
			ret=subClock(clock1,clock2);
    12c0:	466b      	mov	r3, sp
    12c2:	aa20      	add	r2, sp, #128	; 0x80
    12c4:	ca23      	ldmia	r2!, {r0, r1, r5}
    12c6:	c323      	stmia	r3!, {r0, r1, r5}
    12c8:	1c20      	adds	r0, r4, #0
    12ca:	9905      	ldr	r1, [sp, #20]
    12cc:	9a06      	ldr	r2, [sp, #24]
    12ce:	9b07      	ldr	r3, [sp, #28]
    12d0:	4d2f      	ldr	r5, [pc, #188]	; (1390 <_Z8sumClock11structClockS_+0x17c>)
    12d2:	47a8      	blx	r5
    12d4:	e045      	b.n	1362 <_Z8sumClock11structClockS_+0x14e>
		}
		else{
					if((clock1.sign==false)&&(clock2.sign==true)){ // - + + 
    12d6:	ab05      	add	r3, sp, #20
    12d8:	7a1b      	ldrb	r3, [r3, #8]
    12da:	2b00      	cmp	r3, #0
    12dc:	d10d      	bne.n	12fa <_Z8sumClock11structClockS_+0xe6>
    12de:	e7b4      	b.n	124a <_Z8sumClock11structClockS_+0x36>
						clock1.sign=true;
    12e0:	ab05      	add	r3, sp, #20
    12e2:	2201      	movs	r2, #1
    12e4:	721a      	strb	r2, [r3, #8]
						ret=subClock(clock2,clock1);
    12e6:	466a      	mov	r2, sp
    12e8:	cb23      	ldmia	r3!, {r0, r1, r5}
    12ea:	c223      	stmia	r2!, {r0, r1, r5}
    12ec:	1c20      	adds	r0, r4, #0
    12ee:	9920      	ldr	r1, [sp, #128]	; 0x80
    12f0:	9a21      	ldr	r2, [sp, #132]	; 0x84
    12f2:	9b22      	ldr	r3, [sp, #136]	; 0x88
    12f4:	4d26      	ldr	r5, [pc, #152]	; (1390 <_Z8sumClock11structClockS_+0x17c>)
    12f6:	47a8      	blx	r5
    12f8:	e033      	b.n	1362 <_Z8sumClock11structClockS_+0x14e>
					}
					else{
						if((clock1.sign==false)&&(clock2.sign==false)){ // - + -
    12fa:	ab05      	add	r3, sp, #20
    12fc:	7a1b      	ldrb	r3, [r3, #8]
    12fe:	2b00      	cmp	r3, #0
    1300:	d12f      	bne.n	1362 <_Z8sumClock11structClockS_+0x14e>
    1302:	e7a7      	b.n	1254 <_Z8sumClock11structClockS_+0x40>
							clock1.sign=true;
    1304:	ab05      	add	r3, sp, #20
    1306:	2101      	movs	r1, #1
    1308:	7219      	strb	r1, [r3, #8]
							clock2.sign=true;
    130a:	aa20      	add	r2, sp, #128	; 0x80
    130c:	7211      	strb	r1, [r2, #8]
    130e:	aa0e      	add	r2, sp, #56	; 0x38
    1310:	1c10      	adds	r0, r2, #0
    1312:	cbe0      	ldmia	r3!, {r5, r6, r7}
    1314:	c0e0      	stmia	r0!, {r5, r6, r7}
    1316:	ab11      	add	r3, sp, #68	; 0x44
    1318:	469c      	mov	ip, r3
    131a:	1c18      	adds	r0, r3, #0
    131c:	ad20      	add	r5, sp, #128	; 0x80
    131e:	cdc8      	ldmia	r5!, {r3, r6, r7}
    1320:	c0c8      	stmia	r0!, {r3, r6, r7}
			}
		}

}
Clock sumClockPos(Clock clock1,Clock clock2 ){
	Clock ret={0,0,true};
    1322:	ad17      	add	r5, sp, #92	; 0x5c
    1324:	2700      	movs	r7, #0
    1326:	9717      	str	r7, [sp, #92]	; 0x5c
    1328:	9718      	str	r7, [sp, #96]	; 0x60
    132a:	7229      	strb	r1, [r5, #8]
	unsigned long int halfmillis=clock1.halfmillis;
    132c:	990f      	ldr	r1, [sp, #60]	; 0x3c
	ret.second=clock1.second+clock2.second;
    132e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    1330:	9811      	ldr	r0, [sp, #68]	; 0x44
    1332:	1882      	adds	r2, r0, r2
    1334:	9217      	str	r2, [sp, #92]	; 0x5c
	halfmillis=halfmillis+clock2.halfmillis;
    1336:	4663      	mov	r3, ip
    1338:	685e      	ldr	r6, [r3, #4]
    133a:	1876      	adds	r6, r6, r1
	ret.second=ret.second+(halfmillis/RTC_FREQ);
    133c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    133e:	4698      	mov	r8, r3
    1340:	1c30      	adds	r0, r6, #0
    1342:	21fa      	movs	r1, #250	; 0xfa
    1344:	01c9      	lsls	r1, r1, #7
    1346:	4b10      	ldr	r3, [pc, #64]	; (1388 <_Z8sumClock11structClockS_+0x174>)
    1348:	4798      	blx	r3
    134a:	4440      	add	r0, r8
    134c:	9017      	str	r0, [sp, #92]	; 0x5c
	ret.halfmillis=halfmillis%RTC_FREQ;
    134e:	1c30      	adds	r0, r6, #0
    1350:	21fa      	movs	r1, #250	; 0xfa
    1352:	01c9      	lsls	r1, r1, #7
    1354:	4b0d      	ldr	r3, [pc, #52]	; (138c <_Z8sumClock11structClockS_+0x178>)
    1356:	4798      	blx	r3
    1358:	6069      	str	r1, [r5, #4]
					}
					else{
						if((clock1.sign==false)&&(clock2.sign==false)){ // - + -
							clock1.sign=true;
							clock2.sign=true;
							ret=sumClockPos(clock1,clock2);
    135a:	1c23      	adds	r3, r4, #0
    135c:	cd07      	ldmia	r5!, {r0, r1, r2}
    135e:	c307      	stmia	r3!, {r0, r1, r2}
							ret.sign=false;
    1360:	7227      	strb	r7, [r4, #8]
						}
					}
		}
		
	}
	ret.second+=ret.halfmillis/RTC_FREQ;
    1362:	6860      	ldr	r0, [r4, #4]
    1364:	6825      	ldr	r5, [r4, #0]
    1366:	21fa      	movs	r1, #250	; 0xfa
    1368:	01c9      	lsls	r1, r1, #7
    136a:	4b07      	ldr	r3, [pc, #28]	; (1388 <_Z8sumClock11structClockS_+0x174>)
    136c:	4798      	blx	r3
    136e:	1945      	adds	r5, r0, r5
    1370:	6025      	str	r5, [r4, #0]
	ret.halfmillis=ret.halfmillis%RTC_FREQ;
    1372:	6860      	ldr	r0, [r4, #4]
    1374:	21fa      	movs	r1, #250	; 0xfa
    1376:	01c9      	lsls	r1, r1, #7
    1378:	4b04      	ldr	r3, [pc, #16]	; (138c <_Z8sumClock11structClockS_+0x178>)
    137a:	4798      	blx	r3
    137c:	6061      	str	r1, [r4, #4]
	return ret;
}
    137e:	1c20      	adds	r0, r4, #0
    1380:	b01a      	add	sp, #104	; 0x68
    1382:	bc04      	pop	{r2}
    1384:	4690      	mov	r8, r2
    1386:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1388:	00005e05 	.word	0x00005e05
    138c:	00005f11 	.word	0x00005f11
    1390:	00001111 	.word	0x00001111

00001394 <_Z9readClockP11structClock>:
volatile int timeCorr;
volatile bool stateLed=false;
DigitalOut led(LED1);
struct rtc_module rtc_instance;

uint32_t  readClock(Clock* timeClock){
    1394:	b570      	push	{r4, r5, r6, lr}
    1396:	1c04      	adds	r4, r0, #0
	//rtc_count_disable(&rtc_instance);
//	Disable_global_interrupt();
	uint32_t timeCounter=0;
	RTC->MODE0.CTRL.reg &=  0b1111111111111101;//disable timer
    1398:	4a13      	ldr	r2, [pc, #76]	; (13e8 <_Z9readClockP11structClock+0x54>)
    139a:	8813      	ldrh	r3, [r2, #0]
    139c:	2102      	movs	r1, #2
    139e:	438b      	bics	r3, r1
    13a0:	8013      	strh	r3, [r2, #0]
	while(RTC->MODE0.STATUS.bit.SYNCBUSY==1);
    13a2:	7a93      	ldrb	r3, [r2, #10]
    13a4:	09db      	lsrs	r3, r3, #7
    13a6:	d1fc      	bne.n	13a2 <_Z9readClockP11structClock+0xe>
	
	timeCounter=RTC->MODE0.COUNT.reg; 
    13a8:	4b0f      	ldr	r3, [pc, #60]	; (13e8 <_Z9readClockP11structClock+0x54>)
    13aa:	691e      	ldr	r6, [r3, #16]
	timeClock->second=timeManage.second;	
    13ac:	4a0f      	ldr	r2, [pc, #60]	; (13ec <_Z9readClockP11structClock+0x58>)
    13ae:	6811      	ldr	r1, [r2, #0]
    13b0:	6021      	str	r1, [r4, #0]
	timeClock->halfmillis=timeManage.halfmillis;	
    13b2:	6852      	ldr	r2, [r2, #4]
    13b4:	6062      	str	r2, [r4, #4]
	//timeCounter=0;
	RTC->MODE0.CTRL.reg |= RTC_MODE0_CTRL_ENABLE; //enable timer
    13b6:	8819      	ldrh	r1, [r3, #0]
    13b8:	2202      	movs	r2, #2
    13ba:	430a      	orrs	r2, r1
    13bc:	801a      	strh	r2, [r3, #0]

	//Enable_global_interrupt();
	timeClock->sign=true;	
    13be:	2301      	movs	r3, #1
    13c0:	7223      	strb	r3, [r4, #8]

	timeClock->halfmillis+=timeCounter;
    13c2:	6863      	ldr	r3, [r4, #4]
    13c4:	199b      	adds	r3, r3, r6
    13c6:	6063      	str	r3, [r4, #4]
	timeClock->second+=timeClock->halfmillis/RTC_FREQ;
    13c8:	6860      	ldr	r0, [r4, #4]
    13ca:	6825      	ldr	r5, [r4, #0]
    13cc:	21fa      	movs	r1, #250	; 0xfa
    13ce:	01c9      	lsls	r1, r1, #7
    13d0:	4b07      	ldr	r3, [pc, #28]	; (13f0 <_Z9readClockP11structClock+0x5c>)
    13d2:	4798      	blx	r3
    13d4:	1945      	adds	r5, r0, r5
    13d6:	6025      	str	r5, [r4, #0]
	timeClock->halfmillis=timeClock->halfmillis%RTC_FREQ;
    13d8:	6860      	ldr	r0, [r4, #4]
    13da:	21fa      	movs	r1, #250	; 0xfa
    13dc:	01c9      	lsls	r1, r1, #7
    13de:	4b05      	ldr	r3, [pc, #20]	; (13f4 <_Z9readClockP11structClock+0x60>)
    13e0:	4798      	blx	r3
    13e2:	6061      	str	r1, [r4, #4]
	return timeCounter;
}
    13e4:	1c30      	adds	r0, r6, #0
    13e6:	bd70      	pop	{r4, r5, r6, pc}
    13e8:	40001400 	.word	0x40001400
    13ec:	200000bc 	.word	0x200000bc
    13f0:	00005e05 	.word	0x00005e05
    13f4:	00005f11 	.word	0x00005f11

000013f8 <_Z10writeClock11structClock>:
void writeClock(Clock clk){
    13f8:	b5f0      	push	{r4, r5, r6, r7, lr}
    13fa:	4647      	mov	r7, r8
    13fc:	b480      	push	{r7}
    13fe:	b084      	sub	sp, #16
    1400:	9001      	str	r0, [sp, #4]
    1402:	9102      	str	r1, [sp, #8]
    1404:	9203      	str	r2, [sp, #12]
	//rtc_count_disable(&rtc_instance);
	//Disable_global_interrupt();

	RTC->MODE0.CTRL.reg &=  0b1111111111111101;//stop timer
    1406:	4a18      	ldr	r2, [pc, #96]	; (1468 <_Z10writeClock11structClock+0x70>)
    1408:	8813      	ldrh	r3, [r2, #0]
    140a:	2102      	movs	r1, #2
    140c:	438b      	bics	r3, r1
    140e:	8013      	strh	r3, [r2, #0]
	
	while(RTC->MODE0.STATUS.bit.SYNCBUSY==1);
    1410:	7a93      	ldrb	r3, [r2, #10]
    1412:	09db      	lsrs	r3, r3, #7
    1414:	d1fc      	bne.n	1410 <_Z10writeClock11structClock+0x18>
	RTC->MODE0.COUNT.reg=clk.halfmillis%VALUE_TIMER;
    1416:	9802      	ldr	r0, [sp, #8]
    1418:	4f14      	ldr	r7, [pc, #80]	; (146c <_Z10writeClock11structClock+0x74>)
    141a:	21fa      	movs	r1, #250	; 0xfa
    141c:	0089      	lsls	r1, r1, #2
    141e:	47b8      	blx	r7
    1420:	4d11      	ldr	r5, [pc, #68]	; (1468 <_Z10writeClock11structClock+0x70>)
    1422:	6129      	str	r1, [r5, #16]
	timeManage.second=clk.second;
    1424:	9b01      	ldr	r3, [sp, #4]
    1426:	4c12      	ldr	r4, [pc, #72]	; (1470 <_Z10writeClock11structClock+0x78>)
    1428:	6023      	str	r3, [r4, #0]
	timeManage.halfmillis=(int)(clk.halfmillis/VALUE_TIMER)*VALUE_TIMER;
    142a:	9802      	ldr	r0, [sp, #8]
    142c:	4b11      	ldr	r3, [pc, #68]	; (1474 <_Z10writeClock11structClock+0x7c>)
    142e:	4698      	mov	r8, r3
    1430:	21fa      	movs	r1, #250	; 0xfa
    1432:	0089      	lsls	r1, r1, #2
    1434:	4798      	blx	r3
    1436:	23fa      	movs	r3, #250	; 0xfa
    1438:	009b      	lsls	r3, r3, #2
    143a:	4358      	muls	r0, r3
    143c:	6060      	str	r0, [r4, #4]
	timeManage.second+=timeManage.halfmillis/RTC_FREQ;
    143e:	6860      	ldr	r0, [r4, #4]
    1440:	6826      	ldr	r6, [r4, #0]
    1442:	21fa      	movs	r1, #250	; 0xfa
    1444:	01c9      	lsls	r1, r1, #7
    1446:	47c0      	blx	r8
    1448:	1986      	adds	r6, r0, r6
    144a:	6026      	str	r6, [r4, #0]
	timeManage.halfmillis=timeManage.halfmillis%RTC_FREQ;
    144c:	6860      	ldr	r0, [r4, #4]
    144e:	21fa      	movs	r1, #250	; 0xfa
    1450:	01c9      	lsls	r1, r1, #7
    1452:	47b8      	blx	r7
    1454:	6061      	str	r1, [r4, #4]
	RTC->MODE0.CTRL.reg |= RTC_MODE0_CTRL_ENABLE; //enable timer
    1456:	882a      	ldrh	r2, [r5, #0]
    1458:	2302      	movs	r3, #2
    145a:	4313      	orrs	r3, r2
    145c:	802b      	strh	r3, [r5, #0]

	

	
	
}
    145e:	b004      	add	sp, #16
    1460:	bc04      	pop	{r2}
    1462:	4690      	mov	r8, r2
    1464:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1466:	46c0      	nop			; (mov r8, r8)
    1468:	40001400 	.word	0x40001400
    146c:	00005f11 	.word	0x00005f11
    1470:	200000bc 	.word	0x200000bc
    1474:	00005e05 	.word	0x00005e05

00001478 <_Z15isrInternalClokv>:
void isrInternalClok(void){
    1478:	b5f0      	push	{r4, r5, r6, r7, lr}
    147a:	b08d      	sub	sp, #52	; 0x34
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    147c:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
    147e:	f3bf 8f5f 	dmb	sy
			Disable_global_interrupt();
    1482:	2200      	movs	r2, #0
    1484:	4b59      	ldr	r3, [pc, #356]	; (15ec <_Z15isrInternalClokv+0x174>)
    1486:	701a      	strb	r2, [r3, #0]
			//printf("+");
			static bool state;
			
			

			timeManage.halfmillis+=VALUE_TIMER;
    1488:	4b59      	ldr	r3, [pc, #356]	; (15f0 <_Z15isrInternalClokv+0x178>)
    148a:	685a      	ldr	r2, [r3, #4]
    148c:	21fa      	movs	r1, #250	; 0xfa
    148e:	0089      	lsls	r1, r1, #2
    1490:	468c      	mov	ip, r1
    1492:	4462      	add	r2, ip
    1494:	605a      	str	r2, [r3, #4]

			state=stateLed;
    1496:	4a57      	ldr	r2, [pc, #348]	; (15f4 <_Z15isrInternalClokv+0x17c>)
    1498:	7811      	ldrb	r1, [r2, #0]
    149a:	4a57      	ldr	r2, [pc, #348]	; (15f8 <_Z15isrInternalClokv+0x180>)
    149c:	7011      	strb	r1, [r2, #0]
			if(timeManage.halfmillis<(RTC_FREQ/2)){//all 500ms
    149e:	685a      	ldr	r2, [r3, #4]
    14a0:	4b56      	ldr	r3, [pc, #344]	; (15fc <_Z15isrInternalClokv+0x184>)
    14a2:	429a      	cmp	r2, r3
    14a4:	d803      	bhi.n	14ae <_Z15isrInternalClokv+0x36>
				stateLed=LOW;
    14a6:	2200      	movs	r2, #0
    14a8:	4b52      	ldr	r3, [pc, #328]	; (15f4 <_Z15isrInternalClokv+0x17c>)
    14aa:	701a      	strb	r2, [r3, #0]
    14ac:	e002      	b.n	14b4 <_Z15isrInternalClokv+0x3c>
			}
			else{
				stateLed=HIGH;
    14ae:	2201      	movs	r2, #1
    14b0:	4b50      	ldr	r3, [pc, #320]	; (15f4 <_Z15isrInternalClokv+0x17c>)
    14b2:	701a      	strb	r2, [r3, #0]
			}
			if(state!=stateLed){
    14b4:	4b4f      	ldr	r3, [pc, #316]	; (15f4 <_Z15isrInternalClokv+0x17c>)
    14b6:	781b      	ldrb	r3, [r3, #0]
    14b8:	b2db      	uxtb	r3, r3
    14ba:	4a4f      	ldr	r2, [pc, #316]	; (15f8 <_Z15isrInternalClokv+0x180>)
    14bc:	7812      	ldrb	r2, [r2, #0]
    14be:	429a      	cmp	r2, r3
    14c0:	d017      	beq.n	14f2 <_Z15isrInternalClokv+0x7a>
				led = stateLed;
    14c2:	4b4c      	ldr	r3, [pc, #304]	; (15f4 <_Z15isrInternalClokv+0x17c>)
    14c4:	781c      	ldrb	r4, [r3, #0]
    14c6:	b2e4      	uxtb	r4, r4
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    14c8:	4b4d      	ldr	r3, [pc, #308]	; (1600 <_Z15isrInternalClokv+0x188>)
    14ca:	781b      	ldrb	r3, [r3, #0]
    14cc:	b25b      	sxtb	r3, r3
    14ce:	3301      	adds	r3, #1
    14d0:	d104      	bne.n	14dc <_Z15isrInternalClokv+0x64>
    14d2:	484c      	ldr	r0, [pc, #304]	; (1604 <_Z15isrInternalClokv+0x18c>)
    14d4:	494c      	ldr	r1, [pc, #304]	; (1608 <_Z15isrInternalClokv+0x190>)
    14d6:	2228      	movs	r2, #40	; 0x28
    14d8:	4b4c      	ldr	r3, [pc, #304]	; (160c <_Z15isrInternalClokv+0x194>)
    14da:	4798      	blx	r3
    if (value)
    14dc:	2c00      	cmp	r4, #0
    14de:	d004      	beq.n	14ea <_Z15isrInternalClokv+0x72>
        *obj->OUTSET = obj->mask;
    14e0:	4b47      	ldr	r3, [pc, #284]	; (1600 <_Z15isrInternalClokv+0x188>)
    14e2:	691a      	ldr	r2, [r3, #16]
    14e4:	685b      	ldr	r3, [r3, #4]
    14e6:	6013      	str	r3, [r2, #0]
    14e8:	e003      	b.n	14f2 <_Z15isrInternalClokv+0x7a>
    else
        *obj->OUTCLR = obj->mask;
    14ea:	4b45      	ldr	r3, [pc, #276]	; (1600 <_Z15isrInternalClokv+0x188>)
    14ec:	68da      	ldr	r2, [r3, #12]
    14ee:	685b      	ldr	r3, [r3, #4]
    14f0:	6013      	str	r3, [r2, #0]
				//		xSemaphoreGiveFromISR( synchroLed,NULL);
				//	}
			}

			
			timeManage.second+=timeManage.halfmillis/RTC_FREQ;
    14f2:	4c3f      	ldr	r4, [pc, #252]	; (15f0 <_Z15isrInternalClokv+0x178>)
    14f4:	6860      	ldr	r0, [r4, #4]
    14f6:	6825      	ldr	r5, [r4, #0]
    14f8:	21fa      	movs	r1, #250	; 0xfa
    14fa:	01c9      	lsls	r1, r1, #7
    14fc:	4b44      	ldr	r3, [pc, #272]	; (1610 <_Z15isrInternalClokv+0x198>)
    14fe:	4798      	blx	r3
    1500:	1945      	adds	r5, r0, r5
    1502:	6025      	str	r5, [r4, #0]
			timeManage.halfmillis=timeManage.halfmillis%RTC_FREQ;
    1504:	6860      	ldr	r0, [r4, #4]
    1506:	21fa      	movs	r1, #250	; 0xfa
    1508:	01c9      	lsls	r1, r1, #7
    150a:	4b42      	ldr	r3, [pc, #264]	; (1614 <_Z15isrInternalClokv+0x19c>)
    150c:	4798      	blx	r3
    150e:	6061      	str	r1, [r4, #4]
			if((valueCor!=0)){
    1510:	4b41      	ldr	r3, [pc, #260]	; (1618 <_Z15isrInternalClokv+0x1a0>)
    1512:	681b      	ldr	r3, [r3, #0]
    1514:	2b00      	cmp	r3, #0
    1516:	d060      	beq.n	15da <_Z15isrInternalClokv+0x162>
				if (timeCorr==0){
    1518:	4b40      	ldr	r3, [pc, #256]	; (161c <_Z15isrInternalClokv+0x1a4>)
    151a:	681b      	ldr	r3, [r3, #0]
    151c:	2b00      	cmp	r3, #0
    151e:	d13c      	bne.n	159a <_Z15isrInternalClokv+0x122>
					timeCorr=timeCorrection;
    1520:	4b3f      	ldr	r3, [pc, #252]	; (1620 <_Z15isrInternalClokv+0x1a8>)
    1522:	681a      	ldr	r2, [r3, #0]
    1524:	4b3d      	ldr	r3, [pc, #244]	; (161c <_Z15isrInternalClokv+0x1a4>)
    1526:	601a      	str	r2, [r3, #0]
					Clock off;
					off.second=(unsigned int )abs(valueCor)/RTC_FREQ;
    1528:	4c3b      	ldr	r4, [pc, #236]	; (1618 <_Z15isrInternalClokv+0x1a0>)
    152a:	6820      	ldr	r0, [r4, #0]
    152c:	17c3      	asrs	r3, r0, #31
    152e:	18c0      	adds	r0, r0, r3
    1530:	4058      	eors	r0, r3
    1532:	21fa      	movs	r1, #250	; 0xfa
    1534:	01c9      	lsls	r1, r1, #7
    1536:	4b36      	ldr	r3, [pc, #216]	; (1610 <_Z15isrInternalClokv+0x198>)
    1538:	4798      	blx	r3
    153a:	9009      	str	r0, [sp, #36]	; 0x24
					off.halfmillis=(unsigned int)abs(valueCor)%RTC_FREQ;
    153c:	6820      	ldr	r0, [r4, #0]
    153e:	17c3      	asrs	r3, r0, #31
    1540:	18c0      	adds	r0, r0, r3
    1542:	4058      	eors	r0, r3
    1544:	21fa      	movs	r1, #250	; 0xfa
    1546:	01c9      	lsls	r1, r1, #7
    1548:	4b32      	ldr	r3, [pc, #200]	; (1614 <_Z15isrInternalClokv+0x19c>)
    154a:	4798      	blx	r3
    154c:	910a      	str	r1, [sp, #40]	; 0x28
					if(valueCor<0){
    154e:	6823      	ldr	r3, [r4, #0]
    1550:	2b00      	cmp	r3, #0
    1552:	da03      	bge.n	155c <_Z15isrInternalClokv+0xe4>
						off.sign=false;
    1554:	2200      	movs	r2, #0
    1556:	ab09      	add	r3, sp, #36	; 0x24
    1558:	721a      	strb	r2, [r3, #8]
    155a:	e002      	b.n	1562 <_Z15isrInternalClokv+0xea>
					}
					else{
						off.sign=true;
    155c:	2201      	movs	r2, #1
    155e:	ab09      	add	r3, sp, #36	; 0x24
    1560:	721a      	strb	r2, [r3, #8]
					}
					//change the time
					timeManage=sumClock(timeManage,off);
    1562:	4e23      	ldr	r6, [pc, #140]	; (15f0 <_Z15isrInternalClokv+0x178>)
    1564:	ac04      	add	r4, sp, #16
    1566:	ad09      	add	r5, sp, #36	; 0x24
    1568:	466b      	mov	r3, sp
    156a:	1c2a      	adds	r2, r5, #0
    156c:	ca83      	ldmia	r2!, {r0, r1, r7}
    156e:	c383      	stmia	r3!, {r0, r1, r7}
    1570:	1c20      	adds	r0, r4, #0
    1572:	6831      	ldr	r1, [r6, #0]
    1574:	6872      	ldr	r2, [r6, #4]
    1576:	68b3      	ldr	r3, [r6, #8]
    1578:	4f2a      	ldr	r7, [pc, #168]	; (1624 <_Z15isrInternalClokv+0x1ac>)
    157a:	47b8      	blx	r7
    157c:	1c23      	adds	r3, r4, #0
    157e:	cb07      	ldmia	r3!, {r0, r1, r2}
    1580:	c607      	stmia	r6!, {r0, r1, r2}
					//change the correction offset
					sumOffset=sumClock(sumOffset,off);//ok
    1582:	4e29      	ldr	r6, [pc, #164]	; (1628 <_Z15isrInternalClokv+0x1b0>)
    1584:	466b      	mov	r3, sp
    1586:	cd07      	ldmia	r5!, {r0, r1, r2}
    1588:	c307      	stmia	r3!, {r0, r1, r2}
    158a:	1c20      	adds	r0, r4, #0
    158c:	6831      	ldr	r1, [r6, #0]
    158e:	6872      	ldr	r2, [r6, #4]
    1590:	68b3      	ldr	r3, [r6, #8]
    1592:	47b8      	blx	r7
    1594:	cc0e      	ldmia	r4!, {r1, r2, r3}
    1596:	c60e      	stmia	r6!, {r1, r2, r3}
    1598:	e003      	b.n	15a2 <_Z15isrInternalClokv+0x12a>
				}
				else{
					timeCorr--;
    159a:	4a20      	ldr	r2, [pc, #128]	; (161c <_Z15isrInternalClokv+0x1a4>)
    159c:	6813      	ldr	r3, [r2, #0]
    159e:	3b01      	subs	r3, #1
    15a0:	6013      	str	r3, [r2, #0]
				}	
				sumOffset.second+=sumOffset.halfmillis/RTC_FREQ;
    15a2:	4c21      	ldr	r4, [pc, #132]	; (1628 <_Z15isrInternalClokv+0x1b0>)
    15a4:	6860      	ldr	r0, [r4, #4]
    15a6:	6825      	ldr	r5, [r4, #0]
    15a8:	4f19      	ldr	r7, [pc, #100]	; (1610 <_Z15isrInternalClokv+0x198>)
    15aa:	21fa      	movs	r1, #250	; 0xfa
    15ac:	01c9      	lsls	r1, r1, #7
    15ae:	47b8      	blx	r7
    15b0:	1945      	adds	r5, r0, r5
    15b2:	6025      	str	r5, [r4, #0]
				sumOffset.halfmillis=sumOffset.halfmillis%RTC_FREQ;
    15b4:	6860      	ldr	r0, [r4, #4]
    15b6:	4e17      	ldr	r6, [pc, #92]	; (1614 <_Z15isrInternalClokv+0x19c>)
    15b8:	21fa      	movs	r1, #250	; 0xfa
    15ba:	01c9      	lsls	r1, r1, #7
    15bc:	47b0      	blx	r6
    15be:	6061      	str	r1, [r4, #4]
				timeManage.second+=timeManage.halfmillis/RTC_FREQ;
    15c0:	4c0b      	ldr	r4, [pc, #44]	; (15f0 <_Z15isrInternalClokv+0x178>)
    15c2:	6860      	ldr	r0, [r4, #4]
    15c4:	6825      	ldr	r5, [r4, #0]
    15c6:	21fa      	movs	r1, #250	; 0xfa
    15c8:	01c9      	lsls	r1, r1, #7
    15ca:	47b8      	blx	r7
    15cc:	1945      	adds	r5, r0, r5
    15ce:	6025      	str	r5, [r4, #0]
				timeManage.halfmillis=timeManage.halfmillis%RTC_FREQ;
    15d0:	6860      	ldr	r0, [r4, #4]
    15d2:	21fa      	movs	r1, #250	; 0xfa
    15d4:	01c9      	lsls	r1, r1, #7
    15d6:	47b0      	blx	r6
    15d8:	6061      	str	r1, [r4, #4]
			
			}
			

			
	Enable_global_interrupt();
    15da:	2201      	movs	r2, #1
    15dc:	4b03      	ldr	r3, [pc, #12]	; (15ec <_Z15isrInternalClokv+0x174>)
    15de:	701a      	strb	r2, [r3, #0]
    15e0:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
    15e4:	b662      	cpsie	i
}
    15e6:	b00d      	add	sp, #52	; 0x34
    15e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    15ea:	46c0      	nop			; (mov r8, r8)
    15ec:	200000d0 	.word	0x200000d0
    15f0:	200000bc 	.word	0x200000bc
    15f4:	20003d20 	.word	0x20003d20
    15f8:	20003d18 	.word	0x20003d18
    15fc:	00003e7f 	.word	0x00003e7f
    1600:	20003d28 	.word	0x20003d28
    1604:	0000d34c 	.word	0x0000d34c
    1608:	0000d364 	.word	0x0000d364
    160c:	00004709 	.word	0x00004709
    1610:	00005e05 	.word	0x00005e05
    1614:	00005f11 	.word	0x00005f11
    1618:	20003d44 	.word	0x20003d44
    161c:	20003d24 	.word	0x20003d24
    1620:	20003d1c 	.word	0x20003d1c
    1624:	00001215 	.word	0x00001215
    1628:	20004134 	.word	0x20004134

0000162c <RTC_Handler>:
void RTC_Handler( void ){
    162c:	b508      	push	{r3, lr}
	//pc.printf("ISR");
	RTC->MODE0.INTFLAG.bit.CMP0=1;		//disable the flag COMPARE
    162e:	4b06      	ldr	r3, [pc, #24]	; (1648 <RTC_Handler+0x1c>)
    1630:	7a19      	ldrb	r1, [r3, #8]
    1632:	2201      	movs	r2, #1
    1634:	430a      	orrs	r2, r1
    1636:	721a      	strb	r2, [r3, #8]
	RTC->MODE0.INTFLAG.bit.OVF=1;		//disable the flag COMPARE
    1638:	7a1a      	ldrb	r2, [r3, #8]
    163a:	2180      	movs	r1, #128	; 0x80
    163c:	4249      	negs	r1, r1
    163e:	430a      	orrs	r2, r1
    1640:	721a      	strb	r2, [r3, #8]
	isrInternalClok();
    1642:	4b02      	ldr	r3, [pc, #8]	; (164c <RTC_Handler+0x20>)
    1644:	4798      	blx	r3
}
    1646:	bd08      	pop	{r3, pc}
    1648:	40001400 	.word	0x40001400
    164c:	00001479 	.word	0x00001479

00001650 <_Z22configureInternalClockv>:

void configureInternalClock(void){
    1650:	b508      	push	{r3, lr}
	pc.printf("internal clock config\r\n");
    1652:	4821      	ldr	r0, [pc, #132]	; (16d8 <_Z22configureInternalClockv+0x88>)
    1654:	4921      	ldr	r1, [pc, #132]	; (16dc <_Z22configureInternalClockv+0x8c>)
    1656:	4b22      	ldr	r3, [pc, #136]	; (16e0 <_Z22configureInternalClockv+0x90>)
    1658:	4798      	blx	r3
	//gENERIC CLOCK GENRERATOR
	GCLK->GENCTRL.reg=0b00000000000000010000010000000010;
    165a:	4b22      	ldr	r3, [pc, #136]	; (16e4 <_Z22configureInternalClockv+0x94>)
    165c:	4a22      	ldr	r2, [pc, #136]	; (16e8 <_Z22configureInternalClockv+0x98>)
    165e:	605a      	str	r2, [r3, #4]
	//Generic Clock Generator Division
	GCLK->GENDIV.reg= 0b00000000000000000000000100000010;
    1660:	2281      	movs	r2, #129	; 0x81
    1662:	0052      	lsls	r2, r2, #1
    1664:	609a      	str	r2, [r3, #8]
	GCLK->CLKCTRL.reg=0x4204;
    1666:	4a21      	ldr	r2, [pc, #132]	; (16ec <_Z22configureInternalClockv+0x9c>)
    1668:	805a      	strh	r2, [r3, #2]
	//peripheral configuration
	
	RTC->MODE0.CTRL.bit.PRESCALER=0x0;	//prescaller at 0
    166a:	4b21      	ldr	r3, [pc, #132]	; (16f0 <_Z22configureInternalClockv+0xa0>)
    166c:	8819      	ldrh	r1, [r3, #0]
    166e:	4a21      	ldr	r2, [pc, #132]	; (16f4 <_Z22configureInternalClockv+0xa4>)
    1670:	400a      	ands	r2, r1
    1672:	801a      	strh	r2, [r3, #0]
	RTC->MODE0.CTRL.bit.MODE=0x0;			//mode 0 : 32 bit counter
    1674:	881a      	ldrh	r2, [r3, #0]
    1676:	210c      	movs	r1, #12
    1678:	438a      	bics	r2, r1
    167a:	801a      	strh	r2, [r3, #0]
	RTC->MODE0.CTRL.bit.SWRST=0;			//no software reset
    167c:	881a      	ldrh	r2, [r3, #0]
    167e:	390b      	subs	r1, #11
    1680:	438a      	bics	r2, r1
    1682:	801a      	strh	r2, [r3, #0]
	RTC->MODE0.CTRL.bit.MATCHCLR=1;			//automatic reset counter
    1684:	8819      	ldrh	r1, [r3, #0]
    1686:	2280      	movs	r2, #128	; 0x80
    1688:	430a      	orrs	r2, r1
    168a:	801a      	strh	r2, [r3, #0]
	
	//event configuration
	RTC->MODE0.INTENSET.bit.OVF=1;		//enable the event overflow
    168c:	79d9      	ldrb	r1, [r3, #7]
    168e:	2080      	movs	r0, #128	; 0x80
    1690:	4240      	negs	r0, r0
    1692:	4301      	orrs	r1, r0
    1694:	71d9      	strb	r1, [r3, #7]
	RTC->MODE0.INTENSET.bit.CMP0=1;		//enable the event compare
    1696:	79d9      	ldrb	r1, [r3, #7]
    1698:	2201      	movs	r2, #1
    169a:	4311      	orrs	r1, r2
    169c:	71d9      	strb	r1, [r3, #7]
	RTC->MODE0.INTFLAG.bit.CMP0=1;		//disable the flag COMPARE
    169e:	7a19      	ldrb	r1, [r3, #8]
    16a0:	430a      	orrs	r2, r1
    16a2:	721a      	strb	r2, [r3, #8]
	RTC->MODE0.INTFLAG.bit.OVF=1;		//disable the flag COMPARE
    16a4:	7a1a      	ldrb	r2, [r3, #8]
    16a6:	4302      	orrs	r2, r0
    16a8:	721a      	strb	r2, [r3, #8]
	RTC->MODE0.COUNT.bit.COUNT=0;			//set the RTC value
    16aa:	2200      	movs	r2, #0
    16ac:	611a      	str	r2, [r3, #16]
	RTC->MODE0.COMP[0].reg = count_set_period;
    16ae:	4a12      	ldr	r2, [pc, #72]	; (16f8 <_Z22configureInternalClockv+0xa8>)
    16b0:	6812      	ldr	r2, [r2, #0]
    16b2:	619a      	str	r2, [r3, #24]

	RTC->MODE0.CTRL.reg |= RTC_MODE0_CTRL_ENABLE;
    16b4:	8819      	ldrh	r1, [r3, #0]
    16b6:	2202      	movs	r2, #2
    16b8:	430a      	orrs	r2, r1
    16ba:	801a      	strh	r2, [r3, #0]
  if((int32_t)(IRQn) < 0) {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8 - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
  else {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
    16bc:	4a0f      	ldr	r2, [pc, #60]	; (16fc <_Z22configureInternalClockv+0xac>)
    16be:	21c0      	movs	r1, #192	; 0xc0
    16c0:	0089      	lsls	r1, r1, #2
    16c2:	5853      	ldr	r3, [r2, r1]
    16c4:	021b      	lsls	r3, r3, #8
    16c6:	0a1b      	lsrs	r3, r3, #8
    16c8:	20c0      	movs	r0, #192	; 0xc0
    16ca:	0600      	lsls	r0, r0, #24
    16cc:	4303      	orrs	r3, r0
       (((priority << (8 - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
    16ce:	5053      	str	r3, [r2, r1]

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[0] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
    16d0:	2308      	movs	r3, #8
    16d2:	6013      	str	r3, [r2, #0]

	NVIC_SetPriority (RTC_IRQn, (1<<__NVIC_PRIO_BITS) - 1);
	NVIC_EnableIRQ(RTC_IRQn);
	
    16d4:	bd08      	pop	{r3, pc}
    16d6:	46c0      	nop			; (mov r8, r8)
    16d8:	200043f0 	.word	0x200043f0
    16dc:	0000d3b0 	.word	0x0000d3b0
    16e0:	000046e1 	.word	0x000046e1
    16e4:	40000c00 	.word	0x40000c00
    16e8:	00010402 	.word	0x00010402
    16ec:	00004204 	.word	0x00004204
    16f0:	40001400 	.word	0x40001400
    16f4:	fffff0ff 	.word	0xfffff0ff
    16f8:	200000c8 	.word	0x200000c8
    16fc:	e000e100 	.word	0xe000e100

00001700 <_GLOBAL__sub_I_count_set_period>:
    1700:	b508      	push	{r3, lr}
public:
    /** Create a DigitalOut connected to the specified pin
     *
     *  @param pin DigitalOut pin to connect to
     */
    DigitalOut(PinName pin) : gpio() {
    1702:	4807      	ldr	r0, [pc, #28]	; (1720 <_GLOBAL__sub_I_count_set_period+0x20>)
    1704:	2300      	movs	r3, #0
    1706:	7003      	strb	r3, [r0, #0]
    1708:	6043      	str	r3, [r0, #4]
    170a:	7203      	strb	r3, [r0, #8]
    170c:	7243      	strb	r3, [r0, #9]
    170e:	7283      	strb	r3, [r0, #10]
    1710:	60c3      	str	r3, [r0, #12]
    1712:	6103      	str	r3, [r0, #16]
    1714:	6143      	str	r3, [r0, #20]
    1716:	6183      	str	r3, [r0, #24]
        gpio_init_out(&gpio, pin);
    1718:	2113      	movs	r1, #19
    171a:	4b02      	ldr	r3, [pc, #8]	; (1724 <_GLOBAL__sub_I_count_set_period+0x24>)
    171c:	4798      	blx	r3
    171e:	bd08      	pop	{r3, pc}
    1720:	20003d28 	.word	0x20003d28
    1724:	0000472d 	.word	0x0000472d

00001728 <_Z19ISRNetworkReceptionh>:
#endif
volatile circularBuffer buffer;
/************************************************************************/
/* GLOBAL FUNCTION                                                      */
/************************************************************************/
void ISRNetworkReception(uint8_t e){
    1728:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	 uint16_t rx;
	  if((e&TRX_IRQ_TRX_END)==TRX_IRQ_TRX_END){
    172a:	0703      	lsls	r3, r0, #28
    172c:	d44b      	bmi.n	17c6 <_Z19ISRNetworkReceptionh+0x9e>
    172e:	e053      	b.n	17d8 <_Z19ISRNetworkReceptionh+0xb0>
			
			//Disable_global_interrupt();
			//pc.printf("mimi\r\n");
			//synchro semaphore with a task

			rx=radio.read();
    1730:	482a      	ldr	r0, [pc, #168]	; (17dc <_Z19ISRNetworkReceptionh+0xb4>)
    1732:	4b2b      	ldr	r3, [pc, #172]	; (17e0 <_Z19ISRNetworkReceptionh+0xb8>)
    1734:	4798      	blx	r3
    1736:	b287      	uxth	r7, r0
			buffer.buffer[buffer.indice]=rx;
    1738:	4b2a      	ldr	r3, [pc, #168]	; (17e4 <_Z19ISRNetworkReceptionh+0xbc>)
    173a:	2132      	movs	r1, #50	; 0x32
    173c:	5c5a      	ldrb	r2, [r3, r1]
    173e:	b2d2      	uxtb	r2, r2
    1740:	b2c0      	uxtb	r0, r0
    1742:	5498      	strb	r0, [r3, r2]
	
			buffer.indice++;
    1744:	5c5a      	ldrb	r2, [r3, r1]
    1746:	3201      	adds	r2, #1
    1748:	b2d2      	uxtb	r2, r2
    174a:	545a      	strb	r2, [r3, r1]
			if(buffer.indice>=CIRCULAR_BUFFER_LENGTH){
    174c:	5c5b      	ldrb	r3, [r3, r1]
    174e:	b2db      	uxtb	r3, r3
    1750:	2b31      	cmp	r3, #49	; 0x31
    1752:	d903      	bls.n	175c <_Z19ISRNetworkReceptionh+0x34>
				buffer.indice=0;
    1754:	2100      	movs	r1, #0
    1756:	2332      	movs	r3, #50	; 0x32
    1758:	4a22      	ldr	r2, [pc, #136]	; (17e4 <_Z19ISRNetworkReceptionh+0xbc>)
    175a:	54d1      	strb	r1, [r2, r3]
			}

			if(rx==HEADER){
    175c:	2f55      	cmp	r7, #85	; 0x55
    175e:	d10f      	bne.n	1780 <_Z19ISRNetworkReceptionh+0x58>
				if(timeProt.synchroTimeReceive!=NULL){
    1760:	4b21      	ldr	r3, [pc, #132]	; (17e8 <_Z19ISRNetworkReceptionh+0xc0>)
    1762:	6c58      	ldr	r0, [r3, #68]	; 0x44
    1764:	2800      	cmp	r0, #0
    1766:	d004      	beq.n	1772 <_Z19ISRNetworkReceptionh+0x4a>
					xSemaphoreGiveFromISR(timeProt.synchroTimeReceive,NULL);
    1768:	2100      	movs	r1, #0
    176a:	2200      	movs	r2, #0
    176c:	2300      	movs	r3, #0
    176e:	4f1f      	ldr	r7, [pc, #124]	; (17ec <_Z19ISRNetworkReceptionh+0xc4>)
    1770:	47b8      	blx	r7
				}
				timeProt.waitIdentifier=true;
    1772:	2201      	movs	r2, #1
    1774:	2334      	movs	r3, #52	; 0x34
    1776:	54ea      	strb	r2, [r5, r3]
					timeProt.saveTime[0].second=save.second;
					timeProt.saveTime[0].halfmillis=save.halfmillis;
					timeProt.saveTime[0].sign=save.sign;
		
				#else
					readClock(&timeProt.rx);
    1778:	1c30      	adds	r0, r6, #0
    177a:	4b1d      	ldr	r3, [pc, #116]	; (17f0 <_Z19ISRNetworkReceptionh+0xc8>)
    177c:	4798      	blx	r3
				#endif
				continue;
    177e:	e026      	b.n	17ce <_Z19ISRNetworkReceptionh+0xa6>
				}
				continue;
			}
	
			#else
			if(timeProt.waitIdentifier==true){
    1780:	2334      	movs	r3, #52	; 0x34
    1782:	4a19      	ldr	r2, [pc, #100]	; (17e8 <_Z19ISRNetworkReceptionh+0xc0>)
    1784:	5cd3      	ldrb	r3, [r2, r3]
    1786:	2b00      	cmp	r3, #0
    1788:	d008      	beq.n	179c <_Z19ISRNetworkReceptionh+0x74>
				timeProt.waitIdentifier=false;
    178a:	2100      	movs	r1, #0
    178c:	2334      	movs	r3, #52	; 0x34
    178e:	54d1      	strb	r1, [r2, r3]
				if(rx==0){
    1790:	2f00      	cmp	r7, #0
    1792:	d103      	bne.n	179c <_Z19ISRNetworkReceptionh+0x74>
					timeProt.waitType=true;
    1794:	3101      	adds	r1, #1
    1796:	3301      	adds	r3, #1
    1798:	54d1      	strb	r1, [r2, r3]
    179a:	e018      	b.n	17ce <_Z19ISRNetworkReceptionh+0xa6>
				}
			}
			if(timeProt.waitType==true){
    179c:	2335      	movs	r3, #53	; 0x35
    179e:	4a12      	ldr	r2, [pc, #72]	; (17e8 <_Z19ISRNetworkReceptionh+0xc0>)
    17a0:	5cd3      	ldrb	r3, [r2, r3]
    17a2:	2b00      	cmp	r3, #0
    17a4:	d013      	beq.n	17ce <_Z19ISRNetworkReceptionh+0xa6>
				if(rx==DELAYRESPONSE){
    17a6:	2f03      	cmp	r7, #3
    17a8:	d105      	bne.n	17b6 <_Z19ISRNetworkReceptionh+0x8e>
					timeProt.rxDelay.second=timeProt.rx.second;
    17aa:	1c13      	adds	r3, r2, #0
    17ac:	6a52      	ldr	r2, [r2, #36]	; 0x24
    17ae:	619a      	str	r2, [r3, #24]
					timeProt.rxDelay.halfmillis=timeProt.rx.halfmillis;
    17b0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    17b2:	61da      	str	r2, [r3, #28]
    17b4:	e00b      	b.n	17ce <_Z19ISRNetworkReceptionh+0xa6>
				}
				else{
					if(rx==SYNC){
    17b6:	2f01      	cmp	r7, #1
    17b8:	d109      	bne.n	17ce <_Z19ISRNetworkReceptionh+0xa6>
						timeProt.rxSync.second=timeProt.rx.second;
    17ba:	4b0b      	ldr	r3, [pc, #44]	; (17e8 <_Z19ISRNetworkReceptionh+0xc0>)
    17bc:	6a5a      	ldr	r2, [r3, #36]	; 0x24
    17be:	60da      	str	r2, [r3, #12]
						timeProt.rxSync.halfmillis=timeProt.rx.halfmillis;
    17c0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    17c2:	611a      	str	r2, [r3, #16]
    17c4:	e003      	b.n	17ce <_Z19ISRNetworkReceptionh+0xa6>
	 uint16_t rx;
	  if((e&TRX_IRQ_TRX_END)==TRX_IRQ_TRX_END){
			//pc.printf(" end \r\n");

		#ifdef RADIO
		 while(radio.available()){
    17c6:	4c05      	ldr	r4, [pc, #20]	; (17dc <_Z19ISRNetworkReceptionh+0xb4>)

			if(rx==HEADER){
				if(timeProt.synchroTimeReceive!=NULL){
					xSemaphoreGiveFromISR(timeProt.synchroTimeReceive,NULL);
				}
				timeProt.waitIdentifier=true;
    17c8:	4d07      	ldr	r5, [pc, #28]	; (17e8 <_Z19ISRNetworkReceptionh+0xc0>)
					timeProt.saveTime[0].second=save.second;
					timeProt.saveTime[0].halfmillis=save.halfmillis;
					timeProt.saveTime[0].sign=save.sign;
		
				#else
					readClock(&timeProt.rx);
    17ca:	1c2e      	adds	r6, r5, #0
    17cc:	3624      	adds	r6, #36	; 0x24
	 uint16_t rx;
	  if((e&TRX_IRQ_TRX_END)==TRX_IRQ_TRX_END){
			//pc.printf(" end \r\n");

		#ifdef RADIO
		 while(radio.available()){
    17ce:	1c20      	adds	r0, r4, #0
    17d0:	4b08      	ldr	r3, [pc, #32]	; (17f4 <_Z19ISRNetworkReceptionh+0xcc>)
    17d2:	4798      	blx	r3
    17d4:	2800      	cmp	r0, #0
    17d6:	d1ab      	bne.n	1730 <_Z19ISRNetworkReceptionh+0x8>
		 }
		 #endif
		 
	 }
	 
}
    17d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    17da:	46c0      	nop			; (mov r8, r8)
    17dc:	20003d7c 	.word	0x20003d7c
    17e0:	00001cd9 	.word	0x00001cd9
    17e4:	20003d48 	.word	0x20003d48
    17e8:	20004140 	.word	0x20004140
    17ec:	00000435 	.word	0x00000435
    17f0:	00001395 	.word	0x00001395
    17f4:	00001d0d 	.word	0x00001d0d

000017f8 <_Z16networkAvailablev>:
}

bool networkAvailable(void){


	if(buffer.currentIndice!=buffer.indice){
    17f8:	4a04      	ldr	r2, [pc, #16]	; (180c <_Z16networkAvailablev+0x14>)
    17fa:	2333      	movs	r3, #51	; 0x33
    17fc:	5cd3      	ldrb	r3, [r2, r3]
    17fe:	2132      	movs	r1, #50	; 0x32
    1800:	5c50      	ldrb	r0, [r2, r1]
    1802:	1a18      	subs	r0, r3, r0
    1804:	1e43      	subs	r3, r0, #1
    1806:	4198      	sbcs	r0, r3
    1808:	b2c0      	uxtb	r0, r0
	else{
			
		return false;
	}

}
    180a:	4770      	bx	lr
    180c:	20003d48 	.word	0x20003d48

00001810 <_Z12networkFlushv>:
void networkFlush(void){
	//usart_disable_callback(&usart_instance, USART_CALLBACK_BUFFER_RECEIVED);//momo
	buffer.currentIndice=buffer.indice;
    1810:	4a03      	ldr	r2, [pc, #12]	; (1820 <_Z12networkFlushv+0x10>)
    1812:	2332      	movs	r3, #50	; 0x32
    1814:	5cd3      	ldrb	r3, [r2, r3]
    1816:	b2db      	uxtb	r3, r3
    1818:	2133      	movs	r1, #51	; 0x33
    181a:	5453      	strb	r3, [r2, r1]
	//usart_enable_callback(&usart_instance, USART_CALLBACK_BUFFER_RECEIVED); //momo
}
    181c:	4770      	bx	lr
    181e:	46c0      	nop			; (mov r8, r8)
    1820:	20003d48 	.word	0x20003d48

00001824 <_Z9networkTxPKhh>:
void networkTx(const uint8_t send[],const uint8_t length){
    1824:	b570      	push	{r4, r5, r6, lr}
    1826:	1c06      	adds	r6, r0, #0
    1828:	1c0d      	adds	r5, r1, #0
	#ifdef RADIO
		radio.beginTransmission();
    182a:	4c06      	ldr	r4, [pc, #24]	; (1844 <_Z9networkTxPKhh+0x20>)
    182c:	1c20      	adds	r0, r4, #0
    182e:	4b06      	ldr	r3, [pc, #24]	; (1848 <_Z9networkTxPKhh+0x24>)
    1830:	4798      	blx	r3
		radio.write((uint8_t*)send,length);
    1832:	1c20      	adds	r0, r4, #0
    1834:	1c31      	adds	r1, r6, #0
    1836:	1c2a      	adds	r2, r5, #0
    1838:	4b04      	ldr	r3, [pc, #16]	; (184c <_Z9networkTxPKhh+0x28>)
    183a:	4798      	blx	r3
		radio.endTransmission();
    183c:	1c20      	adds	r0, r4, #0
    183e:	4b04      	ldr	r3, [pc, #16]	; (1850 <_Z9networkTxPKhh+0x2c>)
    1840:	4798      	blx	r3
	
	#endif
}
    1842:	bd70      	pop	{r4, r5, r6, pc}
    1844:	20003d7c 	.word	0x20003d7c
    1848:	00001d2d 	.word	0x00001d2d
    184c:	00001f3d 	.word	0x00001f3d
    1850:	00001d85 	.word	0x00001d85

00001854 <_Z11networkReadv>:
uint8_t networkRead(void){
    1854:	b508      	push	{r3, lr}
	if(networkAvailable()){
    1856:	4b0d      	ldr	r3, [pc, #52]	; (188c <_Z11networkReadv+0x38>)
    1858:	4798      	blx	r3
			buffer.currentIndice=0;
		}
		return recu; 
	}
	else{
		return 0;
    185a:	2300      	movs	r3, #0
		radio.endTransmission();
	
	#endif
}
uint8_t networkRead(void){
	if(networkAvailable()){
    185c:	2800      	cmp	r0, #0
    185e:	d013      	beq.n	1888 <_Z11networkReadv+0x34>
		uint8_t recu;
		recu=buffer.buffer[buffer.currentIndice];
    1860:	4b0b      	ldr	r3, [pc, #44]	; (1890 <_Z11networkReadv+0x3c>)
    1862:	2133      	movs	r1, #51	; 0x33
    1864:	5c5a      	ldrb	r2, [r3, r1]
    1866:	b2d2      	uxtb	r2, r2
    1868:	5c98      	ldrb	r0, [r3, r2]
    186a:	b2c0      	uxtb	r0, r0
		buffer.currentIndice++;
    186c:	5c5a      	ldrb	r2, [r3, r1]
    186e:	3201      	adds	r2, #1
    1870:	b2d2      	uxtb	r2, r2
    1872:	545a      	strb	r2, [r3, r1]
		if(buffer.currentIndice>=CIRCULAR_BUFFER_LENGTH){
    1874:	5c5a      	ldrb	r2, [r3, r1]
    1876:	b2d2      	uxtb	r2, r2
			buffer.currentIndice=0;
		}
		return recu; 
    1878:	1c03      	adds	r3, r0, #0
uint8_t networkRead(void){
	if(networkAvailable()){
		uint8_t recu;
		recu=buffer.buffer[buffer.currentIndice];
		buffer.currentIndice++;
		if(buffer.currentIndice>=CIRCULAR_BUFFER_LENGTH){
    187a:	2a31      	cmp	r2, #49	; 0x31
    187c:	d904      	bls.n	1888 <_Z11networkReadv+0x34>
			buffer.currentIndice=0;
    187e:	2100      	movs	r1, #0
    1880:	2333      	movs	r3, #51	; 0x33
    1882:	4a03      	ldr	r2, [pc, #12]	; (1890 <_Z11networkReadv+0x3c>)
    1884:	54d1      	strb	r1, [r2, r3]
		}
		return recu; 
    1886:	1c03      	adds	r3, r0, #0
	else{
		return 0;
	}

	
}
    1888:	1c18      	adds	r0, r3, #0
    188a:	bd08      	pop	{r3, pc}
    188c:	000017f9 	.word	0x000017f9
    1890:	20003d48 	.word	0x20003d48

00001894 <_Z20configurationNetworkv>:

void configurationNetwork(){
    1894:	b510      	push	{r4, lr}
	pc.printf("network config\r\n");
    1896:	480a      	ldr	r0, [pc, #40]	; (18c0 <_Z20configurationNetworkv+0x2c>)
    1898:	490a      	ldr	r1, [pc, #40]	; (18c4 <_Z20configurationNetworkv+0x30>)
    189a:	4b0b      	ldr	r3, [pc, #44]	; (18c8 <_Z20configurationNetworkv+0x34>)
    189c:	4798      	blx	r3
	buffer.currentIndice=0;
    189e:	4b0b      	ldr	r3, [pc, #44]	; (18cc <_Z20configurationNetworkv+0x38>)
    18a0:	2200      	movs	r2, #0
    18a2:	2133      	movs	r1, #51	; 0x33
    18a4:	545a      	strb	r2, [r3, r1]
	buffer.indice=0;
    18a6:	3901      	subs	r1, #1
    18a8:	545a      	strb	r2, [r3, r1]
	#ifdef RADIO
	radio.attachIrq(ISRNetworkReception);
    18aa:	4c09      	ldr	r4, [pc, #36]	; (18d0 <_Z20configurationNetworkv+0x3c>)
    18ac:	1c20      	adds	r0, r4, #0
    18ae:	4909      	ldr	r1, [pc, #36]	; (18d4 <_Z20configurationNetworkv+0x40>)
    18b0:	4b09      	ldr	r3, [pc, #36]	; (18d8 <_Z20configurationNetworkv+0x44>)
    18b2:	4798      	blx	r3
    radio.begin(RADIO_CHANNEL);
    18b4:	1c20      	adds	r0, r4, #0
    18b6:	210c      	movs	r1, #12
    18b8:	4b08      	ldr	r3, [pc, #32]	; (18dc <_Z20configurationNetworkv+0x48>)
    18ba:	4798      	blx	r3
	#endif
	

}
    18bc:	bd10      	pop	{r4, pc}
    18be:	46c0      	nop			; (mov r8, r8)
    18c0:	200043f0 	.word	0x200043f0
    18c4:	0000d3c8 	.word	0x0000d3c8
    18c8:	000046e1 	.word	0x000046e1
    18cc:	20003d48 	.word	0x20003d48
    18d0:	20003d7c 	.word	0x20003d7c
    18d4:	00001729 	.word	0x00001729
    18d8:	00001cd1 	.word	0x00001cd1
    18dc:	00001cc1 	.word	0x00001cc1

000018e0 <_GLOBAL__sub_I_radio>:
    18e0:	b530      	push	{r4, r5, lr}
    18e2:	b085      	sub	sp, #20
#include "network.h"
/************************************************************************/
/* GLOBAL                                                               */
/************************************************************************/
#ifdef RADIO
cMxRadio radio(PB30,PC19,PC18,PB31,PB15,PA20,PB00);
    18e4:	4c0a      	ldr	r4, [pc, #40]	; (1910 <_GLOBAL__sub_I_radio+0x30>)
    18e6:	233f      	movs	r3, #63	; 0x3f
    18e8:	9300      	str	r3, [sp, #0]
    18ea:	3b10      	subs	r3, #16
    18ec:	9301      	str	r3, [sp, #4]
    18ee:	3b1b      	subs	r3, #27
    18f0:	9302      	str	r3, [sp, #8]
    18f2:	330c      	adds	r3, #12
    18f4:	9303      	str	r3, [sp, #12]
    18f6:	1c20      	adds	r0, r4, #0
    18f8:	213e      	movs	r1, #62	; 0x3e
    18fa:	2253      	movs	r2, #83	; 0x53
    18fc:	3332      	adds	r3, #50	; 0x32
    18fe:	4d05      	ldr	r5, [pc, #20]	; (1914 <_GLOBAL__sub_I_radio+0x34>)
    1900:	47a8      	blx	r5
    1902:	1c20      	adds	r0, r4, #0
    1904:	4904      	ldr	r1, [pc, #16]	; (1918 <_GLOBAL__sub_I_radio+0x38>)
    1906:	4a05      	ldr	r2, [pc, #20]	; (191c <_GLOBAL__sub_I_radio+0x3c>)
    1908:	4b05      	ldr	r3, [pc, #20]	; (1920 <_GLOBAL__sub_I_radio+0x40>)
    190a:	4798      	blx	r3
	radio.attachIrq(ISRNetworkReception);
    radio.begin(RADIO_CHANNEL);
	#endif
	

}
    190c:	b005      	add	sp, #20
    190e:	bd30      	pop	{r4, r5, pc}
    1910:	20003d7c 	.word	0x20003d7c
    1914:	00001afd 	.word	0x00001afd
    1918:	00001af9 	.word	0x00001af9
    191c:	200000b0 	.word	0x200000b0
    1920:	00005ded 	.word	0x00005ded

00001924 <main>:
#include <ktrap.h>
#include <internalClock.h>
#include <ppsGPS.h>
#include <network.h>

int main (void ){
    1924:	b570      	push	{r4, r5, r6, lr}
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    1926:	b672      	cpsid	i
    1928:	f3bf 8f5f 	dmb	sy
 * Disabled global interrupts in the device, preventing any enabled interrupt
 * handlers from executing.
 */
static inline void system_interrupt_disable_global(void)
{
    cpu_irq_disable();
    192c:	4c16      	ldr	r4, [pc, #88]	; (1988 <main+0x64>)
    192e:	2300      	movs	r3, #0
    1930:	7023      	strb	r3, [r4, #0]
	 system_interrupt_disable_global();
    //configure HMI
    configureHMI();
    1932:	4b16      	ldr	r3, [pc, #88]	; (198c <main+0x68>)
    1934:	4798      	blx	r3
    //RTC configure
   configureInternalClock();
    1936:	4b16      	ldr	r3, [pc, #88]	; (1990 <main+0x6c>)
    1938:	4798      	blx	r3
    //configure external intrerrupt for pps
    configurationPPS();
    193a:	4b16      	ldr	r3, [pc, #88]	; (1994 <main+0x70>)
    193c:	4798      	blx	r3
    //configure the network of the time SYNCHRONISATION
	
    configurationNetwork();
    193e:	4b16      	ldr	r3, [pc, #88]	; (1998 <main+0x74>)
    1940:	4798      	blx	r3
	
    // Initialize the demo..
    kernelConfig();
    1942:	4b16      	ldr	r3, [pc, #88]	; (199c <main+0x78>)
    1944:	4798      	blx	r3
 *
 * Enables global interrupts in the device to fire any enabled interrupt handlers.
 */
static inline void system_interrupt_enable_global(void)
{
    cpu_irq_enable();
    1946:	2301      	movs	r3, #1
    1948:	7023      	strb	r3, [r4, #0]
    194a:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
    194e:	b662      	cpsie	i
    //demask global interrupt
    system_interrupt_enable_global();
    pc.printf("\r\n\r\n**********************************************************************\r\n");
    1950:	4d13      	ldr	r5, [pc, #76]	; (19a0 <main+0x7c>)
    1952:	1c28      	adds	r0, r5, #0
    1954:	4913      	ldr	r1, [pc, #76]	; (19a4 <main+0x80>)
    1956:	4c14      	ldr	r4, [pc, #80]	; (19a8 <main+0x84>)
    1958:	47a0      	blx	r4
    pc.printf("tick time: %lu ms\r\n",portTICK_RATE_MS);   
    195a:	1c28      	adds	r0, r5, #0
    195c:	4913      	ldr	r1, [pc, #76]	; (19ac <main+0x88>)
    195e:	2201      	movs	r2, #1
    1960:	47a0      	blx	r4
    #ifdef MASTERMODE
        pc.printf("Master clock\r\n");
    #else
        pc.printf("Slave Clock \r\n");
    1962:	1c28      	adds	r0, r5, #0
    1964:	4912      	ldr	r1, [pc, #72]	; (19b0 <main+0x8c>)
    1966:	47a0      	blx	r4
    #endif
    pc.printf("end config application begin\r\n");
    1968:	1c28      	adds	r0, r5, #0
    196a:	4912      	ldr	r1, [pc, #72]	; (19b4 <main+0x90>)
    196c:	47a0      	blx	r4
    printf("\r\n**********************************************************************\r\n\r\n");
    196e:	4812      	ldr	r0, [pc, #72]	; (19b8 <main+0x94>)
    1970:	4b12      	ldr	r3, [pc, #72]	; (19bc <main+0x98>)
    1972:	4798      	blx	r3
    //start the scheduler
    vTaskStartScheduler();
    1974:	4b12      	ldr	r3, [pc, #72]	; (19c0 <main+0x9c>)
    1976:	4798      	blx	r3
    while(1){//trap
		pc.printf("trap!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n");
    1978:	4e09      	ldr	r6, [pc, #36]	; (19a0 <main+0x7c>)
    197a:	4d12      	ldr	r5, [pc, #72]	; (19c4 <main+0xa0>)
    197c:	4c0a      	ldr	r4, [pc, #40]	; (19a8 <main+0x84>)
    197e:	1c30      	adds	r0, r6, #0
    1980:	1c29      	adds	r1, r5, #0
    1982:	47a0      	blx	r4
#include <ktrap.h>
#include <internalClock.h>
#include <ppsGPS.h>
#include <network.h>

int main (void ){
    1984:	e7fb      	b.n	197e <main+0x5a>
    1986:	46c0      	nop			; (mov r8, r8)
    1988:	200000d0 	.word	0x200000d0
    198c:	000032fd 	.word	0x000032fd
    1990:	00001651 	.word	0x00001651
    1994:	00002a3d 	.word	0x00002a3d
    1998:	00001895 	.word	0x00001895
    199c:	000028f5 	.word	0x000028f5
    19a0:	200043f0 	.word	0x200043f0
    19a4:	0000d3dc 	.word	0x0000d3dc
    19a8:	000046e1 	.word	0x000046e1
    19ac:	0000d42c 	.word	0x0000d42c
    19b0:	0000d440 	.word	0x0000d440
    19b4:	0000d450 	.word	0x0000d450
    19b8:	0000d470 	.word	0x0000d470
    19bc:	00009b19 	.word	0x00009b19
    19c0:	000008f5 	.word	0x000008f5
    19c4:	0000d4bc 	.word	0x0000d4bc

000019c8 <_ZN8cMxRadio14onReceiveFrameEhPhhah>:
 * @param frm array containing frame data
 * @param lqi link quality indicator
 * @param crc_fail boolean indicating whether the received frame failed FCS verification, not used
 */
uint8_t* cMxRadio::onReceiveFrame(uint8_t len, uint8_t* frm, uint8_t lqi, int8_t ed,uint8_t crc_fail)
{
    19c8:	b5f0      	push	{r4, r5, r6, r7, lr}
    19ca:	4657      	mov	r7, sl
    19cc:	464e      	mov	r6, r9
    19ce:	4645      	mov	r5, r8
    19d0:	b4e0      	push	{r5, r6, r7}
    19d2:	b082      	sub	sp, #8
    19d4:	ac0a      	add	r4, sp, #40	; 0x28
    19d6:	2500      	movs	r5, #0
    19d8:	5765      	ldrsb	r5, [r4, r5]
    19da:	ac0b      	add	r4, sp, #44	; 0x2c
    19dc:	7824      	ldrb	r4, [r4, #0]
	if (crc_fail)
    19de:	2c00      	cmp	r4, #0
    19e0:	d002      	beq.n	19e8 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x20>
		return rxRingBuffer;
    19e2:	307c      	adds	r0, #124	; 0x7c
    19e4:	30ff      	adds	r0, #255	; 0xff
    19e6:	e06b      	b.n	1ac0 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xf8>
	lastLqi = lqi;
    19e8:	4c38      	ldr	r4, [pc, #224]	; (1acc <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x104>)
    19ea:	5503      	strb	r3, [r0, r4]
	//lastRssi=ed;
	if (hasAttachedRxEvent == 0)
    19ec:	4c38      	ldr	r4, [pc, #224]	; (1ad0 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x108>)
    19ee:	5d04      	ldrb	r4, [r0, r4]
    19f0:	2c00      	cmp	r4, #0
    19f2:	d15b      	bne.n	1aac <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xe4>
	{
		// no event handler, so write it into the FIFO

		if (len >= HeadSize-1)
    19f4:	2907      	cmp	r1, #7
    19f6:	d817      	bhi.n	1a28 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x60>
		else
		{
			// frame header does not exist
			// copy everything

			for (uint8_t i = 0; i < len; i++)
    19f8:	2900      	cmp	r1, #0
    19fa:	d054      	beq.n	1aa6 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xde>
			{
				uint16_t j = ((uint16_t)((uint16_t)rxRingBufferHead + 1)) % ZR_FIFO_SIZE;
    19fc:	23fc      	movs	r3, #252	; 0xfc
    19fe:	33ff      	adds	r3, #255	; 0xff
    1a00:	5cc3      	ldrb	r3, [r0, r3]
    1a02:	1c5c      	adds	r4, r3, #1
    1a04:	257f      	movs	r5, #127	; 0x7f
    1a06:	402c      	ands	r4, r5
				if (j != rxRingBufferTail)
    1a08:	357e      	adds	r5, #126	; 0x7e
    1a0a:	35ff      	adds	r5, #255	; 0xff
    1a0c:	5d45      	ldrb	r5, [r0, r5]
    1a0e:	42a5      	cmp	r5, r4
    1a10:	d049      	beq.n	1aa6 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xde>
    1a12:	1c17      	adds	r7, r2, #0
    1a14:	3901      	subs	r1, #1
    1a16:	b2c9      	uxtb	r1, r1
    1a18:	1852      	adds	r2, r2, r1
				{
					// push into FIFO
					rxRingBuffer[rxRingBufferHead] = frm[i];
					rxRingBufferHead = j;
    1a1a:	21fc      	movs	r1, #252	; 0xfc
    1a1c:	31ff      	adds	r1, #255	; 0xff
			// frame header does not exist
			// copy everything

			for (uint8_t i = 0; i < len; i++)
			{
				uint16_t j = ((uint16_t)((uint16_t)rxRingBufferHead + 1)) % ZR_FIFO_SIZE;
    1a1e:	257f      	movs	r5, #127	; 0x7f
    1a20:	46ac      	mov	ip, r5
				if (j != rxRingBufferTail)
    1a22:	26fe      	movs	r6, #254	; 0xfe
    1a24:	0076      	lsls	r6, r6, #1
    1a26:	e035      	b.n	1a94 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xcc>
		if (len >= HeadSize-1)
		{
			// frame header exists
			// copy only payload

			for (uint8_t i = HeadSize; i < len - 2; i++)
    1a28:	1e8e      	subs	r6, r1, #2
    1a2a:	2e09      	cmp	r6, #9
    1a2c:	dd3b      	ble.n	1aa6 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xde>
			{
				uint16_t j = ((uint16_t)((uint16_t)rxRingBufferHead + 1)) % ZR_FIFO_SIZE;
    1a2e:	23fc      	movs	r3, #252	; 0xfc
    1a30:	33ff      	adds	r3, #255	; 0xff
    1a32:	5cc4      	ldrb	r4, [r0, r3]
    1a34:	1c63      	adds	r3, r4, #1
    1a36:	217f      	movs	r1, #127	; 0x7f
    1a38:	400b      	ands	r3, r1
				if (j != rxRingBufferTail)
    1a3a:	317e      	adds	r1, #126	; 0x7e
    1a3c:	31ff      	adds	r1, #255	; 0xff
    1a3e:	5c41      	ldrb	r1, [r0, r1]
    1a40:	2509      	movs	r5, #9
    1a42:	4299      	cmp	r1, r3
    1a44:	d10a      	bne.n	1a5c <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x94>
    1a46:	e02e      	b.n	1aa6 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xde>
			// frame header exists
			// copy only payload

			for (uint8_t i = HeadSize; i < len - 2; i++)
			{
				uint16_t j = ((uint16_t)((uint16_t)rxRingBufferHead + 1)) % ZR_FIFO_SIZE;
    1a48:	4647      	mov	r7, r8
    1a4a:	403b      	ands	r3, r7
    1a4c:	3301      	adds	r3, #1
    1a4e:	4667      	mov	r7, ip
    1a50:	403b      	ands	r3, r7
				if (j != rxRingBufferTail)
    1a52:	4657      	mov	r7, sl
    1a54:	5dc7      	ldrb	r7, [r0, r7]
    1a56:	429f      	cmp	r7, r3
    1a58:	d109      	bne.n	1a6e <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xa6>
    1a5a:	e024      	b.n	1aa6 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xde>
				{
					// push into FIFO
					rxRingBuffer[rxRingBufferHead] = frm[i];
					rxRingBufferHead = j;
    1a5c:	21fc      	movs	r1, #252	; 0xfc
    1a5e:	31ff      	adds	r1, #255	; 0xff
			// frame header exists
			// copy only payload

			for (uint8_t i = HeadSize; i < len - 2; i++)
			{
				uint16_t j = ((uint16_t)((uint16_t)rxRingBufferHead + 1)) % ZR_FIFO_SIZE;
    1a60:	27ff      	movs	r7, #255	; 0xff
    1a62:	46b8      	mov	r8, r7
    1a64:	3f80      	subs	r7, #128	; 0x80
    1a66:	46bc      	mov	ip, r7
				if (j != rxRingBufferTail)
    1a68:	377e      	adds	r7, #126	; 0x7e
    1a6a:	37ff      	adds	r7, #255	; 0xff
    1a6c:	46ba      	mov	sl, r7
				{
					// push into FIFO
					rxRingBuffer[rxRingBufferHead] = frm[i];
    1a6e:	5d57      	ldrb	r7, [r2, r5]
    1a70:	1904      	adds	r4, r0, r4
    1a72:	3479      	adds	r4, #121	; 0x79
    1a74:	34ff      	adds	r4, #255	; 0xff
    1a76:	70e7      	strb	r7, [r4, #3]
					rxRingBufferHead = j;
    1a78:	b2dc      	uxtb	r4, r3
    1a7a:	5444      	strb	r4, [r0, r1]
		if (len >= HeadSize-1)
		{
			// frame header exists
			// copy only payload

			for (uint8_t i = HeadSize; i < len - 2; i++)
    1a7c:	3501      	adds	r5, #1
    1a7e:	b2ed      	uxtb	r5, r5
    1a80:	42b5      	cmp	r5, r6
    1a82:	dbe1      	blt.n	1a48 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0x80>
    1a84:	e00f      	b.n	1aa6 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xde>
			// frame header does not exist
			// copy everything

			for (uint8_t i = 0; i < len; i++)
			{
				uint16_t j = ((uint16_t)((uint16_t)rxRingBufferHead + 1)) % ZR_FIFO_SIZE;
    1a86:	3401      	adds	r4, #1
    1a88:	4665      	mov	r5, ip
    1a8a:	402c      	ands	r4, r5
    1a8c:	3701      	adds	r7, #1
				if (j != rxRingBufferTail)
    1a8e:	5d85      	ldrb	r5, [r0, r6]
    1a90:	42a5      	cmp	r5, r4
    1a92:	d008      	beq.n	1aa6 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xde>
				{
					// push into FIFO
					rxRingBuffer[rxRingBufferHead] = frm[i];
    1a94:	783d      	ldrb	r5, [r7, #0]
    1a96:	18c3      	adds	r3, r0, r3
    1a98:	3379      	adds	r3, #121	; 0x79
    1a9a:	33ff      	adds	r3, #255	; 0xff
    1a9c:	70dd      	strb	r5, [r3, #3]
					rxRingBufferHead = j;
    1a9e:	b2e3      	uxtb	r3, r4
    1aa0:	5443      	strb	r3, [r0, r1]
		else
		{
			// frame header does not exist
			// copy everything

			for (uint8_t i = 0; i < len; i++)
    1aa2:	4297      	cmp	r7, r2
    1aa4:	d1ef      	bne.n	1a86 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xbe>
					break;
				}
			}
		}

		return rxRingBuffer;
    1aa6:	307c      	adds	r0, #124	; 0x7c
    1aa8:	30ff      	adds	r0, #255	; 0xff
    1aaa:	e009      	b.n	1ac0 <_ZN8cMxRadio14onReceiveFrameEhPhhah+0xf8>
	}
	else
	{
		// user event is attached so call it
		return zrEventReceiveFrame(len, frm, lqi, ed,crc_fail);
    1aac:	2400      	movs	r4, #0
    1aae:	9400      	str	r4, [sp, #0]
    1ab0:	24a1      	movs	r4, #161	; 0xa1
    1ab2:	00a4      	lsls	r4, r4, #2
    1ab4:	5904      	ldr	r4, [r0, r4]
    1ab6:	1c08      	adds	r0, r1, #0
    1ab8:	1c11      	adds	r1, r2, #0
    1aba:	1c1a      	adds	r2, r3, #0
    1abc:	1c2b      	adds	r3, r5, #0
    1abe:	47a0      	blx	r4
	}
}
    1ac0:	b002      	add	sp, #8
    1ac2:	bc1c      	pop	{r2, r3, r4}
    1ac4:	4690      	mov	r8, r2
    1ac6:	4699      	mov	r9, r3
    1ac8:	46a2      	mov	sl, r4
    1aca:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1acc:	0000027d 	.word	0x0000027d
    1ad0:	0000027f 	.word	0x0000027f

00001ad4 <_ZN8cMxRadio8onTxDoneE15radio_tx_done_t>:
 * this should not be called by the user
 *
 * @param x one of the radio_tx_done_t enumerations indicating transmission success
 */
void cMxRadio::onTxDone(radio_tx_done_t x)
{
    1ad4:	b510      	push	{r4, lr}
    1ad6:	1c04      	adds	r4, r0, #0
	if (hasAttachedTxEvent)
    1ad8:	23a0      	movs	r3, #160	; 0xa0
    1ada:	009b      	lsls	r3, r3, #2
    1adc:	5cc3      	ldrb	r3, [r0, r3]
    1ade:	2b00      	cmp	r3, #0
    1ae0:	d004      	beq.n	1aec <_ZN8cMxRadio8onTxDoneE15radio_tx_done_t+0x18>
	{
		zrEventTxDone(x);
    1ae2:	23a2      	movs	r3, #162	; 0xa2
    1ae4:	009b      	lsls	r3, r3, #2
    1ae6:	58c3      	ldr	r3, [r0, r3]
    1ae8:	1c08      	adds	r0, r1, #0
    1aea:	4798      	blx	r3
	}

	txIsBusy = 0;
    1aec:	2200      	movs	r2, #0
    1aee:	4b01      	ldr	r3, [pc, #4]	; (1af4 <_ZN8cMxRadio8onTxDoneE15radio_tx_done_t+0x20>)
    1af0:	54e2      	strb	r2, [r4, r3]
}
    1af2:	bd10      	pop	{r4, pc}
    1af4:	00000282 	.word	0x00000282

00001af8 <_ZN8cMxRadioD1Ev>:
volatile uint8_t txIsBusy = 0;


cMxRadio::~cMxRadio()
{
}
    1af8:	4770      	bx	lr
    1afa:	46c0      	nop			; (mov r8, r8)

00001afc <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_>:
// empty constructor, should not be called by user
cMxRadio::cMxRadio(PinName mosi, PinName miso, PinName sclk, PinName cs, PinName rst, PinName slp, PinName irq)
    1afc:	b5f0      	push	{r4, r5, r6, r7, lr}
    1afe:	4647      	mov	r7, r8
    1b00:	b480      	push	{r7}
    1b02:	b086      	sub	sp, #24
    1b04:	1c05      	adds	r5, r0, #0
    1b06:	a80c      	add	r0, sp, #48	; 0x30
    1b08:	2600      	movs	r6, #0
    1b0a:	5786      	ldrsb	r6, [r0, r6]
    1b0c:	a80d      	add	r0, sp, #52	; 0x34
    1b0e:	2700      	movs	r7, #0
    1b10:	57c7      	ldrsb	r7, [r0, r7]
    1b12:	a80e      	add	r0, sp, #56	; 0x38
    1b14:	7800      	ldrb	r0, [r0, #0]
    1b16:	b240      	sxtb	r0, r0
    1b18:	4680      	mov	r8, r0
:m_spi(mosi, miso, sclk), m_cs(cs), reset_pin(rst), sleep_pin(slp)//,irq_pin(irq)
    1b1a:	1c28      	adds	r0, r5, #0
    1b1c:	3014      	adds	r0, #20
    1b1e:	2401      	movs	r4, #1
    1b20:	4264      	negs	r4, r4
    1b22:	9400      	str	r4, [sp, #0]
    1b24:	4c2c      	ldr	r4, [pc, #176]	; (1bd8 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xdc>)
    1b26:	47a0      	blx	r4
public:
    /** Create a DigitalOut connected to the specified pin
     *
     *  @param pin DigitalOut pin to connect to
     */
    DigitalOut(PinName pin) : gpio() {
    1b28:	2400      	movs	r4, #0
    1b2a:	23a8      	movs	r3, #168	; 0xa8
    1b2c:	54ec      	strb	r4, [r5, r3]
    1b2e:	1c28      	adds	r0, r5, #0
    1b30:	30a8      	adds	r0, #168	; 0xa8
    1b32:	6044      	str	r4, [r0, #4]
    1b34:	7204      	strb	r4, [r0, #8]
    1b36:	7244      	strb	r4, [r0, #9]
    1b38:	7284      	strb	r4, [r0, #10]
    1b3a:	60c4      	str	r4, [r0, #12]
    1b3c:	6104      	str	r4, [r0, #16]
    1b3e:	6144      	str	r4, [r0, #20]
    1b40:	6184      	str	r4, [r0, #24]
        gpio_init_out(&gpio, pin);
    1b42:	1c31      	adds	r1, r6, #0
    1b44:	4e25      	ldr	r6, [pc, #148]	; (1bdc <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xe0>)
    1b46:	47b0      	blx	r6
public:
    /** Create a DigitalOut connected to the specified pin
     *
     *  @param pin DigitalOut pin to connect to
     */
    DigitalOut(PinName pin) : gpio() {
    1b48:	23c4      	movs	r3, #196	; 0xc4
    1b4a:	54ec      	strb	r4, [r5, r3]
    1b4c:	1c28      	adds	r0, r5, #0
    1b4e:	30c4      	adds	r0, #196	; 0xc4
    1b50:	6044      	str	r4, [r0, #4]
    1b52:	7204      	strb	r4, [r0, #8]
    1b54:	7244      	strb	r4, [r0, #9]
    1b56:	7284      	strb	r4, [r0, #10]
    1b58:	60c4      	str	r4, [r0, #12]
    1b5a:	6104      	str	r4, [r0, #16]
    1b5c:	6144      	str	r4, [r0, #20]
    1b5e:	6184      	str	r4, [r0, #24]
        gpio_init_out(&gpio, pin);
    1b60:	1c39      	adds	r1, r7, #0
    1b62:	47b0      	blx	r6
public:
    /** Create a DigitalOut connected to the specified pin
     *
     *  @param pin DigitalOut pin to connect to
     */
    DigitalOut(PinName pin) : gpio() {
    1b64:	23e0      	movs	r3, #224	; 0xe0
    1b66:	54ec      	strb	r4, [r5, r3]
    1b68:	1c28      	adds	r0, r5, #0
    1b6a:	30e0      	adds	r0, #224	; 0xe0
    1b6c:	6044      	str	r4, [r0, #4]
    1b6e:	7204      	strb	r4, [r0, #8]
    1b70:	7244      	strb	r4, [r0, #9]
    1b72:	7284      	strb	r4, [r0, #10]
    1b74:	60c4      	str	r4, [r0, #12]
    1b76:	6104      	str	r4, [r0, #16]
    1b78:	6144      	str	r4, [r0, #20]
    1b7a:	6184      	str	r4, [r0, #24]
        gpio_init_out(&gpio, pin);
    1b7c:	4641      	mov	r1, r8
    1b7e:	47b0      	blx	r6
{
	// default event handlers
	
	zrEventTxDone=0;
    1b80:	23a2      	movs	r3, #162	; 0xa2
    1b82:	009b      	lsls	r3, r3, #2
    1b84:	50ec      	str	r4, [r5, r3]
	zrEventReceiveFrame=0;
    1b86:	3b04      	subs	r3, #4
    1b88:	50ec      	str	r4, [r5, r3]
	temprssi=0;
    1b8a:	702c      	strb	r4, [r5, #0]
	setautotx=false;
    1b8c:	3308      	adds	r3, #8
    1b8e:	54ec      	strb	r4, [r5, r3]
	setautorx=false;
    1b90:	4b13      	ldr	r3, [pc, #76]	; (1be0 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xe4>)
    1b92:	54ec      	strb	r4, [r5, r3]
	needack=false;
    1b94:	4b13      	ldr	r3, [pc, #76]	; (1be4 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xe8>)
    1b96:	54ec      	strb	r4, [r5, r3]
	usedBeginTransmission = 0;
    1b98:	4b13      	ldr	r3, [pc, #76]	; (1be8 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xec>)
    1b9a:	54ec      	strb	r4, [r5, r3]
	hasAttachedTxEvent = 0;
    1b9c:	3b01      	subs	r3, #1
    1b9e:	54ec      	strb	r4, [r5, r3]
	hasAttachedRxEvent = 0;
    1ba0:	4b12      	ldr	r3, [pc, #72]	; (1bec <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xf0>)
    1ba2:	54ec      	strb	r4, [r5, r3]
	lastLqi = 0;
    1ba4:	4b12      	ldr	r3, [pc, #72]	; (1bf0 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xf4>)
    1ba6:	54ec      	strb	r4, [r5, r3]
	lastRssi = 0;
    1ba8:	4b12      	ldr	r3, [pc, #72]	; (1bf4 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xf8>)
    1baa:	54ec      	strb	r4, [r5, r3]
	txTmpBufferLength = 0;
    1bac:	3b02      	subs	r3, #2
    1bae:	54ec      	strb	r4, [r5, r3]
	rxRingBufferHead = 0;
    1bb0:	23fc      	movs	r3, #252	; 0xfc
    1bb2:	33ff      	adds	r3, #255	; 0xff
    1bb4:	54ec      	strb	r4, [r5, r3]
	rxRingBufferTail = 0;
    1bb6:	3301      	adds	r3, #1
    1bb8:	54ec      	strb	r4, [r5, r3]
	user_radio_tx_done=0;
	user_radio_receive_frame=0;
	user_radio_irq=0;
	user_radio_error=0;
	*/
	zr_attach_receive_frame(&cMxRadio::onReceiveFrame);
    1bba:	1c28      	adds	r0, r5, #0
    1bbc:	490e      	ldr	r1, [pc, #56]	; (1bf8 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0xfc>)
    1bbe:	2200      	movs	r2, #0
    1bc0:	4b0e      	ldr	r3, [pc, #56]	; (1bfc <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0x100>)
    1bc2:	4798      	blx	r3
	zr_attach_tx_done(&cMxRadio::onTxDone);
    1bc4:	1c28      	adds	r0, r5, #0
    1bc6:	490e      	ldr	r1, [pc, #56]	; (1c00 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0x104>)
    1bc8:	2200      	movs	r2, #0
    1bca:	4b0e      	ldr	r3, [pc, #56]	; (1c04 <_ZN8cMxRadioC1E7PinNameS0_S0_S0_S0_S0_S0_+0x108>)
    1bcc:	4798      	blx	r3

}
    1bce:	1c28      	adds	r0, r5, #0
    1bd0:	b006      	add	sp, #24
    1bd2:	bc04      	pop	{r2}
    1bd4:	4690      	mov	r8, r2
    1bd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1bd8:	00004339 	.word	0x00004339
    1bdc:	0000472d 	.word	0x0000472d
    1be0:	0000028d 	.word	0x0000028d
    1be4:	0000028e 	.word	0x0000028e
    1be8:	00000281 	.word	0x00000281
    1bec:	0000027f 	.word	0x0000027f
    1bf0:	0000027d 	.word	0x0000027d
    1bf4:	0000027e 	.word	0x0000027e
    1bf8:	000019c9 	.word	0x000019c9
    1bfc:	00001f65 	.word	0x00001f65
    1c00:	00001ad5 	.word	0x00001ad5
    1c04:	00001f7d 	.word	0x00001f7d

00001c08 <_ZN8cMxRadio5beginEaPh>:
 *
 * @param chan channel number for the radio to use, 11 to 26
 * @param frameHeader HeadSize byte custom frame header
 */
void cMxRadio::begin(channel_t chan, uint8_t* frameHeader)
{
    1c08:	b570      	push	{r4, r5, r6, lr}
    1c0a:	1c06      	adds	r6, r0, #0
    1c0c:	1c0d      	adds	r5, r1, #0
    1c0e:	1c14      	adds	r4, r2, #0
	radio_init(rxFrameBuffer, MAX_FRAME_SIZE);
    1c10:	1c01      	adds	r1, r0, #0
    1c12:	31fc      	adds	r1, #252	; 0xfc
    1c14:	227f      	movs	r2, #127	; 0x7f
    1c16:	4b20      	ldr	r3, [pc, #128]	; (1c98 <_ZN8cMxRadio5beginEaPh+0x90>)
    1c18:	4798      	blx	r3

	if (frameHeader)
    1c1a:	2c00      	cmp	r4, #0
    1c1c:	d00c      	beq.n	1c38 <_ZN8cMxRadio5beginEaPh+0x30>
    1c1e:	1c22      	adds	r2, r4, #0
    1c20:	1c33      	adds	r3, r6, #0
    1c22:	33fe      	adds	r3, #254	; 0xfe
    1c24:	33ff      	adds	r3, #255	; 0xff
    1c26:	491d      	ldr	r1, [pc, #116]	; (1c9c <_ZN8cMxRadio5beginEaPh+0x94>)
    1c28:	1870      	adds	r0, r6, r1
	{
		// copy custom frame header
		int i;
		for (i = 0; i < HeadSize; i++)
			txTmpBuffer[i] = frameHeader[i];
    1c2a:	7811      	ldrb	r1, [r2, #0]
    1c2c:	7019      	strb	r1, [r3, #0]
    1c2e:	3201      	adds	r2, #1
    1c30:	3301      	adds	r3, #1

	if (frameHeader)
	{
		// copy custom frame header
		int i;
		for (i = 0; i < HeadSize; i++)
    1c32:	4283      	cmp	r3, r0
    1c34:	d1f9      	bne.n	1c2a <_ZN8cMxRadio5beginEaPh+0x22>
    1c36:	e01b      	b.n	1c70 <_ZN8cMxRadio5beginEaPh+0x68>
			txTmpBuffer[i] = frameHeader[i];
	}
	else
	{
		txTmpBuffer[0] = 0x41;
    1c38:	2241      	movs	r2, #65	; 0x41
    1c3a:	23fe      	movs	r3, #254	; 0xfe
    1c3c:	33ff      	adds	r3, #255	; 0xff
    1c3e:	54f2      	strb	r2, [r6, r3]
		txTmpBuffer[1] = 0x88;
    1c40:	3247      	adds	r2, #71	; 0x47
    1c42:	3301      	adds	r3, #1
    1c44:	54f2      	strb	r2, [r6, r3]
		txTmpBuffer[2] =  0;
    1c46:	2300      	movs	r3, #0
    1c48:	4a15      	ldr	r2, [pc, #84]	; (1ca0 <_ZN8cMxRadio5beginEaPh+0x98>)
    1c4a:	54b3      	strb	r3, [r6, r2]
		txTmpBuffer[3]=0xCD;
    1c4c:	21cd      	movs	r1, #205	; 0xcd
    1c4e:	3201      	adds	r2, #1
    1c50:	54b1      	strb	r1, [r6, r2]
		txTmpBuffer[4]=0xAB;
    1c52:	3922      	subs	r1, #34	; 0x22
    1c54:	4a13      	ldr	r2, [pc, #76]	; (1ca4 <_ZN8cMxRadio5beginEaPh+0x9c>)
    1c56:	54b1      	strb	r1, [r6, r2]
		txTmpBuffer[5] = 0xFF; //dest address low byte
    1c58:	3a03      	subs	r2, #3
    1c5a:	3aff      	subs	r2, #255	; 0xff
    1c5c:	4912      	ldr	r1, [pc, #72]	; (1ca8 <_ZN8cMxRadio5beginEaPh+0xa0>)
    1c5e:	5472      	strb	r2, [r6, r1]
		txTmpBuffer[6] = 0xFF; //dest address hight byte
    1c60:	4912      	ldr	r1, [pc, #72]	; (1cac <_ZN8cMxRadio5beginEaPh+0xa4>)
    1c62:	5472      	strb	r2, [r6, r1]
		txTmpBuffer[7] = 0x01;;
    1c64:	2101      	movs	r1, #1
    1c66:	3206      	adds	r2, #6
    1c68:	32ff      	adds	r2, #255	; 0xff
    1c6a:	54b1      	strb	r1, [r6, r2]
		txTmpBuffer[8] = 0x00;;
    1c6c:	4a10      	ldr	r2, [pc, #64]	; (1cb0 <_ZN8cMxRadio5beginEaPh+0xa8>)
    1c6e:	54b3      	strb	r3, [r6, r2]
 */
typedef union radio_param_t
{
#if defined __cplusplus
public:
    radio_param_t(int8_t c) { channel = c; } /* also used for txpwr_t */
    1c70:	b2ea      	uxtb	r2, r5
	}

	// set the channel
	radio_set_param(RP_CHANNEL(chan));
    1c72:	1c30      	adds	r0, r6, #0
    1c74:	2100      	movs	r1, #0
    1c76:	4b0f      	ldr	r3, [pc, #60]	; (1cb4 <_ZN8cMxRadio5beginEaPh+0xac>)
    1c78:	4798      	blx	r3

	// default to receiver
	if (setautorx)
    1c7a:	4b0f      	ldr	r3, [pc, #60]	; (1cb8 <_ZN8cMxRadio5beginEaPh+0xb0>)
    1c7c:	5cf3      	ldrb	r3, [r6, r3]
    1c7e:	2b00      	cmp	r3, #0
    1c80:	d004      	beq.n	1c8c <_ZN8cMxRadio5beginEaPh+0x84>
		radio_set_state(STATE_RXAUTO);
    1c82:	1c30      	adds	r0, r6, #0
    1c84:	2104      	movs	r1, #4
    1c86:	4b0d      	ldr	r3, [pc, #52]	; (1cbc <_ZN8cMxRadio5beginEaPh+0xb4>)
    1c88:	4798      	blx	r3
    1c8a:	e003      	b.n	1c94 <_ZN8cMxRadio5beginEaPh+0x8c>
	else
		radio_set_state(STATE_RX);
    1c8c:	1c30      	adds	r0, r6, #0
    1c8e:	2102      	movs	r1, #2
    1c90:	4b0a      	ldr	r3, [pc, #40]	; (1cbc <_ZN8cMxRadio5beginEaPh+0xb4>)
    1c92:	4798      	blx	r3

#ifdef ENABLE_DIG3_DIG4
	trx_bit_write(SR_PA_EXT_EN, 1);
#endif

}
    1c94:	bd70      	pop	{r4, r5, r6, pc}
    1c96:	46c0      	nop			; (mov r8, r8)
    1c98:	00002099 	.word	0x00002099
    1c9c:	00000206 	.word	0x00000206
    1ca0:	000001ff 	.word	0x000001ff
    1ca4:	00000201 	.word	0x00000201
    1ca8:	00000202 	.word	0x00000202
    1cac:	00000203 	.word	0x00000203
    1cb0:	00000205 	.word	0x00000205
    1cb4:	000023d9 	.word	0x000023d9
    1cb8:	0000028d 	.word	0x0000028d
    1cbc:	00002189 	.word	0x00002189

00001cc0 <_ZN8cMxRadio5beginEa>:
 * Then it sets the channel number and defaults to RX state.
 *
 * @param chan the channel number for the radio to use, 11 to 26
 */
void cMxRadio::begin(channel_t chan)
{
    1cc0:	b508      	push	{r3, lr}
	begin(chan, 0);
    1cc2:	2200      	movs	r2, #0
    1cc4:	4b01      	ldr	r3, [pc, #4]	; (1ccc <_ZN8cMxRadio5beginEa+0xc>)
    1cc6:	4798      	blx	r3
}
    1cc8:	bd08      	pop	{r3, pc}
    1cca:	46c0      	nop			; (mov r8, r8)
    1ccc:	00001c09 	.word	0x00001c09

00001cd0 <_ZN8cMxRadio9attachIrqEPFvhE>:
 *
 * @param funct the function pointer to the event handler
 */
void cMxRadio::attachIrq(void (*funct)(uint8_t))
{
	user_radio_irq = funct;
    1cd0:	23a5      	movs	r3, #165	; 0xa5
    1cd2:	009b      	lsls	r3, r3, #2
    1cd4:	50c1      	str	r1, [r0, r3]
}
    1cd6:	4770      	bx	lr

00001cd8 <_ZN8cMxRadio4readEv>:
 * @return the next byte, or -1 if buffer is empty
 */
int16_t cMxRadio::read()
{
	// if the head isn't ahead of the tail, we don't have any characters
	if (rxRingBufferHead == rxRingBufferTail)
    1cd8:	23fe      	movs	r3, #254	; 0xfe
    1cda:	005b      	lsls	r3, r3, #1
    1cdc:	5cc3      	ldrb	r3, [r0, r3]
    1cde:	22fc      	movs	r2, #252	; 0xfc
    1ce0:	32ff      	adds	r2, #255	; 0xff
    1ce2:	5c82      	ldrb	r2, [r0, r2]
    1ce4:	429a      	cmp	r2, r3
    1ce6:	d00b      	beq.n	1d00 <_ZN8cMxRadio4readEv+0x28>
	{
		return -1;
	}
	else
	{
		uint8_t c = rxRingBuffer[rxRingBufferTail];
    1ce8:	18c2      	adds	r2, r0, r3
    1cea:	3279      	adds	r2, #121	; 0x79
    1cec:	32ff      	adds	r2, #255	; 0xff
    1cee:	78d2      	ldrb	r2, [r2, #3]
		rxRingBufferTail = (rxRingBufferTail + 1) % ZR_FIFO_SIZE; // pop
    1cf0:	3301      	adds	r3, #1
    1cf2:	217f      	movs	r1, #127	; 0x7f
    1cf4:	400b      	ands	r3, r1
    1cf6:	317e      	adds	r1, #126	; 0x7e
    1cf8:	31ff      	adds	r1, #255	; 0xff
    1cfa:	5443      	strb	r3, [r0, r1]
		return c;
    1cfc:	b290      	uxth	r0, r2
    1cfe:	e000      	b.n	1d02 <_ZN8cMxRadio4readEv+0x2a>
int16_t cMxRadio::read()
{
	// if the head isn't ahead of the tail, we don't have any characters
	if (rxRingBufferHead == rxRingBufferTail)
	{
		return -1;
    1d00:	4801      	ldr	r0, [pc, #4]	; (1d08 <_ZN8cMxRadio4readEv+0x30>)
    1d02:	b200      	sxth	r0, r0
	{
		uint8_t c = rxRingBuffer[rxRingBufferTail];
		rxRingBufferTail = (rxRingBufferTail + 1) % ZR_FIFO_SIZE; // pop
		return c;
	}
}
    1d04:	4770      	bx	lr
    1d06:	46c0      	nop			; (mov r8, r8)
    1d08:	0000ffff 	.word	0x0000ffff

00001d0c <_ZN8cMxRadio9availableEv>:
 *
 * @return how many bytes are in the RX FIFO ring buffer
 */
int8_t cMxRadio::available()
{
	return ((int16_t)((int16_t)ZR_FIFO_SIZE + (int16_t)rxRingBufferHead - (int16_t)rxRingBufferTail)) % ZR_FIFO_SIZE;
    1d0c:	23fc      	movs	r3, #252	; 0xfc
    1d0e:	33ff      	adds	r3, #255	; 0xff
    1d10:	5cc3      	ldrb	r3, [r0, r3]
    1d12:	3380      	adds	r3, #128	; 0x80
    1d14:	22fe      	movs	r2, #254	; 0xfe
    1d16:	0052      	lsls	r2, r2, #1
    1d18:	5c80      	ldrb	r0, [r0, r2]
    1d1a:	1a1b      	subs	r3, r3, r0
    1d1c:	17d8      	asrs	r0, r3, #31
    1d1e:	0e42      	lsrs	r2, r0, #25
    1d20:	189b      	adds	r3, r3, r2
    1d22:	207f      	movs	r0, #127	; 0x7f
    1d24:	4003      	ands	r3, r0
    1d26:	1a98      	subs	r0, r3, r2
    1d28:	b240      	sxtb	r0, r0
}
    1d2a:	4770      	bx	lr

00001d2c <_ZN8cMxRadio17beginTransmissionEv>:
 * Non-immediate mode sends multiple bytes per frame
 *
 */
void cMxRadio::beginTransmission()
{
	usedBeginTransmission = 1;
    1d2c:	2201      	movs	r2, #1
    1d2e:	4b07      	ldr	r3, [pc, #28]	; (1d4c <_ZN8cMxRadio17beginTransmissionEv+0x20>)
    1d30:	54c2      	strb	r2, [r0, r3]
	txTmpBuffer[5]= 0xFF;
    1d32:	3b83      	subs	r3, #131	; 0x83
    1d34:	3bff      	subs	r3, #255	; 0xff
    1d36:	4a06      	ldr	r2, [pc, #24]	; (1d50 <_ZN8cMxRadio17beginTransmissionEv+0x24>)
    1d38:	5483      	strb	r3, [r0, r2]
	txTmpBuffer[6]= 0XFF;
    1d3a:	4a06      	ldr	r2, [pc, #24]	; (1d54 <_ZN8cMxRadio17beginTransmissionEv+0x28>)
    1d3c:	5483      	strb	r3, [r0, r2]
	// add frame header
	txTmpBufferLength = HeadSize;
    1d3e:	3afb      	subs	r2, #251	; 0xfb
    1d40:	3aff      	subs	r2, #255	; 0xff
    1d42:	337e      	adds	r3, #126	; 0x7e
    1d44:	33ff      	adds	r3, #255	; 0xff
    1d46:	54c2      	strb	r2, [r0, r3]
}
    1d48:	4770      	bx	lr
    1d4a:	46c0      	nop			; (mov r8, r8)
    1d4c:	00000281 	.word	0x00000281
    1d50:	00000202 	.word	0x00000202
    1d54:	00000203 	.word	0x00000203

00001d58 <_ZN8cMxRadio10waitTxDoneEt>:
 * waits until the last transmission is complete, or timed out
 *
 * @param timeout iterations to countdown before timeout
 */
void cMxRadio::waitTxDone(uint16_t timeout)
{
    1d58:	b510      	push	{r4, lr}
    1d5a:	b082      	sub	sp, #8
	volatile uint16_t cnt = timeout;
    1d5c:	466b      	mov	r3, sp
    1d5e:	80d9      	strh	r1, [r3, #6]
	while (txIsBusy && cnt--);
    1d60:	4c07      	ldr	r4, [pc, #28]	; (1d80 <_ZN8cMxRadio10waitTxDoneEt+0x28>)
    1d62:	466b      	mov	r3, sp
    1d64:	1d99      	adds	r1, r3, #6
    1d66:	5d03      	ldrb	r3, [r0, r4]
    1d68:	2b00      	cmp	r3, #0
    1d6a:	d006      	beq.n	1d7a <_ZN8cMxRadio10waitTxDoneEt+0x22>
    1d6c:	880b      	ldrh	r3, [r1, #0]
    1d6e:	b29b      	uxth	r3, r3
    1d70:	1e5a      	subs	r2, r3, #1
    1d72:	b292      	uxth	r2, r2
    1d74:	800a      	strh	r2, [r1, #0]
    1d76:	2b00      	cmp	r3, #0
    1d78:	d1f5      	bne.n	1d66 <_ZN8cMxRadio10waitTxDoneEt+0xe>
}
    1d7a:	b002      	add	sp, #8
    1d7c:	bd10      	pop	{r4, pc}
    1d7e:	46c0      	nop			; (mov r8, r8)
    1d80:	00000282 	.word	0x00000282

00001d84 <_ZN8cMxRadio15endTransmissionEv>:
 *
 * Finalize the payload and transmits it when ready
 *
 */
void cMxRadio::endTransmission()
{
    1d84:	b538      	push	{r3, r4, r5, lr}
    1d86:	1c04      	adds	r4, r0, #0
	usedBeginTransmission = 0;
    1d88:	2200      	movs	r2, #0
    1d8a:	4b28      	ldr	r3, [pc, #160]	; (1e2c <_ZN8cMxRadio15endTransmissionEv+0xa8>)
    1d8c:	54c2      	strb	r2, [r0, r3]

	// empty FCS field
	txTmpBufferLength += 2;
    1d8e:	229f      	movs	r2, #159	; 0x9f
    1d90:	0092      	lsls	r2, r2, #2
    1d92:	5c83      	ldrb	r3, [r0, r2]
    1d94:	3302      	adds	r3, #2
    1d96:	5483      	strb	r3, [r0, r2]

#ifdef ZR_TXWAIT_BEFORE
	waitTxDone(0xFFFF);
    1d98:	4925      	ldr	r1, [pc, #148]	; (1e30 <_ZN8cMxRadio15endTransmissionEv+0xac>)
    1d9a:	4b26      	ldr	r3, [pc, #152]	; (1e34 <_ZN8cMxRadio15endTransmissionEv+0xb0>)
    1d9c:	4798      	blx	r3
#endif
	txIsBusy = 1;
    1d9e:	2201      	movs	r2, #1
    1da0:	4b25      	ldr	r3, [pc, #148]	; (1e38 <_ZN8cMxRadio15endTransmissionEv+0xb4>)
    1da2:	54e2      	strb	r2, [r4, r3]
	if (setautotx)
    1da4:	330a      	adds	r3, #10
    1da6:	5ce3      	ldrb	r3, [r4, r3]
    1da8:	2b00      	cmp	r3, #0
    1daa:	d004      	beq.n	1db6 <_ZN8cMxRadio15endTransmissionEv+0x32>
		radio_set_state(STATE_TXAUTO);
    1dac:	1c20      	adds	r0, r4, #0
    1dae:	2103      	movs	r1, #3
    1db0:	4b22      	ldr	r3, [pc, #136]	; (1e3c <_ZN8cMxRadio15endTransmissionEv+0xb8>)
    1db2:	4798      	blx	r3
    1db4:	e003      	b.n	1dbe <_ZN8cMxRadio15endTransmissionEv+0x3a>
	else
		radio_set_state(STATE_TX);
    1db6:	1c20      	adds	r0, r4, #0
    1db8:	2101      	movs	r1, #1
    1dba:	4b20      	ldr	r3, [pc, #128]	; (1e3c <_ZN8cMxRadio15endTransmissionEv+0xb8>)
    1dbc:	4798      	blx	r3
	ZR_RFTX_LED_ON();
	//if broadcase ,cant need ack
	if(txTmpBuffer[5]==0xff && txTmpBuffer[5]==0xff)
    1dbe:	4b20      	ldr	r3, [pc, #128]	; (1e40 <_ZN8cMxRadio15endTransmissionEv+0xbc>)
    1dc0:	5ce3      	ldrb	r3, [r4, r3]
    1dc2:	2bff      	cmp	r3, #255	; 0xff
    1dc4:	d106      	bne.n	1dd4 <_ZN8cMxRadio15endTransmissionEv+0x50>
		txTmpBuffer[0]=txTmpBuffer[0]&0xdf;
    1dc6:	22fe      	movs	r2, #254	; 0xfe
    1dc8:	32ff      	adds	r2, #255	; 0xff
    1dca:	5ca3      	ldrb	r3, [r4, r2]
    1dcc:	2120      	movs	r1, #32
    1dce:	438b      	bics	r3, r1
    1dd0:	54a3      	strb	r3, [r4, r2]
    1dd2:	e00c      	b.n	1dee <_ZN8cMxRadio15endTransmissionEv+0x6a>
	else
	{
		if(!needack)
    1dd4:	4b1b      	ldr	r3, [pc, #108]	; (1e44 <_ZN8cMxRadio15endTransmissionEv+0xc0>)
    1dd6:	5ce3      	ldrb	r3, [r4, r3]
    1dd8:	2b00      	cmp	r3, #0
    1dda:	d104      	bne.n	1de6 <_ZN8cMxRadio15endTransmissionEv+0x62>
			txTmpBuffer[0] = 0x41;
    1ddc:	2241      	movs	r2, #65	; 0x41
    1dde:	23fe      	movs	r3, #254	; 0xfe
    1de0:	33ff      	adds	r3, #255	; 0xff
    1de2:	54e2      	strb	r2, [r4, r3]
    1de4:	e003      	b.n	1dee <_ZN8cMxRadio15endTransmissionEv+0x6a>
		else
			txTmpBuffer[0] = 0x61; //ack required
    1de6:	2261      	movs	r2, #97	; 0x61
    1de8:	23fe      	movs	r3, #254	; 0xfe
    1dea:	33ff      	adds	r3, #255	; 0xff
    1dec:	54e2      	strb	r2, [r4, r3]
	}
	radio_send_frame(txTmpBufferLength, txTmpBuffer, 0);
    1dee:	239f      	movs	r3, #159	; 0x9f
    1df0:	009b      	lsls	r3, r3, #2
    1df2:	5ce1      	ldrb	r1, [r4, r3]
    1df4:	1c20      	adds	r0, r4, #0
    1df6:	1c22      	adds	r2, r4, #0
    1df8:	32fe      	adds	r2, #254	; 0xfe
    1dfa:	32ff      	adds	r2, #255	; 0xff
    1dfc:	2300      	movs	r3, #0
    1dfe:	4d12      	ldr	r5, [pc, #72]	; (1e48 <_ZN8cMxRadio15endTransmissionEv+0xc4>)
    1e00:	47a8      	blx	r5
#ifdef ZR_TXWAIT_AFTER
	waitTxDone(0xFFFF);
    1e02:	1c20      	adds	r0, r4, #0
    1e04:	490a      	ldr	r1, [pc, #40]	; (1e30 <_ZN8cMxRadio15endTransmissionEv+0xac>)
    1e06:	4b0b      	ldr	r3, [pc, #44]	; (1e34 <_ZN8cMxRadio15endTransmissionEv+0xb0>)
    1e08:	4798      	blx	r3
	if (setautorx)
    1e0a:	4b10      	ldr	r3, [pc, #64]	; (1e4c <_ZN8cMxRadio15endTransmissionEv+0xc8>)
    1e0c:	5ce3      	ldrb	r3, [r4, r3]
    1e0e:	2b00      	cmp	r3, #0
    1e10:	d004      	beq.n	1e1c <_ZN8cMxRadio15endTransmissionEv+0x98>
		radio_set_state(STATE_RXAUTO);
    1e12:	1c20      	adds	r0, r4, #0
    1e14:	2104      	movs	r1, #4
    1e16:	4b09      	ldr	r3, [pc, #36]	; (1e3c <_ZN8cMxRadio15endTransmissionEv+0xb8>)
    1e18:	4798      	blx	r3
    1e1a:	e003      	b.n	1e24 <_ZN8cMxRadio15endTransmissionEv+0xa0>
	else
		radio_set_state(STATE_RX);
    1e1c:	1c20      	adds	r0, r4, #0
    1e1e:	2102      	movs	r1, #2
    1e20:	4b06      	ldr	r3, [pc, #24]	; (1e3c <_ZN8cMxRadio15endTransmissionEv+0xb8>)
    1e22:	4798      	blx	r3
	txIsBusy = 0;
    1e24:	2200      	movs	r2, #0
    1e26:	4b04      	ldr	r3, [pc, #16]	; (1e38 <_ZN8cMxRadio15endTransmissionEv+0xb4>)
    1e28:	54e2      	strb	r2, [r4, r3]
#endif
}
    1e2a:	bd38      	pop	{r3, r4, r5, pc}
    1e2c:	00000281 	.word	0x00000281
    1e30:	0000ffff 	.word	0x0000ffff
    1e34:	00001d59 	.word	0x00001d59
    1e38:	00000282 	.word	0x00000282
    1e3c:	00002189 	.word	0x00002189
    1e40:	00000202 	.word	0x00000202
    1e44:	0000028e 	.word	0x0000028e
    1e48:	000024dd 	.word	0x000024dd
    1e4c:	0000028d 	.word	0x0000028d

00001e50 <_ZN8cMxRadio5writeEh>:
 * If "beginTrasmission" was not used, then it transmits the single byte immediately (slower for multiple bytes)
 *
 * @param c character to be sent
 */
void cMxRadio::write(uint8_t c)
{
    1e50:	b538      	push	{r3, r4, r5, lr}
    1e52:	1c04      	adds	r4, r0, #0
	if (usedBeginTransmission)
    1e54:	4b2d      	ldr	r3, [pc, #180]	; (1f0c <_ZN8cMxRadio5writeEh+0xbc>)
    1e56:	5cc3      	ldrb	r3, [r0, r3]
    1e58:	2b00      	cmp	r3, #0
    1e5a:	d020      	beq.n	1e9e <_ZN8cMxRadio5writeEh+0x4e>
	{
		if (txTmpBufferLength < ZR_TXTMPBUFF_SIZE - 2)
    1e5c:	239f      	movs	r3, #159	; 0x9f
    1e5e:	009b      	lsls	r3, r3, #2
    1e60:	5cc3      	ldrb	r3, [r0, r3]
    1e62:	2b7c      	cmp	r3, #124	; 0x7c
    1e64:	d851      	bhi.n	1f0a <_ZN8cMxRadio5writeEh+0xba>
		{
			txTmpBuffer[txTmpBufferLength] = c;
    1e66:	18c2      	adds	r2, r0, r3
    1e68:	32f9      	adds	r2, #249	; 0xf9
    1e6a:	32ff      	adds	r2, #255	; 0xff
    1e6c:	7151      	strb	r1, [r2, #5]
			txTmpBufferLength++;
    1e6e:	3301      	adds	r3, #1
    1e70:	b2db      	uxtb	r3, r3
    1e72:	229f      	movs	r2, #159	; 0x9f
    1e74:	0092      	lsls	r2, r2, #2
    1e76:	5483      	strb	r3, [r0, r2]

			if (txTmpBufferLength >= ZR_TXTMPBUFF_SIZE - 2)
    1e78:	2b7c      	cmp	r3, #124	; 0x7c
    1e7a:	d946      	bls.n	1f0a <_ZN8cMxRadio5writeEh+0xba>
			{
				// buffer is now full
				// just send it all out so we have more room
				endTransmission();
    1e7c:	4b24      	ldr	r3, [pc, #144]	; (1f10 <_ZN8cMxRadio5writeEh+0xc0>)
    1e7e:	4798      	blx	r3
 * Non-immediate mode sends multiple bytes per frame
 *
 */
void cMxRadio::beginTransmission()
{
	usedBeginTransmission = 1;
    1e80:	2201      	movs	r2, #1
    1e82:	4b22      	ldr	r3, [pc, #136]	; (1f0c <_ZN8cMxRadio5writeEh+0xbc>)
    1e84:	54e2      	strb	r2, [r4, r3]
	txTmpBuffer[5]= 0xFF;
    1e86:	3b83      	subs	r3, #131	; 0x83
    1e88:	3bff      	subs	r3, #255	; 0xff
    1e8a:	4a22      	ldr	r2, [pc, #136]	; (1f14 <_ZN8cMxRadio5writeEh+0xc4>)
    1e8c:	54a3      	strb	r3, [r4, r2]
	txTmpBuffer[6]= 0XFF;
    1e8e:	4a22      	ldr	r2, [pc, #136]	; (1f18 <_ZN8cMxRadio5writeEh+0xc8>)
    1e90:	54a3      	strb	r3, [r4, r2]
	// add frame header
	txTmpBufferLength = HeadSize;
    1e92:	3afb      	subs	r2, #251	; 0xfb
    1e94:	3aff      	subs	r2, #255	; 0xff
    1e96:	337e      	adds	r3, #126	; 0x7e
    1e98:	33ff      	adds	r3, #255	; 0xff
    1e9a:	54e2      	strb	r2, [r4, r3]
    1e9c:	e035      	b.n	1f0a <_ZN8cMxRadio5writeEh+0xba>
			}
		}
	}
	else
	{
		txTmpBuffer[HeadSize] = c; // set payload
    1e9e:	4b1f      	ldr	r3, [pc, #124]	; (1f1c <_ZN8cMxRadio5writeEh+0xcc>)
    1ea0:	54c1      	strb	r1, [r0, r3]
		txTmpBuffer[HeadSize+1] = 0; // empty FCS
    1ea2:	2300      	movs	r3, #0
    1ea4:	4a1e      	ldr	r2, [pc, #120]	; (1f20 <_ZN8cMxRadio5writeEh+0xd0>)
    1ea6:	5483      	strb	r3, [r0, r2]
		txTmpBuffer[HeadSize+2] = 0; // empty FCS
    1ea8:	3201      	adds	r2, #1
    1eaa:	5483      	strb	r3, [r0, r2]

#ifdef ZR_TXWAIT_BEFORE
		waitTxDone(0xFFFF);
    1eac:	491d      	ldr	r1, [pc, #116]	; (1f24 <_ZN8cMxRadio5writeEh+0xd4>)
    1eae:	4b1e      	ldr	r3, [pc, #120]	; (1f28 <_ZN8cMxRadio5writeEh+0xd8>)
    1eb0:	4798      	blx	r3
#endif
		txIsBusy = 1;
    1eb2:	2201      	movs	r2, #1
    1eb4:	4b1d      	ldr	r3, [pc, #116]	; (1f2c <_ZN8cMxRadio5writeEh+0xdc>)
    1eb6:	54e2      	strb	r2, [r4, r3]
		if (setautotx)
    1eb8:	330a      	adds	r3, #10
    1eba:	5ce3      	ldrb	r3, [r4, r3]
    1ebc:	2b00      	cmp	r3, #0
    1ebe:	d004      	beq.n	1eca <_ZN8cMxRadio5writeEh+0x7a>
			radio_set_state(STATE_TXAUTO);
    1ec0:	1c20      	adds	r0, r4, #0
    1ec2:	2103      	movs	r1, #3
    1ec4:	4b1a      	ldr	r3, [pc, #104]	; (1f30 <_ZN8cMxRadio5writeEh+0xe0>)
    1ec6:	4798      	blx	r3
    1ec8:	e003      	b.n	1ed2 <_ZN8cMxRadio5writeEh+0x82>
		else
			radio_set_state(STATE_TX);
    1eca:	1c20      	adds	r0, r4, #0
    1ecc:	2101      	movs	r1, #1
    1ece:	4b18      	ldr	r3, [pc, #96]	; (1f30 <_ZN8cMxRadio5writeEh+0xe0>)
    1ed0:	4798      	blx	r3
		ZR_RFTX_LED_ON();
		radio_send_frame(10, txTmpBuffer, 0);
    1ed2:	1c20      	adds	r0, r4, #0
    1ed4:	210a      	movs	r1, #10
    1ed6:	1c22      	adds	r2, r4, #0
    1ed8:	32fe      	adds	r2, #254	; 0xfe
    1eda:	32ff      	adds	r2, #255	; 0xff
    1edc:	2300      	movs	r3, #0
    1ede:	4d15      	ldr	r5, [pc, #84]	; (1f34 <_ZN8cMxRadio5writeEh+0xe4>)
    1ee0:	47a8      	blx	r5
#ifdef ZR_TXWAIT_AFTER
		waitTxDone(0xFFFF);
    1ee2:	1c20      	adds	r0, r4, #0
    1ee4:	490f      	ldr	r1, [pc, #60]	; (1f24 <_ZN8cMxRadio5writeEh+0xd4>)
    1ee6:	4b10      	ldr	r3, [pc, #64]	; (1f28 <_ZN8cMxRadio5writeEh+0xd8>)
    1ee8:	4798      	blx	r3
		if (setautorx)
    1eea:	4b13      	ldr	r3, [pc, #76]	; (1f38 <_ZN8cMxRadio5writeEh+0xe8>)
    1eec:	5ce3      	ldrb	r3, [r4, r3]
    1eee:	2b00      	cmp	r3, #0
    1ef0:	d004      	beq.n	1efc <_ZN8cMxRadio5writeEh+0xac>
			radio_set_state(STATE_RXAUTO);
    1ef2:	1c20      	adds	r0, r4, #0
    1ef4:	2104      	movs	r1, #4
    1ef6:	4b0e      	ldr	r3, [pc, #56]	; (1f30 <_ZN8cMxRadio5writeEh+0xe0>)
    1ef8:	4798      	blx	r3
    1efa:	e003      	b.n	1f04 <_ZN8cMxRadio5writeEh+0xb4>
		else
			radio_set_state(STATE_RX);
    1efc:	1c20      	adds	r0, r4, #0
    1efe:	2102      	movs	r1, #2
    1f00:	4b0b      	ldr	r3, [pc, #44]	; (1f30 <_ZN8cMxRadio5writeEh+0xe0>)
    1f02:	4798      	blx	r3
		txIsBusy = 0;
    1f04:	2200      	movs	r2, #0
    1f06:	4b09      	ldr	r3, [pc, #36]	; (1f2c <_ZN8cMxRadio5writeEh+0xdc>)
    1f08:	54e2      	strb	r2, [r4, r3]
#endif
	}
}
    1f0a:	bd38      	pop	{r3, r4, r5, pc}
    1f0c:	00000281 	.word	0x00000281
    1f10:	00001d85 	.word	0x00001d85
    1f14:	00000202 	.word	0x00000202
    1f18:	00000203 	.word	0x00000203
    1f1c:	00000206 	.word	0x00000206
    1f20:	00000207 	.word	0x00000207
    1f24:	0000ffff 	.word	0x0000ffff
    1f28:	00001d59 	.word	0x00001d59
    1f2c:	00000282 	.word	0x00000282
    1f30:	00002189 	.word	0x00002189
    1f34:	000024dd 	.word	0x000024dd
    1f38:	0000028d 	.word	0x0000028d

00001f3c <_ZN8cMxRadio5writeEPhh>:
 *
 * @param arr data array to be sent
 * @param len length of data array
 */
void cMxRadio::write(uint8_t* arr, uint8_t len)
{
    1f3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint8_t i;
	for (i = 0; i < len; i++)
    1f3e:	2a00      	cmp	r2, #0
    1f40:	d00c      	beq.n	1f5c <_ZN8cMxRadio5writeEPhh+0x20>
    1f42:	1c06      	adds	r6, r0, #0
    1f44:	1c0c      	adds	r4, r1, #0
    1f46:	1e55      	subs	r5, r2, #1
    1f48:	b2ed      	uxtb	r5, r5
    1f4a:	3501      	adds	r5, #1
    1f4c:	194d      	adds	r5, r1, r5
		write(arr[i]);
    1f4e:	4f04      	ldr	r7, [pc, #16]	; (1f60 <_ZN8cMxRadio5writeEPhh+0x24>)
    1f50:	7821      	ldrb	r1, [r4, #0]
    1f52:	1c30      	adds	r0, r6, #0
    1f54:	47b8      	blx	r7
    1f56:	3401      	adds	r4, #1
 * @param len length of data array
 */
void cMxRadio::write(uint8_t* arr, uint8_t len)
{
	uint8_t i;
	for (i = 0; i < len; i++)
    1f58:	42ac      	cmp	r4, r5
    1f5a:	d1f9      	bne.n	1f50 <_ZN8cMxRadio5writeEPhh+0x14>
		write(arr[i]);
}
    1f5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1f5e:	46c0      	nop			; (mov r8, r8)
    1f60:	00001e51 	.word	0x00001e51

00001f64 <_ZN8cMxRadio23zr_attach_receive_frameEMS_FPhhS0_hahE>:
{
	user_radio_irq = funct;
}

void cMxRadio::zr_attach_receive_frame(uint8_t* (cMxRadio::*funct)(uint8_t, uint8_t*, uint8_t, int8_t, uint8_t))
{
    1f64:	b082      	sub	sp, #8
    1f66:	466b      	mov	r3, sp
    1f68:	9100      	str	r1, [sp, #0]
    1f6a:	9201      	str	r2, [sp, #4]
	user_radio_receive_frame = funct;
    1f6c:	22a6      	movs	r2, #166	; 0xa6
    1f6e:	0092      	lsls	r2, r2, #2
    1f70:	4694      	mov	ip, r2
    1f72:	4460      	add	r0, ip
    1f74:	cb06      	ldmia	r3!, {r1, r2}
    1f76:	c006      	stmia	r0!, {r1, r2}
}
    1f78:	b002      	add	sp, #8
    1f7a:	4770      	bx	lr

00001f7c <_ZN8cMxRadio17zr_attach_tx_doneEMS_Fv15radio_tx_done_tE>:

void cMxRadio::zr_attach_tx_done(void (cMxRadio::*funct)(radio_tx_done_t))
{
    1f7c:	b082      	sub	sp, #8
    1f7e:	466b      	mov	r3, sp
    1f80:	9100      	str	r1, [sp, #0]
    1f82:	9201      	str	r2, [sp, #4]
	user_radio_tx_done = funct;
    1f84:	22a8      	movs	r2, #168	; 0xa8
    1f86:	0092      	lsls	r2, r2, #2
    1f88:	4694      	mov	ip, r2
    1f8a:	4460      	add	r0, ip
    1f8c:	cb06      	ldmia	r3!, {r1, r2}
    1f8e:	c006      	stmia	r0!, {r1, r2}
}
    1f90:	b002      	add	sp, #8
    1f92:	4770      	bx	lr

00001f94 <_ZN8cMxRadio15usr_radio_errorE13radio_error_t>:
void cMxRadio::usr_radio_error(radio_error_t err)
{
    1f94:	b508      	push	{r3, lr}
	if (user_radio_error) user_radio_error(err);
    1f96:	23a4      	movs	r3, #164	; 0xa4
    1f98:	009b      	lsls	r3, r3, #2
    1f9a:	58c3      	ldr	r3, [r0, r3]
    1f9c:	2b00      	cmp	r3, #0
    1f9e:	d001      	beq.n	1fa4 <_ZN8cMxRadio15usr_radio_errorE13radio_error_t+0x10>
    1fa0:	1c08      	adds	r0, r1, #0
    1fa2:	4798      	blx	r3
}
    1fa4:	bd08      	pop	{r3, pc}
    1fa6:	46c0      	nop			; (mov r8, r8)

00001fa8 <_ZN8cMxRadio13usr_radio_irqEh>:

void cMxRadio::usr_radio_irq(uint8_t cause)
{
    1fa8:	b508      	push	{r3, lr}
	if (user_radio_irq) user_radio_irq(cause);
    1faa:	23a5      	movs	r3, #165	; 0xa5
    1fac:	009b      	lsls	r3, r3, #2
    1fae:	58c3      	ldr	r3, [r0, r3]
    1fb0:	2b00      	cmp	r3, #0
    1fb2:	d001      	beq.n	1fb8 <_ZN8cMxRadio13usr_radio_irqEh+0x10>
    1fb4:	1c08      	adds	r0, r1, #0
    1fb6:	4798      	blx	r3
}
    1fb8:	bd08      	pop	{r3, pc}
    1fba:	46c0      	nop			; (mov r8, r8)

00001fbc <_ZN8cMxRadio23usr_radio_receive_frameEhPhhah>:

uint8_t* cMxRadio::usr_radio_receive_frame(uint8_t len, uint8_t *frm, uint8_t lqi, int8_t ed,uint8_t crc_fail)
{
    1fbc:	b5f0      	push	{r4, r5, r6, r7, lr}
    1fbe:	b085      	sub	sp, #20
    1fc0:	9303      	str	r3, [sp, #12]
    1fc2:	ac0a      	add	r4, sp, #40	; 0x28
    1fc4:	2700      	movs	r7, #0
    1fc6:	57e7      	ldrsb	r7, [r4, r7]
    1fc8:	ac0b      	add	r4, sp, #44	; 0x2c
    1fca:	7826      	ldrb	r6, [r4, #0]
	if (user_radio_receive_frame)
    1fcc:	24a6      	movs	r4, #166	; 0xa6
    1fce:	00a4      	lsls	r4, r4, #2
    1fd0:	5905      	ldr	r5, [r0, r4]
    1fd2:	2d00      	cmp	r5, #0
    1fd4:	d105      	bne.n	1fe2 <_ZN8cMxRadio23usr_radio_receive_frameEhPhhah+0x26>
    1fd6:	3404      	adds	r4, #4
    1fd8:	5904      	ldr	r4, [r0, r4]
    1fda:	07e3      	lsls	r3, r4, #31
    1fdc:	d406      	bmi.n	1fec <_ZN8cMxRadio23usr_radio_receive_frameEhPhhah+0x30>
		return (this->*user_radio_receive_frame)(len, frm, lqi,ed, crc_fail);
	else return frm;
    1fde:	1c10      	adds	r0, r2, #0
    1fe0:	e00d      	b.n	1ffe <_ZN8cMxRadio23usr_radio_receive_frameEhPhhah+0x42>
}

uint8_t* cMxRadio::usr_radio_receive_frame(uint8_t len, uint8_t *frm, uint8_t lqi, int8_t ed,uint8_t crc_fail)
{
	if (user_radio_receive_frame)
		return (this->*user_radio_receive_frame)(len, frm, lqi,ed, crc_fail);
    1fe2:	24a7      	movs	r4, #167	; 0xa7
    1fe4:	00a4      	lsls	r4, r4, #2
    1fe6:	5904      	ldr	r4, [r0, r4]
    1fe8:	07e3      	lsls	r3, r4, #31
    1fea:	d502      	bpl.n	1ff2 <_ZN8cMxRadio23usr_radio_receive_frameEhPhhah+0x36>
    1fec:	1063      	asrs	r3, r4, #1
    1fee:	58c3      	ldr	r3, [r0, r3]
    1ff0:	595d      	ldr	r5, [r3, r5]
    1ff2:	9b03      	ldr	r3, [sp, #12]
    1ff4:	1064      	asrs	r4, r4, #1
    1ff6:	1900      	adds	r0, r0, r4
    1ff8:	9700      	str	r7, [sp, #0]
    1ffa:	9601      	str	r6, [sp, #4]
    1ffc:	47a8      	blx	r5
	else return frm;
}
    1ffe:	b005      	add	sp, #20
    2000:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2002:	46c0      	nop			; (mov r8, r8)

00002004 <_ZN8cMxRadio17usr_radio_tx_doneE15radio_tx_done_t>:

void cMxRadio::usr_radio_tx_done(radio_tx_done_t status)
{
    2004:	b510      	push	{r4, lr}
	if (user_radio_tx_done) (this->*user_radio_tx_done)(status);
    2006:	23a8      	movs	r3, #168	; 0xa8
    2008:	009b      	lsls	r3, r3, #2
    200a:	58c2      	ldr	r2, [r0, r3]
    200c:	2a00      	cmp	r2, #0
    200e:	d104      	bne.n	201a <_ZN8cMxRadio17usr_radio_tx_doneE15radio_tx_done_t+0x16>
    2010:	3304      	adds	r3, #4
    2012:	58c3      	ldr	r3, [r0, r3]
    2014:	07dc      	lsls	r4, r3, #31
    2016:	d405      	bmi.n	2024 <_ZN8cMxRadio17usr_radio_tx_doneE15radio_tx_done_t+0x20>
    2018:	e00a      	b.n	2030 <_ZN8cMxRadio17usr_radio_tx_doneE15radio_tx_done_t+0x2c>
    201a:	23a9      	movs	r3, #169	; 0xa9
    201c:	009b      	lsls	r3, r3, #2
    201e:	58c3      	ldr	r3, [r0, r3]
    2020:	07dc      	lsls	r4, r3, #31
    2022:	d502      	bpl.n	202a <_ZN8cMxRadio17usr_radio_tx_doneE15radio_tx_done_t+0x26>
    2024:	105c      	asrs	r4, r3, #1
    2026:	5904      	ldr	r4, [r0, r4]
    2028:	58a2      	ldr	r2, [r4, r2]
    202a:	105b      	asrs	r3, r3, #1
    202c:	18c0      	adds	r0, r0, r3
    202e:	4790      	blx	r2
}
    2030:	bd10      	pop	{r4, pc}
    2032:	46c0      	nop			; (mov r8, r8)

00002034 <_ZN8cMxRadio19radio_receive_frameEv>:
/**
 * @brief Frame reception
 *
 */
void cMxRadio::radio_receive_frame(void)
{
    2034:	b5f0      	push	{r4, r5, r6, r7, lr}
    2036:	b087      	sub	sp, #28
    2038:	1c04      	adds	r4, r0, #0

	uint8_t len, lqi, crc_fail;
	int8_t ed;

	/* @todo add RSSI_BASE_VALUE to get a dBm value */
	ed = (int8_t)trx_reg_read(RG_PHY_ED_LEVEL);
    203a:	2107      	movs	r1, #7
    203c:	4b12      	ldr	r3, [pc, #72]	; (2088 <_ZN8cMxRadio19radio_receive_frameEv+0x54>)
    203e:	4798      	blx	r3
    2040:	9003      	str	r0, [sp, #12]
	len = trx_frame_read(radiostatus.rxframe, radiostatus.rxframesz, &lqi);
    2042:	7c22      	ldrb	r2, [r4, #16]
    2044:	270f      	movs	r7, #15
    2046:	ab02      	add	r3, sp, #8
    2048:	469c      	mov	ip, r3
    204a:	4467      	add	r7, ip
    204c:	1c20      	adds	r0, r4, #0
    204e:	68e1      	ldr	r1, [r4, #12]
    2050:	1c3b      	adds	r3, r7, #0
    2052:	4d0e      	ldr	r5, [pc, #56]	; (208c <_ZN8cMxRadio19radio_receive_frameEv+0x58>)
    2054:	47a8      	blx	r5
    2056:	1c05      	adds	r5, r0, #0
	len &= ~0x80;

#if defined(SR_RX_CRC_VALID)
	crc_fail = trx_bit_read(SR_RX_CRC_VALID) ? 0 : 1;
    2058:	1c20      	adds	r0, r4, #0
    205a:	2106      	movs	r1, #6
    205c:	2280      	movs	r2, #128	; 0x80
    205e:	2307      	movs	r3, #7
    2060:	4e0b      	ldr	r6, [pc, #44]	; (2090 <_ZN8cMxRadio19radio_receive_frameEv+0x5c>)
    2062:	47b0      	blx	r6
		crc = CRC_CCITT_UPDATE(crc, *frm++);
	}
	crc_fail = (crc == 0)? 0: 1;
#endif
radiostatus.rxframe = usr_radio_receive_frame(len, radiostatus.rxframe,
		lqi, ed, crc_fail);
    2064:	217f      	movs	r1, #127	; 0x7f
    2066:	4029      	ands	r1, r5
    2068:	783b      	ldrb	r3, [r7, #0]
    206a:	466a      	mov	r2, sp
    206c:	260c      	movs	r6, #12
    206e:	5796      	ldrsb	r6, [r2, r6]
    2070:	9600      	str	r6, [sp, #0]
	ed = (int8_t)trx_reg_read(RG_PHY_ED_LEVEL);
	len = trx_frame_read(radiostatus.rxframe, radiostatus.rxframesz, &lqi);
	len &= ~0x80;

#if defined(SR_RX_CRC_VALID)
	crc_fail = trx_bit_read(SR_RX_CRC_VALID) ? 0 : 1;
    2072:	4242      	negs	r2, r0
    2074:	4142      	adcs	r2, r0
		crc = CRC_CCITT_UPDATE(crc, *frm++);
	}
	crc_fail = (crc == 0)? 0: 1;
#endif
radiostatus.rxframe = usr_radio_receive_frame(len, radiostatus.rxframe,
		lqi, ed, crc_fail);
    2076:	9201      	str	r2, [sp, #4]
    2078:	1c20      	adds	r0, r4, #0
    207a:	68e2      	ldr	r2, [r4, #12]
    207c:	4d05      	ldr	r5, [pc, #20]	; (2094 <_ZN8cMxRadio19radio_receive_frameEv+0x60>)
    207e:	47a8      	blx	r5
    2080:	60e0      	str	r0, [r4, #12]
}
    2082:	b007      	add	sp, #28
    2084:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2086:	46c0      	nop			; (mov r8, r8)
    2088:	000026b9 	.word	0x000026b9
    208c:	000027f9 	.word	0x000027f9
    2090:	00002725 	.word	0x00002725
    2094:	00001fbd 	.word	0x00001fbd

00002098 <_ZN8cMxRadio10radio_initEPhh>:


/* === external functions ====================================================*/

void cMxRadio::radio_init(uint8_t * rxbuf, uint8_t rxbufsz)
{
    2098:	b530      	push	{r4, r5, lr}
    209a:	b083      	sub	sp, #12
    209c:	1c04      	adds	r4, r0, #0
	trx_regval_t status;
	/* init cpu peripherals and global IRQ enable */
	radiostatus.rxframe = rxbuf;
    209e:	60c1      	str	r1, [r0, #12]
	radiostatus.rxframesz = rxbufsz;
    20a0:	7402      	strb	r2, [r0, #16]
	trx_io_init(1000000);
    20a2:	492f      	ldr	r1, [pc, #188]	; (2160 <_ZN8cMxRadio10radio_initEPhh+0xc8>)
    20a4:	4b2f      	ldr	r3, [pc, #188]	; (2164 <_ZN8cMxRadio10radio_initEPhh+0xcc>)
    20a6:	4798      	blx	r3
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    20a8:	23c4      	movs	r3, #196	; 0xc4
    20aa:	56e3      	ldrsb	r3, [r4, r3]
    20ac:	3301      	adds	r3, #1
    20ae:	d104      	bne.n	20ba <_ZN8cMxRadio10radio_initEPhh+0x22>
    20b0:	482d      	ldr	r0, [pc, #180]	; (2168 <_ZN8cMxRadio10radio_initEPhh+0xd0>)
    20b2:	492e      	ldr	r1, [pc, #184]	; (216c <_ZN8cMxRadio10radio_initEPhh+0xd4>)
    20b4:	2228      	movs	r2, #40	; 0x28
    20b6:	4b2e      	ldr	r3, [pc, #184]	; (2170 <_ZN8cMxRadio10radio_initEPhh+0xd8>)
    20b8:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    20ba:	1c23      	adds	r3, r4, #0
    20bc:	33c4      	adds	r3, #196	; 0xc4
    20be:	68da      	ldr	r2, [r3, #12]
    20c0:	685b      	ldr	r3, [r3, #4]
    20c2:	6013      	str	r3, [r2, #0]
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    20c4:	23e0      	movs	r3, #224	; 0xe0
    20c6:	56e3      	ldrsb	r3, [r4, r3]
    20c8:	3301      	adds	r3, #1
    20ca:	d104      	bne.n	20d6 <_ZN8cMxRadio10radio_initEPhh+0x3e>
    20cc:	4826      	ldr	r0, [pc, #152]	; (2168 <_ZN8cMxRadio10radio_initEPhh+0xd0>)
    20ce:	4927      	ldr	r1, [pc, #156]	; (216c <_ZN8cMxRadio10radio_initEPhh+0xd4>)
    20d0:	2228      	movs	r2, #40	; 0x28
    20d2:	4b27      	ldr	r3, [pc, #156]	; (2170 <_ZN8cMxRadio10radio_initEPhh+0xd8>)
    20d4:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    20d6:	1c23      	adds	r3, r4, #0
    20d8:	33e0      	adds	r3, #224	; 0xe0
    20da:	68da      	ldr	r2, [r3, #12]
    20dc:	685b      	ldr	r3, [r3, #4]
    20de:	6013      	str	r3, [r2, #0]
	/* transceiver initialization */

	reset_pin=0;//TRX_RESET_LOW();
	sleep_pin=0;//TRX_SLPTR_LOW();
	DELAY_US(TRX_RESET_TIME_US);
    20e0:	2006      	movs	r0, #6
    20e2:	4b24      	ldr	r3, [pc, #144]	; (2174 <_ZN8cMxRadio10radio_initEPhh+0xdc>)
    20e4:	4798      	blx	r3
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    20e6:	23c4      	movs	r3, #196	; 0xc4
    20e8:	56e3      	ldrsb	r3, [r4, r3]
    20ea:	3301      	adds	r3, #1
    20ec:	d104      	bne.n	20f8 <_ZN8cMxRadio10radio_initEPhh+0x60>
    20ee:	481e      	ldr	r0, [pc, #120]	; (2168 <_ZN8cMxRadio10radio_initEPhh+0xd0>)
    20f0:	491e      	ldr	r1, [pc, #120]	; (216c <_ZN8cMxRadio10radio_initEPhh+0xd4>)
    20f2:	2228      	movs	r2, #40	; 0x28
    20f4:	4b1e      	ldr	r3, [pc, #120]	; (2170 <_ZN8cMxRadio10radio_initEPhh+0xd8>)
    20f6:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    20f8:	1c23      	adds	r3, r4, #0
    20fa:	33c4      	adds	r3, #196	; 0xc4
    20fc:	691a      	ldr	r2, [r3, #16]
    20fe:	685b      	ldr	r3, [r3, #4]
    2100:	6013      	str	r3, [r2, #0]


//	if (trx_reg_read(RG_MAN_ID_0)==31) //atmel
//		m_myled=0;
	/* disable IRQ and clear any pending IRQs */
	trx_reg_write(RG_IRQ_MASK, 0);
    2102:	1c20      	adds	r0, r4, #0
    2104:	210e      	movs	r1, #14
    2106:	2200      	movs	r2, #0
    2108:	4b1b      	ldr	r3, [pc, #108]	; (2178 <_ZN8cMxRadio10radio_initEPhh+0xe0>)
    210a:	4798      	blx	r3

	trx_reg_read(RG_IRQ_STATUS);
    210c:	1c20      	adds	r0, r4, #0
    210e:	210f      	movs	r1, #15
    2110:	4b1a      	ldr	r3, [pc, #104]	; (217c <_ZN8cMxRadio10radio_initEPhh+0xe4>)
    2112:	4798      	blx	r3
	DELAY_US(510);
#endif
	trx_reg_write(RG_TRX_STATE, CMD_FORCE_TRX_OFF);
	DELAY_US(510);
#else
	trx_bit_write(SR_TRX_CMD, CMD_TRX_OFF);
    2114:	2308      	movs	r3, #8
    2116:	9300      	str	r3, [sp, #0]
    2118:	1c20      	adds	r0, r4, #0
    211a:	2102      	movs	r1, #2
    211c:	221f      	movs	r2, #31
    211e:	2300      	movs	r3, #0
    2120:	4d17      	ldr	r5, [pc, #92]	; (2180 <_ZN8cMxRadio10radio_initEPhh+0xe8>)
    2122:	47a8      	blx	r5
	DELAY_US(510);
    2124:	20ff      	movs	r0, #255	; 0xff
    2126:	0040      	lsls	r0, r0, #1
    2128:	4b12      	ldr	r3, [pc, #72]	; (2174 <_ZN8cMxRadio10radio_initEPhh+0xdc>)
    212a:	4798      	blx	r3
#endif

	do
	{
		status = trx_bit_read(SR_TRX_STATUS);
    212c:	4d15      	ldr	r5, [pc, #84]	; (2184 <_ZN8cMxRadio10radio_initEPhh+0xec>)
    212e:	1c20      	adds	r0, r4, #0
    2130:	2101      	movs	r1, #1
    2132:	221f      	movs	r2, #31
    2134:	2300      	movs	r3, #0
    2136:	47a8      	blx	r5
#else
	trx_bit_write(SR_TRX_CMD, CMD_TRX_OFF);
	DELAY_US(510);
#endif

	do
    2138:	2808      	cmp	r0, #8
    213a:	d1f8      	bne.n	212e <_ZN8cMxRadio10radio_initEPhh+0x96>
	{
		status = trx_bit_read(SR_TRX_STATUS);
	}
	while (status != TRX_OFF);
	trx_bit_write(SR_TX_AUTO_CRC_ON, 1);
    213c:	2301      	movs	r3, #1
    213e:	9300      	str	r3, [sp, #0]
    2140:	1c20      	adds	r0, r4, #0
    2142:	2104      	movs	r1, #4
    2144:	2220      	movs	r2, #32
    2146:	3304      	adds	r3, #4
    2148:	4d0d      	ldr	r5, [pc, #52]	; (2180 <_ZN8cMxRadio10radio_initEPhh+0xe8>)
    214a:	47a8      	blx	r5
	trx_reg_write(RG_IRQ_MASK, TRX_IRQ_RX_START | TRX_IRQ_TRX_END);
    214c:	1c20      	adds	r0, r4, #0
    214e:	210e      	movs	r1, #14
    2150:	220c      	movs	r2, #12
    2152:	4b09      	ldr	r3, [pc, #36]	; (2178 <_ZN8cMxRadio10radio_initEPhh+0xe0>)
    2154:	4798      	blx	r3

	radiostatus.state = STATE_OFF;
    2156:	2300      	movs	r3, #0
    2158:	71e3      	strb	r3, [r4, #7]
	radiostatus.idle_state = STATE_OFF;
    215a:	7223      	strb	r3, [r4, #8]
}
    215c:	b003      	add	sp, #12
    215e:	bd30      	pop	{r4, r5, pc}
    2160:	000f4240 	.word	0x000f4240
    2164:	000025b1 	.word	0x000025b1
    2168:	0000d34c 	.word	0x0000d34c
    216c:	0000d364 	.word	0x0000d364
    2170:	00004709 	.word	0x00004709
    2174:	000047e9 	.word	0x000047e9
    2178:	00002651 	.word	0x00002651
    217c:	000026b9 	.word	0x000026b9
    2180:	0000273d 	.word	0x0000273d
    2184:	00002725 	.word	0x00002725

00002188 <_ZN8cMxRadio15radio_set_stateEh>:
	trx_bit_write(SR_TRX_CMD, CMD_FORCE_TRX_OFF);
	radio_set_state(state);
}

void cMxRadio::radio_set_state(volatile radio_state_t state)
{
    2188:	b5f0      	push	{r4, r5, r6, r7, lr}
    218a:	464f      	mov	r7, r9
    218c:	b480      	push	{r7}
    218e:	b086      	sub	sp, #24
    2190:	9002      	str	r0, [sp, #8]
    2192:	230f      	movs	r3, #15
    2194:	446b      	add	r3, sp
    2196:	7019      	strb	r1, [r3, #0]
	volatile trx_regval_t cmd, expstatus, currstatus;
	uint8_t retries;
	bool do_sleep = false;

	switch(state)
    2198:	781b      	ldrb	r3, [r3, #0]
    219a:	b2db      	uxtb	r3, r3
    219c:	2b05      	cmp	r3, #5
    219e:	d83b      	bhi.n	2218 <_ZN8cMxRadio15radio_set_stateEh+0x90>
    21a0:	009b      	lsls	r3, r3, #2
    21a2:	4a65      	ldr	r2, [pc, #404]	; (2338 <_ZN8cMxRadio15radio_set_stateEh+0x1b0>)
    21a4:	58d3      	ldr	r3, [r2, r3]
    21a6:	469f      	mov	pc, r3
		TRX_TX_PA_DI();
#endif
#ifdef TRX_RX_LNA_EI
		TRX_RX_LNA_DI();
#endif
		expstatus = TRX_OFF;
    21a8:	2308      	movs	r3, #8
    21aa:	2216      	movs	r2, #22
    21ac:	446a      	add	r2, sp
    21ae:	7013      	strb	r3, [r2, #0]
		cmd = CMD_TRX_OFF;
    21b0:	2215      	movs	r2, #21
    21b2:	446a      	add	r2, sp
    21b4:	7013      	strb	r3, [r2, #0]
		break;
    21b6:	e0b4      	b.n	2322 <_ZN8cMxRadio15radio_set_stateEh+0x19a>
		if (radiostatus.rx_lna)
		{
			TRX_RX_LNA_EI();
		}
#endif
expstatus = RX_ON;
    21b8:	2306      	movs	r3, #6
    21ba:	2216      	movs	r2, #22
    21bc:	446a      	add	r2, sp
    21be:	7013      	strb	r3, [r2, #0]
cmd = CMD_RX_ON;
    21c0:	2215      	movs	r2, #21
    21c2:	446a      	add	r2, sp
    21c4:	7013      	strb	r3, [r2, #0]
break;
    21c6:	e0ac      	b.n	2322 <_ZN8cMxRadio15radio_set_stateEh+0x19a>

	case STATE_TX:
		expstatus = PLL_ON;
    21c8:	2309      	movs	r3, #9
    21ca:	2216      	movs	r2, #22
    21cc:	446a      	add	r2, sp
    21ce:	7013      	strb	r3, [r2, #0]
		cmd = CMD_PLL_ON;
    21d0:	2215      	movs	r2, #21
    21d2:	446a      	add	r2, sp
    21d4:	7013      	strb	r3, [r2, #0]
		break;
    21d6:	e0a4      	b.n	2322 <_ZN8cMxRadio15radio_set_stateEh+0x19a>
if (radiostatus.rx_lna)
{
	TRX_RX_LNA_EI();
}
#endif
expstatus = RX_AACK_ON;
    21d8:	2316      	movs	r3, #22
    21da:	2216      	movs	r2, #22
    21dc:	446a      	add	r2, sp
    21de:	7013      	strb	r3, [r2, #0]
cmd = CMD_RX_AACK_ON;
    21e0:	2215      	movs	r2, #21
    21e2:	446a      	add	r2, sp
    21e4:	7013      	strb	r3, [r2, #0]
break;
    21e6:	e09c      	b.n	2322 <_ZN8cMxRadio15radio_set_stateEh+0x19a>

	case STATE_TXAUTO:
		expstatus = TX_ARET_ON;
    21e8:	2319      	movs	r3, #25
    21ea:	2216      	movs	r2, #22
    21ec:	446a      	add	r2, sp
    21ee:	7013      	strb	r3, [r2, #0]
		cmd = CMD_TX_ARET_ON;
    21f0:	2215      	movs	r2, #21
    21f2:	446a      	add	r2, sp
    21f4:	7013      	strb	r3, [r2, #0]
		break;
    21f6:	e094      	b.n	2322 <_ZN8cMxRadio15radio_set_stateEh+0x19a>
		TRX_TX_PA_DI();
#endif
#ifdef TRX_RX_LNA_EI
		TRX_RX_LNA_DI();
#endif
		expstatus = TRX_OFF;
    21f8:	2208      	movs	r2, #8
    21fa:	2316      	movs	r3, #22
    21fc:	446b      	add	r3, sp
    21fe:	701a      	strb	r2, [r3, #0]
		cmd = CMD_FORCE_TRX_OFF;
    2200:	3a05      	subs	r2, #5
    2202:	2315      	movs	r3, #21
    2204:	446b      	add	r3, sp
    2206:	701a      	strb	r2, [r3, #0]
		cmd = CMD_TRX_OFF;
		break;

	}

	if (STATE_SLEEP == radiostatus.state)
    2208:	9b02      	ldr	r3, [sp, #8]
    220a:	79db      	ldrb	r3, [r3, #7]
    220c:	2b05      	cmp	r3, #5
    220e:	d100      	bne.n	2212 <_ZN8cMxRadio15radio_set_stateEh+0x8a>
    2210:	e08e      	b.n	2330 <_ZN8cMxRadio15radio_set_stateEh+0x1a8>
#ifdef TRX_RX_LNA_EI
		TRX_RX_LNA_DI();
#endif
		expstatus = TRX_OFF;
		cmd = CMD_FORCE_TRX_OFF;
		do_sleep = true;
    2212:	2301      	movs	r3, #1
    2214:	4699      	mov	r9, r3
    2216:	e03d      	b.n	2294 <_ZN8cMxRadio15radio_set_stateEh+0x10c>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    2218:	9802      	ldr	r0, [sp, #8]
    221a:	2104      	movs	r1, #4
    221c:	4b47      	ldr	r3, [pc, #284]	; (233c <_ZN8cMxRadio15radio_set_stateEh+0x1b4>)
    221e:	4798      	blx	r3
		do_sleep = true;
		break;

	default:
		radio_error(GENERAL_ERROR);
		expstatus = TRX_OFF;
    2220:	2308      	movs	r3, #8
    2222:	2216      	movs	r2, #22
    2224:	446a      	add	r2, sp
    2226:	7013      	strb	r3, [r2, #0]
		cmd = CMD_TRX_OFF;
    2228:	2215      	movs	r2, #21
    222a:	446a      	add	r2, sp
    222c:	7013      	strb	r3, [r2, #0]
		break;
    222e:	e078      	b.n	2322 <_ZN8cMxRadio15radio_set_stateEh+0x19a>
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    2230:	23e0      	movs	r3, #224	; 0xe0
    2232:	9a02      	ldr	r2, [sp, #8]
    2234:	56d3      	ldrsb	r3, [r2, r3]
    2236:	3301      	adds	r3, #1
    2238:	d104      	bne.n	2244 <_ZN8cMxRadio15radio_set_stateEh+0xbc>
    223a:	4841      	ldr	r0, [pc, #260]	; (2340 <_ZN8cMxRadio15radio_set_stateEh+0x1b8>)
    223c:	4941      	ldr	r1, [pc, #260]	; (2344 <_ZN8cMxRadio15radio_set_stateEh+0x1bc>)
    223e:	2228      	movs	r2, #40	; 0x28
    2240:	4b41      	ldr	r3, [pc, #260]	; (2348 <_ZN8cMxRadio15radio_set_stateEh+0x1c0>)
    2242:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    2244:	9b02      	ldr	r3, [sp, #8]
    2246:	33e0      	adds	r3, #224	; 0xe0
    2248:	68da      	ldr	r2, [r3, #12]
    224a:	685b      	ldr	r3, [r3, #4]
    224c:	6013      	str	r3, [r2, #0]
		 * be polled.  The state reads as 0b0011111 ("state transition
		 * in progress") while the transceiver is still in its startup
		 * phase, which does not match any of the "expstatus" values,
		 * so polling just continues.
		 */
		DELAY_US(500);
    224e:	20fa      	movs	r0, #250	; 0xfa
    2250:	0040      	lsls	r0, r0, #1
    2252:	4b3e      	ldr	r3, [pc, #248]	; (234c <_ZN8cMxRadio15radio_set_stateEh+0x1c4>)
    2254:	4798      	blx	r3
    2256:	2464      	movs	r4, #100	; 0x64
		 * to be enough under all circumstances.
		 */
		retries = 100;
		do
		{
			currstatus = trx_bit_read(SR_TRX_STATUS);
    2258:	4f3d      	ldr	r7, [pc, #244]	; (2350 <_ZN8cMxRadio15radio_set_stateEh+0x1c8>)
    225a:	2517      	movs	r5, #23
    225c:	446d      	add	r5, sp
			 */
			if (TRX_OFF == currstatus)
			{
				break;
			}
			DELAY_US(50);
    225e:	4e3b      	ldr	r6, [pc, #236]	; (234c <_ZN8cMxRadio15radio_set_stateEh+0x1c4>)
		 * to be enough under all circumstances.
		 */
		retries = 100;
		do
		{
			currstatus = trx_bit_read(SR_TRX_STATUS);
    2260:	9802      	ldr	r0, [sp, #8]
    2262:	2101      	movs	r1, #1
    2264:	221f      	movs	r2, #31
    2266:	2300      	movs	r3, #0
    2268:	47b8      	blx	r7
    226a:	7028      	strb	r0, [r5, #0]
			/*
			 * Sleep could only be entered from TRX_OFF, so that's
			 * what is expected again.
			 */
			if (TRX_OFF == currstatus)
    226c:	782b      	ldrb	r3, [r5, #0]
    226e:	2b08      	cmp	r3, #8
    2270:	d005      	beq.n	227e <_ZN8cMxRadio15radio_set_stateEh+0xf6>
			{
				break;
			}
			DELAY_US(50);
    2272:	2032      	movs	r0, #50	; 0x32
    2274:	47b0      	blx	r6
    2276:	3c01      	subs	r4, #1
    2278:	b2e4      	uxtb	r4, r4
		 * to be charged by the voltage regulator.  Give the crystal
		 * oscillator some time to start up.  5 ms (100 * 50 us) ought
		 * to be enough under all circumstances.
		 */
		retries = 100;
		do
    227a:	2c00      	cmp	r4, #0
    227c:	d1f0      	bne.n	2260 <_ZN8cMxRadio15radio_set_stateEh+0xd8>
			}
			DELAY_US(50);
		}
		while (--retries);

		if (currstatus != TRX_OFF)
    227e:	2317      	movs	r3, #23
    2280:	446b      	add	r3, sp
    2282:	781b      	ldrb	r3, [r3, #0]
    2284:	2200      	movs	r2, #0
    2286:	4691      	mov	r9, r2
    2288:	2b08      	cmp	r3, #8
    228a:	d003      	beq.n	2294 <_ZN8cMxRadio15radio_set_stateEh+0x10c>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    228c:	9802      	ldr	r0, [sp, #8]
    228e:	2101      	movs	r1, #1
    2290:	4b2a      	ldr	r3, [pc, #168]	; (233c <_ZN8cMxRadio15radio_set_stateEh+0x1b4>)
    2292:	4798      	blx	r3
		{
			/* radio didn't wake up */
			radio_error(STATE_SET_FAILED);
		}
	}
	trx_bit_write(SR_TRX_CMD, cmd);
    2294:	2315      	movs	r3, #21
    2296:	446b      	add	r3, sp
    2298:	781b      	ldrb	r3, [r3, #0]
    229a:	9300      	str	r3, [sp, #0]
    229c:	9802      	ldr	r0, [sp, #8]
    229e:	2102      	movs	r1, #2
    22a0:	221f      	movs	r2, #31
    22a2:	2300      	movs	r3, #0
    22a4:	4c2b      	ldr	r4, [pc, #172]	; (2354 <_ZN8cMxRadio15radio_set_stateEh+0x1cc>)
    22a6:	47a0      	blx	r4
    22a8:	248c      	movs	r4, #140	; 0x8c

	retries = 140;              /* enough to await an ongoing frame
	 * reception */
	do
	{
		currstatus = trx_bit_read(SR_TRX_STATUS);
    22aa:	4f29      	ldr	r7, [pc, #164]	; (2350 <_ZN8cMxRadio15radio_set_stateEh+0x1c8>)
    22ac:	2517      	movs	r5, #23
    22ae:	446d      	add	r5, sp
		if (expstatus == currstatus)
		{
			break;
		}
		/** @todo must wait longer for 790/868/900 MHz radios */
		DELAY_US(32);
    22b0:	4e26      	ldr	r6, [pc, #152]	; (234c <_ZN8cMxRadio15radio_set_stateEh+0x1c4>)

	retries = 140;              /* enough to await an ongoing frame
	 * reception */
	do
	{
		currstatus = trx_bit_read(SR_TRX_STATUS);
    22b2:	9802      	ldr	r0, [sp, #8]
    22b4:	2101      	movs	r1, #1
    22b6:	221f      	movs	r2, #31
    22b8:	2300      	movs	r3, #0
    22ba:	47b8      	blx	r7
    22bc:	7028      	strb	r0, [r5, #0]
		if (expstatus == currstatus)
    22be:	2316      	movs	r3, #22
    22c0:	446b      	add	r3, sp
    22c2:	781b      	ldrb	r3, [r3, #0]
    22c4:	782a      	ldrb	r2, [r5, #0]
    22c6:	b2db      	uxtb	r3, r3
    22c8:	4293      	cmp	r3, r2
    22ca:	d005      	beq.n	22d8 <_ZN8cMxRadio15radio_set_stateEh+0x150>
		{
			break;
		}
		/** @todo must wait longer for 790/868/900 MHz radios */
		DELAY_US(32);
    22cc:	2020      	movs	r0, #32
    22ce:	47b0      	blx	r6
    22d0:	3c01      	subs	r4, #1
    22d2:	b2e4      	uxtb	r4, r4
	}
	trx_bit_write(SR_TRX_CMD, cmd);

	retries = 140;              /* enough to await an ongoing frame
	 * reception */
	do
    22d4:	2c00      	cmp	r4, #0
    22d6:	d1ec      	bne.n	22b2 <_ZN8cMxRadio15radio_set_stateEh+0x12a>
		/** @todo must wait longer for 790/868/900 MHz radios */
		DELAY_US(32);
	}
	while (--retries);

	if (expstatus != currstatus)
    22d8:	2316      	movs	r3, #22
    22da:	446b      	add	r3, sp
    22dc:	781b      	ldrb	r3, [r3, #0]
    22de:	2217      	movs	r2, #23
    22e0:	446a      	add	r2, sp
    22e2:	7812      	ldrb	r2, [r2, #0]
    22e4:	b2db      	uxtb	r3, r3
    22e6:	4293      	cmp	r3, r2
    22e8:	d003      	beq.n	22f2 <_ZN8cMxRadio15radio_set_stateEh+0x16a>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    22ea:	9802      	ldr	r0, [sp, #8]
    22ec:	2101      	movs	r1, #1
    22ee:	4b13      	ldr	r3, [pc, #76]	; (233c <_ZN8cMxRadio15radio_set_stateEh+0x1b4>)
    22f0:	4798      	blx	r3
	if (expstatus != currstatus)
	{
		radio_error(STATE_SET_FAILED);
	}

	if (do_sleep)
    22f2:	464b      	mov	r3, r9
    22f4:	2b00      	cmp	r3, #0
    22f6:	d00e      	beq.n	2316 <_ZN8cMxRadio15radio_set_stateEh+0x18e>
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    22f8:	23e0      	movs	r3, #224	; 0xe0
    22fa:	9a02      	ldr	r2, [sp, #8]
    22fc:	56d3      	ldrsb	r3, [r2, r3]
    22fe:	3301      	adds	r3, #1
    2300:	d104      	bne.n	230c <_ZN8cMxRadio15radio_set_stateEh+0x184>
    2302:	480f      	ldr	r0, [pc, #60]	; (2340 <_ZN8cMxRadio15radio_set_stateEh+0x1b8>)
    2304:	490f      	ldr	r1, [pc, #60]	; (2344 <_ZN8cMxRadio15radio_set_stateEh+0x1bc>)
    2306:	2228      	movs	r2, #40	; 0x28
    2308:	4b0f      	ldr	r3, [pc, #60]	; (2348 <_ZN8cMxRadio15radio_set_stateEh+0x1c0>)
    230a:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    230c:	9b02      	ldr	r3, [sp, #8]
    230e:	33e0      	adds	r3, #224	; 0xe0
    2310:	691a      	ldr	r2, [r3, #16]
    2312:	685b      	ldr	r3, [r3, #4]
    2314:	6013      	str	r3, [r2, #0]
	{
		sleep_pin=1;//TRX_SLPTR_HIGH();
	}

	radiostatus.state = state;
    2316:	230f      	movs	r3, #15
    2318:	446b      	add	r3, sp
    231a:	781b      	ldrb	r3, [r3, #0]
    231c:	9a02      	ldr	r2, [sp, #8]
    231e:	71d3      	strb	r3, [r2, #7]
    2320:	e006      	b.n	2330 <_ZN8cMxRadio15radio_set_stateEh+0x1a8>
		cmd = CMD_TRX_OFF;
		break;

	}

	if (STATE_SLEEP == radiostatus.state)
    2322:	9b02      	ldr	r3, [sp, #8]
    2324:	79db      	ldrb	r3, [r3, #7]
    2326:	2b05      	cmp	r3, #5
    2328:	d082      	beq.n	2230 <_ZN8cMxRadio15radio_set_stateEh+0xa8>
    232a:	2300      	movs	r3, #0
    232c:	4699      	mov	r9, r3
    232e:	e7b1      	b.n	2294 <_ZN8cMxRadio15radio_set_stateEh+0x10c>
	{
		sleep_pin=1;//TRX_SLPTR_HIGH();
	}

	radiostatus.state = state;
}
    2330:	b006      	add	sp, #24
    2332:	bc04      	pop	{r2}
    2334:	4691      	mov	r9, r2
    2336:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2338:	0000d4f0 	.word	0x0000d4f0
    233c:	00001f95 	.word	0x00001f95
    2340:	0000d34c 	.word	0x0000d34c
    2344:	0000d364 	.word	0x0000d364
    2348:	00004709 	.word	0x00004709
    234c:	000047e9 	.word	0x000047e9
    2350:	00002725 	.word	0x00002725
    2354:	0000273d 	.word	0x0000273d

00002358 <_ZN8cMxRadio17radio_irq_handlerEh>:
 *
 * @parm cause  value of the interrupt status register
 *
 */
void cMxRadio::radio_irq_handler(uint8_t cause)
{
    2358:	b570      	push	{r4, r5, r6, lr}
    235a:	1c04      	adds	r4, r0, #0
    235c:	1c0d      	adds	r5, r1, #0
	if (cause & TRX_IRQ_TRX_END)
    235e:	070b      	lsls	r3, r1, #28
    2360:	d52b      	bpl.n	23ba <_ZN8cMxRadio17radio_irq_handlerEh+0x62>
	{
		if (STATE_RX == radiostatus.state ||
    2362:	79c3      	ldrb	r3, [r0, #7]
    2364:	1e99      	subs	r1, r3, #2
    2366:	22fd      	movs	r2, #253	; 0xfd
    2368:	4211      	tst	r1, r2
    236a:	d102      	bne.n	2372 <_ZN8cMxRadio17radio_irq_handlerEh+0x1a>
				STATE_RXAUTO == radiostatus.state)
		{
			radio_receive_frame();
    236c:	4b15      	ldr	r3, [pc, #84]	; (23c4 <_ZN8cMxRadio17radio_irq_handlerEh+0x6c>)
    236e:	4798      	blx	r3
    2370:	e023      	b.n	23ba <_ZN8cMxRadio17radio_irq_handlerEh+0x62>
		}
		else if (STATE_TX == radiostatus.state)
    2372:	2b01      	cmp	r3, #1
    2374:	d107      	bne.n	2386 <_ZN8cMxRadio17radio_irq_handlerEh+0x2e>
		{
#ifdef TRX_TX_PA_EI
TRX_TX_PA_DI();
#endif
usr_radio_tx_done(TX_OK);
    2376:	2100      	movs	r1, #0
    2378:	4b13      	ldr	r3, [pc, #76]	; (23c8 <_ZN8cMxRadio17radio_irq_handlerEh+0x70>)
    237a:	4798      	blx	r3
radio_set_state(radiostatus.idle_state);
    237c:	7a21      	ldrb	r1, [r4, #8]
    237e:	1c20      	adds	r0, r4, #0
    2380:	4b12      	ldr	r3, [pc, #72]	; (23cc <_ZN8cMxRadio17radio_irq_handlerEh+0x74>)
    2382:	4798      	blx	r3
    2384:	e019      	b.n	23ba <_ZN8cMxRadio17radio_irq_handlerEh+0x62>
		}
		else if (STATE_TXAUTO == radiostatus.state)
    2386:	2b03      	cmp	r3, #3
    2388:	d117      	bne.n	23ba <_ZN8cMxRadio17radio_irq_handlerEh+0x62>
		{
#ifdef TRX_TX_PA_EI
			TRX_TX_PA_DI();
#endif
			uint8_t trac_status = trx_bit_read(SR_TRAC_STATUS);
    238a:	2102      	movs	r1, #2
    238c:	22e0      	movs	r2, #224	; 0xe0
    238e:	3302      	adds	r3, #2
    2390:	4e0f      	ldr	r6, [pc, #60]	; (23d0 <_ZN8cMxRadio17radio_irq_handlerEh+0x78>)
    2392:	47b0      	blx	r6
			radio_tx_done_t result;
			switch (trac_status)
    2394:	2803      	cmp	r0, #3
    2396:	d006      	beq.n	23a6 <_ZN8cMxRadio17radio_irq_handlerEh+0x4e>
    2398:	d307      	bcc.n	23aa <_ZN8cMxRadio17radio_irq_handlerEh+0x52>
			case TRAC_NO_ACK:
				result = TX_NO_ACK;
				break;

			default:
				result = TX_FAIL;
    239a:	3805      	subs	r0, #5
    239c:	4243      	negs	r3, r0
    239e:	4143      	adcs	r3, r0
    23a0:	2103      	movs	r1, #3
    23a2:	1ac9      	subs	r1, r1, r3
    23a4:	e002      	b.n	23ac <_ZN8cMxRadio17radio_irq_handlerEh+0x54>
#endif
				result = TX_OK;
				break;

			case TRAC_CHANNEL_ACCESS_FAILURE:
				result = TX_CCA_FAIL;
    23a6:	2101      	movs	r1, #1
    23a8:	e000      	b.n	23ac <_ZN8cMxRadio17radio_irq_handlerEh+0x54>
			case TRAC_SUCCESS_DATA_PENDING:
#endif
#if defined TRAC_SUCCESS_WAIT_FOR_ACK
			case TRAC_SUCCESS_WAIT_FOR_ACK:
#endif
				result = TX_OK;
    23aa:	2100      	movs	r1, #0
				break;

			default:
				result = TX_FAIL;
			}
			usr_radio_tx_done(result);
    23ac:	1c20      	adds	r0, r4, #0
    23ae:	4b06      	ldr	r3, [pc, #24]	; (23c8 <_ZN8cMxRadio17radio_irq_handlerEh+0x70>)
    23b0:	4798      	blx	r3
			radio_set_state(radiostatus.idle_state);
    23b2:	7a21      	ldrb	r1, [r4, #8]
    23b4:	1c20      	adds	r0, r4, #0
    23b6:	4b05      	ldr	r3, [pc, #20]	; (23cc <_ZN8cMxRadio17radio_irq_handlerEh+0x74>)
    23b8:	4798      	blx	r3
		}
	}
	usr_radio_irq(cause);
    23ba:	1c20      	adds	r0, r4, #0
    23bc:	1c29      	adds	r1, r5, #0
    23be:	4b05      	ldr	r3, [pc, #20]	; (23d4 <_ZN8cMxRadio17radio_irq_handlerEh+0x7c>)
    23c0:	4798      	blx	r3
}
    23c2:	bd70      	pop	{r4, r5, r6, pc}
    23c4:	00002035 	.word	0x00002035
    23c8:	00002005 	.word	0x00002005
    23cc:	00002189 	.word	0x00002189
    23d0:	00002725 	.word	0x00002725
    23d4:	00001fa9 	.word	0x00001fa9

000023d8 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t>:

	radiostatus.state = state;
}

void cMxRadio::radio_set_param(radio_attribute_t attr, radio_param_t parm)
{
    23d8:	b5f0      	push	{r4, r5, r6, r7, lr}
    23da:	4647      	mov	r7, r8
    23dc:	b480      	push	{r7}
    23de:	b082      	sub	sp, #8
    23e0:	1c05      	adds	r5, r0, #0
	switch (attr)
    23e2:	2908      	cmp	r1, #8
    23e4:	d864      	bhi.n	24b0 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xd8>
    23e6:	0089      	lsls	r1, r1, #2
    23e8:	4b35      	ldr	r3, [pc, #212]	; (24c0 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xe8>)
    23ea:	585b      	ldr	r3, [r3, r1]
    23ec:	469f      	mov	pc, r3
	{
	case phyCurrentChannel:
		if (((int)parm.channel >= TRX_MIN_CHANNEL) &&
    23ee:	b2d4      	uxtb	r4, r2
    23f0:	1c23      	adds	r3, r4, #0
    23f2:	3b0b      	subs	r3, #11
    23f4:	2b0f      	cmp	r3, #15
    23f6:	d807      	bhi.n	2408 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0x30>
		{
#ifdef CHINABAND
			trx_reg_write(RG_CC_CTRL_1, CCBAND);
			trx_reg_write(RG_CC_CTRL_0, parm.channel*2+CCNUMBER);
#else
			trx_bit_write(SR_CHANNEL, parm.channel);
    23f8:	9400      	str	r4, [sp, #0]
    23fa:	2108      	movs	r1, #8
    23fc:	221f      	movs	r2, #31
    23fe:	2300      	movs	r3, #0
    2400:	4e30      	ldr	r6, [pc, #192]	; (24c4 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xec>)
    2402:	47b0      	blx	r6
#endif
			radiostatus.channel = parm.channel;
    2404:	712c      	strb	r4, [r5, #4]
    2406:	e056      	b.n	24b6 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    2408:	2102      	movs	r1, #2
    240a:	4b2f      	ldr	r3, [pc, #188]	; (24c8 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xf0>)
    240c:	4798      	blx	r3
    240e:	e052      	b.n	24b6 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
		{
			radio_error(SET_PARM_FAILED);
		}
#endif//chinaband
#else
		if (parm.tx_pwr >= -17 && parm.tx_pwr <= 3)
    2410:	b2d2      	uxtb	r2, r2
    2412:	1c13      	adds	r3, r2, #0
    2414:	3311      	adds	r3, #17
    2416:	b2db      	uxtb	r3, r3
    2418:	2b14      	cmp	r3, #20
    241a:	d809      	bhi.n	2430 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0x58>
					0x06,                         /* 0 dBm */
					0x04,                         /* 1 dBm */
					0x02,                         /* 2 dBm */
					0x00                          /* 3 dBm */
			};
			radiostatus.tx_pwr = parm.tx_pwr;
    241c:	7142      	strb	r2, [r0, #5]
			uint8_t idx = parm.tx_pwr + 17;
			uint8_t pwrval = pwrtable[idx];
    241e:	4a2b      	ldr	r2, [pc, #172]	; (24cc <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xf4>)
			trx_bit_write(SR_TX_PWR, pwrval);
    2420:	5cd3      	ldrb	r3, [r2, r3]
    2422:	9300      	str	r3, [sp, #0]
    2424:	2105      	movs	r1, #5
    2426:	220f      	movs	r2, #15
    2428:	2300      	movs	r3, #0
    242a:	4c26      	ldr	r4, [pc, #152]	; (24c4 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xec>)
    242c:	47a0      	blx	r4
    242e:	e042      	b.n	24b6 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    2430:	2102      	movs	r1, #2
    2432:	4b25      	ldr	r3, [pc, #148]	; (24c8 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xf0>)
    2434:	4798      	blx	r3
    2436:	e03e      	b.n	24b6 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
		}

#endif//rf212
		break;
	case phyCCAMode:
		if (parm.cca_mode <= 3)
    2438:	b2d2      	uxtb	r2, r2
    243a:	2a03      	cmp	r2, #3
    243c:	d807      	bhi.n	244e <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0x76>
		{
			radiostatus.cca_mode = parm.cca_mode;
    243e:	7182      	strb	r2, [r0, #6]
			trx_bit_write(SR_CCA_MODE, radiostatus.cca_mode);
    2440:	9200      	str	r2, [sp, #0]
    2442:	2108      	movs	r1, #8
    2444:	2260      	movs	r2, #96	; 0x60
    2446:	2305      	movs	r3, #5
    2448:	4c1e      	ldr	r4, [pc, #120]	; (24c4 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xec>)
    244a:	47a0      	blx	r4
    244c:	e033      	b.n	24b6 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    244e:	2102      	movs	r1, #2
    2450:	4b1d      	ldr	r3, [pc, #116]	; (24c8 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xf0>)
    2452:	4798      	blx	r3
    2454:	e02f      	b.n	24b6 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
			radio_error(SET_PARM_FAILED);
		}
		break;

	case phyIdleState:
		radiostatus.idle_state = parm.idle_state;
    2456:	b2d1      	uxtb	r1, r2
    2458:	7201      	strb	r1, [r0, #8]
		radio_set_state(parm.idle_state);
    245a:	4b1d      	ldr	r3, [pc, #116]	; (24d0 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xf8>)
    245c:	4798      	blx	r3
		break;
    245e:	e02a      	b.n	24b6 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>

	case phyChannelsSupported:
		break;

	case phyPanId:
		trx_set_panid(parm.pan_id);
    2460:	b294      	uxth	r4, r2
	/**
	 * @brief Write the PANID to the address filter registers
	 */
	 inline void trx_set_panid(uint16_t panid)
	{
	    trx_reg_write(RG_PAN_ID_0,(panid&0xff));
    2462:	b2e2      	uxtb	r2, r4
    2464:	2122      	movs	r1, #34	; 0x22
    2466:	4e1b      	ldr	r6, [pc, #108]	; (24d4 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xfc>)
    2468:	47b0      	blx	r6
	    trx_reg_write(RG_PAN_ID_1,(panid>>8));
    246a:	0a22      	lsrs	r2, r4, #8
    246c:	1c28      	adds	r0, r5, #0
    246e:	2123      	movs	r1, #35	; 0x23
    2470:	47b0      	blx	r6
    2472:	e020      	b.n	24b6 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
		break;

	case phyShortAddr:
		trx_set_shortaddr(parm.short_addr);
    2474:	b294      	uxth	r4, r2
	 * @brief Write the 16 bit short address to the
	 * address filter registers
	 */
	 inline void trx_set_shortaddr(uint16_t shortaddr)
	{
	    trx_reg_write(RG_SHORT_ADDR_0,(shortaddr&0xff));
    2476:	b2e2      	uxtb	r2, r4
    2478:	2120      	movs	r1, #32
    247a:	4e16      	ldr	r6, [pc, #88]	; (24d4 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xfc>)
    247c:	47b0      	blx	r6
	    trx_reg_write(RG_SHORT_ADDR_1,(shortaddr>>8));
    247e:	0a22      	lsrs	r2, r4, #8
    2480:	1c28      	adds	r0, r5, #0
    2482:	2121      	movs	r1, #33	; 0x21
    2484:	47b0      	blx	r6
    2486:	e016      	b.n	24b6 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
		break;

	case phyLongAddr:
	{
		uint8_t regno, *ap;
		for (regno = RG_IEEE_ADDR_0, ap = (uint8_t *)parm.long_addr;
    2488:	1c17      	adds	r7, r2, #0
    248a:	3208      	adds	r2, #8
    248c:	1c14      	adds	r4, r2, #0
    248e:	2624      	movs	r6, #36	; 0x24
				regno <= RG_IEEE_ADDR_7;
				regno++, ap++)
			trx_reg_write(regno, *ap);
    2490:	4b10      	ldr	r3, [pc, #64]	; (24d4 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xfc>)
    2492:	4698      	mov	r8, r3
    2494:	783a      	ldrb	r2, [r7, #0]
    2496:	1c28      	adds	r0, r5, #0
    2498:	1c31      	adds	r1, r6, #0
    249a:	47c0      	blx	r8
		break;

	case phyLongAddr:
	{
		uint8_t regno, *ap;
		for (regno = RG_IEEE_ADDR_0, ap = (uint8_t *)parm.long_addr;
    249c:	3601      	adds	r6, #1
    249e:	b2f6      	uxtb	r6, r6
    24a0:	3701      	adds	r7, #1
    24a2:	42a7      	cmp	r7, r4
    24a4:	d1f6      	bne.n	2494 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xbc>
    24a6:	e006      	b.n	24b6 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
			trx_reg_write(regno, *ap);
		break;
	}

	case phyDataRate:
		trx_set_datarate(parm.data_rate);
    24a8:	b2d1      	uxtb	r1, r2
    24aa:	4b0b      	ldr	r3, [pc, #44]	; (24d8 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0x100>)
    24ac:	4798      	blx	r3
		break;
    24ae:	e002      	b.n	24b6 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xde>
 * @ingroup grpRadio
 */

void cMxRadio::radio_error(radio_error_t err)
{
	usr_radio_error(err);
    24b0:	2102      	movs	r1, #2
    24b2:	4b05      	ldr	r3, [pc, #20]	; (24c8 <_ZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_t+0xf0>)
    24b4:	4798      	blx	r3

	default:
		radio_error(SET_PARM_FAILED);
		break;
	}
}
    24b6:	b002      	add	sp, #8
    24b8:	bc04      	pop	{r2}
    24ba:	4690      	mov	r8, r2
    24bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    24be:	46c0      	nop			; (mov r8, r8)
    24c0:	0000d508 	.word	0x0000d508
    24c4:	0000273d 	.word	0x0000273d
    24c8:	00001f95 	.word	0x00001f95
    24cc:	0000d52c 	.word	0x0000d52c
    24d0:	00002189 	.word	0x00002189
    24d4:	00002651 	.word	0x00002651
    24d8:	00002541 	.word	0x00002541

000024dc <_ZN8cMxRadio16radio_send_frameEhPhh>:


void cMxRadio::radio_send_frame(uint8_t len, uint8_t *frm, uint8_t compcrc)
{
    24dc:	b570      	push	{r4, r5, r6, lr}
    24de:	1c04      	adds	r4, r0, #0
    24e0:	1c0e      	adds	r6, r1, #0
    24e2:	1c15      	adds	r5, r2, #0
	{
		TRX_TX_PA_EI();
	}
#endif
/* this block should be made atomic */
	frm[2]++;
    24e4:	7893      	ldrb	r3, [r2, #2]
    24e6:	3301      	adds	r3, #1
    24e8:	7093      	strb	r3, [r2, #2]
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    24ea:	23e0      	movs	r3, #224	; 0xe0
    24ec:	56c3      	ldrsb	r3, [r0, r3]
    24ee:	3301      	adds	r3, #1
    24f0:	d104      	bne.n	24fc <_ZN8cMxRadio16radio_send_frameEhPhh+0x20>
    24f2:	480f      	ldr	r0, [pc, #60]	; (2530 <_ZN8cMxRadio16radio_send_frameEhPhh+0x54>)
    24f4:	490f      	ldr	r1, [pc, #60]	; (2534 <_ZN8cMxRadio16radio_send_frameEhPhh+0x58>)
    24f6:	2228      	movs	r2, #40	; 0x28
    24f8:	4b0f      	ldr	r3, [pc, #60]	; (2538 <_ZN8cMxRadio16radio_send_frameEhPhh+0x5c>)
    24fa:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    24fc:	1c23      	adds	r3, r4, #0
    24fe:	33e0      	adds	r3, #224	; 0xe0
    2500:	691a      	ldr	r2, [r3, #16]
    2502:	685b      	ldr	r3, [r3, #4]
    2504:	6013      	str	r3, [r2, #0]
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    2506:	23e0      	movs	r3, #224	; 0xe0
    2508:	56e3      	ldrsb	r3, [r4, r3]
    250a:	3301      	adds	r3, #1
    250c:	d104      	bne.n	2518 <_ZN8cMxRadio16radio_send_frameEhPhh+0x3c>
    250e:	4808      	ldr	r0, [pc, #32]	; (2530 <_ZN8cMxRadio16radio_send_frameEhPhh+0x54>)
    2510:	4908      	ldr	r1, [pc, #32]	; (2534 <_ZN8cMxRadio16radio_send_frameEhPhh+0x58>)
    2512:	2228      	movs	r2, #40	; 0x28
    2514:	4b08      	ldr	r3, [pc, #32]	; (2538 <_ZN8cMxRadio16radio_send_frameEhPhh+0x5c>)
    2516:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    2518:	1c23      	adds	r3, r4, #0
    251a:	33e0      	adds	r3, #224	; 0xe0
    251c:	68da      	ldr	r2, [r3, #12]
    251e:	685b      	ldr	r3, [r3, #4]
    2520:	6013      	str	r3, [r2, #0]
	sleep_pin=1;//TRX_SLPTR_HIGH();
	sleep_pin=0;//TRX_SLPTR_LOW();
	trx_frame_write(len, frm);
    2522:	1c20      	adds	r0, r4, #0
    2524:	1c31      	adds	r1, r6, #0
    2526:	1c2a      	adds	r2, r5, #0
    2528:	4b04      	ldr	r3, [pc, #16]	; (253c <_ZN8cMxRadio16radio_send_frameEhPhh+0x60>)
    252a:	4798      	blx	r3
	/***********************************/
}
    252c:	bd70      	pop	{r4, r5, r6, pc}
    252e:	46c0      	nop			; (mov r8, r8)
    2530:	0000d34c 	.word	0x0000d34c
    2534:	0000d364 	.word	0x0000d364
    2538:	00004709 	.word	0x00004709
    253c:	00002771 	.word	0x00002771

00002540 <_ZN8cMxRadio16trx_set_datarateEh>:
}

#elif RADIO_TYPE == RADIO_AT86RF231

uint8_t cMxRadio::trx_set_datarate(uint8_t rate_type)
{
    2540:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2542:	1c06      	adds	r6, r0, #0
    2544:	1e0c      	subs	r4, r1, #0
trx_regval_t regval = TRX_NONE;

    switch(rate_type)
    2546:	2c34      	cmp	r4, #52	; 0x34
    2548:	d00f      	beq.n	256a <_ZN8cMxRadio16trx_set_datarateEh+0x2a>
    254a:	2934      	cmp	r1, #52	; 0x34
    254c:	d803      	bhi.n	2556 <_ZN8cMxRadio16trx_set_datarateEh+0x16>
    {
        case OQPSK250: regval = TRX_OQPSK250; break;
    254e:	2500      	movs	r5, #0

uint8_t cMxRadio::trx_set_datarate(uint8_t rate_type)
{
trx_regval_t regval = TRX_NONE;

    switch(rate_type)
    2550:	2933      	cmp	r1, #51	; 0x33
    2552:	d00b      	beq.n	256c <_ZN8cMxRadio16trx_set_datarateEh+0x2c>
    2554:	e007      	b.n	2566 <_ZN8cMxRadio16trx_set_datarateEh+0x26>
    2556:	2954      	cmp	r1, #84	; 0x54
    2558:	d003      	beq.n	2562 <_ZN8cMxRadio16trx_set_datarateEh+0x22>
    {
        case OQPSK250: regval = TRX_OQPSK250; break;
        case OQPSK500: regval = TRX_OQPSK500; break;
    255a:	2501      	movs	r5, #1

uint8_t cMxRadio::trx_set_datarate(uint8_t rate_type)
{
trx_regval_t regval = TRX_NONE;

    switch(rate_type)
    255c:	2994      	cmp	r1, #148	; 0x94
    255e:	d005      	beq.n	256c <_ZN8cMxRadio16trx_set_datarateEh+0x2c>
    2560:	e001      	b.n	2566 <_ZN8cMxRadio16trx_set_datarateEh+0x26>
    {
        case OQPSK250: regval = TRX_OQPSK250; break;
        case OQPSK500: regval = TRX_OQPSK500; break;
        case OQPSK1000: regval = TRX_OQPSK1000; break;
        case OQPSK2000: regval = TRX_OQPSK2000; break;
    2562:	2503      	movs	r5, #3
    2564:	e002      	b.n	256c <_ZN8cMxRadio16trx_set_datarateEh+0x2c>
        regval |=  trx_reg_read(RG_TRX_CTRL_2) & 0xfc ;
        trx_reg_write(RG_TRX_CTRL_2, regval);
    }
    else
    {
        rate_type = TRX_NONE;
    2566:	24ff      	movs	r4, #255	; 0xff
    2568:	e011      	b.n	258e <_ZN8cMxRadio16trx_set_datarateEh+0x4e>

    switch(rate_type)
    {
        case OQPSK250: regval = TRX_OQPSK250; break;
        case OQPSK500: regval = TRX_OQPSK500; break;
        case OQPSK1000: regval = TRX_OQPSK1000; break;
    256a:	2502      	movs	r5, #2
        case OQPSK2000: regval = TRX_OQPSK2000; break;
        default: break;
    }
    if (regval != TRX_NONE)
    {
        trx_reg_write(RG_TRX_STATE, CMD_FORCE_TRX_OFF);
    256c:	1c30      	adds	r0, r6, #0
    256e:	2102      	movs	r1, #2
    2570:	2203      	movs	r2, #3
    2572:	4f08      	ldr	r7, [pc, #32]	; (2594 <_ZN8cMxRadio16trx_set_datarateEh+0x54>)
    2574:	47b8      	blx	r7
        regval |=  trx_reg_read(RG_TRX_CTRL_2) & 0xfc ;
    2576:	1c30      	adds	r0, r6, #0
    2578:	210c      	movs	r1, #12
    257a:	4b07      	ldr	r3, [pc, #28]	; (2598 <_ZN8cMxRadio16trx_set_datarateEh+0x58>)
    257c:	4798      	blx	r3
    257e:	2303      	movs	r3, #3
    2580:	1c02      	adds	r2, r0, #0
    2582:	439a      	bics	r2, r3
    2584:	4315      	orrs	r5, r2
        trx_reg_write(RG_TRX_CTRL_2, regval);
    2586:	b2ea      	uxtb	r2, r5
    2588:	1c30      	adds	r0, r6, #0
    258a:	210c      	movs	r1, #12
    258c:	47b8      	blx	r7
    else
    {
        rate_type = TRX_NONE;
    }
    return rate_type;
}
    258e:	1c20      	adds	r0, r4, #0
    2590:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2592:	46c0      	nop			; (mov r8, r8)
    2594:	00002651 	.word	0x00002651
    2598:	000026b9 	.word	0x000026b9

0000259c <_Z8IRQradiov>:
/* === Includes ============================================================ */
#include <MxRadio.h>

cMxRadio* gRadio = NULL;

void IRQradio(void){
    259c:	b508      	push	{r3, lr}
	gRadio->rf_irq_callback();
    259e:	4b02      	ldr	r3, [pc, #8]	; (25a8 <_Z8IRQradiov+0xc>)
    25a0:	6818      	ldr	r0, [r3, #0]
    25a2:	4b02      	ldr	r3, [pc, #8]	; (25ac <_Z8IRQradiov+0x10>)
    25a4:	4798      	blx	r3
}
    25a6:	bd08      	pop	{r3, pc}
    25a8:	20004024 	.word	0x20004024
    25ac:	000028b5 	.word	0x000028b5

000025b0 <_ZN8cMxRadio11trx_io_initEi>:
/* === external functions =================================================== */
void cMxRadio::trx_io_init (int spirate)
{
    25b0:	b570      	push	{r4, r5, r6, lr}
    25b2:	b084      	sub	sp, #16
    25b4:	1c05      	adds	r5, r0, #0
    25b6:	1c0e      	adds	r6, r1, #0
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    25b8:	23a8      	movs	r3, #168	; 0xa8
    25ba:	56c3      	ldrsb	r3, [r0, r3]
    25bc:	3301      	adds	r3, #1
    25be:	d104      	bne.n	25ca <_ZN8cMxRadio11trx_io_initEi+0x1a>
    25c0:	4818      	ldr	r0, [pc, #96]	; (2624 <_ZN8cMxRadio11trx_io_initEi+0x74>)
    25c2:	4919      	ldr	r1, [pc, #100]	; (2628 <_ZN8cMxRadio11trx_io_initEi+0x78>)
    25c4:	2228      	movs	r2, #40	; 0x28
    25c6:	4b19      	ldr	r3, [pc, #100]	; (262c <_ZN8cMxRadio11trx_io_initEi+0x7c>)
    25c8:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    25ca:	1c2b      	adds	r3, r5, #0
    25cc:	33a8      	adds	r3, #168	; 0xa8
    25ce:	691a      	ldr	r2, [r3, #16]
    25d0:	685b      	ldr	r3, [r3, #4]
    25d2:	6013      	str	r3, [r2, #0]

	m_cs = 1;
	m_spi.format(8, 0);
    25d4:	1c2c      	adds	r4, r5, #0
    25d6:	3414      	adds	r4, #20
    25d8:	1c20      	adds	r0, r4, #0
    25da:	2108      	movs	r1, #8
    25dc:	2200      	movs	r2, #0
    25de:	4b14      	ldr	r3, [pc, #80]	; (2630 <_ZN8cMxRadio11trx_io_initEi+0x80>)
    25e0:	4798      	blx	r3
	m_spi.frequency(spirate);
    25e2:	1c20      	adds	r0, r4, #0
    25e4:	1c31      	adds	r1, r6, #0
    25e6:	4b13      	ldr	r3, [pc, #76]	; (2634 <_ZN8cMxRadio11trx_io_initEi+0x84>)
    25e8:	4798      	blx	r3
	/////////////////////////////////////////////////////////////////////
	/////modification BM irq_pin.rise(this,&cMxRadio::rf_irq_callback);
	//////////////////////////////////////////////////////////////////////
	struct extint_chan_conf eint_chan_conf;
	extint_chan_get_config_defaults(&eint_chan_conf);
    25ea:	ac01      	add	r4, sp, #4
    25ec:	1c20      	adds	r0, r4, #0
    25ee:	4b12      	ldr	r3, [pc, #72]	; (2638 <_ZN8cMxRadio11trx_io_initEi+0x88>)
    25f0:	4798      	blx	r3
	// put the button as EXTINT
	eint_chan_conf.gpio_pin           = PIN_PB00A_EIC_EXTINT0;
    25f2:	2320      	movs	r3, #32
    25f4:	9301      	str	r3, [sp, #4]
	eint_chan_conf.gpio_pin_mux       = MUX_PB00A_EIC_EXTINT0 ;
    25f6:	2300      	movs	r3, #0
    25f8:	6063      	str	r3, [r4, #4]
	eint_chan_conf.detection_criteria = EXTINT_DETECT_RISING;
    25fa:	2201      	movs	r2, #1
    25fc:	72e2      	strb	r2, [r4, #11]
	eint_chan_conf.filter_input_signal = false;
    25fe:	72a3      	strb	r3, [r4, #10]
		
	extint_chan_set_config(0, &eint_chan_conf);
    2600:	2000      	movs	r0, #0
    2602:	1c21      	adds	r1, r4, #0
    2604:	4b0d      	ldr	r3, [pc, #52]	; (263c <_ZN8cMxRadio11trx_io_initEi+0x8c>)
    2606:	4798      	blx	r3
	//configuration callback
	gRadio = this;
    2608:	4b0d      	ldr	r3, [pc, #52]	; (2640 <_ZN8cMxRadio11trx_io_initEi+0x90>)
    260a:	601d      	str	r5, [r3, #0]
	extint_register_callback(&IRQradio,0,EXTINT_CALLBACK_TYPE_DETECT);
    260c:	480d      	ldr	r0, [pc, #52]	; (2644 <_ZN8cMxRadio11trx_io_initEi+0x94>)
    260e:	2100      	movs	r1, #0
    2610:	2200      	movs	r2, #0
    2612:	4b0d      	ldr	r3, [pc, #52]	; (2648 <_ZN8cMxRadio11trx_io_initEi+0x98>)
    2614:	4798      	blx	r3
	//InterruptManager::get()->add_handler(ppsISR, EIC_IRQn);
	//ppsIsrr.attach(&ppsISR);
	//activation callback
		extint_chan_enable_callback(0,EXTINT_CALLBACK_TYPE_DETECT);		
    2616:	2000      	movs	r0, #0
    2618:	2100      	movs	r1, #0
    261a:	4b0c      	ldr	r3, [pc, #48]	; (264c <_ZN8cMxRadio11trx_io_initEi+0x9c>)
    261c:	4798      	blx	r3
	TRX_SLPTR_INIT();
	SPI_INIT(spirate);
	TRX_IRQ_INIT();
	EI_TRX_IRQ();
	*/
}
    261e:	b004      	add	sp, #16
    2620:	bd70      	pop	{r4, r5, r6, pc}
    2622:	46c0      	nop			; (mov r8, r8)
    2624:	0000d34c 	.word	0x0000d34c
    2628:	0000d364 	.word	0x0000d364
    262c:	00004709 	.word	0x00004709
    2630:	00004439 	.word	0x00004439
    2634:	00004455 	.word	0x00004455
    2638:	0000391d 	.word	0x0000391d
    263c:	00003931 	.word	0x00003931
    2640:	20004024 	.word	0x20004024
    2644:	0000259d 	.word	0x0000259d
    2648:	0000381d 	.word	0x0000381d
    264c:	00003845 	.word	0x00003845

00002650 <_ZN8cMxRadio13trx_reg_writeEhh>:

void cMxRadio::trx_reg_write(uint8_t addr, trx_regval_t val)
{
    2650:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2652:	1c04      	adds	r4, r0, #0
    2654:	1c17      	adds	r7, r2, #0

	addr = TRX_CMD_RW | (TRX_CMD_RADDR_MASK & addr);
    2656:	23c0      	movs	r3, #192	; 0xc0
    2658:	4319      	orrs	r1, r3
    265a:	1c0d      	adds	r5, r1, #0
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    265c:	3b18      	subs	r3, #24
    265e:	56c3      	ldrsb	r3, [r0, r3]
    2660:	3301      	adds	r3, #1
    2662:	d104      	bne.n	266e <_ZN8cMxRadio13trx_reg_writeEhh+0x1e>
    2664:	4810      	ldr	r0, [pc, #64]	; (26a8 <_ZN8cMxRadio13trx_reg_writeEhh+0x58>)
    2666:	4911      	ldr	r1, [pc, #68]	; (26ac <_ZN8cMxRadio13trx_reg_writeEhh+0x5c>)
    2668:	2228      	movs	r2, #40	; 0x28
    266a:	4b11      	ldr	r3, [pc, #68]	; (26b0 <_ZN8cMxRadio13trx_reg_writeEhh+0x60>)
    266c:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    266e:	1c23      	adds	r3, r4, #0
    2670:	33a8      	adds	r3, #168	; 0xa8
    2672:	68da      	ldr	r2, [r3, #12]
    2674:	685b      	ldr	r3, [r3, #4]
    2676:	6013      	str	r3, [r2, #0]

	m_cs = 0;//SPI_SELN_LOW();
	m_spi.write(addr);//SPI_DATA_REG = addr;
    2678:	1c26      	adds	r6, r4, #0
    267a:	3614      	adds	r6, #20
    267c:	1c30      	adds	r0, r6, #0
    267e:	1c29      	adds	r1, r5, #0
    2680:	4d0c      	ldr	r5, [pc, #48]	; (26b4 <_ZN8cMxRadio13trx_reg_writeEhh+0x64>)
    2682:	47a8      	blx	r5
	//SPI_WAITFOR();
	m_spi.write(val);//SPI_DATA_REG = val;
    2684:	1c30      	adds	r0, r6, #0
    2686:	1c39      	adds	r1, r7, #0
    2688:	47a8      	blx	r5
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    268a:	23a8      	movs	r3, #168	; 0xa8
    268c:	56e3      	ldrsb	r3, [r4, r3]
    268e:	3301      	adds	r3, #1
    2690:	d104      	bne.n	269c <_ZN8cMxRadio13trx_reg_writeEhh+0x4c>
    2692:	4805      	ldr	r0, [pc, #20]	; (26a8 <_ZN8cMxRadio13trx_reg_writeEhh+0x58>)
    2694:	4905      	ldr	r1, [pc, #20]	; (26ac <_ZN8cMxRadio13trx_reg_writeEhh+0x5c>)
    2696:	2228      	movs	r2, #40	; 0x28
    2698:	4b05      	ldr	r3, [pc, #20]	; (26b0 <_ZN8cMxRadio13trx_reg_writeEhh+0x60>)
    269a:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    269c:	34a8      	adds	r4, #168	; 0xa8
    269e:	6923      	ldr	r3, [r4, #16]
    26a0:	6862      	ldr	r2, [r4, #4]
    26a2:	601a      	str	r2, [r3, #0]
	//SPI_WAITFOR();
	m_cs = 1;//SPI_SELN_HIGH();
}
    26a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    26a6:	46c0      	nop			; (mov r8, r8)
    26a8:	0000d34c 	.word	0x0000d34c
    26ac:	0000d364 	.word	0x0000d364
    26b0:	00004709 	.word	0x00004709
    26b4:	0000446d 	.word	0x0000446d

000026b8 <_ZN8cMxRadio12trx_reg_readEh>:

trx_regval_t cMxRadio::trx_reg_read(uint8_t addr)
{
    26b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    26ba:	1c04      	adds	r4, r0, #0

	uint8_t val;

	addr=TRX_CMD_RR | (TRX_CMD_RADDR_MASK & addr);
    26bc:	253f      	movs	r5, #63	; 0x3f
    26be:	4029      	ands	r1, r5
    26c0:	3541      	adds	r5, #65	; 0x41
    26c2:	430d      	orrs	r5, r1
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    26c4:	23a8      	movs	r3, #168	; 0xa8
    26c6:	56c3      	ldrsb	r3, [r0, r3]
    26c8:	3301      	adds	r3, #1
    26ca:	d104      	bne.n	26d6 <_ZN8cMxRadio12trx_reg_readEh+0x1e>
    26cc:	4811      	ldr	r0, [pc, #68]	; (2714 <_ZN8cMxRadio12trx_reg_readEh+0x5c>)
    26ce:	4912      	ldr	r1, [pc, #72]	; (2718 <_ZN8cMxRadio12trx_reg_readEh+0x60>)
    26d0:	2228      	movs	r2, #40	; 0x28
    26d2:	4b12      	ldr	r3, [pc, #72]	; (271c <_ZN8cMxRadio12trx_reg_readEh+0x64>)
    26d4:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    26d6:	1c23      	adds	r3, r4, #0
    26d8:	33a8      	adds	r3, #168	; 0xa8
    26da:	68da      	ldr	r2, [r3, #12]
    26dc:	685b      	ldr	r3, [r3, #4]
    26de:	6013      	str	r3, [r2, #0]

	// Select transceiver
	m_cs = 0;//SPI_SELN_LOW();

	m_spi.write(addr);//SPI_DATA_REG = addr;
    26e0:	1c27      	adds	r7, r4, #0
    26e2:	3714      	adds	r7, #20
    26e4:	1c38      	adds	r0, r7, #0
    26e6:	1c29      	adds	r1, r5, #0
    26e8:	4e0d      	ldr	r6, [pc, #52]	; (2720 <_ZN8cMxRadio12trx_reg_readEh+0x68>)
    26ea:	47b0      	blx	r6
	//SPI_WAITFOR();
	val=m_spi.write(addr);//SPI_DATA_REG = addr;        /* dummy out */
    26ec:	1c38      	adds	r0, r7, #0
    26ee:	1c29      	adds	r1, r5, #0
    26f0:	47b0      	blx	r6
    26f2:	b2c5      	uxtb	r5, r0
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    26f4:	23a8      	movs	r3, #168	; 0xa8
    26f6:	56e3      	ldrsb	r3, [r4, r3]
    26f8:	3301      	adds	r3, #1
    26fa:	d104      	bne.n	2706 <_ZN8cMxRadio12trx_reg_readEh+0x4e>
    26fc:	4805      	ldr	r0, [pc, #20]	; (2714 <_ZN8cMxRadio12trx_reg_readEh+0x5c>)
    26fe:	4906      	ldr	r1, [pc, #24]	; (2718 <_ZN8cMxRadio12trx_reg_readEh+0x60>)
    2700:	2228      	movs	r2, #40	; 0x28
    2702:	4b06      	ldr	r3, [pc, #24]	; (271c <_ZN8cMxRadio12trx_reg_readEh+0x64>)
    2704:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    2706:	34a8      	adds	r4, #168	; 0xa8
    2708:	6923      	ldr	r3, [r4, #16]
    270a:	6862      	ldr	r2, [r4, #4]
    270c:	601a      	str	r2, [r3, #0]
	//val = SPI_DATA_REG;

	m_cs=1;//SPI_SELN_HIGH();

	return (trx_regval_t)val;
}
    270e:	1c28      	adds	r0, r5, #0
    2710:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2712:	46c0      	nop			; (mov r8, r8)
    2714:	0000d34c 	.word	0x0000d34c
    2718:	0000d364 	.word	0x0000d364
    271c:	00004709 	.word	0x00004709
    2720:	0000446d 	.word	0x0000446d

00002724 <_ZN8cMxRadio12trx_bit_readEhhh>:
#include <MxRadio.h>


/* === functions ========================================= */
trx_regval_t cMxRadio::trx_bit_read(uint8_t addr, trx_regval_t mask, uint8_t pos)
{
    2724:	b538      	push	{r3, r4, r5, lr}
    2726:	1c15      	adds	r5, r2, #0
    2728:	1c1c      	adds	r4, r3, #0
trx_regval_t data;
    data = trx_reg_read(addr);
    272a:	4b03      	ldr	r3, [pc, #12]	; (2738 <_ZN8cMxRadio12trx_bit_readEhhh+0x14>)
    272c:	4798      	blx	r3
    data &= mask;
    data >>= pos;
    272e:	4028      	ands	r0, r5
    2730:	4120      	asrs	r0, r4
    return data;
    2732:	b2c0      	uxtb	r0, r0
}
    2734:	bd38      	pop	{r3, r4, r5, pc}
    2736:	46c0      	nop			; (mov r8, r8)
    2738:	000026b9 	.word	0x000026b9

0000273c <_ZN8cMxRadio13trx_bit_writeEhhhh>:

#include <MxRadio.h>

/* === functions ========================================= */
void cMxRadio::trx_bit_write(uint8_t addr, trx_regval_t mask, uint8_t pos, trx_regval_t value)
{
    273c:	b5f0      	push	{r4, r5, r6, r7, lr}
    273e:	b083      	sub	sp, #12
    2740:	1c05      	adds	r5, r0, #0
    2742:	1c16      	adds	r6, r2, #0
    2744:	1c1c      	adds	r4, r3, #0
    2746:	ab08      	add	r3, sp, #32
    2748:	781f      	ldrb	r7, [r3, #0]

trx_regval_t tmp;
    tmp = trx_reg_read(addr);
    274a:	9101      	str	r1, [sp, #4]
    274c:	4b06      	ldr	r3, [pc, #24]	; (2768 <_ZN8cMxRadio13trx_bit_writeEhhhh+0x2c>)
    274e:	4798      	blx	r3
    tmp &= ~mask;
    2750:	43b0      	bics	r0, r6
    2752:	b2c0      	uxtb	r0, r0
    value <<= pos;
    2754:	1c3a      	adds	r2, r7, #0
    2756:	40a2      	lsls	r2, r4
    value &=mask;
    2758:	4032      	ands	r2, r6
    value |= tmp;
    trx_reg_write(addr, value);
    275a:	4302      	orrs	r2, r0
    275c:	1c28      	adds	r0, r5, #0
    275e:	9901      	ldr	r1, [sp, #4]
    2760:	4b02      	ldr	r3, [pc, #8]	; (276c <_ZN8cMxRadio13trx_bit_writeEhhhh+0x30>)
    2762:	4798      	blx	r3
    return;
}
    2764:	b003      	add	sp, #12
    2766:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2768:	000026b9 	.word	0x000026b9
    276c:	00002651 	.word	0x00002651

00002770 <_ZN8cMxRadio15trx_frame_writeEhPh>:
#include <MxRadio.h>

/* === functions ========================================= */

void cMxRadio::trx_frame_write(uint8_t length, uint8_t *data)
{
    2770:	b5f0      	push	{r4, r5, r6, r7, lr}
    2772:	b083      	sub	sp, #12
    2774:	1c06      	adds	r6, r0, #0
    2776:	1c0f      	adds	r7, r1, #0
    2778:	1c15      	adds	r5, r2, #0
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    277a:	23a8      	movs	r3, #168	; 0xa8
    277c:	56c3      	ldrsb	r3, [r0, r3]
    277e:	3301      	adds	r3, #1
    2780:	d104      	bne.n	278c <_ZN8cMxRadio15trx_frame_writeEhPh+0x1c>
    2782:	4819      	ldr	r0, [pc, #100]	; (27e8 <_ZN8cMxRadio15trx_frame_writeEhPh+0x78>)
    2784:	4919      	ldr	r1, [pc, #100]	; (27ec <_ZN8cMxRadio15trx_frame_writeEhPh+0x7c>)
    2786:	2228      	movs	r2, #40	; 0x28
    2788:	4b19      	ldr	r3, [pc, #100]	; (27f0 <_ZN8cMxRadio15trx_frame_writeEhPh+0x80>)
    278a:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    278c:	1c33      	adds	r3, r6, #0
    278e:	33a8      	adds	r3, #168	; 0xa8
    2790:	68da      	ldr	r2, [r3, #12]
    2792:	685b      	ldr	r3, [r3, #4]
    2794:	6013      	str	r3, [r2, #0]

    // Select transceiver
    m_cs=0;//SPI_SELN_LOW();

    m_spi.write(TRX_CMD_FW);//SPI_DATA_REG = TRX_CMD_FW;
    2796:	2314      	movs	r3, #20
    2798:	469c      	mov	ip, r3
    279a:	44b4      	add	ip, r6
    279c:	4663      	mov	r3, ip
    279e:	9301      	str	r3, [sp, #4]
    27a0:	4660      	mov	r0, ip
    27a2:	2160      	movs	r1, #96	; 0x60
    27a4:	4c13      	ldr	r4, [pc, #76]	; (27f4 <_ZN8cMxRadio15trx_frame_writeEhPh+0x84>)
    27a6:	47a0      	blx	r4
    //SPI_WAITFOR();
    m_spi.write(length);//SPI_DATA_REG = length;
    27a8:	9801      	ldr	r0, [sp, #4]
    27aa:	1c39      	adds	r1, r7, #0
    27ac:	47a0      	blx	r4
    27ae:	1c2c      	adds	r4, r5, #0
    27b0:	3f01      	subs	r7, #1
    27b2:	b2ff      	uxtb	r7, r7
    27b4:	3701      	adds	r7, #1
    27b6:	19ed      	adds	r5, r5, r7

    do
    {
        //SPI_WAITFOR();
    	m_spi.write(*data++);//SPI_DATA_REG = *data++;
    27b8:	4f0e      	ldr	r7, [pc, #56]	; (27f4 <_ZN8cMxRadio15trx_frame_writeEhPh+0x84>)
    27ba:	7821      	ldrb	r1, [r4, #0]
    27bc:	9801      	ldr	r0, [sp, #4]
    27be:	47b8      	blx	r7
    27c0:	3401      	adds	r4, #1

    m_spi.write(TRX_CMD_FW);//SPI_DATA_REG = TRX_CMD_FW;
    //SPI_WAITFOR();
    m_spi.write(length);//SPI_DATA_REG = length;

    do
    27c2:	42ac      	cmp	r4, r5
    27c4:	d1f9      	bne.n	27ba <_ZN8cMxRadio15trx_frame_writeEhPh+0x4a>
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    27c6:	23a8      	movs	r3, #168	; 0xa8
    27c8:	56f3      	ldrsb	r3, [r6, r3]
    27ca:	3301      	adds	r3, #1
    27cc:	d104      	bne.n	27d8 <_ZN8cMxRadio15trx_frame_writeEhPh+0x68>
    27ce:	4806      	ldr	r0, [pc, #24]	; (27e8 <_ZN8cMxRadio15trx_frame_writeEhPh+0x78>)
    27d0:	4906      	ldr	r1, [pc, #24]	; (27ec <_ZN8cMxRadio15trx_frame_writeEhPh+0x7c>)
    27d2:	2228      	movs	r2, #40	; 0x28
    27d4:	4b06      	ldr	r3, [pc, #24]	; (27f0 <_ZN8cMxRadio15trx_frame_writeEhPh+0x80>)
    27d6:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    27d8:	1c33      	adds	r3, r6, #0
    27da:	33a8      	adds	r3, #168	; 0xa8
    27dc:	691a      	ldr	r2, [r3, #16]
    27de:	685b      	ldr	r3, [r3, #4]
    27e0:	6013      	str	r3, [r2, #0]

    //SPI_WAITFOR(); /* wait here until last byte is out otherwise underrun irq */

    // Deselect Slave
    m_cs=1;//SPI_SELN_HIGH();
}
    27e2:	b003      	add	sp, #12
    27e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    27e6:	46c0      	nop			; (mov r8, r8)
    27e8:	0000d34c 	.word	0x0000d34c
    27ec:	0000d364 	.word	0x0000d364
    27f0:	00004709 	.word	0x00004709
    27f4:	0000446d 	.word	0x0000446d

000027f8 <_ZN8cMxRadio14trx_frame_readEPhhS0_>:

uint8_t cMxRadio::trx_frame_read(uint8_t *data, uint8_t datasz, uint8_t *lqi)
{
    27f8:	b5f0      	push	{r4, r5, r6, r7, lr}
    27fa:	4657      	mov	r7, sl
    27fc:	464e      	mov	r6, r9
    27fe:	b4c0      	push	{r6, r7}
    2800:	b083      	sub	sp, #12
    2802:	1c07      	adds	r7, r0, #0
    2804:	9101      	str	r1, [sp, #4]
    2806:	1c15      	adds	r5, r2, #0
    2808:	4699      	mov	r9, r3
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    280a:	23a8      	movs	r3, #168	; 0xa8
    280c:	56c3      	ldrsb	r3, [r0, r3]
    280e:	3301      	adds	r3, #1
    2810:	d104      	bne.n	281c <_ZN8cMxRadio14trx_frame_readEPhhS0_+0x24>
    2812:	4824      	ldr	r0, [pc, #144]	; (28a4 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xac>)
    2814:	4924      	ldr	r1, [pc, #144]	; (28a8 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb0>)
    2816:	2228      	movs	r2, #40	; 0x28
    2818:	4b24      	ldr	r3, [pc, #144]	; (28ac <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb4>)
    281a:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    else
        *obj->OUTCLR = obj->mask;
    281c:	1c3b      	adds	r3, r7, #0
    281e:	33a8      	adds	r3, #168	; 0xa8
    2820:	68da      	ldr	r2, [r3, #12]
    2822:	685b      	ldr	r3, [r3, #4]
    2824:	6013      	str	r3, [r2, #0]

    /* Select transceiver */
    m_cs=0;//SPI_SELN_LOW();

    /* start frame read */
    m_spi.write(TRX_CMD_FR);//SPI_DATA_REG = TRX_CMD_FR;
    2826:	2314      	movs	r3, #20
    2828:	469c      	mov	ip, r3
    282a:	44bc      	add	ip, r7
    282c:	4663      	mov	r3, ip
    282e:	4666      	mov	r6, ip
    2830:	9300      	str	r3, [sp, #0]
    2832:	1c18      	adds	r0, r3, #0
    2834:	2120      	movs	r1, #32
    2836:	4c1e      	ldr	r4, [pc, #120]	; (28b0 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb8>)
    2838:	47a0      	blx	r4
    //SPI_WAITFOR();

    /* read length */
    length= m_spi.write(0);//SPI_DATA_REG = 0;
    283a:	1c30      	adds	r0, r6, #0
    283c:	2100      	movs	r1, #0
    283e:	47a0      	blx	r4
    2840:	b2c6      	uxtb	r6, r0
    //SPI_WAITFOR();
    //length = SPI_DATA_REG;

    if (length <= datasz)
    2842:	42ae      	cmp	r6, r5
    2844:	d818      	bhi.n	2878 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0x80>
    2846:	9a01      	ldr	r2, [sp, #4]
    2848:	1c14      	adds	r4, r2, #0
    284a:	1e73      	subs	r3, r6, #1
    284c:	b2db      	uxtb	r3, r3
    284e:	3301      	adds	r3, #1
    2850:	18d5      	adds	r5, r2, r3
        i = length;
        do
        {
            //SPI_DATA_REG = 0;   /* dummy out */
            //SPI_WAITFOR();
            *data++ = m_spi.write(0);//SPI_DATA_REG;
    2852:	4b17      	ldr	r3, [pc, #92]	; (28b0 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb8>)
    2854:	469a      	mov	sl, r3
    2856:	9800      	ldr	r0, [sp, #0]
    2858:	2100      	movs	r1, #0
    285a:	47d0      	blx	sl
    285c:	7020      	strb	r0, [r4, #0]
    285e:	3401      	adds	r4, #1
    //length = SPI_DATA_REG;

    if (length <= datasz)
    {
        i = length;
        do
    2860:	42ac      	cmp	r4, r5
    2862:	d1f8      	bne.n	2856 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0x5e>
            //SPI_WAITFOR();
            *data++ = m_spi.write(0);//SPI_DATA_REG;
        }
        while(--i);

        if (lqi!= NULL)
    2864:	464b      	mov	r3, r9
    2866:	2b00      	cmp	r3, #0
    2868:	d008      	beq.n	287c <_ZN8cMxRadio14trx_frame_readEPhhS0_+0x84>
        {
            //SPI_DATA_REG = 0;   /* dummy out */
            //SPI_WAITFOR();
            *lqi = m_spi.write(0);//SPI_DATA_REG;
    286a:	9800      	ldr	r0, [sp, #0]
    286c:	2100      	movs	r1, #0
    286e:	4b10      	ldr	r3, [pc, #64]	; (28b0 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb8>)
    2870:	4798      	blx	r3
    2872:	464b      	mov	r3, r9
    2874:	7018      	strb	r0, [r3, #0]
    2876:	e001      	b.n	287c <_ZN8cMxRadio14trx_frame_readEPhhS0_+0x84>
        }
    }
    else
    {
        /* we drop the frame */
        length = 0x80 | length;
    2878:	2380      	movs	r3, #128	; 0x80
    287a:	431e      	orrs	r6, r3
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    287c:	23a8      	movs	r3, #168	; 0xa8
    287e:	56fb      	ldrsb	r3, [r7, r3]
    2880:	3301      	adds	r3, #1
    2882:	d104      	bne.n	288e <_ZN8cMxRadio14trx_frame_readEPhhS0_+0x96>
    2884:	4807      	ldr	r0, [pc, #28]	; (28a4 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xac>)
    2886:	4908      	ldr	r1, [pc, #32]	; (28a8 <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb0>)
    2888:	2228      	movs	r2, #40	; 0x28
    288a:	4b08      	ldr	r3, [pc, #32]	; (28ac <_ZN8cMxRadio14trx_frame_readEPhhS0_+0xb4>)
    288c:	4798      	blx	r3
    if (value)
        *obj->OUTSET = obj->mask;
    288e:	37a8      	adds	r7, #168	; 0xa8
    2890:	693b      	ldr	r3, [r7, #16]
    2892:	687a      	ldr	r2, [r7, #4]
    2894:	601a      	str	r2, [r3, #0]
    }
    m_cs=1;//SPI_SELN_HIGH();
    return length;
}
    2896:	1c30      	adds	r0, r6, #0
    2898:	b003      	add	sp, #12
    289a:	bc0c      	pop	{r2, r3}
    289c:	4691      	mov	r9, r2
    289e:	469a      	mov	sl, r3
    28a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    28a2:	46c0      	nop			; (mov r8, r8)
    28a4:	0000d34c 	.word	0x0000d34c
    28a8:	0000d364 	.word	0x0000d364
    28ac:	00004709 	.word	0x00004709
    28b0:	0000446d 	.word	0x0000446d

000028b4 <_ZN8cMxRadio15rf_irq_callbackEv>:


/* === globals ============================================================= */

void cMxRadio::rf_irq_callback()
{
    28b4:	b538      	push	{r3, r4, r5, lr}
    28b6:	1c04      	adds	r4, r0, #0

uint8_t cause;
    //DI_TRX_IRQ();
    //sei();
    cause = trx_reg_read(RG_IRQ_STATUS);
    28b8:	210f      	movs	r1, #15
    28ba:	4b0c      	ldr	r3, [pc, #48]	; (28ec <_ZN8cMxRadio15rf_irq_callbackEv+0x38>)
    28bc:	4798      	blx	r3
    28be:	1c05      	adds	r5, r0, #0

    if (cause & TRX_IRQ_RX_START)
    28c0:	0743      	lsls	r3, r0, #29
    28c2:	d504      	bpl.n	28ce <_ZN8cMxRadio15rf_irq_callbackEv+0x1a>
    {
    	temprssi = trx_reg_read(RG_PHY_RSSI);
    28c4:	1c20      	adds	r0, r4, #0
    28c6:	2106      	movs	r1, #6
    28c8:	4b08      	ldr	r3, [pc, #32]	; (28ec <_ZN8cMxRadio15rf_irq_callbackEv+0x38>)
    28ca:	4798      	blx	r3
    28cc:	7020      	strb	r0, [r4, #0]
    	//temped = trx_reg_read(RG_PHY_ED_LEVEL);
    }

    if (cause & TRX_IRQ_TRX_END)
    28ce:	072b      	lsls	r3, r5, #28
    28d0:	d507      	bpl.n	28e2 <_ZN8cMxRadio15rf_irq_callbackEv+0x2e>
    {
    	if (temprssi==0)
    28d2:	7823      	ldrb	r3, [r4, #0]
    28d4:	2b00      	cmp	r3, #0
    28d6:	d104      	bne.n	28e2 <_ZN8cMxRadio15rf_irq_callbackEv+0x2e>
    		temprssi = trx_reg_read(RG_PHY_RSSI);
    28d8:	1c20      	adds	r0, r4, #0
    28da:	2106      	movs	r1, #6
    28dc:	4b03      	ldr	r3, [pc, #12]	; (28ec <_ZN8cMxRadio15rf_irq_callbackEv+0x38>)
    28de:	4798      	blx	r3
    28e0:	7020      	strb	r0, [r4, #0]
    	//temped = trx_reg_read(RG_PHY_ED_LEVEL);
    }
    radio_irq_handler(cause);
    28e2:	1c20      	adds	r0, r4, #0
    28e4:	1c29      	adds	r1, r5, #0
    28e6:	4b02      	ldr	r3, [pc, #8]	; (28f0 <_ZN8cMxRadio15rf_irq_callbackEv+0x3c>)
    28e8:	4798      	blx	r3
    //cli();
    //EI_TRX_IRQ();
}
    28ea:	bd38      	pop	{r3, r4, r5, pc}
    28ec:	000026b9 	.word	0x000026b9
    28f0:	00002359 	.word	0x00002359

000028f4 <_Z12kernelConfigv>:
 * Created: 13/05/2016 16:34:52
 *  Author: MORAND Baptiste
 */ 
#include "utask.h"

void kernelConfig(void){
    28f4:	b530      	push	{r4, r5, lr}
    28f6:	b085      	sub	sp, #20

	pc.printf("kernel config\r\n");
    28f8:	480e      	ldr	r0, [pc, #56]	; (2934 <_Z12kernelConfigv+0x40>)
    28fa:	490f      	ldr	r1, [pc, #60]	; (2938 <_Z12kernelConfigv+0x44>)
    28fc:	4b0f      	ldr	r3, [pc, #60]	; (293c <_Z12kernelConfigv+0x48>)
    28fe:	4798      	blx	r3
	// tasks creations
	xTaskCreate((pdTASK_CODE)HMITask,(const signed char*)"HMI",configMINIMAL_STACK_SIZE,NULL, tskIDLE_PRIORITY +1, NULL);
    2900:	2301      	movs	r3, #1
    2902:	9300      	str	r3, [sp, #0]
    2904:	2400      	movs	r4, #0
    2906:	9401      	str	r4, [sp, #4]
    2908:	9402      	str	r4, [sp, #8]
    290a:	9403      	str	r4, [sp, #12]
    290c:	480c      	ldr	r0, [pc, #48]	; (2940 <_Z12kernelConfigv+0x4c>)
    290e:	490d      	ldr	r1, [pc, #52]	; (2944 <_Z12kernelConfigv+0x50>)
    2910:	2296      	movs	r2, #150	; 0x96
    2912:	0052      	lsls	r2, r2, #1
    2914:	2300      	movs	r3, #0
    2916:	4d0c      	ldr	r5, [pc, #48]	; (2948 <_Z12kernelConfigv+0x54>)
    2918:	47a8      	blx	r5
	xTaskCreate((pdTASK_CODE)timeProtocolTask,(const signed char*)"time",configMINIMAL_STACK_SIZE+600,NULL, tskIDLE_PRIORITY +3, NULL);
    291a:	2303      	movs	r3, #3
    291c:	9300      	str	r3, [sp, #0]
    291e:	9401      	str	r4, [sp, #4]
    2920:	9402      	str	r4, [sp, #8]
    2922:	9403      	str	r4, [sp, #12]
    2924:	4809      	ldr	r0, [pc, #36]	; (294c <_Z12kernelConfigv+0x58>)
    2926:	490a      	ldr	r1, [pc, #40]	; (2950 <_Z12kernelConfigv+0x5c>)
    2928:	22e1      	movs	r2, #225	; 0xe1
    292a:	0092      	lsls	r2, r2, #2
    292c:	2300      	movs	r3, #0
    292e:	47a8      	blx	r5
	//xTaskCreate((pdTASK_CODE)ledBlinkTask,(const signed char*)"led",configMINIMAL_STACK_SIZE,NULL, tskIDLE_PRIORITY +4, NULL);
	//xTaskCreate((pdTASK_CODE)gpsUartTask,(const signed char*)"gps",configMINIMAL_STACK_SIZE,NULL, tskIDLE_PRIORITY +2, NULL);
}
    2930:	b005      	add	sp, #20
    2932:	bd30      	pop	{r4, r5, pc}
    2934:	200043f0 	.word	0x200043f0
    2938:	0000d544 	.word	0x0000d544
    293c:	000046e1 	.word	0x000046e1
    2940:	00003319 	.word	0x00003319
    2944:	0000d554 	.word	0x0000d554
    2948:	00000709 	.word	0x00000709
    294c:	000031c5 	.word	0x000031c5
    2950:	0000d558 	.word	0x0000d558

00002954 <_Z6ppsISRv>:
/** Callback function for the EXTINT driver, called when an external interrupt
 *  detection occurs.
 */

void ppsISR(void)
{	
    2954:	b570      	push	{r4, r5, r6, lr}
    2956:	b08e      	sub	sp, #56	; 0x38
	//pc.printf("pps\r\n");
	if(nPPS>=TIMESYNC){
    2958:	4b2d      	ldr	r3, [pc, #180]	; (2a10 <_Z6ppsISRv+0xbc>)
    295a:	681b      	ldr	r3, [r3, #0]
    295c:	2b09      	cmp	r3, #9
    295e:	dd0b      	ble.n	2978 <_Z6ppsISRv+0x24>
		nPPS=0;
    2960:	2200      	movs	r2, #0
    2962:	4b2b      	ldr	r3, [pc, #172]	; (2a10 <_Z6ppsISRv+0xbc>)
    2964:	601a      	str	r2, [r3, #0]
		if(timeProt.synchroTimeSendSync!=NULL){
    2966:	4b2b      	ldr	r3, [pc, #172]	; (2a14 <_Z6ppsISRv+0xc0>)
    2968:	6c98      	ldr	r0, [r3, #72]	; 0x48
    296a:	2800      	cmp	r0, #0
    296c:	d007      	beq.n	297e <_Z6ppsISRv+0x2a>
			xSemaphoreGiveFromISR(timeProt.synchroTimeSendSync,NULL);
    296e:	2100      	movs	r1, #0
    2970:	2300      	movs	r3, #0
    2972:	4c29      	ldr	r4, [pc, #164]	; (2a18 <_Z6ppsISRv+0xc4>)
    2974:	47a0      	blx	r4
    2976:	e002      	b.n	297e <_Z6ppsISRv+0x2a>
		}
	}	
	else{
		nPPS++;
    2978:	3301      	adds	r3, #1
    297a:	4a25      	ldr	r2, [pc, #148]	; (2a10 <_Z6ppsISRv+0xbc>)
    297c:	6013      	str	r3, [r2, #0]
	}
	//Disable_global_interrupt();
	Clock timeCopy={0,0,true};
    297e:	ad08      	add	r5, sp, #32
    2980:	2300      	movs	r3, #0
    2982:	9308      	str	r3, [sp, #32]
    2984:	9309      	str	r3, [sp, #36]	; 0x24
    2986:	2201      	movs	r2, #1
    2988:	722a      	strb	r2, [r5, #8]
	//Disable_global_interrupt();
	Clock timeMaster={0,0,true};
    298a:	ac0b      	add	r4, sp, #44	; 0x2c
    298c:	930b      	str	r3, [sp, #44]	; 0x2c
    298e:	930c      	str	r3, [sp, #48]	; 0x30
    2990:	7222      	strb	r2, [r4, #8]
	readClock(&timeCopy);
    2992:	1c28      	adds	r0, r5, #0
    2994:	4b21      	ldr	r3, [pc, #132]	; (2a1c <_Z6ppsISRv+0xc8>)
    2996:	4798      	blx	r3
	//Enable_global_interrupt();
	timeMaster.second=timeCopy.second;
    2998:	9b08      	ldr	r3, [sp, #32]
    299a:	930b      	str	r3, [sp, #44]	; 0x2c
	timeMaster.halfmillis=timeCopy.halfmillis;
    299c:	686b      	ldr	r3, [r5, #4]
    299e:	6063      	str	r3, [r4, #4]
	if(timeMaster.halfmillis>=RTC_FREQ/2){//for the accurate 500ms
    29a0:	6862      	ldr	r2, [r4, #4]
    29a2:	4b1f      	ldr	r3, [pc, #124]	; (2a20 <_Z6ppsISRv+0xcc>)
    29a4:	429a      	cmp	r2, r3
    29a6:	d902      	bls.n	29ae <_Z6ppsISRv+0x5a>
		timeMaster.second++;
    29a8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    29aa:	3301      	adds	r3, #1
    29ac:	930b      	str	r3, [sp, #44]	; 0x2c
	}
	timeMaster.halfmillis=0;
    29ae:	2300      	movs	r3, #0
    29b0:	930c      	str	r3, [sp, #48]	; 0x30
	if((timeCopy.halfmillis>RTC_FREQ)||(timeCopy.halfmillis<0)){
		printf("timeCopypps:'");
		printfClock(timeCopy);
	}
	*/
	timeProt.offset=subClock(timeMaster,timeCopy);
    29b2:	4d18      	ldr	r5, [pc, #96]	; (2a14 <_Z6ppsISRv+0xc0>)
    29b4:	ac04      	add	r4, sp, #16
    29b6:	ab08      	add	r3, sp, #32
    29b8:	466a      	mov	r2, sp
    29ba:	cb43      	ldmia	r3!, {r0, r1, r6}
    29bc:	c243      	stmia	r2!, {r0, r1, r6}
    29be:	1c20      	adds	r0, r4, #0
    29c0:	990b      	ldr	r1, [sp, #44]	; 0x2c
    29c2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    29c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    29c6:	4e17      	ldr	r6, [pc, #92]	; (2a24 <_Z6ppsISRv+0xd0>)
    29c8:	47b0      	blx	r6
    29ca:	1c2b      	adds	r3, r5, #0
    29cc:	334c      	adds	r3, #76	; 0x4c
    29ce:	cc07      	ldmia	r4!, {r0, r1, r2}
    29d0:	c307      	stmia	r3!, {r0, r1, r2}
	//timeProt.offset.second=0;
	#ifdef MASTERMODE
		updateClock();
	#else
		if(timeProt.offset.sign==true){
    29d2:	2354      	movs	r3, #84	; 0x54
    29d4:	5ceb      	ldrb	r3, [r5, r3]
    29d6:	2b00      	cmp	r3, #0
    29d8:	d00a      	beq.n	29f0 <_Z6ppsISRv+0x9c>
			sprintf(messageHMIError,"		error pps: %lus %u	t:%lus",timeProt.offset.second,(unsigned int)(timeProt.offset.halfmillis/2),timeMaster.second);
    29da:	4b0e      	ldr	r3, [pc, #56]	; (2a14 <_Z6ppsISRv+0xc0>)
    29dc:	6cda      	ldr	r2, [r3, #76]	; 0x4c
    29de:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    29e0:	990b      	ldr	r1, [sp, #44]	; 0x2c
    29e2:	085b      	lsrs	r3, r3, #1
    29e4:	9100      	str	r1, [sp, #0]
    29e6:	4810      	ldr	r0, [pc, #64]	; (2a28 <_Z6ppsISRv+0xd4>)
    29e8:	4910      	ldr	r1, [pc, #64]	; (2a2c <_Z6ppsISRv+0xd8>)
    29ea:	4c11      	ldr	r4, [pc, #68]	; (2a30 <_Z6ppsISRv+0xdc>)
    29ec:	47a0      	blx	r4
    29ee:	e009      	b.n	2a04 <_Z6ppsISRv+0xb0>
		}
		else{
			sprintf(messageHMIError,"		error pps: -%lus %u	t:%lus",timeProt.offset.second,(unsigned int)(timeProt.offset.halfmillis/2),timeMaster.second);
    29f0:	4b08      	ldr	r3, [pc, #32]	; (2a14 <_Z6ppsISRv+0xc0>)
    29f2:	6cda      	ldr	r2, [r3, #76]	; 0x4c
    29f4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
    29f6:	990b      	ldr	r1, [sp, #44]	; 0x2c
    29f8:	085b      	lsrs	r3, r3, #1
    29fa:	9100      	str	r1, [sp, #0]
    29fc:	480a      	ldr	r0, [pc, #40]	; (2a28 <_Z6ppsISRv+0xd4>)
    29fe:	490d      	ldr	r1, [pc, #52]	; (2a34 <_Z6ppsISRv+0xe0>)
    2a00:	4c0b      	ldr	r4, [pc, #44]	; (2a30 <_Z6ppsISRv+0xdc>)
    2a02:	47a0      	blx	r4
		}
		sendHMI(messageHMIError);
    2a04:	4808      	ldr	r0, [pc, #32]	; (2a28 <_Z6ppsISRv+0xd4>)
    2a06:	4b0c      	ldr	r3, [pc, #48]	; (2a38 <_Z6ppsISRv+0xe4>)
    2a08:	4798      	blx	r3
	#endif
	
//	Enable_global_interrupt();
}
    2a0a:	b00e      	add	sp, #56	; 0x38
    2a0c:	bd70      	pop	{r4, r5, r6, pc}
    2a0e:	46c0      	nop			; (mov r8, r8)
    2a10:	20004064 	.word	0x20004064
    2a14:	20004140 	.word	0x20004140
    2a18:	00000435 	.word	0x00000435
    2a1c:	00001395 	.word	0x00001395
    2a20:	00003e7f 	.word	0x00003e7f
    2a24:	00001111 	.word	0x00001111
    2a28:	20004028 	.word	0x20004028
    2a2c:	0000d560 	.word	0x0000d560
    2a30:	00009d2d 	.word	0x00009d2d
    2a34:	0000d57c 	.word	0x0000d57c
    2a38:	00003381 	.word	0x00003381

00002a3c <_Z16configurationPPSv>:

void configurationPPS(void){
    2a3c:	b510      	push	{r4, lr}
    2a3e:	b084      	sub	sp, #16
		pc.printf("confif pps\r\n");
    2a40:	480e      	ldr	r0, [pc, #56]	; (2a7c <_Z16configurationPPSv+0x40>)
    2a42:	490f      	ldr	r1, [pc, #60]	; (2a80 <_Z16configurationPPSv+0x44>)
    2a44:	4b0f      	ldr	r3, [pc, #60]	; (2a84 <_Z16configurationPPSv+0x48>)
    2a46:	4798      	blx	r3
	//	pps.rise(ppsISR);
		struct extint_chan_conf eint_chan_conf;
		extint_chan_get_config_defaults(&eint_chan_conf);
    2a48:	ac01      	add	r4, sp, #4
    2a4a:	1c20      	adds	r0, r4, #0
    2a4c:	4b0e      	ldr	r3, [pc, #56]	; (2a88 <_Z16configurationPPSv+0x4c>)
    2a4e:	4798      	blx	r3
		// put the button as EXTINT
		eint_chan_conf.gpio_pin           = PIN_PA28A_EIC_EXTINT8;
    2a50:	231c      	movs	r3, #28
    2a52:	9301      	str	r3, [sp, #4]
		eint_chan_conf.gpio_pin_mux       = MUX_PA28A_EIC_EXTINT8;
    2a54:	2300      	movs	r3, #0
    2a56:	6063      	str	r3, [r4, #4]
		eint_chan_conf.detection_criteria = EXTINT_DETECT_RISING;
    2a58:	2201      	movs	r2, #1
    2a5a:	72e2      	strb	r2, [r4, #11]
		eint_chan_conf.filter_input_signal = false;
    2a5c:	72a3      	strb	r3, [r4, #10]
		
		extint_chan_set_config(8, &eint_chan_conf);
    2a5e:	2008      	movs	r0, #8
    2a60:	1c21      	adds	r1, r4, #0
    2a62:	4b0a      	ldr	r3, [pc, #40]	; (2a8c <_Z16configurationPPSv+0x50>)
    2a64:	4798      	blx	r3
		//configuration callback
		extint_register_callback(&ppsISR,8,EXTINT_CALLBACK_TYPE_DETECT);
    2a66:	480a      	ldr	r0, [pc, #40]	; (2a90 <_Z16configurationPPSv+0x54>)
    2a68:	2108      	movs	r1, #8
    2a6a:	2200      	movs	r2, #0
    2a6c:	4b09      	ldr	r3, [pc, #36]	; (2a94 <_Z16configurationPPSv+0x58>)
    2a6e:	4798      	blx	r3
		//InterruptManager::get()->add_handler(ppsISR, EIC_IRQn);
		//ppsIsrr.attach(&ppsISR);
		//activation callback
		extint_chan_enable_callback(8,EXTINT_CALLBACK_TYPE_DETECT);		
    2a70:	2008      	movs	r0, #8
    2a72:	2100      	movs	r1, #0
    2a74:	4b08      	ldr	r3, [pc, #32]	; (2a98 <_Z16configurationPPSv+0x5c>)
    2a76:	4798      	blx	r3
		
		
    2a78:	b004      	add	sp, #16
    2a7a:	bd10      	pop	{r4, pc}
    2a7c:	200043f0 	.word	0x200043f0
    2a80:	0000d59c 	.word	0x0000d59c
    2a84:	000046e1 	.word	0x000046e1
    2a88:	0000391d 	.word	0x0000391d
    2a8c:	00003931 	.word	0x00003931
    2a90:	00002955 	.word	0x00002955
    2a94:	0000381d 	.word	0x0000381d
    2a98:	00003845 	.word	0x00003845

00002a9c <_Z24resetSofftwareCorrectionv>:
	return a;
}

void resetSofftwareCorrection(void){

		sumOffset.second=0;
    2a9c:	4a04      	ldr	r2, [pc, #16]	; (2ab0 <_Z24resetSofftwareCorrectionv+0x14>)
    2a9e:	2300      	movs	r3, #0
    2aa0:	6013      	str	r3, [r2, #0]
		sumOffset.halfmillis=0;
    2aa2:	6053      	str	r3, [r2, #4]
		timeProt.correction.nbCorrection=0;
    2aa4:	4a03      	ldr	r2, [pc, #12]	; (2ab4 <_Z24resetSofftwareCorrectionv+0x18>)
    2aa6:	6593      	str	r3, [r2, #88]	; 0x58
		timeProt.correction.sumTime.second=0;
    2aa8:	6793      	str	r3, [r2, #120]	; 0x78
		timeProt.correction.sumTime.halfmillis=0;
    2aaa:	67d3      	str	r3, [r2, #124]	; 0x7c
		timeProt.correction.currentTimeOffsetSync.second=0;// to not take the first value
    2aac:	66d3      	str	r3, [r2, #108]	; 0x6c
}
    2aae:	4770      	bx	lr
    2ab0:	20004134 	.word	0x20004134
    2ab4:	20004140 	.word	0x20004140

00002ab8 <_Z11updateClockv>:
			}
			else{
				pc.printf("-%lu s,%u\r\n",clock.second,(unsigned int)clock.halfmillis);
			}
}
void updateClock(void){
    2ab8:	b5f0      	push	{r4, r5, r6, r7, lr}
    2aba:	4647      	mov	r7, r8
    2abc:	b480      	push	{r7}
    2abe:	b090      	sub	sp, #64	; 0x40
		Clock diff;
		if(timeProt.correction.previousSignOffset==timeProt.offset.sign){
    2ac0:	4a6f      	ldr	r2, [pc, #444]	; (2c80 <_Z11updateClockv+0x1c8>)
    2ac2:	2354      	movs	r3, #84	; 0x54
    2ac4:	5cd3      	ldrb	r3, [r2, r3]
    2ac6:	b2db      	uxtb	r3, r3
    2ac8:	21d6      	movs	r1, #214	; 0xd6
    2aca:	5c52      	ldrb	r2, [r2, r1]
    2acc:	429a      	cmp	r2, r3
    2ace:	d14f      	bne.n	2b70 <_Z11updateClockv+0xb8>
			timeProt.correction.previousSignOffset=timeProt.offset.sign;
    2ad0:	4c6b      	ldr	r4, [pc, #428]	; (2c80 <_Z11updateClockv+0x1c8>)
    2ad2:	2354      	movs	r3, #84	; 0x54
    2ad4:	5ce2      	ldrb	r2, [r4, r3]
    2ad6:	3382      	adds	r3, #130	; 0x82
    2ad8:	54e2      	strb	r2, [r4, r3]
			timeProt.correction.previoustimeOffset.second=timeProt.correction.currentTimeOffsetSync.second;
    2ada:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
    2adc:	6623      	str	r3, [r4, #96]	; 0x60
			timeProt.correction.previoustimeOffset.halfmillis=timeProt.correction.currentTimeOffsetSync.halfmillis;
    2ade:	6f23      	ldr	r3, [r4, #112]	; 0x70
    2ae0:	6663      	str	r3, [r4, #100]	; 0x64
			readClock(&timeProt.correction.currentTimeOffsetSync);
    2ae2:	1c20      	adds	r0, r4, #0
    2ae4:	306c      	adds	r0, #108	; 0x6c
    2ae6:	4b67      	ldr	r3, [pc, #412]	; (2c84 <_Z11updateClockv+0x1cc>)
    2ae8:	4798      	blx	r3
			if(timeProt.correction.previoustimeOffset.second!=0){
    2aea:	6e23      	ldr	r3, [r4, #96]	; 0x60
    2aec:	2b00      	cmp	r3, #0
    2aee:	d041      	beq.n	2b74 <_Z11updateClockv+0xbc>
				if(sup(timeProt.correction.currentTimeOffsetSync,timeProt.correction.previoustimeOffset)){
    2af0:	4a63      	ldr	r2, [pc, #396]	; (2c80 <_Z11updateClockv+0x1c8>)
    2af2:	1c13      	adds	r3, r2, #0
    2af4:	3364      	adds	r3, #100	; 0x64
    2af6:	4669      	mov	r1, sp
    2af8:	cb11      	ldmia	r3!, {r0, r4}
    2afa:	c111      	stmia	r1!, {r0, r4}
    2afc:	6e13      	ldr	r3, [r2, #96]	; 0x60
    2afe:	6ed0      	ldr	r0, [r2, #108]	; 0x6c
    2b00:	6f11      	ldr	r1, [r2, #112]	; 0x70
    2b02:	6f52      	ldr	r2, [r2, #116]	; 0x74
    2b04:	4c60      	ldr	r4, [pc, #384]	; (2c88 <_Z11updateClockv+0x1d0>)
    2b06:	47a0      	blx	r4
    2b08:	2800      	cmp	r0, #0
    2b0a:	d02e      	beq.n	2b6a <_Z11updateClockv+0xb2>
												
					diff=subClock(timeProt.correction.currentTimeOffsetSync,timeProt.correction.previoustimeOffset);
    2b0c:	ae0a      	add	r6, sp, #40	; 0x28
    2b0e:	4c5c      	ldr	r4, [pc, #368]	; (2c80 <_Z11updateClockv+0x1c8>)
    2b10:	1c23      	adds	r3, r4, #0
    2b12:	3360      	adds	r3, #96	; 0x60
    2b14:	466a      	mov	r2, sp
    2b16:	cb23      	ldmia	r3!, {r0, r1, r5}
    2b18:	c223      	stmia	r2!, {r0, r1, r5}
    2b1a:	1c30      	adds	r0, r6, #0
    2b1c:	6ee1      	ldr	r1, [r4, #108]	; 0x6c
    2b1e:	6f22      	ldr	r2, [r4, #112]	; 0x70
    2b20:	6f63      	ldr	r3, [r4, #116]	; 0x74
    2b22:	4d5a      	ldr	r5, [pc, #360]	; (2c8c <_Z11updateClockv+0x1d4>)
    2b24:	47a8      	blx	r5
					//printf("diff: ");
					//printfClock(diff);
					timeProt.correction.sumTime=sumClock(timeProt.correction.sumTime,diff);
    2b26:	ad06      	add	r5, sp, #24
    2b28:	466b      	mov	r3, sp
    2b2a:	ce07      	ldmia	r6!, {r0, r1, r2}
    2b2c:	c307      	stmia	r3!, {r0, r1, r2}
    2b2e:	1c28      	adds	r0, r5, #0
    2b30:	6fa1      	ldr	r1, [r4, #120]	; 0x78
    2b32:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
    2b34:	2380      	movs	r3, #128	; 0x80
    2b36:	58e3      	ldr	r3, [r4, r3]
    2b38:	4e55      	ldr	r6, [pc, #340]	; (2c90 <_Z11updateClockv+0x1d8>)
    2b3a:	46b0      	mov	r8, r6
    2b3c:	47b0      	blx	r6
    2b3e:	1c23      	adds	r3, r4, #0
    2b40:	3378      	adds	r3, #120	; 0x78
    2b42:	1c2a      	adds	r2, r5, #0
    2b44:	ca43      	ldmia	r2!, {r0, r1, r6}
    2b46:	c343      	stmia	r3!, {r0, r1, r6}
					sumOffset=sumClock(sumOffset,timeProt.offset);
    2b48:	4e52      	ldr	r6, [pc, #328]	; (2c94 <_Z11updateClockv+0x1dc>)
    2b4a:	1c23      	adds	r3, r4, #0
    2b4c:	334c      	adds	r3, #76	; 0x4c
    2b4e:	466a      	mov	r2, sp
    2b50:	cb83      	ldmia	r3!, {r0, r1, r7}
    2b52:	c283      	stmia	r2!, {r0, r1, r7}
    2b54:	1c28      	adds	r0, r5, #0
    2b56:	6831      	ldr	r1, [r6, #0]
    2b58:	6872      	ldr	r2, [r6, #4]
    2b5a:	68b3      	ldr	r3, [r6, #8]
    2b5c:	47c0      	blx	r8
    2b5e:	cd0e      	ldmia	r5!, {r1, r2, r3}
    2b60:	c60e      	stmia	r6!, {r1, r2, r3}
					printf("sumClock: ");
					printfClock(timeProt.correction.sumTime);
					
					printf("nb corrr  : %d",timeProt.correction.nbCorrection);
					*/
					timeProt.correction.nbCorrection++;
    2b62:	6da3      	ldr	r3, [r4, #88]	; 0x58
    2b64:	3301      	adds	r3, #1
    2b66:	65a3      	str	r3, [r4, #88]	; 0x58
    2b68:	e004      	b.n	2b74 <_Z11updateClockv+0xbc>
				}
				else{
					resetSofftwareCorrection();
    2b6a:	4b4b      	ldr	r3, [pc, #300]	; (2c98 <_Z11updateClockv+0x1e0>)
    2b6c:	4798      	blx	r3
    2b6e:	e001      	b.n	2b74 <_Z11updateClockv+0xbc>
				}
			}
		}
		else{
			resetSofftwareCorrection();
    2b70:	4b49      	ldr	r3, [pc, #292]	; (2c98 <_Z11updateClockv+0x1e0>)
    2b72:	4798      	blx	r3
		}
		timeProt.correction.previousSignOffset=timeProt.offset.sign;
    2b74:	4c42      	ldr	r4, [pc, #264]	; (2c80 <_Z11updateClockv+0x1c8>)
    2b76:	2354      	movs	r3, #84	; 0x54
    2b78:	5ce2      	ldrb	r2, [r4, r3]
    2b7a:	3382      	adds	r3, #130	; 0x82
    2b7c:	54e2      	strb	r2, [r4, r3]
		Clock timeCopy;
		/////////////////protected
		readClock(&timeCopy);		
    2b7e:	ae0d      	add	r6, sp, #52	; 0x34
    2b80:	1c30      	adds	r0, r6, #0
    2b82:	4b40      	ldr	r3, [pc, #256]	; (2c84 <_Z11updateClockv+0x1cc>)
    2b84:	4798      	blx	r3
		timeCopy=sumClock(timeCopy,timeProt.offset);//add offset
    2b86:	ad06      	add	r5, sp, #24
    2b88:	1c23      	adds	r3, r4, #0
    2b8a:	334c      	adds	r3, #76	; 0x4c
    2b8c:	466a      	mov	r2, sp
    2b8e:	cb13      	ldmia	r3!, {r0, r1, r4}
    2b90:	c213      	stmia	r2!, {r0, r1, r4}
    2b92:	1c28      	adds	r0, r5, #0
    2b94:	990d      	ldr	r1, [sp, #52]	; 0x34
    2b96:	6872      	ldr	r2, [r6, #4]
    2b98:	68b3      	ldr	r3, [r6, #8]
    2b9a:	4c3d      	ldr	r4, [pc, #244]	; (2c90 <_Z11updateClockv+0x1d8>)
    2b9c:	47a0      	blx	r4
    2b9e:	1c2b      	adds	r3, r5, #0
    2ba0:	cb07      	ldmia	r3!, {r0, r1, r2}
    2ba2:	c607      	stmia	r6!, {r0, r1, r2}
		writeClock(timeCopy);
    2ba4:	980d      	ldr	r0, [sp, #52]	; 0x34
    2ba6:	6869      	ldr	r1, [r5, #4]
    2ba8:	68aa      	ldr	r2, [r5, #8]
    2baa:	4b3c      	ldr	r3, [pc, #240]	; (2c9c <_Z11updateClockv+0x1e4>)
    2bac:	4798      	blx	r3
		/////////////////
		static bool state;
		state=stateLed;
    2bae:	4b3c      	ldr	r3, [pc, #240]	; (2ca0 <_Z11updateClockv+0x1e8>)
    2bb0:	781a      	ldrb	r2, [r3, #0]
    2bb2:	4b3c      	ldr	r3, [pc, #240]	; (2ca4 <_Z11updateClockv+0x1ec>)
    2bb4:	701a      	strb	r2, [r3, #0]
		if(timeManage.halfmillis<(RTC_FREQ/2)){//all 500ms
    2bb6:	4b3c      	ldr	r3, [pc, #240]	; (2ca8 <_Z11updateClockv+0x1f0>)
    2bb8:	685a      	ldr	r2, [r3, #4]
    2bba:	4b3c      	ldr	r3, [pc, #240]	; (2cac <_Z11updateClockv+0x1f4>)
    2bbc:	429a      	cmp	r2, r3
    2bbe:	d803      	bhi.n	2bc8 <_Z11updateClockv+0x110>
			stateLed=LOW;
    2bc0:	2200      	movs	r2, #0
    2bc2:	4b37      	ldr	r3, [pc, #220]	; (2ca0 <_Z11updateClockv+0x1e8>)
    2bc4:	701a      	strb	r2, [r3, #0]
    2bc6:	e002      	b.n	2bce <_Z11updateClockv+0x116>
		}
		else{
			stateLed=HIGH;
    2bc8:	2201      	movs	r2, #1
    2bca:	4b35      	ldr	r3, [pc, #212]	; (2ca0 <_Z11updateClockv+0x1e8>)
    2bcc:	701a      	strb	r2, [r3, #0]
		}
		if(state!=stateLed){
    2bce:	4b34      	ldr	r3, [pc, #208]	; (2ca0 <_Z11updateClockv+0x1e8>)
    2bd0:	781b      	ldrb	r3, [r3, #0]
    2bd2:	b2db      	uxtb	r3, r3
    2bd4:	4a33      	ldr	r2, [pc, #204]	; (2ca4 <_Z11updateClockv+0x1ec>)
    2bd6:	7812      	ldrb	r2, [r2, #0]
    2bd8:	429a      	cmp	r2, r3
    2bda:	d017      	beq.n	2c0c <_Z11updateClockv+0x154>
			led = stateLed;
    2bdc:	4b30      	ldr	r3, [pc, #192]	; (2ca0 <_Z11updateClockv+0x1e8>)
    2bde:	781c      	ldrb	r4, [r3, #0]
    2be0:	b2e4      	uxtb	r4, r4
    __I uint32_t *OUT;
} gpio_t;

static inline void gpio_write(gpio_t *obj, int value)
{
    MBED_ASSERT(obj->pin != (PinName)NC);
    2be2:	4b33      	ldr	r3, [pc, #204]	; (2cb0 <_Z11updateClockv+0x1f8>)
    2be4:	781b      	ldrb	r3, [r3, #0]
    2be6:	b25b      	sxtb	r3, r3
    2be8:	3301      	adds	r3, #1
    2bea:	d104      	bne.n	2bf6 <_Z11updateClockv+0x13e>
    2bec:	4831      	ldr	r0, [pc, #196]	; (2cb4 <_Z11updateClockv+0x1fc>)
    2bee:	4932      	ldr	r1, [pc, #200]	; (2cb8 <_Z11updateClockv+0x200>)
    2bf0:	2228      	movs	r2, #40	; 0x28
    2bf2:	4b32      	ldr	r3, [pc, #200]	; (2cbc <_Z11updateClockv+0x204>)
    2bf4:	4798      	blx	r3
    if (value)
    2bf6:	2c00      	cmp	r4, #0
    2bf8:	d004      	beq.n	2c04 <_Z11updateClockv+0x14c>
        *obj->OUTSET = obj->mask;
    2bfa:	4b2d      	ldr	r3, [pc, #180]	; (2cb0 <_Z11updateClockv+0x1f8>)
    2bfc:	691a      	ldr	r2, [r3, #16]
    2bfe:	685b      	ldr	r3, [r3, #4]
    2c00:	6013      	str	r3, [r2, #0]
    2c02:	e003      	b.n	2c0c <_Z11updateClockv+0x154>
    else
        *obj->OUTCLR = obj->mask;
    2c04:	4b2a      	ldr	r3, [pc, #168]	; (2cb0 <_Z11updateClockv+0x1f8>)
    2c06:	68da      	ldr	r2, [r3, #12]
    2c08:	685b      	ldr	r3, [r3, #4]
    2c0a:	6013      	str	r3, [r2, #0]
			//	if(synchroLed!=NULL){
			//		xSemaphoreGiveFromISR( synchroLed,NULL);
			//	}
		}
		if(timeProt.offset.sign==true){
    2c0c:	2354      	movs	r3, #84	; 0x54
    2c0e:	4a1c      	ldr	r2, [pc, #112]	; (2c80 <_Z11updateClockv+0x1c8>)
    2c10:	5cd3      	ldrb	r3, [r2, r3]
    2c12:	2b00      	cmp	r3, #0
    2c14:	d016      	beq.n	2c44 <_Z11updateClockv+0x18c>
			sprintf(messageHMIOffset,"		update clock offset: +%lus,%ld[+%lus,%lu ms,~%lu us]	t: %lu,%lu",timeProt.offset.second,(long unsigned int)timeProt.offset.halfmillis,timeProt.offset.second,timeProt.offset.halfmillis/32,(timeProt.offset.halfmillis%32)*31,timeCopy.second,timeCopy.halfmillis);
    2c16:	1c11      	adds	r1, r2, #0
    2c18:	6cd2      	ldr	r2, [r2, #76]	; 0x4c
    2c1a:	6d0b      	ldr	r3, [r1, #80]	; 0x50
    2c1c:	6cce      	ldr	r6, [r1, #76]	; 0x4c
    2c1e:	6d08      	ldr	r0, [r1, #80]	; 0x50
    2c20:	6d09      	ldr	r1, [r1, #80]	; 0x50
    2c22:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    2c24:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    2c26:	9600      	str	r6, [sp, #0]
    2c28:	0940      	lsrs	r0, r0, #5
    2c2a:	9001      	str	r0, [sp, #4]
    2c2c:	201f      	movs	r0, #31
    2c2e:	4001      	ands	r1, r0
    2c30:	0148      	lsls	r0, r1, #5
    2c32:	1a41      	subs	r1, r0, r1
    2c34:	9102      	str	r1, [sp, #8]
    2c36:	9503      	str	r5, [sp, #12]
    2c38:	9404      	str	r4, [sp, #16]
    2c3a:	4821      	ldr	r0, [pc, #132]	; (2cc0 <_Z11updateClockv+0x208>)
    2c3c:	4921      	ldr	r1, [pc, #132]	; (2cc4 <_Z11updateClockv+0x20c>)
    2c3e:	4c22      	ldr	r4, [pc, #136]	; (2cc8 <_Z11updateClockv+0x210>)
    2c40:	47a0      	blx	r4
    2c42:	e015      	b.n	2c70 <_Z11updateClockv+0x1b8>
		}
		else{
			sprintf(messageHMIOffset,"		update clock offset: -%lus,%ld[-%lus,%lums,~%lu us]	t: %lu,%lu",timeProt.offset.second,(long unsigned int)timeProt.offset.halfmillis,timeProt.offset.second,timeProt.offset.halfmillis/32,(timeProt.offset.halfmillis%32)*31,timeCopy.second,timeCopy.halfmillis);
    2c44:	490e      	ldr	r1, [pc, #56]	; (2c80 <_Z11updateClockv+0x1c8>)
    2c46:	6cca      	ldr	r2, [r1, #76]	; 0x4c
    2c48:	6d0b      	ldr	r3, [r1, #80]	; 0x50
    2c4a:	6cce      	ldr	r6, [r1, #76]	; 0x4c
    2c4c:	6d08      	ldr	r0, [r1, #80]	; 0x50
    2c4e:	6d09      	ldr	r1, [r1, #80]	; 0x50
    2c50:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    2c52:	9c0e      	ldr	r4, [sp, #56]	; 0x38
    2c54:	9600      	str	r6, [sp, #0]
    2c56:	0940      	lsrs	r0, r0, #5
    2c58:	9001      	str	r0, [sp, #4]
    2c5a:	201f      	movs	r0, #31
    2c5c:	4001      	ands	r1, r0
    2c5e:	0148      	lsls	r0, r1, #5
    2c60:	1a41      	subs	r1, r0, r1
    2c62:	9102      	str	r1, [sp, #8]
    2c64:	9503      	str	r5, [sp, #12]
    2c66:	9404      	str	r4, [sp, #16]
    2c68:	4815      	ldr	r0, [pc, #84]	; (2cc0 <_Z11updateClockv+0x208>)
    2c6a:	4918      	ldr	r1, [pc, #96]	; (2ccc <_Z11updateClockv+0x214>)
    2c6c:	4c16      	ldr	r4, [pc, #88]	; (2cc8 <_Z11updateClockv+0x210>)
    2c6e:	47a0      	blx	r4
		}
		sendHMI(messageHMIOffset);
    2c70:	4813      	ldr	r0, [pc, #76]	; (2cc0 <_Z11updateClockv+0x208>)
    2c72:	4b17      	ldr	r3, [pc, #92]	; (2cd0 <_Z11updateClockv+0x218>)
    2c74:	4798      	blx	r3
}
    2c76:	b010      	add	sp, #64	; 0x40
    2c78:	bc04      	pop	{r2}
    2c7a:	4690      	mov	r8, r2
    2c7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2c7e:	46c0      	nop			; (mov r8, r8)
    2c80:	20004140 	.word	0x20004140
    2c84:	00001395 	.word	0x00001395
    2c88:	000010a1 	.word	0x000010a1
    2c8c:	00001111 	.word	0x00001111
    2c90:	00001215 	.word	0x00001215
    2c94:	20004134 	.word	0x20004134
    2c98:	00002a9d 	.word	0x00002a9d
    2c9c:	000013f9 	.word	0x000013f9
    2ca0:	20003d20 	.word	0x20003d20
    2ca4:	20004130 	.word	0x20004130
    2ca8:	200000bc 	.word	0x200000bc
    2cac:	00003e7f 	.word	0x00003e7f
    2cb0:	20003d28 	.word	0x20003d28
    2cb4:	0000d34c 	.word	0x0000d34c
    2cb8:	0000d364 	.word	0x0000d364
    2cbc:	00004709 	.word	0x00004709
    2cc0:	20004068 	.word	0x20004068
    2cc4:	0000d698 	.word	0x0000d698
    2cc8:	00009d2d 	.word	0x00009d2d
    2ccc:	0000d6dc 	.word	0x0000d6dc
    2cd0:	00003381 	.word	0x00003381

00002cd4 <_Z11calculCRCID8enumTypehPKhh>:
		networkTx(send,length+4+j);
}
uint8_t calculCRC(const Type type,const uint8_t length,const uint8_t* data){
	return calculCRCID(type,length,data,IDDEVICE);
}
uint8_t calculCRCID(const Type type,const uint8_t length,const uint8_t* data,const uint8_t id){
    2cd4:	18cb      	adds	r3, r1, r3
	uint8_t crc;
	uint8_t i;
	crc=type+length+id;
    2cd6:	18c0      	adds	r0, r0, r3
    2cd8:	b2c0      	uxtb	r0, r0
	for(i=0;i<length;i++){
    2cda:	2900      	cmp	r1, #0
    2cdc:	d00a      	beq.n	2cf4 <_Z11calculCRCID8enumTypehPKhh+0x20>
    2cde:	1c13      	adds	r3, r2, #0
    2ce0:	3901      	subs	r1, #1
    2ce2:	b2c9      	uxtb	r1, r1
    2ce4:	3101      	adds	r1, #1
    2ce6:	1852      	adds	r2, r2, r1
		crc=crc+data[i];
    2ce8:	7819      	ldrb	r1, [r3, #0]
    2cea:	1840      	adds	r0, r0, r1
    2cec:	b2c0      	uxtb	r0, r0
    2cee:	3301      	adds	r3, #1
}
uint8_t calculCRCID(const Type type,const uint8_t length,const uint8_t* data,const uint8_t id){
	uint8_t crc;
	uint8_t i;
	crc=type+length+id;
	for(i=0;i<length;i++){
    2cf0:	4293      	cmp	r3, r2
    2cf2:	d1f9      	bne.n	2ce8 <_Z11calculCRCID8enumTypehPKhh+0x14>
		crc=crc+data[i];
	}
	
	return crc;
    2cf4:	4770      	bx	lr
    2cf6:	46c0      	nop			; (mov r8, r8)

00002cf8 <_Z9calculCRC8enumTypehPKh>:
		}
		send[3+i+j]=calculCRC(type,length,data);
		vTaskDelay(500/portTICK_RATE_MS);
		networkTx(send,length+4+j);
}
uint8_t calculCRC(const Type type,const uint8_t length,const uint8_t* data){
    2cf8:	b510      	push	{r4, lr}
	return calculCRCID(type,length,data,IDDEVICE);
    2cfa:	2302      	movs	r3, #2
    2cfc:	4c01      	ldr	r4, [pc, #4]	; (2d04 <_Z9calculCRC8enumTypehPKh+0xc>)
    2cfe:	47a0      	blx	r4
}
    2d00:	bd10      	pop	{r4, pc}
    2d02:	46c0      	nop			; (mov r8, r8)
    2d04:	00002cd5 	.word	0x00002cd5

00002d08 <_Z4send8enumTypehPKh>:
	send(type,0,NULL);
	sendHMI("	delay request send");
}
#endif

void send(const Type type,const uint8_t length,const uint8_t* data){
    2d08:	b5f0      	push	{r4, r5, r6, r7, lr}
    2d0a:	4647      	mov	r7, r8
    2d0c:	b480      	push	{r7}
    2d0e:	af00      	add	r7, sp, #0
    2d10:	1c0c      	adds	r4, r1, #0
		uint8_t i;
		uint8_t j=0;
		uint8_t send[length+4];//to complete
    2d12:	1c0b      	adds	r3, r1, #0
    2d14:	330b      	adds	r3, #11
    2d16:	08db      	lsrs	r3, r3, #3
    2d18:	00db      	lsls	r3, r3, #3
    2d1a:	4669      	mov	r1, sp
    2d1c:	1acb      	subs	r3, r1, r3
    2d1e:	469d      	mov	sp, r3
    2d20:	466d      	mov	r5, sp
		send[0]=HEADER;
    2d22:	2355      	movs	r3, #85	; 0x55
    2d24:	702b      	strb	r3, [r5, #0]
		send[1]=IDDEVICE;	
    2d26:	3b53      	subs	r3, #83	; 0x53
    2d28:	706b      	strb	r3, [r5, #1]
		send[2]=type;
    2d2a:	70a8      	strb	r0, [r5, #2]
		if(length!=0){
    2d2c:	2c00      	cmp	r4, #0
    2d2e:	d00b      	beq.n	2d48 <_Z4send8enumTypehPKh+0x40>
			send[3]=length;//length data
    2d30:	70ec      	strb	r4, [r5, #3]
    2d32:	2300      	movs	r3, #0
    2d34:	18e9      	adds	r1, r5, r3
			j=1;
		}
		for(i=0;i<length;i++){
			send[3+i+j]=data[i];
    2d36:	5cd6      	ldrb	r6, [r2, r3]
    2d38:	710e      	strb	r6, [r1, #4]
    2d3a:	3301      	adds	r3, #1
		send[2]=type;
		if(length!=0){
			send[3]=length;//length data
			j=1;
		}
		for(i=0;i<length;i++){
    2d3c:	b2d9      	uxtb	r1, r3
    2d3e:	428c      	cmp	r4, r1
    2d40:	d8f8      	bhi.n	2d34 <_Z4send8enumTypehPKh+0x2c>
    2d42:	1c23      	adds	r3, r4, #0
		send[0]=HEADER;
		send[1]=IDDEVICE;	
		send[2]=type;
		if(length!=0){
			send[3]=length;//length data
			j=1;
    2d44:	2601      	movs	r6, #1
    2d46:	e001      	b.n	2d4c <_Z4send8enumTypehPKh+0x44>
}
#endif

void send(const Type type,const uint8_t length,const uint8_t* data){
		uint8_t i;
		uint8_t j=0;
    2d48:	2600      	movs	r6, #0
		send[2]=type;
		if(length!=0){
			send[3]=length;//length data
			j=1;
		}
		for(i=0;i<length;i++){
    2d4a:	2300      	movs	r3, #0
			send[3+i+j]=data[i];
		}
		send[3+i+j]=calculCRC(type,length,data);
    2d4c:	3303      	adds	r3, #3
    2d4e:	4698      	mov	r8, r3
    2d50:	44b0      	add	r8, r6
    2d52:	1c21      	adds	r1, r4, #0
    2d54:	4b08      	ldr	r3, [pc, #32]	; (2d78 <_Z4send8enumTypehPKh+0x70>)
    2d56:	4798      	blx	r3
    2d58:	4643      	mov	r3, r8
    2d5a:	54e8      	strb	r0, [r5, r3]
		vTaskDelay(500/portTICK_RATE_MS);
    2d5c:	20fa      	movs	r0, #250	; 0xfa
    2d5e:	0040      	lsls	r0, r0, #1
    2d60:	4b06      	ldr	r3, [pc, #24]	; (2d7c <_Z4send8enumTypehPKh+0x74>)
    2d62:	4798      	blx	r3
    2d64:	3404      	adds	r4, #4
		networkTx(send,length+4+j);
    2d66:	1931      	adds	r1, r6, r4
    2d68:	b2c9      	uxtb	r1, r1
    2d6a:	1c28      	adds	r0, r5, #0
    2d6c:	4b04      	ldr	r3, [pc, #16]	; (2d80 <_Z4send8enumTypehPKh+0x78>)
    2d6e:	4798      	blx	r3
}
    2d70:	46bd      	mov	sp, r7
    2d72:	bc04      	pop	{r2}
    2d74:	4690      	mov	r8, r2
    2d76:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2d78:	00002cf9 	.word	0x00002cf9
    2d7c:	00000b91 	.word	0x00000b91
    2d80:	00001825 	.word	0x00001825

00002d84 <_Z12crcErrorsendv>:
		else{
			sprintf(messageHMIOffset,"		update clock offset: -%lus,%ld[-%lus,%lums,~%lu us]	t: %lu,%lu",timeProt.offset.second,(long unsigned int)timeProt.offset.halfmillis,timeProt.offset.second,timeProt.offset.halfmillis/32,(timeProt.offset.halfmillis%32)*31,timeCopy.second,timeCopy.halfmillis);
		}
		sendHMI(messageHMIOffset);
}
void crcErrorsend(void){
    2d84:	b508      	push	{r3, lr}
	
	Type type=CRCERROR;
	send(type,0,NULL);
    2d86:	2006      	movs	r0, #6
    2d88:	2100      	movs	r1, #0
    2d8a:	2200      	movs	r2, #0
    2d8c:	4b02      	ldr	r3, [pc, #8]	; (2d98 <_Z12crcErrorsendv+0x14>)
    2d8e:	4798      	blx	r3
	sendHMI("	crc cmd send");
    2d90:	4802      	ldr	r0, [pc, #8]	; (2d9c <_Z12crcErrorsendv+0x18>)
    2d92:	4b03      	ldr	r3, [pc, #12]	; (2da0 <_Z12crcErrorsendv+0x1c>)
    2d94:	4798      	blx	r3
	
}
    2d96:	bd08      	pop	{r3, pc}
    2d98:	00002d09 	.word	0x00002d09
    2d9c:	0000d720 	.word	0x0000d720
    2da0:	00003381 	.word	0x00003381

00002da4 <_Z12delayRequestv>:
	timeProt.timePreviousState=xTaskGetTickCount();
}
#endif

#ifdef SLAVEMODE
void delayRequest(void){
    2da4:	b508      	push	{r3, lr}
	
	Type type=DELAYREQUEST;
	readClock(&timeProt.t3);
    2da6:	4806      	ldr	r0, [pc, #24]	; (2dc0 <_Z12delayRequestv+0x1c>)
    2da8:	30f4      	adds	r0, #244	; 0xf4
    2daa:	4b06      	ldr	r3, [pc, #24]	; (2dc4 <_Z12delayRequestv+0x20>)
    2dac:	4798      	blx	r3
	send(type,0,NULL);
    2dae:	2002      	movs	r0, #2
    2db0:	2100      	movs	r1, #0
    2db2:	2200      	movs	r2, #0
    2db4:	4b04      	ldr	r3, [pc, #16]	; (2dc8 <_Z12delayRequestv+0x24>)
    2db6:	4798      	blx	r3
	sendHMI("	delay request send");
    2db8:	4804      	ldr	r0, [pc, #16]	; (2dcc <_Z12delayRequestv+0x28>)
    2dba:	4b05      	ldr	r3, [pc, #20]	; (2dd0 <_Z12delayRequestv+0x2c>)
    2dbc:	4798      	blx	r3
}
    2dbe:	bd08      	pop	{r3, pc}
    2dc0:	20004140 	.word	0x20004140
    2dc4:	00001395 	.word	0x00001395
    2dc8:	00002d09 	.word	0x00002d09
    2dcc:	0000d730 	.word	0x0000d730
    2dd0:	00003381 	.word	0x00003381

00002dd4 <_Z15stateManagementv>:
		}
		
	}
	return false;	
}
void stateManagement(){
    2dd4:	b510      	push	{r4, lr}
	if(timeProt.state!=TIMEPROT_IDLE){
    2dd6:	23d8      	movs	r3, #216	; 0xd8
    2dd8:	4a0e      	ldr	r2, [pc, #56]	; (2e14 <_Z15stateManagementv+0x40>)
    2dda:	5cd3      	ldrb	r3, [r2, r3]
    2ddc:	2b00      	cmp	r3, #0
    2dde:	d018      	beq.n	2e12 <_Z15stateManagementv+0x3e>
		if((xTaskGetTickCount()-timeProt.timePreviousState)>TIMOUTSTATE/portTICK_RATE_MS){//time out 
    2de0:	4b0d      	ldr	r3, [pc, #52]	; (2e18 <_Z15stateManagementv+0x44>)
    2de2:	4798      	blx	r3
    2de4:	4b0b      	ldr	r3, [pc, #44]	; (2e14 <_Z15stateManagementv+0x40>)
    2de6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    2de8:	1ac0      	subs	r0, r0, r3
    2dea:	4b0c      	ldr	r3, [pc, #48]	; (2e1c <_Z15stateManagementv+0x48>)
    2dec:	4298      	cmp	r0, r3
    2dee:	d910      	bls.n	2e12 <_Z15stateManagementv+0x3e>
			timeProt.timePreviousState=xTaskGetTickCount();
    2df0:	4b09      	ldr	r3, [pc, #36]	; (2e18 <_Z15stateManagementv+0x44>)
    2df2:	4798      	blx	r3
    2df4:	4c07      	ldr	r4, [pc, #28]	; (2e14 <_Z15stateManagementv+0x40>)
    2df6:	6320      	str	r0, [r4, #48]	; 0x30
			sendHMI("WARNING TIMEOUT arrived"); 
    2df8:	4809      	ldr	r0, [pc, #36]	; (2e20 <_Z15stateManagementv+0x4c>)
    2dfa:	4b0a      	ldr	r3, [pc, #40]	; (2e24 <_Z15stateManagementv+0x50>)
    2dfc:	4798      	blx	r3

			switch(timeProt.state){
    2dfe:	23d8      	movs	r3, #216	; 0xd8
    2e00:	5ce3      	ldrb	r3, [r4, r3]
    2e02:	2b03      	cmp	r3, #3
    2e04:	d102      	bne.n	2e0c <_Z15stateManagementv+0x38>
					sync();
					//delayResponse(timeProt.previousId);
				break;
			#else
				case TIMEPROT_DELAYRESPONSE:
					delayRequest();
    2e06:	4b08      	ldr	r3, [pc, #32]	; (2e28 <_Z15stateManagementv+0x54>)
    2e08:	4798      	blx	r3
				break;
    2e0a:	e002      	b.n	2e12 <_Z15stateManagementv+0x3e>
			#endif
				default:
					sendHMI("ERROR incorrect state");
    2e0c:	4807      	ldr	r0, [pc, #28]	; (2e2c <_Z15stateManagementv+0x58>)
    2e0e:	4b05      	ldr	r3, [pc, #20]	; (2e24 <_Z15stateManagementv+0x50>)
    2e10:	4798      	blx	r3
				break;
			}
		}
	}
}
    2e12:	bd10      	pop	{r4, pc}
    2e14:	20004140 	.word	0x20004140
    2e18:	0000095d 	.word	0x0000095d
    2e1c:	00001388 	.word	0x00001388
    2e20:	0000d744 	.word	0x0000d744
    2e24:	00003381 	.word	0x00003381
    2e28:	00002da5 	.word	0x00002da5
    2e2c:	0000d75c 	.word	0x0000d75c

00002e30 <_Z8receiverv>:
	Type type=CRCERROR;
	send(type,0,NULL);
	sendHMI("	crc cmd send");
	
}
void receiver(){
    2e30:	b5f0      	push	{r4, r5, r6, r7, lr}
    2e32:	464f      	mov	r7, r9
    2e34:	4646      	mov	r6, r8
    2e36:	b4c0      	push	{r6, r7}
    2e38:	b0a5      	sub	sp, #148	; 0x94
			#ifdef SLAVEMODE
			Clock t2={0,0,true};
    2e3a:	a909      	add	r1, sp, #36	; 0x24
    2e3c:	2300      	movs	r3, #0
    2e3e:	9309      	str	r3, [sp, #36]	; 0x24
    2e40:	930a      	str	r3, [sp, #40]	; 0x28
    2e42:	2201      	movs	r2, #1
    2e44:	720a      	strb	r2, [r1, #8]
			Clock t3={0,0,true};
    2e46:	a90c      	add	r1, sp, #48	; 0x30
    2e48:	930c      	str	r3, [sp, #48]	; 0x30
    2e4a:	930d      	str	r3, [sp, #52]	; 0x34
    2e4c:	720a      	strb	r2, [r1, #8]
			Clock t2subt1={0,0,true};
    2e4e:	a90f      	add	r1, sp, #60	; 0x3c
    2e50:	930f      	str	r3, [sp, #60]	; 0x3c
    2e52:	9310      	str	r3, [sp, #64]	; 0x40
    2e54:	720a      	strb	r2, [r1, #8]
			Clock t4subt3={0,0,true};
    2e56:	a912      	add	r1, sp, #72	; 0x48
    2e58:	9312      	str	r3, [sp, #72]	; 0x48
    2e5a:	9313      	str	r3, [sp, #76]	; 0x4c
    2e5c:	720a      	strb	r2, [r1, #8]
			Clock delayL={0,0,true};
    2e5e:	a915      	add	r1, sp, #84	; 0x54
    2e60:	9315      	str	r3, [sp, #84]	; 0x54
    2e62:	9316      	str	r3, [sp, #88]	; 0x58
    2e64:	720a      	strb	r2, [r1, #8]
			Clock timeMaster={0,0,true};	
    2e66:	a918      	add	r1, sp, #96	; 0x60
    2e68:	9318      	str	r3, [sp, #96]	; 0x60
    2e6a:	9319      	str	r3, [sp, #100]	; 0x64
    2e6c:	720a      	strb	r2, [r1, #8]
			uint8_t i=0;
			#endif
			Data data;
		
			if(networkAvailable()){
    2e6e:	4bb9      	ldr	r3, [pc, #740]	; (3154 <_Z8receiverv+0x324>)
    2e70:	4798      	blx	r3
    2e72:	2800      	cmp	r0, #0
    2e74:	d100      	bne.n	2e78 <_Z8receiverv+0x48>
    2e76:	e167      	b.n	3148 <_Z8receiverv+0x318>
				vTaskDelay(100);
    2e78:	2064      	movs	r0, #100	; 0x64
    2e7a:	4bb7      	ldr	r3, [pc, #732]	; (3158 <_Z8receiverv+0x328>)
    2e7c:	4798      	blx	r3
				if(networkRead()==HEADER){
    2e7e:	4bb7      	ldr	r3, [pc, #732]	; (315c <_Z8receiverv+0x32c>)
    2e80:	4798      	blx	r3
    2e82:	2855      	cmp	r0, #85	; 0x55
    2e84:	d000      	beq.n	2e88 <_Z8receiverv+0x58>
    2e86:	e15f      	b.n	3148 <_Z8receiverv+0x318>
					data.id=networkRead();
    2e88:	4eb4      	ldr	r6, [pc, #720]	; (315c <_Z8receiverv+0x32c>)
    2e8a:	47b0      	blx	r6
    2e8c:	1c05      	adds	r5, r0, #0
    2e8e:	ac1b      	add	r4, sp, #108	; 0x6c
    2e90:	7060      	strb	r0, [r4, #1]
					data.type=(Type)networkRead();
    2e92:	47b0      	blx	r6
    2e94:	7020      	strb	r0, [r4, #0]
							switch (data.type){
    2e96:	2806      	cmp	r0, #6
    2e98:	d900      	bls.n	2e9c <_Z8receiverv+0x6c>
    2e9a:	e150      	b.n	313e <_Z8receiverv+0x30e>
    2e9c:	0080      	lsls	r0, r0, #2
    2e9e:	4bb0      	ldr	r3, [pc, #704]	; (3160 <_Z8receiverv+0x330>)
    2ea0:	581b      	ldr	r3, [r3, r0]
    2ea2:	469f      	mov	pc, r3
									case CRCERROR:
									data.crc=networkRead();
    2ea4:	4bad      	ldr	r3, [pc, #692]	; (315c <_Z8receiverv+0x32c>)
    2ea6:	4798      	blx	r3
    2ea8:	1c04      	adds	r4, r0, #0
    2eaa:	2321      	movs	r3, #33	; 0x21
    2eac:	aa1b      	add	r2, sp, #108	; 0x6c
    2eae:	54d0      	strb	r0, [r2, r3]
											
											if(calculCRCID(data.type,0,NULL,data.id)!=data.crc){
    2eb0:	2006      	movs	r0, #6
    2eb2:	2100      	movs	r1, #0
    2eb4:	2200      	movs	r2, #0
    2eb6:	1c2b      	adds	r3, r5, #0
    2eb8:	4daa      	ldr	r5, [pc, #680]	; (3164 <_Z8receiverv+0x334>)
    2eba:	47a8      	blx	r5
    2ebc:	4284      	cmp	r4, r0
    2ebe:	d005      	beq.n	2ecc <_Z8receiverv+0x9c>
												sendHMI("ERROR CRC");
    2ec0:	48a9      	ldr	r0, [pc, #676]	; (3168 <_Z8receiverv+0x338>)
    2ec2:	4baa      	ldr	r3, [pc, #680]	; (316c <_Z8receiverv+0x33c>)
    2ec4:	4798      	blx	r3
												crcErrorsend();
    2ec6:	4baa      	ldr	r3, [pc, #680]	; (3170 <_Z8receiverv+0x340>)
    2ec8:	4798      	blx	r3
    2eca:	e13d      	b.n	3148 <_Z8receiverv+0x318>
												
											}
											else{
												sendHMI("	CRC cmd receive");
    2ecc:	48a9      	ldr	r0, [pc, #676]	; (3174 <_Z8receiverv+0x344>)
    2ece:	4ba7      	ldr	r3, [pc, #668]	; (316c <_Z8receiverv+0x33c>)
    2ed0:	4798      	blx	r3
												switch (timeProt.state){
    2ed2:	23d8      	movs	r3, #216	; 0xd8
    2ed4:	4aa8      	ldr	r2, [pc, #672]	; (3178 <_Z8receiverv+0x348>)
    2ed6:	5cd3      	ldrb	r3, [r2, r3]
    2ed8:	2b03      	cmp	r3, #3
    2eda:	d000      	beq.n	2ede <_Z8receiverv+0xae>
    2edc:	e134      	b.n	3148 <_Z8receiverv+0x318>
													case TIMEPROT_DELAYREQUEST:
														sync();
													break;
													#else
													case TIMEPROT_DELAYRESPONSE:
														delayRequest();
    2ede:	4ba7      	ldr	r3, [pc, #668]	; (317c <_Z8receiverv+0x34c>)
    2ee0:	4798      	blx	r3
													break;
    2ee2:	e131      	b.n	3148 <_Z8receiverv+0x318>
											}
									break;
								#ifdef SLAVEMODE
								
									case SYNC:
										if(timeProt.state==TIMEPROT_IDLE){
    2ee4:	23d8      	movs	r3, #216	; 0xd8
    2ee6:	4aa4      	ldr	r2, [pc, #656]	; (3178 <_Z8receiverv+0x348>)
    2ee8:	5cd3      	ldrb	r3, [r2, r3]
    2eea:	2b00      	cmp	r3, #0
    2eec:	d14e      	bne.n	2f8c <_Z8receiverv+0x15c>
											sendHMI("	sync receive");
    2eee:	48a4      	ldr	r0, [pc, #656]	; (3180 <_Z8receiverv+0x350>)
    2ef0:	4b9e      	ldr	r3, [pc, #632]	; (316c <_Z8receiverv+0x33c>)
    2ef2:	4798      	blx	r3
											data.length=networkRead();
    2ef4:	4b99      	ldr	r3, [pc, #612]	; (315c <_Z8receiverv+0x32c>)
    2ef6:	4798      	blx	r3
    2ef8:	4680      	mov	r8, r0
    2efa:	ab1b      	add	r3, sp, #108	; 0x6c
    2efc:	7098      	strb	r0, [r3, #2]
											for(i=0;i<data.length;i++){
    2efe:	2800      	cmp	r0, #0
    2f00:	d00d      	beq.n	2f1e <_Z8receiverv+0xee>
    2f02:	246f      	movs	r4, #111	; 0x6f
    2f04:	446c      	add	r4, sp
    2f06:	1e46      	subs	r6, r0, #1
    2f08:	b2f6      	uxtb	r6, r6
    2f0a:	ab24      	add	r3, sp, #144	; 0x90
    2f0c:	469c      	mov	ip, r3
    2f0e:	4466      	add	r6, ip
    2f10:	3e20      	subs	r6, #32
												data.data[i]=networkRead();
    2f12:	4f92      	ldr	r7, [pc, #584]	; (315c <_Z8receiverv+0x32c>)
    2f14:	47b8      	blx	r7
    2f16:	7020      	strb	r0, [r4, #0]
    2f18:	3401      	adds	r4, #1
								
									case SYNC:
										if(timeProt.state==TIMEPROT_IDLE){
											sendHMI("	sync receive");
											data.length=networkRead();
											for(i=0;i<data.length;i++){
    2f1a:	42b4      	cmp	r4, r6
    2f1c:	d1fa      	bne.n	2f14 <_Z8receiverv+0xe4>
												data.data[i]=networkRead();
											}
											data.crc=networkRead();
    2f1e:	4b8f      	ldr	r3, [pc, #572]	; (315c <_Z8receiverv+0x32c>)
    2f20:	4798      	blx	r3
    2f22:	1c04      	adds	r4, r0, #0
    2f24:	2321      	movs	r3, #33	; 0x21
    2f26:	aa1b      	add	r2, sp, #108	; 0x6c
    2f28:	54d0      	strb	r0, [r2, r3]
											//networkFlush();
											if(calculCRCID(data.type,data.length,data.data,data.id)!=data.crc){
    2f2a:	2001      	movs	r0, #1
    2f2c:	4641      	mov	r1, r8
    2f2e:	226f      	movs	r2, #111	; 0x6f
    2f30:	446a      	add	r2, sp
    2f32:	1c2b      	adds	r3, r5, #0
    2f34:	4d8b      	ldr	r5, [pc, #556]	; (3164 <_Z8receiverv+0x334>)
    2f36:	47a8      	blx	r5
    2f38:	4284      	cmp	r4, r0
    2f3a:	d005      	beq.n	2f48 <_Z8receiverv+0x118>
												crcErrorsend();
    2f3c:	4b8c      	ldr	r3, [pc, #560]	; (3170 <_Z8receiverv+0x340>)
    2f3e:	4798      	blx	r3
												sendHMI("erreur crc");
    2f40:	4890      	ldr	r0, [pc, #576]	; (3184 <_Z8receiverv+0x354>)
    2f42:	4b8a      	ldr	r3, [pc, #552]	; (316c <_Z8receiverv+0x33c>)
    2f44:	4798      	blx	r3
												return;
    2f46:	e0ff      	b.n	3148 <_Z8receiverv+0x318>
											}
											else{	
												timeProt.t1.second=data.data[0]|(data.data[1]<<8);
    2f48:	ab1b      	add	r3, sp, #108	; 0x6c
    2f4a:	791a      	ldrb	r2, [r3, #4]
    2f4c:	0211      	lsls	r1, r2, #8
    2f4e:	78da      	ldrb	r2, [r3, #3]
    2f50:	430a      	orrs	r2, r1
    2f52:	4c89      	ldr	r4, [pc, #548]	; (3178 <_Z8receiverv+0x348>)
    2f54:	21dc      	movs	r1, #220	; 0xdc
    2f56:	5062      	str	r2, [r4, r1]
												timeProt.t1.halfmillis=data.data[2]|(data.data[3]<<8);
    2f58:	799a      	ldrb	r2, [r3, #6]
    2f5a:	0212      	lsls	r2, r2, #8
    2f5c:	795b      	ldrb	r3, [r3, #5]
    2f5e:	4313      	orrs	r3, r2
    2f60:	22e0      	movs	r2, #224	; 0xe0
    2f62:	50a3      	str	r3, [r4, r2]
												timeProt.t1.sign=true;
    2f64:	2301      	movs	r3, #1
    2f66:	3204      	adds	r2, #4
    2f68:	54a3      	strb	r3, [r4, r2]
												timeProt.t2.second=timeProt.rxSync.second;
    2f6a:	68e1      	ldr	r1, [r4, #12]
    2f6c:	3204      	adds	r2, #4
    2f6e:	50a1      	str	r1, [r4, r2]
												timeProt.t2.halfmillis=timeProt.rxSync.halfmillis;
    2f70:	6921      	ldr	r1, [r4, #16]
    2f72:	3204      	adds	r2, #4
    2f74:	50a1      	str	r1, [r4, r2]
												timeProt.t2.sign=true;
    2f76:	3204      	adds	r2, #4
    2f78:	54a3      	strb	r3, [r4, r2]
												//timeMaster=sumClock(timeMaster,timeProt.delay);
												//timeProt.offset=subClock(timeMaster,timeProt.rxSync);//on calcul le temps de calcul
												//updateClock();
												//sendHMI("	sync completed");
												//networkFlush();
												delayRequest();
    2f7a:	4b80      	ldr	r3, [pc, #512]	; (317c <_Z8receiverv+0x34c>)
    2f7c:	4798      	blx	r3
												timeProt.state=TIMEPROT_DELAYRESPONSE;
    2f7e:	2203      	movs	r2, #3
    2f80:	23d8      	movs	r3, #216	; 0xd8
    2f82:	54e2      	strb	r2, [r4, r3]
												timeProt.timePreviousState=xTaskGetTickCount();
    2f84:	4b80      	ldr	r3, [pc, #512]	; (3188 <_Z8receiverv+0x358>)
    2f86:	4798      	blx	r3
    2f88:	6320      	str	r0, [r4, #48]	; 0x30
    2f8a:	e0dd      	b.n	3148 <_Z8receiverv+0x318>

											}
										}
										else{
											sendHMI("ERROR sync receive but in the wrong state");	
    2f8c:	487f      	ldr	r0, [pc, #508]	; (318c <_Z8receiverv+0x35c>)
    2f8e:	4b77      	ldr	r3, [pc, #476]	; (316c <_Z8receiverv+0x33c>)
    2f90:	4798      	blx	r3
											timeProt.state=TIMEPROT_IDLE;	
    2f92:	4c79      	ldr	r4, [pc, #484]	; (3178 <_Z8receiverv+0x348>)
    2f94:	2200      	movs	r2, #0
    2f96:	23d8      	movs	r3, #216	; 0xd8
    2f98:	54e2      	strb	r2, [r4, r3]
											timeProt.timePreviousState=xTaskGetTickCount();									
    2f9a:	4b7b      	ldr	r3, [pc, #492]	; (3188 <_Z8receiverv+0x358>)
    2f9c:	4798      	blx	r3
    2f9e:	6320      	str	r0, [r4, #48]	; 0x30
    2fa0:	e0d2      	b.n	3148 <_Z8receiverv+0x318>
										}
									break;
									case DELAYRESPONSE:
										if(timeProt.state==TIMEPROT_DELAYRESPONSE){
    2fa2:	23d8      	movs	r3, #216	; 0xd8
    2fa4:	4a74      	ldr	r2, [pc, #464]	; (3178 <_Z8receiverv+0x348>)
    2fa6:	5cd3      	ldrb	r3, [r2, r3]
    2fa8:	2b03      	cmp	r3, #3
    2faa:	d000      	beq.n	2fae <_Z8receiverv+0x17e>
    2fac:	e0bc      	b.n	3128 <_Z8receiverv+0x2f8>
											data.length=networkRead();
    2fae:	4b6b      	ldr	r3, [pc, #428]	; (315c <_Z8receiverv+0x32c>)
    2fb0:	4798      	blx	r3
    2fb2:	4680      	mov	r8, r0
    2fb4:	ab1b      	add	r3, sp, #108	; 0x6c
    2fb6:	7098      	strb	r0, [r3, #2]
											for(i=0;i<data.length;i++){
    2fb8:	2800      	cmp	r0, #0
    2fba:	d00d      	beq.n	2fd8 <_Z8receiverv+0x1a8>
    2fbc:	246f      	movs	r4, #111	; 0x6f
    2fbe:	446c      	add	r4, sp
    2fc0:	1e46      	subs	r6, r0, #1
    2fc2:	b2f6      	uxtb	r6, r6
    2fc4:	ab24      	add	r3, sp, #144	; 0x90
    2fc6:	469c      	mov	ip, r3
    2fc8:	4466      	add	r6, ip
    2fca:	3e20      	subs	r6, #32
												data.data[i]=networkRead();
    2fcc:	4f63      	ldr	r7, [pc, #396]	; (315c <_Z8receiverv+0x32c>)
    2fce:	47b8      	blx	r7
    2fd0:	7020      	strb	r0, [r4, #0]
    2fd2:	3401      	adds	r4, #1
										}
									break;
									case DELAYRESPONSE:
										if(timeProt.state==TIMEPROT_DELAYRESPONSE){
											data.length=networkRead();
											for(i=0;i<data.length;i++){
    2fd4:	42b4      	cmp	r4, r6
    2fd6:	d1fa      	bne.n	2fce <_Z8receiverv+0x19e>
												data.data[i]=networkRead();
											}
											data.crc=networkRead();
    2fd8:	4b60      	ldr	r3, [pc, #384]	; (315c <_Z8receiverv+0x32c>)
    2fda:	4798      	blx	r3
    2fdc:	1c04      	adds	r4, r0, #0
    2fde:	2321      	movs	r3, #33	; 0x21
    2fe0:	aa1b      	add	r2, sp, #108	; 0x6c
    2fe2:	54d0      	strb	r0, [r2, r3]
											//networkFlush();
											if(calculCRCID(data.type,data.length,data.data,data.id)!=data.crc){
    2fe4:	2003      	movs	r0, #3
    2fe6:	4641      	mov	r1, r8
    2fe8:	226f      	movs	r2, #111	; 0x6f
    2fea:	446a      	add	r2, sp
    2fec:	1c2b      	adds	r3, r5, #0
    2fee:	4d5d      	ldr	r5, [pc, #372]	; (3164 <_Z8receiverv+0x334>)
    2ff0:	47a8      	blx	r5
    2ff2:	4284      	cmp	r4, r0
    2ff4:	d007      	beq.n	3006 <_Z8receiverv+0x1d6>
												networkFlush();
    2ff6:	4b66      	ldr	r3, [pc, #408]	; (3190 <_Z8receiverv+0x360>)
    2ff8:	4798      	blx	r3
												crcErrorsend();
    2ffa:	4b5d      	ldr	r3, [pc, #372]	; (3170 <_Z8receiverv+0x340>)
    2ffc:	4798      	blx	r3
												sendHMI("erreur crc");
    2ffe:	4861      	ldr	r0, [pc, #388]	; (3184 <_Z8receiverv+0x354>)
    3000:	4b5a      	ldr	r3, [pc, #360]	; (316c <_Z8receiverv+0x33c>)
    3002:	4798      	blx	r3
												return;
    3004:	e0a0      	b.n	3148 <_Z8receiverv+0x318>
											}
											
											sendHMI("	delay response receive");
    3006:	4863      	ldr	r0, [pc, #396]	; (3194 <_Z8receiverv+0x364>)
    3008:	4b58      	ldr	r3, [pc, #352]	; (316c <_Z8receiverv+0x33c>)
    300a:	4798      	blx	r3

											if(data.data[0]==IDDEVICE){
    300c:	ab1b      	add	r3, sp, #108	; 0x6c
    300e:	78db      	ldrb	r3, [r3, #3]
    3010:	2b02      	cmp	r3, #2
    3012:	d000      	beq.n	3016 <_Z8receiverv+0x1e6>
    3014:	e084      	b.n	3120 <_Z8receiverv+0x2f0>
												timeProt.state=TIMEPROT_IDLE;
    3016:	4c58      	ldr	r4, [pc, #352]	; (3178 <_Z8receiverv+0x348>)
    3018:	2200      	movs	r2, #0
    301a:	33d6      	adds	r3, #214	; 0xd6
    301c:	54e2      	strb	r2, [r4, r3]
												timeProt.timePreviousState=xTaskGetTickCount();
    301e:	4b5a      	ldr	r3, [pc, #360]	; (3188 <_Z8receiverv+0x358>)
    3020:	4798      	blx	r3
    3022:	6320      	str	r0, [r4, #48]	; 0x30
												//time receive master
												timeProt.t4.second=data.data[1]|(data.data[2]<<8);
    3024:	ab1b      	add	r3, sp, #108	; 0x6c
    3026:	795a      	ldrb	r2, [r3, #5]
    3028:	0211      	lsls	r1, r2, #8
    302a:	791a      	ldrb	r2, [r3, #4]
    302c:	430a      	orrs	r2, r1
    302e:	2180      	movs	r1, #128	; 0x80
    3030:	0049      	lsls	r1, r1, #1
    3032:	4689      	mov	r9, r1
    3034:	5062      	str	r2, [r4, r1]
												timeProt.t4.halfmillis=data.data[3]|(data.data[4]<<8);
    3036:	79da      	ldrb	r2, [r3, #7]
    3038:	0212      	lsls	r2, r2, #8
    303a:	799b      	ldrb	r3, [r3, #6]
    303c:	4313      	orrs	r3, r2
    303e:	2282      	movs	r2, #130	; 0x82
    3040:	0052      	lsls	r2, r2, #1
    3042:	50a3      	str	r3, [r4, r2]
												timeProt.t4.sign=true;
    3044:	3a04      	subs	r2, #4
    3046:	3aff      	subs	r2, #255	; 0xff
    3048:	2384      	movs	r3, #132	; 0x84
    304a:	005b      	lsls	r3, r3, #1
    304c:	54e2      	strb	r2, [r4, r3]
												printfClock(timeProt.t4);
												*/
												//time send master
												//t3.second=data.data[5]|(data.data[6]<<8);
												//t3.halfmillis=data.data[7]|(data.data[8]<<8);
												t2subt1=subClock(timeProt.t2,timeProt.t1);
    304e:	ad0f      	add	r5, sp, #60	; 0x3c
    3050:	1c23      	adds	r3, r4, #0
    3052:	33dc      	adds	r3, #220	; 0xdc
    3054:	466a      	mov	r2, sp
    3056:	cb43      	ldmia	r3!, {r0, r1, r6}
    3058:	c243      	stmia	r2!, {r0, r1, r6}
    305a:	1c28      	adds	r0, r5, #0
    305c:	23e8      	movs	r3, #232	; 0xe8
    305e:	58e1      	ldr	r1, [r4, r3]
    3060:	1c23      	adds	r3, r4, #0
    3062:	33e8      	adds	r3, #232	; 0xe8
    3064:	685a      	ldr	r2, [r3, #4]
    3066:	689b      	ldr	r3, [r3, #8]
    3068:	4e4b      	ldr	r6, [pc, #300]	; (3198 <_Z8receiverv+0x368>)
    306a:	46b0      	mov	r8, r6
    306c:	47b0      	blx	r6
												t4subt3=subClock(timeProt.t4,timeProt.t3);								
    306e:	ae12      	add	r6, sp, #72	; 0x48
    3070:	1c23      	adds	r3, r4, #0
    3072:	33f4      	adds	r3, #244	; 0xf4
    3074:	466a      	mov	r2, sp
    3076:	cb83      	ldmia	r3!, {r0, r1, r7}
    3078:	c283      	stmia	r2!, {r0, r1, r7}
    307a:	1c30      	adds	r0, r6, #0
    307c:	464b      	mov	r3, r9
    307e:	58e1      	ldr	r1, [r4, r3]
    3080:	18e3      	adds	r3, r4, r3
    3082:	685a      	ldr	r2, [r3, #4]
    3084:	689b      	ldr	r3, [r3, #8]
    3086:	47c0      	blx	r8
												delayL=sumClock(t2subt1,t4subt3);									
    3088:	466b      	mov	r3, sp
    308a:	1c32      	adds	r2, r6, #0
    308c:	ca83      	ldmia	r2!, {r0, r1, r7}
    308e:	c383      	stmia	r3!, {r0, r1, r7}
    3090:	a815      	add	r0, sp, #84	; 0x54
    3092:	990f      	ldr	r1, [sp, #60]	; 0x3c
    3094:	686a      	ldr	r2, [r5, #4]
    3096:	68ab      	ldr	r3, [r5, #8]
    3098:	4f40      	ldr	r7, [pc, #256]	; (319c <_Z8receiverv+0x36c>)
    309a:	47b8      	blx	r7
												timeProt.delay.second=delayL.second/2;
    309c:	9b15      	ldr	r3, [sp, #84]	; 0x54
    309e:	085b      	lsrs	r3, r3, #1
    30a0:	63a3      	str	r3, [r4, #56]	; 0x38
												timeProt.delay.halfmillis=delayL.halfmillis/2;
    30a2:	9b16      	ldr	r3, [sp, #88]	; 0x58
    30a4:	085b      	lsrs	r3, r3, #1
    30a6:	63e3      	str	r3, [r4, #60]	; 0x3c
												
												timeProt.offset=subClock(t4subt3,t2subt1);
    30a8:	af04      	add	r7, sp, #16
    30aa:	466b      	mov	r3, sp
    30ac:	cd07      	ldmia	r5!, {r0, r1, r2}
    30ae:	c307      	stmia	r3!, {r0, r1, r2}
    30b0:	1c38      	adds	r0, r7, #0
    30b2:	9912      	ldr	r1, [sp, #72]	; 0x48
    30b4:	6872      	ldr	r2, [r6, #4]
    30b6:	68b3      	ldr	r3, [r6, #8]
    30b8:	47c0      	blx	r8
    30ba:	1c23      	adds	r3, r4, #0
    30bc:	334c      	adds	r3, #76	; 0x4c
    30be:	cf07      	ldmia	r7!, {r0, r1, r2}
    30c0:	c307      	stmia	r3!, {r0, r1, r2}
												timeProt.offset.second=timeProt.offset.second/2;
    30c2:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
    30c4:	085b      	lsrs	r3, r3, #1
    30c6:	64e3      	str	r3, [r4, #76]	; 0x4c
												timeProt.offset.halfmillis=timeProt.offset.halfmillis/2;
    30c8:	6d23      	ldr	r3, [r4, #80]	; 0x50
    30ca:	085b      	lsrs	r3, r3, #1
    30cc:	6523      	str	r3, [r4, #80]	; 0x50
												updateClock();
    30ce:	4b34      	ldr	r3, [pc, #208]	; (31a0 <_Z8receiverv+0x370>)
    30d0:	4798      	blx	r3
											
												if(timeProt.delay.sign==true){
    30d2:	2340      	movs	r3, #64	; 0x40
    30d4:	5ce3      	ldrb	r3, [r4, r3]
    30d6:	2b00      	cmp	r3, #0
    30d8:	d00d      	beq.n	30f6 <_Z8receiverv+0x2c6>
													sprintf(messageHMIDelay,"		update delay: +%lus,%u ms,~%lu us",timeProt.delay.second,timeProt.delay.halfmillis/32,(timeProt.delay.halfmillis%32)*31);
    30da:	4927      	ldr	r1, [pc, #156]	; (3178 <_Z8receiverv+0x348>)
    30dc:	6b8a      	ldr	r2, [r1, #56]	; 0x38
    30de:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
    30e0:	6bc8      	ldr	r0, [r1, #60]	; 0x3c
    30e2:	095b      	lsrs	r3, r3, #5
    30e4:	211f      	movs	r1, #31
    30e6:	4008      	ands	r0, r1
    30e8:	4341      	muls	r1, r0
    30ea:	9100      	str	r1, [sp, #0]
    30ec:	482d      	ldr	r0, [pc, #180]	; (31a4 <_Z8receiverv+0x374>)
    30ee:	492e      	ldr	r1, [pc, #184]	; (31a8 <_Z8receiverv+0x378>)
    30f0:	4c2e      	ldr	r4, [pc, #184]	; (31ac <_Z8receiverv+0x37c>)
    30f2:	47a0      	blx	r4
    30f4:	e00c      	b.n	3110 <_Z8receiverv+0x2e0>
												}
												else{
													sprintf(messageHMIDelay,"		update delay: -%lus,%u ms,~%lu us",timeProt.delay.second,timeProt.delay.halfmillis/32,(timeProt.delay.halfmillis%32)*31);
    30f6:	4920      	ldr	r1, [pc, #128]	; (3178 <_Z8receiverv+0x348>)
    30f8:	6b8a      	ldr	r2, [r1, #56]	; 0x38
    30fa:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
    30fc:	6bc8      	ldr	r0, [r1, #60]	; 0x3c
    30fe:	095b      	lsrs	r3, r3, #5
    3100:	211f      	movs	r1, #31
    3102:	4008      	ands	r0, r1
    3104:	4341      	muls	r1, r0
    3106:	9100      	str	r1, [sp, #0]
    3108:	4826      	ldr	r0, [pc, #152]	; (31a4 <_Z8receiverv+0x374>)
    310a:	4929      	ldr	r1, [pc, #164]	; (31b0 <_Z8receiverv+0x380>)
    310c:	4c27      	ldr	r4, [pc, #156]	; (31ac <_Z8receiverv+0x37c>)
    310e:	47a0      	blx	r4
												}
												sendHMI(messageHMIDelay);
    3110:	4824      	ldr	r0, [pc, #144]	; (31a4 <_Z8receiverv+0x374>)
    3112:	4c16      	ldr	r4, [pc, #88]	; (316c <_Z8receiverv+0x33c>)
    3114:	47a0      	blx	r4
												networkFlush();
    3116:	4b1e      	ldr	r3, [pc, #120]	; (3190 <_Z8receiverv+0x360>)
    3118:	4798      	blx	r3
												sendHMI("	delay response completed");
    311a:	4826      	ldr	r0, [pc, #152]	; (31b4 <_Z8receiverv+0x384>)
    311c:	47a0      	blx	r4
    311e:	e013      	b.n	3148 <_Z8receiverv+0x318>
											}
											else{
												sendHMI("	delay response not for me");	
    3120:	4825      	ldr	r0, [pc, #148]	; (31b8 <_Z8receiverv+0x388>)
    3122:	4b12      	ldr	r3, [pc, #72]	; (316c <_Z8receiverv+0x33c>)
    3124:	4798      	blx	r3
    3126:	e00f      	b.n	3148 <_Z8receiverv+0x318>
											}
										}
										else{
											sendHMI("ERROR delay response receive but wrong state ");
    3128:	4824      	ldr	r0, [pc, #144]	; (31bc <_Z8receiverv+0x38c>)
    312a:	4b10      	ldr	r3, [pc, #64]	; (316c <_Z8receiverv+0x33c>)
    312c:	4798      	blx	r3
											timeProt.state=TIMEPROT_IDLE;
    312e:	4c12      	ldr	r4, [pc, #72]	; (3178 <_Z8receiverv+0x348>)
    3130:	2200      	movs	r2, #0
    3132:	23d8      	movs	r3, #216	; 0xd8
    3134:	54e2      	strb	r2, [r4, r3]
											timeProt.timePreviousState=xTaskGetTickCount();
    3136:	4b14      	ldr	r3, [pc, #80]	; (3188 <_Z8receiverv+0x358>)
    3138:	4798      	blx	r3
    313a:	6320      	str	r0, [r4, #48]	; 0x30
											return;
    313c:	e004      	b.n	3148 <_Z8receiverv+0x318>
											return;
										}
									break;
								#endif
								default:
									sendHMI("	Erreur type unknow");
    313e:	4820      	ldr	r0, [pc, #128]	; (31c0 <_Z8receiverv+0x390>)
    3140:	4b0a      	ldr	r3, [pc, #40]	; (316c <_Z8receiverv+0x33c>)
    3142:	4798      	blx	r3
									networkFlush();	
    3144:	4b12      	ldr	r3, [pc, #72]	; (3190 <_Z8receiverv+0x360>)
    3146:	4798      	blx	r3
									
							}		
				}
				
			}
}
    3148:	b025      	add	sp, #148	; 0x94
    314a:	bc0c      	pop	{r2, r3}
    314c:	4690      	mov	r8, r2
    314e:	4699      	mov	r9, r3
    3150:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3152:	46c0      	nop			; (mov r8, r8)
    3154:	000017f9 	.word	0x000017f9
    3158:	00000b91 	.word	0x00000b91
    315c:	00001855 	.word	0x00001855
    3160:	0000d5ac 	.word	0x0000d5ac
    3164:	00002cd5 	.word	0x00002cd5
    3168:	0000d774 	.word	0x0000d774
    316c:	00003381 	.word	0x00003381
    3170:	00002d85 	.word	0x00002d85
    3174:	0000d780 	.word	0x0000d780
    3178:	20004140 	.word	0x20004140
    317c:	00002da5 	.word	0x00002da5
    3180:	0000d794 	.word	0x0000d794
    3184:	0000d7a4 	.word	0x0000d7a4
    3188:	0000095d 	.word	0x0000095d
    318c:	0000d7b0 	.word	0x0000d7b0
    3190:	00001811 	.word	0x00001811
    3194:	0000d7dc 	.word	0x0000d7dc
    3198:	00001111 	.word	0x00001111
    319c:	00001215 	.word	0x00001215
    31a0:	00002ab9 	.word	0x00002ab9
    31a4:	2000424c 	.word	0x2000424c
    31a8:	0000d7f4 	.word	0x0000d7f4
    31ac:	00009d2d 	.word	0x00009d2d
    31b0:	0000d818 	.word	0x0000d818
    31b4:	0000d83c 	.word	0x0000d83c
    31b8:	0000d858 	.word	0x0000d858
    31bc:	0000d874 	.word	0x0000d874
    31c0:	0000d8a4 	.word	0x0000d8a4

000031c4 <_Z16timeProtocolTaskv>:
				break;
			}
		}
	}
}
void timeProtocolTask(void){
    31c4:	b570      	push	{r4, r5, r6, lr}
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    31c6:	b672      	cpsid	i
    31c8:	f3bf 8f5f 	dmb	sy
	Disable_global_interrupt();
    31cc:	2300      	movs	r3, #0
    31ce:	4a2c      	ldr	r2, [pc, #176]	; (3280 <_Z16timeProtocolTaskv+0xbc>)
    31d0:	7013      	strb	r3, [r2, #0]
		for(i=0;i<=MAX_SLAVE_CLOCK;i++){
			timeProt.saveTime[i].second=0;
		}
	#else
	
	timeProt.rx.sign=true;
    31d2:	4c2c      	ldr	r4, [pc, #176]	; (3284 <_Z16timeProtocolTaskv+0xc0>)
    31d4:	2201      	movs	r2, #1
    31d6:	212c      	movs	r1, #44	; 0x2c
    31d8:	5462      	strb	r2, [r4, r1]
	timeProt.rxDelay.sign=true;
    31da:	390c      	subs	r1, #12
    31dc:	5462      	strb	r2, [r4, r1]
	timeProt.rxSync.sign=true;
    31de:	7522      	strb	r2, [r4, #20]
	timeProt.tx.sign=true;
    31e0:	7222      	strb	r2, [r4, #8]
	#endif
	timeProt.correction.nbCorrection=0;
    31e2:	65a3      	str	r3, [r4, #88]	; 0x58

	
	sumOffset.second=0;
    31e4:	4928      	ldr	r1, [pc, #160]	; (3288 <_Z16timeProtocolTaskv+0xc4>)
    31e6:	600b      	str	r3, [r1, #0]
	sumOffset.halfmillis=0;
    31e8:	604b      	str	r3, [r1, #4]
	sumOffset.sign=true;
    31ea:	720a      	strb	r2, [r1, #8]
	
	
	timeProt.correction.currentTimeOffsetSync.second=0;
    31ec:	66e3      	str	r3, [r4, #108]	; 0x6c
	timeProt.correction.currentTimeOffsetSync.halfmillis=0;
    31ee:	6723      	str	r3, [r4, #112]	; 0x70
	timeProt.correction.currentTimeOffsetSync.sign=true;
    31f0:	2174      	movs	r1, #116	; 0x74
    31f2:	5462      	strb	r2, [r4, r1]
	
	
	timeProt.correction.previoustimeOffset.second=0;
    31f4:	6623      	str	r3, [r4, #96]	; 0x60
	timeProt.correction.previoustimeOffset.halfmillis=0;
    31f6:	6663      	str	r3, [r4, #100]	; 0x64
	timeProt.correction.previoustimeOffset.sign=true;
    31f8:	390c      	subs	r1, #12
    31fa:	5462      	strb	r2, [r4, r1]
	
	
	//timeProt.correction.timeSoftCor=0;
	timeProt.correction.indiceMoySoftCor=0;
    31fc:	316c      	adds	r1, #108	; 0x6c
    31fe:	5463      	strb	r3, [r4, r1]
	timeProt.correction.indiceFull=0;
    3200:	3101      	adds	r1, #1
    3202:	5463      	strb	r3, [r4, r1]


	timeProt.delay.second=0;
    3204:	63a3      	str	r3, [r4, #56]	; 0x38
	timeProt.delay.halfmillis=0;
    3206:	63e3      	str	r3, [r4, #60]	; 0x3c
	timeProt.delay.sign=true;
    3208:	3995      	subs	r1, #149	; 0x95
    320a:	5462      	strb	r2, [r4, r1]
	timeProt.waitIdentifier=false;
    320c:	3233      	adds	r2, #51	; 0x33
    320e:	54a3      	strb	r3, [r4, r2]
	timeProt.synchroTimeReceive=NULL;
    3210:	6463      	str	r3, [r4, #68]	; 0x44
	timeProt.synchroTimeSendSync=NULL;
    3212:	64a3      	str	r3, [r4, #72]	; 0x48
	vSemaphoreCreateBinary(timeProt.synchroTimeReceive);
    3214:	2001      	movs	r0, #1
    3216:	2100      	movs	r1, #0
    3218:	3a31      	subs	r2, #49	; 0x31
    321a:	4b1c      	ldr	r3, [pc, #112]	; (328c <_Z16timeProtocolTaskv+0xc8>)
    321c:	4798      	blx	r3
    321e:	6460      	str	r0, [r4, #68]	; 0x44
    3220:	2800      	cmp	r0, #0
    3222:	d004      	beq.n	322e <_Z16timeProtocolTaskv+0x6a>
    3224:	2100      	movs	r1, #0
    3226:	2200      	movs	r2, #0
    3228:	2300      	movs	r3, #0
    322a:	4c19      	ldr	r4, [pc, #100]	; (3290 <_Z16timeProtocolTaskv+0xcc>)
    322c:	47a0      	blx	r4
	vSemaphoreCreateBinary(timeProt.synchroTimeSendSync);
    322e:	2001      	movs	r0, #1
    3230:	2100      	movs	r1, #0
    3232:	2203      	movs	r2, #3
    3234:	4b15      	ldr	r3, [pc, #84]	; (328c <_Z16timeProtocolTaskv+0xc8>)
    3236:	4798      	blx	r3
    3238:	4b12      	ldr	r3, [pc, #72]	; (3284 <_Z16timeProtocolTaskv+0xc0>)
    323a:	6498      	str	r0, [r3, #72]	; 0x48
    323c:	2800      	cmp	r0, #0
    323e:	d004      	beq.n	324a <_Z16timeProtocolTaskv+0x86>
    3240:	2100      	movs	r1, #0
    3242:	2200      	movs	r2, #0
    3244:	2300      	movs	r3, #0
    3246:	4c12      	ldr	r4, [pc, #72]	; (3290 <_Z16timeProtocolTaskv+0xcc>)
    3248:	47a0      	blx	r4
	Enable_global_interrupt();
    324a:	2201      	movs	r2, #1
    324c:	4b0c      	ldr	r3, [pc, #48]	; (3280 <_Z16timeProtocolTaskv+0xbc>)
    324e:	701a      	strb	r2, [r3, #0]
    3250:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
    3254:	b662      	cpsie	i
	delayRequest();
	#else
	sync();
	#endif
	*/
	timeProt.state=TIMEPROT_IDLE;	
    3256:	2100      	movs	r1, #0
    3258:	23d8      	movs	r3, #216	; 0xd8
    325a:	4a0a      	ldr	r2, [pc, #40]	; (3284 <_Z16timeProtocolTaskv+0xc0>)
    325c:	54d1      	strb	r1, [r2, r3]
			sender();
			#ifdef MASTERMODE		
			if(timeProt.state!=TIMEPROT_IDLE){
			#endif
			
				if(timeProt.synchroTimeReceive!=NULL){
    325e:	1c14      	adds	r4, r2, #0
				
					if( xSemaphoreTake(timeProt.synchroTimeReceive,100/portTICK_RATE_MS) == pdTRUE )	{
    3260:	4d0c      	ldr	r5, [pc, #48]	; (3294 <_Z16timeProtocolTaskv+0xd0>)
						//vTaskDelay(100/portTICK_RATE_MS);//wait to receive alll th edata
						receiver();
    3262:	4e0d      	ldr	r6, [pc, #52]	; (3298 <_Z16timeProtocolTaskv+0xd4>)
			sender();
			#ifdef MASTERMODE		
			if(timeProt.state!=TIMEPROT_IDLE){
			#endif
			
				if(timeProt.synchroTimeReceive!=NULL){
    3264:	6c60      	ldr	r0, [r4, #68]	; 0x44
    3266:	2800      	cmp	r0, #0
    3268:	d006      	beq.n	3278 <_Z16timeProtocolTaskv+0xb4>
				
					if( xSemaphoreTake(timeProt.synchroTimeReceive,100/portTICK_RATE_MS) == pdTRUE )	{
    326a:	2100      	movs	r1, #0
    326c:	2264      	movs	r2, #100	; 0x64
    326e:	2300      	movs	r3, #0
    3270:	47a8      	blx	r5
    3272:	2801      	cmp	r0, #1
    3274:	d100      	bne.n	3278 <_Z16timeProtocolTaskv+0xb4>
						//vTaskDelay(100/portTICK_RATE_MS);//wait to receive alll th edata
						receiver();
    3276:	47b0      	blx	r6
				
			#ifdef MASTERMODE
			}
			
			#endif
			stateManagement();
    3278:	4b08      	ldr	r3, [pc, #32]	; (329c <_Z16timeProtocolTaskv+0xd8>)
    327a:	4798      	blx	r3
				break;
			}
		}
	}
}
void timeProtocolTask(void){
    327c:	e7f2      	b.n	3264 <_Z16timeProtocolTaskv+0xa0>
    327e:	46c0      	nop			; (mov r8, r8)
    3280:	200000d0 	.word	0x200000d0
    3284:	20004140 	.word	0x20004140
    3288:	20004134 	.word	0x20004134
    328c:	000002c1 	.word	0x000002c1
    3290:	00000311 	.word	0x00000311
    3294:	000004a1 	.word	0x000004a1
    3298:	00002e31 	.word	0x00002e31
    329c:	00002dd5 	.word	0x00002dd5

000032a0 <_ZN4mbed10SerialBaseD1Ev>:
#endif

protected:
    SerialBase(PinName tx, PinName rx);
    virtual ~SerialBase() {
    }
    32a0:	4770      	bx	lr
    32a2:	46c0      	nop			; (mov r8, r8)

000032a4 <_ZN4mbed6SerialD1Ev>:
 * int main() {
 *     pc.printf("Hello World\n");
 * }
 * @endcode
 */
class Serial : public SerialBase, public Stream {
    32a4:	b510      	push	{r4, lr}
    32a6:	1c04      	adds	r4, r0, #0
    32a8:	4b06      	ldr	r3, [pc, #24]	; (32c4 <_ZN4mbed6SerialD1Ev+0x20>)
    32aa:	6003      	str	r3, [r0, #0]
    32ac:	1c19      	adds	r1, r3, #0
    32ae:	3118      	adds	r1, #24
    32b0:	22dc      	movs	r2, #220	; 0xdc
    32b2:	5081      	str	r1, [r0, r2]
    32b4:	334c      	adds	r3, #76	; 0x4c
    32b6:	3204      	adds	r2, #4
    32b8:	5083      	str	r3, [r0, r2]
    32ba:	30dc      	adds	r0, #220	; 0xdc
    32bc:	4b02      	ldr	r3, [pc, #8]	; (32c8 <_ZN4mbed6SerialD1Ev+0x24>)
    32be:	4798      	blx	r3
    32c0:	1c20      	adds	r0, r4, #0
    32c2:	bd10      	pop	{r4, pc}
    32c4:	0000dbe8 	.word	0x0000dbe8
    32c8:	000046bd 	.word	0x000046bd

000032cc <_ZThn220_N4mbed6SerialD1Ev>:
    32cc:	b408      	push	{r3}
    32ce:	4b02      	ldr	r3, [pc, #8]	; (32d8 <_ZThn220_N4mbed6SerialD1Ev+0xc>)
    32d0:	469c      	mov	ip, r3
    32d2:	38dc      	subs	r0, #220	; 0xdc
    32d4:	bc08      	pop	{r3}
    32d6:	4760      	bx	ip
    32d8:	000032a5 	.word	0x000032a5

000032dc <_ZThn224_N4mbed6SerialD1Ev>:
    32dc:	b408      	push	{r3}
    32de:	4b02      	ldr	r3, [pc, #8]	; (32e8 <_ZThn224_N4mbed6SerialD1Ev+0xc>)
    32e0:	469c      	mov	ip, r3
    32e2:	38e0      	subs	r0, #224	; 0xe0
    32e4:	bc08      	pop	{r3}
    32e6:	4760      	bx	ip
    32e8:	000032a5 	.word	0x000032a5

000032ec <_ZN4mbed10SerialBaseD0Ev>:
    void interrupt_handler_asynch(void);
#endif

protected:
    SerialBase(PinName tx, PinName rx);
    virtual ~SerialBase() {
    32ec:	b510      	push	{r4, lr}
    32ee:	1c04      	adds	r4, r0, #0
    }
    32f0:	4b01      	ldr	r3, [pc, #4]	; (32f8 <_ZN4mbed10SerialBaseD0Ev+0xc>)
    32f2:	4798      	blx	r3
    32f4:	1c20      	adds	r0, r4, #0
    32f6:	bd10      	pop	{r4, pc}
    32f8:	00005dfb 	.word	0x00005dfb

000032fc <_Z12configureHMIv>:
xQueueHandle uartQueue;
Serial pc(USBTX,USBRX);
/************************************************************************/
/* FUNCTION                                                             */
/************************************************************************/
void configureHMI(void){
    32fc:	b508      	push	{r3, lr}
	pc.printf("config HMI \r\n");
    32fe:	4803      	ldr	r0, [pc, #12]	; (330c <_Z12configureHMIv+0x10>)
    3300:	30dc      	adds	r0, #220	; 0xdc
    3302:	4903      	ldr	r1, [pc, #12]	; (3310 <_Z12configureHMIv+0x14>)
    3304:	4b03      	ldr	r3, [pc, #12]	; (3314 <_Z12configureHMIv+0x18>)
    3306:	4798      	blx	r3
}
    3308:	bd08      	pop	{r3, pc}
    330a:	46c0      	nop			; (mov r8, r8)
    330c:	20004314 	.word	0x20004314
    3310:	0000d8b8 	.word	0x0000d8b8
    3314:	000046e1 	.word	0x000046e1

00003318 <_Z7HMITaskv>:
void HMITask(){
    3318:	b5f0      	push	{r4, r5, r6, r7, lr}
    331a:	b083      	sub	sp, #12
	//Can receive up to 10 char[50]
	uartQueue = xQueueCreate( LENGTH_QUEUE, sizeof( char* ) );
    331c:	2032      	movs	r0, #50	; 0x32
    331e:	2104      	movs	r1, #4
    3320:	2200      	movs	r2, #0
    3322:	4b10      	ldr	r3, [pc, #64]	; (3364 <_Z7HMITaskv+0x4c>)
    3324:	4798      	blx	r3
    3326:	4b10      	ldr	r3, [pc, #64]	; (3368 <_Z7HMITaskv+0x50>)
    3328:	6018      	str	r0, [r3, #0]

	while(1){
		//pc.printf("HMI task\r\n");
		 if( uartQueue != 0 )
    332a:	1c1f      	adds	r7, r3, #0
		 {
			 char* receive;
			 // Receive a message on the created queue.
			 while( xQueueReceive( uartQueue, &( receive ), (  portTickType ) 0) )
			 {			
				 pc.printf(receive);
    332c:	4d0f      	ldr	r5, [pc, #60]	; (336c <_Z7HMITaskv+0x54>)
    332e:	35dc      	adds	r5, #220	; 0xdc
	//Can receive up to 10 char[50]
	uartQueue = xQueueCreate( LENGTH_QUEUE, sizeof( char* ) );

	while(1){
		//pc.printf("HMI task\r\n");
		 if( uartQueue != 0 )
    3330:	683b      	ldr	r3, [r7, #0]
    3332:	2b00      	cmp	r3, #0
    3334:	d108      	bne.n	3348 <_Z7HMITaskv+0x30>
    3336:	e010      	b.n	335a <_Z7HMITaskv+0x42>
		 {
			 char* receive;
			 // Receive a message on the created queue.
			 while( xQueueReceive( uartQueue, &( receive ), (  portTickType ) 0) )
			 {			
				 pc.printf(receive);
    3338:	1c28      	adds	r0, r5, #0
    333a:	9901      	ldr	r1, [sp, #4]
    333c:	4c0c      	ldr	r4, [pc, #48]	; (3370 <_Z7HMITaskv+0x58>)
    333e:	47a0      	blx	r4
				 pc.printf("\r\n");
    3340:	1c28      	adds	r0, r5, #0
    3342:	490c      	ldr	r1, [pc, #48]	; (3374 <_Z7HMITaskv+0x5c>)
    3344:	47a0      	blx	r4
    3346:	e000      	b.n	334a <_Z7HMITaskv+0x32>
		//pc.printf("HMI task\r\n");
		 if( uartQueue != 0 )
		 {
			 char* receive;
			 // Receive a message on the created queue.
			 while( xQueueReceive( uartQueue, &( receive ), (  portTickType ) 0) )
    3348:	4e07      	ldr	r6, [pc, #28]	; (3368 <_Z7HMITaskv+0x50>)
    334a:	6830      	ldr	r0, [r6, #0]
    334c:	a901      	add	r1, sp, #4
    334e:	2200      	movs	r2, #0
    3350:	2300      	movs	r3, #0
    3352:	4c09      	ldr	r4, [pc, #36]	; (3378 <_Z7HMITaskv+0x60>)
    3354:	47a0      	blx	r4
    3356:	2800      	cmp	r0, #0
    3358:	d1ee      	bne.n	3338 <_Z7HMITaskv+0x20>
			//printf("						t: %lus,%u\r\n",timeCopy.second,(unsigned int)timeCopy.halfmillis/2);
			//printf("timecor : %d\r\n",ti);
			//printf("corhms : %d\r\n",to);
		 }
		 // pc.printf("test");
        vTaskDelay(500/portTICK_RATE_MS);
    335a:	20fa      	movs	r0, #250	; 0xfa
    335c:	0040      	lsls	r0, r0, #1
    335e:	4b07      	ldr	r3, [pc, #28]	; (337c <_Z7HMITaskv+0x64>)
    3360:	4798      	blx	r3
	}
    3362:	e7e5      	b.n	3330 <_Z7HMITaskv+0x18>
    3364:	000002c1 	.word	0x000002c1
    3368:	20004408 	.word	0x20004408
    336c:	20004314 	.word	0x20004314
    3370:	000046e1 	.word	0x000046e1
    3374:	0000d44c 	.word	0x0000d44c
    3378:	000004a1 	.word	0x000004a1
    337c:	00000b91 	.word	0x00000b91

00003380 <_Z7sendHMIPKc>:
}
bool sendHMI(const char send[]){
    3380:	b510      	push	{r4, lr}
    3382:	b082      	sub	sp, #8
    3384:	9001      	str	r0, [sp, #4]
			if( uartQueue != 0 )
    3386:	4b08      	ldr	r3, [pc, #32]	; (33a8 <_Z7sendHMIPKc+0x28>)
    3388:	6818      	ldr	r0, [r3, #0]
    338a:	2800      	cmp	r0, #0
    338c:	d009      	beq.n	33a2 <_Z7sendHMIPKc+0x22>
			{
				if( xQueueSendToBack( uartQueue,( void * ) &send,(  portTickType ) 0 ) == pdPASS )
    338e:	a901      	add	r1, sp, #4
    3390:	2200      	movs	r2, #0
    3392:	2300      	movs	r3, #0
    3394:	4c05      	ldr	r4, [pc, #20]	; (33ac <_Z7sendHMIPKc+0x2c>)
    3396:	47a0      	blx	r4
    3398:	3801      	subs	r0, #1
    339a:	4243      	negs	r3, r0
    339c:	4158      	adcs	r0, r3
    339e:	b2c0      	uxtb	r0, r0
    33a0:	e000      	b.n	33a4 <_Z7sendHMIPKc+0x24>
				
				/* Failed to post the message. */
				
			}
			
				return false;
    33a2:	2000      	movs	r0, #0
			
    33a4:	b002      	add	sp, #8
    33a6:	bd10      	pop	{r4, pc}
    33a8:	20004408 	.word	0x20004408
    33ac:	00000311 	.word	0x00000311

000033b0 <_ZN4mbed6SerialD0Ev>:
    33b0:	b510      	push	{r4, lr}
    33b2:	1c04      	adds	r4, r0, #0
    33b4:	4b08      	ldr	r3, [pc, #32]	; (33d8 <_ZN4mbed6SerialD0Ev+0x28>)
    33b6:	6003      	str	r3, [r0, #0]
    33b8:	1c19      	adds	r1, r3, #0
    33ba:	3118      	adds	r1, #24
    33bc:	22dc      	movs	r2, #220	; 0xdc
    33be:	5081      	str	r1, [r0, r2]
    33c0:	334c      	adds	r3, #76	; 0x4c
    33c2:	3204      	adds	r2, #4
    33c4:	5083      	str	r3, [r0, r2]
    33c6:	30dc      	adds	r0, #220	; 0xdc
    33c8:	4b04      	ldr	r3, [pc, #16]	; (33dc <_ZN4mbed6SerialD0Ev+0x2c>)
    33ca:	4798      	blx	r3
    33cc:	1c20      	adds	r0, r4, #0
    33ce:	4b04      	ldr	r3, [pc, #16]	; (33e0 <_ZN4mbed6SerialD0Ev+0x30>)
    33d0:	4798      	blx	r3
    33d2:	1c20      	adds	r0, r4, #0
    33d4:	bd10      	pop	{r4, pc}
    33d6:	46c0      	nop			; (mov r8, r8)
    33d8:	0000dbe8 	.word	0x0000dbe8
    33dc:	000046bd 	.word	0x000046bd
    33e0:	00005dfb 	.word	0x00005dfb

000033e4 <_ZThn220_N4mbed6SerialD0Ev>:
    33e4:	b408      	push	{r3}
    33e6:	4b02      	ldr	r3, [pc, #8]	; (33f0 <_ZThn220_N4mbed6SerialD0Ev+0xc>)
    33e8:	469c      	mov	ip, r3
    33ea:	38dc      	subs	r0, #220	; 0xdc
    33ec:	bc08      	pop	{r3}
    33ee:	4760      	bx	ip
    33f0:	000033b1 	.word	0x000033b1

000033f4 <_ZThn224_N4mbed6SerialD0Ev>:
    33f4:	b408      	push	{r3}
    33f6:	4b02      	ldr	r3, [pc, #8]	; (3400 <_ZThn224_N4mbed6SerialD0Ev+0xc>)
    33f8:	469c      	mov	ip, r3
    33fa:	38e0      	subs	r0, #224	; 0xe0
    33fc:	bc08      	pop	{r3}
    33fe:	4760      	bx	ip
    3400:	000033b1 	.word	0x000033b1

00003404 <_GLOBAL__sub_I_uartQueue>:
    3404:	b538      	push	{r3, r4, r5, lr}
#include "hmi.h"
/************************************************************************/
/* GLOBAL                                                               */
/************************************************************************/
xQueueHandle uartQueue;
Serial pc(USBTX,USBRX);
    3406:	4c06      	ldr	r4, [pc, #24]	; (3420 <_GLOBAL__sub_I_uartQueue+0x1c>)
    3408:	1c20      	adds	r0, r4, #0
    340a:	2104      	movs	r1, #4
    340c:	2205      	movs	r2, #5
    340e:	2300      	movs	r3, #0
    3410:	4d04      	ldr	r5, [pc, #16]	; (3424 <_GLOBAL__sub_I_uartQueue+0x20>)
    3412:	47a8      	blx	r5
    3414:	1c20      	adds	r0, r4, #0
    3416:	4904      	ldr	r1, [pc, #16]	; (3428 <_GLOBAL__sub_I_uartQueue+0x24>)
    3418:	4a04      	ldr	r2, [pc, #16]	; (342c <_GLOBAL__sub_I_uartQueue+0x28>)
    341a:	4b05      	ldr	r3, [pc, #20]	; (3430 <_GLOBAL__sub_I_uartQueue+0x2c>)
    341c:	4798      	blx	r3
				
			}
			
				return false;
			
    341e:	bd38      	pop	{r3, r4, r5, pc}
    3420:	20004314 	.word	0x20004314
    3424:	000044b1 	.word	0x000044b1
    3428:	000032a5 	.word	0x000032a5
    342c:	200000b0 	.word	0x200000b0
    3430:	00005ded 	.word	0x00005ded

00003434 <mbed_die>:
    3434:	b508      	push	{r3, lr}
    3436:	b672      	cpsid	i
    3438:	2096      	movs	r0, #150	; 0x96
    343a:	f001 f9e1 	bl	4800 <wait_ms>
    343e:	2096      	movs	r0, #150	; 0x96
    3440:	f001 f9de 	bl	4800 <wait_ms>
    3444:	e7f8      	b.n	3438 <mbed_die+0x4>
    3446:	46c0      	nop			; (mov r8, r8)

00003448 <NVIC_SetVector>:
    3448:	4a0b      	ldr	r2, [pc, #44]	; (3478 <NVIC_SetVector+0x30>)
    344a:	b530      	push	{r4, r5, lr}
    344c:	6894      	ldr	r4, [r2, #8]
    344e:	6892      	ldr	r2, [r2, #8]
    3450:	1c23      	adds	r3, r4, #0
    3452:	2a00      	cmp	r2, #0
    3454:	d10c      	bne.n	3470 <NVIC_SetVector+0x28>
    3456:	2300      	movs	r3, #0
    3458:	2280      	movs	r2, #128	; 0x80
    345a:	591d      	ldr	r5, [r3, r4]
    345c:	0592      	lsls	r2, r2, #22
    345e:	189a      	adds	r2, r3, r2
    3460:	3304      	adds	r3, #4
    3462:	6015      	str	r5, [r2, #0]
    3464:	2bb0      	cmp	r3, #176	; 0xb0
    3466:	d1f7      	bne.n	3458 <NVIC_SetVector+0x10>
    3468:	2380      	movs	r3, #128	; 0x80
    346a:	4a03      	ldr	r2, [pc, #12]	; (3478 <NVIC_SetVector+0x30>)
    346c:	059b      	lsls	r3, r3, #22
    346e:	6093      	str	r3, [r2, #8]
    3470:	3010      	adds	r0, #16
    3472:	0080      	lsls	r0, r0, #2
    3474:	50c1      	str	r1, [r0, r3]
    3476:	bd30      	pop	{r4, r5, pc}
    3478:	e000ed00 	.word	0xe000ed00

0000347c <mbed_sdk_init>:
    347c:	b508      	push	{r3, lr}
    347e:	4b04      	ldr	r3, [pc, #16]	; (3490 <mbed_sdk_init+0x14>)
    3480:	781a      	ldrb	r2, [r3, #0]
    3482:	2a00      	cmp	r2, #0
    3484:	d103      	bne.n	348e <mbed_sdk_init+0x12>
    3486:	3201      	adds	r2, #1
    3488:	701a      	strb	r2, [r3, #0]
    348a:	f000 fc0f 	bl	3cac <system_init>
    348e:	bd08      	pop	{r3, pc}
    3490:	2000440c 	.word	0x2000440c

00003494 <_ZN4mbed10FileHandle4flenEv>:
    3494:	6803      	ldr	r3, [r0, #0]
    3496:	b570      	push	{r4, r5, r6, lr}
    3498:	691b      	ldr	r3, [r3, #16]
    349a:	2100      	movs	r1, #0
    349c:	2201      	movs	r2, #1
    349e:	1c04      	adds	r4, r0, #0
    34a0:	4798      	blx	r3
    34a2:	1c06      	adds	r6, r0, #0
    34a4:	1c43      	adds	r3, r0, #1
    34a6:	d00e      	beq.n	34c6 <_ZN4mbed10FileHandle4flenEv+0x32>
    34a8:	6823      	ldr	r3, [r4, #0]
    34aa:	2100      	movs	r1, #0
    34ac:	691b      	ldr	r3, [r3, #16]
    34ae:	2202      	movs	r2, #2
    34b0:	1c20      	adds	r0, r4, #0
    34b2:	4798      	blx	r3
    34b4:	1c05      	adds	r5, r0, #0
    34b6:	6823      	ldr	r3, [r4, #0]
    34b8:	1c20      	adds	r0, r4, #0
    34ba:	691b      	ldr	r3, [r3, #16]
    34bc:	1c31      	adds	r1, r6, #0
    34be:	2200      	movs	r2, #0
    34c0:	4798      	blx	r3
    34c2:	1c28      	adds	r0, r5, #0
    34c4:	bd70      	pop	{r4, r5, r6, pc}
    34c6:	e7fd      	b.n	34c4 <_ZN4mbed10FileHandle4flenEv+0x30>

000034c8 <_ZL11init_serialv.part.0>:
    34c8:	b508      	push	{r3, lr}
    34ca:	4803      	ldr	r0, [pc, #12]	; (34d8 <_ZL11init_serialv.part.0+0x10>)
    34cc:	2104      	movs	r1, #4
    34ce:	2205      	movs	r2, #5
    34d0:	f000 fd2a 	bl	3f28 <serial_init>
    34d4:	bd08      	pop	{r3, pc}
    34d6:	46c0      	nop			; (mov r8, r8)
    34d8:	200045b4 	.word	0x200045b4

000034dc <_ZN4mbed10FileHandleD1Ev>:
    34dc:	4b09      	ldr	r3, [pc, #36]	; (3504 <_ZN4mbed10FileHandleD1Ev+0x28>)
    34de:	b510      	push	{r4, lr}
    34e0:	3308      	adds	r3, #8
    34e2:	6003      	str	r3, [r0, #0]
    34e4:	4b08      	ldr	r3, [pc, #32]	; (3508 <_ZN4mbed10FileHandleD1Ev+0x2c>)
    34e6:	2100      	movs	r1, #0
    34e8:	1c5a      	adds	r2, r3, #1
    34ea:	32ff      	adds	r2, #255	; 0xff
    34ec:	e002      	b.n	34f4 <_ZN4mbed10FileHandleD1Ev+0x18>
    34ee:	3304      	adds	r3, #4
    34f0:	4293      	cmp	r3, r2
    34f2:	d006      	beq.n	3502 <_ZN4mbed10FileHandleD1Ev+0x26>
    34f4:	681c      	ldr	r4, [r3, #0]
    34f6:	4284      	cmp	r4, r0
    34f8:	d1f9      	bne.n	34ee <_ZN4mbed10FileHandleD1Ev+0x12>
    34fa:	6019      	str	r1, [r3, #0]
    34fc:	3304      	adds	r3, #4
    34fe:	4293      	cmp	r3, r2
    3500:	d1f8      	bne.n	34f4 <_ZN4mbed10FileHandleD1Ev+0x18>
    3502:	bd10      	pop	{r4, pc}
    3504:	0000d8e0 	.word	0x0000d8e0
    3508:	20004410 	.word	0x20004410

0000350c <_open>:
    350c:	b5f0      	push	{r4, r5, r6, r7, lr}
    350e:	4647      	mov	r7, r8
    3510:	b480      	push	{r7}
    3512:	1c0e      	adds	r6, r1, #0
    3514:	b082      	sub	sp, #8
    3516:	4934      	ldr	r1, [pc, #208]	; (35e8 <_open+0xdc>)
    3518:	1c05      	adds	r5, r0, #0
    351a:	f006 fc9f 	bl	9e5c <strcmp>
    351e:	1e04      	subs	r4, r0, #0
    3520:	d108      	bne.n	3534 <_open+0x28>
    3522:	4b32      	ldr	r3, [pc, #200]	; (35ec <_open+0xe0>)
    3524:	681b      	ldr	r3, [r3, #0]
    3526:	2b00      	cmp	r3, #0
    3528:	d00f      	beq.n	354a <_open+0x3e>
    352a:	1c20      	adds	r0, r4, #0
    352c:	b002      	add	sp, #8
    352e:	bc04      	pop	{r2}
    3530:	4690      	mov	r8, r2
    3532:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3534:	1c28      	adds	r0, r5, #0
    3536:	492e      	ldr	r1, [pc, #184]	; (35f0 <_open+0xe4>)
    3538:	f006 fc90 	bl	9e5c <strcmp>
    353c:	2800      	cmp	r0, #0
    353e:	d107      	bne.n	3550 <_open+0x44>
    3540:	4b2a      	ldr	r3, [pc, #168]	; (35ec <_open+0xe0>)
    3542:	2401      	movs	r4, #1
    3544:	681b      	ldr	r3, [r3, #0]
    3546:	2b00      	cmp	r3, #0
    3548:	d1ef      	bne.n	352a <_open+0x1e>
    354a:	f7ff ffbd 	bl	34c8 <_ZL11init_serialv.part.0>
    354e:	e7ec      	b.n	352a <_open+0x1e>
    3550:	1c28      	adds	r0, r5, #0
    3552:	4928      	ldr	r1, [pc, #160]	; (35f4 <_open+0xe8>)
    3554:	f006 fc82 	bl	9e5c <strcmp>
    3558:	2800      	cmp	r0, #0
    355a:	d024      	beq.n	35a6 <_open+0x9a>
    355c:	4f26      	ldr	r7, [pc, #152]	; (35f8 <_open+0xec>)
    355e:	2400      	movs	r4, #0
    3560:	1c3b      	adds	r3, r7, #0
    3562:	e003      	b.n	356c <_open+0x60>
    3564:	3401      	adds	r4, #1
    3566:	3304      	adds	r3, #4
    3568:	2c40      	cmp	r4, #64	; 0x40
    356a:	d022      	beq.n	35b2 <_open+0xa6>
    356c:	681a      	ldr	r2, [r3, #0]
    356e:	2a00      	cmp	r2, #0
    3570:	d1f8      	bne.n	3564 <_open+0x58>
    3572:	782b      	ldrb	r3, [r5, #0]
    3574:	2b3a      	cmp	r3, #58	; 0x3a
    3576:	d030      	beq.n	35da <_open+0xce>
    3578:	4668      	mov	r0, sp
    357a:	1c29      	adds	r1, r5, #0
    357c:	f000 fe5e 	bl	423c <_ZN4mbed8FilePathC1EPKc>
    3580:	4668      	mov	r0, sp
    3582:	f000 feb5 	bl	42f0 <_ZN4mbed8FilePath6existsEv>
    3586:	2800      	cmp	r0, #0
    3588:	d013      	beq.n	35b2 <_open+0xa6>
    358a:	4668      	mov	r0, sp
    358c:	f000 fe92 	bl	42b4 <_ZN4mbed8FilePath6isFileEv>
    3590:	2800      	cmp	r0, #0
    3592:	d011      	beq.n	35b8 <_open+0xac>
    3594:	4668      	mov	r0, sp
    3596:	f000 fe99 	bl	42cc <_ZN4mbed8FilePath4fileEv>
    359a:	2800      	cmp	r0, #0
    359c:	d009      	beq.n	35b2 <_open+0xa6>
    359e:	00a3      	lsls	r3, r4, #2
    35a0:	50f8      	str	r0, [r7, r3]
    35a2:	3403      	adds	r4, #3
    35a4:	e7c1      	b.n	352a <_open+0x1e>
    35a6:	4b11      	ldr	r3, [pc, #68]	; (35ec <_open+0xe0>)
    35a8:	2402      	movs	r4, #2
    35aa:	681b      	ldr	r3, [r3, #0]
    35ac:	2b00      	cmp	r3, #0
    35ae:	d1bc      	bne.n	352a <_open+0x1e>
    35b0:	e7cb      	b.n	354a <_open+0x3e>
    35b2:	2401      	movs	r4, #1
    35b4:	4264      	negs	r4, r4
    35b6:	e7b8      	b.n	352a <_open+0x1e>
    35b8:	4668      	mov	r0, sp
    35ba:	f000 fe6d 	bl	4298 <_ZN4mbed8FilePath10fileSystemEv>
    35be:	1e05      	subs	r5, r0, #0
    35c0:	d0f7      	beq.n	35b2 <_open+0xa6>
    35c2:	6803      	ldr	r3, [r0, #0]
    35c4:	4668      	mov	r0, sp
    35c6:	689b      	ldr	r3, [r3, #8]
    35c8:	4698      	mov	r8, r3
    35ca:	f000 fe63 	bl	4294 <_ZN4mbed8FilePath8fileNameEv>
    35ce:	4a0b      	ldr	r2, [pc, #44]	; (35fc <_open+0xf0>)
    35d0:	1c01      	adds	r1, r0, #0
    35d2:	4032      	ands	r2, r6
    35d4:	1c28      	adds	r0, r5, #0
    35d6:	47c0      	blx	r8
    35d8:	e7df      	b.n	359a <_open+0x8e>
    35da:	1c28      	adds	r0, r5, #0
    35dc:	4908      	ldr	r1, [pc, #32]	; (3600 <_open+0xf4>)
    35de:	466a      	mov	r2, sp
    35e0:	f006 fbc6 	bl	9d70 <siscanf>
    35e4:	9800      	ldr	r0, [sp, #0]
    35e6:	e7d8      	b.n	359a <_open+0x8e>
    35e8:	0000d8c8 	.word	0x0000d8c8
    35ec:	20004518 	.word	0x20004518
    35f0:	0000d8d8 	.word	0x0000d8d8
    35f4:	0000d8d0 	.word	0x0000d8d0
    35f8:	20004410 	.word	0x20004410
    35fc:	fffeffff 	.word	0xfffeffff
    3600:	0000d90c 	.word	0x0000d90c

00003604 <_close>:
    3604:	b508      	push	{r3, lr}
    3606:	1c03      	adds	r3, r0, #0
    3608:	2000      	movs	r0, #0
    360a:	2b02      	cmp	r3, #2
    360c:	dd0a      	ble.n	3624 <_close+0x20>
    360e:	4907      	ldr	r1, [pc, #28]	; (362c <_close+0x28>)
    3610:	3b03      	subs	r3, #3
    3612:	009b      	lsls	r3, r3, #2
    3614:	585a      	ldr	r2, [r3, r1]
    3616:	5058      	str	r0, [r3, r1]
    3618:	2a00      	cmp	r2, #0
    361a:	d004      	beq.n	3626 <_close+0x22>
    361c:	6813      	ldr	r3, [r2, #0]
    361e:	1c10      	adds	r0, r2, #0
    3620:	685b      	ldr	r3, [r3, #4]
    3622:	4798      	blx	r3
    3624:	bd08      	pop	{r3, pc}
    3626:	2001      	movs	r0, #1
    3628:	4240      	negs	r0, r0
    362a:	e7fb      	b.n	3624 <_close+0x20>
    362c:	20004410 	.word	0x20004410

00003630 <_write>:
    3630:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3632:	1c0c      	adds	r4, r1, #0
    3634:	1c17      	adds	r7, r2, #0
    3636:	2802      	cmp	r0, #2
    3638:	dc12      	bgt.n	3660 <_write+0x30>
    363a:	4b10      	ldr	r3, [pc, #64]	; (367c <_write+0x4c>)
    363c:	681b      	ldr	r3, [r3, #0]
    363e:	2b00      	cmp	r3, #0
    3640:	d101      	bne.n	3646 <_write+0x16>
    3642:	f7ff ff41 	bl	34c8 <_ZL11init_serialv.part.0>
    3646:	2f00      	cmp	r7, #0
    3648:	d008      	beq.n	365c <_write+0x2c>
    364a:	4d0d      	ldr	r5, [pc, #52]	; (3680 <_write+0x50>)
    364c:	19e6      	adds	r6, r4, r7
    364e:	7821      	ldrb	r1, [r4, #0]
    3650:	1c28      	adds	r0, r5, #0
    3652:	3401      	adds	r4, #1
    3654:	f000 fdd2 	bl	41fc <serial_putc>
    3658:	42b4      	cmp	r4, r6
    365a:	d1f8      	bne.n	364e <_write+0x1e>
    365c:	1c38      	adds	r0, r7, #0
    365e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3660:	3803      	subs	r0, #3
    3662:	4b08      	ldr	r3, [pc, #32]	; (3684 <_write+0x54>)
    3664:	0080      	lsls	r0, r0, #2
    3666:	58c0      	ldr	r0, [r0, r3]
    3668:	2800      	cmp	r0, #0
    366a:	d003      	beq.n	3674 <_write+0x44>
    366c:	6803      	ldr	r3, [r0, #0]
    366e:	681b      	ldr	r3, [r3, #0]
    3670:	4798      	blx	r3
    3672:	e7f4      	b.n	365e <_write+0x2e>
    3674:	2001      	movs	r0, #1
    3676:	4240      	negs	r0, r0
    3678:	e7f1      	b.n	365e <_write+0x2e>
    367a:	46c0      	nop			; (mov r8, r8)
    367c:	20004518 	.word	0x20004518
    3680:	200045b4 	.word	0x200045b4
    3684:	20004410 	.word	0x20004410

00003688 <_read>:
    3688:	b510      	push	{r4, lr}
    368a:	1c0c      	adds	r4, r1, #0
    368c:	2802      	cmp	r0, #2
    368e:	dc09      	bgt.n	36a4 <_read+0x1c>
    3690:	4b0c      	ldr	r3, [pc, #48]	; (36c4 <_read+0x3c>)
    3692:	681b      	ldr	r3, [r3, #0]
    3694:	2b00      	cmp	r3, #0
    3696:	d00f      	beq.n	36b8 <_read+0x30>
    3698:	480b      	ldr	r0, [pc, #44]	; (36c8 <_read+0x40>)
    369a:	f000 fd83 	bl	41a4 <serial_getc>
    369e:	7020      	strb	r0, [r4, #0]
    36a0:	2001      	movs	r0, #1
    36a2:	bd10      	pop	{r4, pc}
    36a4:	3803      	subs	r0, #3
    36a6:	4b09      	ldr	r3, [pc, #36]	; (36cc <_read+0x44>)
    36a8:	0080      	lsls	r0, r0, #2
    36aa:	58c0      	ldr	r0, [r0, r3]
    36ac:	2800      	cmp	r0, #0
    36ae:	d006      	beq.n	36be <_read+0x36>
    36b0:	6803      	ldr	r3, [r0, #0]
    36b2:	689b      	ldr	r3, [r3, #8]
    36b4:	4798      	blx	r3
    36b6:	e7f4      	b.n	36a2 <_read+0x1a>
    36b8:	f7ff ff06 	bl	34c8 <_ZL11init_serialv.part.0>
    36bc:	e7ec      	b.n	3698 <_read+0x10>
    36be:	2001      	movs	r0, #1
    36c0:	4240      	negs	r0, r0
    36c2:	e7ee      	b.n	36a2 <_read+0x1a>
    36c4:	20004518 	.word	0x20004518
    36c8:	200045b4 	.word	0x200045b4
    36cc:	20004410 	.word	0x20004410

000036d0 <_isatty>:
    36d0:	b508      	push	{r3, lr}
    36d2:	1c03      	adds	r3, r0, #0
    36d4:	2001      	movs	r0, #1
    36d6:	2b02      	cmp	r3, #2
    36d8:	dd08      	ble.n	36ec <_isatty+0x1c>
    36da:	3b03      	subs	r3, #3
    36dc:	4a05      	ldr	r2, [pc, #20]	; (36f4 <_isatty+0x24>)
    36de:	009b      	lsls	r3, r3, #2
    36e0:	5898      	ldr	r0, [r3, r2]
    36e2:	2800      	cmp	r0, #0
    36e4:	d003      	beq.n	36ee <_isatty+0x1e>
    36e6:	6803      	ldr	r3, [r0, #0]
    36e8:	68db      	ldr	r3, [r3, #12]
    36ea:	4798      	blx	r3
    36ec:	bd08      	pop	{r3, pc}
    36ee:	2001      	movs	r0, #1
    36f0:	4240      	negs	r0, r0
    36f2:	e7fb      	b.n	36ec <_isatty+0x1c>
    36f4:	20004410 	.word	0x20004410

000036f8 <_lseek>:
    36f8:	b508      	push	{r3, lr}
    36fa:	1c03      	adds	r3, r0, #0
    36fc:	2000      	movs	r0, #0
    36fe:	2b02      	cmp	r3, #2
    3700:	dd08      	ble.n	3714 <_lseek+0x1c>
    3702:	3b03      	subs	r3, #3
    3704:	4805      	ldr	r0, [pc, #20]	; (371c <_lseek+0x24>)
    3706:	009b      	lsls	r3, r3, #2
    3708:	5818      	ldr	r0, [r3, r0]
    370a:	2800      	cmp	r0, #0
    370c:	d003      	beq.n	3716 <_lseek+0x1e>
    370e:	6803      	ldr	r3, [r0, #0]
    3710:	691b      	ldr	r3, [r3, #16]
    3712:	4798      	blx	r3
    3714:	bd08      	pop	{r3, pc}
    3716:	2001      	movs	r0, #1
    3718:	4240      	negs	r0, r0
    371a:	e7fb      	b.n	3714 <_lseek+0x1c>
    371c:	20004410 	.word	0x20004410

00003720 <_fstat>:
    3720:	b508      	push	{r3, lr}
    3722:	2802      	cmp	r0, #2
    3724:	d804      	bhi.n	3730 <_fstat+0x10>
    3726:	2380      	movs	r3, #128	; 0x80
    3728:	2000      	movs	r0, #0
    372a:	019b      	lsls	r3, r3, #6
    372c:	604b      	str	r3, [r1, #4]
    372e:	bd08      	pop	{r3, pc}
    3730:	f004 fc4a 	bl	7fc8 <__errno>
    3734:	2309      	movs	r3, #9
    3736:	6003      	str	r3, [r0, #0]
    3738:	2001      	movs	r0, #1
    373a:	4240      	negs	r0, r0
    373c:	e7f7      	b.n	372e <_fstat+0xe>
    373e:	46c0      	nop			; (mov r8, r8)

00003740 <__cxa_pure_virtual>:
    3740:	b508      	push	{r3, lr}
    3742:	2001      	movs	r0, #1
    3744:	f004 fc46 	bl	7fd4 <exit>

00003748 <mbed_main>:
    3748:	4770      	bx	lr
    374a:	46c0      	nop			; (mov r8, r8)

0000374c <__wrap_main>:
    374c:	b508      	push	{r3, lr}
    374e:	f7ff fe95 	bl	347c <mbed_sdk_init>
    3752:	f7ff fff9 	bl	3748 <mbed_main>
    3756:	f7fe f8e5 	bl	1924 <main>
    375a:	bd08      	pop	{r3, pc}

0000375c <_sbrk>:
    375c:	4a07      	ldr	r2, [pc, #28]	; (377c <_sbrk+0x20>)
    375e:	6813      	ldr	r3, [r2, #0]
    3760:	1818      	adds	r0, r3, r0
    3762:	f3ef 8108 	mrs	r1, MSP
    3766:	4288      	cmp	r0, r1
    3768:	d202      	bcs.n	3770 <_sbrk+0x14>
    376a:	6010      	str	r0, [r2, #0]
    376c:	1c18      	adds	r0, r3, #0
    376e:	4770      	bx	lr
    3770:	220c      	movs	r2, #12
    3772:	2001      	movs	r0, #1
    3774:	4b02      	ldr	r3, [pc, #8]	; (3780 <_sbrk+0x24>)
    3776:	4240      	negs	r0, r0
    3778:	601a      	str	r2, [r3, #0]
    377a:	e7f8      	b.n	376e <_sbrk+0x12>
    377c:	200000cc 	.word	0x200000cc
    3780:	20004624 	.word	0x20004624

00003784 <_exit>:
    3784:	b508      	push	{r3, lr}
    3786:	2800      	cmp	r0, #0
    3788:	d100      	bne.n	378c <_exit+0x8>
    378a:	e7fe      	b.n	378a <_exit+0x6>
    378c:	f7ff fe52 	bl	3434 <mbed_die>
    3790:	e7fb      	b.n	378a <_exit+0x6>
    3792:	46c0      	nop			; (mov r8, r8)

00003794 <_ZN4mbed26mbed_set_unbuffered_streamEP7__sFILE>:
    3794:	b508      	push	{r3, lr}
    3796:	2100      	movs	r1, #0
    3798:	f006 fa35 	bl	9c06 <setbuf>
    379c:	bd08      	pop	{r3, pc}
    379e:	46c0      	nop			; (mov r8, r8)

000037a0 <Dummy_Handler>:
    37a0:	e7fe      	b.n	37a0 <Dummy_Handler>
    37a2:	46c0      	nop			; (mov r8, r8)

000037a4 <Reset_Handler>:
    37a4:	4816      	ldr	r0, [pc, #88]	; (3800 <Reset_Handler+0x5c>)
    37a6:	4917      	ldr	r1, [pc, #92]	; (3804 <Reset_Handler+0x60>)
    37a8:	b510      	push	{r4, lr}
    37aa:	4288      	cmp	r0, r1
    37ac:	d00d      	beq.n	37ca <Reset_Handler+0x26>
    37ae:	4b16      	ldr	r3, [pc, #88]	; (3808 <Reset_Handler+0x64>)
    37b0:	4299      	cmp	r1, r3
    37b2:	d20a      	bcs.n	37ca <Reset_Handler+0x26>
    37b4:	43ca      	mvns	r2, r1
    37b6:	18d3      	adds	r3, r2, r3
    37b8:	2200      	movs	r2, #0
    37ba:	089b      	lsrs	r3, r3, #2
    37bc:	3301      	adds	r3, #1
    37be:	009b      	lsls	r3, r3, #2
    37c0:	5884      	ldr	r4, [r0, r2]
    37c2:	508c      	str	r4, [r1, r2]
    37c4:	3204      	adds	r2, #4
    37c6:	429a      	cmp	r2, r3
    37c8:	d1fa      	bne.n	37c0 <Reset_Handler+0x1c>
    37ca:	4910      	ldr	r1, [pc, #64]	; (380c <Reset_Handler+0x68>)
    37cc:	4b10      	ldr	r3, [pc, #64]	; (3810 <Reset_Handler+0x6c>)
    37ce:	4299      	cmp	r1, r3
    37d0:	d20b      	bcs.n	37ea <Reset_Handler+0x46>
    37d2:	43ca      	mvns	r2, r1
    37d4:	2000      	movs	r0, #0
    37d6:	18d3      	adds	r3, r2, r3
    37d8:	2200      	movs	r2, #0
    37da:	089b      	lsrs	r3, r3, #2
    37dc:	3301      	adds	r3, #1
    37de:	009b      	lsls	r3, r3, #2
    37e0:	188c      	adds	r4, r1, r2
    37e2:	3204      	adds	r2, #4
    37e4:	6020      	str	r0, [r4, #0]
    37e6:	429a      	cmp	r2, r3
    37e8:	d1fa      	bne.n	37e0 <Reset_Handler+0x3c>
    37ea:	21ff      	movs	r1, #255	; 0xff
    37ec:	4b09      	ldr	r3, [pc, #36]	; (3814 <Reset_Handler+0x70>)
    37ee:	4a0a      	ldr	r2, [pc, #40]	; (3818 <Reset_Handler+0x74>)
    37f0:	438b      	bics	r3, r1
    37f2:	6093      	str	r3, [r2, #8]
    37f4:	f004 feec 	bl	85d0 <__libc_init_array>
    37f8:	f7ff ffa8 	bl	374c <__wrap_main>
    37fc:	e7fe      	b.n	37fc <Reset_Handler+0x58>
    37fe:	46c0      	nop			; (mov r8, r8)
    3800:	0000e690 	.word	0x0000e690
    3804:	200000b0 	.word	0x200000b0
    3808:	20000174 	.word	0x20000174
    380c:	20000174 	.word	0x20000174
    3810:	20004628 	.word	0x20004628
    3814:	00000000 	.word	0x00000000
    3818:	e000ed00 	.word	0xe000ed00

0000381c <extint_register_callback>:
    381c:	2317      	movs	r3, #23
    381e:	2a00      	cmp	r2, #0
    3820:	d001      	beq.n	3826 <extint_register_callback+0xa>
    3822:	1c18      	adds	r0, r3, #0
    3824:	4770      	bx	lr
    3826:	4a06      	ldr	r2, [pc, #24]	; (3840 <extint_register_callback+0x24>)
    3828:	0089      	lsls	r1, r1, #2
    382a:	588b      	ldr	r3, [r1, r2]
    382c:	2b00      	cmp	r3, #0
    382e:	d003      	beq.n	3838 <extint_register_callback+0x1c>
    3830:	4283      	cmp	r3, r0
    3832:	d003      	beq.n	383c <extint_register_callback+0x20>
    3834:	231d      	movs	r3, #29
    3836:	e7f4      	b.n	3822 <extint_register_callback+0x6>
    3838:	5088      	str	r0, [r1, r2]
    383a:	e7f2      	b.n	3822 <extint_register_callback+0x6>
    383c:	2300      	movs	r3, #0
    383e:	e7f0      	b.n	3822 <extint_register_callback+0x6>
    3840:	20004574 	.word	0x20004574

00003844 <extint_chan_enable_callback>:
    3844:	2317      	movs	r3, #23
    3846:	2900      	cmp	r1, #0
    3848:	d001      	beq.n	384e <extint_chan_enable_callback+0xa>
    384a:	1c18      	adds	r0, r3, #0
    384c:	4770      	bx	lr
    384e:	2200      	movs	r2, #0
    3850:	281f      	cmp	r0, #31
    3852:	d800      	bhi.n	3856 <extint_chan_enable_callback+0x12>
    3854:	4a02      	ldr	r2, [pc, #8]	; (3860 <extint_chan_enable_callback+0x1c>)
    3856:	2301      	movs	r3, #1
    3858:	4083      	lsls	r3, r0
    385a:	60d3      	str	r3, [r2, #12]
    385c:	2300      	movs	r3, #0
    385e:	e7f4      	b.n	384a <extint_chan_enable_callback+0x6>
    3860:	40001800 	.word	0x40001800

00003864 <EIC_Handler>:
    3864:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3866:	2300      	movs	r3, #0
    3868:	2601      	movs	r6, #1
    386a:	4c0b      	ldr	r4, [pc, #44]	; (3898 <EIC_Handler+0x34>)
    386c:	4d0b      	ldr	r5, [pc, #44]	; (389c <EIC_Handler+0x38>)
    386e:	4f0c      	ldr	r7, [pc, #48]	; (38a0 <EIC_Handler+0x3c>)
    3870:	7023      	strb	r3, [r4, #0]
    3872:	1c32      	adds	r2, r6, #0
    3874:	409a      	lsls	r2, r3
    3876:	6929      	ldr	r1, [r5, #16]
    3878:	4211      	tst	r1, r2
    387a:	d005      	beq.n	3888 <EIC_Handler+0x24>
    387c:	612a      	str	r2, [r5, #16]
    387e:	009b      	lsls	r3, r3, #2
    3880:	59db      	ldr	r3, [r3, r7]
    3882:	2b00      	cmp	r3, #0
    3884:	d000      	beq.n	3888 <EIC_Handler+0x24>
    3886:	4798      	blx	r3
    3888:	7823      	ldrb	r3, [r4, #0]
    388a:	3301      	adds	r3, #1
    388c:	b2db      	uxtb	r3, r3
    388e:	7023      	strb	r3, [r4, #0]
    3890:	2b0f      	cmp	r3, #15
    3892:	d9ee      	bls.n	3872 <EIC_Handler+0xe>
    3894:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3896:	46c0      	nop			; (mov r8, r8)
    3898:	20004570 	.word	0x20004570
    389c:	40001800 	.word	0x40001800
    38a0:	20004574 	.word	0x20004574

000038a4 <_extint_enable>:
    38a4:	2302      	movs	r3, #2
    38a6:	4a04      	ldr	r2, [pc, #16]	; (38b8 <_extint_enable+0x14>)
    38a8:	7811      	ldrb	r1, [r2, #0]
    38aa:	430b      	orrs	r3, r1
    38ac:	7013      	strb	r3, [r2, #0]
    38ae:	7853      	ldrb	r3, [r2, #1]
    38b0:	b25b      	sxtb	r3, r3
    38b2:	2b00      	cmp	r3, #0
    38b4:	dbfb      	blt.n	38ae <_extint_enable+0xa>
    38b6:	4770      	bx	lr
    38b8:	40001800 	.word	0x40001800

000038bc <_system_extint_init>:
    38bc:	2340      	movs	r3, #64	; 0x40
    38be:	b500      	push	{lr}
    38c0:	4a12      	ldr	r2, [pc, #72]	; (390c <_system_extint_init+0x50>)
    38c2:	b083      	sub	sp, #12
    38c4:	6991      	ldr	r1, [r2, #24]
    38c6:	2005      	movs	r0, #5
    38c8:	430b      	orrs	r3, r1
    38ca:	6193      	str	r3, [r2, #24]
    38cc:	2300      	movs	r3, #0
    38ce:	a901      	add	r1, sp, #4
    38d0:	700b      	strb	r3, [r1, #0]
    38d2:	f000 f9c9 	bl	3c68 <system_gclk_chan_set_config>
    38d6:	2005      	movs	r0, #5
    38d8:	f000 f988 	bl	3bec <system_gclk_chan_enable>
    38dc:	2301      	movs	r3, #1
    38de:	4a0c      	ldr	r2, [pc, #48]	; (3910 <_system_extint_init+0x54>)
    38e0:	7811      	ldrb	r1, [r2, #0]
    38e2:	430b      	orrs	r3, r1
    38e4:	7013      	strb	r3, [r2, #0]
    38e6:	7853      	ldrb	r3, [r2, #1]
    38e8:	b25b      	sxtb	r3, r3
    38ea:	2b00      	cmp	r3, #0
    38ec:	dbfb      	blt.n	38e6 <_system_extint_init+0x2a>
    38ee:	4b09      	ldr	r3, [pc, #36]	; (3914 <_system_extint_init+0x58>)
    38f0:	2200      	movs	r2, #0
    38f2:	1c19      	adds	r1, r3, #0
    38f4:	3140      	adds	r1, #64	; 0x40
    38f6:	c304      	stmia	r3!, {r2}
    38f8:	428b      	cmp	r3, r1
    38fa:	d1fc      	bne.n	38f6 <_system_extint_init+0x3a>
    38fc:	2210      	movs	r2, #16
    38fe:	4b06      	ldr	r3, [pc, #24]	; (3918 <_system_extint_init+0x5c>)
    3900:	601a      	str	r2, [r3, #0]
    3902:	f7ff ffcf 	bl	38a4 <_extint_enable>
    3906:	b003      	add	sp, #12
    3908:	bd00      	pop	{pc}
    390a:	46c0      	nop			; (mov r8, r8)
    390c:	40000400 	.word	0x40000400
    3910:	40001800 	.word	0x40001800
    3914:	20004574 	.word	0x20004574
    3918:	e000e100 	.word	0xe000e100

0000391c <extint_chan_get_config_defaults>:
    391c:	2300      	movs	r3, #0
    391e:	2201      	movs	r2, #1
    3920:	6003      	str	r3, [r0, #0]
    3922:	6043      	str	r3, [r0, #4]
    3924:	7283      	strb	r3, [r0, #10]
    3926:	3302      	adds	r3, #2
    3928:	7202      	strb	r2, [r0, #8]
    392a:	7242      	strb	r2, [r0, #9]
    392c:	72c3      	strb	r3, [r0, #11]
    392e:	4770      	bx	lr

00003930 <extint_chan_set_config>:
    3930:	b5f0      	push	{r4, r5, r6, r7, lr}
    3932:	2300      	movs	r3, #0
    3934:	1c0c      	adds	r4, r1, #0
    3936:	b083      	sub	sp, #12
    3938:	a901      	add	r1, sp, #4
    393a:	704b      	strb	r3, [r1, #1]
    393c:	70cb      	strb	r3, [r1, #3]
    393e:	7923      	ldrb	r3, [r4, #4]
    3940:	1c05      	adds	r5, r0, #0
    3942:	700b      	strb	r3, [r1, #0]
    3944:	7a23      	ldrb	r3, [r4, #8]
    3946:	7820      	ldrb	r0, [r4, #0]
    3948:	708b      	strb	r3, [r1, #2]
    394a:	2600      	movs	r6, #0
    394c:	f000 f882 	bl	3a54 <system_pinmux_pin_set_config>
    3950:	2d1f      	cmp	r5, #31
    3952:	d800      	bhi.n	3956 <extint_chan_set_config+0x26>
    3954:	4e12      	ldr	r6, [pc, #72]	; (39a0 <extint_chan_set_config+0x70>)
    3956:	2207      	movs	r2, #7
    3958:	7aa3      	ldrb	r3, [r4, #10]
    395a:	402a      	ands	r2, r5
    395c:	0092      	lsls	r2, r2, #2
    395e:	7ae0      	ldrb	r0, [r4, #11]
    3960:	2b00      	cmp	r3, #0
    3962:	d001      	beq.n	3968 <extint_chan_set_config+0x38>
    3964:	2308      	movs	r3, #8
    3966:	4318      	orrs	r0, r3
    3968:	270f      	movs	r7, #15
    396a:	4097      	lsls	r7, r2
    396c:	08eb      	lsrs	r3, r5, #3
    396e:	009b      	lsls	r3, r3, #2
    3970:	18f3      	adds	r3, r6, r3
    3972:	6999      	ldr	r1, [r3, #24]
    3974:	4090      	lsls	r0, r2
    3976:	43b9      	bics	r1, r7
    3978:	1c0a      	adds	r2, r1, #0
    397a:	4302      	orrs	r2, r0
    397c:	619a      	str	r2, [r3, #24]
    397e:	7a63      	ldrb	r3, [r4, #9]
    3980:	2b00      	cmp	r3, #0
    3982:	d106      	bne.n	3992 <extint_chan_set_config+0x62>
    3984:	2201      	movs	r2, #1
    3986:	40aa      	lsls	r2, r5
    3988:	6973      	ldr	r3, [r6, #20]
    398a:	4393      	bics	r3, r2
    398c:	6173      	str	r3, [r6, #20]
    398e:	b003      	add	sp, #12
    3990:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3992:	2201      	movs	r2, #1
    3994:	40aa      	lsls	r2, r5
    3996:	1c15      	adds	r5, r2, #0
    3998:	6973      	ldr	r3, [r6, #20]
    399a:	431d      	orrs	r5, r3
    399c:	6175      	str	r5, [r6, #20]
    399e:	e7f6      	b.n	398e <extint_chan_set_config+0x5e>
    39a0:	40001800 	.word	0x40001800

000039a4 <_system_pinmux_config>:
    39a4:	78d3      	ldrb	r3, [r2, #3]
    39a6:	b570      	push	{r4, r5, r6, lr}
    39a8:	2b00      	cmp	r3, #0
    39aa:	d131      	bne.n	3a10 <_system_pinmux_config+0x6c>
    39ac:	7814      	ldrb	r4, [r2, #0]
    39ae:	2c80      	cmp	r4, #128	; 0x80
    39b0:	d047      	beq.n	3a42 <_system_pinmux_config+0x9e>
    39b2:	2380      	movs	r3, #128	; 0x80
    39b4:	0624      	lsls	r4, r4, #24
    39b6:	025b      	lsls	r3, r3, #9
    39b8:	431c      	orrs	r4, r3
    39ba:	7853      	ldrb	r3, [r2, #1]
    39bc:	2502      	movs	r5, #2
    39be:	1c1e      	adds	r6, r3, #0
    39c0:	43ae      	bics	r6, r5
    39c2:	d107      	bne.n	39d4 <_system_pinmux_config+0x30>
    39c4:	7893      	ldrb	r3, [r2, #2]
    39c6:	2b00      	cmp	r3, #0
    39c8:	d137      	bne.n	3a3a <_system_pinmux_config+0x96>
    39ca:	2380      	movs	r3, #128	; 0x80
    39cc:	029b      	lsls	r3, r3, #10
    39ce:	431c      	orrs	r4, r3
    39d0:	6041      	str	r1, [r0, #4]
    39d2:	7853      	ldrb	r3, [r2, #1]
    39d4:	3b01      	subs	r3, #1
    39d6:	2b01      	cmp	r3, #1
    39d8:	d935      	bls.n	3a46 <_system_pinmux_config+0xa2>
    39da:	25a0      	movs	r5, #160	; 0xa0
    39dc:	040b      	lsls	r3, r1, #16
    39de:	05ed      	lsls	r5, r5, #23
    39e0:	0c1b      	lsrs	r3, r3, #16
    39e2:	432b      	orrs	r3, r5
    39e4:	25d0      	movs	r5, #208	; 0xd0
    39e6:	4323      	orrs	r3, r4
    39e8:	6283      	str	r3, [r0, #40]	; 0x28
    39ea:	062d      	lsls	r5, r5, #24
    39ec:	0c0b      	lsrs	r3, r1, #16
    39ee:	432b      	orrs	r3, r5
    39f0:	4323      	orrs	r3, r4
    39f2:	6283      	str	r3, [r0, #40]	; 0x28
    39f4:	78d3      	ldrb	r3, [r2, #3]
    39f6:	2b00      	cmp	r3, #0
    39f8:	d109      	bne.n	3a0e <_system_pinmux_config+0x6a>
    39fa:	0363      	lsls	r3, r4, #13
    39fc:	d503      	bpl.n	3a06 <_system_pinmux_config+0x62>
    39fe:	7893      	ldrb	r3, [r2, #2]
    3a00:	2b01      	cmp	r3, #1
    3a02:	d023      	beq.n	3a4c <_system_pinmux_config+0xa8>
    3a04:	6141      	str	r1, [r0, #20]
    3a06:	7853      	ldrb	r3, [r2, #1]
    3a08:	3b01      	subs	r3, #1
    3a0a:	2b01      	cmp	r3, #1
    3a0c:	d913      	bls.n	3a36 <_system_pinmux_config+0x92>
    3a0e:	bd70      	pop	{r4, r5, r6, pc}
    3a10:	24a0      	movs	r4, #160	; 0xa0
    3a12:	040b      	lsls	r3, r1, #16
    3a14:	05e4      	lsls	r4, r4, #23
    3a16:	0c1b      	lsrs	r3, r3, #16
    3a18:	4323      	orrs	r3, r4
    3a1a:	24d0      	movs	r4, #208	; 0xd0
    3a1c:	6041      	str	r1, [r0, #4]
    3a1e:	0624      	lsls	r4, r4, #24
    3a20:	6283      	str	r3, [r0, #40]	; 0x28
    3a22:	0c0b      	lsrs	r3, r1, #16
    3a24:	4323      	orrs	r3, r4
    3a26:	6283      	str	r3, [r0, #40]	; 0x28
    3a28:	78d3      	ldrb	r3, [r2, #3]
    3a2a:	2b00      	cmp	r3, #0
    3a2c:	d1ef      	bne.n	3a0e <_system_pinmux_config+0x6a>
    3a2e:	7853      	ldrb	r3, [r2, #1]
    3a30:	3b01      	subs	r3, #1
    3a32:	2b01      	cmp	r3, #1
    3a34:	d8eb      	bhi.n	3a0e <_system_pinmux_config+0x6a>
    3a36:	6081      	str	r1, [r0, #8]
    3a38:	e7e9      	b.n	3a0e <_system_pinmux_config+0x6a>
    3a3a:	23c0      	movs	r3, #192	; 0xc0
    3a3c:	02db      	lsls	r3, r3, #11
    3a3e:	431c      	orrs	r4, r3
    3a40:	e7c6      	b.n	39d0 <_system_pinmux_config+0x2c>
    3a42:	2400      	movs	r4, #0
    3a44:	e7b9      	b.n	39ba <_system_pinmux_config+0x16>
    3a46:	4b02      	ldr	r3, [pc, #8]	; (3a50 <_system_pinmux_config+0xac>)
    3a48:	401c      	ands	r4, r3
    3a4a:	e7c6      	b.n	39da <_system_pinmux_config+0x36>
    3a4c:	6181      	str	r1, [r0, #24]
    3a4e:	e7da      	b.n	3a06 <_system_pinmux_config+0x62>
    3a50:	fffbffff 	.word	0xfffbffff

00003a54 <system_pinmux_pin_set_config>:
    3a54:	b508      	push	{r3, lr}
    3a56:	1c0a      	adds	r2, r1, #0
    3a58:	1c03      	adds	r3, r0, #0
    3a5a:	09c1      	lsrs	r1, r0, #7
    3a5c:	2000      	movs	r0, #0
    3a5e:	2900      	cmp	r1, #0
    3a60:	d104      	bne.n	3a6c <system_pinmux_pin_set_config+0x18>
    3a62:	4906      	ldr	r1, [pc, #24]	; (3a7c <system_pinmux_pin_set_config+0x28>)
    3a64:	0958      	lsrs	r0, r3, #5
    3a66:	468c      	mov	ip, r1
    3a68:	01c0      	lsls	r0, r0, #7
    3a6a:	4460      	add	r0, ip
    3a6c:	211f      	movs	r1, #31
    3a6e:	400b      	ands	r3, r1
    3a70:	391e      	subs	r1, #30
    3a72:	4099      	lsls	r1, r3
    3a74:	f7ff ff96 	bl	39a4 <_system_pinmux_config>
    3a78:	bd08      	pop	{r3, pc}
    3a7a:	46c0      	nop			; (mov r8, r8)
    3a7c:	41004400 	.word	0x41004400

00003a80 <system_gclk_init>:
    3a80:	2308      	movs	r3, #8
    3a82:	4a06      	ldr	r2, [pc, #24]	; (3a9c <system_gclk_init+0x1c>)
    3a84:	6991      	ldr	r1, [r2, #24]
    3a86:	430b      	orrs	r3, r1
    3a88:	6193      	str	r3, [r2, #24]
    3a8a:	2301      	movs	r3, #1
    3a8c:	2101      	movs	r1, #1
    3a8e:	4a04      	ldr	r2, [pc, #16]	; (3aa0 <system_gclk_init+0x20>)
    3a90:	7013      	strb	r3, [r2, #0]
    3a92:	7813      	ldrb	r3, [r2, #0]
    3a94:	4219      	tst	r1, r3
    3a96:	d1fc      	bne.n	3a92 <system_gclk_init+0x12>
    3a98:	4770      	bx	lr
    3a9a:	46c0      	nop			; (mov r8, r8)
    3a9c:	40000400 	.word	0x40000400
    3aa0:	40000c00 	.word	0x40000c00

00003aa4 <system_gclk_gen_set_config>:
    3aa4:	b570      	push	{r4, r5, r6, lr}
    3aa6:	780d      	ldrb	r5, [r1, #0]
    3aa8:	784b      	ldrb	r3, [r1, #1]
    3aaa:	022d      	lsls	r5, r5, #8
    3aac:	1c04      	adds	r4, r0, #0
    3aae:	4305      	orrs	r5, r0
    3ab0:	2b00      	cmp	r3, #0
    3ab2:	d002      	beq.n	3aba <system_gclk_gen_set_config+0x16>
    3ab4:	2380      	movs	r3, #128	; 0x80
    3ab6:	02db      	lsls	r3, r3, #11
    3ab8:	431d      	orrs	r5, r3
    3aba:	7a4b      	ldrb	r3, [r1, #9]
    3abc:	2b00      	cmp	r3, #0
    3abe:	d002      	beq.n	3ac6 <system_gclk_gen_set_config+0x22>
    3ac0:	2380      	movs	r3, #128	; 0x80
    3ac2:	031b      	lsls	r3, r3, #12
    3ac4:	431d      	orrs	r5, r3
    3ac6:	684e      	ldr	r6, [r1, #4]
    3ac8:	2e01      	cmp	r6, #1
    3aca:	d90f      	bls.n	3aec <system_gclk_gen_set_config+0x48>
    3acc:	1e73      	subs	r3, r6, #1
    3ace:	4033      	ands	r3, r6
    3ad0:	d129      	bne.n	3b26 <system_gclk_gen_set_config+0x82>
    3ad2:	2e02      	cmp	r6, #2
    3ad4:	d005      	beq.n	3ae2 <system_gclk_gen_set_config+0x3e>
    3ad6:	2202      	movs	r2, #2
    3ad8:	3301      	adds	r3, #1
    3ada:	0052      	lsls	r2, r2, #1
    3adc:	4296      	cmp	r6, r2
    3ade:	d8fb      	bhi.n	3ad8 <system_gclk_gen_set_config+0x34>
    3ae0:	021b      	lsls	r3, r3, #8
    3ae2:	4318      	orrs	r0, r3
    3ae4:	2380      	movs	r3, #128	; 0x80
    3ae6:	1c04      	adds	r4, r0, #0
    3ae8:	035b      	lsls	r3, r3, #13
    3aea:	431d      	orrs	r5, r3
    3aec:	7a0b      	ldrb	r3, [r1, #8]
    3aee:	2b00      	cmp	r3, #0
    3af0:	d002      	beq.n	3af8 <system_gclk_gen_set_config+0x54>
    3af2:	2380      	movs	r3, #128	; 0x80
    3af4:	039b      	lsls	r3, r3, #14
    3af6:	431d      	orrs	r5, r3
    3af8:	4a0e      	ldr	r2, [pc, #56]	; (3b34 <system_gclk_gen_set_config+0x90>)
    3afa:	7853      	ldrb	r3, [r2, #1]
    3afc:	4e0d      	ldr	r6, [pc, #52]	; (3b34 <system_gclk_gen_set_config+0x90>)
    3afe:	b25b      	sxtb	r3, r3
    3b00:	2b00      	cmp	r3, #0
    3b02:	dbfa      	blt.n	3afa <system_gclk_gen_set_config+0x56>
    3b04:	f000 f8de 	bl	3cc4 <cpu_irq_enter_critical>
    3b08:	60b4      	str	r4, [r6, #8]
    3b0a:	7873      	ldrb	r3, [r6, #1]
    3b0c:	4a09      	ldr	r2, [pc, #36]	; (3b34 <system_gclk_gen_set_config+0x90>)
    3b0e:	b25b      	sxtb	r3, r3
    3b10:	2b00      	cmp	r3, #0
    3b12:	dbfa      	blt.n	3b0a <system_gclk_gen_set_config+0x66>
    3b14:	2380      	movs	r3, #128	; 0x80
    3b16:	6851      	ldr	r1, [r2, #4]
    3b18:	025b      	lsls	r3, r3, #9
    3b1a:	400b      	ands	r3, r1
    3b1c:	431d      	orrs	r5, r3
    3b1e:	6055      	str	r5, [r2, #4]
    3b20:	f000 f8ee 	bl	3d00 <cpu_irq_leave_critical>
    3b24:	bd70      	pop	{r4, r5, r6, pc}
    3b26:	2380      	movs	r3, #128	; 0x80
    3b28:	0234      	lsls	r4, r6, #8
    3b2a:	029b      	lsls	r3, r3, #10
    3b2c:	4304      	orrs	r4, r0
    3b2e:	431d      	orrs	r5, r3
    3b30:	e7dc      	b.n	3aec <system_gclk_gen_set_config+0x48>
    3b32:	46c0      	nop			; (mov r8, r8)
    3b34:	40000c00 	.word	0x40000c00

00003b38 <system_gclk_gen_enable>:
    3b38:	b510      	push	{r4, lr}
    3b3a:	1c04      	adds	r4, r0, #0
    3b3c:	4a0b      	ldr	r2, [pc, #44]	; (3b6c <system_gclk_gen_enable+0x34>)
    3b3e:	7853      	ldrb	r3, [r2, #1]
    3b40:	b25b      	sxtb	r3, r3
    3b42:	2b00      	cmp	r3, #0
    3b44:	dbfb      	blt.n	3b3e <system_gclk_gen_enable+0x6>
    3b46:	f000 f8bd 	bl	3cc4 <cpu_irq_enter_critical>
    3b4a:	4b09      	ldr	r3, [pc, #36]	; (3b70 <system_gclk_gen_enable+0x38>)
    3b4c:	4907      	ldr	r1, [pc, #28]	; (3b6c <system_gclk_gen_enable+0x34>)
    3b4e:	701c      	strb	r4, [r3, #0]
    3b50:	784b      	ldrb	r3, [r1, #1]
    3b52:	4a06      	ldr	r2, [pc, #24]	; (3b6c <system_gclk_gen_enable+0x34>)
    3b54:	b25b      	sxtb	r3, r3
    3b56:	2b00      	cmp	r3, #0
    3b58:	dbfa      	blt.n	3b50 <system_gclk_gen_enable+0x18>
    3b5a:	2180      	movs	r1, #128	; 0x80
    3b5c:	6853      	ldr	r3, [r2, #4]
    3b5e:	0249      	lsls	r1, r1, #9
    3b60:	430b      	orrs	r3, r1
    3b62:	6053      	str	r3, [r2, #4]
    3b64:	f000 f8cc 	bl	3d00 <cpu_irq_leave_critical>
    3b68:	bd10      	pop	{r4, pc}
    3b6a:	46c0      	nop			; (mov r8, r8)
    3b6c:	40000c00 	.word	0x40000c00
    3b70:	40000c04 	.word	0x40000c04

00003b74 <system_gclk_gen_get_hz>:
    3b74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3b76:	1c07      	adds	r7, r0, #0
    3b78:	4a19      	ldr	r2, [pc, #100]	; (3be0 <system_gclk_gen_get_hz+0x6c>)
    3b7a:	7853      	ldrb	r3, [r2, #1]
    3b7c:	b25b      	sxtb	r3, r3
    3b7e:	2b00      	cmp	r3, #0
    3b80:	dbfb      	blt.n	3b7a <system_gclk_gen_get_hz+0x6>
    3b82:	f000 f89f 	bl	3cc4 <cpu_irq_enter_critical>
    3b86:	4b17      	ldr	r3, [pc, #92]	; (3be4 <system_gclk_gen_get_hz+0x70>)
    3b88:	4a15      	ldr	r2, [pc, #84]	; (3be0 <system_gclk_gen_get_hz+0x6c>)
    3b8a:	701f      	strb	r7, [r3, #0]
    3b8c:	7853      	ldrb	r3, [r2, #1]
    3b8e:	4c14      	ldr	r4, [pc, #80]	; (3be0 <system_gclk_gen_get_hz+0x6c>)
    3b90:	b25b      	sxtb	r3, r3
    3b92:	2b00      	cmp	r3, #0
    3b94:	dbfa      	blt.n	3b8c <system_gclk_gen_get_hz+0x18>
    3b96:	6860      	ldr	r0, [r4, #4]
    3b98:	04c0      	lsls	r0, r0, #19
    3b9a:	0ec0      	lsrs	r0, r0, #27
    3b9c:	f000 ff4c 	bl	4a38 <system_clock_source_get_hz>
    3ba0:	1c06      	adds	r6, r0, #0
    3ba2:	4b10      	ldr	r3, [pc, #64]	; (3be4 <system_gclk_gen_get_hz+0x70>)
    3ba4:	701f      	strb	r7, [r3, #0]
    3ba6:	6865      	ldr	r5, [r4, #4]
    3ba8:	4b0f      	ldr	r3, [pc, #60]	; (3be8 <system_gclk_gen_get_hz+0x74>)
    3baa:	02ed      	lsls	r5, r5, #11
    3bac:	0fed      	lsrs	r5, r5, #31
    3bae:	701f      	strb	r7, [r3, #0]
    3bb0:	7863      	ldrb	r3, [r4, #1]
    3bb2:	b25b      	sxtb	r3, r3
    3bb4:	2b00      	cmp	r3, #0
    3bb6:	dbfb      	blt.n	3bb0 <system_gclk_gen_get_hz+0x3c>
    3bb8:	4b09      	ldr	r3, [pc, #36]	; (3be0 <system_gclk_gen_get_hz+0x6c>)
    3bba:	6899      	ldr	r1, [r3, #8]
    3bbc:	0a09      	lsrs	r1, r1, #8
    3bbe:	b28c      	uxth	r4, r1
    3bc0:	f000 f89e 	bl	3d00 <cpu_irq_leave_critical>
    3bc4:	2d00      	cmp	r5, #0
    3bc6:	d003      	beq.n	3bd0 <system_gclk_gen_get_hz+0x5c>
    3bc8:	1c61      	adds	r1, r4, #1
    3bca:	40ce      	lsrs	r6, r1
    3bcc:	1c30      	adds	r0, r6, #0
    3bce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3bd0:	2c01      	cmp	r4, #1
    3bd2:	d9fb      	bls.n	3bcc <system_gclk_gen_get_hz+0x58>
    3bd4:	1c30      	adds	r0, r6, #0
    3bd6:	1c21      	adds	r1, r4, #0
    3bd8:	f002 f914 	bl	5e04 <__aeabi_uidiv>
    3bdc:	1c06      	adds	r6, r0, #0
    3bde:	e7f5      	b.n	3bcc <system_gclk_gen_get_hz+0x58>
    3be0:	40000c00 	.word	0x40000c00
    3be4:	40000c04 	.word	0x40000c04
    3be8:	40000c08 	.word	0x40000c08

00003bec <system_gclk_chan_enable>:
    3bec:	b510      	push	{r4, lr}
    3bee:	1c04      	adds	r4, r0, #0
    3bf0:	f000 f868 	bl	3cc4 <cpu_irq_enter_critical>
    3bf4:	2180      	movs	r1, #128	; 0x80
    3bf6:	4b05      	ldr	r3, [pc, #20]	; (3c0c <system_gclk_chan_enable+0x20>)
    3bf8:	4a05      	ldr	r2, [pc, #20]	; (3c10 <system_gclk_chan_enable+0x24>)
    3bfa:	701c      	strb	r4, [r3, #0]
    3bfc:	8853      	ldrh	r3, [r2, #2]
    3bfe:	01c9      	lsls	r1, r1, #7
    3c00:	430b      	orrs	r3, r1
    3c02:	8053      	strh	r3, [r2, #2]
    3c04:	f000 f87c 	bl	3d00 <cpu_irq_leave_critical>
    3c08:	bd10      	pop	{r4, pc}
    3c0a:	46c0      	nop			; (mov r8, r8)
    3c0c:	40000c02 	.word	0x40000c02
    3c10:	40000c00 	.word	0x40000c00

00003c14 <system_gclk_chan_disable>:
    3c14:	b510      	push	{r4, lr}
    3c16:	1c04      	adds	r4, r0, #0
    3c18:	f000 f854 	bl	3cc4 <cpu_irq_enter_critical>
    3c1c:	2080      	movs	r0, #128	; 0x80
    3c1e:	4b0e      	ldr	r3, [pc, #56]	; (3c58 <system_gclk_chan_disable+0x44>)
    3c20:	4a0e      	ldr	r2, [pc, #56]	; (3c5c <system_gclk_chan_disable+0x48>)
    3c22:	701c      	strb	r4, [r3, #0]
    3c24:	8854      	ldrh	r4, [r2, #2]
    3c26:	4b0e      	ldr	r3, [pc, #56]	; (3c60 <system_gclk_chan_disable+0x4c>)
    3c28:	8851      	ldrh	r1, [r2, #2]
    3c2a:	0524      	lsls	r4, r4, #20
    3c2c:	400b      	ands	r3, r1
    3c2e:	8053      	strh	r3, [r2, #2]
    3c30:	8851      	ldrh	r1, [r2, #2]
    3c32:	4b0c      	ldr	r3, [pc, #48]	; (3c64 <system_gclk_chan_disable+0x50>)
    3c34:	0f24      	lsrs	r4, r4, #28
    3c36:	400b      	ands	r3, r1
    3c38:	8053      	strh	r3, [r2, #2]
    3c3a:	01c0      	lsls	r0, r0, #7
    3c3c:	8853      	ldrh	r3, [r2, #2]
    3c3e:	4907      	ldr	r1, [pc, #28]	; (3c5c <system_gclk_chan_disable+0x48>)
    3c40:	4203      	tst	r3, r0
    3c42:	d1fb      	bne.n	3c3c <system_gclk_chan_disable+0x28>
    3c44:	8848      	ldrh	r0, [r1, #2]
    3c46:	4b06      	ldr	r3, [pc, #24]	; (3c60 <system_gclk_chan_disable+0x4c>)
    3c48:	0222      	lsls	r2, r4, #8
    3c4a:	4003      	ands	r3, r0
    3c4c:	4313      	orrs	r3, r2
    3c4e:	804b      	strh	r3, [r1, #2]
    3c50:	f000 f856 	bl	3d00 <cpu_irq_leave_critical>
    3c54:	bd10      	pop	{r4, pc}
    3c56:	46c0      	nop			; (mov r8, r8)
    3c58:	40000c02 	.word	0x40000c02
    3c5c:	40000c00 	.word	0x40000c00
    3c60:	fffff0ff 	.word	0xfffff0ff
    3c64:	ffffbfff 	.word	0xffffbfff

00003c68 <system_gclk_chan_set_config>:
    3c68:	b510      	push	{r4, lr}
    3c6a:	780c      	ldrb	r4, [r1, #0]
    3c6c:	0224      	lsls	r4, r4, #8
    3c6e:	4304      	orrs	r4, r0
    3c70:	f7ff ffd0 	bl	3c14 <system_gclk_chan_disable>
    3c74:	4b01      	ldr	r3, [pc, #4]	; (3c7c <system_gclk_chan_set_config+0x14>)
    3c76:	b2a4      	uxth	r4, r4
    3c78:	805c      	strh	r4, [r3, #2]
    3c7a:	bd10      	pop	{r4, pc}
    3c7c:	40000c00 	.word	0x40000c00

00003c80 <system_gclk_chan_get_hz>:
    3c80:	b510      	push	{r4, lr}
    3c82:	1c04      	adds	r4, r0, #0
    3c84:	f000 f81e 	bl	3cc4 <cpu_irq_enter_critical>
    3c88:	4b05      	ldr	r3, [pc, #20]	; (3ca0 <system_gclk_chan_get_hz+0x20>)
    3c8a:	701c      	strb	r4, [r3, #0]
    3c8c:	4b05      	ldr	r3, [pc, #20]	; (3ca4 <system_gclk_chan_get_hz+0x24>)
    3c8e:	885c      	ldrh	r4, [r3, #2]
    3c90:	f000 f836 	bl	3d00 <cpu_irq_leave_critical>
    3c94:	0524      	lsls	r4, r4, #20
    3c96:	0f24      	lsrs	r4, r4, #28
    3c98:	1c20      	adds	r0, r4, #0
    3c9a:	f7ff ff6b 	bl	3b74 <system_gclk_gen_get_hz>
    3c9e:	bd10      	pop	{r4, pc}
    3ca0:	40000c02 	.word	0x40000c02
    3ca4:	40000c00 	.word	0x40000c00

00003ca8 <_system_dummy_init>:
    3ca8:	4770      	bx	lr
    3caa:	46c0      	nop			; (mov r8, r8)

00003cac <system_init>:
    3cac:	b508      	push	{r3, lr}
    3cae:	f000 ff57 	bl	4b60 <system_clock_init>
    3cb2:	f7ff fff9 	bl	3ca8 <_system_dummy_init>
    3cb6:	f7ff fff7 	bl	3ca8 <_system_dummy_init>
    3cba:	f7ff fdff 	bl	38bc <_system_extint_init>
    3cbe:	f7ff fff3 	bl	3ca8 <_system_dummy_init>
    3cc2:	bd08      	pop	{r3, pc}

00003cc4 <cpu_irq_enter_critical>:
    3cc4:	4b0b      	ldr	r3, [pc, #44]	; (3cf4 <cpu_irq_enter_critical+0x30>)
    3cc6:	681a      	ldr	r2, [r3, #0]
    3cc8:	2a00      	cmp	r2, #0
    3cca:	d105      	bne.n	3cd8 <cpu_irq_enter_critical+0x14>
    3ccc:	f3ef 8110 	mrs	r1, PRIMASK
    3cd0:	2900      	cmp	r1, #0
    3cd2:	d005      	beq.n	3ce0 <cpu_irq_enter_critical+0x1c>
    3cd4:	4908      	ldr	r1, [pc, #32]	; (3cf8 <cpu_irq_enter_critical+0x34>)
    3cd6:	700a      	strb	r2, [r1, #0]
    3cd8:	681a      	ldr	r2, [r3, #0]
    3cda:	3201      	adds	r2, #1
    3cdc:	601a      	str	r2, [r3, #0]
    3cde:	4770      	bx	lr
    3ce0:	b672      	cpsid	i
    3ce2:	f3bf 8f5f 	dmb	sy
    3ce6:	4a05      	ldr	r2, [pc, #20]	; (3cfc <cpu_irq_enter_critical+0x38>)
    3ce8:	7011      	strb	r1, [r2, #0]
    3cea:	4a03      	ldr	r2, [pc, #12]	; (3cf8 <cpu_irq_enter_critical+0x34>)
    3cec:	3101      	adds	r1, #1
    3cee:	7011      	strb	r1, [r2, #0]
    3cf0:	e7f2      	b.n	3cd8 <cpu_irq_enter_critical+0x14>
    3cf2:	46c0      	nop			; (mov r8, r8)
    3cf4:	20004510 	.word	0x20004510
    3cf8:	20004514 	.word	0x20004514
    3cfc:	200000d0 	.word	0x200000d0

00003d00 <cpu_irq_leave_critical>:
    3d00:	4b08      	ldr	r3, [pc, #32]	; (3d24 <cpu_irq_leave_critical+0x24>)
    3d02:	681a      	ldr	r2, [r3, #0]
    3d04:	3a01      	subs	r2, #1
    3d06:	601a      	str	r2, [r3, #0]
    3d08:	681b      	ldr	r3, [r3, #0]
    3d0a:	2b00      	cmp	r3, #0
    3d0c:	d109      	bne.n	3d22 <cpu_irq_leave_critical+0x22>
    3d0e:	4b06      	ldr	r3, [pc, #24]	; (3d28 <cpu_irq_leave_critical+0x28>)
    3d10:	781b      	ldrb	r3, [r3, #0]
    3d12:	2b00      	cmp	r3, #0
    3d14:	d005      	beq.n	3d22 <cpu_irq_leave_critical+0x22>
    3d16:	2201      	movs	r2, #1
    3d18:	4b04      	ldr	r3, [pc, #16]	; (3d2c <cpu_irq_leave_critical+0x2c>)
    3d1a:	701a      	strb	r2, [r3, #0]
    3d1c:	f3bf 8f5f 	dmb	sy
    3d20:	b662      	cpsie	i
    3d22:	4770      	bx	lr
    3d24:	20004510 	.word	0x20004510
    3d28:	20004514 	.word	0x20004514
    3d2c:	200000d0 	.word	0x200000d0

00003d30 <usart_set_config_default>:
    3d30:	b5f0      	push	{r4, r5, r6, r7, lr}
    3d32:	464f      	mov	r7, r9
    3d34:	4646      	mov	r6, r8
    3d36:	b4c0      	push	{r6, r7}
    3d38:	1c04      	adds	r4, r0, #0
    3d3a:	b085      	sub	sp, #20
    3d3c:	2800      	cmp	r0, #0
    3d3e:	d05c      	beq.n	3dfa <usart_set_config_default+0xca>
    3d40:	6800      	ldr	r0, [r0, #0]
    3d42:	f000 fe61 	bl	4a08 <_sercom_get_sercom_inst_index>
    3d46:	250e      	movs	r5, #14
    3d48:	2300      	movs	r3, #0
    3d4a:	3014      	adds	r0, #20
    3d4c:	446d      	add	r5, sp
    3d4e:	b2c0      	uxtb	r0, r0
    3d50:	802b      	strh	r3, [r5, #0]
    3d52:	69a7      	ldr	r7, [r4, #24]
    3d54:	6966      	ldr	r6, [r4, #20]
    3d56:	f7ff ff93 	bl	3c80 <system_gclk_chan_get_hz>
    3d5a:	2310      	movs	r3, #16
    3d5c:	1c01      	adds	r1, r0, #0
    3d5e:	9300      	str	r3, [sp, #0]
    3d60:	1c38      	adds	r0, r7, #0
    3d62:	1c2a      	adds	r2, r5, #0
    3d64:	2300      	movs	r3, #0
    3d66:	f000 fd67 	bl	4838 <_sercom_get_async_baud_val>
    3d6a:	6822      	ldr	r2, [r4, #0]
    3d6c:	69d3      	ldr	r3, [r2, #28]
    3d6e:	2b00      	cmp	r3, #0
    3d70:	d1fc      	bne.n	3d6c <usart_set_config_default+0x3c>
    3d72:	882b      	ldrh	r3, [r5, #0]
    3d74:	8193      	strh	r3, [r2, #12]
    3d76:	68e2      	ldr	r2, [r4, #12]
    3d78:	6923      	ldr	r3, [r4, #16]
    3d7a:	4313      	orrs	r3, r2
    3d7c:	221d      	movs	r2, #29
    3d7e:	56a2      	ldrsb	r2, [r4, r2]
    3d80:	3201      	adds	r2, #1
    3d82:	d028      	beq.n	3dd6 <usart_set_config_default+0xa6>
    3d84:	25c0      	movs	r5, #192	; 0xc0
    3d86:	02ad      	lsls	r5, r5, #10
    3d88:	431d      	orrs	r5, r3
    3d8a:	231c      	movs	r3, #28
    3d8c:	56e3      	ldrsb	r3, [r4, r3]
    3d8e:	3301      	adds	r3, #1
    3d90:	d019      	beq.n	3dc6 <usart_set_config_default+0x96>
    3d92:	68a2      	ldr	r2, [r4, #8]
    3d94:	2aff      	cmp	r2, #255	; 0xff
    3d96:	d01b      	beq.n	3dd0 <usart_set_config_default+0xa0>
    3d98:	4b29      	ldr	r3, [pc, #164]	; (3e40 <usart_set_config_default+0x110>)
    3d9a:	4315      	orrs	r5, r2
    3d9c:	431e      	orrs	r6, r3
    3d9e:	2c00      	cmp	r4, #0
    3da0:	d025      	beq.n	3dee <usart_set_config_default+0xbe>
    3da2:	6822      	ldr	r2, [r4, #0]
    3da4:	69d3      	ldr	r3, [r2, #28]
    3da6:	2b00      	cmp	r3, #0
    3da8:	d1fc      	bne.n	3da4 <usart_set_config_default+0x74>
    3daa:	6055      	str	r5, [r2, #4]
    3dac:	2c00      	cmp	r4, #0
    3dae:	d018      	beq.n	3de2 <usart_set_config_default+0xb2>
    3db0:	6822      	ldr	r2, [r4, #0]
    3db2:	69d3      	ldr	r3, [r2, #28]
    3db4:	2b00      	cmp	r3, #0
    3db6:	d1fc      	bne.n	3db2 <usart_set_config_default+0x82>
    3db8:	2000      	movs	r0, #0
    3dba:	6016      	str	r6, [r2, #0]
    3dbc:	b005      	add	sp, #20
    3dbe:	bc0c      	pop	{r2, r3}
    3dc0:	4690      	mov	r8, r2
    3dc2:	4699      	mov	r9, r3
    3dc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3dc6:	4b1f      	ldr	r3, [pc, #124]	; (3e44 <usart_set_config_default+0x114>)
    3dc8:	68a2      	ldr	r2, [r4, #8]
    3dca:	401d      	ands	r5, r3
    3dcc:	2aff      	cmp	r2, #255	; 0xff
    3dce:	d1e3      	bne.n	3d98 <usart_set_config_default+0x68>
    3dd0:	4b1d      	ldr	r3, [pc, #116]	; (3e48 <usart_set_config_default+0x118>)
    3dd2:	431e      	orrs	r6, r3
    3dd4:	e7e3      	b.n	3d9e <usart_set_config_default+0x6e>
    3dd6:	4d1d      	ldr	r5, [pc, #116]	; (3e4c <usart_set_config_default+0x11c>)
    3dd8:	401d      	ands	r5, r3
    3dda:	2380      	movs	r3, #128	; 0x80
    3ddc:	025b      	lsls	r3, r3, #9
    3dde:	431d      	orrs	r5, r3
    3de0:	e7d3      	b.n	3d8a <usart_set_config_default+0x5a>
    3de2:	481b      	ldr	r0, [pc, #108]	; (3e50 <usart_set_config_default+0x120>)
    3de4:	491b      	ldr	r1, [pc, #108]	; (3e54 <usart_set_config_default+0x124>)
    3de6:	223f      	movs	r2, #63	; 0x3f
    3de8:	f000 fc8e 	bl	4708 <mbed_assert_internal>
    3dec:	e7e0      	b.n	3db0 <usart_set_config_default+0x80>
    3dee:	4818      	ldr	r0, [pc, #96]	; (3e50 <usart_set_config_default+0x120>)
    3df0:	4918      	ldr	r1, [pc, #96]	; (3e54 <usart_set_config_default+0x124>)
    3df2:	223f      	movs	r2, #63	; 0x3f
    3df4:	f000 fc88 	bl	4708 <mbed_assert_internal>
    3df8:	e7d3      	b.n	3da2 <usart_set_config_default+0x72>
    3dfa:	4b15      	ldr	r3, [pc, #84]	; (3e50 <usart_set_config_default+0x120>)
    3dfc:	4f15      	ldr	r7, [pc, #84]	; (3e54 <usart_set_config_default+0x124>)
    3dfe:	1c18      	adds	r0, r3, #0
    3e00:	1c39      	adds	r1, r7, #0
    3e02:	229c      	movs	r2, #156	; 0x9c
    3e04:	4698      	mov	r8, r3
    3e06:	f000 fc7f 	bl	4708 <mbed_assert_internal>
    3e0a:	6820      	ldr	r0, [r4, #0]
    3e0c:	f000 fdfc 	bl	4a08 <_sercom_get_sercom_inst_index>
    3e10:	250e      	movs	r5, #14
    3e12:	69a3      	ldr	r3, [r4, #24]
    3e14:	3014      	adds	r0, #20
    3e16:	446d      	add	r5, sp
    3e18:	b2c0      	uxtb	r0, r0
    3e1a:	4699      	mov	r9, r3
    3e1c:	802c      	strh	r4, [r5, #0]
    3e1e:	6966      	ldr	r6, [r4, #20]
    3e20:	f7ff ff2e 	bl	3c80 <system_gclk_chan_get_hz>
    3e24:	2310      	movs	r3, #16
    3e26:	1c01      	adds	r1, r0, #0
    3e28:	9300      	str	r3, [sp, #0]
    3e2a:	1c2a      	adds	r2, r5, #0
    3e2c:	4648      	mov	r0, r9
    3e2e:	2300      	movs	r3, #0
    3e30:	f000 fd02 	bl	4838 <_sercom_get_async_baud_val>
    3e34:	4640      	mov	r0, r8
    3e36:	1c39      	adds	r1, r7, #0
    3e38:	223f      	movs	r2, #63	; 0x3f
    3e3a:	f000 fc65 	bl	4708 <mbed_assert_internal>
    3e3e:	e794      	b.n	3d6a <usart_set_config_default+0x3a>
    3e40:	41000004 	.word	0x41000004
    3e44:	fffeffff 	.word	0xfffeffff
    3e48:	40000004 	.word	0x40000004
    3e4c:	fffdffff 	.word	0xfffdffff
    3e50:	0000d928 	.word	0x0000d928
    3e54:	0000d92c 	.word	0x0000d92c

00003e58 <serial_find_mux_settings>:
    3e58:	b570      	push	{r4, r5, r6, lr}
    3e5a:	1c05      	adds	r5, r0, #0
    3e5c:	b086      	sub	sp, #24
    3e5e:	2800      	cmp	r0, #0
    3e60:	d03c      	beq.n	3edc <serial_find_mux_settings+0x84>
    3e62:	201c      	movs	r0, #28
    3e64:	211d      	movs	r1, #29
    3e66:	2300      	movs	r3, #0
    3e68:	5628      	ldrsb	r0, [r5, r0]
    3e6a:	5669      	ldrsb	r1, [r5, r1]
    3e6c:	9302      	str	r3, [sp, #8]
    3e6e:	9303      	str	r3, [sp, #12]
    3e70:	9304      	str	r3, [sp, #16]
    3e72:	9305      	str	r3, [sp, #20]
    3e74:	f001 f81e 	bl	4eb4 <pinmap_merge_sercom>
    3e78:	2400      	movs	r4, #0
    3e7a:	1c06      	adds	r6, r0, #0
    3e7c:	201c      	movs	r0, #28
    3e7e:	192b      	adds	r3, r5, r4
    3e80:	5618      	ldrsb	r0, [r3, r0]
    3e82:	1c31      	adds	r1, r6, #0
    3e84:	f001 f8a6 	bl	4fd4 <pinmap_pad_sercom>
    3e88:	00a3      	lsls	r3, r4, #2
    3e8a:	aa02      	add	r2, sp, #8
    3e8c:	3401      	adds	r4, #1
    3e8e:	50d0      	str	r0, [r2, r3]
    3e90:	2c04      	cmp	r4, #4
    3e92:	d1f3      	bne.n	3e7c <serial_find_mux_settings+0x24>
    3e94:	9b03      	ldr	r3, [sp, #12]
    3e96:	2000      	movs	r0, #0
    3e98:	9301      	str	r3, [sp, #4]
    3e9a:	3b01      	subs	r3, #1
    3e9c:	2b02      	cmp	r3, #2
    3e9e:	d802      	bhi.n	3ea6 <serial_find_mux_settings+0x4e>
    3ea0:	4a11      	ldr	r2, [pc, #68]	; (3ee8 <serial_find_mux_settings+0x90>)
    3ea2:	009b      	lsls	r3, r3, #2
    3ea4:	5898      	ldr	r0, [r3, r2]
    3ea6:	221e      	movs	r2, #30
    3ea8:	5eab      	ldrsh	r3, [r5, r2]
    3eaa:	3301      	adds	r3, #1
    3eac:	d008      	beq.n	3ec0 <serial_find_mux_settings+0x68>
    3eae:	9b02      	ldr	r3, [sp, #8]
    3eb0:	2b00      	cmp	r3, #0
    3eb2:	d103      	bne.n	3ebc <serial_find_mux_settings+0x64>
    3eb4:	9b04      	ldr	r3, [sp, #16]
    3eb6:	9301      	str	r3, [sp, #4]
    3eb8:	2b02      	cmp	r3, #2
    3eba:	d008      	beq.n	3ece <serial_find_mux_settings+0x76>
    3ebc:	b006      	add	sp, #24
    3ebe:	bd70      	pop	{r4, r5, r6, pc}
    3ec0:	9b02      	ldr	r3, [sp, #8]
    3ec2:	2b02      	cmp	r3, #2
    3ec4:	d1fa      	bne.n	3ebc <serial_find_mux_settings+0x64>
    3ec6:	2380      	movs	r3, #128	; 0x80
    3ec8:	025b      	lsls	r3, r3, #9
    3eca:	4318      	orrs	r0, r3
    3ecc:	e7f6      	b.n	3ebc <serial_find_mux_settings+0x64>
    3ece:	9b05      	ldr	r3, [sp, #20]
    3ed0:	2b03      	cmp	r3, #3
    3ed2:	d1f3      	bne.n	3ebc <serial_find_mux_settings+0x64>
    3ed4:	2380      	movs	r3, #128	; 0x80
    3ed6:	029b      	lsls	r3, r3, #10
    3ed8:	4318      	orrs	r0, r3
    3eda:	e7ef      	b.n	3ebc <serial_find_mux_settings+0x64>
    3edc:	4803      	ldr	r0, [pc, #12]	; (3eec <serial_find_mux_settings+0x94>)
    3ede:	4904      	ldr	r1, [pc, #16]	; (3ef0 <serial_find_mux_settings+0x98>)
    3ee0:	2271      	movs	r2, #113	; 0x71
    3ee2:	f000 fc11 	bl	4708 <mbed_assert_internal>
    3ee6:	e7bc      	b.n	3e62 <serial_find_mux_settings+0xa>
    3ee8:	0000d91c 	.word	0x0000d91c
    3eec:	0000d928 	.word	0x0000d928
    3ef0:	0000d92c 	.word	0x0000d92c

00003ef4 <get_default_serial_values>:
    3ef4:	b510      	push	{r4, lr}
    3ef6:	1e04      	subs	r4, r0, #0
    3ef8:	d00b      	beq.n	3f12 <get_default_serial_values+0x1e>
    3efa:	23ff      	movs	r3, #255	; 0xff
    3efc:	60a3      	str	r3, [r4, #8]
    3efe:	2300      	movs	r3, #0
    3f00:	60e3      	str	r3, [r4, #12]
    3f02:	6123      	str	r3, [r4, #16]
    3f04:	2396      	movs	r3, #150	; 0x96
    3f06:	019b      	lsls	r3, r3, #6
    3f08:	61a3      	str	r3, [r4, #24]
    3f0a:	2388      	movs	r3, #136	; 0x88
    3f0c:	035b      	lsls	r3, r3, #13
    3f0e:	6163      	str	r3, [r4, #20]
    3f10:	bd10      	pop	{r4, pc}
    3f12:	4803      	ldr	r0, [pc, #12]	; (3f20 <get_default_serial_values+0x2c>)
    3f14:	4903      	ldr	r1, [pc, #12]	; (3f24 <get_default_serial_values+0x30>)
    3f16:	22e1      	movs	r2, #225	; 0xe1
    3f18:	f000 fbf6 	bl	4708 <mbed_assert_internal>
    3f1c:	e7ed      	b.n	3efa <get_default_serial_values+0x6>
    3f1e:	46c0      	nop			; (mov r8, r8)
    3f20:	0000d928 	.word	0x0000d928
    3f24:	0000d92c 	.word	0x0000d92c

00003f28 <serial_init>:
    3f28:	b5f0      	push	{r4, r5, r6, r7, lr}
    3f2a:	464e      	mov	r6, r9
    3f2c:	4645      	mov	r5, r8
    3f2e:	4657      	mov	r7, sl
    3f30:	b4e0      	push	{r5, r6, r7}
    3f32:	1c04      	adds	r4, r0, #0
    3f34:	b084      	sub	sp, #16
    3f36:	1c0e      	adds	r6, r1, #0
    3f38:	1c15      	adds	r5, r2, #0
    3f3a:	2800      	cmp	r0, #0
    3f3c:	d100      	bne.n	3f40 <serial_init+0x18>
    3f3e:	e09d      	b.n	407c <serial_init+0x154>
    3f40:	4f60      	ldr	r7, [pc, #384]	; (40c4 <serial_init+0x19c>)
    3f42:	783b      	ldrb	r3, [r7, #0]
    3f44:	2b00      	cmp	r3, #0
    3f46:	d100      	bne.n	3f4a <serial_init+0x22>
    3f48:	e083      	b.n	4052 <serial_init+0x12a>
    3f4a:	1c20      	adds	r0, r4, #0
    3f4c:	f7ff ffd2 	bl	3ef4 <get_default_serial_values>
    3f50:	23ff      	movs	r3, #255	; 0xff
    3f52:	7726      	strb	r6, [r4, #28]
    3f54:	77a3      	strb	r3, [r4, #30]
    3f56:	77e3      	strb	r3, [r4, #31]
    3f58:	7765      	strb	r5, [r4, #29]
    3f5a:	1c20      	adds	r0, r4, #0
    3f5c:	f7ff ff7c 	bl	3e58 <serial_find_mux_settings>
    3f60:	1c29      	adds	r1, r5, #0
    3f62:	1c07      	adds	r7, r0, #0
    3f64:	1c30      	adds	r0, r6, #0
    3f66:	f000 ffa5 	bl	4eb4 <pinmap_merge_sercom>
    3f6a:	1c43      	adds	r3, r0, #1
    3f6c:	d017      	beq.n	3f9e <serial_init+0x76>
    3f6e:	250f      	movs	r5, #15
    3f70:	4005      	ands	r5, r0
    3f72:	2001      	movs	r0, #1
    3f74:	1c29      	adds	r1, r5, #0
    3f76:	4240      	negs	r0, r0
    3f78:	f001 f84e 	bl	5018 <pinmap_peripheral_sercom>
    3f7c:	1c06      	adds	r6, r0, #0
    3f7e:	1c02      	adds	r2, r0, #0
    3f80:	6020      	str	r0, [r4, #0]
    3f82:	2c00      	cmp	r4, #0
    3f84:	d06a      	beq.n	405c <serial_init+0x134>
    3f86:	69d3      	ldr	r3, [r2, #28]
    3f88:	2b00      	cmp	r3, #0
    3f8a:	d1fc      	bne.n	3f86 <serial_init+0x5e>
    3f8c:	2102      	movs	r1, #2
    3f8e:	6813      	ldr	r3, [r2, #0]
    3f90:	438b      	bics	r3, r1
    3f92:	6013      	str	r3, [r2, #0]
    3f94:	2201      	movs	r2, #1
    3f96:	6823      	ldr	r3, [r4, #0]
    3f98:	6818      	ldr	r0, [r3, #0]
    3f9a:	4202      	tst	r2, r0
    3f9c:	d005      	beq.n	3faa <serial_init+0x82>
    3f9e:	b004      	add	sp, #16
    3fa0:	bc1c      	pop	{r2, r3, r4}
    3fa2:	4690      	mov	r8, r2
    3fa4:	4699      	mov	r9, r3
    3fa6:	46a2      	mov	sl, r4
    3fa8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3faa:	681b      	ldr	r3, [r3, #0]
    3fac:	4019      	ands	r1, r3
    3fae:	4688      	mov	r8, r1
    3fb0:	d1f5      	bne.n	3f9e <serial_init+0x76>
    3fb2:	1ca8      	adds	r0, r5, #2
    3fb4:	4082      	lsls	r2, r0
    3fb6:	4944      	ldr	r1, [pc, #272]	; (40c8 <serial_init+0x1a0>)
    3fb8:	6a0b      	ldr	r3, [r1, #32]
    3fba:	431a      	orrs	r2, r3
    3fbc:	620a      	str	r2, [r1, #32]
    3fbe:	4642      	mov	r2, r8
    3fc0:	ab02      	add	r3, sp, #8
    3fc2:	701a      	strb	r2, [r3, #0]
    3fc4:	2314      	movs	r3, #20
    3fc6:	4699      	mov	r9, r3
    3fc8:	44a9      	add	r9, r5
    3fca:	a902      	add	r1, sp, #8
    3fcc:	4648      	mov	r0, r9
    3fce:	f7ff fe4b 	bl	3c68 <system_gclk_chan_set_config>
    3fd2:	4648      	mov	r0, r9
    3fd4:	f7ff fe0a 	bl	3bec <system_gclk_chan_enable>
    3fd8:	2100      	movs	r1, #0
    3fda:	2000      	movs	r0, #0
    3fdc:	f000 fcf4 	bl	49c8 <sercom_set_gclk_generator>
    3fe0:	6167      	str	r7, [r4, #20]
    3fe2:	1c20      	adds	r0, r4, #0
    3fe4:	f7ff fea4 	bl	3d30 <usart_set_config_default>
    3fe8:	4642      	mov	r2, r8
    3fea:	ab02      	add	r3, sp, #8
    3fec:	715a      	strb	r2, [r3, #5]
    3fee:	719a      	strb	r2, [r3, #6]
    3ff0:	71da      	strb	r2, [r3, #7]
    3ff2:	2320      	movs	r3, #32
    3ff4:	1c27      	adds	r7, r4, #0
    3ff6:	469a      	mov	sl, r3
    3ff8:	371c      	adds	r7, #28
    3ffa:	44a2      	add	sl, r4
    3ffc:	2300      	movs	r3, #0
    3ffe:	56fb      	ldrsb	r3, [r7, r3]
    4000:	4699      	mov	r9, r3
    4002:	3301      	adds	r3, #1
    4004:	d00f      	beq.n	4026 <serial_init+0xfe>
    4006:	4648      	mov	r0, r9
    4008:	1c29      	adds	r1, r5, #0
    400a:	f000 ffbf 	bl	4f8c <pinmap_function_sercom>
    400e:	ab02      	add	r3, sp, #8
    4010:	b2c0      	uxtb	r0, r0
    4012:	7118      	strb	r0, [r3, #4]
    4014:	28ff      	cmp	r0, #255	; 0xff
    4016:	d006      	beq.n	4026 <serial_init+0xfe>
    4018:	466a      	mov	r2, sp
    401a:	464b      	mov	r3, r9
    401c:	71d3      	strb	r3, [r2, #7]
    401e:	79d0      	ldrb	r0, [r2, #7]
    4020:	a903      	add	r1, sp, #12
    4022:	f7ff fd17 	bl	3a54 <system_pinmux_pin_set_config>
    4026:	3701      	adds	r7, #1
    4028:	4557      	cmp	r7, sl
    402a:	d1e7      	bne.n	3ffc <serial_init+0xd4>
    402c:	4b27      	ldr	r3, [pc, #156]	; (40cc <serial_init+0x1a4>)
    402e:	429e      	cmp	r6, r3
    4030:	d030      	beq.n	4094 <serial_init+0x16c>
    4032:	2c00      	cmp	r4, #0
    4034:	d028      	beq.n	4088 <serial_init+0x160>
    4036:	6823      	ldr	r3, [r4, #0]
    4038:	69da      	ldr	r2, [r3, #28]
    403a:	2a00      	cmp	r2, #0
    403c:	d1fc      	bne.n	4038 <serial_init+0x110>
    403e:	2c00      	cmp	r4, #0
    4040:	d031      	beq.n	40a6 <serial_init+0x17e>
    4042:	69da      	ldr	r2, [r3, #28]
    4044:	2a00      	cmp	r2, #0
    4046:	d1fc      	bne.n	4042 <serial_init+0x11a>
    4048:	6819      	ldr	r1, [r3, #0]
    404a:	3202      	adds	r2, #2
    404c:	430a      	orrs	r2, r1
    404e:	601a      	str	r2, [r3, #0]
    4050:	e7a5      	b.n	3f9e <serial_init+0x76>
    4052:	f7ff fe2b 	bl	3cac <system_init>
    4056:	2301      	movs	r3, #1
    4058:	703b      	strb	r3, [r7, #0]
    405a:	e776      	b.n	3f4a <serial_init+0x22>
    405c:	4b1c      	ldr	r3, [pc, #112]	; (40d0 <serial_init+0x1a8>)
    405e:	2256      	movs	r2, #86	; 0x56
    4060:	4699      	mov	r9, r3
    4062:	4b1c      	ldr	r3, [pc, #112]	; (40d4 <serial_init+0x1ac>)
    4064:	4648      	mov	r0, r9
    4066:	4698      	mov	r8, r3
    4068:	1c19      	adds	r1, r3, #0
    406a:	f000 fb4d 	bl	4708 <mbed_assert_internal>
    406e:	223f      	movs	r2, #63	; 0x3f
    4070:	4648      	mov	r0, r9
    4072:	4641      	mov	r1, r8
    4074:	f000 fb48 	bl	4708 <mbed_assert_internal>
    4078:	6822      	ldr	r2, [r4, #0]
    407a:	e784      	b.n	3f86 <serial_init+0x5e>
    407c:	4814      	ldr	r0, [pc, #80]	; (40d0 <serial_init+0x1a8>)
    407e:	4915      	ldr	r1, [pc, #84]	; (40d4 <serial_init+0x1ac>)
    4080:	22ed      	movs	r2, #237	; 0xed
    4082:	f000 fb41 	bl	4708 <mbed_assert_internal>
    4086:	e75b      	b.n	3f40 <serial_init+0x18>
    4088:	4811      	ldr	r0, [pc, #68]	; (40d0 <serial_init+0x1a8>)
    408a:	4912      	ldr	r1, [pc, #72]	; (40d4 <serial_init+0x1ac>)
    408c:	223f      	movs	r2, #63	; 0x3f
    408e:	f000 fb3b 	bl	4708 <mbed_assert_internal>
    4092:	e7d0      	b.n	4036 <serial_init+0x10e>
    4094:	2201      	movs	r2, #1
    4096:	4b10      	ldr	r3, [pc, #64]	; (40d8 <serial_init+0x1b0>)
    4098:	1c21      	adds	r1, r4, #0
    409a:	601a      	str	r2, [r3, #0]
    409c:	480f      	ldr	r0, [pc, #60]	; (40dc <serial_init+0x1b4>)
    409e:	3247      	adds	r2, #71	; 0x47
    40a0:	f004 fb33 	bl	870a <memcpy>
    40a4:	e7c5      	b.n	4032 <serial_init+0x10a>
    40a6:	4e0a      	ldr	r6, [pc, #40]	; (40d0 <serial_init+0x1a8>)
    40a8:	4d0a      	ldr	r5, [pc, #40]	; (40d4 <serial_init+0x1ac>)
    40aa:	1c30      	adds	r0, r6, #0
    40ac:	1c29      	adds	r1, r5, #0
    40ae:	324a      	adds	r2, #74	; 0x4a
    40b0:	f000 fb2a 	bl	4708 <mbed_assert_internal>
    40b4:	1c30      	adds	r0, r6, #0
    40b6:	1c29      	adds	r1, r5, #0
    40b8:	223f      	movs	r2, #63	; 0x3f
    40ba:	f000 fb25 	bl	4708 <mbed_assert_internal>
    40be:	6823      	ldr	r3, [r4, #0]
    40c0:	e7bf      	b.n	4042 <serial_init+0x11a>
    40c2:	46c0      	nop			; (mov r8, r8)
    40c4:	2000440c 	.word	0x2000440c
    40c8:	40000400 	.word	0x40000400
    40cc:	42000800 	.word	0x42000800
    40d0:	0000d928 	.word	0x0000d928
    40d4:	0000d92c 	.word	0x0000d92c
    40d8:	20004518 	.word	0x20004518
    40dc:	200045b4 	.word	0x200045b4

000040e0 <serial_irq_handler>:
    40e0:	b5f0      	push	{r4, r5, r6, r7, lr}
    40e2:	4647      	mov	r7, r8
    40e4:	1c04      	adds	r4, r0, #0
    40e6:	b480      	push	{r7}
    40e8:	1c0e      	adds	r6, r1, #0
    40ea:	1c15      	adds	r5, r2, #0
    40ec:	2800      	cmp	r0, #0
    40ee:	d020      	beq.n	4132 <serial_irq_handler+0x52>
    40f0:	4b18      	ldr	r3, [pc, #96]	; (4154 <serial_irq_handler+0x74>)
    40f2:	6019      	str	r1, [r3, #0]
    40f4:	6822      	ldr	r2, [r4, #0]
    40f6:	4b18      	ldr	r3, [pc, #96]	; (4158 <serial_irq_handler+0x78>)
    40f8:	429a      	cmp	r2, r3
    40fa:	d018      	beq.n	412e <serial_irq_handler+0x4e>
    40fc:	dc0d      	bgt.n	411a <serial_irq_handler+0x3a>
    40fe:	4917      	ldr	r1, [pc, #92]	; (415c <serial_irq_handler+0x7c>)
    4100:	2301      	movs	r3, #1
    4102:	428a      	cmp	r2, r1
    4104:	d003      	beq.n	410e <serial_irq_handler+0x2e>
    4106:	4916      	ldr	r1, [pc, #88]	; (4160 <serial_irq_handler+0x80>)
    4108:	3301      	adds	r3, #1
    410a:	428a      	cmp	r2, r1
    410c:	d10d      	bne.n	412a <serial_irq_handler+0x4a>
    410e:	4a15      	ldr	r2, [pc, #84]	; (4164 <serial_irq_handler+0x84>)
    4110:	009b      	lsls	r3, r3, #2
    4112:	509d      	str	r5, [r3, r2]
    4114:	bc04      	pop	{r2}
    4116:	4690      	mov	r8, r2
    4118:	bdf0      	pop	{r4, r5, r6, r7, pc}
    411a:	4913      	ldr	r1, [pc, #76]	; (4168 <serial_irq_handler+0x88>)
    411c:	2304      	movs	r3, #4
    411e:	428a      	cmp	r2, r1
    4120:	d0f5      	beq.n	410e <serial_irq_handler+0x2e>
    4122:	4912      	ldr	r1, [pc, #72]	; (416c <serial_irq_handler+0x8c>)
    4124:	3301      	adds	r3, #1
    4126:	428a      	cmp	r2, r1
    4128:	d0f1      	beq.n	410e <serial_irq_handler+0x2e>
    412a:	2300      	movs	r3, #0
    412c:	e7ef      	b.n	410e <serial_irq_handler+0x2e>
    412e:	2303      	movs	r3, #3
    4130:	e7ed      	b.n	410e <serial_irq_handler+0x2e>
    4132:	4b0f      	ldr	r3, [pc, #60]	; (4170 <serial_irq_handler+0x90>)
    4134:	22b3      	movs	r2, #179	; 0xb3
    4136:	4698      	mov	r8, r3
    4138:	4f0e      	ldr	r7, [pc, #56]	; (4174 <serial_irq_handler+0x94>)
    413a:	1c18      	adds	r0, r3, #0
    413c:	1c39      	adds	r1, r7, #0
    413e:	0092      	lsls	r2, r2, #2
    4140:	f000 fae2 	bl	4708 <mbed_assert_internal>
    4144:	4b03      	ldr	r3, [pc, #12]	; (4154 <serial_irq_handler+0x74>)
    4146:	4640      	mov	r0, r8
    4148:	1c39      	adds	r1, r7, #0
    414a:	4a0b      	ldr	r2, [pc, #44]	; (4178 <serial_irq_handler+0x98>)
    414c:	601e      	str	r6, [r3, #0]
    414e:	f000 fadb 	bl	4708 <mbed_assert_internal>
    4152:	e7cf      	b.n	40f4 <serial_irq_handler+0x14>
    4154:	20004534 	.word	0x20004534
    4158:	42001400 	.word	0x42001400
    415c:	42000c00 	.word	0x42000c00
    4160:	42001000 	.word	0x42001000
    4164:	2000451c 	.word	0x2000451c
    4168:	42001800 	.word	0x42001800
    416c:	42001c00 	.word	0x42001c00
    4170:	0000d928 	.word	0x0000d928
    4174:	0000d92c 	.word	0x0000d92c
    4178:	00000266 	.word	0x00000266

0000417c <serial_readable>:
    417c:	b510      	push	{r4, lr}
    417e:	1e04      	subs	r4, r0, #0
    4180:	d004      	beq.n	418c <serial_readable+0x10>
    4182:	6823      	ldr	r3, [r4, #0]
    4184:	7e18      	ldrb	r0, [r3, #24]
    4186:	0740      	lsls	r0, r0, #29
    4188:	0fc0      	lsrs	r0, r0, #31
    418a:	bd10      	pop	{r4, pc}
    418c:	4802      	ldr	r0, [pc, #8]	; (4198 <serial_readable+0x1c>)
    418e:	4903      	ldr	r1, [pc, #12]	; (419c <serial_readable+0x20>)
    4190:	4a03      	ldr	r2, [pc, #12]	; (41a0 <serial_readable+0x24>)
    4192:	f000 fab9 	bl	4708 <mbed_assert_internal>
    4196:	e7f4      	b.n	4182 <serial_readable+0x6>
    4198:	0000d928 	.word	0x0000d928
    419c:	0000d92c 	.word	0x0000d92c
    41a0:	00000323 	.word	0x00000323

000041a4 <serial_getc>:
    41a4:	b510      	push	{r4, lr}
    41a6:	1e04      	subs	r4, r0, #0
    41a8:	d008      	beq.n	41bc <serial_getc+0x18>
    41aa:	1c20      	adds	r0, r4, #0
    41ac:	f7ff ffe6 	bl	417c <serial_readable>
    41b0:	2800      	cmp	r0, #0
    41b2:	d0fa      	beq.n	41aa <serial_getc+0x6>
    41b4:	6823      	ldr	r3, [r4, #0]
    41b6:	8d18      	ldrh	r0, [r3, #40]	; 0x28
    41b8:	b280      	uxth	r0, r0
    41ba:	bd10      	pop	{r4, pc}
    41bc:	4802      	ldr	r0, [pc, #8]	; (41c8 <serial_getc+0x24>)
    41be:	4903      	ldr	r1, [pc, #12]	; (41cc <serial_getc+0x28>)
    41c0:	4a03      	ldr	r2, [pc, #12]	; (41d0 <serial_getc+0x2c>)
    41c2:	f000 faa1 	bl	4708 <mbed_assert_internal>
    41c6:	e7f0      	b.n	41aa <serial_getc+0x6>
    41c8:	0000d928 	.word	0x0000d928
    41cc:	0000d92c 	.word	0x0000d92c
    41d0:	00000311 	.word	0x00000311

000041d4 <serial_writable>:
    41d4:	b510      	push	{r4, lr}
    41d6:	1e04      	subs	r4, r0, #0
    41d8:	d004      	beq.n	41e4 <serial_writable+0x10>
    41da:	2001      	movs	r0, #1
    41dc:	6823      	ldr	r3, [r4, #0]
    41de:	7e1b      	ldrb	r3, [r3, #24]
    41e0:	4018      	ands	r0, r3
    41e2:	bd10      	pop	{r4, pc}
    41e4:	22cc      	movs	r2, #204	; 0xcc
    41e6:	4803      	ldr	r0, [pc, #12]	; (41f4 <serial_writable+0x20>)
    41e8:	4903      	ldr	r1, [pc, #12]	; (41f8 <serial_writable+0x24>)
    41ea:	0092      	lsls	r2, r2, #2
    41ec:	f000 fa8c 	bl	4708 <mbed_assert_internal>
    41f0:	e7f3      	b.n	41da <serial_writable+0x6>
    41f2:	46c0      	nop			; (mov r8, r8)
    41f4:	0000d928 	.word	0x0000d928
    41f8:	0000d92c 	.word	0x0000d92c

000041fc <serial_putc>:
    41fc:	b538      	push	{r3, r4, r5, lr}
    41fe:	1c04      	adds	r4, r0, #0
    4200:	1c0d      	adds	r5, r1, #0
    4202:	2800      	cmp	r0, #0
    4204:	d00e      	beq.n	4224 <serial_putc+0x28>
    4206:	05ed      	lsls	r5, r5, #23
    4208:	0ded      	lsrs	r5, r5, #23
    420a:	1c20      	adds	r0, r4, #0
    420c:	f7ff ffe2 	bl	41d4 <serial_writable>
    4210:	2800      	cmp	r0, #0
    4212:	d0fa      	beq.n	420a <serial_putc+0xe>
    4214:	2202      	movs	r2, #2
    4216:	6823      	ldr	r3, [r4, #0]
    4218:	851d      	strh	r5, [r3, #40]	; 0x28
    421a:	6821      	ldr	r1, [r4, #0]
    421c:	7e0b      	ldrb	r3, [r1, #24]
    421e:	421a      	tst	r2, r3
    4220:	d0fc      	beq.n	421c <serial_putc+0x20>
    4222:	bd38      	pop	{r3, r4, r5, pc}
    4224:	4802      	ldr	r0, [pc, #8]	; (4230 <serial_putc+0x34>)
    4226:	4903      	ldr	r1, [pc, #12]	; (4234 <serial_putc+0x38>)
    4228:	4a03      	ldr	r2, [pc, #12]	; (4238 <serial_putc+0x3c>)
    422a:	f000 fa6d 	bl	4708 <mbed_assert_internal>
    422e:	e7ea      	b.n	4206 <serial_putc+0xa>
    4230:	0000d928 	.word	0x0000d928
    4234:	0000d92c 	.word	0x0000d92c
    4238:	00000319 	.word	0x00000319

0000423c <_ZN4mbed8FilePathC1EPKc>:
    423c:	b538      	push	{r3, r4, r5, lr}
    423e:	2300      	movs	r3, #0
    4240:	6003      	str	r3, [r0, #0]
    4242:	6043      	str	r3, [r0, #4]
    4244:	780b      	ldrb	r3, [r1, #0]
    4246:	1c04      	adds	r4, r0, #0
    4248:	2b2f      	cmp	r3, #47	; 0x2f
    424a:	d001      	beq.n	4250 <_ZN4mbed8FilePathC1EPKc+0x14>
    424c:	1c20      	adds	r0, r4, #0
    424e:	bd38      	pop	{r3, r4, r5, pc}
    4250:	784b      	ldrb	r3, [r1, #1]
    4252:	2b00      	cmp	r3, #0
    4254:	d0fa      	beq.n	424c <_ZN4mbed8FilePathC1EPKc+0x10>
    4256:	1c48      	adds	r0, r1, #1
    4258:	6020      	str	r0, [r4, #0]
    425a:	784b      	ldrb	r3, [r1, #1]
    425c:	2b2f      	cmp	r3, #47	; 0x2f
    425e:	d014      	beq.n	428a <_ZN4mbed8FilePathC1EPKc+0x4e>
    4260:	2b00      	cmp	r3, #0
    4262:	d015      	beq.n	4290 <_ZN4mbed8FilePathC1EPKc+0x54>
    4264:	1c03      	adds	r3, r0, #0
    4266:	e001      	b.n	426c <_ZN4mbed8FilePathC1EPKc+0x30>
    4268:	2a00      	cmp	r2, #0
    426a:	d00c      	beq.n	4286 <_ZN4mbed8FilePathC1EPKc+0x4a>
    426c:	1a5d      	subs	r5, r3, r1
    426e:	3301      	adds	r3, #1
    4270:	6023      	str	r3, [r4, #0]
    4272:	781a      	ldrb	r2, [r3, #0]
    4274:	2a2f      	cmp	r2, #47	; 0x2f
    4276:	d1f7      	bne.n	4268 <_ZN4mbed8FilePathC1EPKc+0x2c>
    4278:	1c29      	adds	r1, r5, #0
    427a:	3301      	adds	r3, #1
    427c:	6023      	str	r3, [r4, #0]
    427e:	f001 fb23 	bl	58c8 <_ZN4mbed8FileBase6lookupEPKcj>
    4282:	6060      	str	r0, [r4, #4]
    4284:	e7e2      	b.n	424c <_ZN4mbed8FilePathC1EPKc+0x10>
    4286:	1c29      	adds	r1, r5, #0
    4288:	e7f9      	b.n	427e <_ZN4mbed8FilePathC1EPKc+0x42>
    428a:	1c03      	adds	r3, r0, #0
    428c:	2100      	movs	r1, #0
    428e:	e7f4      	b.n	427a <_ZN4mbed8FilePathC1EPKc+0x3e>
    4290:	2100      	movs	r1, #0
    4292:	e7f4      	b.n	427e <_ZN4mbed8FilePathC1EPKc+0x42>

00004294 <_ZN4mbed8FilePath8fileNameEv>:
    4294:	6800      	ldr	r0, [r0, #0]
    4296:	4770      	bx	lr

00004298 <_ZN4mbed8FilePath10fileSystemEv>:
    4298:	6843      	ldr	r3, [r0, #4]
    429a:	b510      	push	{r4, lr}
    429c:	2b00      	cmp	r3, #0
    429e:	d007      	beq.n	42b0 <_ZN4mbed8FilePath10fileSystemEv+0x18>
    42a0:	1c04      	adds	r4, r0, #0
    42a2:	1c18      	adds	r0, r3, #0
    42a4:	f001 fb30 	bl	5908 <_ZN4mbed8FileBase11getPathTypeEv>
    42a8:	2801      	cmp	r0, #1
    42aa:	d101      	bne.n	42b0 <_ZN4mbed8FilePath10fileSystemEv+0x18>
    42ac:	6860      	ldr	r0, [r4, #4]
    42ae:	bd10      	pop	{r4, pc}
    42b0:	2000      	movs	r0, #0
    42b2:	e7fc      	b.n	42ae <_ZN4mbed8FilePath10fileSystemEv+0x16>

000042b4 <_ZN4mbed8FilePath6isFileEv>:
    42b4:	6840      	ldr	r0, [r0, #4]
    42b6:	b508      	push	{r3, lr}
    42b8:	2800      	cmp	r0, #0
    42ba:	d005      	beq.n	42c8 <_ZN4mbed8FilePath6isFileEv+0x14>
    42bc:	f001 fb24 	bl	5908 <_ZN4mbed8FileBase11getPathTypeEv>
    42c0:	4243      	negs	r3, r0
    42c2:	4158      	adcs	r0, r3
    42c4:	b2c0      	uxtb	r0, r0
    42c6:	bd08      	pop	{r3, pc}
    42c8:	2000      	movs	r0, #0
    42ca:	e7fc      	b.n	42c6 <_ZN4mbed8FilePath6isFileEv+0x12>

000042cc <_ZN4mbed8FilePath4fileEv>:
    42cc:	6843      	ldr	r3, [r0, #4]
    42ce:	b510      	push	{r4, lr}
    42d0:	2b00      	cmp	r3, #0
    42d2:	d00a      	beq.n	42ea <_ZN4mbed8FilePath4fileEv+0x1e>
    42d4:	1c04      	adds	r4, r0, #0
    42d6:	1c18      	adds	r0, r3, #0
    42d8:	f001 fb16 	bl	5908 <_ZN4mbed8FileBase11getPathTypeEv>
    42dc:	2800      	cmp	r0, #0
    42de:	d104      	bne.n	42ea <_ZN4mbed8FilePath4fileEv+0x1e>
    42e0:	6860      	ldr	r0, [r4, #4]
    42e2:	2800      	cmp	r0, #0
    42e4:	d001      	beq.n	42ea <_ZN4mbed8FilePath4fileEv+0x1e>
    42e6:	3804      	subs	r0, #4
    42e8:	bd10      	pop	{r4, pc}
    42ea:	2000      	movs	r0, #0
    42ec:	e7fc      	b.n	42e8 <_ZN4mbed8FilePath4fileEv+0x1c>
    42ee:	46c0      	nop			; (mov r8, r8)

000042f0 <_ZN4mbed8FilePath6existsEv>:
    42f0:	6840      	ldr	r0, [r0, #4]
    42f2:	1e43      	subs	r3, r0, #1
    42f4:	4198      	sbcs	r0, r3
    42f6:	b2c0      	uxtb	r0, r0
    42f8:	4770      	bx	lr
    42fa:	46c0      	nop			; (mov r8, r8)

000042fc <_ZN4mbed3SPID1Ev>:
    42fc:	4770      	bx	lr
    42fe:	46c0      	nop			; (mov r8, r8)

00004300 <_ZN6CThunkIN4mbed3SPIEE10trampolineEPS1_PvPMS1_FvS4_E>:
    4300:	b510      	push	{r4, lr}
    4302:	2800      	cmp	r0, #0
    4304:	d008      	beq.n	4318 <_ZN6CThunkIN4mbed3SPIEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    4306:	6814      	ldr	r4, [r2, #0]
    4308:	6853      	ldr	r3, [r2, #4]
    430a:	2c00      	cmp	r4, #0
    430c:	d005      	beq.n	431a <_ZN6CThunkIN4mbed3SPIEE10trampolineEPS1_PvPMS1_FvS4_E+0x1a>
    430e:	07da      	lsls	r2, r3, #31
    4310:	d405      	bmi.n	431e <_ZN6CThunkIN4mbed3SPIEE10trampolineEPS1_PvPMS1_FvS4_E+0x1e>
    4312:	105b      	asrs	r3, r3, #1
    4314:	18c0      	adds	r0, r0, r3
    4316:	47a0      	blx	r4
    4318:	bd10      	pop	{r4, pc}
    431a:	07da      	lsls	r2, r3, #31
    431c:	d5fc      	bpl.n	4318 <_ZN6CThunkIN4mbed3SPIEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    431e:	105b      	asrs	r3, r3, #1
    4320:	18c0      	adds	r0, r0, r3
    4322:	6803      	ldr	r3, [r0, #0]
    4324:	591c      	ldr	r4, [r3, r4]
    4326:	47a0      	blx	r4
    4328:	e7f6      	b.n	4318 <_ZN6CThunkIN4mbed3SPIEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    432a:	46c0      	nop			; (mov r8, r8)

0000432c <_ZN4mbed3SPID0Ev>:
    432c:	b510      	push	{r4, lr}
    432e:	1c04      	adds	r4, r0, #0
    4330:	f001 fd63 	bl	5dfa <_ZdlPv>
    4334:	1c20      	adds	r0, r4, #0
    4336:	bd10      	pop	{r4, pc}

00004338 <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_>:
    4338:	b5f0      	push	{r4, r5, r6, r7, lr}
    433a:	4656      	mov	r6, sl
    433c:	465f      	mov	r7, fp
    433e:	464d      	mov	r5, r9
    4340:	4644      	mov	r4, r8
    4342:	4691      	mov	r9, r2
    4344:	2200      	movs	r2, #0
    4346:	b4f0      	push	{r4, r5, r6, r7}
    4348:	1c05      	adds	r5, r0, #0
    434a:	1c04      	adds	r4, r0, #0
    434c:	b087      	sub	sp, #28
    434e:	9303      	str	r3, [sp, #12]
    4350:	ab10      	add	r3, sp, #64	; 0x40
    4352:	569a      	ldrsb	r2, [r3, r2]
    4354:	4b26      	ldr	r3, [pc, #152]	; (43f0 <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_+0xb8>)
    4356:	468a      	mov	sl, r1
    4358:	3308      	adds	r3, #8
    435a:	c508      	stmia	r5!, {r3}
    435c:	4693      	mov	fp, r2
    435e:	1c28      	adds	r0, r5, #0
    4360:	2100      	movs	r1, #0
    4362:	2240      	movs	r2, #64	; 0x40
    4364:	f004 f9da 	bl	871c <memset>
    4368:	2300      	movs	r3, #0
    436a:	1c22      	adds	r2, r4, #0
    436c:	9304      	str	r3, [sp, #16]
    436e:	9305      	str	r3, [sp, #20]
    4370:	a904      	add	r1, sp, #16
    4372:	3248      	adds	r2, #72	; 0x48
    4374:	c941      	ldmia	r1!, {r0, r6}
    4376:	c241      	stmia	r2!, {r0, r6}
    4378:	4a1e      	ldr	r2, [pc, #120]	; (43f4 <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_+0xbc>)
    437a:	6522      	str	r2, [r4, #80]	; 0x50
    437c:	4a1e      	ldr	r2, [pc, #120]	; (43f8 <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_+0xc0>)
    437e:	6562      	str	r2, [r4, #84]	; 0x54
    4380:	4a1e      	ldr	r2, [pc, #120]	; (43fc <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_+0xc4>)
    4382:	65a2      	str	r2, [r4, #88]	; 0x58
    4384:	1c22      	adds	r2, r4, #0
    4386:	3248      	adds	r2, #72	; 0x48
    4388:	6623      	str	r3, [r4, #96]	; 0x60
    438a:	65e4      	str	r4, [r4, #92]	; 0x5c
    438c:	6662      	str	r2, [r4, #100]	; 0x64
    438e:	4a1c      	ldr	r2, [pc, #112]	; (4400 <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_+0xc8>)
    4390:	66a2      	str	r2, [r4, #104]	; 0x68
    4392:	f3bf 8f6f 	isb	sy
    4396:	f3bf 8f4f 	dsb	sy
    439a:	2280      	movs	r2, #128	; 0x80
    439c:	66e3      	str	r3, [r4, #108]	; 0x6c
    439e:	50a3      	str	r3, [r4, r2]
    43a0:	3204      	adds	r2, #4
    43a2:	54a3      	strb	r3, [r4, r2]
    43a4:	3204      	adds	r2, #4
    43a6:	4690      	mov	r8, r2
    43a8:	4641      	mov	r1, r8
    43aa:	278c      	movs	r7, #140	; 0x8c
    43ac:	3a80      	subs	r2, #128	; 0x80
    43ae:	5062      	str	r2, [r4, r1]
    43b0:	2690      	movs	r6, #144	; 0x90
    43b2:	465a      	mov	r2, fp
    43b4:	51e3      	str	r3, [r4, r7]
    43b6:	4b13      	ldr	r3, [pc, #76]	; (4404 <_ZN4mbed3SPIC1E7PinNameS1_S1_S1_+0xcc>)
    43b8:	9200      	str	r2, [sp, #0]
    43ba:	51a3      	str	r3, [r4, r6]
    43bc:	1c28      	adds	r0, r5, #0
    43be:	4651      	mov	r1, sl
    43c0:	464a      	mov	r2, r9
    43c2:	9b03      	ldr	r3, [sp, #12]
    43c4:	f000 ff86 	bl	52d4 <spi_init>
    43c8:	4643      	mov	r3, r8
    43ca:	59e2      	ldr	r2, [r4, r7]
    43cc:	58e1      	ldr	r1, [r4, r3]
    43ce:	1c28      	adds	r0, r5, #0
    43d0:	2300      	movs	r3, #0
    43d2:	f001 f877 	bl	54c4 <spi_format>
    43d6:	1c28      	adds	r0, r5, #0
    43d8:	59a1      	ldr	r1, [r4, r6]
    43da:	f001 f927 	bl	562c <spi_frequency>
    43de:	1c20      	adds	r0, r4, #0
    43e0:	b007      	add	sp, #28
    43e2:	bc3c      	pop	{r2, r3, r4, r5}
    43e4:	4690      	mov	r8, r2
    43e6:	4699      	mov	r9, r3
    43e8:	46a2      	mov	sl, r4
    43ea:	46ab      	mov	fp, r5
    43ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    43ee:	46c0      	nop			; (mov r8, r8)
    43f0:	0000dbc8 	.word	0x0000dbc8
    43f4:	2404b51f 	.word	0x2404b51f
    43f8:	cc0f447c 	.word	0xcc0f447c
    43fc:	bd1f4798 	.word	0xbd1f4798
    4400:	00004301 	.word	0x00004301
    4404:	000f4240 	.word	0x000f4240

00004408 <_ZN4mbed3SPI6aquireEv>:
    4408:	b570      	push	{r4, r5, r6, lr}
    440a:	4d0a      	ldr	r5, [pc, #40]	; (4434 <_ZN4mbed3SPI6aquireEv+0x2c>)
    440c:	682b      	ldr	r3, [r5, #0]
    440e:	4283      	cmp	r3, r0
    4410:	d00f      	beq.n	4432 <_ZN4mbed3SPI6aquireEv+0x2a>
    4412:	2388      	movs	r3, #136	; 0x88
    4414:	1d06      	adds	r6, r0, #4
    4416:	58c1      	ldr	r1, [r0, r3]
    4418:	3304      	adds	r3, #4
    441a:	58c2      	ldr	r2, [r0, r3]
    441c:	1c04      	adds	r4, r0, #0
    441e:	2300      	movs	r3, #0
    4420:	1c30      	adds	r0, r6, #0
    4422:	f001 f84f 	bl	54c4 <spi_format>
    4426:	2390      	movs	r3, #144	; 0x90
    4428:	1c30      	adds	r0, r6, #0
    442a:	58e1      	ldr	r1, [r4, r3]
    442c:	f001 f8fe 	bl	562c <spi_frequency>
    4430:	602c      	str	r4, [r5, #0]
    4432:	bd70      	pop	{r4, r5, r6, pc}
    4434:	20004538 	.word	0x20004538

00004438 <_ZN4mbed3SPI6formatEii>:
    4438:	b508      	push	{r3, lr}
    443a:	2388      	movs	r3, #136	; 0x88
    443c:	50c1      	str	r1, [r0, r3]
    443e:	3304      	adds	r3, #4
    4440:	50c2      	str	r2, [r0, r3]
    4442:	2200      	movs	r2, #0
    4444:	4b02      	ldr	r3, [pc, #8]	; (4450 <_ZN4mbed3SPI6formatEii+0x18>)
    4446:	601a      	str	r2, [r3, #0]
    4448:	f7ff ffde 	bl	4408 <_ZN4mbed3SPI6aquireEv>
    444c:	bd08      	pop	{r3, pc}
    444e:	46c0      	nop			; (mov r8, r8)
    4450:	20004538 	.word	0x20004538

00004454 <_ZN4mbed3SPI9frequencyEi>:
    4454:	b508      	push	{r3, lr}
    4456:	2390      	movs	r3, #144	; 0x90
    4458:	2200      	movs	r2, #0
    445a:	50c1      	str	r1, [r0, r3]
    445c:	4b02      	ldr	r3, [pc, #8]	; (4468 <_ZN4mbed3SPI9frequencyEi+0x14>)
    445e:	601a      	str	r2, [r3, #0]
    4460:	f7ff ffd2 	bl	4408 <_ZN4mbed3SPI6aquireEv>
    4464:	bd08      	pop	{r3, pc}
    4466:	46c0      	nop			; (mov r8, r8)
    4468:	20004538 	.word	0x20004538

0000446c <_ZN4mbed3SPI5writeEi>:
    446c:	b538      	push	{r3, r4, r5, lr}
    446e:	1c0d      	adds	r5, r1, #0
    4470:	1c04      	adds	r4, r0, #0
    4472:	f7ff ffc9 	bl	4408 <_ZN4mbed3SPI6aquireEv>
    4476:	1c29      	adds	r1, r5, #0
    4478:	1d20      	adds	r0, r4, #4
    447a:	f001 f953 	bl	5724 <spi_master_write>
    447e:	bd38      	pop	{r3, r4, r5, pc}

00004480 <_ZN4mbed6Serial5_getcEv>:
    4480:	b508      	push	{r3, lr}
    4482:	f000 f8b5 	bl	45f0 <_ZN4mbed10SerialBase10_base_getcEv>
    4486:	bd08      	pop	{r3, pc}

00004488 <_ZThn220_N4mbed6Serial5_getcEv>:
    4488:	b408      	push	{r3}
    448a:	4b02      	ldr	r3, [pc, #8]	; (4494 <_ZThn220_N4mbed6Serial5_getcEv+0xc>)
    448c:	469c      	mov	ip, r3
    448e:	38dc      	subs	r0, #220	; 0xdc
    4490:	bc08      	pop	{r3}
    4492:	4760      	bx	ip
    4494:	00004481 	.word	0x00004481

00004498 <_ZN4mbed6Serial5_putcEi>:
    4498:	b508      	push	{r3, lr}
    449a:	f000 f8af 	bl	45fc <_ZN4mbed10SerialBase10_base_putcEi>
    449e:	bd08      	pop	{r3, pc}

000044a0 <_ZThn220_N4mbed6Serial5_putcEi>:
    44a0:	b408      	push	{r3}
    44a2:	4b02      	ldr	r3, [pc, #8]	; (44ac <_ZThn220_N4mbed6Serial5_putcEi+0xc>)
    44a4:	469c      	mov	ip, r3
    44a6:	38dc      	subs	r0, #220	; 0xdc
    44a8:	bc08      	pop	{r3}
    44aa:	4760      	bx	ip
    44ac:	00004499 	.word	0x00004499

000044b0 <_ZN4mbed6SerialC1E7PinNameS1_PKc>:
    44b0:	b538      	push	{r3, r4, r5, lr}
    44b2:	1c04      	adds	r4, r0, #0
    44b4:	1c1d      	adds	r5, r3, #0
    44b6:	f000 f843 	bl	4540 <_ZN4mbed10SerialBaseC1E7PinNameS1_>
    44ba:	1c20      	adds	r0, r4, #0
    44bc:	1c29      	adds	r1, r5, #0
    44be:	30dc      	adds	r0, #220	; 0xdc
    44c0:	f000 f8da 	bl	4678 <_ZN4mbed6StreamC1EPKc>
    44c4:	4b06      	ldr	r3, [pc, #24]	; (44e0 <_ZN4mbed6SerialC1E7PinNameS1_PKc+0x30>)
    44c6:	1c20      	adds	r0, r4, #0
    44c8:	1c1a      	adds	r2, r3, #0
    44ca:	1c19      	adds	r1, r3, #0
    44cc:	3208      	adds	r2, #8
    44ce:	6022      	str	r2, [r4, #0]
    44d0:	22dc      	movs	r2, #220	; 0xdc
    44d2:	3120      	adds	r1, #32
    44d4:	50a1      	str	r1, [r4, r2]
    44d6:	3354      	adds	r3, #84	; 0x54
    44d8:	3204      	adds	r2, #4
    44da:	50a3      	str	r3, [r4, r2]
    44dc:	bd38      	pop	{r3, r4, r5, pc}
    44de:	46c0      	nop			; (mov r8, r8)
    44e0:	0000dbe0 	.word	0x0000dbe0

000044e4 <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq>:
    44e4:	b508      	push	{r3, lr}
    44e6:	004b      	lsls	r3, r1, #1
    44e8:	1859      	adds	r1, r3, r1
    44ea:	00c9      	lsls	r1, r1, #3
    44ec:	1843      	adds	r3, r0, r1
    44ee:	1c1a      	adds	r2, r3, #0
    44f0:	32b8      	adds	r2, #184	; 0xb8
    44f2:	6852      	ldr	r2, [r2, #4]
    44f4:	33a8      	adds	r3, #168	; 0xa8
    44f6:	681b      	ldr	r3, [r3, #0]
    44f8:	2a00      	cmp	r2, #0
    44fa:	d006      	beq.n	450a <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq+0x26>
    44fc:	2b00      	cmp	r3, #0
    44fe:	d003      	beq.n	4508 <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq+0x24>
    4500:	1841      	adds	r1, r0, r1
    4502:	31ac      	adds	r1, #172	; 0xac
    4504:	1c18      	adds	r0, r3, #0
    4506:	4790      	blx	r2
    4508:	bd08      	pop	{r3, pc}
    450a:	2b00      	cmp	r3, #0
    450c:	d0fc      	beq.n	4508 <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq+0x24>
    450e:	4798      	blx	r3
    4510:	e7fa      	b.n	4508 <_ZN4mbed10SerialBase12_irq_handlerEm9SerialIrq+0x24>
    4512:	46c0      	nop			; (mov r8, r8)

00004514 <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E>:
    4514:	b510      	push	{r4, lr}
    4516:	2800      	cmp	r0, #0
    4518:	d008      	beq.n	452c <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    451a:	6814      	ldr	r4, [r2, #0]
    451c:	6853      	ldr	r3, [r2, #4]
    451e:	2c00      	cmp	r4, #0
    4520:	d005      	beq.n	452e <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x1a>
    4522:	07da      	lsls	r2, r3, #31
    4524:	d405      	bmi.n	4532 <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x1e>
    4526:	105b      	asrs	r3, r3, #1
    4528:	18c0      	adds	r0, r0, r3
    452a:	47a0      	blx	r4
    452c:	bd10      	pop	{r4, pc}
    452e:	07da      	lsls	r2, r3, #31
    4530:	d5fc      	bpl.n	452c <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    4532:	105b      	asrs	r3, r3, #1
    4534:	18c0      	adds	r0, r0, r3
    4536:	6803      	ldr	r3, [r0, #0]
    4538:	591c      	ldr	r4, [r3, r4]
    453a:	47a0      	blx	r4
    453c:	e7f6      	b.n	452c <_ZN6CThunkIN4mbed10SerialBaseEE10trampolineEPS1_PvPMS1_FvS4_E+0x18>
    453e:	46c0      	nop			; (mov r8, r8)

00004540 <_ZN4mbed10SerialBaseC1E7PinNameS1_>:
    4540:	b5f0      	push	{r4, r5, r6, r7, lr}
    4542:	4647      	mov	r7, r8
    4544:	b480      	push	{r7}
    4546:	4b24      	ldr	r3, [pc, #144]	; (45d8 <_ZN4mbed10SerialBaseC1E7PinNameS1_+0x98>)
    4548:	b082      	sub	sp, #8
    454a:	6003      	str	r3, [r0, #0]
    454c:	2500      	movs	r5, #0
    454e:	1c03      	adds	r3, r0, #0
    4550:	1c17      	adds	r7, r2, #0
    4552:	466a      	mov	r2, sp
    4554:	1c04      	adds	r4, r0, #0
    4556:	9500      	str	r5, [sp, #0]
    4558:	9501      	str	r5, [sp, #4]
    455a:	3308      	adds	r3, #8
    455c:	4688      	mov	r8, r1
    455e:	ca03      	ldmia	r2!, {r0, r1}
    4560:	c303      	stmia	r3!, {r0, r1}
    4562:	4b1e      	ldr	r3, [pc, #120]	; (45dc <_ZN4mbed10SerialBaseC1E7PinNameS1_+0x9c>)
    4564:	6123      	str	r3, [r4, #16]
    4566:	4b1e      	ldr	r3, [pc, #120]	; (45e0 <_ZN4mbed10SerialBaseC1E7PinNameS1_+0xa0>)
    4568:	6163      	str	r3, [r4, #20]
    456a:	4b1e      	ldr	r3, [pc, #120]	; (45e4 <_ZN4mbed10SerialBaseC1E7PinNameS1_+0xa4>)
    456c:	61a3      	str	r3, [r4, #24]
    456e:	1c23      	adds	r3, r4, #0
    4570:	3308      	adds	r3, #8
    4572:	6225      	str	r5, [r4, #32]
    4574:	61e4      	str	r4, [r4, #28]
    4576:	6263      	str	r3, [r4, #36]	; 0x24
    4578:	4b1b      	ldr	r3, [pc, #108]	; (45e8 <_ZN4mbed10SerialBaseC1E7PinNameS1_+0xa8>)
    457a:	62a3      	str	r3, [r4, #40]	; 0x28
    457c:	f3bf 8f6f 	isb	sy
    4580:	f3bf 8f4f 	dsb	sy
    4584:	235c      	movs	r3, #92	; 0x5c
    4586:	1c26      	adds	r6, r4, #0
    4588:	62e5      	str	r5, [r4, #44]	; 0x2c
    458a:	6425      	str	r5, [r4, #64]	; 0x40
    458c:	6465      	str	r5, [r4, #68]	; 0x44
    458e:	65a5      	str	r5, [r4, #88]	; 0x58
    4590:	3660      	adds	r6, #96	; 0x60
    4592:	54e5      	strb	r5, [r4, r3]
    4594:	3301      	adds	r3, #1
    4596:	54e5      	strb	r5, [r4, r3]
    4598:	1c30      	adds	r0, r6, #0
    459a:	2100      	movs	r1, #0
    459c:	2248      	movs	r2, #72	; 0x48
    459e:	f004 f8bd 	bl	871c <memset>
    45a2:	23a8      	movs	r3, #168	; 0xa8
    45a4:	2296      	movs	r2, #150	; 0x96
    45a6:	50e5      	str	r5, [r4, r3]
    45a8:	3314      	adds	r3, #20
    45aa:	50e5      	str	r5, [r4, r3]
    45ac:	3304      	adds	r3, #4
    45ae:	50e5      	str	r5, [r4, r3]
    45b0:	3314      	adds	r3, #20
    45b2:	50e5      	str	r5, [r4, r3]
    45b4:	0192      	lsls	r2, r2, #6
    45b6:	3304      	adds	r3, #4
    45b8:	50e2      	str	r2, [r4, r3]
    45ba:	1c30      	adds	r0, r6, #0
    45bc:	4641      	mov	r1, r8
    45be:	1c3a      	adds	r2, r7, #0
    45c0:	f7ff fcb2 	bl	3f28 <serial_init>
    45c4:	1c30      	adds	r0, r6, #0
    45c6:	4909      	ldr	r1, [pc, #36]	; (45ec <_ZN4mbed10SerialBaseC1E7PinNameS1_+0xac>)
    45c8:	1c22      	adds	r2, r4, #0
    45ca:	f7ff fd89 	bl	40e0 <serial_irq_handler>
    45ce:	1c20      	adds	r0, r4, #0
    45d0:	b002      	add	sp, #8
    45d2:	bc04      	pop	{r2}
    45d4:	4690      	mov	r8, r2
    45d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    45d8:	0000dc48 	.word	0x0000dc48
    45dc:	2404b51f 	.word	0x2404b51f
    45e0:	cc0f447c 	.word	0xcc0f447c
    45e4:	bd1f4798 	.word	0xbd1f4798
    45e8:	00004515 	.word	0x00004515
    45ec:	000044e5 	.word	0x000044e5

000045f0 <_ZN4mbed10SerialBase10_base_getcEv>:
    45f0:	b508      	push	{r3, lr}
    45f2:	3060      	adds	r0, #96	; 0x60
    45f4:	f7ff fdd6 	bl	41a4 <serial_getc>
    45f8:	bd08      	pop	{r3, pc}
    45fa:	46c0      	nop			; (mov r8, r8)

000045fc <_ZN4mbed10SerialBase10_base_putcEi>:
    45fc:	b510      	push	{r4, lr}
    45fe:	1c0c      	adds	r4, r1, #0
    4600:	3060      	adds	r0, #96	; 0x60
    4602:	f7ff fdfb 	bl	41fc <serial_putc>
    4606:	1c20      	adds	r0, r4, #0
    4608:	bd10      	pop	{r4, pc}
    460a:	46c0      	nop			; (mov r8, r8)

0000460c <_ZN4mbed6Stream5closeEv>:
    460c:	2000      	movs	r0, #0
    460e:	4770      	bx	lr

00004610 <_ZN4mbed6Stream5writeEPKvj>:
    4610:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4612:	188e      	adds	r6, r1, r2
    4614:	1c05      	adds	r5, r0, #0
    4616:	1c0f      	adds	r7, r1, #0
    4618:	1e0c      	subs	r4, r1, #0
    461a:	42b4      	cmp	r4, r6
    461c:	d102      	bne.n	4624 <_ZN4mbed6Stream5writeEPKvj+0x14>
    461e:	e00a      	b.n	4636 <_ZN4mbed6Stream5writeEPKvj+0x26>
    4620:	42a6      	cmp	r6, r4
    4622:	d008      	beq.n	4636 <_ZN4mbed6Stream5writeEPKvj+0x26>
    4624:	3401      	adds	r4, #1
    4626:	682b      	ldr	r3, [r5, #0]
    4628:	1e62      	subs	r2, r4, #1
    462a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    462c:	7811      	ldrb	r1, [r2, #0]
    462e:	1c28      	adds	r0, r5, #0
    4630:	4798      	blx	r3
    4632:	1c43      	adds	r3, r0, #1
    4634:	d1f4      	bne.n	4620 <_ZN4mbed6Stream5writeEPKvj+0x10>
    4636:	1be0      	subs	r0, r4, r7
    4638:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    463a:	46c0      	nop			; (mov r8, r8)

0000463c <_ZN4mbed6Stream4readEPvj>:
    463c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    463e:	188e      	adds	r6, r1, r2
    4640:	1c05      	adds	r5, r0, #0
    4642:	1c0f      	adds	r7, r1, #0
    4644:	1e0c      	subs	r4, r1, #0
    4646:	42b4      	cmp	r4, r6
    4648:	d105      	bne.n	4656 <_ZN4mbed6Stream4readEPvj+0x1a>
    464a:	e00a      	b.n	4662 <_ZN4mbed6Stream4readEPvj+0x26>
    464c:	3401      	adds	r4, #1
    464e:	1e63      	subs	r3, r4, #1
    4650:	7018      	strb	r0, [r3, #0]
    4652:	42a6      	cmp	r6, r4
    4654:	d005      	beq.n	4662 <_ZN4mbed6Stream4readEPvj+0x26>
    4656:	682b      	ldr	r3, [r5, #0]
    4658:	1c28      	adds	r0, r5, #0
    465a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    465c:	4798      	blx	r3
    465e:	1c43      	adds	r3, r0, #1
    4660:	d1f4      	bne.n	464c <_ZN4mbed6Stream4readEPvj+0x10>
    4662:	1be0      	subs	r0, r4, r7
    4664:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4666:	46c0      	nop			; (mov r8, r8)

00004668 <_ZN4mbed6Stream5lseekEli>:
    4668:	2000      	movs	r0, #0
    466a:	4770      	bx	lr

0000466c <_ZN4mbed6Stream6isattyEv>:
    466c:	2000      	movs	r0, #0
    466e:	4770      	bx	lr

00004670 <_ZN4mbed6Stream5fsyncEv>:
    4670:	2000      	movs	r0, #0
    4672:	4770      	bx	lr

00004674 <_ZN4mbed6Stream4flenEv>:
    4674:	2000      	movs	r0, #0
    4676:	4770      	bx	lr

00004678 <_ZN4mbed6StreamC1EPKc>:
    4678:	b510      	push	{r4, lr}
    467a:	1c04      	adds	r4, r0, #0
    467c:	b084      	sub	sp, #16
    467e:	f001 f945 	bl	590c <_ZN4mbed8FileLikeC1EPKc>
    4682:	4b0b      	ldr	r3, [pc, #44]	; (46b0 <_ZN4mbed6StreamC1EPKc+0x38>)
    4684:	a801      	add	r0, sp, #4
    4686:	1c1a      	adds	r2, r3, #0
    4688:	333c      	adds	r3, #60	; 0x3c
    468a:	6063      	str	r3, [r4, #4]
    468c:	2300      	movs	r3, #0
    468e:	3208      	adds	r2, #8
    4690:	6163      	str	r3, [r4, #20]
    4692:	6022      	str	r2, [r4, #0]
    4694:	4907      	ldr	r1, [pc, #28]	; (46b4 <_ZN4mbed6StreamC1EPKc+0x3c>)
    4696:	1c22      	adds	r2, r4, #0
    4698:	f005 fb48 	bl	9d2c <siprintf>
    469c:	4906      	ldr	r1, [pc, #24]	; (46b8 <_ZN4mbed6StreamC1EPKc+0x40>)
    469e:	a801      	add	r0, sp, #4
    46a0:	f003 fecc 	bl	843c <fopen>
    46a4:	6160      	str	r0, [r4, #20]
    46a6:	f7ff f875 	bl	3794 <_ZN4mbed26mbed_set_unbuffered_streamEP7__sFILE>
    46aa:	1c20      	adds	r0, r4, #0
    46ac:	b004      	add	sp, #16
    46ae:	bd10      	pop	{r4, pc}
    46b0:	0000dc50 	.word	0x0000dc50
    46b4:	0000d90c 	.word	0x0000d90c
    46b8:	0000dc94 	.word	0x0000dc94

000046bc <_ZN4mbed6StreamD1Ev>:
    46bc:	4b07      	ldr	r3, [pc, #28]	; (46dc <_ZN4mbed6StreamD1Ev+0x20>)
    46be:	b510      	push	{r4, lr}
    46c0:	1c1a      	adds	r2, r3, #0
    46c2:	1c04      	adds	r4, r0, #0
    46c4:	3208      	adds	r2, #8
    46c6:	333c      	adds	r3, #60	; 0x3c
    46c8:	6002      	str	r2, [r0, #0]
    46ca:	6043      	str	r3, [r0, #4]
    46cc:	6940      	ldr	r0, [r0, #20]
    46ce:	f003 fcef 	bl	80b0 <fclose>
    46d2:	1c20      	adds	r0, r4, #0
    46d4:	f001 f92e 	bl	5934 <_ZN4mbed8FileLikeD1Ev>
    46d8:	1c20      	adds	r0, r4, #0
    46da:	bd10      	pop	{r4, pc}
    46dc:	0000dc50 	.word	0x0000dc50

000046e0 <_ZN4mbed6Stream6printfEPKcz>:
    46e0:	b40e      	push	{r1, r2, r3}
    46e2:	b530      	push	{r4, r5, lr}
    46e4:	1c04      	adds	r4, r0, #0
    46e6:	b082      	sub	sp, #8
    46e8:	ab05      	add	r3, sp, #20
    46ea:	cb20      	ldmia	r3!, {r5}
    46ec:	6940      	ldr	r0, [r0, #20]
    46ee:	9301      	str	r3, [sp, #4]
    46f0:	f003 fd9e 	bl	8230 <fflush>
    46f4:	6960      	ldr	r0, [r4, #20]
    46f6:	1c29      	adds	r1, r5, #0
    46f8:	9a01      	ldr	r2, [sp, #4]
    46fa:	f004 f9ed 	bl	8ad8 <vfiprintf>
    46fe:	b002      	add	sp, #8
    4700:	bc30      	pop	{r4, r5}
    4702:	bc08      	pop	{r3}
    4704:	b003      	add	sp, #12
    4706:	4718      	bx	r3

00004708 <mbed_assert_internal>:
    4708:	b538      	push	{r3, r4, r5, lr}
    470a:	1c05      	adds	r5, r0, #0
    470c:	1c0c      	adds	r4, r1, #0
    470e:	1c13      	adds	r3, r2, #0
    4710:	1c29      	adds	r1, r5, #0
    4712:	4802      	ldr	r0, [pc, #8]	; (471c <mbed_assert_internal+0x14>)
    4714:	1c22      	adds	r2, r4, #0
    4716:	f000 f803 	bl	4720 <error>
    471a:	bd38      	pop	{r3, r4, r5, pc}
    471c:	0000dc98 	.word	0x0000dc98

00004720 <error>:
    4720:	b40f      	push	{r0, r1, r2, r3}
    4722:	2001      	movs	r0, #1
    4724:	b508      	push	{r3, lr}
    4726:	f003 fc55 	bl	7fd4 <exit>
    472a:	46c0      	nop			; (mov r8, r8)

0000472c <gpio_init_out>:
    472c:	b538      	push	{r3, r4, r5, lr}
    472e:	1c0d      	adds	r5, r1, #0
    4730:	1c04      	adds	r4, r0, #0
    4732:	f000 fa8b 	bl	4c4c <gpio_init>
    4736:	1c6b      	adds	r3, r5, #1
    4738:	d00e      	beq.n	4758 <gpio_init_out+0x2c>
    473a:	2300      	movs	r3, #0
    473c:	56e3      	ldrsb	r3, [r4, r3]
    473e:	3301      	adds	r3, #1
    4740:	d00b      	beq.n	475a <gpio_init_out+0x2e>
    4742:	68e3      	ldr	r3, [r4, #12]
    4744:	6862      	ldr	r2, [r4, #4]
    4746:	1c20      	adds	r0, r4, #0
    4748:	2101      	movs	r1, #1
    474a:	601a      	str	r2, [r3, #0]
    474c:	f000 fae6 	bl	4d1c <gpio_dir>
    4750:	1c20      	adds	r0, r4, #0
    4752:	2100      	movs	r1, #0
    4754:	f000 faba 	bl	4ccc <gpio_mode>
    4758:	bd38      	pop	{r3, r4, r5, pc}
    475a:	4803      	ldr	r0, [pc, #12]	; (4768 <gpio_init_out+0x3c>)
    475c:	4903      	ldr	r1, [pc, #12]	; (476c <gpio_init_out+0x40>)
    475e:	2228      	movs	r2, #40	; 0x28
    4760:	f7ff ffd2 	bl	4708 <mbed_assert_internal>
    4764:	e7ed      	b.n	4742 <gpio_init_out+0x16>
    4766:	46c0      	nop			; (mov r8, r8)
    4768:	0000d34c 	.word	0x0000d34c
    476c:	0000dccc 	.word	0x0000dccc

00004770 <pinmap_find_peripheral>:
    4770:	e002      	b.n	4778 <pinmap_find_peripheral+0x8>
    4772:	4283      	cmp	r3, r0
    4774:	d006      	beq.n	4784 <pinmap_find_peripheral+0x14>
    4776:	310c      	adds	r1, #12
    4778:	2300      	movs	r3, #0
    477a:	56cb      	ldrsb	r3, [r1, r3]
    477c:	1c5a      	adds	r2, r3, #1
    477e:	d1f8      	bne.n	4772 <pinmap_find_peripheral+0x2>
    4780:	1c18      	adds	r0, r3, #0
    4782:	4770      	bx	lr
    4784:	6848      	ldr	r0, [r1, #4]
    4786:	e7fc      	b.n	4782 <pinmap_find_peripheral+0x12>

00004788 <pinmap_peripheral>:
    4788:	1c02      	adds	r2, r0, #0
    478a:	b508      	push	{r3, lr}
    478c:	1c53      	adds	r3, r2, #1
    478e:	d103      	bne.n	4798 <pinmap_peripheral+0x10>
    4790:	e00b      	b.n	47aa <pinmap_peripheral+0x22>
    4792:	429a      	cmp	r2, r3
    4794:	d00a      	beq.n	47ac <pinmap_peripheral+0x24>
    4796:	310c      	adds	r1, #12
    4798:	2300      	movs	r3, #0
    479a:	56cb      	ldrsb	r3, [r1, r3]
    479c:	1c58      	adds	r0, r3, #1
    479e:	d1f8      	bne.n	4792 <pinmap_peripheral+0xa>
    47a0:	4804      	ldr	r0, [pc, #16]	; (47b4 <pinmap_peripheral+0x2c>)
    47a2:	f7ff ffbd 	bl	4720 <error>
    47a6:	2001      	movs	r0, #1
    47a8:	4240      	negs	r0, r0
    47aa:	bd08      	pop	{r3, pc}
    47ac:	6848      	ldr	r0, [r1, #4]
    47ae:	1c43      	adds	r3, r0, #1
    47b0:	d1fb      	bne.n	47aa <pinmap_peripheral+0x22>
    47b2:	e7f5      	b.n	47a0 <pinmap_peripheral+0x18>
    47b4:	0000dd6c 	.word	0x0000dd6c

000047b8 <pinmap_function>:
    47b8:	1c02      	adds	r2, r0, #0
    47ba:	b508      	push	{r3, lr}
    47bc:	1c53      	adds	r3, r2, #1
    47be:	d103      	bne.n	47c8 <pinmap_function+0x10>
    47c0:	e00b      	b.n	47da <pinmap_function+0x22>
    47c2:	429a      	cmp	r2, r3
    47c4:	d00a      	beq.n	47dc <pinmap_function+0x24>
    47c6:	310c      	adds	r1, #12
    47c8:	2300      	movs	r3, #0
    47ca:	56cb      	ldrsb	r3, [r1, r3]
    47cc:	1c58      	adds	r0, r3, #1
    47ce:	d1f8      	bne.n	47c2 <pinmap_function+0xa>
    47d0:	4804      	ldr	r0, [pc, #16]	; (47e4 <pinmap_function+0x2c>)
    47d2:	f7ff ffa5 	bl	4720 <error>
    47d6:	2001      	movs	r0, #1
    47d8:	4240      	negs	r0, r0
    47da:	bd08      	pop	{r3, pc}
    47dc:	6888      	ldr	r0, [r1, #8]
    47de:	1c43      	adds	r3, r0, #1
    47e0:	d1fb      	bne.n	47da <pinmap_function+0x22>
    47e2:	e7f5      	b.n	47d0 <pinmap_function+0x18>
    47e4:	0000dd8c 	.word	0x0000dd8c

000047e8 <wait_us>:
    47e8:	b538      	push	{r3, r4, r5, lr}
    47ea:	1c05      	adds	r5, r0, #0
    47ec:	f000 fcbc 	bl	5168 <us_ticker_read>
    47f0:	1c04      	adds	r4, r0, #0
    47f2:	f000 fcb9 	bl	5168 <us_ticker_read>
    47f6:	1b00      	subs	r0, r0, r4
    47f8:	42a8      	cmp	r0, r5
    47fa:	d3fa      	bcc.n	47f2 <wait_us+0xa>
    47fc:	bd38      	pop	{r3, r4, r5, pc}
    47fe:	46c0      	nop			; (mov r8, r8)

00004800 <wait_ms>:
    4800:	b508      	push	{r3, lr}
    4802:	23fa      	movs	r3, #250	; 0xfa
    4804:	009b      	lsls	r3, r3, #2
    4806:	4358      	muls	r0, r3
    4808:	f7ff ffee 	bl	47e8 <wait_us>
    480c:	bd08      	pop	{r3, pc}
    480e:	46c0      	nop			; (mov r8, r8)

00004810 <_sercom_get_sync_baud_val>:
    4810:	b510      	push	{r4, lr}
    4812:	0849      	lsrs	r1, r1, #1
    4814:	2340      	movs	r3, #64	; 0x40
    4816:	2400      	movs	r4, #0
    4818:	4281      	cmp	r1, r0
    481a:	d202      	bcs.n	4822 <_sercom_get_sync_baud_val+0x12>
    481c:	1c18      	adds	r0, r3, #0
    481e:	bd10      	pop	{r4, pc}
    4820:	1c1c      	adds	r4, r3, #0
    4822:	1c63      	adds	r3, r4, #1
    4824:	1a09      	subs	r1, r1, r0
    4826:	b29b      	uxth	r3, r3
    4828:	4288      	cmp	r0, r1
    482a:	d9f9      	bls.n	4820 <_sercom_get_sync_baud_val+0x10>
    482c:	2340      	movs	r3, #64	; 0x40
    482e:	2cff      	cmp	r4, #255	; 0xff
    4830:	d8f4      	bhi.n	481c <_sercom_get_sync_baud_val+0xc>
    4832:	8014      	strh	r4, [r2, #0]
    4834:	2300      	movs	r3, #0
    4836:	e7f1      	b.n	481c <_sercom_get_sync_baud_val+0xc>

00004838 <_sercom_get_async_baud_val>:
    4838:	b5f0      	push	{r4, r5, r6, r7, lr}
    483a:	4656      	mov	r6, sl
    483c:	464d      	mov	r5, r9
    483e:	4644      	mov	r4, r8
    4840:	465f      	mov	r7, fp
    4842:	b4f0      	push	{r4, r5, r6, r7}
    4844:	1c04      	adds	r4, r0, #0
    4846:	1c25      	adds	r5, r4, #0
    4848:	b087      	sub	sp, #28
    484a:	a810      	add	r0, sp, #64	; 0x40
    484c:	7806      	ldrb	r6, [r0, #0]
    484e:	2040      	movs	r0, #64	; 0x40
    4850:	4375      	muls	r5, r6
    4852:	428d      	cmp	r5, r1
    4854:	d906      	bls.n	4864 <_sercom_get_async_baud_val+0x2c>
    4856:	b007      	add	sp, #28
    4858:	bc3c      	pop	{r2, r3, r4, r5}
    485a:	4690      	mov	r8, r2
    485c:	4699      	mov	r9, r3
    485e:	46a2      	mov	sl, r4
    4860:	46ab      	mov	fp, r5
    4862:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4864:	9204      	str	r2, [sp, #16]
    4866:	1c0d      	adds	r5, r1, #0
    4868:	1c22      	adds	r2, r4, #0
    486a:	2b00      	cmp	r3, #0
    486c:	d13f      	bne.n	48ee <_sercom_get_async_baud_val+0xb6>
    486e:	1c30      	adds	r0, r6, #0
    4870:	2100      	movs	r1, #0
    4872:	f001 fc87 	bl	6184 <__aeabi_lmul>
    4876:	2300      	movs	r3, #0
    4878:	4683      	mov	fp, r0
    487a:	213f      	movs	r1, #63	; 0x3f
    487c:	2001      	movs	r0, #1
    487e:	469c      	mov	ip, r3
    4880:	469a      	mov	sl, r3
    4882:	1c2e      	adds	r6, r5, #0
    4884:	2700      	movs	r7, #0
    4886:	2200      	movs	r2, #0
    4888:	2300      	movs	r3, #0
    488a:	4680      	mov	r8, r0
    488c:	1c0c      	adds	r4, r1, #0
    488e:	e024      	b.n	48da <_sercom_get_async_baud_val+0xa2>
    4890:	4641      	mov	r1, r8
    4892:	40a9      	lsls	r1, r5
    4894:	1c0d      	adds	r5, r1, #0
    4896:	4641      	mov	r1, r8
    4898:	40a1      	lsls	r1, r4
    489a:	1c10      	adds	r0, r2, #0
    489c:	4689      	mov	r9, r1
    489e:	1c19      	adds	r1, r3, #0
    48a0:	1880      	adds	r0, r0, r2
    48a2:	4159      	adcs	r1, r3
    48a4:	1c0b      	adds	r3, r1, #0
    48a6:	1c02      	adds	r2, r0, #0
    48a8:	4659      	mov	r1, fp
    48aa:	9200      	str	r2, [sp, #0]
    48ac:	9301      	str	r3, [sp, #4]
    48ae:	4229      	tst	r1, r5
    48b0:	d003      	beq.n	48ba <_sercom_get_async_baud_val+0x82>
    48b2:	4640      	mov	r0, r8
    48b4:	4310      	orrs	r0, r2
    48b6:	1c02      	adds	r2, r0, #0
    48b8:	9b01      	ldr	r3, [sp, #4]
    48ba:	429f      	cmp	r7, r3
    48bc:	d80b      	bhi.n	48d6 <_sercom_get_async_baud_val+0x9e>
    48be:	d101      	bne.n	48c4 <_sercom_get_async_baud_val+0x8c>
    48c0:	4296      	cmp	r6, r2
    48c2:	d808      	bhi.n	48d6 <_sercom_get_async_baud_val+0x9e>
    48c4:	4661      	mov	r1, ip
    48c6:	4648      	mov	r0, r9
    48c8:	4301      	orrs	r1, r0
    48ca:	4650      	mov	r0, sl
    48cc:	4328      	orrs	r0, r5
    48ce:	1b92      	subs	r2, r2, r6
    48d0:	41bb      	sbcs	r3, r7
    48d2:	468c      	mov	ip, r1
    48d4:	4682      	mov	sl, r0
    48d6:	3c01      	subs	r4, #1
    48d8:	d310      	bcc.n	48fc <_sercom_get_async_baud_val+0xc4>
    48da:	2120      	movs	r1, #32
    48dc:	4249      	negs	r1, r1
    48de:	1865      	adds	r5, r4, r1
    48e0:	d5d6      	bpl.n	4890 <_sercom_get_async_baud_val+0x58>
    48e2:	2120      	movs	r1, #32
    48e4:	1b0d      	subs	r5, r1, r4
    48e6:	4641      	mov	r1, r8
    48e8:	40e9      	lsrs	r1, r5
    48ea:	1c0d      	adds	r5, r1, #0
    48ec:	e7d3      	b.n	4896 <_sercom_get_async_baud_val+0x5e>
    48ee:	2400      	movs	r4, #0
    48f0:	2b01      	cmp	r3, #1
    48f2:	d007      	beq.n	4904 <_sercom_get_async_baud_val+0xcc>
    48f4:	9b04      	ldr	r3, [sp, #16]
    48f6:	2000      	movs	r0, #0
    48f8:	801c      	strh	r4, [r3, #0]
    48fa:	e7ac      	b.n	4856 <_sercom_get_async_baud_val+0x1e>
    48fc:	4663      	mov	r3, ip
    48fe:	425c      	negs	r4, r3
    4900:	0c24      	lsrs	r4, r4, #16
    4902:	e7f7      	b.n	48f4 <_sercom_get_async_baud_val+0xbc>
    4904:	0f4b      	lsrs	r3, r1, #29
    4906:	1c1c      	adds	r4, r3, #0
    4908:	00cb      	lsls	r3, r1, #3
    490a:	4698      	mov	r8, r3
    490c:	1c30      	adds	r0, r6, #0
    490e:	2300      	movs	r3, #0
    4910:	2100      	movs	r1, #0
    4912:	f001 fc37 	bl	6184 <__aeabi_lmul>
    4916:	2300      	movs	r3, #0
    4918:	469c      	mov	ip, r3
    491a:	3320      	adds	r3, #32
    491c:	469b      	mov	fp, r3
    491e:	4663      	mov	r3, ip
    4920:	46a1      	mov	r9, r4
    4922:	9000      	str	r0, [sp, #0]
    4924:	9101      	str	r1, [sp, #4]
    4926:	9303      	str	r3, [sp, #12]
    4928:	466b      	mov	r3, sp
    492a:	7b1b      	ldrb	r3, [r3, #12]
    492c:	2000      	movs	r0, #0
    492e:	9305      	str	r3, [sp, #20]
    4930:	2300      	movs	r3, #0
    4932:	2100      	movs	r1, #0
    4934:	469c      	mov	ip, r3
    4936:	223f      	movs	r2, #63	; 0x3f
    4938:	e027      	b.n	498a <_sercom_get_async_baud_val+0x152>
    493a:	2401      	movs	r4, #1
    493c:	409c      	lsls	r4, r3
    493e:	1c23      	adds	r3, r4, #0
    4940:	2701      	movs	r7, #1
    4942:	4646      	mov	r6, r8
    4944:	4097      	lsls	r7, r2
    4946:	403e      	ands	r6, r7
    4948:	1c04      	adds	r4, r0, #0
    494a:	1c0d      	adds	r5, r1, #0
    494c:	46b2      	mov	sl, r6
    494e:	464e      	mov	r6, r9
    4950:	1824      	adds	r4, r4, r0
    4952:	414d      	adcs	r5, r1
    4954:	4033      	ands	r3, r6
    4956:	4656      	mov	r6, sl
    4958:	1c20      	adds	r0, r4, #0
    495a:	1c29      	adds	r1, r5, #0
    495c:	4333      	orrs	r3, r6
    495e:	d004      	beq.n	496a <_sercom_get_async_baud_val+0x132>
    4960:	2101      	movs	r1, #1
    4962:	1c23      	adds	r3, r4, #0
    4964:	430b      	orrs	r3, r1
    4966:	1c18      	adds	r0, r3, #0
    4968:	1c29      	adds	r1, r5, #0
    496a:	9b01      	ldr	r3, [sp, #4]
    496c:	428b      	cmp	r3, r1
    496e:	d80a      	bhi.n	4986 <_sercom_get_async_baud_val+0x14e>
    4970:	d102      	bne.n	4978 <_sercom_get_async_baud_val+0x140>
    4972:	9b00      	ldr	r3, [sp, #0]
    4974:	4283      	cmp	r3, r0
    4976:	d806      	bhi.n	4986 <_sercom_get_async_baud_val+0x14e>
    4978:	9b00      	ldr	r3, [sp, #0]
    497a:	9c01      	ldr	r4, [sp, #4]
    497c:	1ac0      	subs	r0, r0, r3
    497e:	41a1      	sbcs	r1, r4
    4980:	4663      	mov	r3, ip
    4982:	433b      	orrs	r3, r7
    4984:	469c      	mov	ip, r3
    4986:	3a01      	subs	r2, #1
    4988:	d309      	bcc.n	499e <_sercom_get_async_baud_val+0x166>
    498a:	2320      	movs	r3, #32
    498c:	425b      	negs	r3, r3
    498e:	18d3      	adds	r3, r2, r3
    4990:	d5d3      	bpl.n	493a <_sercom_get_async_baud_val+0x102>
    4992:	465b      	mov	r3, fp
    4994:	2401      	movs	r4, #1
    4996:	1a9b      	subs	r3, r3, r2
    4998:	40dc      	lsrs	r4, r3
    499a:	1c23      	adds	r3, r4, #0
    499c:	e7d0      	b.n	4940 <_sercom_get_async_baud_val+0x108>
    499e:	4661      	mov	r1, ip
    49a0:	9a03      	ldr	r2, [sp, #12]
    49a2:	1a8b      	subs	r3, r1, r2
    49a4:	4907      	ldr	r1, [pc, #28]	; (49c4 <_sercom_get_async_baud_val+0x18c>)
    49a6:	08db      	lsrs	r3, r3, #3
    49a8:	428b      	cmp	r3, r1
    49aa:	d906      	bls.n	49ba <_sercom_get_async_baud_val+0x182>
    49ac:	1c13      	adds	r3, r2, #0
    49ae:	3301      	adds	r3, #1
    49b0:	9303      	str	r3, [sp, #12]
    49b2:	2b08      	cmp	r3, #8
    49b4:	d1b8      	bne.n	4928 <_sercom_get_async_baud_val+0xf0>
    49b6:	2040      	movs	r0, #64	; 0x40
    49b8:	e74d      	b.n	4856 <_sercom_get_async_baud_val+0x1e>
    49ba:	9a05      	ldr	r2, [sp, #20]
    49bc:	0354      	lsls	r4, r2, #13
    49be:	431c      	orrs	r4, r3
    49c0:	b2a4      	uxth	r4, r4
    49c2:	e797      	b.n	48f4 <_sercom_get_async_baud_val+0xbc>
    49c4:	00001fff 	.word	0x00001fff

000049c8 <sercom_set_gclk_generator>:
    49c8:	b530      	push	{r4, r5, lr}
    49ca:	4c0e      	ldr	r4, [pc, #56]	; (4a04 <sercom_set_gclk_generator+0x3c>)
    49cc:	b083      	sub	sp, #12
    49ce:	7823      	ldrb	r3, [r4, #0]
    49d0:	1c05      	adds	r5, r0, #0
    49d2:	2b00      	cmp	r3, #0
    49d4:	d006      	beq.n	49e4 <sercom_set_gclk_generator+0x1c>
    49d6:	2900      	cmp	r1, #0
    49d8:	d104      	bne.n	49e4 <sercom_set_gclk_generator+0x1c>
    49da:	7863      	ldrb	r3, [r4, #1]
    49dc:	4283      	cmp	r3, r0
    49de:	d00f      	beq.n	4a00 <sercom_set_gclk_generator+0x38>
    49e0:	201d      	movs	r0, #29
    49e2:	e00b      	b.n	49fc <sercom_set_gclk_generator+0x34>
    49e4:	a901      	add	r1, sp, #4
    49e6:	2013      	movs	r0, #19
    49e8:	700d      	strb	r5, [r1, #0]
    49ea:	f7ff f93d 	bl	3c68 <system_gclk_chan_set_config>
    49ee:	2013      	movs	r0, #19
    49f0:	f7ff f8fc 	bl	3bec <system_gclk_chan_enable>
    49f4:	2301      	movs	r3, #1
    49f6:	2000      	movs	r0, #0
    49f8:	7065      	strb	r5, [r4, #1]
    49fa:	7023      	strb	r3, [r4, #0]
    49fc:	b003      	add	sp, #12
    49fe:	bd30      	pop	{r4, r5, pc}
    4a00:	2000      	movs	r0, #0
    4a02:	e7fb      	b.n	49fc <sercom_set_gclk_generator+0x34>
    4a04:	2000453c 	.word	0x2000453c

00004a08 <_sercom_get_sercom_inst_index>:
    4a08:	b570      	push	{r4, r5, r6, lr}
    4a0a:	b086      	sub	sp, #24
    4a0c:	4669      	mov	r1, sp
    4a0e:	4b09      	ldr	r3, [pc, #36]	; (4a34 <_sercom_get_sercom_inst_index+0x2c>)
    4a10:	466a      	mov	r2, sp
    4a12:	cb70      	ldmia	r3!, {r4, r5, r6}
    4a14:	c170      	stmia	r1!, {r4, r5, r6}
    4a16:	cb70      	ldmia	r3!, {r4, r5, r6}
    4a18:	c170      	stmia	r1!, {r4, r5, r6}
    4a1a:	2300      	movs	r3, #0
    4a1c:	0099      	lsls	r1, r3, #2
    4a1e:	5851      	ldr	r1, [r2, r1]
    4a20:	4281      	cmp	r1, r0
    4a22:	d005      	beq.n	4a30 <_sercom_get_sercom_inst_index+0x28>
    4a24:	3301      	adds	r3, #1
    4a26:	2b06      	cmp	r3, #6
    4a28:	d1f8      	bne.n	4a1c <_sercom_get_sercom_inst_index+0x14>
    4a2a:	2000      	movs	r0, #0
    4a2c:	b006      	add	sp, #24
    4a2e:	bd70      	pop	{r4, r5, r6, pc}
    4a30:	b2d8      	uxtb	r0, r3
    4a32:	e7fb      	b.n	4a2c <_sercom_get_sercom_inst_index+0x24>
    4a34:	0000dfbc 	.word	0x0000dfbc

00004a38 <system_clock_source_get_hz>:
    4a38:	b510      	push	{r4, lr}
    4a3a:	2808      	cmp	r0, #8
    4a3c:	d82c      	bhi.n	4a98 <system_clock_source_get_hz+0x60>
    4a3e:	4b1b      	ldr	r3, [pc, #108]	; (4aac <system_clock_source_get_hz+0x74>)
    4a40:	0080      	lsls	r0, r0, #2
    4a42:	581b      	ldr	r3, [r3, r0]
    4a44:	469f      	mov	pc, r3
    4a46:	2080      	movs	r0, #128	; 0x80
    4a48:	0200      	lsls	r0, r0, #8
    4a4a:	bd10      	pop	{r4, pc}
    4a4c:	4b18      	ldr	r3, [pc, #96]	; (4ab0 <system_clock_source_get_hz+0x78>)
    4a4e:	6958      	ldr	r0, [r3, #20]
    4a50:	e7fb      	b.n	4a4a <system_clock_source_get_hz+0x12>
    4a52:	4b18      	ldr	r3, [pc, #96]	; (4ab4 <system_clock_source_get_hz+0x7c>)
    4a54:	6a18      	ldr	r0, [r3, #32]
    4a56:	4b18      	ldr	r3, [pc, #96]	; (4ab8 <system_clock_source_get_hz+0x80>)
    4a58:	0580      	lsls	r0, r0, #22
    4a5a:	0f80      	lsrs	r0, r0, #30
    4a5c:	40c3      	lsrs	r3, r0
    4a5e:	1c18      	adds	r0, r3, #0
    4a60:	e7f3      	b.n	4a4a <system_clock_source_get_hz+0x12>
    4a62:	2002      	movs	r0, #2
    4a64:	4c12      	ldr	r4, [pc, #72]	; (4ab0 <system_clock_source_get_hz+0x78>)
    4a66:	6823      	ldr	r3, [r4, #0]
    4a68:	4018      	ands	r0, r3
    4a6a:	d0ee      	beq.n	4a4a <system_clock_source_get_hz+0x12>
    4a6c:	2210      	movs	r2, #16
    4a6e:	4911      	ldr	r1, [pc, #68]	; (4ab4 <system_clock_source_get_hz+0x7c>)
    4a70:	68cb      	ldr	r3, [r1, #12]
    4a72:	421a      	tst	r2, r3
    4a74:	d0fc      	beq.n	4a70 <system_clock_source_get_hz+0x38>
    4a76:	6823      	ldr	r3, [r4, #0]
    4a78:	075b      	lsls	r3, r3, #29
    4a7a:	d40f      	bmi.n	4a9c <system_clock_source_get_hz+0x64>
    4a7c:	480f      	ldr	r0, [pc, #60]	; (4abc <system_clock_source_get_hz+0x84>)
    4a7e:	e7e4      	b.n	4a4a <system_clock_source_get_hz+0x12>
    4a80:	4b0b      	ldr	r3, [pc, #44]	; (4ab0 <system_clock_source_get_hz+0x78>)
    4a82:	6918      	ldr	r0, [r3, #16]
    4a84:	e7e1      	b.n	4a4a <system_clock_source_get_hz+0x12>
    4a86:	2350      	movs	r3, #80	; 0x50
    4a88:	4a0a      	ldr	r2, [pc, #40]	; (4ab4 <system_clock_source_get_hz+0x7c>)
    4a8a:	2000      	movs	r0, #0
    4a8c:	5cd3      	ldrb	r3, [r2, r3]
    4a8e:	075b      	lsls	r3, r3, #29
    4a90:	d5db      	bpl.n	4a4a <system_clock_source_get_hz+0x12>
    4a92:	4b07      	ldr	r3, [pc, #28]	; (4ab0 <system_clock_source_get_hz+0x78>)
    4a94:	68d8      	ldr	r0, [r3, #12]
    4a96:	e7d8      	b.n	4a4a <system_clock_source_get_hz+0x12>
    4a98:	2000      	movs	r0, #0
    4a9a:	e7d6      	b.n	4a4a <system_clock_source_get_hz+0x12>
    4a9c:	2000      	movs	r0, #0
    4a9e:	f7ff f8ef 	bl	3c80 <system_gclk_chan_get_hz>
    4aa2:	68a3      	ldr	r3, [r4, #8]
    4aa4:	041b      	lsls	r3, r3, #16
    4aa6:	0c1b      	lsrs	r3, r3, #16
    4aa8:	4358      	muls	r0, r3
    4aaa:	e7ce      	b.n	4a4a <system_clock_source_get_hz+0x12>
    4aac:	0000dfd4 	.word	0x0000dfd4
    4ab0:	20004540 	.word	0x20004540
    4ab4:	40000800 	.word	0x40000800
    4ab8:	007a1200 	.word	0x007a1200
    4abc:	02dc6c00 	.word	0x02dc6c00

00004ac0 <system_clock_source_enable>:
    4ac0:	b510      	push	{r4, lr}
    4ac2:	2808      	cmp	r0, #8
    4ac4:	d841      	bhi.n	4b4a <system_clock_source_enable+0x8a>
    4ac6:	4b22      	ldr	r3, [pc, #136]	; (4b50 <system_clock_source_enable+0x90>)
    4ac8:	0080      	lsls	r0, r0, #2
    4aca:	581b      	ldr	r3, [r3, r0]
    4acc:	469f      	mov	pc, r3
    4ace:	2000      	movs	r0, #0
    4ad0:	bd10      	pop	{r4, pc}
    4ad2:	2302      	movs	r3, #2
    4ad4:	4a1f      	ldr	r2, [pc, #124]	; (4b54 <system_clock_source_enable+0x94>)
    4ad6:	2000      	movs	r0, #0
    4ad8:	6991      	ldr	r1, [r2, #24]
    4ada:	430b      	orrs	r3, r1
    4adc:	6193      	str	r3, [r2, #24]
    4ade:	e7f7      	b.n	4ad0 <system_clock_source_enable+0x10>
    4ae0:	2302      	movs	r3, #2
    4ae2:	4a1c      	ldr	r2, [pc, #112]	; (4b54 <system_clock_source_enable+0x94>)
    4ae4:	2000      	movs	r0, #0
    4ae6:	8a91      	ldrh	r1, [r2, #20]
    4ae8:	430b      	orrs	r3, r1
    4aea:	8293      	strh	r3, [r2, #20]
    4aec:	e7f0      	b.n	4ad0 <system_clock_source_enable+0x10>
    4aee:	2302      	movs	r3, #2
    4af0:	4a18      	ldr	r2, [pc, #96]	; (4b54 <system_clock_source_enable+0x94>)
    4af2:	2000      	movs	r0, #0
    4af4:	6a11      	ldr	r1, [r2, #32]
    4af6:	430b      	orrs	r3, r1
    4af8:	6213      	str	r3, [r2, #32]
    4afa:	e7e9      	b.n	4ad0 <system_clock_source_enable+0x10>
    4afc:	2302      	movs	r3, #2
    4afe:	2010      	movs	r0, #16
    4b00:	4c15      	ldr	r4, [pc, #84]	; (4b58 <system_clock_source_enable+0x98>)
    4b02:	6822      	ldr	r2, [r4, #0]
    4b04:	4313      	orrs	r3, r2
    4b06:	6023      	str	r3, [r4, #0]
    4b08:	6822      	ldr	r2, [r4, #0]
    4b0a:	4b14      	ldr	r3, [pc, #80]	; (4b5c <system_clock_source_enable+0x9c>)
    4b0c:	4013      	ands	r3, r2
    4b0e:	4a11      	ldr	r2, [pc, #68]	; (4b54 <system_clock_source_enable+0x94>)
    4b10:	8493      	strh	r3, [r2, #36]	; 0x24
    4b12:	68d3      	ldr	r3, [r2, #12]
    4b14:	490f      	ldr	r1, [pc, #60]	; (4b54 <system_clock_source_enable+0x94>)
    4b16:	4218      	tst	r0, r3
    4b18:	d0fb      	beq.n	4b12 <system_clock_source_enable+0x52>
    4b1a:	68a3      	ldr	r3, [r4, #8]
    4b1c:	2000      	movs	r0, #0
    4b1e:	62cb      	str	r3, [r1, #44]	; 0x2c
    4b20:	6863      	ldr	r3, [r4, #4]
    4b22:	628b      	str	r3, [r1, #40]	; 0x28
    4b24:	6823      	ldr	r3, [r4, #0]
    4b26:	b29b      	uxth	r3, r3
    4b28:	848b      	strh	r3, [r1, #36]	; 0x24
    4b2a:	e7d1      	b.n	4ad0 <system_clock_source_enable+0x10>
    4b2c:	2244      	movs	r2, #68	; 0x44
    4b2e:	2302      	movs	r3, #2
    4b30:	4908      	ldr	r1, [pc, #32]	; (4b54 <system_clock_source_enable+0x94>)
    4b32:	5c88      	ldrb	r0, [r1, r2]
    4b34:	4303      	orrs	r3, r0
    4b36:	548b      	strb	r3, [r1, r2]
    4b38:	2000      	movs	r0, #0
    4b3a:	e7c9      	b.n	4ad0 <system_clock_source_enable+0x10>
    4b3c:	2302      	movs	r3, #2
    4b3e:	4a05      	ldr	r2, [pc, #20]	; (4b54 <system_clock_source_enable+0x94>)
    4b40:	2000      	movs	r0, #0
    4b42:	8a11      	ldrh	r1, [r2, #16]
    4b44:	430b      	orrs	r3, r1
    4b46:	8213      	strh	r3, [r2, #16]
    4b48:	e7c2      	b.n	4ad0 <system_clock_source_enable+0x10>
    4b4a:	2017      	movs	r0, #23
    4b4c:	e7c0      	b.n	4ad0 <system_clock_source_enable+0x10>
    4b4e:	46c0      	nop			; (mov r8, r8)
    4b50:	0000dff8 	.word	0x0000dff8
    4b54:	40000800 	.word	0x40000800
    4b58:	20004540 	.word	0x20004540
    4b5c:	0000ff7f 	.word	0x0000ff7f

00004b60 <system_clock_init>:
    4b60:	b5f0      	push	{r4, r5, r6, r7, lr}
    4b62:	4647      	mov	r7, r8
    4b64:	22c2      	movs	r2, #194	; 0xc2
    4b66:	211e      	movs	r1, #30
    4b68:	b480      	push	{r7}
    4b6a:	4b31      	ldr	r3, [pc, #196]	; (4c30 <system_clock_init+0xd0>)
    4b6c:	00d2      	lsls	r2, r2, #3
    4b6e:	609a      	str	r2, [r3, #8]
    4b70:	4a30      	ldr	r2, [pc, #192]	; (4c34 <system_clock_init+0xd4>)
    4b72:	2400      	movs	r4, #0
    4b74:	6853      	ldr	r3, [r2, #4]
    4b76:	b084      	sub	sp, #16
    4b78:	438b      	bics	r3, r1
    4b7a:	6053      	str	r3, [r2, #4]
    4b7c:	2301      	movs	r3, #1
    4b7e:	ad01      	add	r5, sp, #4
    4b80:	702b      	strb	r3, [r5, #0]
    4b82:	b2e0      	uxtb	r0, r4
    4b84:	1c29      	adds	r1, r5, #0
    4b86:	3401      	adds	r4, #1
    4b88:	f7ff f86e 	bl	3c68 <system_gclk_chan_set_config>
    4b8c:	2c25      	cmp	r4, #37	; 0x25
    4b8e:	d1f8      	bne.n	4b82 <system_clock_init+0x22>
    4b90:	4b29      	ldr	r3, [pc, #164]	; (4c38 <system_clock_init+0xd8>)
    4b92:	4c27      	ldr	r4, [pc, #156]	; (4c30 <system_clock_init+0xd0>)
    4b94:	681b      	ldr	r3, [r3, #0]
    4b96:	69a1      	ldr	r1, [r4, #24]
    4b98:	04db      	lsls	r3, r3, #19
    4b9a:	0e5b      	lsrs	r3, r3, #25
    4b9c:	041a      	lsls	r2, r3, #16
    4b9e:	4b27      	ldr	r3, [pc, #156]	; (4c3c <system_clock_init+0xdc>)
    4ba0:	2604      	movs	r6, #4
    4ba2:	400b      	ands	r3, r1
    4ba4:	4313      	orrs	r3, r2
    4ba6:	2208      	movs	r2, #8
    4ba8:	2740      	movs	r7, #64	; 0x40
    4baa:	61a3      	str	r3, [r4, #24]
    4bac:	69a3      	ldr	r3, [r4, #24]
    4bae:	2004      	movs	r0, #4
    4bb0:	4333      	orrs	r3, r6
    4bb2:	4313      	orrs	r3, r2
    4bb4:	43bb      	bics	r3, r7
    4bb6:	3278      	adds	r2, #120	; 0x78
    4bb8:	4690      	mov	r8, r2
    4bba:	4313      	orrs	r3, r2
    4bbc:	22e0      	movs	r2, #224	; 0xe0
    4bbe:	00d2      	lsls	r2, r2, #3
    4bc0:	4313      	orrs	r3, r2
    4bc2:	4a1f      	ldr	r2, [pc, #124]	; (4c40 <system_clock_init+0xe0>)
    4bc4:	4013      	ands	r3, r2
    4bc6:	61a3      	str	r3, [r4, #24]
    4bc8:	f7ff ff7a 	bl	4ac0 <system_clock_source_enable>
    4bcc:	4642      	mov	r2, r8
    4bce:	6a23      	ldr	r3, [r4, #32]
    4bd0:	2006      	movs	r0, #6
    4bd2:	43bb      	bics	r3, r7
    4bd4:	4313      	orrs	r3, r2
    4bd6:	4a1b      	ldr	r2, [pc, #108]	; (4c44 <system_clock_init+0xe4>)
    4bd8:	4013      	ands	r3, r2
    4bda:	6223      	str	r3, [r4, #32]
    4bdc:	f7ff ff70 	bl	4ac0 <system_clock_source_enable>
    4be0:	2400      	movs	r4, #0
    4be2:	f7fe ff4d 	bl	3a80 <system_gclk_init>
    4be6:	2320      	movs	r3, #32
    4be8:	1c29      	adds	r1, r5, #0
    4bea:	2002      	movs	r0, #2
    4bec:	606b      	str	r3, [r5, #4]
    4bee:	706c      	strb	r4, [r5, #1]
    4bf0:	722c      	strb	r4, [r5, #8]
    4bf2:	726c      	strb	r4, [r5, #9]
    4bf4:	702e      	strb	r6, [r5, #0]
    4bf6:	f7fe ff55 	bl	3aa4 <system_gclk_gen_set_config>
    4bfa:	2002      	movs	r0, #2
    4bfc:	f7fe ff9c 	bl	3b38 <system_gclk_gen_enable>
    4c00:	4b11      	ldr	r3, [pc, #68]	; (4c48 <system_clock_init+0xe8>)
    4c02:	1c29      	adds	r1, r5, #0
    4c04:	721c      	strb	r4, [r3, #8]
    4c06:	725c      	strb	r4, [r3, #9]
    4c08:	729c      	strb	r4, [r3, #10]
    4c0a:	72dc      	strb	r4, [r3, #11]
    4c0c:	2301      	movs	r3, #1
    4c0e:	2000      	movs	r0, #0
    4c10:	606b      	str	r3, [r5, #4]
    4c12:	3305      	adds	r3, #5
    4c14:	702b      	strb	r3, [r5, #0]
    4c16:	706c      	strb	r4, [r5, #1]
    4c18:	722c      	strb	r4, [r5, #8]
    4c1a:	726c      	strb	r4, [r5, #9]
    4c1c:	f7fe ff42 	bl	3aa4 <system_gclk_gen_set_config>
    4c20:	2000      	movs	r0, #0
    4c22:	f7fe ff89 	bl	3b38 <system_gclk_gen_enable>
    4c26:	b004      	add	sp, #16
    4c28:	bc04      	pop	{r2}
    4c2a:	4690      	mov	r8, r2
    4c2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4c2e:	46c0      	nop			; (mov r8, r8)
    4c30:	40000800 	.word	0x40000800
    4c34:	41004000 	.word	0x41004000
    4c38:	00806024 	.word	0x00806024
    4c3c:	ff80ffff 	.word	0xff80ffff
    4c40:	ffffefff 	.word	0xffffefff
    4c44:	fffffcff 	.word	0xfffffcff
    4c48:	40000400 	.word	0x40000400

00004c4c <gpio_init>:
    4c4c:	b570      	push	{r4, r5, r6, lr}
    4c4e:	1c05      	adds	r5, r0, #0
    4c50:	b082      	sub	sp, #8
    4c52:	1c0c      	adds	r4, r1, #0
    4c54:	1c4b      	adds	r3, r1, #1
    4c56:	d028      	beq.n	4caa <gpio_init+0x5e>
    4c58:	b2c8      	uxtb	r0, r1
    4c5a:	2900      	cmp	r1, #0
    4c5c:	db2c      	blt.n	4cb8 <gpio_init+0x6c>
    4c5e:	4b18      	ldr	r3, [pc, #96]	; (4cc0 <gpio_init+0x74>)
    4c60:	0946      	lsrs	r6, r0, #5
    4c62:	469c      	mov	ip, r3
    4c64:	01f6      	lsls	r6, r6, #7
    4c66:	4466      	add	r6, ip
    4c68:	702c      	strb	r4, [r5, #0]
    4c6a:	17e2      	asrs	r2, r4, #31
    4c6c:	0ed2      	lsrs	r2, r2, #27
    4c6e:	18a3      	adds	r3, r4, r2
    4c70:	241f      	movs	r4, #31
    4c72:	401c      	ands	r4, r3
    4c74:	1aa4      	subs	r4, r4, r2
    4c76:	2201      	movs	r2, #1
    4c78:	1c13      	adds	r3, r2, #0
    4c7a:	b264      	sxtb	r4, r4
    4c7c:	40a3      	lsls	r3, r4
    4c7e:	606b      	str	r3, [r5, #4]
    4c80:	2300      	movs	r3, #0
    4c82:	a901      	add	r1, sp, #4
    4c84:	722b      	strb	r3, [r5, #8]
    4c86:	72ab      	strb	r3, [r5, #10]
    4c88:	726a      	strb	r2, [r5, #9]
    4c8a:	700b      	strb	r3, [r1, #0]
    4c8c:	708b      	strb	r3, [r1, #2]
    4c8e:	704a      	strb	r2, [r1, #1]
    4c90:	f000 fe6a 	bl	5968 <port_pin_set_config>
    4c94:	1c33      	adds	r3, r6, #0
    4c96:	3314      	adds	r3, #20
    4c98:	60eb      	str	r3, [r5, #12]
    4c9a:	3304      	adds	r3, #4
    4c9c:	612b      	str	r3, [r5, #16]
    4c9e:	3610      	adds	r6, #16
    4ca0:	3308      	adds	r3, #8
    4ca2:	616b      	str	r3, [r5, #20]
    4ca4:	61ae      	str	r6, [r5, #24]
    4ca6:	b002      	add	sp, #8
    4ca8:	bd70      	pop	{r4, r5, r6, pc}
    4caa:	4806      	ldr	r0, [pc, #24]	; (4cc4 <gpio_init+0x78>)
    4cac:	4906      	ldr	r1, [pc, #24]	; (4cc8 <gpio_init+0x7c>)
    4cae:	221f      	movs	r2, #31
    4cb0:	f7ff fd2a 	bl	4708 <mbed_assert_internal>
    4cb4:	702c      	strb	r4, [r5, #0]
    4cb6:	e7f6      	b.n	4ca6 <gpio_init+0x5a>
    4cb8:	702c      	strb	r4, [r5, #0]
    4cba:	2600      	movs	r6, #0
    4cbc:	e7d5      	b.n	4c6a <gpio_init+0x1e>
    4cbe:	46c0      	nop			; (mov r8, r8)
    4cc0:	41004400 	.word	0x41004400
    4cc4:	0000e01c 	.word	0x0000e01c
    4cc8:	0000e030 	.word	0x0000e030

00004ccc <gpio_mode>:
    4ccc:	b530      	push	{r4, r5, lr}
    4cce:	1c04      	adds	r4, r0, #0
    4cd0:	7800      	ldrb	r0, [r0, #0]
    4cd2:	b083      	sub	sp, #12
    4cd4:	b243      	sxtb	r3, r0
    4cd6:	1c0d      	adds	r5, r1, #0
    4cd8:	3301      	adds	r3, #1
    4cda:	d013      	beq.n	4d04 <gpio_mode+0x38>
    4cdc:	7aa3      	ldrb	r3, [r4, #10]
    4cde:	a901      	add	r1, sp, #4
    4ce0:	700b      	strb	r3, [r1, #0]
    4ce2:	7a23      	ldrb	r3, [r4, #8]
    4ce4:	7265      	strb	r5, [r4, #9]
    4ce6:	1e5a      	subs	r2, r3, #1
    4ce8:	4193      	sbcs	r3, r2
    4cea:	708b      	strb	r3, [r1, #2]
    4cec:	2d01      	cmp	r5, #1
    4cee:	d003      	beq.n	4cf8 <gpio_mode+0x2c>
    4cf0:	2d00      	cmp	r5, #0
    4cf2:	d001      	beq.n	4cf8 <gpio_mode+0x2c>
    4cf4:	2d02      	cmp	r5, #2
    4cf6:	d100      	bne.n	4cfa <gpio_mode+0x2e>
    4cf8:	704d      	strb	r5, [r1, #1]
    4cfa:	b2c0      	uxtb	r0, r0
    4cfc:	f000 fe34 	bl	5968 <port_pin_set_config>
    4d00:	b003      	add	sp, #12
    4d02:	bd30      	pop	{r4, r5, pc}
    4d04:	4803      	ldr	r0, [pc, #12]	; (4d14 <gpio_mode+0x48>)
    4d06:	4904      	ldr	r1, [pc, #16]	; (4d18 <gpio_mode+0x4c>)
    4d08:	2236      	movs	r2, #54	; 0x36
    4d0a:	f7ff fcfd 	bl	4708 <mbed_assert_internal>
    4d0e:	7820      	ldrb	r0, [r4, #0]
    4d10:	e7e4      	b.n	4cdc <gpio_mode+0x10>
    4d12:	46c0      	nop			; (mov r8, r8)
    4d14:	0000d34c 	.word	0x0000d34c
    4d18:	0000e030 	.word	0x0000e030

00004d1c <gpio_dir>:
    4d1c:	b530      	push	{r4, r5, lr}
    4d1e:	1c04      	adds	r4, r0, #0
    4d20:	7800      	ldrb	r0, [r0, #0]
    4d22:	b083      	sub	sp, #12
    4d24:	b243      	sxtb	r3, r0
    4d26:	1c0d      	adds	r5, r1, #0
    4d28:	3301      	adds	r3, #1
    4d2a:	d013      	beq.n	4d54 <gpio_dir+0x38>
    4d2c:	7a63      	ldrb	r3, [r4, #9]
    4d2e:	a901      	add	r1, sp, #4
    4d30:	704b      	strb	r3, [r1, #1]
    4d32:	7a23      	ldrb	r3, [r4, #8]
    4d34:	72a5      	strb	r5, [r4, #10]
    4d36:	1e5a      	subs	r2, r3, #1
    4d38:	4193      	sbcs	r3, r2
    4d3a:	708b      	strb	r3, [r1, #2]
    4d3c:	2d01      	cmp	r5, #1
    4d3e:	d003      	beq.n	4d48 <gpio_dir+0x2c>
    4d40:	2d00      	cmp	r5, #0
    4d42:	d001      	beq.n	4d48 <gpio_dir+0x2c>
    4d44:	2d02      	cmp	r5, #2
    4d46:	d100      	bne.n	4d4a <gpio_dir+0x2e>
    4d48:	700d      	strb	r5, [r1, #0]
    4d4a:	b2c0      	uxtb	r0, r0
    4d4c:	f000 fe0c 	bl	5968 <port_pin_set_config>
    4d50:	b003      	add	sp, #12
    4d52:	bd30      	pop	{r4, r5, pc}
    4d54:	4803      	ldr	r0, [pc, #12]	; (4d64 <gpio_dir+0x48>)
    4d56:	4904      	ldr	r1, [pc, #16]	; (4d68 <gpio_dir+0x4c>)
    4d58:	224c      	movs	r2, #76	; 0x4c
    4d5a:	f7ff fcd5 	bl	4708 <mbed_assert_internal>
    4d5e:	7820      	ldrb	r0, [r4, #0]
    4d60:	e7e4      	b.n	4d2c <gpio_dir+0x10>
    4d62:	46c0      	nop			; (mov r8, r8)
    4d64:	0000d34c 	.word	0x0000d34c
    4d68:	0000e030 	.word	0x0000e030

00004d6c <pin_mode>:
    4d6c:	b5f0      	push	{r4, r5, r6, r7, lr}
    4d6e:	4645      	mov	r5, r8
    4d70:	4657      	mov	r7, sl
    4d72:	464e      	mov	r6, r9
    4d74:	b4e0      	push	{r5, r6, r7}
    4d76:	4688      	mov	r8, r1
    4d78:	b082      	sub	sp, #8
    4d7a:	1c05      	adds	r5, r0, #0
    4d7c:	1c43      	adds	r3, r0, #1
    4d7e:	d062      	beq.n	4e46 <pin_mode+0xda>
    4d80:	17c4      	asrs	r4, r0, #31
    4d82:	0ee2      	lsrs	r2, r4, #27
    4d84:	241f      	movs	r4, #31
    4d86:	2701      	movs	r7, #1
    4d88:	1883      	adds	r3, r0, r2
    4d8a:	401c      	ands	r4, r3
    4d8c:	1aa4      	subs	r4, r4, r2
    4d8e:	b264      	sxtb	r4, r4
    4d90:	40a7      	lsls	r7, r4
    4d92:	b2c6      	uxtb	r6, r0
    4d94:	46ba      	mov	sl, r7
    4d96:	0975      	lsrs	r5, r6, #5
    4d98:	09f3      	lsrs	r3, r6, #7
    4d9a:	d13e      	bne.n	4e1a <pin_mode+0xae>
    4d9c:	4b37      	ldr	r3, [pc, #220]	; (4e7c <pin_mode+0x110>)
    4d9e:	01ed      	lsls	r5, r5, #7
    4da0:	469c      	mov	ip, r3
    4da2:	4465      	add	r5, ip
    4da4:	2d00      	cmp	r5, #0
    4da6:	d062      	beq.n	4e6e <pin_mode+0x102>
    4da8:	1c28      	adds	r0, r5, #0
    4daa:	231f      	movs	r3, #31
    4dac:	4033      	ands	r3, r6
    4dae:	18c2      	adds	r2, r0, r3
    4db0:	3240      	adds	r2, #64	; 0x40
    4db2:	7812      	ldrb	r2, [r2, #0]
    4db4:	2101      	movs	r1, #1
    4db6:	4694      	mov	ip, r2
    4db8:	4667      	mov	r7, ip
    4dba:	2280      	movs	r2, #128	; 0x80
    4dbc:	4239      	tst	r1, r7
    4dbe:	d136      	bne.n	4e2e <pin_mode+0xc2>
    4dc0:	a901      	add	r1, sp, #4
    4dc2:	700a      	strb	r2, [r1, #0]
    4dc4:	2202      	movs	r2, #2
    4dc6:	192c      	adds	r4, r5, r4
    4dc8:	3440      	adds	r4, #64	; 0x40
    4dca:	7823      	ldrb	r3, [r4, #0]
    4dcc:	421a      	tst	r2, r3
    4dce:	d010      	beq.n	4df2 <pin_mode+0x86>
    4dd0:	4650      	mov	r0, sl
    4dd2:	682b      	ldr	r3, [r5, #0]
    4dd4:	4003      	ands	r3, r0
    4dd6:	d134      	bne.n	4e42 <pin_mode+0xd6>
    4dd8:	704b      	strb	r3, [r1, #1]
    4dda:	7823      	ldrb	r3, [r4, #0]
    4ddc:	075b      	lsls	r3, r3, #29
    4dde:	d50a      	bpl.n	4df6 <pin_mode+0x8a>
    4de0:	692b      	ldr	r3, [r5, #16]
    4de2:	4642      	mov	r2, r8
    4de4:	2300      	movs	r3, #0
    4de6:	70cb      	strb	r3, [r1, #3]
    4de8:	2a01      	cmp	r2, #1
    4dea:	d109      	bne.n	4e00 <pin_mode+0x94>
    4dec:	4643      	mov	r3, r8
    4dee:	708b      	strb	r3, [r1, #2]
    4df0:	e00a      	b.n	4e08 <pin_mode+0x9c>
    4df2:	2301      	movs	r3, #1
    4df4:	704b      	strb	r3, [r1, #1]
    4df6:	2300      	movs	r3, #0
    4df8:	4642      	mov	r2, r8
    4dfa:	70cb      	strb	r3, [r1, #3]
    4dfc:	2a01      	cmp	r2, #1
    4dfe:	d0f5      	beq.n	4dec <pin_mode+0x80>
    4e00:	4642      	mov	r2, r8
    4e02:	2a02      	cmp	r2, #2
    4e04:	d0f2      	beq.n	4dec <pin_mode+0x80>
    4e06:	708b      	strb	r3, [r1, #2]
    4e08:	1c30      	adds	r0, r6, #0
    4e0a:	f7fe fe23 	bl	3a54 <system_pinmux_pin_set_config>
    4e0e:	b002      	add	sp, #8
    4e10:	bc1c      	pop	{r2, r3, r4}
    4e12:	4690      	mov	r8, r2
    4e14:	4699      	mov	r9, r3
    4e16:	46a2      	mov	sl, r4
    4e18:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4e1a:	4b19      	ldr	r3, [pc, #100]	; (4e80 <pin_mode+0x114>)
    4e1c:	4699      	mov	r9, r3
    4e1e:	4819      	ldr	r0, [pc, #100]	; (4e84 <pin_mode+0x118>)
    4e20:	4649      	mov	r1, r9
    4e22:	2223      	movs	r2, #35	; 0x23
    4e24:	f7ff fc70 	bl	4708 <mbed_assert_internal>
    4e28:	2500      	movs	r5, #0
    4e2a:	2000      	movs	r0, #0
    4e2c:	e7bd      	b.n	4daa <pin_mode+0x3e>
    4e2e:	085b      	lsrs	r3, r3, #1
    4e30:	18c3      	adds	r3, r0, r3
    4e32:	3330      	adds	r3, #48	; 0x30
    4e34:	781a      	ldrb	r2, [r3, #0]
    4e36:	b2d2      	uxtb	r2, r2
    4e38:	4231      	tst	r1, r6
    4e3a:	d116      	bne.n	4e6a <pin_mode+0xfe>
    4e3c:	230f      	movs	r3, #15
    4e3e:	401a      	ands	r2, r3
    4e40:	e7be      	b.n	4dc0 <pin_mode+0x54>
    4e42:	704a      	strb	r2, [r1, #1]
    4e44:	e7d7      	b.n	4df6 <pin_mode+0x8a>
    4e46:	4b0e      	ldr	r3, [pc, #56]	; (4e80 <pin_mode+0x114>)
    4e48:	4c0f      	ldr	r4, [pc, #60]	; (4e88 <pin_mode+0x11c>)
    4e4a:	4699      	mov	r9, r3
    4e4c:	1c19      	adds	r1, r3, #0
    4e4e:	1c20      	adds	r0, r4, #0
    4e50:	225c      	movs	r2, #92	; 0x5c
    4e52:	f7ff fc59 	bl	4708 <mbed_assert_internal>
    4e56:	1c20      	adds	r0, r4, #0
    4e58:	4649      	mov	r1, r9
    4e5a:	221e      	movs	r2, #30
    4e5c:	f7ff fc54 	bl	4708 <mbed_assert_internal>
    4e60:	2300      	movs	r3, #0
    4e62:	26ff      	movs	r6, #255	; 0xff
    4e64:	469a      	mov	sl, r3
    4e66:	1c2c      	adds	r4, r5, #0
    4e68:	e7d9      	b.n	4e1e <pin_mode+0xb2>
    4e6a:	0912      	lsrs	r2, r2, #4
    4e6c:	e7a8      	b.n	4dc0 <pin_mode+0x54>
    4e6e:	4805      	ldr	r0, [pc, #20]	; (4e84 <pin_mode+0x118>)
    4e70:	4903      	ldr	r1, [pc, #12]	; (4e80 <pin_mode+0x114>)
    4e72:	2223      	movs	r2, #35	; 0x23
    4e74:	f7ff fc48 	bl	4708 <mbed_assert_internal>
    4e78:	2000      	movs	r0, #0
    4e7a:	e796      	b.n	4daa <pin_mode+0x3e>
    4e7c:	41004400 	.word	0x41004400
    4e80:	0000e098 	.word	0x0000e098
    4e84:	0000e100 	.word	0x0000e100
    4e88:	0000e01c 	.word	0x0000e01c

00004e8c <pinmap_find_peripheral_from_pad.part.0>:
    4e8c:	b510      	push	{r4, lr}
    4e8e:	1c04      	adds	r4, r0, #0
    4e90:	2901      	cmp	r1, #1
    4e92:	d004      	beq.n	4e9e <pinmap_find_peripheral_from_pad.part.0+0x12>
    4e94:	1c20      	adds	r0, r4, #0
    4e96:	4905      	ldr	r1, [pc, #20]	; (4eac <pinmap_find_peripheral_from_pad.part.0+0x20>)
    4e98:	f7ff fc6a 	bl	4770 <pinmap_find_peripheral>
    4e9c:	bd10      	pop	{r4, pc}
    4e9e:	4904      	ldr	r1, [pc, #16]	; (4eb0 <pinmap_find_peripheral_from_pad.part.0+0x24>)
    4ea0:	f7ff fc66 	bl	4770 <pinmap_find_peripheral>
    4ea4:	1c43      	adds	r3, r0, #1
    4ea6:	d1f9      	bne.n	4e9c <pinmap_find_peripheral_from_pad.part.0+0x10>
    4ea8:	e7f4      	b.n	4e94 <pinmap_find_peripheral_from_pad.part.0+0x8>
    4eaa:	46c0      	nop			; (mov r8, r8)
    4eac:	0000de30 	.word	0x0000de30
    4eb0:	0000ddac 	.word	0x0000ddac

00004eb4 <pinmap_merge_sercom>:
    4eb4:	b538      	push	{r3, r4, r5, lr}
    4eb6:	1c0d      	adds	r5, r1, #0
    4eb8:	1c43      	adds	r3, r0, #1
    4eba:	d01b      	beq.n	4ef4 <pinmap_merge_sercom+0x40>
    4ebc:	2100      	movs	r1, #0
    4ebe:	f7ff ffe5 	bl	4e8c <pinmap_find_peripheral_from_pad.part.0>
    4ec2:	1c43      	adds	r3, r0, #1
    4ec4:	d016      	beq.n	4ef4 <pinmap_merge_sercom+0x40>
    4ec6:	240f      	movs	r4, #15
    4ec8:	4004      	ands	r4, r0
    4eca:	1c28      	adds	r0, r5, #0
    4ecc:	1c6b      	adds	r3, r5, #1
    4ece:	d008      	beq.n	4ee2 <pinmap_merge_sercom+0x2e>
    4ed0:	2100      	movs	r1, #0
    4ed2:	f7ff ffdb 	bl	4e8c <pinmap_find_peripheral_from_pad.part.0>
    4ed6:	1c43      	adds	r3, r0, #1
    4ed8:	d003      	beq.n	4ee2 <pinmap_merge_sercom+0x2e>
    4eda:	230f      	movs	r3, #15
    4edc:	4018      	ands	r0, r3
    4ede:	42a0      	cmp	r0, r4
    4ee0:	d006      	beq.n	4ef0 <pinmap_merge_sercom+0x3c>
    4ee2:	1c63      	adds	r3, r4, #1
    4ee4:	d003      	beq.n	4eee <pinmap_merge_sercom+0x3a>
    4ee6:	1c43      	adds	r3, r0, #1
    4ee8:	d002      	beq.n	4ef0 <pinmap_merge_sercom+0x3c>
    4eea:	2001      	movs	r0, #1
    4eec:	4240      	negs	r0, r0
    4eee:	bd38      	pop	{r3, r4, r5, pc}
    4ef0:	1c20      	adds	r0, r4, #0
    4ef2:	e7fc      	b.n	4eee <pinmap_merge_sercom+0x3a>
    4ef4:	1c28      	adds	r0, r5, #0
    4ef6:	1c6b      	adds	r3, r5, #1
    4ef8:	d0f9      	beq.n	4eee <pinmap_merge_sercom+0x3a>
    4efa:	2100      	movs	r1, #0
    4efc:	2401      	movs	r4, #1
    4efe:	f7ff ffc5 	bl	4e8c <pinmap_find_peripheral_from_pad.part.0>
    4f02:	4264      	negs	r4, r4
    4f04:	1c43      	adds	r3, r0, #1
    4f06:	d1e8      	bne.n	4eda <pinmap_merge_sercom+0x26>
    4f08:	e7f1      	b.n	4eee <pinmap_merge_sercom+0x3a>
    4f0a:	46c0      	nop			; (mov r8, r8)

00004f0c <pinmap_find_sercom>:
    4f0c:	b5f0      	push	{r4, r5, r6, r7, lr}
    4f0e:	1c0f      	adds	r7, r1, #0
    4f10:	b085      	sub	sp, #20
    4f12:	1c16      	adds	r6, r2, #0
    4f14:	1c1d      	adds	r5, r3, #0
    4f16:	1c04      	adds	r4, r0, #0
    4f18:	1c43      	adds	r3, r0, #1
    4f1a:	d003      	beq.n	4f24 <pinmap_find_sercom+0x18>
    4f1c:	2100      	movs	r1, #0
    4f1e:	f7ff ffb5 	bl	4e8c <pinmap_find_peripheral_from_pad.part.0>
    4f22:	1c04      	adds	r4, r0, #0
    4f24:	9400      	str	r4, [sp, #0]
    4f26:	1c38      	adds	r0, r7, #0
    4f28:	1c7b      	adds	r3, r7, #1
    4f2a:	d002      	beq.n	4f32 <pinmap_find_sercom+0x26>
    4f2c:	2100      	movs	r1, #0
    4f2e:	f7ff ffad 	bl	4e8c <pinmap_find_peripheral_from_pad.part.0>
    4f32:	9001      	str	r0, [sp, #4]
    4f34:	1c30      	adds	r0, r6, #0
    4f36:	1c73      	adds	r3, r6, #1
    4f38:	d002      	beq.n	4f40 <pinmap_find_sercom+0x34>
    4f3a:	2100      	movs	r1, #0
    4f3c:	f7ff ffa6 	bl	4e8c <pinmap_find_peripheral_from_pad.part.0>
    4f40:	9002      	str	r0, [sp, #8]
    4f42:	1c28      	adds	r0, r5, #0
    4f44:	1c6b      	adds	r3, r5, #1
    4f46:	d002      	beq.n	4f4e <pinmap_find_sercom+0x42>
    4f48:	2100      	movs	r1, #0
    4f4a:	f7ff ff9f 	bl	4e8c <pinmap_find_peripheral_from_pad.part.0>
    4f4e:	9003      	str	r0, [sp, #12]
    4f50:	2001      	movs	r0, #1
    4f52:	2300      	movs	r3, #0
    4f54:	4240      	negs	r0, r0
    4f56:	220f      	movs	r2, #15
    4f58:	1c61      	adds	r1, r4, #1
    4f5a:	d004      	beq.n	4f66 <pinmap_find_sercom+0x5a>
    4f5c:	1c41      	adds	r1, r0, #1
    4f5e:	d00b      	beq.n	4f78 <pinmap_find_sercom+0x6c>
    4f60:	4014      	ands	r4, r2
    4f62:	4284      	cmp	r4, r0
    4f64:	d10f      	bne.n	4f86 <pinmap_find_sercom+0x7a>
    4f66:	3304      	adds	r3, #4
    4f68:	2b10      	cmp	r3, #16
    4f6a:	d00a      	beq.n	4f82 <pinmap_find_sercom+0x76>
    4f6c:	4669      	mov	r1, sp
    4f6e:	58cc      	ldr	r4, [r1, r3]
    4f70:	1c61      	adds	r1, r4, #1
    4f72:	d0f8      	beq.n	4f66 <pinmap_find_sercom+0x5a>
    4f74:	1c41      	adds	r1, r0, #1
    4f76:	d1f3      	bne.n	4f60 <pinmap_find_sercom+0x54>
    4f78:	1c20      	adds	r0, r4, #0
    4f7a:	3304      	adds	r3, #4
    4f7c:	4010      	ands	r0, r2
    4f7e:	2b10      	cmp	r3, #16
    4f80:	d1f4      	bne.n	4f6c <pinmap_find_sercom+0x60>
    4f82:	b005      	add	sp, #20
    4f84:	bdf0      	pop	{r4, r5, r6, r7, pc}
    4f86:	2001      	movs	r0, #1
    4f88:	4240      	negs	r0, r0
    4f8a:	e7fa      	b.n	4f82 <pinmap_find_sercom+0x76>

00004f8c <pinmap_function_sercom>:
    4f8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4f8e:	1c43      	adds	r3, r0, #1
    4f90:	d004      	beq.n	4f9c <pinmap_function_sercom+0x10>
    4f92:	260f      	movs	r6, #15
    4f94:	4031      	ands	r1, r6
    4f96:	1e0d      	subs	r5, r1, #0
    4f98:	2d05      	cmp	r5, #5
    4f9a:	d902      	bls.n	4fa2 <pinmap_function_sercom+0x16>
    4f9c:	2001      	movs	r0, #1
    4f9e:	4240      	negs	r0, r0
    4fa0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    4fa2:	4f0a      	ldr	r7, [pc, #40]	; (4fcc <pinmap_function_sercom+0x40>)
    4fa4:	1c04      	adds	r4, r0, #0
    4fa6:	1c39      	adds	r1, r7, #0
    4fa8:	f7ff fbee 	bl	4788 <pinmap_peripheral>
    4fac:	4030      	ands	r0, r6
    4fae:	42a8      	cmp	r0, r5
    4fb0:	d007      	beq.n	4fc2 <pinmap_function_sercom+0x36>
    4fb2:	4f07      	ldr	r7, [pc, #28]	; (4fd0 <pinmap_function_sercom+0x44>)
    4fb4:	1c20      	adds	r0, r4, #0
    4fb6:	1c39      	adds	r1, r7, #0
    4fb8:	f7ff fbe6 	bl	4788 <pinmap_peripheral>
    4fbc:	4006      	ands	r6, r0
    4fbe:	42ae      	cmp	r6, r5
    4fc0:	d1ec      	bne.n	4f9c <pinmap_function_sercom+0x10>
    4fc2:	1c20      	adds	r0, r4, #0
    4fc4:	1c39      	adds	r1, r7, #0
    4fc6:	f7ff fbf7 	bl	47b8 <pinmap_function>
    4fca:	e7e9      	b.n	4fa0 <pinmap_function_sercom+0x14>
    4fcc:	0000de30 	.word	0x0000de30
    4fd0:	0000ddac 	.word	0x0000ddac

00004fd4 <pinmap_pad_sercom>:
    4fd4:	b570      	push	{r4, r5, r6, lr}
    4fd6:	1c43      	adds	r3, r0, #1
    4fd8:	d004      	beq.n	4fe4 <pinmap_pad_sercom+0x10>
    4fda:	240f      	movs	r4, #15
    4fdc:	4021      	ands	r1, r4
    4fde:	1e0d      	subs	r5, r1, #0
    4fe0:	2d05      	cmp	r5, #5
    4fe2:	d902      	bls.n	4fea <pinmap_pad_sercom+0x16>
    4fe4:	2001      	movs	r0, #1
    4fe6:	4240      	negs	r0, r0
    4fe8:	bd70      	pop	{r4, r5, r6, pc}
    4fea:	4909      	ldr	r1, [pc, #36]	; (5010 <pinmap_pad_sercom+0x3c>)
    4fec:	1c06      	adds	r6, r0, #0
    4fee:	f7ff fbcb 	bl	4788 <pinmap_peripheral>
    4ff2:	1c23      	adds	r3, r4, #0
    4ff4:	4003      	ands	r3, r0
    4ff6:	42ab      	cmp	r3, r5
    4ff8:	d007      	beq.n	500a <pinmap_pad_sercom+0x36>
    4ffa:	1c30      	adds	r0, r6, #0
    4ffc:	4905      	ldr	r1, [pc, #20]	; (5014 <pinmap_pad_sercom+0x40>)
    4ffe:	f7ff fbc3 	bl	4788 <pinmap_peripheral>
    5002:	1c23      	adds	r3, r4, #0
    5004:	4003      	ands	r3, r0
    5006:	42ab      	cmp	r3, r5
    5008:	d1ec      	bne.n	4fe4 <pinmap_pad_sercom+0x10>
    500a:	0900      	lsrs	r0, r0, #4
    500c:	4020      	ands	r0, r4
    500e:	e7eb      	b.n	4fe8 <pinmap_pad_sercom+0x14>
    5010:	0000de30 	.word	0x0000de30
    5014:	0000ddac 	.word	0x0000ddac

00005018 <pinmap_peripheral_sercom>:
    5018:	b570      	push	{r4, r5, r6, lr}
    501a:	b086      	sub	sp, #24
    501c:	466a      	mov	r2, sp
    501e:	4b08      	ldr	r3, [pc, #32]	; (5040 <pinmap_peripheral_sercom+0x28>)
    5020:	4668      	mov	r0, sp
    5022:	cb70      	ldmia	r3!, {r4, r5, r6}
    5024:	c270      	stmia	r2!, {r4, r5, r6}
    5026:	cb70      	ldmia	r3!, {r4, r5, r6}
    5028:	c270      	stmia	r2!, {r4, r5, r6}
    502a:	230f      	movs	r3, #15
    502c:	4019      	ands	r1, r3
    502e:	2905      	cmp	r1, #5
    5030:	d903      	bls.n	503a <pinmap_peripheral_sercom+0x22>
    5032:	2001      	movs	r0, #1
    5034:	4240      	negs	r0, r0
    5036:	b006      	add	sp, #24
    5038:	bd70      	pop	{r4, r5, r6, pc}
    503a:	0089      	lsls	r1, r1, #2
    503c:	5808      	ldr	r0, [r1, r0]
    503e:	e7fa      	b.n	5036 <pinmap_peripheral_sercom+0x1e>
    5040:	0000e108 	.word	0x0000e108

00005044 <us_ticker_irq_handler_internal>:
    5044:	2203      	movs	r2, #3
    5046:	b508      	push	{r3, lr}
    5048:	4b02      	ldr	r3, [pc, #8]	; (5054 <us_ticker_irq_handler_internal+0x10>)
    504a:	681b      	ldr	r3, [r3, #0]
    504c:	739a      	strb	r2, [r3, #14]
    504e:	f000 fc83 	bl	5958 <us_ticker_irq_handler>
    5052:	bd08      	pop	{r3, pc}
    5054:	200045fc 	.word	0x200045fc

00005058 <us_ticker_init.part.5>:
    5058:	b530      	push	{r4, r5, lr}
    505a:	2501      	movs	r5, #1
    505c:	4b35      	ldr	r3, [pc, #212]	; (5134 <us_ticker_init.part.5+0xdc>)
    505e:	4c36      	ldr	r4, [pc, #216]	; (5138 <us_ticker_init.part.5+0xe0>)
    5060:	601d      	str	r5, [r3, #0]
    5062:	7823      	ldrb	r3, [r4, #0]
    5064:	b08f      	sub	sp, #60	; 0x3c
    5066:	2b00      	cmp	r3, #0
    5068:	d05c      	beq.n	5124 <us_ticker_init.part.5+0xcc>
    506a:	2300      	movs	r3, #0
    506c:	2200      	movs	r2, #0
    506e:	ac01      	add	r4, sp, #4
    5070:	7422      	strb	r2, [r4, #16]
    5072:	6163      	str	r3, [r4, #20]
    5074:	61a3      	str	r3, [r4, #24]
    5076:	7722      	strb	r2, [r4, #28]
    5078:	6223      	str	r3, [r4, #32]
    507a:	6263      	str	r3, [r4, #36]	; 0x24
    507c:	2000      	movs	r0, #0
    507e:	7023      	strb	r3, [r4, #0]
    5080:	70a3      	strb	r3, [r4, #2]
    5082:	80a3      	strh	r3, [r4, #4]
    5084:	71a2      	strb	r2, [r4, #6]
    5086:	8123      	strh	r3, [r4, #8]
    5088:	7062      	strb	r2, [r4, #1]
    508a:	72a2      	strb	r2, [r4, #10]
    508c:	72e2      	strb	r2, [r4, #11]
    508e:	7322      	strb	r2, [r4, #12]
    5090:	73a2      	strb	r2, [r4, #14]
    5092:	7362      	strb	r2, [r4, #13]
    5094:	8523      	strh	r3, [r4, #40]	; 0x28
    5096:	8563      	strh	r3, [r4, #42]	; 0x2a
    5098:	85a3      	strh	r3, [r4, #44]	; 0x2c
    509a:	f7fe fd6b 	bl	3b74 <system_gclk_gen_get_hz>
    509e:	4927      	ldr	r1, [pc, #156]	; (513c <us_ticker_init.part.5+0xe4>)
    50a0:	f000 feb0 	bl	5e04 <__aeabi_uidiv>
    50a4:	2800      	cmp	r0, #0
    50a6:	d032      	beq.n	510e <us_ticker_init.part.5+0xb6>
    50a8:	2300      	movs	r3, #0
    50aa:	2801      	cmp	r0, #1
    50ac:	d007      	beq.n	50be <us_ticker_init.part.5+0x66>
    50ae:	0840      	lsrs	r0, r0, #1
    50b0:	3301      	adds	r3, #1
    50b2:	2801      	cmp	r0, #1
    50b4:	d022      	beq.n	50fc <us_ticker_init.part.5+0xa4>
    50b6:	2b0b      	cmp	r3, #11
    50b8:	d1f9      	bne.n	50ae <us_ticker_init.part.5+0x56>
    50ba:	23e0      	movs	r3, #224	; 0xe0
    50bc:	00db      	lsls	r3, r3, #3
    50be:	80a3      	strh	r3, [r4, #4]
    50c0:	2308      	movs	r3, #8
    50c2:	70a3      	strb	r3, [r4, #2]
    50c4:	3b07      	subs	r3, #7
    50c6:	7063      	strb	r3, [r4, #1]
    50c8:	2300      	movs	r3, #0
    50ca:	4d1d      	ldr	r5, [pc, #116]	; (5140 <us_ticker_init.part.5+0xe8>)
    50cc:	62a3      	str	r3, [r4, #40]	; 0x28
    50ce:	491d      	ldr	r1, [pc, #116]	; (5144 <us_ticker_init.part.5+0xec>)
    50d0:	3b01      	subs	r3, #1
    50d2:	1c22      	adds	r2, r4, #0
    50d4:	1c28      	adds	r0, r5, #0
    50d6:	62e3      	str	r3, [r4, #44]	; 0x2c
    50d8:	f000 fcd2 	bl	5a80 <tc_init>
    50dc:	491a      	ldr	r1, [pc, #104]	; (5148 <us_ticker_init.part.5+0xf0>)
    50de:	2202      	movs	r2, #2
    50e0:	1c28      	adds	r0, r5, #0
    50e2:	f000 fc51 	bl	5988 <tc_register_callback>
    50e6:	217f      	movs	r1, #127	; 0x7f
    50e8:	682a      	ldr	r2, [r5, #0]
    50ea:	7bd3      	ldrb	r3, [r2, #15]
    50ec:	438b      	bics	r3, r1
    50ee:	d1fc      	bne.n	50ea <us_ticker_init.part.5+0x92>
    50f0:	8811      	ldrh	r1, [r2, #0]
    50f2:	3302      	adds	r3, #2
    50f4:	430b      	orrs	r3, r1
    50f6:	8013      	strh	r3, [r2, #0]
    50f8:	b00f      	add	sp, #60	; 0x3c
    50fa:	bd30      	pop	{r4, r5, pc}
    50fc:	2b08      	cmp	r3, #8
    50fe:	d8dc      	bhi.n	50ba <us_ticker_init.part.5+0x62>
    5100:	2b06      	cmp	r3, #6
    5102:	d813      	bhi.n	512c <us_ticker_init.part.5+0xd4>
    5104:	2b04      	cmp	r3, #4
    5106:	d908      	bls.n	511a <us_ticker_init.part.5+0xc2>
    5108:	23a0      	movs	r3, #160	; 0xa0
    510a:	00db      	lsls	r3, r3, #3
    510c:	e7d7      	b.n	50be <us_ticker_init.part.5+0x66>
    510e:	480f      	ldr	r0, [pc, #60]	; (514c <us_ticker_init.part.5+0xf4>)
    5110:	490f      	ldr	r1, [pc, #60]	; (5150 <us_ticker_init.part.5+0xf8>)
    5112:	2257      	movs	r2, #87	; 0x57
    5114:	f7ff faf8 	bl	4708 <mbed_assert_internal>
    5118:	2300      	movs	r3, #0
    511a:	22e0      	movs	r2, #224	; 0xe0
    511c:	021b      	lsls	r3, r3, #8
    511e:	00d2      	lsls	r2, r2, #3
    5120:	4013      	ands	r3, r2
    5122:	e7cc      	b.n	50be <us_ticker_init.part.5+0x66>
    5124:	f7fe fdc2 	bl	3cac <system_init>
    5128:	7025      	strb	r5, [r4, #0]
    512a:	e79e      	b.n	506a <us_ticker_init.part.5+0x12>
    512c:	23c0      	movs	r3, #192	; 0xc0
    512e:	00db      	lsls	r3, r3, #3
    5130:	e7c5      	b.n	50be <us_ticker_init.part.5+0x66>
    5132:	46c0      	nop			; (mov r8, r8)
    5134:	20004558 	.word	0x20004558
    5138:	2000440c 	.word	0x2000440c
    513c:	000f4240 	.word	0x000f4240
    5140:	200045fc 	.word	0x200045fc
    5144:	42003000 	.word	0x42003000
    5148:	00005045 	.word	0x00005045
    514c:	0000e120 	.word	0x0000e120
    5150:	0000e134 	.word	0x0000e134

00005154 <us_ticker_init>:
    5154:	b508      	push	{r3, lr}
    5156:	4b03      	ldr	r3, [pc, #12]	; (5164 <us_ticker_init+0x10>)
    5158:	681b      	ldr	r3, [r3, #0]
    515a:	2b00      	cmp	r3, #0
    515c:	d101      	bne.n	5162 <us_ticker_init+0xe>
    515e:	f7ff ff7b 	bl	5058 <us_ticker_init.part.5>
    5162:	bd08      	pop	{r3, pc}
    5164:	20004558 	.word	0x20004558

00005168 <us_ticker_read>:
    5168:	b508      	push	{r3, lr}
    516a:	4b05      	ldr	r3, [pc, #20]	; (5180 <us_ticker_read+0x18>)
    516c:	681b      	ldr	r3, [r3, #0]
    516e:	2b00      	cmp	r3, #0
    5170:	d101      	bne.n	5176 <us_ticker_read+0xe>
    5172:	f7ff ff71 	bl	5058 <us_ticker_init.part.5>
    5176:	4803      	ldr	r0, [pc, #12]	; (5184 <us_ticker_read+0x1c>)
    5178:	f000 fdd4 	bl	5d24 <tc_get_count_value>
    517c:	bd08      	pop	{r3, pc}
    517e:	46c0      	nop			; (mov r8, r8)
    5180:	20004558 	.word	0x20004558
    5184:	200045fc 	.word	0x200045fc

00005188 <us_ticker_set_interrupt>:
    5188:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    518a:	1c06      	adds	r6, r0, #0
    518c:	f7ff ffec 	bl	5168 <us_ticker_read>
    5190:	1a30      	subs	r0, r6, r0
    5192:	d421      	bmi.n	51d8 <us_ticker_set_interrupt+0x50>
    5194:	2780      	movs	r7, #128	; 0x80
    5196:	2380      	movs	r3, #128	; 0x80
    5198:	4d11      	ldr	r5, [pc, #68]	; (51e0 <us_ticker_set_interrupt+0x58>)
    519a:	033f      	lsls	r7, r7, #12
    519c:	50ef      	str	r7, [r5, r3]
    519e:	4911      	ldr	r1, [pc, #68]	; (51e4 <us_ticker_set_interrupt+0x5c>)
    51a0:	2013      	movs	r0, #19
    51a2:	f7fe f951 	bl	3448 <NVIC_SetVector>
    51a6:	4c10      	ldr	r4, [pc, #64]	; (51e8 <us_ticker_set_interrupt+0x60>)
    51a8:	6820      	ldr	r0, [r4, #0]
    51aa:	f000 fc49 	bl	5a40 <_tc_get_inst_index>
    51ae:	221f      	movs	r2, #31
    51b0:	4b0e      	ldr	r3, [pc, #56]	; (51ec <us_ticker_set_interrupt+0x64>)
    51b2:	2100      	movs	r1, #0
    51b4:	5c1b      	ldrb	r3, [r3, r0]
    51b6:	1c20      	adds	r0, r4, #0
    51b8:	4013      	ands	r3, r2
    51ba:	3a1e      	subs	r2, #30
    51bc:	409a      	lsls	r2, r3
    51be:	2310      	movs	r3, #16
    51c0:	602a      	str	r2, [r5, #0]
    51c2:	7e62      	ldrb	r2, [r4, #25]
    51c4:	4313      	orrs	r3, r2
    51c6:	7663      	strb	r3, [r4, #25]
    51c8:	2310      	movs	r3, #16
    51ca:	6822      	ldr	r2, [r4, #0]
    51cc:	7353      	strb	r3, [r2, #13]
    51ce:	1c32      	adds	r2, r6, #0
    51d0:	f000 fdbe 	bl	5d50 <tc_set_compare_value>
    51d4:	602f      	str	r7, [r5, #0]
    51d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    51d8:	f000 fbbe 	bl	5958 <us_ticker_irq_handler>
    51dc:	e7fb      	b.n	51d6 <us_ticker_set_interrupt+0x4e>
    51de:	46c0      	nop			; (mov r8, r8)
    51e0:	e000e100 	.word	0xe000e100
    51e4:	00005a29 	.word	0x00005a29
    51e8:	200045fc 	.word	0x200045fc
    51ec:	0000e1a4 	.word	0x0000e1a4

000051f0 <us_ticker_disable_interrupt>:
    51f0:	2110      	movs	r1, #16
    51f2:	4b06      	ldr	r3, [pc, #24]	; (520c <us_ticker_disable_interrupt+0x1c>)
    51f4:	681a      	ldr	r2, [r3, #0]
    51f6:	7311      	strb	r1, [r2, #12]
    51f8:	7e5a      	ldrb	r2, [r3, #25]
    51fa:	438a      	bics	r2, r1
    51fc:	2180      	movs	r1, #128	; 0x80
    51fe:	765a      	strb	r2, [r3, #25]
    5200:	2380      	movs	r3, #128	; 0x80
    5202:	4a03      	ldr	r2, [pc, #12]	; (5210 <us_ticker_disable_interrupt+0x20>)
    5204:	0309      	lsls	r1, r1, #12
    5206:	50d1      	str	r1, [r2, r3]
    5208:	4770      	bx	lr
    520a:	46c0      	nop			; (mov r8, r8)
    520c:	200045fc 	.word	0x200045fc
    5210:	e000e100 	.word	0xe000e100

00005214 <us_ticker_clear_interrupt>:
    5214:	2210      	movs	r2, #16
    5216:	4b05      	ldr	r3, [pc, #20]	; (522c <us_ticker_clear_interrupt+0x18>)
    5218:	2180      	movs	r1, #128	; 0x80
    521a:	681b      	ldr	r3, [r3, #0]
    521c:	0309      	lsls	r1, r1, #12
    521e:	739a      	strb	r2, [r3, #14]
    5220:	731a      	strb	r2, [r3, #12]
    5222:	23c0      	movs	r3, #192	; 0xc0
    5224:	4a02      	ldr	r2, [pc, #8]	; (5230 <us_ticker_clear_interrupt+0x1c>)
    5226:	005b      	lsls	r3, r3, #1
    5228:	50d1      	str	r1, [r2, r3]
    522a:	4770      	bx	lr
    522c:	200045fc 	.word	0x200045fc
    5230:	e000e100 	.word	0xe000e100

00005234 <spi_find_mux_settings>:
    5234:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5236:	1e04      	subs	r4, r0, #0
    5238:	d03e      	beq.n	52b8 <spi_find_mux_settings+0x84>
    523a:	6820      	ldr	r0, [r4, #0]
    523c:	f7ff fbe4 	bl	4a08 <_sercom_get_sercom_inst_index>
    5240:	7923      	ldrb	r3, [r4, #4]
    5242:	1c07      	adds	r7, r0, #0
    5244:	2b01      	cmp	r3, #1
    5246:	d02a      	beq.n	529e <spi_find_mux_settings+0x6a>
    5248:	2501      	movs	r5, #1
    524a:	2300      	movs	r3, #0
    524c:	2005      	movs	r0, #5
    524e:	18e3      	adds	r3, r4, r3
    5250:	5618      	ldrsb	r0, [r3, r0]
    5252:	1c43      	adds	r3, r0, #1
    5254:	d00f      	beq.n	5276 <spi_find_mux_settings+0x42>
    5256:	1c39      	adds	r1, r7, #0
    5258:	f7ff febc 	bl	4fd4 <pinmap_pad_sercom>
    525c:	1c43      	adds	r3, r0, #1
    525e:	d00a      	beq.n	5276 <spi_find_mux_settings+0x42>
    5260:	26c0      	movs	r6, #192	; 0xc0
    5262:	0500      	lsls	r0, r0, #20
    5264:	03b6      	lsls	r6, r6, #14
    5266:	4006      	ands	r6, r0
    5268:	2005      	movs	r0, #5
    526a:	1965      	adds	r5, r4, r5
    526c:	5628      	ldrsb	r0, [r5, r0]
    526e:	1c43      	adds	r3, r0, #1
    5270:	d107      	bne.n	5282 <spi_find_mux_settings+0x4e>
    5272:	1c30      	adds	r0, r6, #0
    5274:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    5276:	2005      	movs	r0, #5
    5278:	1965      	adds	r5, r4, r5
    527a:	5628      	ldrsb	r0, [r5, r0]
    527c:	2600      	movs	r6, #0
    527e:	1c43      	adds	r3, r0, #1
    5280:	d0f7      	beq.n	5272 <spi_find_mux_settings+0x3e>
    5282:	1c39      	adds	r1, r7, #0
    5284:	f7ff fea6 	bl	4fd4 <pinmap_pad_sercom>
    5288:	1c43      	adds	r3, r0, #1
    528a:	d0f2      	beq.n	5272 <spi_find_mux_settings+0x3e>
    528c:	2800      	cmp	r0, #0
    528e:	d009      	beq.n	52a4 <spi_find_mux_settings+0x70>
    5290:	23c0      	movs	r3, #192	; 0xc0
    5292:	3801      	subs	r0, #1
    5294:	0400      	lsls	r0, r0, #16
    5296:	029b      	lsls	r3, r3, #10
    5298:	4018      	ands	r0, r3
    529a:	4306      	orrs	r6, r0
    529c:	e7e9      	b.n	5272 <spi_find_mux_settings+0x3e>
    529e:	2500      	movs	r5, #0
    52a0:	2301      	movs	r3, #1
    52a2:	e7d3      	b.n	524c <spi_find_mux_settings+0x18>
    52a4:	2007      	movs	r0, #7
    52a6:	1c39      	adds	r1, r7, #0
    52a8:	5620      	ldrsb	r0, [r4, r0]
    52aa:	f7ff fe93 	bl	4fd4 <pinmap_pad_sercom>
    52ae:	2803      	cmp	r0, #3
    52b0:	d008      	beq.n	52c4 <spi_find_mux_settings+0x90>
    52b2:	2000      	movs	r0, #0
    52b4:	4306      	orrs	r6, r0
    52b6:	e7dc      	b.n	5272 <spi_find_mux_settings+0x3e>
    52b8:	4804      	ldr	r0, [pc, #16]	; (52cc <spi_find_mux_settings+0x98>)
    52ba:	4905      	ldr	r1, [pc, #20]	; (52d0 <spi_find_mux_settings+0x9c>)
    52bc:	22b1      	movs	r2, #177	; 0xb1
    52be:	f7ff fa23 	bl	4708 <mbed_assert_internal>
    52c2:	e7ba      	b.n	523a <spi_find_mux_settings+0x6>
    52c4:	20c0      	movs	r0, #192	; 0xc0
    52c6:	0280      	lsls	r0, r0, #10
    52c8:	4306      	orrs	r6, r0
    52ca:	e7d2      	b.n	5272 <spi_find_mux_settings+0x3e>
    52cc:	0000d928 	.word	0x0000d928
    52d0:	0000e1a8 	.word	0x0000e1a8

000052d4 <spi_init>:
    52d4:	b5f0      	push	{r4, r5, r6, r7, lr}
    52d6:	4644      	mov	r4, r8
    52d8:	465f      	mov	r7, fp
    52da:	464d      	mov	r5, r9
    52dc:	4656      	mov	r6, sl
    52de:	b4f0      	push	{r4, r5, r6, r7}
    52e0:	b085      	sub	sp, #20
    52e2:	4698      	mov	r8, r3
    52e4:	ab0e      	add	r3, sp, #56	; 0x38
    52e6:	781b      	ldrb	r3, [r3, #0]
    52e8:	1c04      	adds	r4, r0, #0
    52ea:	b25b      	sxtb	r3, r3
    52ec:	1c0d      	adds	r5, r1, #0
    52ee:	4693      	mov	fp, r2
    52f0:	9300      	str	r3, [sp, #0]
    52f2:	2800      	cmp	r0, #0
    52f4:	d100      	bne.n	52f8 <spi_init+0x24>
    52f6:	e0c8      	b.n	548a <spi_init+0x1b6>
    52f8:	4643      	mov	r3, r8
    52fa:	3301      	adds	r3, #1
    52fc:	d100      	bne.n	5300 <spi_init+0x2c>
    52fe:	e0b8      	b.n	5472 <spi_init+0x19e>
    5300:	2300      	movs	r3, #0
    5302:	4e6a      	ldr	r6, [pc, #424]	; (54ac <spi_init+0x1d8>)
    5304:	aa02      	add	r2, sp, #8
    5306:	8053      	strh	r3, [r2, #2]
    5308:	7833      	ldrb	r3, [r6, #0]
    530a:	2b00      	cmp	r3, #0
    530c:	d032      	beq.n	5374 <spi_init+0xa0>
    530e:	4659      	mov	r1, fp
    5310:	4642      	mov	r2, r8
    5312:	9b00      	ldr	r3, [sp, #0]
    5314:	1c28      	adds	r0, r5, #0
    5316:	f7ff fdf9 	bl	4f0c <pinmap_find_sercom>
    531a:	4681      	mov	r9, r0
    531c:	2001      	movs	r0, #1
    531e:	4649      	mov	r1, r9
    5320:	4240      	negs	r0, r0
    5322:	f7ff fe79 	bl	5018 <pinmap_peripheral_sercom>
    5326:	6020      	str	r0, [r4, #0]
    5328:	2c00      	cmp	r4, #0
    532a:	d100      	bne.n	532e <spi_init+0x5a>
    532c:	e0a7      	b.n	547e <spi_init+0x1aa>
    532e:	4f60      	ldr	r7, [pc, #384]	; (54b0 <spi_init+0x1dc>)
    5330:	4e60      	ldr	r6, [pc, #384]	; (54b4 <spi_init+0x1e0>)
    5332:	e003      	b.n	533c <spi_init+0x68>
    5334:	6822      	ldr	r2, [r4, #0]
    5336:	8b53      	ldrh	r3, [r2, #26]
    5338:	0bdb      	lsrs	r3, r3, #15
    533a:	d00a      	beq.n	5352 <spi_init+0x7e>
    533c:	2c00      	cmp	r4, #0
    533e:	d1f9      	bne.n	5334 <spi_init+0x60>
    5340:	2244      	movs	r2, #68	; 0x44
    5342:	1c38      	adds	r0, r7, #0
    5344:	1c31      	adds	r1, r6, #0
    5346:	f7ff f9df 	bl	4708 <mbed_assert_internal>
    534a:	6822      	ldr	r2, [r4, #0]
    534c:	8b53      	ldrh	r3, [r2, #26]
    534e:	0bdb      	lsrs	r3, r3, #15
    5350:	d1f4      	bne.n	533c <spi_init+0x68>
    5352:	2102      	movs	r1, #2
    5354:	6813      	ldr	r3, [r2, #0]
    5356:	438b      	bics	r3, r1
    5358:	6013      	str	r3, [r2, #0]
    535a:	6823      	ldr	r3, [r4, #0]
    535c:	681e      	ldr	r6, [r3, #0]
    535e:	2301      	movs	r3, #1
    5360:	469a      	mov	sl, r3
    5362:	401e      	ands	r6, r3
    5364:	d00b      	beq.n	537e <spi_init+0xaa>
    5366:	b005      	add	sp, #20
    5368:	bc3c      	pop	{r2, r3, r4, r5}
    536a:	4690      	mov	r8, r2
    536c:	4699      	mov	r9, r3
    536e:	46a2      	mov	sl, r4
    5370:	46ab      	mov	fp, r5
    5372:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5374:	f7fe fc9a 	bl	3cac <system_init>
    5378:	2301      	movs	r3, #1
    537a:	7033      	strb	r3, [r6, #0]
    537c:	e7c7      	b.n	530e <spi_init+0x3a>
    537e:	464b      	mov	r3, r9
    5380:	4650      	mov	r0, sl
    5382:	3302      	adds	r3, #2
    5384:	4098      	lsls	r0, r3
    5386:	1c03      	adds	r3, r0, #0
    5388:	494b      	ldr	r1, [pc, #300]	; (54b8 <spi_init+0x1e4>)
    538a:	6a0a      	ldr	r2, [r1, #32]
    538c:	4313      	orrs	r3, r2
    538e:	620b      	str	r3, [r1, #32]
    5390:	ab02      	add	r3, sp, #8
    5392:	701e      	strb	r6, [r3, #0]
    5394:	464b      	mov	r3, r9
    5396:	3314      	adds	r3, #20
    5398:	b2db      	uxtb	r3, r3
    539a:	1c1f      	adds	r7, r3, #0
    539c:	1c18      	adds	r0, r3, #0
    539e:	a902      	add	r1, sp, #8
    53a0:	9301      	str	r3, [sp, #4]
    53a2:	f7fe fc61 	bl	3c68 <system_gclk_chan_set_config>
    53a6:	1c38      	adds	r0, r7, #0
    53a8:	f7fe fc20 	bl	3bec <system_gclk_chan_enable>
    53ac:	2100      	movs	r1, #0
    53ae:	2000      	movs	r0, #0
    53b0:	f7ff fb0a 	bl	49c8 <sercom_set_gclk_generator>
    53b4:	230c      	movs	r3, #12
    53b6:	6822      	ldr	r2, [r4, #0]
    53b8:	af03      	add	r7, sp, #12
    53ba:	6811      	ldr	r1, [r2, #0]
    53bc:	430b      	orrs	r3, r1
    53be:	6013      	str	r3, [r2, #0]
    53c0:	4653      	mov	r3, sl
    53c2:	7123      	strb	r3, [r4, #4]
    53c4:	2380      	movs	r3, #128	; 0x80
    53c6:	703b      	strb	r3, [r7, #0]
    53c8:	4653      	mov	r3, sl
    53ca:	70bb      	strb	r3, [r7, #2]
    53cc:	465b      	mov	r3, fp
    53ce:	71a3      	strb	r3, [r4, #6]
    53d0:	4643      	mov	r3, r8
    53d2:	71e3      	strb	r3, [r4, #7]
    53d4:	466b      	mov	r3, sp
    53d6:	781b      	ldrb	r3, [r3, #0]
    53d8:	7165      	strb	r5, [r4, #5]
    53da:	7223      	strb	r3, [r4, #8]
    53dc:	2309      	movs	r3, #9
    53de:	4698      	mov	r8, r3
    53e0:	b26d      	sxtb	r5, r5
    53e2:	707e      	strb	r6, [r7, #1]
    53e4:	70fe      	strb	r6, [r7, #3]
    53e6:	44a0      	add	r8, r4
    53e8:	1da6      	adds	r6, r4, #6
    53ea:	1c6b      	adds	r3, r5, #1
    53ec:	d00b      	beq.n	5406 <spi_init+0x132>
    53ee:	1c28      	adds	r0, r5, #0
    53f0:	4649      	mov	r1, r9
    53f2:	f7ff fdcb 	bl	4f8c <pinmap_function_sercom>
    53f6:	b2c0      	uxtb	r0, r0
    53f8:	7038      	strb	r0, [r7, #0]
    53fa:	28ff      	cmp	r0, #255	; 0xff
    53fc:	d003      	beq.n	5406 <spi_init+0x132>
    53fe:	b2e8      	uxtb	r0, r5
    5400:	1c39      	adds	r1, r7, #0
    5402:	f7fe fb27 	bl	3a54 <system_pinmux_pin_set_config>
    5406:	4546      	cmp	r6, r8
    5408:	d006      	beq.n	5418 <spi_init+0x144>
    540a:	7835      	ldrb	r5, [r6, #0]
    540c:	3601      	adds	r6, #1
    540e:	b26d      	sxtb	r5, r5
    5410:	1c6b      	adds	r3, r5, #1
    5412:	d1ec      	bne.n	53ee <spi_init+0x11a>
    5414:	4546      	cmp	r6, r8
    5416:	d1f8      	bne.n	540a <spi_init+0x136>
    5418:	9801      	ldr	r0, [sp, #4]
    541a:	f7fe fc31 	bl	3c80 <system_gclk_chan_get_hz>
    541e:	ab02      	add	r3, sp, #8
    5420:	1c01      	adds	r1, r0, #0
    5422:	1c9a      	adds	r2, r3, #2
    5424:	4825      	ldr	r0, [pc, #148]	; (54bc <spi_init+0x1e8>)
    5426:	f7ff f9f3 	bl	4810 <_sercom_get_sync_baud_val>
    542a:	2800      	cmp	r0, #0
    542c:	d19b      	bne.n	5366 <spi_init+0x92>
    542e:	ab02      	add	r3, sp, #8
    5430:	789b      	ldrb	r3, [r3, #2]
    5432:	6822      	ldr	r2, [r4, #0]
    5434:	1c20      	adds	r0, r4, #0
    5436:	7313      	strb	r3, [r2, #12]
    5438:	f7ff fefc 	bl	5234 <spi_find_mux_settings>
    543c:	2180      	movs	r1, #128	; 0x80
    543e:	6822      	ldr	r2, [r4, #0]
    5440:	0289      	lsls	r1, r1, #10
    5442:	6813      	ldr	r3, [r2, #0]
    5444:	4318      	orrs	r0, r3
    5446:	6010      	str	r0, [r2, #0]
    5448:	6822      	ldr	r2, [r4, #0]
    544a:	6853      	ldr	r3, [r2, #4]
    544c:	430b      	orrs	r3, r1
    544e:	6053      	str	r3, [r2, #4]
    5450:	2c00      	cmp	r4, #0
    5452:	d025      	beq.n	54a0 <spi_init+0x1cc>
    5454:	4e16      	ldr	r6, [pc, #88]	; (54b0 <spi_init+0x1dc>)
    5456:	4d17      	ldr	r5, [pc, #92]	; (54b4 <spi_init+0x1e0>)
    5458:	e003      	b.n	5462 <spi_init+0x18e>
    545a:	6822      	ldr	r2, [r4, #0]
    545c:	8b53      	ldrh	r3, [r2, #26]
    545e:	0bdb      	lsrs	r3, r3, #15
    5460:	d019      	beq.n	5496 <spi_init+0x1c2>
    5462:	2c00      	cmp	r4, #0
    5464:	d1f9      	bne.n	545a <spi_init+0x186>
    5466:	1c30      	adds	r0, r6, #0
    5468:	1c29      	adds	r1, r5, #0
    546a:	2244      	movs	r2, #68	; 0x44
    546c:	f7ff f94c 	bl	4708 <mbed_assert_internal>
    5470:	e7f3      	b.n	545a <spi_init+0x186>
    5472:	4813      	ldr	r0, [pc, #76]	; (54c0 <spi_init+0x1ec>)
    5474:	490f      	ldr	r1, [pc, #60]	; (54b4 <spi_init+0x1e0>)
    5476:	22f5      	movs	r2, #245	; 0xf5
    5478:	f7ff f946 	bl	4708 <mbed_assert_internal>
    547c:	e740      	b.n	5300 <spi_init+0x2c>
    547e:	480c      	ldr	r0, [pc, #48]	; (54b0 <spi_init+0x1dc>)
    5480:	490c      	ldr	r1, [pc, #48]	; (54b4 <spi_init+0x1e0>)
    5482:	225e      	movs	r2, #94	; 0x5e
    5484:	f7ff f940 	bl	4708 <mbed_assert_internal>
    5488:	e751      	b.n	532e <spi_init+0x5a>
    548a:	4809      	ldr	r0, [pc, #36]	; (54b0 <spi_init+0x1dc>)
    548c:	4909      	ldr	r1, [pc, #36]	; (54b4 <spi_init+0x1e0>)
    548e:	22f4      	movs	r2, #244	; 0xf4
    5490:	f7ff f93a 	bl	4708 <mbed_assert_internal>
    5494:	e730      	b.n	52f8 <spi_init+0x24>
    5496:	6811      	ldr	r1, [r2, #0]
    5498:	3302      	adds	r3, #2
    549a:	430b      	orrs	r3, r1
    549c:	6013      	str	r3, [r2, #0]
    549e:	e762      	b.n	5366 <spi_init+0x92>
    54a0:	4803      	ldr	r0, [pc, #12]	; (54b0 <spi_init+0x1dc>)
    54a2:	4904      	ldr	r1, [pc, #16]	; (54b4 <spi_init+0x1e0>)
    54a4:	2252      	movs	r2, #82	; 0x52
    54a6:	f7ff f92f 	bl	4708 <mbed_assert_internal>
    54aa:	e7d3      	b.n	5454 <spi_init+0x180>
    54ac:	2000440c 	.word	0x2000440c
    54b0:	0000d928 	.word	0x0000d928
    54b4:	0000e1a8 	.word	0x0000e1a8
    54b8:	40000400 	.word	0x40000400
    54bc:	000186a0 	.word	0x000186a0
    54c0:	0000e210 	.word	0x0000e210

000054c4 <spi_format>:
    54c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    54c6:	464f      	mov	r7, r9
    54c8:	4646      	mov	r6, r8
    54ca:	1c04      	adds	r4, r0, #0
    54cc:	b4c0      	push	{r6, r7}
    54ce:	4688      	mov	r8, r1
    54d0:	1c15      	adds	r5, r2, #0
    54d2:	4699      	mov	r9, r3
    54d4:	2800      	cmp	r0, #0
    54d6:	d100      	bne.n	54da <spi_format+0x16>
    54d8:	e08a      	b.n	55f0 <spi_format+0x12c>
    54da:	4f4f      	ldr	r7, [pc, #316]	; (5618 <spi_format+0x154>)
    54dc:	4e4f      	ldr	r6, [pc, #316]	; (561c <spi_format+0x158>)
    54de:	e006      	b.n	54ee <spi_format+0x2a>
    54e0:	6822      	ldr	r2, [r4, #0]
    54e2:	8b53      	ldrh	r3, [r2, #26]
    54e4:	0bdb      	lsrs	r3, r3, #15
    54e6:	03db      	lsls	r3, r3, #15
    54e8:	b29b      	uxth	r3, r3
    54ea:	2b00      	cmp	r3, #0
    54ec:	d00d      	beq.n	550a <spi_format+0x46>
    54ee:	2c00      	cmp	r4, #0
    54f0:	d1f6      	bne.n	54e0 <spi_format+0x1c>
    54f2:	2244      	movs	r2, #68	; 0x44
    54f4:	1c38      	adds	r0, r7, #0
    54f6:	1c31      	adds	r1, r6, #0
    54f8:	f7ff f906 	bl	4708 <mbed_assert_internal>
    54fc:	6822      	ldr	r2, [r4, #0]
    54fe:	8b53      	ldrh	r3, [r2, #26]
    5500:	0bdb      	lsrs	r3, r3, #15
    5502:	03db      	lsls	r3, r3, #15
    5504:	b29b      	uxth	r3, r3
    5506:	2b00      	cmp	r3, #0
    5508:	d1f1      	bne.n	54ee <spi_format+0x2a>
    550a:	2002      	movs	r0, #2
    550c:	6811      	ldr	r1, [r2, #0]
    550e:	4381      	bics	r1, r0
    5510:	6011      	str	r1, [r2, #0]
    5512:	464a      	mov	r2, r9
    5514:	2a00      	cmp	r2, #0
    5516:	d060      	beq.n	55da <spi_format+0x116>
    5518:	211c      	movs	r1, #28
    551a:	6820      	ldr	r0, [r4, #0]
    551c:	6802      	ldr	r2, [r0, #0]
    551e:	438a      	bics	r2, r1
    5520:	3914      	subs	r1, #20
    5522:	430a      	orrs	r2, r1
    5524:	6002      	str	r2, [r0, #0]
    5526:	6822      	ldr	r2, [r4, #0]
    5528:	7123      	strb	r3, [r4, #4]
    552a:	6851      	ldr	r1, [r2, #4]
    552c:	3340      	adds	r3, #64	; 0x40
    552e:	430b      	orrs	r3, r1
    5530:	6053      	str	r3, [r2, #4]
    5532:	2300      	movs	r3, #0
    5534:	4699      	mov	r9, r3
    5536:	1c27      	adds	r7, r4, #0
    5538:	1d66      	adds	r6, r4, #5
    553a:	3709      	adds	r7, #9
    553c:	2000      	movs	r0, #0
    553e:	5630      	ldrsb	r0, [r6, r0]
    5540:	1c43      	adds	r3, r0, #1
    5542:	d002      	beq.n	554a <spi_format+0x86>
    5544:	4649      	mov	r1, r9
    5546:	f7ff fc11 	bl	4d6c <pin_mode>
    554a:	3601      	adds	r6, #1
    554c:	42be      	cmp	r6, r7
    554e:	d1f5      	bne.n	553c <spi_format+0x78>
    5550:	6823      	ldr	r3, [r4, #0]
    5552:	1c20      	adds	r0, r4, #0
    5554:	681e      	ldr	r6, [r3, #0]
    5556:	4b32      	ldr	r3, [pc, #200]	; (5620 <spi_format+0x15c>)
    5558:	401e      	ands	r6, r3
    555a:	f7ff fe6b 	bl	5234 <spi_find_mux_settings>
    555e:	4642      	mov	r2, r8
    5560:	6823      	ldr	r3, [r4, #0]
    5562:	4306      	orrs	r6, r0
    5564:	601e      	str	r6, [r3, #0]
    5566:	6821      	ldr	r1, [r4, #0]
    5568:	2301      	movs	r3, #1
    556a:	2a08      	cmp	r2, #8
    556c:	dc00      	bgt.n	5570 <spi_format+0xac>
    556e:	2300      	movs	r3, #0
    5570:	2007      	movs	r0, #7
    5572:	684a      	ldr	r2, [r1, #4]
    5574:	4003      	ands	r3, r0
    5576:	4382      	bics	r2, r0
    5578:	4313      	orrs	r3, r2
    557a:	604b      	str	r3, [r1, #4]
    557c:	2301      	movs	r3, #1
    557e:	1c1a      	adds	r2, r3, #0
    5580:	6820      	ldr	r0, [r4, #0]
    5582:	402a      	ands	r2, r5
    5584:	6806      	ldr	r6, [r0, #0]
    5586:	0711      	lsls	r1, r2, #28
    5588:	4a26      	ldr	r2, [pc, #152]	; (5624 <spi_format+0x160>)
    558a:	086d      	lsrs	r5, r5, #1
    558c:	4032      	ands	r2, r6
    558e:	430a      	orrs	r2, r1
    5590:	6002      	str	r2, [r0, #0]
    5592:	6821      	ldr	r1, [r4, #0]
    5594:	401d      	ands	r5, r3
    5596:	076b      	lsls	r3, r5, #29
    5598:	4a23      	ldr	r2, [pc, #140]	; (5628 <spi_format+0x164>)
    559a:	680d      	ldr	r5, [r1, #0]
    559c:	4015      	ands	r5, r2
    559e:	431d      	orrs	r5, r3
    55a0:	600d      	str	r5, [r1, #0]
    55a2:	2c00      	cmp	r4, #0
    55a4:	d032      	beq.n	560c <spi_format+0x148>
    55a6:	4e1c      	ldr	r6, [pc, #112]	; (5618 <spi_format+0x154>)
    55a8:	4d1c      	ldr	r5, [pc, #112]	; (561c <spi_format+0x158>)
    55aa:	e003      	b.n	55b4 <spi_format+0xf0>
    55ac:	6822      	ldr	r2, [r4, #0]
    55ae:	8b53      	ldrh	r3, [r2, #26]
    55b0:	0bdb      	lsrs	r3, r3, #15
    55b2:	d00a      	beq.n	55ca <spi_format+0x106>
    55b4:	2c00      	cmp	r4, #0
    55b6:	d1f9      	bne.n	55ac <spi_format+0xe8>
    55b8:	2244      	movs	r2, #68	; 0x44
    55ba:	1c30      	adds	r0, r6, #0
    55bc:	1c29      	adds	r1, r5, #0
    55be:	f7ff f8a3 	bl	4708 <mbed_assert_internal>
    55c2:	6822      	ldr	r2, [r4, #0]
    55c4:	8b53      	ldrh	r3, [r2, #26]
    55c6:	0bdb      	lsrs	r3, r3, #15
    55c8:	d1f4      	bne.n	55b4 <spi_format+0xf0>
    55ca:	6811      	ldr	r1, [r2, #0]
    55cc:	3302      	adds	r3, #2
    55ce:	430b      	orrs	r3, r1
    55d0:	6013      	str	r3, [r2, #0]
    55d2:	bc0c      	pop	{r2, r3}
    55d4:	4690      	mov	r8, r2
    55d6:	4699      	mov	r9, r3
    55d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    55da:	221c      	movs	r2, #28
    55dc:	6821      	ldr	r1, [r4, #0]
    55de:	680b      	ldr	r3, [r1, #0]
    55e0:	4393      	bics	r3, r2
    55e2:	3a10      	subs	r2, #16
    55e4:	4313      	orrs	r3, r2
    55e6:	600b      	str	r3, [r1, #0]
    55e8:	2301      	movs	r3, #1
    55ea:	7123      	strb	r3, [r4, #4]
    55ec:	4699      	mov	r9, r3
    55ee:	e7a2      	b.n	5536 <spi_format+0x72>
    55f0:	2296      	movs	r2, #150	; 0x96
    55f2:	4f09      	ldr	r7, [pc, #36]	; (5618 <spi_format+0x154>)
    55f4:	4e09      	ldr	r6, [pc, #36]	; (561c <spi_format+0x158>)
    55f6:	1c38      	adds	r0, r7, #0
    55f8:	1c31      	adds	r1, r6, #0
    55fa:	32ff      	adds	r2, #255	; 0xff
    55fc:	f7ff f884 	bl	4708 <mbed_assert_internal>
    5600:	1c38      	adds	r0, r7, #0
    5602:	1c31      	adds	r1, r6, #0
    5604:	225e      	movs	r2, #94	; 0x5e
    5606:	f7ff f87f 	bl	4708 <mbed_assert_internal>
    560a:	e766      	b.n	54da <spi_format+0x16>
    560c:	4802      	ldr	r0, [pc, #8]	; (5618 <spi_format+0x154>)
    560e:	4903      	ldr	r1, [pc, #12]	; (561c <spi_format+0x158>)
    5610:	2252      	movs	r2, #82	; 0x52
    5612:	f7ff f879 	bl	4708 <mbed_assert_internal>
    5616:	e7c6      	b.n	55a6 <spi_format+0xe2>
    5618:	0000d928 	.word	0x0000d928
    561c:	0000e1a8 	.word	0x0000e1a8
    5620:	ffccffff 	.word	0xffccffff
    5624:	efffffff 	.word	0xefffffff
    5628:	dfffffff 	.word	0xdfffffff

0000562c <spi_frequency>:
    562c:	b5f0      	push	{r4, r5, r6, r7, lr}
    562e:	b083      	sub	sp, #12
    5630:	2300      	movs	r3, #0
    5632:	466a      	mov	r2, sp
    5634:	1c04      	adds	r4, r0, #0
    5636:	1c0d      	adds	r5, r1, #0
    5638:	80d3      	strh	r3, [r2, #6]
    563a:	2800      	cmp	r0, #0
    563c:	d053      	beq.n	56e6 <spi_frequency+0xba>
    563e:	4f37      	ldr	r7, [pc, #220]	; (571c <spi_frequency+0xf0>)
    5640:	4e37      	ldr	r6, [pc, #220]	; (5720 <spi_frequency+0xf4>)
    5642:	e003      	b.n	564c <spi_frequency+0x20>
    5644:	6822      	ldr	r2, [r4, #0]
    5646:	8b53      	ldrh	r3, [r2, #26]
    5648:	0bdb      	lsrs	r3, r3, #15
    564a:	d00a      	beq.n	5662 <spi_frequency+0x36>
    564c:	2c00      	cmp	r4, #0
    564e:	d1f9      	bne.n	5644 <spi_frequency+0x18>
    5650:	2244      	movs	r2, #68	; 0x44
    5652:	1c38      	adds	r0, r7, #0
    5654:	1c31      	adds	r1, r6, #0
    5656:	f7ff f857 	bl	4708 <mbed_assert_internal>
    565a:	6822      	ldr	r2, [r4, #0]
    565c:	8b53      	ldrh	r3, [r2, #26]
    565e:	0bdb      	lsrs	r3, r3, #15
    5660:	d1f4      	bne.n	564c <spi_frequency+0x20>
    5662:	2102      	movs	r1, #2
    5664:	6813      	ldr	r3, [r2, #0]
    5666:	438b      	bics	r3, r1
    5668:	6013      	str	r3, [r2, #0]
    566a:	6820      	ldr	r0, [r4, #0]
    566c:	f7ff f9cc 	bl	4a08 <_sercom_get_sercom_inst_index>
    5670:	3014      	adds	r0, #20
    5672:	b2c0      	uxtb	r0, r0
    5674:	f7fe fb04 	bl	3c80 <system_gclk_chan_get_hz>
    5678:	466b      	mov	r3, sp
    567a:	1c01      	adds	r1, r0, #0
    567c:	1d9a      	adds	r2, r3, #6
    567e:	1c28      	adds	r0, r5, #0
    5680:	f7ff f8c6 	bl	4810 <_sercom_get_sync_baud_val>
    5684:	2800      	cmp	r0, #0
    5686:	d11d      	bne.n	56c4 <spi_frequency+0x98>
    5688:	466b      	mov	r3, sp
    568a:	6822      	ldr	r2, [r4, #0]
    568c:	799b      	ldrb	r3, [r3, #6]
    568e:	7313      	strb	r3, [r2, #12]
    5690:	2c00      	cmp	r4, #0
    5692:	d036      	beq.n	5702 <spi_frequency+0xd6>
    5694:	4e21      	ldr	r6, [pc, #132]	; (571c <spi_frequency+0xf0>)
    5696:	4d22      	ldr	r5, [pc, #136]	; (5720 <spi_frequency+0xf4>)
    5698:	e003      	b.n	56a2 <spi_frequency+0x76>
    569a:	6822      	ldr	r2, [r4, #0]
    569c:	8b53      	ldrh	r3, [r2, #26]
    569e:	0bdb      	lsrs	r3, r3, #15
    56a0:	d00a      	beq.n	56b8 <spi_frequency+0x8c>
    56a2:	2c00      	cmp	r4, #0
    56a4:	d1f9      	bne.n	569a <spi_frequency+0x6e>
    56a6:	2244      	movs	r2, #68	; 0x44
    56a8:	1c30      	adds	r0, r6, #0
    56aa:	1c29      	adds	r1, r5, #0
    56ac:	f7ff f82c 	bl	4708 <mbed_assert_internal>
    56b0:	6822      	ldr	r2, [r4, #0]
    56b2:	8b53      	ldrh	r3, [r2, #26]
    56b4:	0bdb      	lsrs	r3, r3, #15
    56b6:	d1f4      	bne.n	56a2 <spi_frequency+0x76>
    56b8:	6811      	ldr	r1, [r2, #0]
    56ba:	3302      	adds	r3, #2
    56bc:	430b      	orrs	r3, r1
    56be:	6013      	str	r3, [r2, #0]
    56c0:	b003      	add	sp, #12
    56c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    56c4:	2c00      	cmp	r4, #0
    56c6:	d022      	beq.n	570e <spi_frequency+0xe2>
    56c8:	4e14      	ldr	r6, [pc, #80]	; (571c <spi_frequency+0xf0>)
    56ca:	4d15      	ldr	r5, [pc, #84]	; (5720 <spi_frequency+0xf4>)
    56cc:	e003      	b.n	56d6 <spi_frequency+0xaa>
    56ce:	6822      	ldr	r2, [r4, #0]
    56d0:	8b53      	ldrh	r3, [r2, #26]
    56d2:	0bdb      	lsrs	r3, r3, #15
    56d4:	d0f0      	beq.n	56b8 <spi_frequency+0x8c>
    56d6:	2c00      	cmp	r4, #0
    56d8:	d1f9      	bne.n	56ce <spi_frequency+0xa2>
    56da:	1c30      	adds	r0, r6, #0
    56dc:	1c29      	adds	r1, r5, #0
    56de:	2244      	movs	r2, #68	; 0x44
    56e0:	f7ff f812 	bl	4708 <mbed_assert_internal>
    56e4:	e7f3      	b.n	56ce <spi_frequency+0xa2>
    56e6:	22d0      	movs	r2, #208	; 0xd0
    56e8:	4f0c      	ldr	r7, [pc, #48]	; (571c <spi_frequency+0xf0>)
    56ea:	4e0d      	ldr	r6, [pc, #52]	; (5720 <spi_frequency+0xf4>)
    56ec:	1c38      	adds	r0, r7, #0
    56ee:	1c31      	adds	r1, r6, #0
    56f0:	32ff      	adds	r2, #255	; 0xff
    56f2:	f7ff f809 	bl	4708 <mbed_assert_internal>
    56f6:	1c38      	adds	r0, r7, #0
    56f8:	1c31      	adds	r1, r6, #0
    56fa:	225e      	movs	r2, #94	; 0x5e
    56fc:	f7ff f804 	bl	4708 <mbed_assert_internal>
    5700:	e79d      	b.n	563e <spi_frequency+0x12>
    5702:	4806      	ldr	r0, [pc, #24]	; (571c <spi_frequency+0xf0>)
    5704:	4906      	ldr	r1, [pc, #24]	; (5720 <spi_frequency+0xf4>)
    5706:	2252      	movs	r2, #82	; 0x52
    5708:	f7fe fffe 	bl	4708 <mbed_assert_internal>
    570c:	e7c2      	b.n	5694 <spi_frequency+0x68>
    570e:	4803      	ldr	r0, [pc, #12]	; (571c <spi_frequency+0xf0>)
    5710:	4903      	ldr	r1, [pc, #12]	; (5720 <spi_frequency+0xf4>)
    5712:	2252      	movs	r2, #82	; 0x52
    5714:	f7fe fff8 	bl	4708 <mbed_assert_internal>
    5718:	e7d6      	b.n	56c8 <spi_frequency+0x9c>
    571a:	46c0      	nop			; (mov r8, r8)
    571c:	0000d928 	.word	0x0000d928
    5720:	0000e1a8 	.word	0x0000e1a8

00005724 <spi_master_write>:
    5724:	b5f0      	push	{r4, r5, r6, r7, lr}
    5726:	4647      	mov	r7, r8
    5728:	1c04      	adds	r4, r0, #0
    572a:	b480      	push	{r7}
    572c:	1c0e      	adds	r6, r1, #0
    572e:	2800      	cmp	r0, #0
    5730:	d052      	beq.n	57d8 <spi_master_write+0xb4>
    5732:	7a63      	ldrb	r3, [r4, #9]
    5734:	2b05      	cmp	r3, #5
    5736:	d045      	beq.n	57c4 <spi_master_write+0xa0>
    5738:	4b3a      	ldr	r3, [pc, #232]	; (5824 <spi_master_write+0x100>)
    573a:	4f3b      	ldr	r7, [pc, #236]	; (5828 <spi_master_write+0x104>)
    573c:	4698      	mov	r8, r3
    573e:	2501      	movs	r5, #1
    5740:	e003      	b.n	574a <spi_master_write+0x26>
    5742:	6823      	ldr	r3, [r4, #0]
    5744:	7e1a      	ldrb	r2, [r3, #24]
    5746:	4215      	tst	r5, r2
    5748:	d10a      	bne.n	5760 <spi_master_write+0x3c>
    574a:	2c00      	cmp	r4, #0
    574c:	d1f9      	bne.n	5742 <spi_master_write+0x1e>
    574e:	2273      	movs	r2, #115	; 0x73
    5750:	4640      	mov	r0, r8
    5752:	1c39      	adds	r1, r7, #0
    5754:	f7fe ffd8 	bl	4708 <mbed_assert_internal>
    5758:	6823      	ldr	r3, [r4, #0]
    575a:	7e1a      	ldrb	r2, [r3, #24]
    575c:	4215      	tst	r5, r2
    575e:	d0f4      	beq.n	574a <spi_master_write+0x26>
    5760:	2c00      	cmp	r4, #0
    5762:	d043      	beq.n	57ec <spi_master_write+0xc8>
    5764:	7e1a      	ldrb	r2, [r3, #24]
    5766:	07d2      	lsls	r2, r2, #31
    5768:	d503      	bpl.n	5772 <spi_master_write+0x4e>
    576a:	05f6      	lsls	r6, r6, #23
    576c:	0df6      	lsrs	r6, r6, #23
    576e:	629e      	str	r6, [r3, #40]	; 0x28
    5770:	6823      	ldr	r3, [r4, #0]
    5772:	685b      	ldr	r3, [r3, #4]
    5774:	039b      	lsls	r3, r3, #14
    5776:	d525      	bpl.n	57c4 <spi_master_write+0xa0>
    5778:	4f2a      	ldr	r7, [pc, #168]	; (5824 <spi_master_write+0x100>)
    577a:	4e2b      	ldr	r6, [pc, #172]	; (5828 <spi_master_write+0x104>)
    577c:	2504      	movs	r5, #4
    577e:	e003      	b.n	5788 <spi_master_write+0x64>
    5780:	6823      	ldr	r3, [r4, #0]
    5782:	7e1a      	ldrb	r2, [r3, #24]
    5784:	4215      	tst	r5, r2
    5786:	d10a      	bne.n	579e <spi_master_write+0x7a>
    5788:	2c00      	cmp	r4, #0
    578a:	d1f9      	bne.n	5780 <spi_master_write+0x5c>
    578c:	227c      	movs	r2, #124	; 0x7c
    578e:	1c38      	adds	r0, r7, #0
    5790:	1c31      	adds	r1, r6, #0
    5792:	f7fe ffb9 	bl	4708 <mbed_assert_internal>
    5796:	6823      	ldr	r3, [r4, #0]
    5798:	7e1a      	ldrb	r2, [r3, #24]
    579a:	4215      	tst	r5, r2
    579c:	d0f4      	beq.n	5788 <spi_master_write+0x64>
    579e:	2c00      	cmp	r4, #0
    57a0:	d032      	beq.n	5808 <spi_master_write+0xe4>
    57a2:	2204      	movs	r2, #4
    57a4:	7e19      	ldrb	r1, [r3, #24]
    57a6:	2000      	movs	r0, #0
    57a8:	420a      	tst	r2, r1
    57aa:	d00c      	beq.n	57c6 <spi_master_write+0xa2>
    57ac:	8b59      	ldrh	r1, [r3, #26]
    57ae:	420a      	tst	r2, r1
    57b0:	d10c      	bne.n	57cc <spi_master_write+0xa8>
    57b2:	2107      	movs	r1, #7
    57b4:	685a      	ldr	r2, [r3, #4]
    57b6:	400a      	ands	r2, r1
    57b8:	2a01      	cmp	r2, #1
    57ba:	d013      	beq.n	57e4 <spi_master_write+0xc0>
    57bc:	20ff      	movs	r0, #255	; 0xff
    57be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    57c0:	4018      	ands	r0, r3
    57c2:	e000      	b.n	57c6 <spi_master_write+0xa2>
    57c4:	2000      	movs	r0, #0
    57c6:	bc04      	pop	{r2}
    57c8:	4690      	mov	r8, r2
    57ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
    57cc:	8b59      	ldrh	r1, [r3, #26]
    57ce:	430a      	orrs	r2, r1
    57d0:	b292      	uxth	r2, r2
    57d2:	835a      	strh	r2, [r3, #26]
    57d4:	6823      	ldr	r3, [r4, #0]
    57d6:	e7ec      	b.n	57b2 <spi_master_write+0x8e>
    57d8:	4812      	ldr	r0, [pc, #72]	; (5824 <spi_master_write+0x100>)
    57da:	4913      	ldr	r1, [pc, #76]	; (5828 <spi_master_write+0x104>)
    57dc:	4a13      	ldr	r2, [pc, #76]	; (582c <spi_master_write+0x108>)
    57de:	f7fe ff93 	bl	4708 <mbed_assert_internal>
    57e2:	e7a6      	b.n	5732 <spi_master_write+0xe>
    57e4:	6a98      	ldr	r0, [r3, #40]	; 0x28
    57e6:	05c0      	lsls	r0, r0, #23
    57e8:	0dc0      	lsrs	r0, r0, #23
    57ea:	e7ec      	b.n	57c6 <spi_master_write+0xa2>
    57ec:	4f0d      	ldr	r7, [pc, #52]	; (5824 <spi_master_write+0x100>)
    57ee:	4d0e      	ldr	r5, [pc, #56]	; (5828 <spi_master_write+0x104>)
    57f0:	1c38      	adds	r0, r7, #0
    57f2:	1c29      	adds	r1, r5, #0
    57f4:	2285      	movs	r2, #133	; 0x85
    57f6:	f7fe ff87 	bl	4708 <mbed_assert_internal>
    57fa:	1c38      	adds	r0, r7, #0
    57fc:	1c29      	adds	r1, r5, #0
    57fe:	2273      	movs	r2, #115	; 0x73
    5800:	f7fe ff82 	bl	4708 <mbed_assert_internal>
    5804:	6823      	ldr	r3, [r4, #0]
    5806:	e7ad      	b.n	5764 <spi_master_write+0x40>
    5808:	4e06      	ldr	r6, [pc, #24]	; (5824 <spi_master_write+0x100>)
    580a:	4d07      	ldr	r5, [pc, #28]	; (5828 <spi_master_write+0x104>)
    580c:	1c30      	adds	r0, r6, #0
    580e:	1c29      	adds	r1, r5, #0
    5810:	2296      	movs	r2, #150	; 0x96
    5812:	f7fe ff79 	bl	4708 <mbed_assert_internal>
    5816:	1c30      	adds	r0, r6, #0
    5818:	1c29      	adds	r1, r5, #0
    581a:	227c      	movs	r2, #124	; 0x7c
    581c:	f7fe ff74 	bl	4708 <mbed_assert_internal>
    5820:	6823      	ldr	r3, [r4, #0]
    5822:	e7be      	b.n	57a2 <spi_master_write+0x7e>
    5824:	0000d928 	.word	0x0000d928
    5828:	0000e1a8 	.word	0x0000e1a8
    582c:	00000212 	.word	0x00000212

00005830 <_ZN4mbed8FileBaseD1Ev>:
    5830:	4b0a      	ldr	r3, [pc, #40]	; (585c <_ZN4mbed8FileBaseD1Ev+0x2c>)
    5832:	3308      	adds	r3, #8
    5834:	6003      	str	r3, [r0, #0]
    5836:	6883      	ldr	r3, [r0, #8]
    5838:	2b00      	cmp	r3, #0
    583a:	d00a      	beq.n	5852 <_ZN4mbed8FileBaseD1Ev+0x22>
    583c:	4b08      	ldr	r3, [pc, #32]	; (5860 <_ZN4mbed8FileBaseD1Ev+0x30>)
    583e:	681a      	ldr	r2, [r3, #0]
    5840:	4282      	cmp	r2, r0
    5842:	d101      	bne.n	5848 <_ZN4mbed8FileBaseD1Ev+0x18>
    5844:	e006      	b.n	5854 <_ZN4mbed8FileBaseD1Ev+0x24>
    5846:	1c1a      	adds	r2, r3, #0
    5848:	6853      	ldr	r3, [r2, #4]
    584a:	4283      	cmp	r3, r0
    584c:	d1fb      	bne.n	5846 <_ZN4mbed8FileBaseD1Ev+0x16>
    584e:	6843      	ldr	r3, [r0, #4]
    5850:	6053      	str	r3, [r2, #4]
    5852:	4770      	bx	lr
    5854:	6842      	ldr	r2, [r0, #4]
    5856:	601a      	str	r2, [r3, #0]
    5858:	e7fb      	b.n	5852 <_ZN4mbed8FileBaseD1Ev+0x22>
    585a:	46c0      	nop			; (mov r8, r8)
    585c:	0000e220 	.word	0x0000e220
    5860:	2000455c 	.word	0x2000455c

00005864 <_ZN4mbed8FileBaseD0Ev>:
    5864:	4b0d      	ldr	r3, [pc, #52]	; (589c <_ZN4mbed8FileBaseD0Ev+0x38>)
    5866:	b510      	push	{r4, lr}
    5868:	3308      	adds	r3, #8
    586a:	6003      	str	r3, [r0, #0]
    586c:	6883      	ldr	r3, [r0, #8]
    586e:	1c04      	adds	r4, r0, #0
    5870:	2b00      	cmp	r3, #0
    5872:	d00a      	beq.n	588a <_ZN4mbed8FileBaseD0Ev+0x26>
    5874:	4b0a      	ldr	r3, [pc, #40]	; (58a0 <_ZN4mbed8FileBaseD0Ev+0x3c>)
    5876:	681a      	ldr	r2, [r3, #0]
    5878:	4290      	cmp	r0, r2
    587a:	d101      	bne.n	5880 <_ZN4mbed8FileBaseD0Ev+0x1c>
    587c:	e00a      	b.n	5894 <_ZN4mbed8FileBaseD0Ev+0x30>
    587e:	1c1a      	adds	r2, r3, #0
    5880:	6853      	ldr	r3, [r2, #4]
    5882:	429c      	cmp	r4, r3
    5884:	d1fb      	bne.n	587e <_ZN4mbed8FileBaseD0Ev+0x1a>
    5886:	6863      	ldr	r3, [r4, #4]
    5888:	6053      	str	r3, [r2, #4]
    588a:	1c20      	adds	r0, r4, #0
    588c:	f000 fab5 	bl	5dfa <_ZdlPv>
    5890:	1c20      	adds	r0, r4, #0
    5892:	bd10      	pop	{r4, pc}
    5894:	6842      	ldr	r2, [r0, #4]
    5896:	601a      	str	r2, [r3, #0]
    5898:	e7f7      	b.n	588a <_ZN4mbed8FileBaseD0Ev+0x26>
    589a:	46c0      	nop			; (mov r8, r8)
    589c:	0000e220 	.word	0x0000e220
    58a0:	2000455c 	.word	0x2000455c

000058a4 <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE>:
    58a4:	4b06      	ldr	r3, [pc, #24]	; (58c0 <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE+0x1c>)
    58a6:	6081      	str	r1, [r0, #8]
    58a8:	3308      	adds	r3, #8
    58aa:	6003      	str	r3, [r0, #0]
    58ac:	2300      	movs	r3, #0
    58ae:	7302      	strb	r2, [r0, #12]
    58b0:	6043      	str	r3, [r0, #4]
    58b2:	2900      	cmp	r1, #0
    58b4:	d003      	beq.n	58be <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE+0x1a>
    58b6:	4b03      	ldr	r3, [pc, #12]	; (58c4 <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE+0x20>)
    58b8:	681a      	ldr	r2, [r3, #0]
    58ba:	6018      	str	r0, [r3, #0]
    58bc:	6042      	str	r2, [r0, #4]
    58be:	4770      	bx	lr
    58c0:	0000e220 	.word	0x0000e220
    58c4:	2000455c 	.word	0x2000455c

000058c8 <_ZN4mbed8FileBase6lookupEPKcj>:
    58c8:	4b0e      	ldr	r3, [pc, #56]	; (5904 <_ZN4mbed8FileBase6lookupEPKcj+0x3c>)
    58ca:	b570      	push	{r4, r5, r6, lr}
    58cc:	681c      	ldr	r4, [r3, #0]
    58ce:	1c06      	adds	r6, r0, #0
    58d0:	1c0d      	adds	r5, r1, #0
    58d2:	2c00      	cmp	r4, #0
    58d4:	d103      	bne.n	58de <_ZN4mbed8FileBase6lookupEPKcj+0x16>
    58d6:	e012      	b.n	58fe <_ZN4mbed8FileBase6lookupEPKcj+0x36>
    58d8:	6864      	ldr	r4, [r4, #4]
    58da:	2c00      	cmp	r4, #0
    58dc:	d00f      	beq.n	58fe <_ZN4mbed8FileBase6lookupEPKcj+0x36>
    58de:	68a0      	ldr	r0, [r4, #8]
    58e0:	2800      	cmp	r0, #0
    58e2:	d0f9      	beq.n	58d8 <_ZN4mbed8FileBase6lookupEPKcj+0x10>
    58e4:	1c31      	adds	r1, r6, #0
    58e6:	1c2a      	adds	r2, r5, #0
    58e8:	f004 fac9 	bl	9e7e <strncmp>
    58ec:	2800      	cmp	r0, #0
    58ee:	d1f3      	bne.n	58d8 <_ZN4mbed8FileBase6lookupEPKcj+0x10>
    58f0:	68a0      	ldr	r0, [r4, #8]
    58f2:	f004 fabd 	bl	9e70 <strlen>
    58f6:	42a8      	cmp	r0, r5
    58f8:	d1ee      	bne.n	58d8 <_ZN4mbed8FileBase6lookupEPKcj+0x10>
    58fa:	1c20      	adds	r0, r4, #0
    58fc:	e000      	b.n	5900 <_ZN4mbed8FileBase6lookupEPKcj+0x38>
    58fe:	2000      	movs	r0, #0
    5900:	bd70      	pop	{r4, r5, r6, pc}
    5902:	46c0      	nop			; (mov r8, r8)
    5904:	2000455c 	.word	0x2000455c

00005908 <_ZN4mbed8FileBase11getPathTypeEv>:
    5908:	7b00      	ldrb	r0, [r0, #12]
    590a:	4770      	bx	lr

0000590c <_ZN4mbed8FileLikeC1EPKc>:
    590c:	4b07      	ldr	r3, [pc, #28]	; (592c <_ZN4mbed8FileLikeC1EPKc+0x20>)
    590e:	b510      	push	{r4, lr}
    5910:	2200      	movs	r2, #0
    5912:	1c04      	adds	r4, r0, #0
    5914:	c008      	stmia	r0!, {r3}
    5916:	f7ff ffc5 	bl	58a4 <_ZN4mbed8FileBaseC1EPKcNS_8PathTypeE>
    591a:	4b05      	ldr	r3, [pc, #20]	; (5930 <_ZN4mbed8FileLikeC1EPKc+0x24>)
    591c:	1c20      	adds	r0, r4, #0
    591e:	1c1a      	adds	r2, r3, #0
    5920:	3334      	adds	r3, #52	; 0x34
    5922:	3208      	adds	r2, #8
    5924:	6022      	str	r2, [r4, #0]
    5926:	6063      	str	r3, [r4, #4]
    5928:	bd10      	pop	{r4, pc}
    592a:	46c0      	nop			; (mov r8, r8)
    592c:	0000d8e8 	.word	0x0000d8e8
    5930:	0000e230 	.word	0x0000e230

00005934 <_ZN4mbed8FileLikeD1Ev>:
    5934:	4b07      	ldr	r3, [pc, #28]	; (5954 <_ZN4mbed8FileLikeD1Ev+0x20>)
    5936:	b510      	push	{r4, lr}
    5938:	1c1a      	adds	r2, r3, #0
    593a:	1c04      	adds	r4, r0, #0
    593c:	3208      	adds	r2, #8
    593e:	3334      	adds	r3, #52	; 0x34
    5940:	6002      	str	r2, [r0, #0]
    5942:	6043      	str	r3, [r0, #4]
    5944:	3004      	adds	r0, #4
    5946:	f7ff ff73 	bl	5830 <_ZN4mbed8FileBaseD1Ev>
    594a:	1c20      	adds	r0, r4, #0
    594c:	f7fd fdc6 	bl	34dc <_ZN4mbed10FileHandleD1Ev>
    5950:	1c20      	adds	r0, r4, #0
    5952:	bd10      	pop	{r4, pc}
    5954:	0000e230 	.word	0x0000e230

00005958 <us_ticker_irq_handler>:
    5958:	b508      	push	{r3, lr}
    595a:	4802      	ldr	r0, [pc, #8]	; (5964 <us_ticker_irq_handler+0xc>)
    595c:	f000 fa20 	bl	5da0 <ticker_irq_handler>
    5960:	bd08      	pop	{r3, pc}
    5962:	46c0      	nop			; (mov r8, r8)
    5964:	0000e280 	.word	0x0000e280

00005968 <port_pin_set_config>:
    5968:	2280      	movs	r2, #128	; 0x80
    596a:	b500      	push	{lr}
    596c:	b083      	sub	sp, #12
    596e:	ab01      	add	r3, sp, #4
    5970:	701a      	strb	r2, [r3, #0]
    5972:	780a      	ldrb	r2, [r1, #0]
    5974:	705a      	strb	r2, [r3, #1]
    5976:	784a      	ldrb	r2, [r1, #1]
    5978:	709a      	strb	r2, [r3, #2]
    597a:	788a      	ldrb	r2, [r1, #2]
    597c:	1c19      	adds	r1, r3, #0
    597e:	70da      	strb	r2, [r3, #3]
    5980:	f7fe f868 	bl	3a54 <system_pinmux_pin_set_config>
    5984:	b003      	add	sp, #12
    5986:	bd00      	pop	{pc}

00005988 <tc_register_callback>:
    5988:	1c93      	adds	r3, r2, #2
    598a:	009b      	lsls	r3, r3, #2
    598c:	5019      	str	r1, [r3, r0]
    598e:	2a02      	cmp	r2, #2
    5990:	d009      	beq.n	59a6 <tc_register_callback+0x1e>
    5992:	2a03      	cmp	r2, #3
    5994:	d00c      	beq.n	59b0 <tc_register_callback+0x28>
    5996:	2301      	movs	r3, #1
    5998:	4093      	lsls	r3, r2
    599a:	1c1a      	adds	r2, r3, #0
    599c:	7e03      	ldrb	r3, [r0, #24]
    599e:	431a      	orrs	r2, r3
    59a0:	7602      	strb	r2, [r0, #24]
    59a2:	2000      	movs	r0, #0
    59a4:	4770      	bx	lr
    59a6:	2310      	movs	r3, #16
    59a8:	7e02      	ldrb	r2, [r0, #24]
    59aa:	4313      	orrs	r3, r2
    59ac:	7603      	strb	r3, [r0, #24]
    59ae:	e7f8      	b.n	59a2 <tc_register_callback+0x1a>
    59b0:	2320      	movs	r3, #32
    59b2:	7e02      	ldrb	r2, [r0, #24]
    59b4:	4313      	orrs	r3, r2
    59b6:	7603      	strb	r3, [r0, #24]
    59b8:	e7f3      	b.n	59a2 <tc_register_callback+0x1a>
    59ba:	46c0      	nop			; (mov r8, r8)

000059bc <_tc_interrupt_handler>:
    59bc:	b570      	push	{r4, r5, r6, lr}
    59be:	2601      	movs	r6, #1
    59c0:	4b15      	ldr	r3, [pc, #84]	; (5a18 <_tc_interrupt_handler+0x5c>)
    59c2:	0080      	lsls	r0, r0, #2
    59c4:	58c5      	ldr	r5, [r0, r3]
    59c6:	682b      	ldr	r3, [r5, #0]
    59c8:	7e2c      	ldrb	r4, [r5, #24]
    59ca:	7b9b      	ldrb	r3, [r3, #14]
    59cc:	401c      	ands	r4, r3
    59ce:	7e6b      	ldrb	r3, [r5, #25]
    59d0:	401c      	ands	r4, r3
    59d2:	4226      	tst	r6, r4
    59d4:	d11a      	bne.n	5a0c <_tc_interrupt_handler+0x50>
    59d6:	2602      	movs	r6, #2
    59d8:	4226      	tst	r6, r4
    59da:	d111      	bne.n	5a00 <_tc_interrupt_handler+0x44>
    59dc:	2610      	movs	r6, #16
    59de:	4226      	tst	r6, r4
    59e0:	d108      	bne.n	59f4 <_tc_interrupt_handler+0x38>
    59e2:	2620      	movs	r6, #32
    59e4:	4226      	tst	r6, r4
    59e6:	d004      	beq.n	59f2 <_tc_interrupt_handler+0x36>
    59e8:	696b      	ldr	r3, [r5, #20]
    59ea:	1c28      	adds	r0, r5, #0
    59ec:	4798      	blx	r3
    59ee:	682b      	ldr	r3, [r5, #0]
    59f0:	739e      	strb	r6, [r3, #14]
    59f2:	bd70      	pop	{r4, r5, r6, pc}
    59f4:	692b      	ldr	r3, [r5, #16]
    59f6:	1c28      	adds	r0, r5, #0
    59f8:	4798      	blx	r3
    59fa:	682b      	ldr	r3, [r5, #0]
    59fc:	739e      	strb	r6, [r3, #14]
    59fe:	e7f0      	b.n	59e2 <_tc_interrupt_handler+0x26>
    5a00:	68eb      	ldr	r3, [r5, #12]
    5a02:	1c28      	adds	r0, r5, #0
    5a04:	4798      	blx	r3
    5a06:	682b      	ldr	r3, [r5, #0]
    5a08:	739e      	strb	r6, [r3, #14]
    5a0a:	e7e7      	b.n	59dc <_tc_interrupt_handler+0x20>
    5a0c:	68ab      	ldr	r3, [r5, #8]
    5a0e:	1c28      	adds	r0, r5, #0
    5a10:	4798      	blx	r3
    5a12:	682b      	ldr	r3, [r5, #0]
    5a14:	739e      	strb	r6, [r3, #14]
    5a16:	e7de      	b.n	59d6 <_tc_interrupt_handler+0x1a>
    5a18:	20004618 	.word	0x20004618

00005a1c <TC3_Handler>:
    5a1c:	b508      	push	{r3, lr}
    5a1e:	2000      	movs	r0, #0
    5a20:	f7ff ffcc 	bl	59bc <_tc_interrupt_handler>
    5a24:	bd08      	pop	{r3, pc}
    5a26:	46c0      	nop			; (mov r8, r8)

00005a28 <TC4_Handler>:
    5a28:	b508      	push	{r3, lr}
    5a2a:	2001      	movs	r0, #1
    5a2c:	f7ff ffc6 	bl	59bc <_tc_interrupt_handler>
    5a30:	bd08      	pop	{r3, pc}
    5a32:	46c0      	nop			; (mov r8, r8)

00005a34 <TC5_Handler>:
    5a34:	b508      	push	{r3, lr}
    5a36:	2002      	movs	r0, #2
    5a38:	f7ff ffc0 	bl	59bc <_tc_interrupt_handler>
    5a3c:	bd08      	pop	{r3, pc}
    5a3e:	46c0      	nop			; (mov r8, r8)

00005a40 <_tc_get_inst_index>:
    5a40:	4b0e      	ldr	r3, [pc, #56]	; (5a7c <_tc_get_inst_index+0x3c>)
    5a42:	1c01      	adds	r1, r0, #0
    5a44:	1c18      	adds	r0, r3, #0
    5a46:	b570      	push	{r4, r5, r6, lr}
    5a48:	b084      	sub	sp, #16
    5a4a:	aa01      	add	r2, sp, #4
    5a4c:	c870      	ldmia	r0!, {r4, r5, r6}
    5a4e:	c270      	stmia	r2!, {r4, r5, r6}
    5a50:	9a01      	ldr	r2, [sp, #4]
    5a52:	428a      	cmp	r2, r1
    5a54:	d008      	beq.n	5a68 <_tc_get_inst_index+0x28>
    5a56:	685a      	ldr	r2, [r3, #4]
    5a58:	428a      	cmp	r2, r1
    5a5a:	d008      	beq.n	5a6e <_tc_get_inst_index+0x2e>
    5a5c:	689b      	ldr	r3, [r3, #8]
    5a5e:	2000      	movs	r0, #0
    5a60:	428b      	cmp	r3, r1
    5a62:	d007      	beq.n	5a74 <_tc_get_inst_index+0x34>
    5a64:	b004      	add	sp, #16
    5a66:	bd70      	pop	{r4, r5, r6, pc}
    5a68:	2000      	movs	r0, #0
    5a6a:	b2c0      	uxtb	r0, r0
    5a6c:	e7fa      	b.n	5a64 <_tc_get_inst_index+0x24>
    5a6e:	2001      	movs	r0, #1
    5a70:	b2c0      	uxtb	r0, r0
    5a72:	e7f7      	b.n	5a64 <_tc_get_inst_index+0x24>
    5a74:	3002      	adds	r0, #2
    5a76:	b2c0      	uxtb	r0, r0
    5a78:	e7f4      	b.n	5a64 <_tc_get_inst_index+0x24>
    5a7a:	46c0      	nop			; (mov r8, r8)
    5a7c:	0000e288 	.word	0x0000e288

00005a80 <tc_init>:
    5a80:	b5f0      	push	{r4, r5, r6, r7, lr}
    5a82:	4657      	mov	r7, sl
    5a84:	464e      	mov	r6, r9
    5a86:	4645      	mov	r5, r8
    5a88:	4ca3      	ldr	r4, [pc, #652]	; (5d18 <tc_init+0x298>)
    5a8a:	4691      	mov	r9, r2
    5a8c:	1c22      	adds	r2, r4, #0
    5a8e:	b4e0      	push	{r5, r6, r7}
    5a90:	b086      	sub	sp, #24
    5a92:	ab03      	add	r3, sp, #12
    5a94:	1c05      	adds	r5, r0, #0
    5a96:	1c0e      	adds	r6, r1, #0
    5a98:	469a      	mov	sl, r3
    5a9a:	ca83      	ldmia	r2!, {r0, r1, r7}
    5a9c:	c383      	stmia	r3!, {r0, r1, r7}
    5a9e:	9b03      	ldr	r3, [sp, #12]
    5aa0:	429e      	cmp	r6, r3
    5aa2:	d100      	bne.n	5aa6 <tc_init+0x26>
    5aa4:	e10c      	b.n	5cc0 <tc_init+0x240>
    5aa6:	6863      	ldr	r3, [r4, #4]
    5aa8:	429e      	cmp	r6, r3
    5aaa:	d100      	bne.n	5aae <tc_init+0x2e>
    5aac:	e10b      	b.n	5cc6 <tc_init+0x246>
    5aae:	2300      	movs	r3, #0
    5ab0:	4698      	mov	r8, r3
    5ab2:	68a3      	ldr	r3, [r4, #8]
    5ab4:	429e      	cmp	r6, r3
    5ab6:	d100      	bne.n	5aba <tc_init+0x3a>
    5ab8:	e108      	b.n	5ccc <tc_init+0x24c>
    5aba:	1c21      	adds	r1, r4, #0
    5abc:	2203      	movs	r2, #3
    5abe:	310c      	adds	r1, #12
    5ac0:	a801      	add	r0, sp, #4
    5ac2:	f002 fe22 	bl	870a <memcpy>
    5ac6:	1c21      	adds	r1, r4, #0
    5ac8:	2206      	movs	r2, #6
    5aca:	3110      	adds	r1, #16
    5acc:	4650      	mov	r0, sl
    5ace:	f002 fe1c 	bl	870a <memcpy>
    5ad2:	2300      	movs	r3, #0
    5ad4:	60ab      	str	r3, [r5, #8]
    5ad6:	60eb      	str	r3, [r5, #12]
    5ad8:	612b      	str	r3, [r5, #16]
    5ada:	616b      	str	r3, [r5, #20]
    5adc:	762b      	strb	r3, [r5, #24]
    5ade:	766b      	strb	r3, [r5, #25]
    5ae0:	4643      	mov	r3, r8
    5ae2:	4a8e      	ldr	r2, [pc, #568]	; (5d1c <tc_init+0x29c>)
    5ae4:	009b      	lsls	r3, r3, #2
    5ae6:	509d      	str	r5, [r3, r2]
    5ae8:	464b      	mov	r3, r9
    5aea:	602e      	str	r6, [r5, #0]
    5aec:	789b      	ldrb	r3, [r3, #2]
    5aee:	2b08      	cmp	r3, #8
    5af0:	d00b      	beq.n	5b0a <tc_init+0x8a>
    5af2:	712b      	strb	r3, [r5, #4]
    5af4:	8833      	ldrh	r3, [r6, #0]
    5af6:	2201      	movs	r2, #1
    5af8:	2005      	movs	r0, #5
    5afa:	07db      	lsls	r3, r3, #31
    5afc:	d50a      	bpl.n	5b14 <tc_init+0x94>
    5afe:	b006      	add	sp, #24
    5b00:	bc1c      	pop	{r2, r3, r4}
    5b02:	4690      	mov	r8, r2
    5b04:	4699      	mov	r9, r3
    5b06:	46a2      	mov	sl, r4
    5b08:	bdf0      	pop	{r4, r5, r6, r7, pc}
    5b0a:	4642      	mov	r2, r8
    5b0c:	2017      	movs	r0, #23
    5b0e:	07d2      	lsls	r2, r2, #31
    5b10:	d5f5      	bpl.n	5afe <tc_init+0x7e>
    5b12:	e7ee      	b.n	5af2 <tc_init+0x72>
    5b14:	7bf3      	ldrb	r3, [r6, #15]
    5b16:	3017      	adds	r0, #23
    5b18:	06db      	lsls	r3, r3, #27
    5b1a:	d4f0      	bmi.n	5afe <tc_init+0x7e>
    5b1c:	2102      	movs	r1, #2
    5b1e:	8833      	ldrh	r3, [r6, #0]
    5b20:	400b      	ands	r3, r1
    5b22:	d1ec      	bne.n	5afe <tc_init+0x7e>
    5b24:	4649      	mov	r1, r9
    5b26:	7c09      	ldrb	r1, [r1, #16]
    5b28:	2900      	cmp	r1, #0
    5b2a:	d000      	beq.n	5b2e <tc_init+0xae>
    5b2c:	e0d1      	b.n	5cd2 <tc_init+0x252>
    5b2e:	464b      	mov	r3, r9
    5b30:	7f1b      	ldrb	r3, [r3, #28]
    5b32:	2b00      	cmp	r3, #0
    5b34:	d000      	beq.n	5b38 <tc_init+0xb8>
    5b36:	e0d8      	b.n	5cea <tc_init+0x26a>
    5b38:	4641      	mov	r1, r8
    5b3a:	4650      	mov	r0, sl
    5b3c:	4a78      	ldr	r2, [pc, #480]	; (5d20 <tc_init+0x2a0>)
    5b3e:	0049      	lsls	r1, r1, #1
    5b40:	6a13      	ldr	r3, [r2, #32]
    5b42:	5a41      	ldrh	r1, [r0, r1]
    5b44:	430b      	orrs	r3, r1
    5b46:	6213      	str	r3, [r2, #32]
    5b48:	464b      	mov	r3, r9
    5b4a:	789b      	ldrb	r3, [r3, #2]
    5b4c:	2b08      	cmp	r3, #8
    5b4e:	d100      	bne.n	5b52 <tc_init+0xd2>
    5b50:	e0da      	b.n	5d08 <tc_init+0x288>
    5b52:	464b      	mov	r3, r9
    5b54:	466a      	mov	r2, sp
    5b56:	781b      	ldrb	r3, [r3, #0]
    5b58:	4669      	mov	r1, sp
    5b5a:	7013      	strb	r3, [r2, #0]
    5b5c:	466b      	mov	r3, sp
    5b5e:	4642      	mov	r2, r8
    5b60:	3304      	adds	r3, #4
    5b62:	5c9c      	ldrb	r4, [r3, r2]
    5b64:	1c20      	adds	r0, r4, #0
    5b66:	f7fe f87f 	bl	3c68 <system_gclk_chan_set_config>
    5b6a:	1c20      	adds	r0, r4, #0
    5b6c:	f7fe f83e 	bl	3bec <system_gclk_chan_enable>
    5b70:	464b      	mov	r3, r9
    5b72:	464a      	mov	r2, r9
    5b74:	8898      	ldrh	r0, [r3, #4]
    5b76:	891b      	ldrh	r3, [r3, #8]
    5b78:	4303      	orrs	r3, r0
    5b7a:	7990      	ldrb	r0, [r2, #6]
    5b7c:	7892      	ldrb	r2, [r2, #2]
    5b7e:	4310      	orrs	r0, r2
    5b80:	4318      	orrs	r0, r3
    5b82:	464b      	mov	r3, r9
    5b84:	785b      	ldrb	r3, [r3, #1]
    5b86:	2b00      	cmp	r3, #0
    5b88:	d002      	beq.n	5b90 <tc_init+0x110>
    5b8a:	2380      	movs	r3, #128	; 0x80
    5b8c:	011b      	lsls	r3, r3, #4
    5b8e:	4318      	orrs	r0, r3
    5b90:	227f      	movs	r2, #127	; 0x7f
    5b92:	6829      	ldr	r1, [r5, #0]
    5b94:	7bcb      	ldrb	r3, [r1, #15]
    5b96:	4393      	bics	r3, r2
    5b98:	d1fc      	bne.n	5b94 <tc_init+0x114>
    5b9a:	464b      	mov	r3, r9
    5b9c:	8030      	strh	r0, [r6, #0]
    5b9e:	7b58      	ldrb	r0, [r3, #13]
    5ba0:	1e43      	subs	r3, r0, #1
    5ba2:	4198      	sbcs	r0, r3
    5ba4:	464b      	mov	r3, r9
    5ba6:	7b9b      	ldrb	r3, [r3, #14]
    5ba8:	0080      	lsls	r0, r0, #2
    5baa:	2b00      	cmp	r3, #0
    5bac:	d001      	beq.n	5bb2 <tc_init+0x132>
    5bae:	2301      	movs	r3, #1
    5bb0:	4318      	orrs	r0, r3
    5bb2:	227f      	movs	r2, #127	; 0x7f
    5bb4:	6829      	ldr	r1, [r5, #0]
    5bb6:	7bcb      	ldrb	r3, [r1, #15]
    5bb8:	4393      	bics	r3, r2
    5bba:	d1fc      	bne.n	5bb6 <tc_init+0x136>
    5bbc:	33ff      	adds	r3, #255	; 0xff
    5bbe:	7133      	strb	r3, [r6, #4]
    5bc0:	2800      	cmp	r0, #0
    5bc2:	d005      	beq.n	5bd0 <tc_init+0x150>
    5bc4:	227f      	movs	r2, #127	; 0x7f
    5bc6:	6829      	ldr	r1, [r5, #0]
    5bc8:	7bcb      	ldrb	r3, [r1, #15]
    5bca:	4393      	bics	r3, r2
    5bcc:	d1fc      	bne.n	5bc8 <tc_init+0x148>
    5bce:	7170      	strb	r0, [r6, #5]
    5bd0:	464b      	mov	r3, r9
    5bd2:	7a98      	ldrb	r0, [r3, #10]
    5bd4:	7adb      	ldrb	r3, [r3, #11]
    5bd6:	2b00      	cmp	r3, #0
    5bd8:	d001      	beq.n	5bde <tc_init+0x15e>
    5bda:	2310      	movs	r3, #16
    5bdc:	4318      	orrs	r0, r3
    5bde:	464b      	mov	r3, r9
    5be0:	7b1b      	ldrb	r3, [r3, #12]
    5be2:	2b00      	cmp	r3, #0
    5be4:	d001      	beq.n	5bea <tc_init+0x16a>
    5be6:	2320      	movs	r3, #32
    5be8:	4318      	orrs	r0, r3
    5bea:	227f      	movs	r2, #127	; 0x7f
    5bec:	6829      	ldr	r1, [r5, #0]
    5bee:	7bcb      	ldrb	r3, [r1, #15]
    5bf0:	4393      	bics	r3, r2
    5bf2:	d1fc      	bne.n	5bee <tc_init+0x16e>
    5bf4:	217f      	movs	r1, #127	; 0x7f
    5bf6:	71b0      	strb	r0, [r6, #6]
    5bf8:	682a      	ldr	r2, [r5, #0]
    5bfa:	7bd3      	ldrb	r3, [r2, #15]
    5bfc:	438b      	bics	r3, r1
    5bfe:	d1fc      	bne.n	5bfa <tc_init+0x17a>
    5c00:	792b      	ldrb	r3, [r5, #4]
    5c02:	217f      	movs	r1, #127	; 0x7f
    5c04:	2b04      	cmp	r3, #4
    5c06:	d007      	beq.n	5c18 <tc_init+0x198>
    5c08:	217f      	movs	r1, #127	; 0x7f
    5c0a:	2b08      	cmp	r3, #8
    5c0c:	d040      	beq.n	5c90 <tc_init+0x210>
    5c0e:	217f      	movs	r1, #127	; 0x7f
    5c10:	2b00      	cmp	r3, #0
    5c12:	d025      	beq.n	5c60 <tc_init+0x1e0>
    5c14:	2017      	movs	r0, #23
    5c16:	e772      	b.n	5afe <tc_init+0x7e>
    5c18:	7bd3      	ldrb	r3, [r2, #15]
    5c1a:	438b      	bics	r3, r1
    5c1c:	d1fc      	bne.n	5c18 <tc_init+0x198>
    5c1e:	464a      	mov	r2, r9
    5c20:	3328      	adds	r3, #40	; 0x28
    5c22:	5cd3      	ldrb	r3, [r2, r3]
    5c24:	227f      	movs	r2, #127	; 0x7f
    5c26:	7433      	strb	r3, [r6, #16]
    5c28:	6829      	ldr	r1, [r5, #0]
    5c2a:	7bcb      	ldrb	r3, [r1, #15]
    5c2c:	4393      	bics	r3, r2
    5c2e:	d1fc      	bne.n	5c2a <tc_init+0x1aa>
    5c30:	464a      	mov	r2, r9
    5c32:	3329      	adds	r3, #41	; 0x29
    5c34:	5cd3      	ldrb	r3, [r2, r3]
    5c36:	227f      	movs	r2, #127	; 0x7f
    5c38:	7533      	strb	r3, [r6, #20]
    5c3a:	6829      	ldr	r1, [r5, #0]
    5c3c:	7bcb      	ldrb	r3, [r1, #15]
    5c3e:	4393      	bics	r3, r2
    5c40:	d1fc      	bne.n	5c3c <tc_init+0x1bc>
    5c42:	464a      	mov	r2, r9
    5c44:	332a      	adds	r3, #42	; 0x2a
    5c46:	5cd3      	ldrb	r3, [r2, r3]
    5c48:	227f      	movs	r2, #127	; 0x7f
    5c4a:	7633      	strb	r3, [r6, #24]
    5c4c:	6829      	ldr	r1, [r5, #0]
    5c4e:	7bcb      	ldrb	r3, [r1, #15]
    5c50:	4393      	bics	r3, r2
    5c52:	d1fc      	bne.n	5c4e <tc_init+0x1ce>
    5c54:	464a      	mov	r2, r9
    5c56:	332b      	adds	r3, #43	; 0x2b
    5c58:	5cd3      	ldrb	r3, [r2, r3]
    5c5a:	2000      	movs	r0, #0
    5c5c:	7673      	strb	r3, [r6, #25]
    5c5e:	e74e      	b.n	5afe <tc_init+0x7e>
    5c60:	7bd3      	ldrb	r3, [r2, #15]
    5c62:	438b      	bics	r3, r1
    5c64:	d1fc      	bne.n	5c60 <tc_init+0x1e0>
    5c66:	464b      	mov	r3, r9
    5c68:	227f      	movs	r2, #127	; 0x7f
    5c6a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
    5c6c:	8233      	strh	r3, [r6, #16]
    5c6e:	6829      	ldr	r1, [r5, #0]
    5c70:	7bcb      	ldrb	r3, [r1, #15]
    5c72:	4393      	bics	r3, r2
    5c74:	d1fc      	bne.n	5c70 <tc_init+0x1f0>
    5c76:	464b      	mov	r3, r9
    5c78:	227f      	movs	r2, #127	; 0x7f
    5c7a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
    5c7c:	8333      	strh	r3, [r6, #24]
    5c7e:	6829      	ldr	r1, [r5, #0]
    5c80:	7bcb      	ldrb	r3, [r1, #15]
    5c82:	4393      	bics	r3, r2
    5c84:	d1fc      	bne.n	5c80 <tc_init+0x200>
    5c86:	464b      	mov	r3, r9
    5c88:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
    5c8a:	2000      	movs	r0, #0
    5c8c:	8373      	strh	r3, [r6, #26]
    5c8e:	e736      	b.n	5afe <tc_init+0x7e>
    5c90:	7bd3      	ldrb	r3, [r2, #15]
    5c92:	438b      	bics	r3, r1
    5c94:	d1fc      	bne.n	5c90 <tc_init+0x210>
    5c96:	464b      	mov	r3, r9
    5c98:	227f      	movs	r2, #127	; 0x7f
    5c9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    5c9c:	6133      	str	r3, [r6, #16]
    5c9e:	6829      	ldr	r1, [r5, #0]
    5ca0:	7bcb      	ldrb	r3, [r1, #15]
    5ca2:	4393      	bics	r3, r2
    5ca4:	d1fc      	bne.n	5ca0 <tc_init+0x220>
    5ca6:	464b      	mov	r3, r9
    5ca8:	227f      	movs	r2, #127	; 0x7f
    5caa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    5cac:	61b3      	str	r3, [r6, #24]
    5cae:	6829      	ldr	r1, [r5, #0]
    5cb0:	7bcb      	ldrb	r3, [r1, #15]
    5cb2:	4393      	bics	r3, r2
    5cb4:	d1fc      	bne.n	5cb0 <tc_init+0x230>
    5cb6:	464b      	mov	r3, r9
    5cb8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    5cba:	2000      	movs	r0, #0
    5cbc:	61f3      	str	r3, [r6, #28]
    5cbe:	e71e      	b.n	5afe <tc_init+0x7e>
    5cc0:	2300      	movs	r3, #0
    5cc2:	4698      	mov	r8, r3
    5cc4:	e6f9      	b.n	5aba <tc_init+0x3a>
    5cc6:	2301      	movs	r3, #1
    5cc8:	4698      	mov	r8, r3
    5cca:	e6f6      	b.n	5aba <tc_init+0x3a>
    5ccc:	2302      	movs	r3, #2
    5cce:	4698      	mov	r8, r3
    5cd0:	e6f3      	b.n	5aba <tc_init+0x3a>
    5cd2:	a902      	add	r1, sp, #8
    5cd4:	70cb      	strb	r3, [r1, #3]
    5cd6:	464b      	mov	r3, r9
    5cd8:	7e1b      	ldrb	r3, [r3, #24]
    5cda:	708a      	strb	r2, [r1, #2]
    5cdc:	700b      	strb	r3, [r1, #0]
    5cde:	464b      	mov	r3, r9
    5ce0:	7d18      	ldrb	r0, [r3, #20]
    5ce2:	704a      	strb	r2, [r1, #1]
    5ce4:	f7fd feb6 	bl	3a54 <system_pinmux_pin_set_config>
    5ce8:	e721      	b.n	5b2e <tc_init+0xae>
    5cea:	2301      	movs	r3, #1
    5cec:	2200      	movs	r2, #0
    5cee:	a902      	add	r1, sp, #8
    5cf0:	708b      	strb	r3, [r1, #2]
    5cf2:	704b      	strb	r3, [r1, #1]
    5cf4:	464b      	mov	r3, r9
    5cf6:	70ca      	strb	r2, [r1, #3]
    5cf8:	464a      	mov	r2, r9
    5cfa:	6a1b      	ldr	r3, [r3, #32]
    5cfc:	6a52      	ldr	r2, [r2, #36]	; 0x24
    5cfe:	b2d8      	uxtb	r0, r3
    5d00:	700a      	strb	r2, [r1, #0]
    5d02:	f7fd fea7 	bl	3a54 <system_pinmux_pin_set_config>
    5d06:	e717      	b.n	5b38 <tc_init+0xb8>
    5d08:	4641      	mov	r1, r8
    5d0a:	3101      	adds	r1, #1
    5d0c:	0049      	lsls	r1, r1, #1
    5d0e:	6a13      	ldr	r3, [r2, #32]
    5d10:	5a41      	ldrh	r1, [r0, r1]
    5d12:	430b      	orrs	r3, r1
    5d14:	6213      	str	r3, [r2, #32]
    5d16:	e71c      	b.n	5b52 <tc_init+0xd2>
    5d18:	0000e288 	.word	0x0000e288
    5d1c:	20004618 	.word	0x20004618
    5d20:	40000400 	.word	0x40000400

00005d24 <tc_get_count_value>:
    5d24:	217f      	movs	r1, #127	; 0x7f
    5d26:	6802      	ldr	r2, [r0, #0]
    5d28:	7bd3      	ldrb	r3, [r2, #15]
    5d2a:	438b      	bics	r3, r1
    5d2c:	d1fc      	bne.n	5d28 <tc_get_count_value+0x4>
    5d2e:	7903      	ldrb	r3, [r0, #4]
    5d30:	2b04      	cmp	r3, #4
    5d32:	d00a      	beq.n	5d4a <tc_get_count_value+0x26>
    5d34:	2b08      	cmp	r3, #8
    5d36:	d006      	beq.n	5d46 <tc_get_count_value+0x22>
    5d38:	2000      	movs	r0, #0
    5d3a:	2b00      	cmp	r3, #0
    5d3c:	d000      	beq.n	5d40 <tc_get_count_value+0x1c>
    5d3e:	4770      	bx	lr
    5d40:	8a10      	ldrh	r0, [r2, #16]
    5d42:	b280      	uxth	r0, r0
    5d44:	e7fb      	b.n	5d3e <tc_get_count_value+0x1a>
    5d46:	6910      	ldr	r0, [r2, #16]
    5d48:	e7f9      	b.n	5d3e <tc_get_count_value+0x1a>
    5d4a:	7c10      	ldrb	r0, [r2, #16]
    5d4c:	b2c0      	uxtb	r0, r0
    5d4e:	e7f6      	b.n	5d3e <tc_get_count_value+0x1a>

00005d50 <tc_set_compare_value>:
    5d50:	b530      	push	{r4, r5, lr}
    5d52:	257f      	movs	r5, #127	; 0x7f
    5d54:	6804      	ldr	r4, [r0, #0]
    5d56:	7be3      	ldrb	r3, [r4, #15]
    5d58:	43ab      	bics	r3, r5
    5d5a:	d1fc      	bne.n	5d56 <tc_set_compare_value+0x6>
    5d5c:	7903      	ldrb	r3, [r0, #4]
    5d5e:	2b04      	cmp	r3, #4
    5d60:	d016      	beq.n	5d90 <tc_set_compare_value+0x40>
    5d62:	2b08      	cmp	r3, #8
    5d64:	d00c      	beq.n	5d80 <tc_set_compare_value+0x30>
    5d66:	2017      	movs	r0, #23
    5d68:	2b00      	cmp	r3, #0
    5d6a:	d000      	beq.n	5d6e <tc_set_compare_value+0x1e>
    5d6c:	bd30      	pop	{r4, r5, pc}
    5d6e:	2017      	movs	r0, #23
    5d70:	2901      	cmp	r1, #1
    5d72:	d8fb      	bhi.n	5d6c <tc_set_compare_value+0x1c>
    5d74:	310c      	adds	r1, #12
    5d76:	b292      	uxth	r2, r2
    5d78:	0049      	lsls	r1, r1, #1
    5d7a:	530a      	strh	r2, [r1, r4]
    5d7c:	2000      	movs	r0, #0
    5d7e:	e7f5      	b.n	5d6c <tc_set_compare_value+0x1c>
    5d80:	2017      	movs	r0, #23
    5d82:	2901      	cmp	r1, #1
    5d84:	d8f2      	bhi.n	5d6c <tc_set_compare_value+0x1c>
    5d86:	3106      	adds	r1, #6
    5d88:	0089      	lsls	r1, r1, #2
    5d8a:	510a      	str	r2, [r1, r4]
    5d8c:	2000      	movs	r0, #0
    5d8e:	e7ed      	b.n	5d6c <tc_set_compare_value+0x1c>
    5d90:	2017      	movs	r0, #23
    5d92:	2901      	cmp	r1, #1
    5d94:	d8ea      	bhi.n	5d6c <tc_set_compare_value+0x1c>
    5d96:	b2d2      	uxtb	r2, r2
    5d98:	1861      	adds	r1, r4, r1
    5d9a:	760a      	strb	r2, [r1, #24]
    5d9c:	2000      	movs	r0, #0
    5d9e:	e7e5      	b.n	5d6c <tc_set_compare_value+0x1c>

00005da0 <ticker_irq_handler>:
    5da0:	b538      	push	{r3, r4, r5, lr}
    5da2:	6803      	ldr	r3, [r0, #0]
    5da4:	1c05      	adds	r5, r0, #0
    5da6:	68db      	ldr	r3, [r3, #12]
    5da8:	4798      	blx	r3
    5daa:	686b      	ldr	r3, [r5, #4]
    5dac:	685b      	ldr	r3, [r3, #4]
    5dae:	e00d      	b.n	5dcc <ticker_irq_handler+0x2c>
    5db0:	681c      	ldr	r4, [r3, #0]
    5db2:	682b      	ldr	r3, [r5, #0]
    5db4:	685b      	ldr	r3, [r3, #4]
    5db6:	4798      	blx	r3
    5db8:	1a24      	subs	r4, r4, r0
    5dba:	2c00      	cmp	r4, #0
    5dbc:	dc0c      	bgt.n	5dd8 <ticker_irq_handler+0x38>
    5dbe:	686a      	ldr	r2, [r5, #4]
    5dc0:	6851      	ldr	r1, [r2, #4]
    5dc2:	688b      	ldr	r3, [r1, #8]
    5dc4:	6053      	str	r3, [r2, #4]
    5dc6:	6812      	ldr	r2, [r2, #0]
    5dc8:	2a00      	cmp	r2, #0
    5dca:	d10c      	bne.n	5de6 <ticker_irq_handler+0x46>
    5dcc:	2b00      	cmp	r3, #0
    5dce:	d1ef      	bne.n	5db0 <ticker_irq_handler+0x10>
    5dd0:	682b      	ldr	r3, [r5, #0]
    5dd2:	689b      	ldr	r3, [r3, #8]
    5dd4:	4798      	blx	r3
    5dd6:	bd38      	pop	{r3, r4, r5, pc}
    5dd8:	686a      	ldr	r2, [r5, #4]
    5dda:	682b      	ldr	r3, [r5, #0]
    5ddc:	6852      	ldr	r2, [r2, #4]
    5dde:	691b      	ldr	r3, [r3, #16]
    5de0:	6810      	ldr	r0, [r2, #0]
    5de2:	4798      	blx	r3
    5de4:	e7f7      	b.n	5dd6 <ticker_irq_handler+0x36>
    5de6:	6848      	ldr	r0, [r1, #4]
    5de8:	4790      	blx	r2
    5dea:	e7de      	b.n	5daa <ticker_irq_handler+0xa>

00005dec <__aeabi_atexit>:
    5dec:	b508      	push	{r3, lr}
    5dee:	1c03      	adds	r3, r0, #0
    5df0:	1c08      	adds	r0, r1, #0
    5df2:	1c19      	adds	r1, r3, #0
    5df4:	f002 f8da 	bl	7fac <__cxa_atexit>
    5df8:	bd08      	pop	{r3, pc}

00005dfa <_ZdlPv>:
    5dfa:	b508      	push	{r3, lr}
    5dfc:	f002 fc70 	bl	86e0 <free>
    5e00:	bd08      	pop	{r3, pc}
	...

00005e04 <__aeabi_uidiv>:
    5e04:	2200      	movs	r2, #0
    5e06:	0843      	lsrs	r3, r0, #1
    5e08:	428b      	cmp	r3, r1
    5e0a:	d374      	bcc.n	5ef6 <__aeabi_uidiv+0xf2>
    5e0c:	0903      	lsrs	r3, r0, #4
    5e0e:	428b      	cmp	r3, r1
    5e10:	d35f      	bcc.n	5ed2 <__aeabi_uidiv+0xce>
    5e12:	0a03      	lsrs	r3, r0, #8
    5e14:	428b      	cmp	r3, r1
    5e16:	d344      	bcc.n	5ea2 <__aeabi_uidiv+0x9e>
    5e18:	0b03      	lsrs	r3, r0, #12
    5e1a:	428b      	cmp	r3, r1
    5e1c:	d328      	bcc.n	5e70 <__aeabi_uidiv+0x6c>
    5e1e:	0c03      	lsrs	r3, r0, #16
    5e20:	428b      	cmp	r3, r1
    5e22:	d30d      	bcc.n	5e40 <__aeabi_uidiv+0x3c>
    5e24:	22ff      	movs	r2, #255	; 0xff
    5e26:	0209      	lsls	r1, r1, #8
    5e28:	ba12      	rev	r2, r2
    5e2a:	0c03      	lsrs	r3, r0, #16
    5e2c:	428b      	cmp	r3, r1
    5e2e:	d302      	bcc.n	5e36 <__aeabi_uidiv+0x32>
    5e30:	1212      	asrs	r2, r2, #8
    5e32:	0209      	lsls	r1, r1, #8
    5e34:	d065      	beq.n	5f02 <__aeabi_uidiv+0xfe>
    5e36:	0b03      	lsrs	r3, r0, #12
    5e38:	428b      	cmp	r3, r1
    5e3a:	d319      	bcc.n	5e70 <__aeabi_uidiv+0x6c>
    5e3c:	e000      	b.n	5e40 <__aeabi_uidiv+0x3c>
    5e3e:	0a09      	lsrs	r1, r1, #8
    5e40:	0bc3      	lsrs	r3, r0, #15
    5e42:	428b      	cmp	r3, r1
    5e44:	d301      	bcc.n	5e4a <__aeabi_uidiv+0x46>
    5e46:	03cb      	lsls	r3, r1, #15
    5e48:	1ac0      	subs	r0, r0, r3
    5e4a:	4152      	adcs	r2, r2
    5e4c:	0b83      	lsrs	r3, r0, #14
    5e4e:	428b      	cmp	r3, r1
    5e50:	d301      	bcc.n	5e56 <__aeabi_uidiv+0x52>
    5e52:	038b      	lsls	r3, r1, #14
    5e54:	1ac0      	subs	r0, r0, r3
    5e56:	4152      	adcs	r2, r2
    5e58:	0b43      	lsrs	r3, r0, #13
    5e5a:	428b      	cmp	r3, r1
    5e5c:	d301      	bcc.n	5e62 <__aeabi_uidiv+0x5e>
    5e5e:	034b      	lsls	r3, r1, #13
    5e60:	1ac0      	subs	r0, r0, r3
    5e62:	4152      	adcs	r2, r2
    5e64:	0b03      	lsrs	r3, r0, #12
    5e66:	428b      	cmp	r3, r1
    5e68:	d301      	bcc.n	5e6e <__aeabi_uidiv+0x6a>
    5e6a:	030b      	lsls	r3, r1, #12
    5e6c:	1ac0      	subs	r0, r0, r3
    5e6e:	4152      	adcs	r2, r2
    5e70:	0ac3      	lsrs	r3, r0, #11
    5e72:	428b      	cmp	r3, r1
    5e74:	d301      	bcc.n	5e7a <__aeabi_uidiv+0x76>
    5e76:	02cb      	lsls	r3, r1, #11
    5e78:	1ac0      	subs	r0, r0, r3
    5e7a:	4152      	adcs	r2, r2
    5e7c:	0a83      	lsrs	r3, r0, #10
    5e7e:	428b      	cmp	r3, r1
    5e80:	d301      	bcc.n	5e86 <__aeabi_uidiv+0x82>
    5e82:	028b      	lsls	r3, r1, #10
    5e84:	1ac0      	subs	r0, r0, r3
    5e86:	4152      	adcs	r2, r2
    5e88:	0a43      	lsrs	r3, r0, #9
    5e8a:	428b      	cmp	r3, r1
    5e8c:	d301      	bcc.n	5e92 <__aeabi_uidiv+0x8e>
    5e8e:	024b      	lsls	r3, r1, #9
    5e90:	1ac0      	subs	r0, r0, r3
    5e92:	4152      	adcs	r2, r2
    5e94:	0a03      	lsrs	r3, r0, #8
    5e96:	428b      	cmp	r3, r1
    5e98:	d301      	bcc.n	5e9e <__aeabi_uidiv+0x9a>
    5e9a:	020b      	lsls	r3, r1, #8
    5e9c:	1ac0      	subs	r0, r0, r3
    5e9e:	4152      	adcs	r2, r2
    5ea0:	d2cd      	bcs.n	5e3e <__aeabi_uidiv+0x3a>
    5ea2:	09c3      	lsrs	r3, r0, #7
    5ea4:	428b      	cmp	r3, r1
    5ea6:	d301      	bcc.n	5eac <__aeabi_uidiv+0xa8>
    5ea8:	01cb      	lsls	r3, r1, #7
    5eaa:	1ac0      	subs	r0, r0, r3
    5eac:	4152      	adcs	r2, r2
    5eae:	0983      	lsrs	r3, r0, #6
    5eb0:	428b      	cmp	r3, r1
    5eb2:	d301      	bcc.n	5eb8 <__aeabi_uidiv+0xb4>
    5eb4:	018b      	lsls	r3, r1, #6
    5eb6:	1ac0      	subs	r0, r0, r3
    5eb8:	4152      	adcs	r2, r2
    5eba:	0943      	lsrs	r3, r0, #5
    5ebc:	428b      	cmp	r3, r1
    5ebe:	d301      	bcc.n	5ec4 <__aeabi_uidiv+0xc0>
    5ec0:	014b      	lsls	r3, r1, #5
    5ec2:	1ac0      	subs	r0, r0, r3
    5ec4:	4152      	adcs	r2, r2
    5ec6:	0903      	lsrs	r3, r0, #4
    5ec8:	428b      	cmp	r3, r1
    5eca:	d301      	bcc.n	5ed0 <__aeabi_uidiv+0xcc>
    5ecc:	010b      	lsls	r3, r1, #4
    5ece:	1ac0      	subs	r0, r0, r3
    5ed0:	4152      	adcs	r2, r2
    5ed2:	08c3      	lsrs	r3, r0, #3
    5ed4:	428b      	cmp	r3, r1
    5ed6:	d301      	bcc.n	5edc <__aeabi_uidiv+0xd8>
    5ed8:	00cb      	lsls	r3, r1, #3
    5eda:	1ac0      	subs	r0, r0, r3
    5edc:	4152      	adcs	r2, r2
    5ede:	0883      	lsrs	r3, r0, #2
    5ee0:	428b      	cmp	r3, r1
    5ee2:	d301      	bcc.n	5ee8 <__aeabi_uidiv+0xe4>
    5ee4:	008b      	lsls	r3, r1, #2
    5ee6:	1ac0      	subs	r0, r0, r3
    5ee8:	4152      	adcs	r2, r2
    5eea:	0843      	lsrs	r3, r0, #1
    5eec:	428b      	cmp	r3, r1
    5eee:	d301      	bcc.n	5ef4 <__aeabi_uidiv+0xf0>
    5ef0:	004b      	lsls	r3, r1, #1
    5ef2:	1ac0      	subs	r0, r0, r3
    5ef4:	4152      	adcs	r2, r2
    5ef6:	1a41      	subs	r1, r0, r1
    5ef8:	d200      	bcs.n	5efc <__aeabi_uidiv+0xf8>
    5efa:	4601      	mov	r1, r0
    5efc:	4152      	adcs	r2, r2
    5efe:	4610      	mov	r0, r2
    5f00:	4770      	bx	lr
    5f02:	e7ff      	b.n	5f04 <__aeabi_uidiv+0x100>
    5f04:	b501      	push	{r0, lr}
    5f06:	2000      	movs	r0, #0
    5f08:	f000 f8fc 	bl	6104 <__aeabi_idiv0>
    5f0c:	bd02      	pop	{r1, pc}
    5f0e:	46c0      	nop			; (mov r8, r8)

00005f10 <__aeabi_uidivmod>:
    5f10:	2900      	cmp	r1, #0
    5f12:	d0f7      	beq.n	5f04 <__aeabi_uidiv+0x100>
    5f14:	b503      	push	{r0, r1, lr}
    5f16:	f7ff ff75 	bl	5e04 <__aeabi_uidiv>
    5f1a:	bc0e      	pop	{r1, r2, r3}
    5f1c:	4342      	muls	r2, r0
    5f1e:	1a89      	subs	r1, r1, r2
    5f20:	4718      	bx	r3
    5f22:	46c0      	nop			; (mov r8, r8)

00005f24 <__aeabi_idiv>:
    5f24:	4603      	mov	r3, r0
    5f26:	430b      	orrs	r3, r1
    5f28:	d47f      	bmi.n	602a <__aeabi_idiv+0x106>
    5f2a:	2200      	movs	r2, #0
    5f2c:	0843      	lsrs	r3, r0, #1
    5f2e:	428b      	cmp	r3, r1
    5f30:	d374      	bcc.n	601c <__aeabi_idiv+0xf8>
    5f32:	0903      	lsrs	r3, r0, #4
    5f34:	428b      	cmp	r3, r1
    5f36:	d35f      	bcc.n	5ff8 <__aeabi_idiv+0xd4>
    5f38:	0a03      	lsrs	r3, r0, #8
    5f3a:	428b      	cmp	r3, r1
    5f3c:	d344      	bcc.n	5fc8 <__aeabi_idiv+0xa4>
    5f3e:	0b03      	lsrs	r3, r0, #12
    5f40:	428b      	cmp	r3, r1
    5f42:	d328      	bcc.n	5f96 <__aeabi_idiv+0x72>
    5f44:	0c03      	lsrs	r3, r0, #16
    5f46:	428b      	cmp	r3, r1
    5f48:	d30d      	bcc.n	5f66 <__aeabi_idiv+0x42>
    5f4a:	22ff      	movs	r2, #255	; 0xff
    5f4c:	0209      	lsls	r1, r1, #8
    5f4e:	ba12      	rev	r2, r2
    5f50:	0c03      	lsrs	r3, r0, #16
    5f52:	428b      	cmp	r3, r1
    5f54:	d302      	bcc.n	5f5c <__aeabi_idiv+0x38>
    5f56:	1212      	asrs	r2, r2, #8
    5f58:	0209      	lsls	r1, r1, #8
    5f5a:	d065      	beq.n	6028 <__aeabi_idiv+0x104>
    5f5c:	0b03      	lsrs	r3, r0, #12
    5f5e:	428b      	cmp	r3, r1
    5f60:	d319      	bcc.n	5f96 <__aeabi_idiv+0x72>
    5f62:	e000      	b.n	5f66 <__aeabi_idiv+0x42>
    5f64:	0a09      	lsrs	r1, r1, #8
    5f66:	0bc3      	lsrs	r3, r0, #15
    5f68:	428b      	cmp	r3, r1
    5f6a:	d301      	bcc.n	5f70 <__aeabi_idiv+0x4c>
    5f6c:	03cb      	lsls	r3, r1, #15
    5f6e:	1ac0      	subs	r0, r0, r3
    5f70:	4152      	adcs	r2, r2
    5f72:	0b83      	lsrs	r3, r0, #14
    5f74:	428b      	cmp	r3, r1
    5f76:	d301      	bcc.n	5f7c <__aeabi_idiv+0x58>
    5f78:	038b      	lsls	r3, r1, #14
    5f7a:	1ac0      	subs	r0, r0, r3
    5f7c:	4152      	adcs	r2, r2
    5f7e:	0b43      	lsrs	r3, r0, #13
    5f80:	428b      	cmp	r3, r1
    5f82:	d301      	bcc.n	5f88 <__aeabi_idiv+0x64>
    5f84:	034b      	lsls	r3, r1, #13
    5f86:	1ac0      	subs	r0, r0, r3
    5f88:	4152      	adcs	r2, r2
    5f8a:	0b03      	lsrs	r3, r0, #12
    5f8c:	428b      	cmp	r3, r1
    5f8e:	d301      	bcc.n	5f94 <__aeabi_idiv+0x70>
    5f90:	030b      	lsls	r3, r1, #12
    5f92:	1ac0      	subs	r0, r0, r3
    5f94:	4152      	adcs	r2, r2
    5f96:	0ac3      	lsrs	r3, r0, #11
    5f98:	428b      	cmp	r3, r1
    5f9a:	d301      	bcc.n	5fa0 <__aeabi_idiv+0x7c>
    5f9c:	02cb      	lsls	r3, r1, #11
    5f9e:	1ac0      	subs	r0, r0, r3
    5fa0:	4152      	adcs	r2, r2
    5fa2:	0a83      	lsrs	r3, r0, #10
    5fa4:	428b      	cmp	r3, r1
    5fa6:	d301      	bcc.n	5fac <__aeabi_idiv+0x88>
    5fa8:	028b      	lsls	r3, r1, #10
    5faa:	1ac0      	subs	r0, r0, r3
    5fac:	4152      	adcs	r2, r2
    5fae:	0a43      	lsrs	r3, r0, #9
    5fb0:	428b      	cmp	r3, r1
    5fb2:	d301      	bcc.n	5fb8 <__aeabi_idiv+0x94>
    5fb4:	024b      	lsls	r3, r1, #9
    5fb6:	1ac0      	subs	r0, r0, r3
    5fb8:	4152      	adcs	r2, r2
    5fba:	0a03      	lsrs	r3, r0, #8
    5fbc:	428b      	cmp	r3, r1
    5fbe:	d301      	bcc.n	5fc4 <__aeabi_idiv+0xa0>
    5fc0:	020b      	lsls	r3, r1, #8
    5fc2:	1ac0      	subs	r0, r0, r3
    5fc4:	4152      	adcs	r2, r2
    5fc6:	d2cd      	bcs.n	5f64 <__aeabi_idiv+0x40>
    5fc8:	09c3      	lsrs	r3, r0, #7
    5fca:	428b      	cmp	r3, r1
    5fcc:	d301      	bcc.n	5fd2 <__aeabi_idiv+0xae>
    5fce:	01cb      	lsls	r3, r1, #7
    5fd0:	1ac0      	subs	r0, r0, r3
    5fd2:	4152      	adcs	r2, r2
    5fd4:	0983      	lsrs	r3, r0, #6
    5fd6:	428b      	cmp	r3, r1
    5fd8:	d301      	bcc.n	5fde <__aeabi_idiv+0xba>
    5fda:	018b      	lsls	r3, r1, #6
    5fdc:	1ac0      	subs	r0, r0, r3
    5fde:	4152      	adcs	r2, r2
    5fe0:	0943      	lsrs	r3, r0, #5
    5fe2:	428b      	cmp	r3, r1
    5fe4:	d301      	bcc.n	5fea <__aeabi_idiv+0xc6>
    5fe6:	014b      	lsls	r3, r1, #5
    5fe8:	1ac0      	subs	r0, r0, r3
    5fea:	4152      	adcs	r2, r2
    5fec:	0903      	lsrs	r3, r0, #4
    5fee:	428b      	cmp	r3, r1
    5ff0:	d301      	bcc.n	5ff6 <__aeabi_idiv+0xd2>
    5ff2:	010b      	lsls	r3, r1, #4
    5ff4:	1ac0      	subs	r0, r0, r3
    5ff6:	4152      	adcs	r2, r2
    5ff8:	08c3      	lsrs	r3, r0, #3
    5ffa:	428b      	cmp	r3, r1
    5ffc:	d301      	bcc.n	6002 <__aeabi_idiv+0xde>
    5ffe:	00cb      	lsls	r3, r1, #3
    6000:	1ac0      	subs	r0, r0, r3
    6002:	4152      	adcs	r2, r2
    6004:	0883      	lsrs	r3, r0, #2
    6006:	428b      	cmp	r3, r1
    6008:	d301      	bcc.n	600e <__aeabi_idiv+0xea>
    600a:	008b      	lsls	r3, r1, #2
    600c:	1ac0      	subs	r0, r0, r3
    600e:	4152      	adcs	r2, r2
    6010:	0843      	lsrs	r3, r0, #1
    6012:	428b      	cmp	r3, r1
    6014:	d301      	bcc.n	601a <__aeabi_idiv+0xf6>
    6016:	004b      	lsls	r3, r1, #1
    6018:	1ac0      	subs	r0, r0, r3
    601a:	4152      	adcs	r2, r2
    601c:	1a41      	subs	r1, r0, r1
    601e:	d200      	bcs.n	6022 <__aeabi_idiv+0xfe>
    6020:	4601      	mov	r1, r0
    6022:	4152      	adcs	r2, r2
    6024:	4610      	mov	r0, r2
    6026:	4770      	bx	lr
    6028:	e05d      	b.n	60e6 <__aeabi_idiv+0x1c2>
    602a:	0fca      	lsrs	r2, r1, #31
    602c:	d000      	beq.n	6030 <__aeabi_idiv+0x10c>
    602e:	4249      	negs	r1, r1
    6030:	1003      	asrs	r3, r0, #32
    6032:	d300      	bcc.n	6036 <__aeabi_idiv+0x112>
    6034:	4240      	negs	r0, r0
    6036:	4053      	eors	r3, r2
    6038:	2200      	movs	r2, #0
    603a:	469c      	mov	ip, r3
    603c:	0903      	lsrs	r3, r0, #4
    603e:	428b      	cmp	r3, r1
    6040:	d32d      	bcc.n	609e <__aeabi_idiv+0x17a>
    6042:	0a03      	lsrs	r3, r0, #8
    6044:	428b      	cmp	r3, r1
    6046:	d312      	bcc.n	606e <__aeabi_idiv+0x14a>
    6048:	22fc      	movs	r2, #252	; 0xfc
    604a:	0189      	lsls	r1, r1, #6
    604c:	ba12      	rev	r2, r2
    604e:	0a03      	lsrs	r3, r0, #8
    6050:	428b      	cmp	r3, r1
    6052:	d30c      	bcc.n	606e <__aeabi_idiv+0x14a>
    6054:	0189      	lsls	r1, r1, #6
    6056:	1192      	asrs	r2, r2, #6
    6058:	428b      	cmp	r3, r1
    605a:	d308      	bcc.n	606e <__aeabi_idiv+0x14a>
    605c:	0189      	lsls	r1, r1, #6
    605e:	1192      	asrs	r2, r2, #6
    6060:	428b      	cmp	r3, r1
    6062:	d304      	bcc.n	606e <__aeabi_idiv+0x14a>
    6064:	0189      	lsls	r1, r1, #6
    6066:	d03a      	beq.n	60de <__aeabi_idiv+0x1ba>
    6068:	1192      	asrs	r2, r2, #6
    606a:	e000      	b.n	606e <__aeabi_idiv+0x14a>
    606c:	0989      	lsrs	r1, r1, #6
    606e:	09c3      	lsrs	r3, r0, #7
    6070:	428b      	cmp	r3, r1
    6072:	d301      	bcc.n	6078 <__aeabi_idiv+0x154>
    6074:	01cb      	lsls	r3, r1, #7
    6076:	1ac0      	subs	r0, r0, r3
    6078:	4152      	adcs	r2, r2
    607a:	0983      	lsrs	r3, r0, #6
    607c:	428b      	cmp	r3, r1
    607e:	d301      	bcc.n	6084 <__aeabi_idiv+0x160>
    6080:	018b      	lsls	r3, r1, #6
    6082:	1ac0      	subs	r0, r0, r3
    6084:	4152      	adcs	r2, r2
    6086:	0943      	lsrs	r3, r0, #5
    6088:	428b      	cmp	r3, r1
    608a:	d301      	bcc.n	6090 <__aeabi_idiv+0x16c>
    608c:	014b      	lsls	r3, r1, #5
    608e:	1ac0      	subs	r0, r0, r3
    6090:	4152      	adcs	r2, r2
    6092:	0903      	lsrs	r3, r0, #4
    6094:	428b      	cmp	r3, r1
    6096:	d301      	bcc.n	609c <__aeabi_idiv+0x178>
    6098:	010b      	lsls	r3, r1, #4
    609a:	1ac0      	subs	r0, r0, r3
    609c:	4152      	adcs	r2, r2
    609e:	08c3      	lsrs	r3, r0, #3
    60a0:	428b      	cmp	r3, r1
    60a2:	d301      	bcc.n	60a8 <__aeabi_idiv+0x184>
    60a4:	00cb      	lsls	r3, r1, #3
    60a6:	1ac0      	subs	r0, r0, r3
    60a8:	4152      	adcs	r2, r2
    60aa:	0883      	lsrs	r3, r0, #2
    60ac:	428b      	cmp	r3, r1
    60ae:	d301      	bcc.n	60b4 <__aeabi_idiv+0x190>
    60b0:	008b      	lsls	r3, r1, #2
    60b2:	1ac0      	subs	r0, r0, r3
    60b4:	4152      	adcs	r2, r2
    60b6:	d2d9      	bcs.n	606c <__aeabi_idiv+0x148>
    60b8:	0843      	lsrs	r3, r0, #1
    60ba:	428b      	cmp	r3, r1
    60bc:	d301      	bcc.n	60c2 <__aeabi_idiv+0x19e>
    60be:	004b      	lsls	r3, r1, #1
    60c0:	1ac0      	subs	r0, r0, r3
    60c2:	4152      	adcs	r2, r2
    60c4:	1a41      	subs	r1, r0, r1
    60c6:	d200      	bcs.n	60ca <__aeabi_idiv+0x1a6>
    60c8:	4601      	mov	r1, r0
    60ca:	4663      	mov	r3, ip
    60cc:	4152      	adcs	r2, r2
    60ce:	105b      	asrs	r3, r3, #1
    60d0:	4610      	mov	r0, r2
    60d2:	d301      	bcc.n	60d8 <__aeabi_idiv+0x1b4>
    60d4:	4240      	negs	r0, r0
    60d6:	2b00      	cmp	r3, #0
    60d8:	d500      	bpl.n	60dc <__aeabi_idiv+0x1b8>
    60da:	4249      	negs	r1, r1
    60dc:	4770      	bx	lr
    60de:	4663      	mov	r3, ip
    60e0:	105b      	asrs	r3, r3, #1
    60e2:	d300      	bcc.n	60e6 <__aeabi_idiv+0x1c2>
    60e4:	4240      	negs	r0, r0
    60e6:	b501      	push	{r0, lr}
    60e8:	2000      	movs	r0, #0
    60ea:	f000 f80b 	bl	6104 <__aeabi_idiv0>
    60ee:	bd02      	pop	{r1, pc}

000060f0 <__aeabi_idivmod>:
    60f0:	2900      	cmp	r1, #0
    60f2:	d0f8      	beq.n	60e6 <__aeabi_idiv+0x1c2>
    60f4:	b503      	push	{r0, r1, lr}
    60f6:	f7ff ff15 	bl	5f24 <__aeabi_idiv>
    60fa:	bc0e      	pop	{r1, r2, r3}
    60fc:	4342      	muls	r2, r0
    60fe:	1a89      	subs	r1, r1, r2
    6100:	4718      	bx	r3
    6102:	46c0      	nop			; (mov r8, r8)

00006104 <__aeabi_idiv0>:
    6104:	4770      	bx	lr
    6106:	46c0      	nop			; (mov r8, r8)

00006108 <__aeabi_cdrcmple>:
    6108:	4684      	mov	ip, r0
    610a:	1c10      	adds	r0, r2, #0
    610c:	4662      	mov	r2, ip
    610e:	468c      	mov	ip, r1
    6110:	1c19      	adds	r1, r3, #0
    6112:	4663      	mov	r3, ip
    6114:	e000      	b.n	6118 <__aeabi_cdcmpeq>
    6116:	46c0      	nop			; (mov r8, r8)

00006118 <__aeabi_cdcmpeq>:
    6118:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    611a:	f000 ff7b 	bl	7014 <__ledf2>
    611e:	2800      	cmp	r0, #0
    6120:	d401      	bmi.n	6126 <__aeabi_cdcmpeq+0xe>
    6122:	2100      	movs	r1, #0
    6124:	42c8      	cmn	r0, r1
    6126:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

00006128 <__aeabi_dcmpeq>:
    6128:	b510      	push	{r4, lr}
    612a:	f000 febf 	bl	6eac <__eqdf2>
    612e:	4240      	negs	r0, r0
    6130:	3001      	adds	r0, #1
    6132:	bd10      	pop	{r4, pc}

00006134 <__aeabi_dcmplt>:
    6134:	b510      	push	{r4, lr}
    6136:	f000 ff6d 	bl	7014 <__ledf2>
    613a:	2800      	cmp	r0, #0
    613c:	db01      	blt.n	6142 <__aeabi_dcmplt+0xe>
    613e:	2000      	movs	r0, #0
    6140:	bd10      	pop	{r4, pc}
    6142:	2001      	movs	r0, #1
    6144:	bd10      	pop	{r4, pc}
    6146:	46c0      	nop			; (mov r8, r8)

00006148 <__aeabi_dcmple>:
    6148:	b510      	push	{r4, lr}
    614a:	f000 ff63 	bl	7014 <__ledf2>
    614e:	2800      	cmp	r0, #0
    6150:	dd01      	ble.n	6156 <__aeabi_dcmple+0xe>
    6152:	2000      	movs	r0, #0
    6154:	bd10      	pop	{r4, pc}
    6156:	2001      	movs	r0, #1
    6158:	bd10      	pop	{r4, pc}
    615a:	46c0      	nop			; (mov r8, r8)

0000615c <__aeabi_dcmpgt>:
    615c:	b510      	push	{r4, lr}
    615e:	f000 fee9 	bl	6f34 <__gedf2>
    6162:	2800      	cmp	r0, #0
    6164:	dc01      	bgt.n	616a <__aeabi_dcmpgt+0xe>
    6166:	2000      	movs	r0, #0
    6168:	bd10      	pop	{r4, pc}
    616a:	2001      	movs	r0, #1
    616c:	bd10      	pop	{r4, pc}
    616e:	46c0      	nop			; (mov r8, r8)

00006170 <__aeabi_dcmpge>:
    6170:	b510      	push	{r4, lr}
    6172:	f000 fedf 	bl	6f34 <__gedf2>
    6176:	2800      	cmp	r0, #0
    6178:	da01      	bge.n	617e <__aeabi_dcmpge+0xe>
    617a:	2000      	movs	r0, #0
    617c:	bd10      	pop	{r4, pc}
    617e:	2001      	movs	r0, #1
    6180:	bd10      	pop	{r4, pc}
    6182:	46c0      	nop			; (mov r8, r8)

00006184 <__aeabi_lmul>:
    6184:	b5f0      	push	{r4, r5, r6, r7, lr}
    6186:	464f      	mov	r7, r9
    6188:	4646      	mov	r6, r8
    618a:	0405      	lsls	r5, r0, #16
    618c:	0c2d      	lsrs	r5, r5, #16
    618e:	1c2c      	adds	r4, r5, #0
    6190:	b4c0      	push	{r6, r7}
    6192:	0417      	lsls	r7, r2, #16
    6194:	0c16      	lsrs	r6, r2, #16
    6196:	0c3f      	lsrs	r7, r7, #16
    6198:	4699      	mov	r9, r3
    619a:	0c03      	lsrs	r3, r0, #16
    619c:	437c      	muls	r4, r7
    619e:	4375      	muls	r5, r6
    61a0:	435f      	muls	r7, r3
    61a2:	4373      	muls	r3, r6
    61a4:	197d      	adds	r5, r7, r5
    61a6:	0c26      	lsrs	r6, r4, #16
    61a8:	19ad      	adds	r5, r5, r6
    61aa:	469c      	mov	ip, r3
    61ac:	42af      	cmp	r7, r5
    61ae:	d903      	bls.n	61b8 <__aeabi_lmul+0x34>
    61b0:	2380      	movs	r3, #128	; 0x80
    61b2:	025b      	lsls	r3, r3, #9
    61b4:	4698      	mov	r8, r3
    61b6:	44c4      	add	ip, r8
    61b8:	464b      	mov	r3, r9
    61ba:	4351      	muls	r1, r2
    61bc:	4343      	muls	r3, r0
    61be:	0424      	lsls	r4, r4, #16
    61c0:	0c2e      	lsrs	r6, r5, #16
    61c2:	0c24      	lsrs	r4, r4, #16
    61c4:	042d      	lsls	r5, r5, #16
    61c6:	4466      	add	r6, ip
    61c8:	192c      	adds	r4, r5, r4
    61ca:	1859      	adds	r1, r3, r1
    61cc:	1989      	adds	r1, r1, r6
    61ce:	1c20      	adds	r0, r4, #0
    61d0:	bc0c      	pop	{r2, r3}
    61d2:	4690      	mov	r8, r2
    61d4:	4699      	mov	r9, r3
    61d6:	bdf0      	pop	{r4, r5, r6, r7, pc}

000061d8 <__aeabi_d2uiz>:
    61d8:	b538      	push	{r3, r4, r5, lr}
    61da:	2200      	movs	r2, #0
    61dc:	4b0c      	ldr	r3, [pc, #48]	; (6210 <__aeabi_d2uiz+0x38>)
    61de:	1c04      	adds	r4, r0, #0
    61e0:	1c0d      	adds	r5, r1, #0
    61e2:	f7ff ffc5 	bl	6170 <__aeabi_dcmpge>
    61e6:	2800      	cmp	r0, #0
    61e8:	d104      	bne.n	61f4 <__aeabi_d2uiz+0x1c>
    61ea:	1c20      	adds	r0, r4, #0
    61ec:	1c29      	adds	r1, r5, #0
    61ee:	f001 fd8b 	bl	7d08 <__aeabi_d2iz>
    61f2:	bd38      	pop	{r3, r4, r5, pc}
    61f4:	4b06      	ldr	r3, [pc, #24]	; (6210 <__aeabi_d2uiz+0x38>)
    61f6:	2200      	movs	r2, #0
    61f8:	1c20      	adds	r0, r4, #0
    61fa:	1c29      	adds	r1, r5, #0
    61fc:	f001 fa0a 	bl	7614 <__aeabi_dsub>
    6200:	f001 fd82 	bl	7d08 <__aeabi_d2iz>
    6204:	2380      	movs	r3, #128	; 0x80
    6206:	061b      	lsls	r3, r3, #24
    6208:	469c      	mov	ip, r3
    620a:	4460      	add	r0, ip
    620c:	e7f1      	b.n	61f2 <__aeabi_d2uiz+0x1a>
    620e:	46c0      	nop			; (mov r8, r8)
    6210:	41e00000 	.word	0x41e00000

00006214 <__aeabi_dadd>:
    6214:	b5f0      	push	{r4, r5, r6, r7, lr}
    6216:	4645      	mov	r5, r8
    6218:	4657      	mov	r7, sl
    621a:	464e      	mov	r6, r9
    621c:	4694      	mov	ip, r2
    621e:	004c      	lsls	r4, r1, #1
    6220:	030a      	lsls	r2, r1, #12
    6222:	0fc9      	lsrs	r1, r1, #31
    6224:	b4e0      	push	{r5, r6, r7}
    6226:	4688      	mov	r8, r1
    6228:	1c0e      	adds	r6, r1, #0
    622a:	0319      	lsls	r1, r3, #12
    622c:	0f47      	lsrs	r7, r0, #29
    622e:	00c5      	lsls	r5, r0, #3
    6230:	0a48      	lsrs	r0, r1, #9
    6232:	4661      	mov	r1, ip
    6234:	0f49      	lsrs	r1, r1, #29
    6236:	4301      	orrs	r1, r0
    6238:	4660      	mov	r0, ip
    623a:	0a52      	lsrs	r2, r2, #9
    623c:	4317      	orrs	r7, r2
    623e:	00c0      	lsls	r0, r0, #3
    6240:	005a      	lsls	r2, r3, #1
    6242:	0d64      	lsrs	r4, r4, #21
    6244:	0d52      	lsrs	r2, r2, #21
    6246:	0fdb      	lsrs	r3, r3, #31
    6248:	4684      	mov	ip, r0
    624a:	4598      	cmp	r8, r3
    624c:	d100      	bne.n	6250 <__aeabi_dadd+0x3c>
    624e:	e0a7      	b.n	63a0 <__aeabi_dadd+0x18c>
    6250:	1aa0      	subs	r0, r4, r2
    6252:	2800      	cmp	r0, #0
    6254:	dc00      	bgt.n	6258 <__aeabi_dadd+0x44>
    6256:	e101      	b.n	645c <__aeabi_dadd+0x248>
    6258:	2a00      	cmp	r2, #0
    625a:	d13d      	bne.n	62d8 <__aeabi_dadd+0xc4>
    625c:	4663      	mov	r3, ip
    625e:	430b      	orrs	r3, r1
    6260:	d000      	beq.n	6264 <__aeabi_dadd+0x50>
    6262:	e0d4      	b.n	640e <__aeabi_dadd+0x1fa>
    6264:	076b      	lsls	r3, r5, #29
    6266:	d100      	bne.n	626a <__aeabi_dadd+0x56>
    6268:	e088      	b.n	637c <__aeabi_dadd+0x168>
    626a:	230f      	movs	r3, #15
    626c:	402b      	ands	r3, r5
    626e:	2b04      	cmp	r3, #4
    6270:	d100      	bne.n	6274 <__aeabi_dadd+0x60>
    6272:	e083      	b.n	637c <__aeabi_dadd+0x168>
    6274:	1d2a      	adds	r2, r5, #4
    6276:	42aa      	cmp	r2, r5
    6278:	41ad      	sbcs	r5, r5
    627a:	2380      	movs	r3, #128	; 0x80
    627c:	426d      	negs	r5, r5
    627e:	197f      	adds	r7, r7, r5
    6280:	041b      	lsls	r3, r3, #16
    6282:	403b      	ands	r3, r7
    6284:	4646      	mov	r6, r8
    6286:	1c15      	adds	r5, r2, #0
    6288:	2b00      	cmp	r3, #0
    628a:	d100      	bne.n	628e <__aeabi_dadd+0x7a>
    628c:	e07c      	b.n	6388 <__aeabi_dadd+0x174>
    628e:	4bcc      	ldr	r3, [pc, #816]	; (65c0 <__aeabi_dadd+0x3ac>)
    6290:	3401      	adds	r4, #1
    6292:	429c      	cmp	r4, r3
    6294:	d100      	bne.n	6298 <__aeabi_dadd+0x84>
    6296:	e0fd      	b.n	6494 <__aeabi_dadd+0x280>
    6298:	1c3a      	adds	r2, r7, #0
    629a:	4bca      	ldr	r3, [pc, #808]	; (65c4 <__aeabi_dadd+0x3b0>)
    629c:	08ed      	lsrs	r5, r5, #3
    629e:	401a      	ands	r2, r3
    62a0:	0750      	lsls	r0, r2, #29
    62a2:	0564      	lsls	r4, r4, #21
    62a4:	0252      	lsls	r2, r2, #9
    62a6:	4305      	orrs	r5, r0
    62a8:	0b12      	lsrs	r2, r2, #12
    62aa:	0d64      	lsrs	r4, r4, #21
    62ac:	2100      	movs	r1, #0
    62ae:	0312      	lsls	r2, r2, #12
    62b0:	0d0b      	lsrs	r3, r1, #20
    62b2:	051b      	lsls	r3, r3, #20
    62b4:	0564      	lsls	r4, r4, #21
    62b6:	0b12      	lsrs	r2, r2, #12
    62b8:	431a      	orrs	r2, r3
    62ba:	0863      	lsrs	r3, r4, #1
    62bc:	4cc2      	ldr	r4, [pc, #776]	; (65c8 <__aeabi_dadd+0x3b4>)
    62be:	07f6      	lsls	r6, r6, #31
    62c0:	4014      	ands	r4, r2
    62c2:	431c      	orrs	r4, r3
    62c4:	0064      	lsls	r4, r4, #1
    62c6:	0864      	lsrs	r4, r4, #1
    62c8:	4334      	orrs	r4, r6
    62ca:	1c28      	adds	r0, r5, #0
    62cc:	1c21      	adds	r1, r4, #0
    62ce:	bc1c      	pop	{r2, r3, r4}
    62d0:	4690      	mov	r8, r2
    62d2:	4699      	mov	r9, r3
    62d4:	46a2      	mov	sl, r4
    62d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    62d8:	4bb9      	ldr	r3, [pc, #740]	; (65c0 <__aeabi_dadd+0x3ac>)
    62da:	429c      	cmp	r4, r3
    62dc:	d0c2      	beq.n	6264 <__aeabi_dadd+0x50>
    62de:	2380      	movs	r3, #128	; 0x80
    62e0:	041b      	lsls	r3, r3, #16
    62e2:	4319      	orrs	r1, r3
    62e4:	2838      	cmp	r0, #56	; 0x38
    62e6:	dd00      	ble.n	62ea <__aeabi_dadd+0xd6>
    62e8:	e0ec      	b.n	64c4 <__aeabi_dadd+0x2b0>
    62ea:	281f      	cmp	r0, #31
    62ec:	dd00      	ble.n	62f0 <__aeabi_dadd+0xdc>
    62ee:	e121      	b.n	6534 <__aeabi_dadd+0x320>
    62f0:	2220      	movs	r2, #32
    62f2:	1c0e      	adds	r6, r1, #0
    62f4:	4663      	mov	r3, ip
    62f6:	1a12      	subs	r2, r2, r0
    62f8:	4096      	lsls	r6, r2
    62fa:	40c3      	lsrs	r3, r0
    62fc:	4333      	orrs	r3, r6
    62fe:	4666      	mov	r6, ip
    6300:	4096      	lsls	r6, r2
    6302:	1c32      	adds	r2, r6, #0
    6304:	1e56      	subs	r6, r2, #1
    6306:	41b2      	sbcs	r2, r6
    6308:	4313      	orrs	r3, r2
    630a:	1c0a      	adds	r2, r1, #0
    630c:	40c2      	lsrs	r2, r0
    630e:	1aeb      	subs	r3, r5, r3
    6310:	429d      	cmp	r5, r3
    6312:	41b6      	sbcs	r6, r6
    6314:	1c1d      	adds	r5, r3, #0
    6316:	1aba      	subs	r2, r7, r2
    6318:	4276      	negs	r6, r6
    631a:	1b97      	subs	r7, r2, r6
    631c:	023b      	lsls	r3, r7, #8
    631e:	d400      	bmi.n	6322 <__aeabi_dadd+0x10e>
    6320:	e097      	b.n	6452 <__aeabi_dadd+0x23e>
    6322:	027a      	lsls	r2, r7, #9
    6324:	0a56      	lsrs	r6, r2, #9
    6326:	2e00      	cmp	r6, #0
    6328:	d100      	bne.n	632c <__aeabi_dadd+0x118>
    632a:	e0b6      	b.n	649a <__aeabi_dadd+0x286>
    632c:	1c30      	adds	r0, r6, #0
    632e:	f001 fe1f 	bl	7f70 <__clzsi2>
    6332:	1c03      	adds	r3, r0, #0
    6334:	3b08      	subs	r3, #8
    6336:	2b1f      	cmp	r3, #31
    6338:	dd00      	ble.n	633c <__aeabi_dadd+0x128>
    633a:	e0b7      	b.n	64ac <__aeabi_dadd+0x298>
    633c:	409e      	lsls	r6, r3
    633e:	1c37      	adds	r7, r6, #0
    6340:	2628      	movs	r6, #40	; 0x28
    6342:	1c2a      	adds	r2, r5, #0
    6344:	1a36      	subs	r6, r6, r0
    6346:	40f2      	lsrs	r2, r6
    6348:	1c16      	adds	r6, r2, #0
    634a:	409d      	lsls	r5, r3
    634c:	433e      	orrs	r6, r7
    634e:	429c      	cmp	r4, r3
    6350:	dd00      	ble.n	6354 <__aeabi_dadd+0x140>
    6352:	e0b2      	b.n	64ba <__aeabi_dadd+0x2a6>
    6354:	1b1c      	subs	r4, r3, r4
    6356:	1c62      	adds	r2, r4, #1
    6358:	2a1f      	cmp	r2, #31
    635a:	dd00      	ble.n	635e <__aeabi_dadd+0x14a>
    635c:	e0d8      	b.n	6510 <__aeabi_dadd+0x2fc>
    635e:	231f      	movs	r3, #31
    6360:	1c29      	adds	r1, r5, #0
    6362:	1b1c      	subs	r4, r3, r4
    6364:	1c33      	adds	r3, r6, #0
    6366:	40a5      	lsls	r5, r4
    6368:	40a3      	lsls	r3, r4
    636a:	40d1      	lsrs	r1, r2
    636c:	1e6c      	subs	r4, r5, #1
    636e:	41a5      	sbcs	r5, r4
    6370:	40d6      	lsrs	r6, r2
    6372:	4319      	orrs	r1, r3
    6374:	430d      	orrs	r5, r1
    6376:	1c37      	adds	r7, r6, #0
    6378:	2400      	movs	r4, #0
    637a:	e773      	b.n	6264 <__aeabi_dadd+0x50>
    637c:	2380      	movs	r3, #128	; 0x80
    637e:	041b      	lsls	r3, r3, #16
    6380:	403b      	ands	r3, r7
    6382:	4646      	mov	r6, r8
    6384:	d000      	beq.n	6388 <__aeabi_dadd+0x174>
    6386:	e782      	b.n	628e <__aeabi_dadd+0x7a>
    6388:	4b8d      	ldr	r3, [pc, #564]	; (65c0 <__aeabi_dadd+0x3ac>)
    638a:	08ed      	lsrs	r5, r5, #3
    638c:	0778      	lsls	r0, r7, #29
    638e:	4305      	orrs	r5, r0
    6390:	08fa      	lsrs	r2, r7, #3
    6392:	429c      	cmp	r4, r3
    6394:	d032      	beq.n	63fc <__aeabi_dadd+0x1e8>
    6396:	0312      	lsls	r2, r2, #12
    6398:	0564      	lsls	r4, r4, #21
    639a:	0b12      	lsrs	r2, r2, #12
    639c:	0d64      	lsrs	r4, r4, #21
    639e:	e785      	b.n	62ac <__aeabi_dadd+0x98>
    63a0:	1aa3      	subs	r3, r4, r2
    63a2:	2b00      	cmp	r3, #0
    63a4:	dc00      	bgt.n	63a8 <__aeabi_dadd+0x194>
    63a6:	e094      	b.n	64d2 <__aeabi_dadd+0x2be>
    63a8:	2a00      	cmp	r2, #0
    63aa:	d03c      	beq.n	6426 <__aeabi_dadd+0x212>
    63ac:	4a84      	ldr	r2, [pc, #528]	; (65c0 <__aeabi_dadd+0x3ac>)
    63ae:	4294      	cmp	r4, r2
    63b0:	d100      	bne.n	63b4 <__aeabi_dadd+0x1a0>
    63b2:	e757      	b.n	6264 <__aeabi_dadd+0x50>
    63b4:	2280      	movs	r2, #128	; 0x80
    63b6:	0412      	lsls	r2, r2, #16
    63b8:	4311      	orrs	r1, r2
    63ba:	2b38      	cmp	r3, #56	; 0x38
    63bc:	dc00      	bgt.n	63c0 <__aeabi_dadd+0x1ac>
    63be:	e105      	b.n	65cc <__aeabi_dadd+0x3b8>
    63c0:	4663      	mov	r3, ip
    63c2:	4319      	orrs	r1, r3
    63c4:	1e48      	subs	r0, r1, #1
    63c6:	4181      	sbcs	r1, r0
    63c8:	2200      	movs	r2, #0
    63ca:	b2c8      	uxtb	r0, r1
    63cc:	1940      	adds	r0, r0, r5
    63ce:	42a8      	cmp	r0, r5
    63d0:	419b      	sbcs	r3, r3
    63d2:	1c05      	adds	r5, r0, #0
    63d4:	19d2      	adds	r2, r2, r7
    63d6:	425b      	negs	r3, r3
    63d8:	18d7      	adds	r7, r2, r3
    63da:	023b      	lsls	r3, r7, #8
    63dc:	d539      	bpl.n	6452 <__aeabi_dadd+0x23e>
    63de:	4b78      	ldr	r3, [pc, #480]	; (65c0 <__aeabi_dadd+0x3ac>)
    63e0:	3401      	adds	r4, #1
    63e2:	429c      	cmp	r4, r3
    63e4:	d100      	bne.n	63e8 <__aeabi_dadd+0x1d4>
    63e6:	e14c      	b.n	6682 <__aeabi_dadd+0x46e>
    63e8:	2001      	movs	r0, #1
    63ea:	4a76      	ldr	r2, [pc, #472]	; (65c4 <__aeabi_dadd+0x3b0>)
    63ec:	086b      	lsrs	r3, r5, #1
    63ee:	403a      	ands	r2, r7
    63f0:	4028      	ands	r0, r5
    63f2:	4318      	orrs	r0, r3
    63f4:	07d5      	lsls	r5, r2, #31
    63f6:	4305      	orrs	r5, r0
    63f8:	0857      	lsrs	r7, r2, #1
    63fa:	e733      	b.n	6264 <__aeabi_dadd+0x50>
    63fc:	1c2b      	adds	r3, r5, #0
    63fe:	4313      	orrs	r3, r2
    6400:	d048      	beq.n	6494 <__aeabi_dadd+0x280>
    6402:	2380      	movs	r3, #128	; 0x80
    6404:	031b      	lsls	r3, r3, #12
    6406:	431a      	orrs	r2, r3
    6408:	0312      	lsls	r2, r2, #12
    640a:	0b12      	lsrs	r2, r2, #12
    640c:	e74e      	b.n	62ac <__aeabi_dadd+0x98>
    640e:	3801      	subs	r0, #1
    6410:	2800      	cmp	r0, #0
    6412:	d178      	bne.n	6506 <__aeabi_dadd+0x2f2>
    6414:	4663      	mov	r3, ip
    6416:	1aee      	subs	r6, r5, r3
    6418:	42b5      	cmp	r5, r6
    641a:	419b      	sbcs	r3, r3
    641c:	1a7a      	subs	r2, r7, r1
    641e:	425b      	negs	r3, r3
    6420:	1ad7      	subs	r7, r2, r3
    6422:	1c35      	adds	r5, r6, #0
    6424:	e77a      	b.n	631c <__aeabi_dadd+0x108>
    6426:	1c02      	adds	r2, r0, #0
    6428:	430a      	orrs	r2, r1
    642a:	d100      	bne.n	642e <__aeabi_dadd+0x21a>
    642c:	e71a      	b.n	6264 <__aeabi_dadd+0x50>
    642e:	3b01      	subs	r3, #1
    6430:	2b00      	cmp	r3, #0
    6432:	d000      	beq.n	6436 <__aeabi_dadd+0x222>
    6434:	e0f2      	b.n	661c <__aeabi_dadd+0x408>
    6436:	1940      	adds	r0, r0, r5
    6438:	42a8      	cmp	r0, r5
    643a:	419b      	sbcs	r3, r3
    643c:	19ca      	adds	r2, r1, r7
    643e:	425b      	negs	r3, r3
    6440:	18d7      	adds	r7, r2, r3
    6442:	1c05      	adds	r5, r0, #0
    6444:	e7c9      	b.n	63da <__aeabi_dadd+0x1c6>
    6446:	1c13      	adds	r3, r2, #0
    6448:	4333      	orrs	r3, r6
    644a:	d100      	bne.n	644e <__aeabi_dadd+0x23a>
    644c:	e118      	b.n	6680 <__aeabi_dadd+0x46c>
    644e:	1c17      	adds	r7, r2, #0
    6450:	1c35      	adds	r5, r6, #0
    6452:	4646      	mov	r6, r8
    6454:	076b      	lsls	r3, r5, #29
    6456:	d000      	beq.n	645a <__aeabi_dadd+0x246>
    6458:	e707      	b.n	626a <__aeabi_dadd+0x56>
    645a:	e795      	b.n	6388 <__aeabi_dadd+0x174>
    645c:	2800      	cmp	r0, #0
    645e:	d17a      	bne.n	6556 <__aeabi_dadd+0x342>
    6460:	1c62      	adds	r2, r4, #1
    6462:	0552      	lsls	r2, r2, #21
    6464:	0d52      	lsrs	r2, r2, #21
    6466:	2a01      	cmp	r2, #1
    6468:	dc00      	bgt.n	646c <__aeabi_dadd+0x258>
    646a:	e0fb      	b.n	6664 <__aeabi_dadd+0x450>
    646c:	4662      	mov	r2, ip
    646e:	1aaa      	subs	r2, r5, r2
    6470:	4295      	cmp	r5, r2
    6472:	41b6      	sbcs	r6, r6
    6474:	4691      	mov	r9, r2
    6476:	1a78      	subs	r0, r7, r1
    6478:	4272      	negs	r2, r6
    647a:	1a86      	subs	r6, r0, r2
    647c:	0232      	lsls	r2, r6, #8
    647e:	d400      	bmi.n	6482 <__aeabi_dadd+0x26e>
    6480:	e093      	b.n	65aa <__aeabi_dadd+0x396>
    6482:	4662      	mov	r2, ip
    6484:	1b55      	subs	r5, r2, r5
    6486:	45ac      	cmp	ip, r5
    6488:	4180      	sbcs	r0, r0
    648a:	1bcf      	subs	r7, r1, r7
    648c:	4240      	negs	r0, r0
    648e:	1a3e      	subs	r6, r7, r0
    6490:	4698      	mov	r8, r3
    6492:	e748      	b.n	6326 <__aeabi_dadd+0x112>
    6494:	2200      	movs	r2, #0
    6496:	2500      	movs	r5, #0
    6498:	e708      	b.n	62ac <__aeabi_dadd+0x98>
    649a:	1c28      	adds	r0, r5, #0
    649c:	f001 fd68 	bl	7f70 <__clzsi2>
    64a0:	3020      	adds	r0, #32
    64a2:	1c03      	adds	r3, r0, #0
    64a4:	3b08      	subs	r3, #8
    64a6:	2b1f      	cmp	r3, #31
    64a8:	dc00      	bgt.n	64ac <__aeabi_dadd+0x298>
    64aa:	e747      	b.n	633c <__aeabi_dadd+0x128>
    64ac:	3828      	subs	r0, #40	; 0x28
    64ae:	4085      	lsls	r5, r0
    64b0:	1c2e      	adds	r6, r5, #0
    64b2:	2500      	movs	r5, #0
    64b4:	429c      	cmp	r4, r3
    64b6:	dc00      	bgt.n	64ba <__aeabi_dadd+0x2a6>
    64b8:	e74c      	b.n	6354 <__aeabi_dadd+0x140>
    64ba:	4a42      	ldr	r2, [pc, #264]	; (65c4 <__aeabi_dadd+0x3b0>)
    64bc:	1ae4      	subs	r4, r4, r3
    64be:	4016      	ands	r6, r2
    64c0:	1c37      	adds	r7, r6, #0
    64c2:	e6cf      	b.n	6264 <__aeabi_dadd+0x50>
    64c4:	4663      	mov	r3, ip
    64c6:	4319      	orrs	r1, r3
    64c8:	1e4b      	subs	r3, r1, #1
    64ca:	4199      	sbcs	r1, r3
    64cc:	2200      	movs	r2, #0
    64ce:	b2cb      	uxtb	r3, r1
    64d0:	e71d      	b.n	630e <__aeabi_dadd+0xfa>
    64d2:	2b00      	cmp	r3, #0
    64d4:	d000      	beq.n	64d8 <__aeabi_dadd+0x2c4>
    64d6:	e0f2      	b.n	66be <__aeabi_dadd+0x4aa>
    64d8:	1c60      	adds	r0, r4, #1
    64da:	0543      	lsls	r3, r0, #21
    64dc:	0d5b      	lsrs	r3, r3, #21
    64de:	2b01      	cmp	r3, #1
    64e0:	dc00      	bgt.n	64e4 <__aeabi_dadd+0x2d0>
    64e2:	e0a4      	b.n	662e <__aeabi_dadd+0x41a>
    64e4:	4b36      	ldr	r3, [pc, #216]	; (65c0 <__aeabi_dadd+0x3ac>)
    64e6:	4298      	cmp	r0, r3
    64e8:	d100      	bne.n	64ec <__aeabi_dadd+0x2d8>
    64ea:	e121      	b.n	6730 <__aeabi_dadd+0x51c>
    64ec:	4663      	mov	r3, ip
    64ee:	195c      	adds	r4, r3, r5
    64f0:	42ac      	cmp	r4, r5
    64f2:	419b      	sbcs	r3, r3
    64f4:	19cf      	adds	r7, r1, r7
    64f6:	425b      	negs	r3, r3
    64f8:	18fa      	adds	r2, r7, r3
    64fa:	0864      	lsrs	r4, r4, #1
    64fc:	07d5      	lsls	r5, r2, #31
    64fe:	4325      	orrs	r5, r4
    6500:	0857      	lsrs	r7, r2, #1
    6502:	1c04      	adds	r4, r0, #0
    6504:	e6ae      	b.n	6264 <__aeabi_dadd+0x50>
    6506:	4b2e      	ldr	r3, [pc, #184]	; (65c0 <__aeabi_dadd+0x3ac>)
    6508:	429c      	cmp	r4, r3
    650a:	d000      	beq.n	650e <__aeabi_dadd+0x2fa>
    650c:	e6ea      	b.n	62e4 <__aeabi_dadd+0xd0>
    650e:	e6a9      	b.n	6264 <__aeabi_dadd+0x50>
    6510:	1c21      	adds	r1, r4, #0
    6512:	1c33      	adds	r3, r6, #0
    6514:	391f      	subs	r1, #31
    6516:	40cb      	lsrs	r3, r1
    6518:	1c19      	adds	r1, r3, #0
    651a:	2a20      	cmp	r2, #32
    651c:	d100      	bne.n	6520 <__aeabi_dadd+0x30c>
    651e:	e082      	b.n	6626 <__aeabi_dadd+0x412>
    6520:	233f      	movs	r3, #63	; 0x3f
    6522:	1b1c      	subs	r4, r3, r4
    6524:	40a6      	lsls	r6, r4
    6526:	4335      	orrs	r5, r6
    6528:	1e6e      	subs	r6, r5, #1
    652a:	41b5      	sbcs	r5, r6
    652c:	2700      	movs	r7, #0
    652e:	430d      	orrs	r5, r1
    6530:	2400      	movs	r4, #0
    6532:	e78e      	b.n	6452 <__aeabi_dadd+0x23e>
    6534:	1c03      	adds	r3, r0, #0
    6536:	1c0e      	adds	r6, r1, #0
    6538:	3b20      	subs	r3, #32
    653a:	40de      	lsrs	r6, r3
    653c:	2820      	cmp	r0, #32
    653e:	d074      	beq.n	662a <__aeabi_dadd+0x416>
    6540:	2340      	movs	r3, #64	; 0x40
    6542:	1a1b      	subs	r3, r3, r0
    6544:	4099      	lsls	r1, r3
    6546:	1c0b      	adds	r3, r1, #0
    6548:	4662      	mov	r2, ip
    654a:	4313      	orrs	r3, r2
    654c:	1e59      	subs	r1, r3, #1
    654e:	418b      	sbcs	r3, r1
    6550:	2200      	movs	r2, #0
    6552:	4333      	orrs	r3, r6
    6554:	e6db      	b.n	630e <__aeabi_dadd+0xfa>
    6556:	2c00      	cmp	r4, #0
    6558:	d050      	beq.n	65fc <__aeabi_dadd+0x3e8>
    655a:	4c19      	ldr	r4, [pc, #100]	; (65c0 <__aeabi_dadd+0x3ac>)
    655c:	42a2      	cmp	r2, r4
    655e:	d100      	bne.n	6562 <__aeabi_dadd+0x34e>
    6560:	e0a8      	b.n	66b4 <__aeabi_dadd+0x4a0>
    6562:	2480      	movs	r4, #128	; 0x80
    6564:	0424      	lsls	r4, r4, #16
    6566:	4240      	negs	r0, r0
    6568:	4327      	orrs	r7, r4
    656a:	2838      	cmp	r0, #56	; 0x38
    656c:	dd00      	ble.n	6570 <__aeabi_dadd+0x35c>
    656e:	e0d9      	b.n	6724 <__aeabi_dadd+0x510>
    6570:	281f      	cmp	r0, #31
    6572:	dd00      	ble.n	6576 <__aeabi_dadd+0x362>
    6574:	e139      	b.n	67ea <__aeabi_dadd+0x5d6>
    6576:	2420      	movs	r4, #32
    6578:	1c3e      	adds	r6, r7, #0
    657a:	1a24      	subs	r4, r4, r0
    657c:	40a6      	lsls	r6, r4
    657e:	46b0      	mov	r8, r6
    6580:	1c2e      	adds	r6, r5, #0
    6582:	46a1      	mov	r9, r4
    6584:	40c6      	lsrs	r6, r0
    6586:	4644      	mov	r4, r8
    6588:	4326      	orrs	r6, r4
    658a:	464c      	mov	r4, r9
    658c:	40a5      	lsls	r5, r4
    658e:	1e6c      	subs	r4, r5, #1
    6590:	41a5      	sbcs	r5, r4
    6592:	40c7      	lsrs	r7, r0
    6594:	4335      	orrs	r5, r6
    6596:	4660      	mov	r0, ip
    6598:	1b45      	subs	r5, r0, r5
    659a:	1bcf      	subs	r7, r1, r7
    659c:	45ac      	cmp	ip, r5
    659e:	4189      	sbcs	r1, r1
    65a0:	4249      	negs	r1, r1
    65a2:	1a7f      	subs	r7, r7, r1
    65a4:	1c14      	adds	r4, r2, #0
    65a6:	4698      	mov	r8, r3
    65a8:	e6b8      	b.n	631c <__aeabi_dadd+0x108>
    65aa:	464b      	mov	r3, r9
    65ac:	464d      	mov	r5, r9
    65ae:	4333      	orrs	r3, r6
    65b0:	d000      	beq.n	65b4 <__aeabi_dadd+0x3a0>
    65b2:	e6b8      	b.n	6326 <__aeabi_dadd+0x112>
    65b4:	2600      	movs	r6, #0
    65b6:	2700      	movs	r7, #0
    65b8:	2400      	movs	r4, #0
    65ba:	2500      	movs	r5, #0
    65bc:	e6e4      	b.n	6388 <__aeabi_dadd+0x174>
    65be:	46c0      	nop			; (mov r8, r8)
    65c0:	000007ff 	.word	0x000007ff
    65c4:	ff7fffff 	.word	0xff7fffff
    65c8:	800fffff 	.word	0x800fffff
    65cc:	2b1f      	cmp	r3, #31
    65ce:	dc5b      	bgt.n	6688 <__aeabi_dadd+0x474>
    65d0:	2220      	movs	r2, #32
    65d2:	1c08      	adds	r0, r1, #0
    65d4:	1ad2      	subs	r2, r2, r3
    65d6:	4090      	lsls	r0, r2
    65d8:	4681      	mov	r9, r0
    65da:	4660      	mov	r0, ip
    65dc:	4692      	mov	sl, r2
    65de:	40d8      	lsrs	r0, r3
    65e0:	464a      	mov	r2, r9
    65e2:	4310      	orrs	r0, r2
    65e4:	4681      	mov	r9, r0
    65e6:	4652      	mov	r2, sl
    65e8:	4660      	mov	r0, ip
    65ea:	4090      	lsls	r0, r2
    65ec:	1c02      	adds	r2, r0, #0
    65ee:	1e50      	subs	r0, r2, #1
    65f0:	4182      	sbcs	r2, r0
    65f2:	4648      	mov	r0, r9
    65f4:	4310      	orrs	r0, r2
    65f6:	1c0a      	adds	r2, r1, #0
    65f8:	40da      	lsrs	r2, r3
    65fa:	e6e7      	b.n	63cc <__aeabi_dadd+0x1b8>
    65fc:	1c3c      	adds	r4, r7, #0
    65fe:	432c      	orrs	r4, r5
    6600:	d058      	beq.n	66b4 <__aeabi_dadd+0x4a0>
    6602:	43c0      	mvns	r0, r0
    6604:	2800      	cmp	r0, #0
    6606:	d151      	bne.n	66ac <__aeabi_dadd+0x498>
    6608:	4660      	mov	r0, ip
    660a:	1b45      	subs	r5, r0, r5
    660c:	45ac      	cmp	ip, r5
    660e:	4180      	sbcs	r0, r0
    6610:	1bcf      	subs	r7, r1, r7
    6612:	4240      	negs	r0, r0
    6614:	1a3f      	subs	r7, r7, r0
    6616:	1c14      	adds	r4, r2, #0
    6618:	4698      	mov	r8, r3
    661a:	e67f      	b.n	631c <__aeabi_dadd+0x108>
    661c:	4a8f      	ldr	r2, [pc, #572]	; (685c <__aeabi_dadd+0x648>)
    661e:	4294      	cmp	r4, r2
    6620:	d000      	beq.n	6624 <__aeabi_dadd+0x410>
    6622:	e6ca      	b.n	63ba <__aeabi_dadd+0x1a6>
    6624:	e61e      	b.n	6264 <__aeabi_dadd+0x50>
    6626:	2600      	movs	r6, #0
    6628:	e77d      	b.n	6526 <__aeabi_dadd+0x312>
    662a:	2300      	movs	r3, #0
    662c:	e78c      	b.n	6548 <__aeabi_dadd+0x334>
    662e:	1c3b      	adds	r3, r7, #0
    6630:	432b      	orrs	r3, r5
    6632:	2c00      	cmp	r4, #0
    6634:	d000      	beq.n	6638 <__aeabi_dadd+0x424>
    6636:	e0bd      	b.n	67b4 <__aeabi_dadd+0x5a0>
    6638:	2b00      	cmp	r3, #0
    663a:	d100      	bne.n	663e <__aeabi_dadd+0x42a>
    663c:	e0f5      	b.n	682a <__aeabi_dadd+0x616>
    663e:	4663      	mov	r3, ip
    6640:	430b      	orrs	r3, r1
    6642:	d100      	bne.n	6646 <__aeabi_dadd+0x432>
    6644:	e60e      	b.n	6264 <__aeabi_dadd+0x50>
    6646:	4663      	mov	r3, ip
    6648:	195b      	adds	r3, r3, r5
    664a:	42ab      	cmp	r3, r5
    664c:	4180      	sbcs	r0, r0
    664e:	19ca      	adds	r2, r1, r7
    6650:	4240      	negs	r0, r0
    6652:	1817      	adds	r7, r2, r0
    6654:	023a      	lsls	r2, r7, #8
    6656:	d400      	bmi.n	665a <__aeabi_dadd+0x446>
    6658:	e0fc      	b.n	6854 <__aeabi_dadd+0x640>
    665a:	4a81      	ldr	r2, [pc, #516]	; (6860 <__aeabi_dadd+0x64c>)
    665c:	1c1d      	adds	r5, r3, #0
    665e:	4017      	ands	r7, r2
    6660:	3401      	adds	r4, #1
    6662:	e5ff      	b.n	6264 <__aeabi_dadd+0x50>
    6664:	1c3a      	adds	r2, r7, #0
    6666:	432a      	orrs	r2, r5
    6668:	2c00      	cmp	r4, #0
    666a:	d151      	bne.n	6710 <__aeabi_dadd+0x4fc>
    666c:	2a00      	cmp	r2, #0
    666e:	d000      	beq.n	6672 <__aeabi_dadd+0x45e>
    6670:	e085      	b.n	677e <__aeabi_dadd+0x56a>
    6672:	4662      	mov	r2, ip
    6674:	430a      	orrs	r2, r1
    6676:	d003      	beq.n	6680 <__aeabi_dadd+0x46c>
    6678:	1c0f      	adds	r7, r1, #0
    667a:	4665      	mov	r5, ip
    667c:	4698      	mov	r8, r3
    667e:	e5f1      	b.n	6264 <__aeabi_dadd+0x50>
    6680:	2600      	movs	r6, #0
    6682:	2700      	movs	r7, #0
    6684:	2500      	movs	r5, #0
    6686:	e67f      	b.n	6388 <__aeabi_dadd+0x174>
    6688:	1c18      	adds	r0, r3, #0
    668a:	1c0a      	adds	r2, r1, #0
    668c:	3820      	subs	r0, #32
    668e:	40c2      	lsrs	r2, r0
    6690:	2b20      	cmp	r3, #32
    6692:	d100      	bne.n	6696 <__aeabi_dadd+0x482>
    6694:	e0a7      	b.n	67e6 <__aeabi_dadd+0x5d2>
    6696:	2040      	movs	r0, #64	; 0x40
    6698:	1ac0      	subs	r0, r0, r3
    669a:	4081      	lsls	r1, r0
    669c:	1c08      	adds	r0, r1, #0
    669e:	4663      	mov	r3, ip
    66a0:	4318      	orrs	r0, r3
    66a2:	1e41      	subs	r1, r0, #1
    66a4:	4188      	sbcs	r0, r1
    66a6:	4310      	orrs	r0, r2
    66a8:	2200      	movs	r2, #0
    66aa:	e68f      	b.n	63cc <__aeabi_dadd+0x1b8>
    66ac:	4c6b      	ldr	r4, [pc, #428]	; (685c <__aeabi_dadd+0x648>)
    66ae:	42a2      	cmp	r2, r4
    66b0:	d000      	beq.n	66b4 <__aeabi_dadd+0x4a0>
    66b2:	e75a      	b.n	656a <__aeabi_dadd+0x356>
    66b4:	1c0f      	adds	r7, r1, #0
    66b6:	4665      	mov	r5, ip
    66b8:	1c14      	adds	r4, r2, #0
    66ba:	4698      	mov	r8, r3
    66bc:	e5d2      	b.n	6264 <__aeabi_dadd+0x50>
    66be:	2c00      	cmp	r4, #0
    66c0:	d13a      	bne.n	6738 <__aeabi_dadd+0x524>
    66c2:	1c38      	adds	r0, r7, #0
    66c4:	4328      	orrs	r0, r5
    66c6:	d071      	beq.n	67ac <__aeabi_dadd+0x598>
    66c8:	43db      	mvns	r3, r3
    66ca:	2b00      	cmp	r3, #0
    66cc:	d018      	beq.n	6700 <__aeabi_dadd+0x4ec>
    66ce:	4863      	ldr	r0, [pc, #396]	; (685c <__aeabi_dadd+0x648>)
    66d0:	4282      	cmp	r2, r0
    66d2:	d06b      	beq.n	67ac <__aeabi_dadd+0x598>
    66d4:	2b38      	cmp	r3, #56	; 0x38
    66d6:	dd00      	ble.n	66da <__aeabi_dadd+0x4c6>
    66d8:	e09d      	b.n	6816 <__aeabi_dadd+0x602>
    66da:	2b1f      	cmp	r3, #31
    66dc:	dd00      	ble.n	66e0 <__aeabi_dadd+0x4cc>
    66de:	e0a7      	b.n	6830 <__aeabi_dadd+0x61c>
    66e0:	2020      	movs	r0, #32
    66e2:	1c3c      	adds	r4, r7, #0
    66e4:	1ac0      	subs	r0, r0, r3
    66e6:	4084      	lsls	r4, r0
    66e8:	46a1      	mov	r9, r4
    66ea:	1c2c      	adds	r4, r5, #0
    66ec:	4682      	mov	sl, r0
    66ee:	40dc      	lsrs	r4, r3
    66f0:	4648      	mov	r0, r9
    66f2:	4304      	orrs	r4, r0
    66f4:	4650      	mov	r0, sl
    66f6:	4085      	lsls	r5, r0
    66f8:	1e68      	subs	r0, r5, #1
    66fa:	4185      	sbcs	r5, r0
    66fc:	40df      	lsrs	r7, r3
    66fe:	4325      	orrs	r5, r4
    6700:	4465      	add	r5, ip
    6702:	4565      	cmp	r5, ip
    6704:	419b      	sbcs	r3, r3
    6706:	187f      	adds	r7, r7, r1
    6708:	425b      	negs	r3, r3
    670a:	18ff      	adds	r7, r7, r3
    670c:	1c14      	adds	r4, r2, #0
    670e:	e664      	b.n	63da <__aeabi_dadd+0x1c6>
    6710:	2a00      	cmp	r2, #0
    6712:	d119      	bne.n	6748 <__aeabi_dadd+0x534>
    6714:	4662      	mov	r2, ip
    6716:	430a      	orrs	r2, r1
    6718:	d077      	beq.n	680a <__aeabi_dadd+0x5f6>
    671a:	1c0f      	adds	r7, r1, #0
    671c:	4665      	mov	r5, ip
    671e:	4698      	mov	r8, r3
    6720:	4c4e      	ldr	r4, [pc, #312]	; (685c <__aeabi_dadd+0x648>)
    6722:	e59f      	b.n	6264 <__aeabi_dadd+0x50>
    6724:	433d      	orrs	r5, r7
    6726:	1e6f      	subs	r7, r5, #1
    6728:	41bd      	sbcs	r5, r7
    672a:	2700      	movs	r7, #0
    672c:	b2ed      	uxtb	r5, r5
    672e:	e732      	b.n	6596 <__aeabi_dadd+0x382>
    6730:	1c04      	adds	r4, r0, #0
    6732:	2700      	movs	r7, #0
    6734:	2500      	movs	r5, #0
    6736:	e627      	b.n	6388 <__aeabi_dadd+0x174>
    6738:	4848      	ldr	r0, [pc, #288]	; (685c <__aeabi_dadd+0x648>)
    673a:	4282      	cmp	r2, r0
    673c:	d036      	beq.n	67ac <__aeabi_dadd+0x598>
    673e:	2080      	movs	r0, #128	; 0x80
    6740:	0400      	lsls	r0, r0, #16
    6742:	425b      	negs	r3, r3
    6744:	4307      	orrs	r7, r0
    6746:	e7c5      	b.n	66d4 <__aeabi_dadd+0x4c0>
    6748:	4662      	mov	r2, ip
    674a:	430a      	orrs	r2, r1
    674c:	d049      	beq.n	67e2 <__aeabi_dadd+0x5ce>
    674e:	2480      	movs	r4, #128	; 0x80
    6750:	08ed      	lsrs	r5, r5, #3
    6752:	0778      	lsls	r0, r7, #29
    6754:	08fa      	lsrs	r2, r7, #3
    6756:	0324      	lsls	r4, r4, #12
    6758:	4328      	orrs	r0, r5
    675a:	4222      	tst	r2, r4
    675c:	d009      	beq.n	6772 <__aeabi_dadd+0x55e>
    675e:	08ce      	lsrs	r6, r1, #3
    6760:	4226      	tst	r6, r4
    6762:	d106      	bne.n	6772 <__aeabi_dadd+0x55e>
    6764:	4662      	mov	r2, ip
    6766:	074f      	lsls	r7, r1, #29
    6768:	1c38      	adds	r0, r7, #0
    676a:	08d2      	lsrs	r2, r2, #3
    676c:	4310      	orrs	r0, r2
    676e:	4698      	mov	r8, r3
    6770:	1c32      	adds	r2, r6, #0
    6772:	00d2      	lsls	r2, r2, #3
    6774:	0f47      	lsrs	r7, r0, #29
    6776:	4317      	orrs	r7, r2
    6778:	00c5      	lsls	r5, r0, #3
    677a:	4c38      	ldr	r4, [pc, #224]	; (685c <__aeabi_dadd+0x648>)
    677c:	e572      	b.n	6264 <__aeabi_dadd+0x50>
    677e:	4662      	mov	r2, ip
    6780:	430a      	orrs	r2, r1
    6782:	d100      	bne.n	6786 <__aeabi_dadd+0x572>
    6784:	e56e      	b.n	6264 <__aeabi_dadd+0x50>
    6786:	4662      	mov	r2, ip
    6788:	1aae      	subs	r6, r5, r2
    678a:	42b5      	cmp	r5, r6
    678c:	4192      	sbcs	r2, r2
    678e:	1a78      	subs	r0, r7, r1
    6790:	4252      	negs	r2, r2
    6792:	1a82      	subs	r2, r0, r2
    6794:	0210      	lsls	r0, r2, #8
    6796:	d400      	bmi.n	679a <__aeabi_dadd+0x586>
    6798:	e655      	b.n	6446 <__aeabi_dadd+0x232>
    679a:	4662      	mov	r2, ip
    679c:	1b55      	subs	r5, r2, r5
    679e:	45ac      	cmp	ip, r5
    67a0:	4180      	sbcs	r0, r0
    67a2:	1bca      	subs	r2, r1, r7
    67a4:	4240      	negs	r0, r0
    67a6:	1a17      	subs	r7, r2, r0
    67a8:	4698      	mov	r8, r3
    67aa:	e55b      	b.n	6264 <__aeabi_dadd+0x50>
    67ac:	1c0f      	adds	r7, r1, #0
    67ae:	4665      	mov	r5, ip
    67b0:	1c14      	adds	r4, r2, #0
    67b2:	e557      	b.n	6264 <__aeabi_dadd+0x50>
    67b4:	2b00      	cmp	r3, #0
    67b6:	d034      	beq.n	6822 <__aeabi_dadd+0x60e>
    67b8:	4663      	mov	r3, ip
    67ba:	430b      	orrs	r3, r1
    67bc:	d011      	beq.n	67e2 <__aeabi_dadd+0x5ce>
    67be:	2480      	movs	r4, #128	; 0x80
    67c0:	08ed      	lsrs	r5, r5, #3
    67c2:	0778      	lsls	r0, r7, #29
    67c4:	08fa      	lsrs	r2, r7, #3
    67c6:	0324      	lsls	r4, r4, #12
    67c8:	4328      	orrs	r0, r5
    67ca:	4222      	tst	r2, r4
    67cc:	d0d1      	beq.n	6772 <__aeabi_dadd+0x55e>
    67ce:	08cb      	lsrs	r3, r1, #3
    67d0:	4223      	tst	r3, r4
    67d2:	d1ce      	bne.n	6772 <__aeabi_dadd+0x55e>
    67d4:	4662      	mov	r2, ip
    67d6:	074f      	lsls	r7, r1, #29
    67d8:	1c38      	adds	r0, r7, #0
    67da:	08d2      	lsrs	r2, r2, #3
    67dc:	4310      	orrs	r0, r2
    67de:	1c1a      	adds	r2, r3, #0
    67e0:	e7c7      	b.n	6772 <__aeabi_dadd+0x55e>
    67e2:	4c1e      	ldr	r4, [pc, #120]	; (685c <__aeabi_dadd+0x648>)
    67e4:	e53e      	b.n	6264 <__aeabi_dadd+0x50>
    67e6:	2000      	movs	r0, #0
    67e8:	e759      	b.n	669e <__aeabi_dadd+0x48a>
    67ea:	1c04      	adds	r4, r0, #0
    67ec:	1c3e      	adds	r6, r7, #0
    67ee:	3c20      	subs	r4, #32
    67f0:	40e6      	lsrs	r6, r4
    67f2:	1c34      	adds	r4, r6, #0
    67f4:	2820      	cmp	r0, #32
    67f6:	d02b      	beq.n	6850 <__aeabi_dadd+0x63c>
    67f8:	2640      	movs	r6, #64	; 0x40
    67fa:	1a30      	subs	r0, r6, r0
    67fc:	4087      	lsls	r7, r0
    67fe:	433d      	orrs	r5, r7
    6800:	1e6f      	subs	r7, r5, #1
    6802:	41bd      	sbcs	r5, r7
    6804:	2700      	movs	r7, #0
    6806:	4325      	orrs	r5, r4
    6808:	e6c5      	b.n	6596 <__aeabi_dadd+0x382>
    680a:	2780      	movs	r7, #128	; 0x80
    680c:	2600      	movs	r6, #0
    680e:	03ff      	lsls	r7, r7, #15
    6810:	4c12      	ldr	r4, [pc, #72]	; (685c <__aeabi_dadd+0x648>)
    6812:	2500      	movs	r5, #0
    6814:	e5b8      	b.n	6388 <__aeabi_dadd+0x174>
    6816:	433d      	orrs	r5, r7
    6818:	1e6f      	subs	r7, r5, #1
    681a:	41bd      	sbcs	r5, r7
    681c:	2700      	movs	r7, #0
    681e:	b2ed      	uxtb	r5, r5
    6820:	e76e      	b.n	6700 <__aeabi_dadd+0x4ec>
    6822:	1c0f      	adds	r7, r1, #0
    6824:	4665      	mov	r5, ip
    6826:	4c0d      	ldr	r4, [pc, #52]	; (685c <__aeabi_dadd+0x648>)
    6828:	e51c      	b.n	6264 <__aeabi_dadd+0x50>
    682a:	1c0f      	adds	r7, r1, #0
    682c:	4665      	mov	r5, ip
    682e:	e519      	b.n	6264 <__aeabi_dadd+0x50>
    6830:	1c1c      	adds	r4, r3, #0
    6832:	1c38      	adds	r0, r7, #0
    6834:	3c20      	subs	r4, #32
    6836:	40e0      	lsrs	r0, r4
    6838:	1c04      	adds	r4, r0, #0
    683a:	2b20      	cmp	r3, #32
    683c:	d00c      	beq.n	6858 <__aeabi_dadd+0x644>
    683e:	2040      	movs	r0, #64	; 0x40
    6840:	1ac3      	subs	r3, r0, r3
    6842:	409f      	lsls	r7, r3
    6844:	433d      	orrs	r5, r7
    6846:	1e6f      	subs	r7, r5, #1
    6848:	41bd      	sbcs	r5, r7
    684a:	2700      	movs	r7, #0
    684c:	4325      	orrs	r5, r4
    684e:	e757      	b.n	6700 <__aeabi_dadd+0x4ec>
    6850:	2700      	movs	r7, #0
    6852:	e7d4      	b.n	67fe <__aeabi_dadd+0x5ea>
    6854:	1c1d      	adds	r5, r3, #0
    6856:	e5fc      	b.n	6452 <__aeabi_dadd+0x23e>
    6858:	2700      	movs	r7, #0
    685a:	e7f3      	b.n	6844 <__aeabi_dadd+0x630>
    685c:	000007ff 	.word	0x000007ff
    6860:	ff7fffff 	.word	0xff7fffff

00006864 <__aeabi_ddiv>:
    6864:	b5f0      	push	{r4, r5, r6, r7, lr}
    6866:	465f      	mov	r7, fp
    6868:	4656      	mov	r6, sl
    686a:	464d      	mov	r5, r9
    686c:	4644      	mov	r4, r8
    686e:	b4f0      	push	{r4, r5, r6, r7}
    6870:	030f      	lsls	r7, r1, #12
    6872:	b087      	sub	sp, #28
    6874:	4698      	mov	r8, r3
    6876:	004d      	lsls	r5, r1, #1
    6878:	0b3b      	lsrs	r3, r7, #12
    687a:	0fcc      	lsrs	r4, r1, #31
    687c:	1c06      	adds	r6, r0, #0
    687e:	4692      	mov	sl, r2
    6880:	4681      	mov	r9, r0
    6882:	469b      	mov	fp, r3
    6884:	0d6d      	lsrs	r5, r5, #21
    6886:	9401      	str	r4, [sp, #4]
    6888:	d06b      	beq.n	6962 <__aeabi_ddiv+0xfe>
    688a:	4b66      	ldr	r3, [pc, #408]	; (6a24 <__aeabi_ddiv+0x1c0>)
    688c:	429d      	cmp	r5, r3
    688e:	d035      	beq.n	68fc <__aeabi_ddiv+0x98>
    6890:	2780      	movs	r7, #128	; 0x80
    6892:	465b      	mov	r3, fp
    6894:	037f      	lsls	r7, r7, #13
    6896:	431f      	orrs	r7, r3
    6898:	00f3      	lsls	r3, r6, #3
    689a:	4699      	mov	r9, r3
    689c:	4b62      	ldr	r3, [pc, #392]	; (6a28 <__aeabi_ddiv+0x1c4>)
    689e:	00ff      	lsls	r7, r7, #3
    68a0:	0f40      	lsrs	r0, r0, #29
    68a2:	469c      	mov	ip, r3
    68a4:	4307      	orrs	r7, r0
    68a6:	2300      	movs	r3, #0
    68a8:	46bb      	mov	fp, r7
    68aa:	2600      	movs	r6, #0
    68ac:	4465      	add	r5, ip
    68ae:	9300      	str	r3, [sp, #0]
    68b0:	4642      	mov	r2, r8
    68b2:	0317      	lsls	r7, r2, #12
    68b4:	0050      	lsls	r0, r2, #1
    68b6:	0fd2      	lsrs	r2, r2, #31
    68b8:	4653      	mov	r3, sl
    68ba:	0b3f      	lsrs	r7, r7, #12
    68bc:	0d40      	lsrs	r0, r0, #21
    68be:	4690      	mov	r8, r2
    68c0:	d100      	bne.n	68c4 <__aeabi_ddiv+0x60>
    68c2:	e072      	b.n	69aa <__aeabi_ddiv+0x146>
    68c4:	4a57      	ldr	r2, [pc, #348]	; (6a24 <__aeabi_ddiv+0x1c0>)
    68c6:	4290      	cmp	r0, r2
    68c8:	d067      	beq.n	699a <__aeabi_ddiv+0x136>
    68ca:	2380      	movs	r3, #128	; 0x80
    68cc:	035b      	lsls	r3, r3, #13
    68ce:	431f      	orrs	r7, r3
    68d0:	4653      	mov	r3, sl
    68d2:	4a55      	ldr	r2, [pc, #340]	; (6a28 <__aeabi_ddiv+0x1c4>)
    68d4:	0f5b      	lsrs	r3, r3, #29
    68d6:	00ff      	lsls	r7, r7, #3
    68d8:	431f      	orrs	r7, r3
    68da:	4694      	mov	ip, r2
    68dc:	4653      	mov	r3, sl
    68de:	2100      	movs	r1, #0
    68e0:	00db      	lsls	r3, r3, #3
    68e2:	4460      	add	r0, ip
    68e4:	4642      	mov	r2, r8
    68e6:	4062      	eors	r2, r4
    68e8:	4692      	mov	sl, r2
    68ea:	1a2d      	subs	r5, r5, r0
    68ec:	430e      	orrs	r6, r1
    68ee:	2e0f      	cmp	r6, #15
    68f0:	d900      	bls.n	68f4 <__aeabi_ddiv+0x90>
    68f2:	e0a1      	b.n	6a38 <__aeabi_ddiv+0x1d4>
    68f4:	484d      	ldr	r0, [pc, #308]	; (6a2c <__aeabi_ddiv+0x1c8>)
    68f6:	00b6      	lsls	r6, r6, #2
    68f8:	5980      	ldr	r0, [r0, r6]
    68fa:	4687      	mov	pc, r0
    68fc:	465b      	mov	r3, fp
    68fe:	431e      	orrs	r6, r3
    6900:	d000      	beq.n	6904 <__aeabi_ddiv+0xa0>
    6902:	e076      	b.n	69f2 <__aeabi_ddiv+0x18e>
    6904:	2300      	movs	r3, #0
    6906:	469b      	mov	fp, r3
    6908:	4699      	mov	r9, r3
    690a:	3302      	adds	r3, #2
    690c:	2608      	movs	r6, #8
    690e:	9300      	str	r3, [sp, #0]
    6910:	e7ce      	b.n	68b0 <__aeabi_ddiv+0x4c>
    6912:	4699      	mov	r9, r3
    6914:	4643      	mov	r3, r8
    6916:	46bb      	mov	fp, r7
    6918:	9301      	str	r3, [sp, #4]
    691a:	9100      	str	r1, [sp, #0]
    691c:	9b00      	ldr	r3, [sp, #0]
    691e:	2b02      	cmp	r3, #2
    6920:	d16b      	bne.n	69fa <__aeabi_ddiv+0x196>
    6922:	9b01      	ldr	r3, [sp, #4]
    6924:	469a      	mov	sl, r3
    6926:	2100      	movs	r1, #0
    6928:	4653      	mov	r3, sl
    692a:	2201      	movs	r2, #1
    692c:	2700      	movs	r7, #0
    692e:	4689      	mov	r9, r1
    6930:	401a      	ands	r2, r3
    6932:	4b3c      	ldr	r3, [pc, #240]	; (6a24 <__aeabi_ddiv+0x1c0>)
    6934:	2100      	movs	r1, #0
    6936:	033f      	lsls	r7, r7, #12
    6938:	0d0c      	lsrs	r4, r1, #20
    693a:	0524      	lsls	r4, r4, #20
    693c:	0b3f      	lsrs	r7, r7, #12
    693e:	4327      	orrs	r7, r4
    6940:	4c3b      	ldr	r4, [pc, #236]	; (6a30 <__aeabi_ddiv+0x1cc>)
    6942:	051b      	lsls	r3, r3, #20
    6944:	4027      	ands	r7, r4
    6946:	431f      	orrs	r7, r3
    6948:	007f      	lsls	r7, r7, #1
    694a:	07d2      	lsls	r2, r2, #31
    694c:	087f      	lsrs	r7, r7, #1
    694e:	4317      	orrs	r7, r2
    6950:	4648      	mov	r0, r9
    6952:	1c39      	adds	r1, r7, #0
    6954:	b007      	add	sp, #28
    6956:	bc3c      	pop	{r2, r3, r4, r5}
    6958:	4690      	mov	r8, r2
    695a:	4699      	mov	r9, r3
    695c:	46a2      	mov	sl, r4
    695e:	46ab      	mov	fp, r5
    6960:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6962:	4303      	orrs	r3, r0
    6964:	d03e      	beq.n	69e4 <__aeabi_ddiv+0x180>
    6966:	465b      	mov	r3, fp
    6968:	2b00      	cmp	r3, #0
    696a:	d100      	bne.n	696e <__aeabi_ddiv+0x10a>
    696c:	e19c      	b.n	6ca8 <__aeabi_ddiv+0x444>
    696e:	4658      	mov	r0, fp
    6970:	f001 fafe 	bl	7f70 <__clzsi2>
    6974:	2328      	movs	r3, #40	; 0x28
    6976:	1c31      	adds	r1, r6, #0
    6978:	1a1b      	subs	r3, r3, r0
    697a:	1c02      	adds	r2, r0, #0
    697c:	465f      	mov	r7, fp
    697e:	40d9      	lsrs	r1, r3
    6980:	3a08      	subs	r2, #8
    6982:	4097      	lsls	r7, r2
    6984:	1c0b      	adds	r3, r1, #0
    6986:	4096      	lsls	r6, r2
    6988:	433b      	orrs	r3, r7
    698a:	469b      	mov	fp, r3
    698c:	46b1      	mov	r9, r6
    698e:	2300      	movs	r3, #0
    6990:	4d28      	ldr	r5, [pc, #160]	; (6a34 <__aeabi_ddiv+0x1d0>)
    6992:	2600      	movs	r6, #0
    6994:	1a2d      	subs	r5, r5, r0
    6996:	9300      	str	r3, [sp, #0]
    6998:	e78a      	b.n	68b0 <__aeabi_ddiv+0x4c>
    699a:	4652      	mov	r2, sl
    699c:	2103      	movs	r1, #3
    699e:	433a      	orrs	r2, r7
    69a0:	d1a0      	bne.n	68e4 <__aeabi_ddiv+0x80>
    69a2:	2700      	movs	r7, #0
    69a4:	2300      	movs	r3, #0
    69a6:	2102      	movs	r1, #2
    69a8:	e79c      	b.n	68e4 <__aeabi_ddiv+0x80>
    69aa:	4652      	mov	r2, sl
    69ac:	433a      	orrs	r2, r7
    69ae:	d015      	beq.n	69dc <__aeabi_ddiv+0x178>
    69b0:	2f00      	cmp	r7, #0
    69b2:	d100      	bne.n	69b6 <__aeabi_ddiv+0x152>
    69b4:	e185      	b.n	6cc2 <__aeabi_ddiv+0x45e>
    69b6:	1c38      	adds	r0, r7, #0
    69b8:	f001 fada 	bl	7f70 <__clzsi2>
    69bc:	1c02      	adds	r2, r0, #0
    69be:	2128      	movs	r1, #40	; 0x28
    69c0:	4650      	mov	r0, sl
    69c2:	1a89      	subs	r1, r1, r2
    69c4:	1c13      	adds	r3, r2, #0
    69c6:	40c8      	lsrs	r0, r1
    69c8:	4651      	mov	r1, sl
    69ca:	3b08      	subs	r3, #8
    69cc:	4099      	lsls	r1, r3
    69ce:	409f      	lsls	r7, r3
    69d0:	1c0b      	adds	r3, r1, #0
    69d2:	4307      	orrs	r7, r0
    69d4:	4817      	ldr	r0, [pc, #92]	; (6a34 <__aeabi_ddiv+0x1d0>)
    69d6:	2100      	movs	r1, #0
    69d8:	1a80      	subs	r0, r0, r2
    69da:	e783      	b.n	68e4 <__aeabi_ddiv+0x80>
    69dc:	2700      	movs	r7, #0
    69de:	2300      	movs	r3, #0
    69e0:	2101      	movs	r1, #1
    69e2:	e77f      	b.n	68e4 <__aeabi_ddiv+0x80>
    69e4:	2300      	movs	r3, #0
    69e6:	469b      	mov	fp, r3
    69e8:	4699      	mov	r9, r3
    69ea:	3301      	adds	r3, #1
    69ec:	2604      	movs	r6, #4
    69ee:	9300      	str	r3, [sp, #0]
    69f0:	e75e      	b.n	68b0 <__aeabi_ddiv+0x4c>
    69f2:	2303      	movs	r3, #3
    69f4:	260c      	movs	r6, #12
    69f6:	9300      	str	r3, [sp, #0]
    69f8:	e75a      	b.n	68b0 <__aeabi_ddiv+0x4c>
    69fa:	2b03      	cmp	r3, #3
    69fc:	d100      	bne.n	6a00 <__aeabi_ddiv+0x19c>
    69fe:	e23c      	b.n	6e7a <__aeabi_ddiv+0x616>
    6a00:	2b01      	cmp	r3, #1
    6a02:	d000      	beq.n	6a06 <__aeabi_ddiv+0x1a2>
    6a04:	e1bf      	b.n	6d86 <__aeabi_ddiv+0x522>
    6a06:	1c1a      	adds	r2, r3, #0
    6a08:	9b01      	ldr	r3, [sp, #4]
    6a0a:	401a      	ands	r2, r3
    6a0c:	2100      	movs	r1, #0
    6a0e:	2300      	movs	r3, #0
    6a10:	2700      	movs	r7, #0
    6a12:	4689      	mov	r9, r1
    6a14:	e78e      	b.n	6934 <__aeabi_ddiv+0xd0>
    6a16:	2300      	movs	r3, #0
    6a18:	2780      	movs	r7, #128	; 0x80
    6a1a:	4699      	mov	r9, r3
    6a1c:	2200      	movs	r2, #0
    6a1e:	033f      	lsls	r7, r7, #12
    6a20:	4b00      	ldr	r3, [pc, #0]	; (6a24 <__aeabi_ddiv+0x1c0>)
    6a22:	e787      	b.n	6934 <__aeabi_ddiv+0xd0>
    6a24:	000007ff 	.word	0x000007ff
    6a28:	fffffc01 	.word	0xfffffc01
    6a2c:	0000e2a0 	.word	0x0000e2a0
    6a30:	800fffff 	.word	0x800fffff
    6a34:	fffffc0d 	.word	0xfffffc0d
    6a38:	45bb      	cmp	fp, r7
    6a3a:	d900      	bls.n	6a3e <__aeabi_ddiv+0x1da>
    6a3c:	e151      	b.n	6ce2 <__aeabi_ddiv+0x47e>
    6a3e:	d100      	bne.n	6a42 <__aeabi_ddiv+0x1de>
    6a40:	e14c      	b.n	6cdc <__aeabi_ddiv+0x478>
    6a42:	464a      	mov	r2, r9
    6a44:	9203      	str	r2, [sp, #12]
    6a46:	2200      	movs	r2, #0
    6a48:	465c      	mov	r4, fp
    6a4a:	4690      	mov	r8, r2
    6a4c:	3d01      	subs	r5, #1
    6a4e:	0e18      	lsrs	r0, r3, #24
    6a50:	023f      	lsls	r7, r7, #8
    6a52:	4338      	orrs	r0, r7
    6a54:	021b      	lsls	r3, r3, #8
    6a56:	9301      	str	r3, [sp, #4]
    6a58:	0c03      	lsrs	r3, r0, #16
    6a5a:	4699      	mov	r9, r3
    6a5c:	0403      	lsls	r3, r0, #16
    6a5e:	0c1b      	lsrs	r3, r3, #16
    6a60:	4649      	mov	r1, r9
    6a62:	1c06      	adds	r6, r0, #0
    6a64:	1c20      	adds	r0, r4, #0
    6a66:	1c1f      	adds	r7, r3, #0
    6a68:	9300      	str	r3, [sp, #0]
    6a6a:	f7ff f9cb 	bl	5e04 <__aeabi_uidiv>
    6a6e:	1c02      	adds	r2, r0, #0
    6a70:	437a      	muls	r2, r7
    6a72:	9002      	str	r0, [sp, #8]
    6a74:	4649      	mov	r1, r9
    6a76:	1c20      	adds	r0, r4, #0
    6a78:	1c17      	adds	r7, r2, #0
    6a7a:	f7ff fa49 	bl	5f10 <__aeabi_uidivmod>
    6a7e:	9b03      	ldr	r3, [sp, #12]
    6a80:	0409      	lsls	r1, r1, #16
    6a82:	0c1b      	lsrs	r3, r3, #16
    6a84:	4319      	orrs	r1, r3
    6a86:	428f      	cmp	r7, r1
    6a88:	d90c      	bls.n	6aa4 <__aeabi_ddiv+0x240>
    6a8a:	9b02      	ldr	r3, [sp, #8]
    6a8c:	1989      	adds	r1, r1, r6
    6a8e:	3b01      	subs	r3, #1
    6a90:	428e      	cmp	r6, r1
    6a92:	d900      	bls.n	6a96 <__aeabi_ddiv+0x232>
    6a94:	e152      	b.n	6d3c <__aeabi_ddiv+0x4d8>
    6a96:	428f      	cmp	r7, r1
    6a98:	d800      	bhi.n	6a9c <__aeabi_ddiv+0x238>
    6a9a:	e14f      	b.n	6d3c <__aeabi_ddiv+0x4d8>
    6a9c:	9b02      	ldr	r3, [sp, #8]
    6a9e:	1989      	adds	r1, r1, r6
    6aa0:	3b02      	subs	r3, #2
    6aa2:	9302      	str	r3, [sp, #8]
    6aa4:	1bcc      	subs	r4, r1, r7
    6aa6:	1c20      	adds	r0, r4, #0
    6aa8:	4649      	mov	r1, r9
    6aaa:	f7ff f9ab 	bl	5e04 <__aeabi_uidiv>
    6aae:	9f00      	ldr	r7, [sp, #0]
    6ab0:	4683      	mov	fp, r0
    6ab2:	4347      	muls	r7, r0
    6ab4:	4649      	mov	r1, r9
    6ab6:	1c20      	adds	r0, r4, #0
    6ab8:	f7ff fa2a 	bl	5f10 <__aeabi_uidivmod>
    6abc:	9a03      	ldr	r2, [sp, #12]
    6abe:	040b      	lsls	r3, r1, #16
    6ac0:	0414      	lsls	r4, r2, #16
    6ac2:	0c24      	lsrs	r4, r4, #16
    6ac4:	4323      	orrs	r3, r4
    6ac6:	429f      	cmp	r7, r3
    6ac8:	d90d      	bls.n	6ae6 <__aeabi_ddiv+0x282>
    6aca:	465a      	mov	r2, fp
    6acc:	199b      	adds	r3, r3, r6
    6ace:	3a01      	subs	r2, #1
    6ad0:	429e      	cmp	r6, r3
    6ad2:	d900      	bls.n	6ad6 <__aeabi_ddiv+0x272>
    6ad4:	e130      	b.n	6d38 <__aeabi_ddiv+0x4d4>
    6ad6:	429f      	cmp	r7, r3
    6ad8:	d800      	bhi.n	6adc <__aeabi_ddiv+0x278>
    6ada:	e12d      	b.n	6d38 <__aeabi_ddiv+0x4d4>
    6adc:	2202      	movs	r2, #2
    6ade:	4252      	negs	r2, r2
    6ae0:	4694      	mov	ip, r2
    6ae2:	199b      	adds	r3, r3, r6
    6ae4:	44e3      	add	fp, ip
    6ae6:	9a02      	ldr	r2, [sp, #8]
    6ae8:	1bdb      	subs	r3, r3, r7
    6aea:	0417      	lsls	r7, r2, #16
    6aec:	465a      	mov	r2, fp
    6aee:	433a      	orrs	r2, r7
    6af0:	4693      	mov	fp, r2
    6af2:	9c01      	ldr	r4, [sp, #4]
    6af4:	0c17      	lsrs	r7, r2, #16
    6af6:	0c22      	lsrs	r2, r4, #16
    6af8:	1c10      	adds	r0, r2, #0
    6afa:	9204      	str	r2, [sp, #16]
    6afc:	465a      	mov	r2, fp
    6afe:	0411      	lsls	r1, r2, #16
    6b00:	0422      	lsls	r2, r4, #16
    6b02:	0c12      	lsrs	r2, r2, #16
    6b04:	1c14      	adds	r4, r2, #0
    6b06:	0c09      	lsrs	r1, r1, #16
    6b08:	437c      	muls	r4, r7
    6b0a:	9205      	str	r2, [sp, #20]
    6b0c:	434a      	muls	r2, r1
    6b0e:	4341      	muls	r1, r0
    6b10:	4347      	muls	r7, r0
    6b12:	1861      	adds	r1, r4, r1
    6b14:	0c10      	lsrs	r0, r2, #16
    6b16:	1809      	adds	r1, r1, r0
    6b18:	428c      	cmp	r4, r1
    6b1a:	d903      	bls.n	6b24 <__aeabi_ddiv+0x2c0>
    6b1c:	2080      	movs	r0, #128	; 0x80
    6b1e:	0240      	lsls	r0, r0, #9
    6b20:	4684      	mov	ip, r0
    6b22:	4467      	add	r7, ip
    6b24:	0c0c      	lsrs	r4, r1, #16
    6b26:	0412      	lsls	r2, r2, #16
    6b28:	0408      	lsls	r0, r1, #16
    6b2a:	0c12      	lsrs	r2, r2, #16
    6b2c:	193c      	adds	r4, r7, r4
    6b2e:	1881      	adds	r1, r0, r2
    6b30:	42a3      	cmp	r3, r4
    6b32:	d200      	bcs.n	6b36 <__aeabi_ddiv+0x2d2>
    6b34:	e0e5      	b.n	6d02 <__aeabi_ddiv+0x49e>
    6b36:	d100      	bne.n	6b3a <__aeabi_ddiv+0x2d6>
    6b38:	e0df      	b.n	6cfa <__aeabi_ddiv+0x496>
    6b3a:	1b1f      	subs	r7, r3, r4
    6b3c:	4643      	mov	r3, r8
    6b3e:	1a5c      	subs	r4, r3, r1
    6b40:	45a0      	cmp	r8, r4
    6b42:	4192      	sbcs	r2, r2
    6b44:	4252      	negs	r2, r2
    6b46:	1abf      	subs	r7, r7, r2
    6b48:	42b7      	cmp	r7, r6
    6b4a:	d100      	bne.n	6b4e <__aeabi_ddiv+0x2ea>
    6b4c:	e10e      	b.n	6d6c <__aeabi_ddiv+0x508>
    6b4e:	1c38      	adds	r0, r7, #0
    6b50:	4649      	mov	r1, r9
    6b52:	f7ff f957 	bl	5e04 <__aeabi_uidiv>
    6b56:	9b00      	ldr	r3, [sp, #0]
    6b58:	9002      	str	r0, [sp, #8]
    6b5a:	4343      	muls	r3, r0
    6b5c:	4649      	mov	r1, r9
    6b5e:	1c38      	adds	r0, r7, #0
    6b60:	4698      	mov	r8, r3
    6b62:	f7ff f9d5 	bl	5f10 <__aeabi_uidivmod>
    6b66:	0c23      	lsrs	r3, r4, #16
    6b68:	040f      	lsls	r7, r1, #16
    6b6a:	431f      	orrs	r7, r3
    6b6c:	45b8      	cmp	r8, r7
    6b6e:	d90c      	bls.n	6b8a <__aeabi_ddiv+0x326>
    6b70:	9b02      	ldr	r3, [sp, #8]
    6b72:	19bf      	adds	r7, r7, r6
    6b74:	3b01      	subs	r3, #1
    6b76:	42be      	cmp	r6, r7
    6b78:	d900      	bls.n	6b7c <__aeabi_ddiv+0x318>
    6b7a:	e0fb      	b.n	6d74 <__aeabi_ddiv+0x510>
    6b7c:	45b8      	cmp	r8, r7
    6b7e:	d800      	bhi.n	6b82 <__aeabi_ddiv+0x31e>
    6b80:	e0f8      	b.n	6d74 <__aeabi_ddiv+0x510>
    6b82:	9b02      	ldr	r3, [sp, #8]
    6b84:	19bf      	adds	r7, r7, r6
    6b86:	3b02      	subs	r3, #2
    6b88:	9302      	str	r3, [sp, #8]
    6b8a:	4643      	mov	r3, r8
    6b8c:	1aff      	subs	r7, r7, r3
    6b8e:	4649      	mov	r1, r9
    6b90:	1c38      	adds	r0, r7, #0
    6b92:	f7ff f937 	bl	5e04 <__aeabi_uidiv>
    6b96:	9b00      	ldr	r3, [sp, #0]
    6b98:	9003      	str	r0, [sp, #12]
    6b9a:	4343      	muls	r3, r0
    6b9c:	4649      	mov	r1, r9
    6b9e:	1c38      	adds	r0, r7, #0
    6ba0:	4698      	mov	r8, r3
    6ba2:	f7ff f9b5 	bl	5f10 <__aeabi_uidivmod>
    6ba6:	0424      	lsls	r4, r4, #16
    6ba8:	0409      	lsls	r1, r1, #16
    6baa:	0c24      	lsrs	r4, r4, #16
    6bac:	4321      	orrs	r1, r4
    6bae:	4588      	cmp	r8, r1
    6bb0:	d90c      	bls.n	6bcc <__aeabi_ddiv+0x368>
    6bb2:	9b03      	ldr	r3, [sp, #12]
    6bb4:	1989      	adds	r1, r1, r6
    6bb6:	3b01      	subs	r3, #1
    6bb8:	428e      	cmp	r6, r1
    6bba:	d900      	bls.n	6bbe <__aeabi_ddiv+0x35a>
    6bbc:	e0dc      	b.n	6d78 <__aeabi_ddiv+0x514>
    6bbe:	4588      	cmp	r8, r1
    6bc0:	d800      	bhi.n	6bc4 <__aeabi_ddiv+0x360>
    6bc2:	e0d9      	b.n	6d78 <__aeabi_ddiv+0x514>
    6bc4:	9b03      	ldr	r3, [sp, #12]
    6bc6:	1989      	adds	r1, r1, r6
    6bc8:	3b02      	subs	r3, #2
    6bca:	9303      	str	r3, [sp, #12]
    6bcc:	4643      	mov	r3, r8
    6bce:	1ac9      	subs	r1, r1, r3
    6bd0:	9b02      	ldr	r3, [sp, #8]
    6bd2:	9a03      	ldr	r2, [sp, #12]
    6bd4:	041b      	lsls	r3, r3, #16
    6bd6:	9c05      	ldr	r4, [sp, #20]
    6bd8:	431a      	orrs	r2, r3
    6bda:	0c10      	lsrs	r0, r2, #16
    6bdc:	0413      	lsls	r3, r2, #16
    6bde:	4691      	mov	r9, r2
    6be0:	1c22      	adds	r2, r4, #0
    6be2:	9f04      	ldr	r7, [sp, #16]
    6be4:	0c1b      	lsrs	r3, r3, #16
    6be6:	435a      	muls	r2, r3
    6be8:	4344      	muls	r4, r0
    6bea:	437b      	muls	r3, r7
    6bec:	4378      	muls	r0, r7
    6bee:	18e3      	adds	r3, r4, r3
    6bf0:	0c17      	lsrs	r7, r2, #16
    6bf2:	19db      	adds	r3, r3, r7
    6bf4:	429c      	cmp	r4, r3
    6bf6:	d903      	bls.n	6c00 <__aeabi_ddiv+0x39c>
    6bf8:	2480      	movs	r4, #128	; 0x80
    6bfa:	0264      	lsls	r4, r4, #9
    6bfc:	46a4      	mov	ip, r4
    6bfe:	4460      	add	r0, ip
    6c00:	0c1c      	lsrs	r4, r3, #16
    6c02:	0412      	lsls	r2, r2, #16
    6c04:	041b      	lsls	r3, r3, #16
    6c06:	0c12      	lsrs	r2, r2, #16
    6c08:	1900      	adds	r0, r0, r4
    6c0a:	189b      	adds	r3, r3, r2
    6c0c:	4281      	cmp	r1, r0
    6c0e:	d200      	bcs.n	6c12 <__aeabi_ddiv+0x3ae>
    6c10:	e096      	b.n	6d40 <__aeabi_ddiv+0x4dc>
    6c12:	d100      	bne.n	6c16 <__aeabi_ddiv+0x3b2>
    6c14:	e0fc      	b.n	6e10 <__aeabi_ddiv+0x5ac>
    6c16:	464a      	mov	r2, r9
    6c18:	2301      	movs	r3, #1
    6c1a:	431a      	orrs	r2, r3
    6c1c:	4691      	mov	r9, r2
    6c1e:	4b9b      	ldr	r3, [pc, #620]	; (6e8c <__aeabi_ddiv+0x628>)
    6c20:	18eb      	adds	r3, r5, r3
    6c22:	2b00      	cmp	r3, #0
    6c24:	dc00      	bgt.n	6c28 <__aeabi_ddiv+0x3c4>
    6c26:	e099      	b.n	6d5c <__aeabi_ddiv+0x4f8>
    6c28:	464a      	mov	r2, r9
    6c2a:	0752      	lsls	r2, r2, #29
    6c2c:	d00a      	beq.n	6c44 <__aeabi_ddiv+0x3e0>
    6c2e:	220f      	movs	r2, #15
    6c30:	4649      	mov	r1, r9
    6c32:	400a      	ands	r2, r1
    6c34:	2a04      	cmp	r2, #4
    6c36:	d005      	beq.n	6c44 <__aeabi_ddiv+0x3e0>
    6c38:	3104      	adds	r1, #4
    6c3a:	4549      	cmp	r1, r9
    6c3c:	4192      	sbcs	r2, r2
    6c3e:	4689      	mov	r9, r1
    6c40:	4252      	negs	r2, r2
    6c42:	4493      	add	fp, r2
    6c44:	465a      	mov	r2, fp
    6c46:	01d2      	lsls	r2, r2, #7
    6c48:	d506      	bpl.n	6c58 <__aeabi_ddiv+0x3f4>
    6c4a:	465a      	mov	r2, fp
    6c4c:	4b90      	ldr	r3, [pc, #576]	; (6e90 <__aeabi_ddiv+0x62c>)
    6c4e:	401a      	ands	r2, r3
    6c50:	2380      	movs	r3, #128	; 0x80
    6c52:	4693      	mov	fp, r2
    6c54:	00db      	lsls	r3, r3, #3
    6c56:	18eb      	adds	r3, r5, r3
    6c58:	4a8e      	ldr	r2, [pc, #568]	; (6e94 <__aeabi_ddiv+0x630>)
    6c5a:	4293      	cmp	r3, r2
    6c5c:	dd00      	ble.n	6c60 <__aeabi_ddiv+0x3fc>
    6c5e:	e662      	b.n	6926 <__aeabi_ddiv+0xc2>
    6c60:	464a      	mov	r2, r9
    6c62:	4659      	mov	r1, fp
    6c64:	08d2      	lsrs	r2, r2, #3
    6c66:	0749      	lsls	r1, r1, #29
    6c68:	4311      	orrs	r1, r2
    6c6a:	465a      	mov	r2, fp
    6c6c:	4689      	mov	r9, r1
    6c6e:	0257      	lsls	r7, r2, #9
    6c70:	4651      	mov	r1, sl
    6c72:	2201      	movs	r2, #1
    6c74:	055b      	lsls	r3, r3, #21
    6c76:	0b3f      	lsrs	r7, r7, #12
    6c78:	0d5b      	lsrs	r3, r3, #21
    6c7a:	400a      	ands	r2, r1
    6c7c:	e65a      	b.n	6934 <__aeabi_ddiv+0xd0>
    6c7e:	2080      	movs	r0, #128	; 0x80
    6c80:	465a      	mov	r2, fp
    6c82:	0300      	lsls	r0, r0, #12
    6c84:	4202      	tst	r2, r0
    6c86:	d008      	beq.n	6c9a <__aeabi_ddiv+0x436>
    6c88:	4207      	tst	r7, r0
    6c8a:	d106      	bne.n	6c9a <__aeabi_ddiv+0x436>
    6c8c:	4307      	orrs	r7, r0
    6c8e:	033f      	lsls	r7, r7, #12
    6c90:	4699      	mov	r9, r3
    6c92:	0b3f      	lsrs	r7, r7, #12
    6c94:	4642      	mov	r2, r8
    6c96:	4b80      	ldr	r3, [pc, #512]	; (6e98 <__aeabi_ddiv+0x634>)
    6c98:	e64c      	b.n	6934 <__aeabi_ddiv+0xd0>
    6c9a:	465f      	mov	r7, fp
    6c9c:	4307      	orrs	r7, r0
    6c9e:	033f      	lsls	r7, r7, #12
    6ca0:	0b3f      	lsrs	r7, r7, #12
    6ca2:	1c22      	adds	r2, r4, #0
    6ca4:	4b7c      	ldr	r3, [pc, #496]	; (6e98 <__aeabi_ddiv+0x634>)
    6ca6:	e645      	b.n	6934 <__aeabi_ddiv+0xd0>
    6ca8:	f001 f962 	bl	7f70 <__clzsi2>
    6cac:	1c03      	adds	r3, r0, #0
    6cae:	3020      	adds	r0, #32
    6cb0:	2827      	cmp	r0, #39	; 0x27
    6cb2:	dc00      	bgt.n	6cb6 <__aeabi_ddiv+0x452>
    6cb4:	e65e      	b.n	6974 <__aeabi_ddiv+0x110>
    6cb6:	3b08      	subs	r3, #8
    6cb8:	409e      	lsls	r6, r3
    6cba:	2300      	movs	r3, #0
    6cbc:	46b3      	mov	fp, r6
    6cbe:	4699      	mov	r9, r3
    6cc0:	e665      	b.n	698e <__aeabi_ddiv+0x12a>
    6cc2:	4650      	mov	r0, sl
    6cc4:	f001 f954 	bl	7f70 <__clzsi2>
    6cc8:	1c02      	adds	r2, r0, #0
    6cca:	3220      	adds	r2, #32
    6ccc:	2a27      	cmp	r2, #39	; 0x27
    6cce:	dc00      	bgt.n	6cd2 <__aeabi_ddiv+0x46e>
    6cd0:	e675      	b.n	69be <__aeabi_ddiv+0x15a>
    6cd2:	4657      	mov	r7, sl
    6cd4:	3808      	subs	r0, #8
    6cd6:	4087      	lsls	r7, r0
    6cd8:	2300      	movs	r3, #0
    6cda:	e67b      	b.n	69d4 <__aeabi_ddiv+0x170>
    6cdc:	4599      	cmp	r9, r3
    6cde:	d200      	bcs.n	6ce2 <__aeabi_ddiv+0x47e>
    6ce0:	e6af      	b.n	6a42 <__aeabi_ddiv+0x1de>
    6ce2:	465a      	mov	r2, fp
    6ce4:	4659      	mov	r1, fp
    6ce6:	0854      	lsrs	r4, r2, #1
    6ce8:	464a      	mov	r2, r9
    6cea:	07c8      	lsls	r0, r1, #31
    6cec:	0852      	lsrs	r2, r2, #1
    6cee:	4302      	orrs	r2, r0
    6cf0:	9203      	str	r2, [sp, #12]
    6cf2:	464a      	mov	r2, r9
    6cf4:	07d2      	lsls	r2, r2, #31
    6cf6:	4690      	mov	r8, r2
    6cf8:	e6a9      	b.n	6a4e <__aeabi_ddiv+0x1ea>
    6cfa:	2700      	movs	r7, #0
    6cfc:	4588      	cmp	r8, r1
    6cfe:	d300      	bcc.n	6d02 <__aeabi_ddiv+0x49e>
    6d00:	e71c      	b.n	6b3c <__aeabi_ddiv+0x2d8>
    6d02:	9f01      	ldr	r7, [sp, #4]
    6d04:	465a      	mov	r2, fp
    6d06:	46bc      	mov	ip, r7
    6d08:	44e0      	add	r8, ip
    6d0a:	45b8      	cmp	r8, r7
    6d0c:	41bf      	sbcs	r7, r7
    6d0e:	427f      	negs	r7, r7
    6d10:	19bf      	adds	r7, r7, r6
    6d12:	18ff      	adds	r7, r7, r3
    6d14:	3a01      	subs	r2, #1
    6d16:	42be      	cmp	r6, r7
    6d18:	d206      	bcs.n	6d28 <__aeabi_ddiv+0x4c4>
    6d1a:	42bc      	cmp	r4, r7
    6d1c:	d85f      	bhi.n	6dde <__aeabi_ddiv+0x57a>
    6d1e:	d100      	bne.n	6d22 <__aeabi_ddiv+0x4be>
    6d20:	e09f      	b.n	6e62 <__aeabi_ddiv+0x5fe>
    6d22:	1b3f      	subs	r7, r7, r4
    6d24:	4693      	mov	fp, r2
    6d26:	e709      	b.n	6b3c <__aeabi_ddiv+0x2d8>
    6d28:	42b7      	cmp	r7, r6
    6d2a:	d1fa      	bne.n	6d22 <__aeabi_ddiv+0x4be>
    6d2c:	9b01      	ldr	r3, [sp, #4]
    6d2e:	4543      	cmp	r3, r8
    6d30:	d9f3      	bls.n	6d1a <__aeabi_ddiv+0x4b6>
    6d32:	1b37      	subs	r7, r6, r4
    6d34:	4693      	mov	fp, r2
    6d36:	e701      	b.n	6b3c <__aeabi_ddiv+0x2d8>
    6d38:	4693      	mov	fp, r2
    6d3a:	e6d4      	b.n	6ae6 <__aeabi_ddiv+0x282>
    6d3c:	9302      	str	r3, [sp, #8]
    6d3e:	e6b1      	b.n	6aa4 <__aeabi_ddiv+0x240>
    6d40:	464a      	mov	r2, r9
    6d42:	1989      	adds	r1, r1, r6
    6d44:	3a01      	subs	r2, #1
    6d46:	428e      	cmp	r6, r1
    6d48:	d918      	bls.n	6d7c <__aeabi_ddiv+0x518>
    6d4a:	4691      	mov	r9, r2
    6d4c:	4281      	cmp	r1, r0
    6d4e:	d000      	beq.n	6d52 <__aeabi_ddiv+0x4ee>
    6d50:	e761      	b.n	6c16 <__aeabi_ddiv+0x3b2>
    6d52:	9a01      	ldr	r2, [sp, #4]
    6d54:	429a      	cmp	r2, r3
    6d56:	d000      	beq.n	6d5a <__aeabi_ddiv+0x4f6>
    6d58:	e75d      	b.n	6c16 <__aeabi_ddiv+0x3b2>
    6d5a:	e760      	b.n	6c1e <__aeabi_ddiv+0x3ba>
    6d5c:	4f4f      	ldr	r7, [pc, #316]	; (6e9c <__aeabi_ddiv+0x638>)
    6d5e:	1b7f      	subs	r7, r7, r5
    6d60:	2f38      	cmp	r7, #56	; 0x38
    6d62:	dd13      	ble.n	6d8c <__aeabi_ddiv+0x528>
    6d64:	2201      	movs	r2, #1
    6d66:	4653      	mov	r3, sl
    6d68:	401a      	ands	r2, r3
    6d6a:	e64f      	b.n	6a0c <__aeabi_ddiv+0x1a8>
    6d6c:	2301      	movs	r3, #1
    6d6e:	425b      	negs	r3, r3
    6d70:	4699      	mov	r9, r3
    6d72:	e754      	b.n	6c1e <__aeabi_ddiv+0x3ba>
    6d74:	9302      	str	r3, [sp, #8]
    6d76:	e708      	b.n	6b8a <__aeabi_ddiv+0x326>
    6d78:	9303      	str	r3, [sp, #12]
    6d7a:	e727      	b.n	6bcc <__aeabi_ddiv+0x368>
    6d7c:	4288      	cmp	r0, r1
    6d7e:	d83c      	bhi.n	6dfa <__aeabi_ddiv+0x596>
    6d80:	d074      	beq.n	6e6c <__aeabi_ddiv+0x608>
    6d82:	4691      	mov	r9, r2
    6d84:	e747      	b.n	6c16 <__aeabi_ddiv+0x3b2>
    6d86:	9b01      	ldr	r3, [sp, #4]
    6d88:	469a      	mov	sl, r3
    6d8a:	e748      	b.n	6c1e <__aeabi_ddiv+0x3ba>
    6d8c:	2f1f      	cmp	r7, #31
    6d8e:	dc44      	bgt.n	6e1a <__aeabi_ddiv+0x5b6>
    6d90:	4b43      	ldr	r3, [pc, #268]	; (6ea0 <__aeabi_ddiv+0x63c>)
    6d92:	464a      	mov	r2, r9
    6d94:	469c      	mov	ip, r3
    6d96:	465b      	mov	r3, fp
    6d98:	4465      	add	r5, ip
    6d9a:	40fa      	lsrs	r2, r7
    6d9c:	40ab      	lsls	r3, r5
    6d9e:	4313      	orrs	r3, r2
    6da0:	464a      	mov	r2, r9
    6da2:	40aa      	lsls	r2, r5
    6da4:	1c15      	adds	r5, r2, #0
    6da6:	1e6a      	subs	r2, r5, #1
    6da8:	4195      	sbcs	r5, r2
    6daa:	465a      	mov	r2, fp
    6dac:	40fa      	lsrs	r2, r7
    6dae:	432b      	orrs	r3, r5
    6db0:	1c17      	adds	r7, r2, #0
    6db2:	075a      	lsls	r2, r3, #29
    6db4:	d009      	beq.n	6dca <__aeabi_ddiv+0x566>
    6db6:	220f      	movs	r2, #15
    6db8:	401a      	ands	r2, r3
    6dba:	2a04      	cmp	r2, #4
    6dbc:	d005      	beq.n	6dca <__aeabi_ddiv+0x566>
    6dbe:	1d1a      	adds	r2, r3, #4
    6dc0:	429a      	cmp	r2, r3
    6dc2:	419b      	sbcs	r3, r3
    6dc4:	425b      	negs	r3, r3
    6dc6:	18ff      	adds	r7, r7, r3
    6dc8:	1c13      	adds	r3, r2, #0
    6dca:	023a      	lsls	r2, r7, #8
    6dcc:	d53e      	bpl.n	6e4c <__aeabi_ddiv+0x5e8>
    6dce:	4653      	mov	r3, sl
    6dd0:	2201      	movs	r2, #1
    6dd2:	2100      	movs	r1, #0
    6dd4:	401a      	ands	r2, r3
    6dd6:	2700      	movs	r7, #0
    6dd8:	2301      	movs	r3, #1
    6dda:	4689      	mov	r9, r1
    6ddc:	e5aa      	b.n	6934 <__aeabi_ddiv+0xd0>
    6dde:	2302      	movs	r3, #2
    6de0:	425b      	negs	r3, r3
    6de2:	469c      	mov	ip, r3
    6de4:	9a01      	ldr	r2, [sp, #4]
    6de6:	44e3      	add	fp, ip
    6de8:	4694      	mov	ip, r2
    6dea:	44e0      	add	r8, ip
    6dec:	4590      	cmp	r8, r2
    6dee:	419b      	sbcs	r3, r3
    6df0:	425b      	negs	r3, r3
    6df2:	199b      	adds	r3, r3, r6
    6df4:	19df      	adds	r7, r3, r7
    6df6:	1b3f      	subs	r7, r7, r4
    6df8:	e6a0      	b.n	6b3c <__aeabi_ddiv+0x2d8>
    6dfa:	9f01      	ldr	r7, [sp, #4]
    6dfc:	464a      	mov	r2, r9
    6dfe:	007c      	lsls	r4, r7, #1
    6e00:	42bc      	cmp	r4, r7
    6e02:	41bf      	sbcs	r7, r7
    6e04:	427f      	negs	r7, r7
    6e06:	19bf      	adds	r7, r7, r6
    6e08:	3a02      	subs	r2, #2
    6e0a:	19c9      	adds	r1, r1, r7
    6e0c:	9401      	str	r4, [sp, #4]
    6e0e:	e79c      	b.n	6d4a <__aeabi_ddiv+0x4e6>
    6e10:	2b00      	cmp	r3, #0
    6e12:	d195      	bne.n	6d40 <__aeabi_ddiv+0x4dc>
    6e14:	2200      	movs	r2, #0
    6e16:	9201      	str	r2, [sp, #4]
    6e18:	e79b      	b.n	6d52 <__aeabi_ddiv+0x4ee>
    6e1a:	465a      	mov	r2, fp
    6e1c:	4b21      	ldr	r3, [pc, #132]	; (6ea4 <__aeabi_ddiv+0x640>)
    6e1e:	1b5b      	subs	r3, r3, r5
    6e20:	40da      	lsrs	r2, r3
    6e22:	2f20      	cmp	r7, #32
    6e24:	d027      	beq.n	6e76 <__aeabi_ddiv+0x612>
    6e26:	4b20      	ldr	r3, [pc, #128]	; (6ea8 <__aeabi_ddiv+0x644>)
    6e28:	469c      	mov	ip, r3
    6e2a:	465b      	mov	r3, fp
    6e2c:	4465      	add	r5, ip
    6e2e:	40ab      	lsls	r3, r5
    6e30:	4649      	mov	r1, r9
    6e32:	430b      	orrs	r3, r1
    6e34:	1e59      	subs	r1, r3, #1
    6e36:	418b      	sbcs	r3, r1
    6e38:	4313      	orrs	r3, r2
    6e3a:	2207      	movs	r2, #7
    6e3c:	2700      	movs	r7, #0
    6e3e:	401a      	ands	r2, r3
    6e40:	d007      	beq.n	6e52 <__aeabi_ddiv+0x5ee>
    6e42:	220f      	movs	r2, #15
    6e44:	2700      	movs	r7, #0
    6e46:	401a      	ands	r2, r3
    6e48:	2a04      	cmp	r2, #4
    6e4a:	d1b8      	bne.n	6dbe <__aeabi_ddiv+0x55a>
    6e4c:	077a      	lsls	r2, r7, #29
    6e4e:	027f      	lsls	r7, r7, #9
    6e50:	0b3f      	lsrs	r7, r7, #12
    6e52:	08db      	lsrs	r3, r3, #3
    6e54:	4313      	orrs	r3, r2
    6e56:	4699      	mov	r9, r3
    6e58:	2201      	movs	r2, #1
    6e5a:	4653      	mov	r3, sl
    6e5c:	401a      	ands	r2, r3
    6e5e:	2300      	movs	r3, #0
    6e60:	e568      	b.n	6934 <__aeabi_ddiv+0xd0>
    6e62:	4541      	cmp	r1, r8
    6e64:	d8bb      	bhi.n	6dde <__aeabi_ddiv+0x57a>
    6e66:	4693      	mov	fp, r2
    6e68:	2700      	movs	r7, #0
    6e6a:	e667      	b.n	6b3c <__aeabi_ddiv+0x2d8>
    6e6c:	9c01      	ldr	r4, [sp, #4]
    6e6e:	429c      	cmp	r4, r3
    6e70:	d3c3      	bcc.n	6dfa <__aeabi_ddiv+0x596>
    6e72:	4691      	mov	r9, r2
    6e74:	e76d      	b.n	6d52 <__aeabi_ddiv+0x4ee>
    6e76:	2300      	movs	r3, #0
    6e78:	e7da      	b.n	6e30 <__aeabi_ddiv+0x5cc>
    6e7a:	2780      	movs	r7, #128	; 0x80
    6e7c:	465b      	mov	r3, fp
    6e7e:	033f      	lsls	r7, r7, #12
    6e80:	431f      	orrs	r7, r3
    6e82:	033f      	lsls	r7, r7, #12
    6e84:	0b3f      	lsrs	r7, r7, #12
    6e86:	9a01      	ldr	r2, [sp, #4]
    6e88:	4b03      	ldr	r3, [pc, #12]	; (6e98 <__aeabi_ddiv+0x634>)
    6e8a:	e553      	b.n	6934 <__aeabi_ddiv+0xd0>
    6e8c:	000003ff 	.word	0x000003ff
    6e90:	feffffff 	.word	0xfeffffff
    6e94:	000007fe 	.word	0x000007fe
    6e98:	000007ff 	.word	0x000007ff
    6e9c:	fffffc02 	.word	0xfffffc02
    6ea0:	0000041e 	.word	0x0000041e
    6ea4:	fffffbe2 	.word	0xfffffbe2
    6ea8:	0000043e 	.word	0x0000043e

00006eac <__eqdf2>:
    6eac:	b5f0      	push	{r4, r5, r6, r7, lr}
    6eae:	465f      	mov	r7, fp
    6eb0:	464d      	mov	r5, r9
    6eb2:	4644      	mov	r4, r8
    6eb4:	4656      	mov	r6, sl
    6eb6:	b4f0      	push	{r4, r5, r6, r7}
    6eb8:	031f      	lsls	r7, r3, #12
    6eba:	005c      	lsls	r4, r3, #1
    6ebc:	0fdb      	lsrs	r3, r3, #31
    6ebe:	4699      	mov	r9, r3
    6ec0:	4b1b      	ldr	r3, [pc, #108]	; (6f30 <__eqdf2+0x84>)
    6ec2:	030e      	lsls	r6, r1, #12
    6ec4:	004d      	lsls	r5, r1, #1
    6ec6:	0fc9      	lsrs	r1, r1, #31
    6ec8:	4684      	mov	ip, r0
    6eca:	0b36      	lsrs	r6, r6, #12
    6ecc:	0d6d      	lsrs	r5, r5, #21
    6ece:	468b      	mov	fp, r1
    6ed0:	4690      	mov	r8, r2
    6ed2:	0b3f      	lsrs	r7, r7, #12
    6ed4:	0d64      	lsrs	r4, r4, #21
    6ed6:	429d      	cmp	r5, r3
    6ed8:	d00c      	beq.n	6ef4 <__eqdf2+0x48>
    6eda:	4b15      	ldr	r3, [pc, #84]	; (6f30 <__eqdf2+0x84>)
    6edc:	429c      	cmp	r4, r3
    6ede:	d010      	beq.n	6f02 <__eqdf2+0x56>
    6ee0:	2301      	movs	r3, #1
    6ee2:	42a5      	cmp	r5, r4
    6ee4:	d014      	beq.n	6f10 <__eqdf2+0x64>
    6ee6:	1c18      	adds	r0, r3, #0
    6ee8:	bc3c      	pop	{r2, r3, r4, r5}
    6eea:	4690      	mov	r8, r2
    6eec:	4699      	mov	r9, r3
    6eee:	46a2      	mov	sl, r4
    6ef0:	46ab      	mov	fp, r5
    6ef2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6ef4:	1c31      	adds	r1, r6, #0
    6ef6:	2301      	movs	r3, #1
    6ef8:	4301      	orrs	r1, r0
    6efa:	d1f4      	bne.n	6ee6 <__eqdf2+0x3a>
    6efc:	4b0c      	ldr	r3, [pc, #48]	; (6f30 <__eqdf2+0x84>)
    6efe:	429c      	cmp	r4, r3
    6f00:	d1ee      	bne.n	6ee0 <__eqdf2+0x34>
    6f02:	433a      	orrs	r2, r7
    6f04:	2301      	movs	r3, #1
    6f06:	2a00      	cmp	r2, #0
    6f08:	d1ed      	bne.n	6ee6 <__eqdf2+0x3a>
    6f0a:	2301      	movs	r3, #1
    6f0c:	42a5      	cmp	r5, r4
    6f0e:	d1ea      	bne.n	6ee6 <__eqdf2+0x3a>
    6f10:	42be      	cmp	r6, r7
    6f12:	d1e8      	bne.n	6ee6 <__eqdf2+0x3a>
    6f14:	45c4      	cmp	ip, r8
    6f16:	d1e6      	bne.n	6ee6 <__eqdf2+0x3a>
    6f18:	45cb      	cmp	fp, r9
    6f1a:	d006      	beq.n	6f2a <__eqdf2+0x7e>
    6f1c:	2d00      	cmp	r5, #0
    6f1e:	d1e2      	bne.n	6ee6 <__eqdf2+0x3a>
    6f20:	4330      	orrs	r0, r6
    6f22:	1c03      	adds	r3, r0, #0
    6f24:	1e58      	subs	r0, r3, #1
    6f26:	4183      	sbcs	r3, r0
    6f28:	e7dd      	b.n	6ee6 <__eqdf2+0x3a>
    6f2a:	2300      	movs	r3, #0
    6f2c:	e7db      	b.n	6ee6 <__eqdf2+0x3a>
    6f2e:	46c0      	nop			; (mov r8, r8)
    6f30:	000007ff 	.word	0x000007ff

00006f34 <__gedf2>:
    6f34:	b5f0      	push	{r4, r5, r6, r7, lr}
    6f36:	4657      	mov	r7, sl
    6f38:	4645      	mov	r5, r8
    6f3a:	464e      	mov	r6, r9
    6f3c:	b4e0      	push	{r5, r6, r7}
    6f3e:	030f      	lsls	r7, r1, #12
    6f40:	004e      	lsls	r6, r1, #1
    6f42:	0fc9      	lsrs	r1, r1, #31
    6f44:	468a      	mov	sl, r1
    6f46:	4932      	ldr	r1, [pc, #200]	; (7010 <__gedf2+0xdc>)
    6f48:	031d      	lsls	r5, r3, #12
    6f4a:	005c      	lsls	r4, r3, #1
    6f4c:	4684      	mov	ip, r0
    6f4e:	0b3f      	lsrs	r7, r7, #12
    6f50:	0d76      	lsrs	r6, r6, #21
    6f52:	4690      	mov	r8, r2
    6f54:	0b2d      	lsrs	r5, r5, #12
    6f56:	0d64      	lsrs	r4, r4, #21
    6f58:	0fdb      	lsrs	r3, r3, #31
    6f5a:	428e      	cmp	r6, r1
    6f5c:	d00f      	beq.n	6f7e <__gedf2+0x4a>
    6f5e:	428c      	cmp	r4, r1
    6f60:	d039      	beq.n	6fd6 <__gedf2+0xa2>
    6f62:	2e00      	cmp	r6, #0
    6f64:	d110      	bne.n	6f88 <__gedf2+0x54>
    6f66:	4338      	orrs	r0, r7
    6f68:	4241      	negs	r1, r0
    6f6a:	4141      	adcs	r1, r0
    6f6c:	4689      	mov	r9, r1
    6f6e:	2c00      	cmp	r4, #0
    6f70:	d127      	bne.n	6fc2 <__gedf2+0x8e>
    6f72:	432a      	orrs	r2, r5
    6f74:	d125      	bne.n	6fc2 <__gedf2+0x8e>
    6f76:	2000      	movs	r0, #0
    6f78:	2900      	cmp	r1, #0
    6f7a:	d10e      	bne.n	6f9a <__gedf2+0x66>
    6f7c:	e008      	b.n	6f90 <__gedf2+0x5c>
    6f7e:	1c39      	adds	r1, r7, #0
    6f80:	4301      	orrs	r1, r0
    6f82:	d12e      	bne.n	6fe2 <__gedf2+0xae>
    6f84:	42b4      	cmp	r4, r6
    6f86:	d026      	beq.n	6fd6 <__gedf2+0xa2>
    6f88:	2c00      	cmp	r4, #0
    6f8a:	d00b      	beq.n	6fa4 <__gedf2+0x70>
    6f8c:	459a      	cmp	sl, r3
    6f8e:	d00d      	beq.n	6fac <__gedf2+0x78>
    6f90:	4653      	mov	r3, sl
    6f92:	4259      	negs	r1, r3
    6f94:	2301      	movs	r3, #1
    6f96:	4319      	orrs	r1, r3
    6f98:	1c08      	adds	r0, r1, #0
    6f9a:	bc1c      	pop	{r2, r3, r4}
    6f9c:	4690      	mov	r8, r2
    6f9e:	4699      	mov	r9, r3
    6fa0:	46a2      	mov	sl, r4
    6fa2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    6fa4:	432a      	orrs	r2, r5
    6fa6:	d0f3      	beq.n	6f90 <__gedf2+0x5c>
    6fa8:	459a      	cmp	sl, r3
    6faa:	d1f1      	bne.n	6f90 <__gedf2+0x5c>
    6fac:	42a6      	cmp	r6, r4
    6fae:	dcef      	bgt.n	6f90 <__gedf2+0x5c>
    6fb0:	da1a      	bge.n	6fe8 <__gedf2+0xb4>
    6fb2:	4650      	mov	r0, sl
    6fb4:	4241      	negs	r1, r0
    6fb6:	4148      	adcs	r0, r1
    6fb8:	2301      	movs	r3, #1
    6fba:	4241      	negs	r1, r0
    6fbc:	4319      	orrs	r1, r3
    6fbe:	1c08      	adds	r0, r1, #0
    6fc0:	e7eb      	b.n	6f9a <__gedf2+0x66>
    6fc2:	464a      	mov	r2, r9
    6fc4:	2a00      	cmp	r2, #0
    6fc6:	d0e1      	beq.n	6f8c <__gedf2+0x58>
    6fc8:	4258      	negs	r0, r3
    6fca:	4158      	adcs	r0, r3
    6fcc:	2201      	movs	r2, #1
    6fce:	4241      	negs	r1, r0
    6fd0:	4311      	orrs	r1, r2
    6fd2:	1c08      	adds	r0, r1, #0
    6fd4:	e7e1      	b.n	6f9a <__gedf2+0x66>
    6fd6:	1c29      	adds	r1, r5, #0
    6fd8:	4311      	orrs	r1, r2
    6fda:	d102      	bne.n	6fe2 <__gedf2+0xae>
    6fdc:	2e00      	cmp	r6, #0
    6fde:	d0c2      	beq.n	6f66 <__gedf2+0x32>
    6fe0:	e7d4      	b.n	6f8c <__gedf2+0x58>
    6fe2:	2002      	movs	r0, #2
    6fe4:	4240      	negs	r0, r0
    6fe6:	e7d8      	b.n	6f9a <__gedf2+0x66>
    6fe8:	42af      	cmp	r7, r5
    6fea:	d8d1      	bhi.n	6f90 <__gedf2+0x5c>
    6fec:	d009      	beq.n	7002 <__gedf2+0xce>
    6fee:	2000      	movs	r0, #0
    6ff0:	42af      	cmp	r7, r5
    6ff2:	d2d2      	bcs.n	6f9a <__gedf2+0x66>
    6ff4:	4650      	mov	r0, sl
    6ff6:	4241      	negs	r1, r0
    6ff8:	4148      	adcs	r0, r1
    6ffa:	2301      	movs	r3, #1
    6ffc:	4240      	negs	r0, r0
    6ffe:	4318      	orrs	r0, r3
    7000:	e7cb      	b.n	6f9a <__gedf2+0x66>
    7002:	45c4      	cmp	ip, r8
    7004:	d8c4      	bhi.n	6f90 <__gedf2+0x5c>
    7006:	2000      	movs	r0, #0
    7008:	45c4      	cmp	ip, r8
    700a:	d3f3      	bcc.n	6ff4 <__gedf2+0xc0>
    700c:	e7c5      	b.n	6f9a <__gedf2+0x66>
    700e:	46c0      	nop			; (mov r8, r8)
    7010:	000007ff 	.word	0x000007ff

00007014 <__ledf2>:
    7014:	b5f0      	push	{r4, r5, r6, r7, lr}
    7016:	465f      	mov	r7, fp
    7018:	464d      	mov	r5, r9
    701a:	4644      	mov	r4, r8
    701c:	4656      	mov	r6, sl
    701e:	4680      	mov	r8, r0
    7020:	b4f0      	push	{r4, r5, r6, r7}
    7022:	1c06      	adds	r6, r0, #0
    7024:	0308      	lsls	r0, r1, #12
    7026:	0b00      	lsrs	r0, r0, #12
    7028:	4684      	mov	ip, r0
    702a:	482c      	ldr	r0, [pc, #176]	; (70dc <__ledf2+0xc8>)
    702c:	004c      	lsls	r4, r1, #1
    702e:	031f      	lsls	r7, r3, #12
    7030:	005d      	lsls	r5, r3, #1
    7032:	0fc9      	lsrs	r1, r1, #31
    7034:	0d64      	lsrs	r4, r4, #21
    7036:	468b      	mov	fp, r1
    7038:	4691      	mov	r9, r2
    703a:	0b3f      	lsrs	r7, r7, #12
    703c:	0d6d      	lsrs	r5, r5, #21
    703e:	0fdb      	lsrs	r3, r3, #31
    7040:	4284      	cmp	r4, r0
    7042:	d012      	beq.n	706a <__ledf2+0x56>
    7044:	4285      	cmp	r5, r0
    7046:	d025      	beq.n	7094 <__ledf2+0x80>
    7048:	2c00      	cmp	r4, #0
    704a:	d114      	bne.n	7076 <__ledf2+0x62>
    704c:	4661      	mov	r1, ip
    704e:	430e      	orrs	r6, r1
    7050:	4270      	negs	r0, r6
    7052:	4146      	adcs	r6, r0
    7054:	2d00      	cmp	r5, #0
    7056:	d035      	beq.n	70c4 <__ledf2+0xb0>
    7058:	2e00      	cmp	r6, #0
    705a:	d021      	beq.n	70a0 <__ledf2+0x8c>
    705c:	4258      	negs	r0, r3
    705e:	4158      	adcs	r0, r3
    7060:	2101      	movs	r1, #1
    7062:	4243      	negs	r3, r0
    7064:	430b      	orrs	r3, r1
    7066:	1c18      	adds	r0, r3, #0
    7068:	e00e      	b.n	7088 <__ledf2+0x74>
    706a:	4661      	mov	r1, ip
    706c:	2002      	movs	r0, #2
    706e:	4331      	orrs	r1, r6
    7070:	d10a      	bne.n	7088 <__ledf2+0x74>
    7072:	42a5      	cmp	r5, r4
    7074:	d00e      	beq.n	7094 <__ledf2+0x80>
    7076:	2d00      	cmp	r5, #0
    7078:	d112      	bne.n	70a0 <__ledf2+0x8c>
    707a:	433a      	orrs	r2, r7
    707c:	d110      	bne.n	70a0 <__ledf2+0x8c>
    707e:	465b      	mov	r3, fp
    7080:	4259      	negs	r1, r3
    7082:	2301      	movs	r3, #1
    7084:	4319      	orrs	r1, r3
    7086:	1c08      	adds	r0, r1, #0
    7088:	bc3c      	pop	{r2, r3, r4, r5}
    708a:	4690      	mov	r8, r2
    708c:	4699      	mov	r9, r3
    708e:	46a2      	mov	sl, r4
    7090:	46ab      	mov	fp, r5
    7092:	bdf0      	pop	{r4, r5, r6, r7, pc}
    7094:	1c39      	adds	r1, r7, #0
    7096:	2002      	movs	r0, #2
    7098:	4311      	orrs	r1, r2
    709a:	d1f5      	bne.n	7088 <__ledf2+0x74>
    709c:	2c00      	cmp	r4, #0
    709e:	d0d5      	beq.n	704c <__ledf2+0x38>
    70a0:	459b      	cmp	fp, r3
    70a2:	d1ec      	bne.n	707e <__ledf2+0x6a>
    70a4:	42ac      	cmp	r4, r5
    70a6:	dcea      	bgt.n	707e <__ledf2+0x6a>
    70a8:	db05      	blt.n	70b6 <__ledf2+0xa2>
    70aa:	45bc      	cmp	ip, r7
    70ac:	d8e7      	bhi.n	707e <__ledf2+0x6a>
    70ae:	d00f      	beq.n	70d0 <__ledf2+0xbc>
    70b0:	2000      	movs	r0, #0
    70b2:	45bc      	cmp	ip, r7
    70b4:	d2e8      	bcs.n	7088 <__ledf2+0x74>
    70b6:	4658      	mov	r0, fp
    70b8:	4241      	negs	r1, r0
    70ba:	4148      	adcs	r0, r1
    70bc:	4241      	negs	r1, r0
    70be:	2001      	movs	r0, #1
    70c0:	4308      	orrs	r0, r1
    70c2:	e7e1      	b.n	7088 <__ledf2+0x74>
    70c4:	433a      	orrs	r2, r7
    70c6:	d1c7      	bne.n	7058 <__ledf2+0x44>
    70c8:	2000      	movs	r0, #0
    70ca:	2e00      	cmp	r6, #0
    70cc:	d1dc      	bne.n	7088 <__ledf2+0x74>
    70ce:	e7d6      	b.n	707e <__ledf2+0x6a>
    70d0:	45c8      	cmp	r8, r9
    70d2:	d8d4      	bhi.n	707e <__ledf2+0x6a>
    70d4:	2000      	movs	r0, #0
    70d6:	45c8      	cmp	r8, r9
    70d8:	d3ed      	bcc.n	70b6 <__ledf2+0xa2>
    70da:	e7d5      	b.n	7088 <__ledf2+0x74>
    70dc:	000007ff 	.word	0x000007ff

000070e0 <__aeabi_dmul>:
    70e0:	b5f0      	push	{r4, r5, r6, r7, lr}
    70e2:	465f      	mov	r7, fp
    70e4:	4656      	mov	r6, sl
    70e6:	464d      	mov	r5, r9
    70e8:	4644      	mov	r4, r8
    70ea:	b4f0      	push	{r4, r5, r6, r7}
    70ec:	1c05      	adds	r5, r0, #0
    70ee:	1c06      	adds	r6, r0, #0
    70f0:	0308      	lsls	r0, r1, #12
    70f2:	b087      	sub	sp, #28
    70f4:	4699      	mov	r9, r3
    70f6:	004f      	lsls	r7, r1, #1
    70f8:	0b03      	lsrs	r3, r0, #12
    70fa:	0fcc      	lsrs	r4, r1, #31
    70fc:	4692      	mov	sl, r2
    70fe:	469b      	mov	fp, r3
    7100:	0d7f      	lsrs	r7, r7, #21
    7102:	9401      	str	r4, [sp, #4]
    7104:	d067      	beq.n	71d6 <__aeabi_dmul+0xf6>
    7106:	4b6c      	ldr	r3, [pc, #432]	; (72b8 <__aeabi_dmul+0x1d8>)
    7108:	429f      	cmp	r7, r3
    710a:	d036      	beq.n	717a <__aeabi_dmul+0x9a>
    710c:	2080      	movs	r0, #128	; 0x80
    710e:	465b      	mov	r3, fp
    7110:	0340      	lsls	r0, r0, #13
    7112:	4318      	orrs	r0, r3
    7114:	00c0      	lsls	r0, r0, #3
    7116:	0f6b      	lsrs	r3, r5, #29
    7118:	4318      	orrs	r0, r3
    711a:	4b68      	ldr	r3, [pc, #416]	; (72bc <__aeabi_dmul+0x1dc>)
    711c:	4683      	mov	fp, r0
    711e:	469c      	mov	ip, r3
    7120:	2300      	movs	r3, #0
    7122:	4698      	mov	r8, r3
    7124:	00ee      	lsls	r6, r5, #3
    7126:	4467      	add	r7, ip
    7128:	9300      	str	r3, [sp, #0]
    712a:	464b      	mov	r3, r9
    712c:	4649      	mov	r1, r9
    712e:	031d      	lsls	r5, r3, #12
    7130:	0fc9      	lsrs	r1, r1, #31
    7132:	005b      	lsls	r3, r3, #1
    7134:	4652      	mov	r2, sl
    7136:	0b2d      	lsrs	r5, r5, #12
    7138:	0d5b      	lsrs	r3, r3, #21
    713a:	4689      	mov	r9, r1
    713c:	d100      	bne.n	7140 <__aeabi_dmul+0x60>
    713e:	e06e      	b.n	721e <__aeabi_dmul+0x13e>
    7140:	495d      	ldr	r1, [pc, #372]	; (72b8 <__aeabi_dmul+0x1d8>)
    7142:	428b      	cmp	r3, r1
    7144:	d064      	beq.n	7210 <__aeabi_dmul+0x130>
    7146:	2080      	movs	r0, #128	; 0x80
    7148:	495c      	ldr	r1, [pc, #368]	; (72bc <__aeabi_dmul+0x1dc>)
    714a:	0340      	lsls	r0, r0, #13
    714c:	468c      	mov	ip, r1
    714e:	2100      	movs	r1, #0
    7150:	4305      	orrs	r5, r0
    7152:	00ed      	lsls	r5, r5, #3
    7154:	0f50      	lsrs	r0, r2, #29
    7156:	4305      	orrs	r5, r0
    7158:	00d2      	lsls	r2, r2, #3
    715a:	4463      	add	r3, ip
    715c:	4648      	mov	r0, r9
    715e:	18ff      	adds	r7, r7, r3
    7160:	1c7b      	adds	r3, r7, #1
    7162:	469a      	mov	sl, r3
    7164:	9b00      	ldr	r3, [sp, #0]
    7166:	4060      	eors	r0, r4
    7168:	9002      	str	r0, [sp, #8]
    716a:	430b      	orrs	r3, r1
    716c:	2b0f      	cmp	r3, #15
    716e:	d900      	bls.n	7172 <__aeabi_dmul+0x92>
    7170:	e0ac      	b.n	72cc <__aeabi_dmul+0x1ec>
    7172:	4853      	ldr	r0, [pc, #332]	; (72c0 <__aeabi_dmul+0x1e0>)
    7174:	009b      	lsls	r3, r3, #2
    7176:	58c3      	ldr	r3, [r0, r3]
    7178:	469f      	mov	pc, r3
    717a:	465b      	mov	r3, fp
    717c:	431d      	orrs	r5, r3
    717e:	d000      	beq.n	7182 <__aeabi_dmul+0xa2>
    7180:	e082      	b.n	7288 <__aeabi_dmul+0x1a8>
    7182:	2308      	movs	r3, #8
    7184:	9300      	str	r3, [sp, #0]
    7186:	2300      	movs	r3, #0
    7188:	469b      	mov	fp, r3
    718a:	3302      	adds	r3, #2
    718c:	2600      	movs	r6, #0
    718e:	4698      	mov	r8, r3
    7190:	e7cb      	b.n	712a <__aeabi_dmul+0x4a>
    7192:	9b02      	ldr	r3, [sp, #8]
    7194:	9301      	str	r3, [sp, #4]
    7196:	4643      	mov	r3, r8
    7198:	2b02      	cmp	r3, #2
    719a:	d159      	bne.n	7250 <__aeabi_dmul+0x170>
    719c:	2401      	movs	r4, #1
    719e:	2500      	movs	r5, #0
    71a0:	2600      	movs	r6, #0
    71a2:	9b01      	ldr	r3, [sp, #4]
    71a4:	401c      	ands	r4, r3
    71a6:	4b44      	ldr	r3, [pc, #272]	; (72b8 <__aeabi_dmul+0x1d8>)
    71a8:	2100      	movs	r1, #0
    71aa:	032d      	lsls	r5, r5, #12
    71ac:	0d0a      	lsrs	r2, r1, #20
    71ae:	0512      	lsls	r2, r2, #20
    71b0:	0b2d      	lsrs	r5, r5, #12
    71b2:	4315      	orrs	r5, r2
    71b4:	4a43      	ldr	r2, [pc, #268]	; (72c4 <__aeabi_dmul+0x1e4>)
    71b6:	051b      	lsls	r3, r3, #20
    71b8:	4015      	ands	r5, r2
    71ba:	431d      	orrs	r5, r3
    71bc:	006d      	lsls	r5, r5, #1
    71be:	07e4      	lsls	r4, r4, #31
    71c0:	086d      	lsrs	r5, r5, #1
    71c2:	4325      	orrs	r5, r4
    71c4:	1c30      	adds	r0, r6, #0
    71c6:	1c29      	adds	r1, r5, #0
    71c8:	b007      	add	sp, #28
    71ca:	bc3c      	pop	{r2, r3, r4, r5}
    71cc:	4690      	mov	r8, r2
    71ce:	4699      	mov	r9, r3
    71d0:	46a2      	mov	sl, r4
    71d2:	46ab      	mov	fp, r5
    71d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    71d6:	432b      	orrs	r3, r5
    71d8:	d04e      	beq.n	7278 <__aeabi_dmul+0x198>
    71da:	465b      	mov	r3, fp
    71dc:	2b00      	cmp	r3, #0
    71de:	d100      	bne.n	71e2 <__aeabi_dmul+0x102>
    71e0:	e185      	b.n	74ee <__aeabi_dmul+0x40e>
    71e2:	4658      	mov	r0, fp
    71e4:	f000 fec4 	bl	7f70 <__clzsi2>
    71e8:	1c02      	adds	r2, r0, #0
    71ea:	2328      	movs	r3, #40	; 0x28
    71ec:	1c29      	adds	r1, r5, #0
    71ee:	1a9b      	subs	r3, r3, r2
    71f0:	1c16      	adds	r6, r2, #0
    71f2:	4658      	mov	r0, fp
    71f4:	40d9      	lsrs	r1, r3
    71f6:	3e08      	subs	r6, #8
    71f8:	40b0      	lsls	r0, r6
    71fa:	1c0b      	adds	r3, r1, #0
    71fc:	40b5      	lsls	r5, r6
    71fe:	4303      	orrs	r3, r0
    7200:	469b      	mov	fp, r3
    7202:	1c2e      	adds	r6, r5, #0
    7204:	2300      	movs	r3, #0
    7206:	4f30      	ldr	r7, [pc, #192]	; (72c8 <__aeabi_dmul+0x1e8>)
    7208:	9300      	str	r3, [sp, #0]
    720a:	1abf      	subs	r7, r7, r2
    720c:	4698      	mov	r8, r3
    720e:	e78c      	b.n	712a <__aeabi_dmul+0x4a>
    7210:	4651      	mov	r1, sl
    7212:	4329      	orrs	r1, r5
    7214:	d12e      	bne.n	7274 <__aeabi_dmul+0x194>
    7216:	2500      	movs	r5, #0
    7218:	2200      	movs	r2, #0
    721a:	2102      	movs	r1, #2
    721c:	e79e      	b.n	715c <__aeabi_dmul+0x7c>
    721e:	4651      	mov	r1, sl
    7220:	4329      	orrs	r1, r5
    7222:	d023      	beq.n	726c <__aeabi_dmul+0x18c>
    7224:	2d00      	cmp	r5, #0
    7226:	d100      	bne.n	722a <__aeabi_dmul+0x14a>
    7228:	e154      	b.n	74d4 <__aeabi_dmul+0x3f4>
    722a:	1c28      	adds	r0, r5, #0
    722c:	f000 fea0 	bl	7f70 <__clzsi2>
    7230:	1c03      	adds	r3, r0, #0
    7232:	2128      	movs	r1, #40	; 0x28
    7234:	4650      	mov	r0, sl
    7236:	1ac9      	subs	r1, r1, r3
    7238:	1c1a      	adds	r2, r3, #0
    723a:	40c8      	lsrs	r0, r1
    723c:	4651      	mov	r1, sl
    723e:	3a08      	subs	r2, #8
    7240:	4091      	lsls	r1, r2
    7242:	4095      	lsls	r5, r2
    7244:	1c0a      	adds	r2, r1, #0
    7246:	4305      	orrs	r5, r0
    7248:	481f      	ldr	r0, [pc, #124]	; (72c8 <__aeabi_dmul+0x1e8>)
    724a:	2100      	movs	r1, #0
    724c:	1ac3      	subs	r3, r0, r3
    724e:	e785      	b.n	715c <__aeabi_dmul+0x7c>
    7250:	2b03      	cmp	r3, #3
    7252:	d100      	bne.n	7256 <__aeabi_dmul+0x176>
    7254:	e1c2      	b.n	75dc <__aeabi_dmul+0x4fc>
    7256:	2b01      	cmp	r3, #1
    7258:	d000      	beq.n	725c <__aeabi_dmul+0x17c>
    725a:	e16d      	b.n	7538 <__aeabi_dmul+0x458>
    725c:	4644      	mov	r4, r8
    725e:	9b01      	ldr	r3, [sp, #4]
    7260:	2500      	movs	r5, #0
    7262:	401c      	ands	r4, r3
    7264:	b2e4      	uxtb	r4, r4
    7266:	2300      	movs	r3, #0
    7268:	2600      	movs	r6, #0
    726a:	e79d      	b.n	71a8 <__aeabi_dmul+0xc8>
    726c:	2500      	movs	r5, #0
    726e:	2200      	movs	r2, #0
    7270:	2101      	movs	r1, #1
    7272:	e773      	b.n	715c <__aeabi_dmul+0x7c>
    7274:	2103      	movs	r1, #3
    7276:	e771      	b.n	715c <__aeabi_dmul+0x7c>
    7278:	2304      	movs	r3, #4
    727a:	9300      	str	r3, [sp, #0]
    727c:	2300      	movs	r3, #0
    727e:	469b      	mov	fp, r3
    7280:	3301      	adds	r3, #1
    7282:	2600      	movs	r6, #0
    7284:	4698      	mov	r8, r3
    7286:	e750      	b.n	712a <__aeabi_dmul+0x4a>
    7288:	230c      	movs	r3, #12
    728a:	9300      	str	r3, [sp, #0]
    728c:	3b09      	subs	r3, #9
    728e:	4698      	mov	r8, r3
    7290:	e74b      	b.n	712a <__aeabi_dmul+0x4a>
    7292:	2580      	movs	r5, #128	; 0x80
    7294:	2400      	movs	r4, #0
    7296:	032d      	lsls	r5, r5, #12
    7298:	2600      	movs	r6, #0
    729a:	4b07      	ldr	r3, [pc, #28]	; (72b8 <__aeabi_dmul+0x1d8>)
    729c:	e784      	b.n	71a8 <__aeabi_dmul+0xc8>
    729e:	464b      	mov	r3, r9
    72a0:	46ab      	mov	fp, r5
    72a2:	1c16      	adds	r6, r2, #0
    72a4:	9301      	str	r3, [sp, #4]
    72a6:	4688      	mov	r8, r1
    72a8:	e775      	b.n	7196 <__aeabi_dmul+0xb6>
    72aa:	9b02      	ldr	r3, [sp, #8]
    72ac:	46ab      	mov	fp, r5
    72ae:	1c16      	adds	r6, r2, #0
    72b0:	9301      	str	r3, [sp, #4]
    72b2:	4688      	mov	r8, r1
    72b4:	e76f      	b.n	7196 <__aeabi_dmul+0xb6>
    72b6:	46c0      	nop			; (mov r8, r8)
    72b8:	000007ff 	.word	0x000007ff
    72bc:	fffffc01 	.word	0xfffffc01
    72c0:	0000e2e0 	.word	0x0000e2e0
    72c4:	800fffff 	.word	0x800fffff
    72c8:	fffffc0d 	.word	0xfffffc0d
    72cc:	0c33      	lsrs	r3, r6, #16
    72ce:	0436      	lsls	r6, r6, #16
    72d0:	0c36      	lsrs	r6, r6, #16
    72d2:	469c      	mov	ip, r3
    72d4:	1c33      	adds	r3, r6, #0
    72d6:	0c14      	lsrs	r4, r2, #16
    72d8:	0412      	lsls	r2, r2, #16
    72da:	0c12      	lsrs	r2, r2, #16
    72dc:	4353      	muls	r3, r2
    72de:	4698      	mov	r8, r3
    72e0:	4663      	mov	r3, ip
    72e2:	4353      	muls	r3, r2
    72e4:	4699      	mov	r9, r3
    72e6:	4663      	mov	r3, ip
    72e8:	4363      	muls	r3, r4
    72ea:	9301      	str	r3, [sp, #4]
    72ec:	1c33      	adds	r3, r6, #0
    72ee:	4641      	mov	r1, r8
    72f0:	4363      	muls	r3, r4
    72f2:	0c09      	lsrs	r1, r1, #16
    72f4:	444b      	add	r3, r9
    72f6:	185b      	adds	r3, r3, r1
    72f8:	4599      	cmp	r9, r3
    72fa:	d905      	bls.n	7308 <__aeabi_dmul+0x228>
    72fc:	2080      	movs	r0, #128	; 0x80
    72fe:	0240      	lsls	r0, r0, #9
    7300:	4681      	mov	r9, r0
    7302:	9901      	ldr	r1, [sp, #4]
    7304:	4449      	add	r1, r9
    7306:	9101      	str	r1, [sp, #4]
    7308:	0c19      	lsrs	r1, r3, #16
    730a:	9103      	str	r1, [sp, #12]
    730c:	4641      	mov	r1, r8
    730e:	0409      	lsls	r1, r1, #16
    7310:	0c09      	lsrs	r1, r1, #16
    7312:	041b      	lsls	r3, r3, #16
    7314:	185b      	adds	r3, r3, r1
    7316:	9304      	str	r3, [sp, #16]
    7318:	0c2b      	lsrs	r3, r5, #16
    731a:	4698      	mov	r8, r3
    731c:	1c33      	adds	r3, r6, #0
    731e:	042d      	lsls	r5, r5, #16
    7320:	0c29      	lsrs	r1, r5, #16
    7322:	434b      	muls	r3, r1
    7324:	4660      	mov	r0, ip
    7326:	9300      	str	r3, [sp, #0]
    7328:	4643      	mov	r3, r8
    732a:	4665      	mov	r5, ip
    732c:	4358      	muls	r0, r3
    732e:	435e      	muls	r6, r3
    7330:	9b00      	ldr	r3, [sp, #0]
    7332:	434d      	muls	r5, r1
    7334:	0c1b      	lsrs	r3, r3, #16
    7336:	4699      	mov	r9, r3
    7338:	19ae      	adds	r6, r5, r6
    733a:	444e      	add	r6, r9
    733c:	4684      	mov	ip, r0
    733e:	42b5      	cmp	r5, r6
    7340:	d903      	bls.n	734a <__aeabi_dmul+0x26a>
    7342:	2380      	movs	r3, #128	; 0x80
    7344:	025b      	lsls	r3, r3, #9
    7346:	4699      	mov	r9, r3
    7348:	44cc      	add	ip, r9
    734a:	0c35      	lsrs	r5, r6, #16
    734c:	1c2b      	adds	r3, r5, #0
    734e:	9803      	ldr	r0, [sp, #12]
    7350:	4463      	add	r3, ip
    7352:	4684      	mov	ip, r0
    7354:	9305      	str	r3, [sp, #20]
    7356:	9b00      	ldr	r3, [sp, #0]
    7358:	0436      	lsls	r6, r6, #16
    735a:	041b      	lsls	r3, r3, #16
    735c:	0c1b      	lsrs	r3, r3, #16
    735e:	18f3      	adds	r3, r6, r3
    7360:	449c      	add	ip, r3
    7362:	4660      	mov	r0, ip
    7364:	9003      	str	r0, [sp, #12]
    7366:	4658      	mov	r0, fp
    7368:	0405      	lsls	r5, r0, #16
    736a:	0c06      	lsrs	r6, r0, #16
    736c:	0c28      	lsrs	r0, r5, #16
    736e:	4684      	mov	ip, r0
    7370:	4350      	muls	r0, r2
    7372:	1c35      	adds	r5, r6, #0
    7374:	4681      	mov	r9, r0
    7376:	4660      	mov	r0, ip
    7378:	4365      	muls	r5, r4
    737a:	4344      	muls	r4, r0
    737c:	4648      	mov	r0, r9
    737e:	0c00      	lsrs	r0, r0, #16
    7380:	4683      	mov	fp, r0
    7382:	4372      	muls	r2, r6
    7384:	1914      	adds	r4, r2, r4
    7386:	445c      	add	r4, fp
    7388:	42a2      	cmp	r2, r4
    738a:	d903      	bls.n	7394 <__aeabi_dmul+0x2b4>
    738c:	2280      	movs	r2, #128	; 0x80
    738e:	0252      	lsls	r2, r2, #9
    7390:	4693      	mov	fp, r2
    7392:	445d      	add	r5, fp
    7394:	0c22      	lsrs	r2, r4, #16
    7396:	18ad      	adds	r5, r5, r2
    7398:	464a      	mov	r2, r9
    739a:	0412      	lsls	r2, r2, #16
    739c:	0c12      	lsrs	r2, r2, #16
    739e:	0424      	lsls	r4, r4, #16
    73a0:	4640      	mov	r0, r8
    73a2:	18a4      	adds	r4, r4, r2
    73a4:	4662      	mov	r2, ip
    73a6:	434a      	muls	r2, r1
    73a8:	4371      	muls	r1, r6
    73aa:	4346      	muls	r6, r0
    73ac:	4660      	mov	r0, ip
    73ae:	9600      	str	r6, [sp, #0]
    73b0:	4646      	mov	r6, r8
    73b2:	4370      	muls	r0, r6
    73b4:	4680      	mov	r8, r0
    73b6:	0c10      	lsrs	r0, r2, #16
    73b8:	4684      	mov	ip, r0
    73ba:	4488      	add	r8, r1
    73bc:	44e0      	add	r8, ip
    73be:	4541      	cmp	r1, r8
    73c0:	d905      	bls.n	73ce <__aeabi_dmul+0x2ee>
    73c2:	2180      	movs	r1, #128	; 0x80
    73c4:	0249      	lsls	r1, r1, #9
    73c6:	468c      	mov	ip, r1
    73c8:	9900      	ldr	r1, [sp, #0]
    73ca:	4461      	add	r1, ip
    73cc:	9100      	str	r1, [sp, #0]
    73ce:	9801      	ldr	r0, [sp, #4]
    73d0:	9903      	ldr	r1, [sp, #12]
    73d2:	4684      	mov	ip, r0
    73d4:	4461      	add	r1, ip
    73d6:	4299      	cmp	r1, r3
    73d8:	419b      	sbcs	r3, r3
    73da:	425b      	negs	r3, r3
    73dc:	4699      	mov	r9, r3
    73de:	9805      	ldr	r0, [sp, #20]
    73e0:	4643      	mov	r3, r8
    73e2:	4684      	mov	ip, r0
    73e4:	0412      	lsls	r2, r2, #16
    73e6:	0c12      	lsrs	r2, r2, #16
    73e8:	041b      	lsls	r3, r3, #16
    73ea:	189b      	adds	r3, r3, r2
    73ec:	4463      	add	r3, ip
    73ee:	469c      	mov	ip, r3
    73f0:	46ab      	mov	fp, r5
    73f2:	4283      	cmp	r3, r0
    73f4:	419b      	sbcs	r3, r3
    73f6:	4640      	mov	r0, r8
    73f8:	190a      	adds	r2, r1, r4
    73fa:	44cc      	add	ip, r9
    73fc:	42a2      	cmp	r2, r4
    73fe:	4189      	sbcs	r1, r1
    7400:	44e3      	add	fp, ip
    7402:	45cc      	cmp	ip, r9
    7404:	41b6      	sbcs	r6, r6
    7406:	465c      	mov	r4, fp
    7408:	0c00      	lsrs	r0, r0, #16
    740a:	4680      	mov	r8, r0
    740c:	4249      	negs	r1, r1
    740e:	4276      	negs	r6, r6
    7410:	425b      	negs	r3, r3
    7412:	1864      	adds	r4, r4, r1
    7414:	4333      	orrs	r3, r6
    7416:	4498      	add	r8, r3
    7418:	428c      	cmp	r4, r1
    741a:	4189      	sbcs	r1, r1
    741c:	45ab      	cmp	fp, r5
    741e:	419b      	sbcs	r3, r3
    7420:	4249      	negs	r1, r1
    7422:	425b      	negs	r3, r3
    7424:	4319      	orrs	r1, r3
    7426:	1c0d      	adds	r5, r1, #0
    7428:	9b00      	ldr	r3, [sp, #0]
    742a:	4445      	add	r5, r8
    742c:	18ee      	adds	r6, r5, r3
    742e:	0276      	lsls	r6, r6, #9
    7430:	0de5      	lsrs	r5, r4, #23
    7432:	432e      	orrs	r6, r5
    7434:	46b3      	mov	fp, r6
    7436:	9b04      	ldr	r3, [sp, #16]
    7438:	0256      	lsls	r6, r2, #9
    743a:	431e      	orrs	r6, r3
    743c:	1e73      	subs	r3, r6, #1
    743e:	419e      	sbcs	r6, r3
    7440:	465b      	mov	r3, fp
    7442:	0dd2      	lsrs	r2, r2, #23
    7444:	4332      	orrs	r2, r6
    7446:	0266      	lsls	r6, r4, #9
    7448:	4316      	orrs	r6, r2
    744a:	01db      	lsls	r3, r3, #7
    744c:	d50a      	bpl.n	7464 <__aeabi_dmul+0x384>
    744e:	2301      	movs	r3, #1
    7450:	4033      	ands	r3, r6
    7452:	0876      	lsrs	r6, r6, #1
    7454:	431e      	orrs	r6, r3
    7456:	465b      	mov	r3, fp
    7458:	07db      	lsls	r3, r3, #31
    745a:	431e      	orrs	r6, r3
    745c:	465b      	mov	r3, fp
    745e:	085b      	lsrs	r3, r3, #1
    7460:	469b      	mov	fp, r3
    7462:	4657      	mov	r7, sl
    7464:	4b63      	ldr	r3, [pc, #396]	; (75f4 <__aeabi_dmul+0x514>)
    7466:	18fb      	adds	r3, r7, r3
    7468:	2b00      	cmp	r3, #0
    746a:	dd5a      	ble.n	7522 <__aeabi_dmul+0x442>
    746c:	0772      	lsls	r2, r6, #29
    746e:	d009      	beq.n	7484 <__aeabi_dmul+0x3a4>
    7470:	220f      	movs	r2, #15
    7472:	4032      	ands	r2, r6
    7474:	2a04      	cmp	r2, #4
    7476:	d005      	beq.n	7484 <__aeabi_dmul+0x3a4>
    7478:	1d32      	adds	r2, r6, #4
    747a:	42b2      	cmp	r2, r6
    747c:	41b6      	sbcs	r6, r6
    747e:	4276      	negs	r6, r6
    7480:	44b3      	add	fp, r6
    7482:	1c16      	adds	r6, r2, #0
    7484:	465a      	mov	r2, fp
    7486:	01d2      	lsls	r2, r2, #7
    7488:	d506      	bpl.n	7498 <__aeabi_dmul+0x3b8>
    748a:	465a      	mov	r2, fp
    748c:	4b5a      	ldr	r3, [pc, #360]	; (75f8 <__aeabi_dmul+0x518>)
    748e:	401a      	ands	r2, r3
    7490:	2380      	movs	r3, #128	; 0x80
    7492:	4693      	mov	fp, r2
    7494:	00db      	lsls	r3, r3, #3
    7496:	18fb      	adds	r3, r7, r3
    7498:	4a58      	ldr	r2, [pc, #352]	; (75fc <__aeabi_dmul+0x51c>)
    749a:	4293      	cmp	r3, r2
    749c:	dd34      	ble.n	7508 <__aeabi_dmul+0x428>
    749e:	2401      	movs	r4, #1
    74a0:	9b02      	ldr	r3, [sp, #8]
    74a2:	2500      	movs	r5, #0
    74a4:	401c      	ands	r4, r3
    74a6:	2600      	movs	r6, #0
    74a8:	4b55      	ldr	r3, [pc, #340]	; (7600 <__aeabi_dmul+0x520>)
    74aa:	e67d      	b.n	71a8 <__aeabi_dmul+0xc8>
    74ac:	2080      	movs	r0, #128	; 0x80
    74ae:	465b      	mov	r3, fp
    74b0:	0300      	lsls	r0, r0, #12
    74b2:	4203      	tst	r3, r0
    74b4:	d008      	beq.n	74c8 <__aeabi_dmul+0x3e8>
    74b6:	4205      	tst	r5, r0
    74b8:	d106      	bne.n	74c8 <__aeabi_dmul+0x3e8>
    74ba:	4305      	orrs	r5, r0
    74bc:	032d      	lsls	r5, r5, #12
    74be:	0b2d      	lsrs	r5, r5, #12
    74c0:	464c      	mov	r4, r9
    74c2:	1c16      	adds	r6, r2, #0
    74c4:	4b4e      	ldr	r3, [pc, #312]	; (7600 <__aeabi_dmul+0x520>)
    74c6:	e66f      	b.n	71a8 <__aeabi_dmul+0xc8>
    74c8:	465d      	mov	r5, fp
    74ca:	4305      	orrs	r5, r0
    74cc:	032d      	lsls	r5, r5, #12
    74ce:	0b2d      	lsrs	r5, r5, #12
    74d0:	4b4b      	ldr	r3, [pc, #300]	; (7600 <__aeabi_dmul+0x520>)
    74d2:	e669      	b.n	71a8 <__aeabi_dmul+0xc8>
    74d4:	4650      	mov	r0, sl
    74d6:	f000 fd4b 	bl	7f70 <__clzsi2>
    74da:	1c03      	adds	r3, r0, #0
    74dc:	3320      	adds	r3, #32
    74de:	2b27      	cmp	r3, #39	; 0x27
    74e0:	dc00      	bgt.n	74e4 <__aeabi_dmul+0x404>
    74e2:	e6a6      	b.n	7232 <__aeabi_dmul+0x152>
    74e4:	4655      	mov	r5, sl
    74e6:	3808      	subs	r0, #8
    74e8:	4085      	lsls	r5, r0
    74ea:	2200      	movs	r2, #0
    74ec:	e6ac      	b.n	7248 <__aeabi_dmul+0x168>
    74ee:	1c28      	adds	r0, r5, #0
    74f0:	f000 fd3e 	bl	7f70 <__clzsi2>
    74f4:	1c02      	adds	r2, r0, #0
    74f6:	3220      	adds	r2, #32
    74f8:	2a27      	cmp	r2, #39	; 0x27
    74fa:	dc00      	bgt.n	74fe <__aeabi_dmul+0x41e>
    74fc:	e675      	b.n	71ea <__aeabi_dmul+0x10a>
    74fe:	3808      	subs	r0, #8
    7500:	4085      	lsls	r5, r0
    7502:	2600      	movs	r6, #0
    7504:	46ab      	mov	fp, r5
    7506:	e67d      	b.n	7204 <__aeabi_dmul+0x124>
    7508:	465a      	mov	r2, fp
    750a:	08f6      	lsrs	r6, r6, #3
    750c:	0752      	lsls	r2, r2, #29
    750e:	4316      	orrs	r6, r2
    7510:	465a      	mov	r2, fp
    7512:	2401      	movs	r4, #1
    7514:	0255      	lsls	r5, r2, #9
    7516:	9a02      	ldr	r2, [sp, #8]
    7518:	055b      	lsls	r3, r3, #21
    751a:	0b2d      	lsrs	r5, r5, #12
    751c:	0d5b      	lsrs	r3, r3, #21
    751e:	4014      	ands	r4, r2
    7520:	e642      	b.n	71a8 <__aeabi_dmul+0xc8>
    7522:	4d38      	ldr	r5, [pc, #224]	; (7604 <__aeabi_dmul+0x524>)
    7524:	1bed      	subs	r5, r5, r7
    7526:	2d38      	cmp	r5, #56	; 0x38
    7528:	dd0a      	ble.n	7540 <__aeabi_dmul+0x460>
    752a:	2401      	movs	r4, #1
    752c:	9b02      	ldr	r3, [sp, #8]
    752e:	2500      	movs	r5, #0
    7530:	401c      	ands	r4, r3
    7532:	2600      	movs	r6, #0
    7534:	2300      	movs	r3, #0
    7536:	e637      	b.n	71a8 <__aeabi_dmul+0xc8>
    7538:	9b01      	ldr	r3, [sp, #4]
    753a:	4657      	mov	r7, sl
    753c:	9302      	str	r3, [sp, #8]
    753e:	e791      	b.n	7464 <__aeabi_dmul+0x384>
    7540:	2d1f      	cmp	r5, #31
    7542:	dc25      	bgt.n	7590 <__aeabi_dmul+0x4b0>
    7544:	4b30      	ldr	r3, [pc, #192]	; (7608 <__aeabi_dmul+0x528>)
    7546:	1c32      	adds	r2, r6, #0
    7548:	469c      	mov	ip, r3
    754a:	4467      	add	r7, ip
    754c:	40be      	lsls	r6, r7
    754e:	465b      	mov	r3, fp
    7550:	40bb      	lsls	r3, r7
    7552:	1c37      	adds	r7, r6, #0
    7554:	40ea      	lsrs	r2, r5
    7556:	1e7e      	subs	r6, r7, #1
    7558:	41b7      	sbcs	r7, r6
    755a:	4313      	orrs	r3, r2
    755c:	433b      	orrs	r3, r7
    755e:	1c1e      	adds	r6, r3, #0
    7560:	465b      	mov	r3, fp
    7562:	40eb      	lsrs	r3, r5
    7564:	1c1d      	adds	r5, r3, #0
    7566:	0773      	lsls	r3, r6, #29
    7568:	d009      	beq.n	757e <__aeabi_dmul+0x49e>
    756a:	230f      	movs	r3, #15
    756c:	4033      	ands	r3, r6
    756e:	2b04      	cmp	r3, #4
    7570:	d005      	beq.n	757e <__aeabi_dmul+0x49e>
    7572:	1d33      	adds	r3, r6, #4
    7574:	42b3      	cmp	r3, r6
    7576:	41b6      	sbcs	r6, r6
    7578:	4276      	negs	r6, r6
    757a:	19ad      	adds	r5, r5, r6
    757c:	1c1e      	adds	r6, r3, #0
    757e:	022b      	lsls	r3, r5, #8
    7580:	d520      	bpl.n	75c4 <__aeabi_dmul+0x4e4>
    7582:	2401      	movs	r4, #1
    7584:	9b02      	ldr	r3, [sp, #8]
    7586:	2500      	movs	r5, #0
    7588:	401c      	ands	r4, r3
    758a:	2600      	movs	r6, #0
    758c:	2301      	movs	r3, #1
    758e:	e60b      	b.n	71a8 <__aeabi_dmul+0xc8>
    7590:	465a      	mov	r2, fp
    7592:	4b1e      	ldr	r3, [pc, #120]	; (760c <__aeabi_dmul+0x52c>)
    7594:	1bdb      	subs	r3, r3, r7
    7596:	40da      	lsrs	r2, r3
    7598:	1c13      	adds	r3, r2, #0
    759a:	2d20      	cmp	r5, #32
    759c:	d01c      	beq.n	75d8 <__aeabi_dmul+0x4f8>
    759e:	4a1c      	ldr	r2, [pc, #112]	; (7610 <__aeabi_dmul+0x530>)
    75a0:	4694      	mov	ip, r2
    75a2:	465a      	mov	r2, fp
    75a4:	4467      	add	r7, ip
    75a6:	40ba      	lsls	r2, r7
    75a8:	1c17      	adds	r7, r2, #0
    75aa:	433e      	orrs	r6, r7
    75ac:	1e72      	subs	r2, r6, #1
    75ae:	4196      	sbcs	r6, r2
    75b0:	431e      	orrs	r6, r3
    75b2:	2307      	movs	r3, #7
    75b4:	2500      	movs	r5, #0
    75b6:	4033      	ands	r3, r6
    75b8:	d007      	beq.n	75ca <__aeabi_dmul+0x4ea>
    75ba:	230f      	movs	r3, #15
    75bc:	2500      	movs	r5, #0
    75be:	4033      	ands	r3, r6
    75c0:	2b04      	cmp	r3, #4
    75c2:	d1d6      	bne.n	7572 <__aeabi_dmul+0x492>
    75c4:	076b      	lsls	r3, r5, #29
    75c6:	026d      	lsls	r5, r5, #9
    75c8:	0b2d      	lsrs	r5, r5, #12
    75ca:	2401      	movs	r4, #1
    75cc:	08f6      	lsrs	r6, r6, #3
    75ce:	431e      	orrs	r6, r3
    75d0:	9b02      	ldr	r3, [sp, #8]
    75d2:	401c      	ands	r4, r3
    75d4:	2300      	movs	r3, #0
    75d6:	e5e7      	b.n	71a8 <__aeabi_dmul+0xc8>
    75d8:	2700      	movs	r7, #0
    75da:	e7e6      	b.n	75aa <__aeabi_dmul+0x4ca>
    75dc:	2580      	movs	r5, #128	; 0x80
    75de:	465b      	mov	r3, fp
    75e0:	2401      	movs	r4, #1
    75e2:	032d      	lsls	r5, r5, #12
    75e4:	431d      	orrs	r5, r3
    75e6:	9b01      	ldr	r3, [sp, #4]
    75e8:	032d      	lsls	r5, r5, #12
    75ea:	4023      	ands	r3, r4
    75ec:	1c1c      	adds	r4, r3, #0
    75ee:	0b2d      	lsrs	r5, r5, #12
    75f0:	4b03      	ldr	r3, [pc, #12]	; (7600 <__aeabi_dmul+0x520>)
    75f2:	e5d9      	b.n	71a8 <__aeabi_dmul+0xc8>
    75f4:	000003ff 	.word	0x000003ff
    75f8:	feffffff 	.word	0xfeffffff
    75fc:	000007fe 	.word	0x000007fe
    7600:	000007ff 	.word	0x000007ff
    7604:	fffffc02 	.word	0xfffffc02
    7608:	0000041e 	.word	0x0000041e
    760c:	fffffbe2 	.word	0xfffffbe2
    7610:	0000043e 	.word	0x0000043e

00007614 <__aeabi_dsub>:
    7614:	b5f0      	push	{r4, r5, r6, r7, lr}
    7616:	464d      	mov	r5, r9
    7618:	4644      	mov	r4, r8
    761a:	465f      	mov	r7, fp
    761c:	4656      	mov	r6, sl
    761e:	b4f0      	push	{r4, r5, r6, r7}
    7620:	1c0e      	adds	r6, r1, #0
    7622:	1c11      	adds	r1, r2, #0
    7624:	0332      	lsls	r2, r6, #12
    7626:	0a52      	lsrs	r2, r2, #9
    7628:	0f47      	lsrs	r7, r0, #29
    762a:	4317      	orrs	r7, r2
    762c:	00c5      	lsls	r5, r0, #3
    762e:	031a      	lsls	r2, r3, #12
    7630:	0058      	lsls	r0, r3, #1
    7632:	0fdb      	lsrs	r3, r3, #31
    7634:	4699      	mov	r9, r3
    7636:	0a52      	lsrs	r2, r2, #9
    7638:	0f4b      	lsrs	r3, r1, #29
    763a:	b083      	sub	sp, #12
    763c:	431a      	orrs	r2, r3
    763e:	00cb      	lsls	r3, r1, #3
    7640:	9301      	str	r3, [sp, #4]
    7642:	4bcf      	ldr	r3, [pc, #828]	; (7980 <__aeabi_dsub+0x36c>)
    7644:	0074      	lsls	r4, r6, #1
    7646:	0ff6      	lsrs	r6, r6, #31
    7648:	0d64      	lsrs	r4, r4, #21
    764a:	46b0      	mov	r8, r6
    764c:	0d40      	lsrs	r0, r0, #21
    764e:	4298      	cmp	r0, r3
    7650:	d100      	bne.n	7654 <__aeabi_dsub+0x40>
    7652:	e0e8      	b.n	7826 <__aeabi_dsub+0x212>
    7654:	2301      	movs	r3, #1
    7656:	4649      	mov	r1, r9
    7658:	4059      	eors	r1, r3
    765a:	1c0b      	adds	r3, r1, #0
    765c:	429e      	cmp	r6, r3
    765e:	d100      	bne.n	7662 <__aeabi_dsub+0x4e>
    7660:	e0b1      	b.n	77c6 <__aeabi_dsub+0x1b2>
    7662:	1a26      	subs	r6, r4, r0
    7664:	2e00      	cmp	r6, #0
    7666:	dc00      	bgt.n	766a <__aeabi_dsub+0x56>
    7668:	e11c      	b.n	78a4 <__aeabi_dsub+0x290>
    766a:	2800      	cmp	r0, #0
    766c:	d142      	bne.n	76f4 <__aeabi_dsub+0xe0>
    766e:	1c13      	adds	r3, r2, #0
    7670:	9901      	ldr	r1, [sp, #4]
    7672:	430b      	orrs	r3, r1
    7674:	d000      	beq.n	7678 <__aeabi_dsub+0x64>
    7676:	e0e6      	b.n	7846 <__aeabi_dsub+0x232>
    7678:	076b      	lsls	r3, r5, #29
    767a:	d100      	bne.n	767e <__aeabi_dsub+0x6a>
    767c:	e08e      	b.n	779c <__aeabi_dsub+0x188>
    767e:	230f      	movs	r3, #15
    7680:	402b      	ands	r3, r5
    7682:	2b04      	cmp	r3, #4
    7684:	d100      	bne.n	7688 <__aeabi_dsub+0x74>
    7686:	e089      	b.n	779c <__aeabi_dsub+0x188>
    7688:	1d2a      	adds	r2, r5, #4
    768a:	42aa      	cmp	r2, r5
    768c:	41ad      	sbcs	r5, r5
    768e:	2380      	movs	r3, #128	; 0x80
    7690:	2601      	movs	r6, #1
    7692:	4641      	mov	r1, r8
    7694:	426d      	negs	r5, r5
    7696:	197f      	adds	r7, r7, r5
    7698:	041b      	lsls	r3, r3, #16
    769a:	403b      	ands	r3, r7
    769c:	400e      	ands	r6, r1
    769e:	1c15      	adds	r5, r2, #0
    76a0:	2b00      	cmp	r3, #0
    76a2:	d100      	bne.n	76a6 <__aeabi_dsub+0x92>
    76a4:	e083      	b.n	77ae <__aeabi_dsub+0x19a>
    76a6:	4bb6      	ldr	r3, [pc, #728]	; (7980 <__aeabi_dsub+0x36c>)
    76a8:	3401      	adds	r4, #1
    76aa:	429c      	cmp	r4, r3
    76ac:	d100      	bne.n	76b0 <__aeabi_dsub+0x9c>
    76ae:	e116      	b.n	78de <__aeabi_dsub+0x2ca>
    76b0:	1c3a      	adds	r2, r7, #0
    76b2:	4bb4      	ldr	r3, [pc, #720]	; (7984 <__aeabi_dsub+0x370>)
    76b4:	08ed      	lsrs	r5, r5, #3
    76b6:	401a      	ands	r2, r3
    76b8:	0750      	lsls	r0, r2, #29
    76ba:	0564      	lsls	r4, r4, #21
    76bc:	0252      	lsls	r2, r2, #9
    76be:	4305      	orrs	r5, r0
    76c0:	0b12      	lsrs	r2, r2, #12
    76c2:	0d64      	lsrs	r4, r4, #21
    76c4:	2100      	movs	r1, #0
    76c6:	0312      	lsls	r2, r2, #12
    76c8:	0d0b      	lsrs	r3, r1, #20
    76ca:	051b      	lsls	r3, r3, #20
    76cc:	0564      	lsls	r4, r4, #21
    76ce:	0b12      	lsrs	r2, r2, #12
    76d0:	431a      	orrs	r2, r3
    76d2:	0863      	lsrs	r3, r4, #1
    76d4:	4cac      	ldr	r4, [pc, #688]	; (7988 <__aeabi_dsub+0x374>)
    76d6:	07f6      	lsls	r6, r6, #31
    76d8:	4014      	ands	r4, r2
    76da:	431c      	orrs	r4, r3
    76dc:	0064      	lsls	r4, r4, #1
    76de:	0864      	lsrs	r4, r4, #1
    76e0:	4334      	orrs	r4, r6
    76e2:	1c28      	adds	r0, r5, #0
    76e4:	1c21      	adds	r1, r4, #0
    76e6:	b003      	add	sp, #12
    76e8:	bc3c      	pop	{r2, r3, r4, r5}
    76ea:	4690      	mov	r8, r2
    76ec:	4699      	mov	r9, r3
    76ee:	46a2      	mov	sl, r4
    76f0:	46ab      	mov	fp, r5
    76f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    76f4:	4ba2      	ldr	r3, [pc, #648]	; (7980 <__aeabi_dsub+0x36c>)
    76f6:	429c      	cmp	r4, r3
    76f8:	d0be      	beq.n	7678 <__aeabi_dsub+0x64>
    76fa:	2380      	movs	r3, #128	; 0x80
    76fc:	041b      	lsls	r3, r3, #16
    76fe:	431a      	orrs	r2, r3
    7700:	2e38      	cmp	r6, #56	; 0x38
    7702:	dd00      	ble.n	7706 <__aeabi_dsub+0xf2>
    7704:	e103      	b.n	790e <__aeabi_dsub+0x2fa>
    7706:	2e1f      	cmp	r6, #31
    7708:	dd00      	ble.n	770c <__aeabi_dsub+0xf8>
    770a:	e13f      	b.n	798c <__aeabi_dsub+0x378>
    770c:	2020      	movs	r0, #32
    770e:	1b83      	subs	r3, r0, r6
    7710:	4699      	mov	r9, r3
    7712:	1c13      	adds	r3, r2, #0
    7714:	4649      	mov	r1, r9
    7716:	408b      	lsls	r3, r1
    7718:	469c      	mov	ip, r3
    771a:	9b01      	ldr	r3, [sp, #4]
    771c:	4660      	mov	r0, ip
    771e:	40f3      	lsrs	r3, r6
    7720:	4303      	orrs	r3, r0
    7722:	9801      	ldr	r0, [sp, #4]
    7724:	40f2      	lsrs	r2, r6
    7726:	4088      	lsls	r0, r1
    7728:	1c01      	adds	r1, r0, #0
    772a:	1e48      	subs	r0, r1, #1
    772c:	4181      	sbcs	r1, r0
    772e:	430b      	orrs	r3, r1
    7730:	1aeb      	subs	r3, r5, r3
    7732:	429d      	cmp	r5, r3
    7734:	4180      	sbcs	r0, r0
    7736:	1c1d      	adds	r5, r3, #0
    7738:	1aba      	subs	r2, r7, r2
    773a:	4240      	negs	r0, r0
    773c:	1a17      	subs	r7, r2, r0
    773e:	023b      	lsls	r3, r7, #8
    7740:	d400      	bmi.n	7744 <__aeabi_dsub+0x130>
    7742:	e0a8      	b.n	7896 <__aeabi_dsub+0x282>
    7744:	027a      	lsls	r2, r7, #9
    7746:	0a56      	lsrs	r6, r2, #9
    7748:	2e00      	cmp	r6, #0
    774a:	d100      	bne.n	774e <__aeabi_dsub+0x13a>
    774c:	e0ca      	b.n	78e4 <__aeabi_dsub+0x2d0>
    774e:	1c30      	adds	r0, r6, #0
    7750:	f000 fc0e 	bl	7f70 <__clzsi2>
    7754:	1c03      	adds	r3, r0, #0
    7756:	3b08      	subs	r3, #8
    7758:	2b1f      	cmp	r3, #31
    775a:	dd00      	ble.n	775e <__aeabi_dsub+0x14a>
    775c:	e0cb      	b.n	78f6 <__aeabi_dsub+0x2e2>
    775e:	2228      	movs	r2, #40	; 0x28
    7760:	1c29      	adds	r1, r5, #0
    7762:	1a12      	subs	r2, r2, r0
    7764:	40d1      	lsrs	r1, r2
    7766:	409e      	lsls	r6, r3
    7768:	1c0a      	adds	r2, r1, #0
    776a:	409d      	lsls	r5, r3
    776c:	4332      	orrs	r2, r6
    776e:	429c      	cmp	r4, r3
    7770:	dd00      	ble.n	7774 <__aeabi_dsub+0x160>
    7772:	e0c8      	b.n	7906 <__aeabi_dsub+0x2f2>
    7774:	1b1c      	subs	r4, r3, r4
    7776:	1c67      	adds	r7, r4, #1
    7778:	2f1f      	cmp	r7, #31
    777a:	dd00      	ble.n	777e <__aeabi_dsub+0x16a>
    777c:	e0ed      	b.n	795a <__aeabi_dsub+0x346>
    777e:	231f      	movs	r3, #31
    7780:	1c29      	adds	r1, r5, #0
    7782:	1b1c      	subs	r4, r3, r4
    7784:	1c13      	adds	r3, r2, #0
    7786:	40a5      	lsls	r5, r4
    7788:	40a3      	lsls	r3, r4
    778a:	40f9      	lsrs	r1, r7
    778c:	1e6c      	subs	r4, r5, #1
    778e:	41a5      	sbcs	r5, r4
    7790:	40fa      	lsrs	r2, r7
    7792:	4319      	orrs	r1, r3
    7794:	430d      	orrs	r5, r1
    7796:	1c17      	adds	r7, r2, #0
    7798:	2400      	movs	r4, #0
    779a:	e76d      	b.n	7678 <__aeabi_dsub+0x64>
    779c:	2380      	movs	r3, #128	; 0x80
    779e:	2601      	movs	r6, #1
    77a0:	4642      	mov	r2, r8
    77a2:	041b      	lsls	r3, r3, #16
    77a4:	403b      	ands	r3, r7
    77a6:	4016      	ands	r6, r2
    77a8:	2b00      	cmp	r3, #0
    77aa:	d000      	beq.n	77ae <__aeabi_dsub+0x19a>
    77ac:	e77b      	b.n	76a6 <__aeabi_dsub+0x92>
    77ae:	4b74      	ldr	r3, [pc, #464]	; (7980 <__aeabi_dsub+0x36c>)
    77b0:	08ed      	lsrs	r5, r5, #3
    77b2:	0778      	lsls	r0, r7, #29
    77b4:	4305      	orrs	r5, r0
    77b6:	08fa      	lsrs	r2, r7, #3
    77b8:	429c      	cmp	r4, r3
    77ba:	d03b      	beq.n	7834 <__aeabi_dsub+0x220>
    77bc:	0312      	lsls	r2, r2, #12
    77be:	0564      	lsls	r4, r4, #21
    77c0:	0b12      	lsrs	r2, r2, #12
    77c2:	0d64      	lsrs	r4, r4, #21
    77c4:	e77e      	b.n	76c4 <__aeabi_dsub+0xb0>
    77c6:	1a23      	subs	r3, r4, r0
    77c8:	469a      	mov	sl, r3
    77ca:	2b00      	cmp	r3, #0
    77cc:	dc00      	bgt.n	77d0 <__aeabi_dsub+0x1bc>
    77ce:	e0a5      	b.n	791c <__aeabi_dsub+0x308>
    77d0:	2800      	cmp	r0, #0
    77d2:	d044      	beq.n	785e <__aeabi_dsub+0x24a>
    77d4:	486a      	ldr	r0, [pc, #424]	; (7980 <__aeabi_dsub+0x36c>)
    77d6:	4284      	cmp	r4, r0
    77d8:	d100      	bne.n	77dc <__aeabi_dsub+0x1c8>
    77da:	e74d      	b.n	7678 <__aeabi_dsub+0x64>
    77dc:	2080      	movs	r0, #128	; 0x80
    77de:	0400      	lsls	r0, r0, #16
    77e0:	4302      	orrs	r2, r0
    77e2:	4653      	mov	r3, sl
    77e4:	2b38      	cmp	r3, #56	; 0x38
    77e6:	dc00      	bgt.n	77ea <__aeabi_dsub+0x1d6>
    77e8:	e11c      	b.n	7a24 <__aeabi_dsub+0x410>
    77ea:	9b01      	ldr	r3, [sp, #4]
    77ec:	431a      	orrs	r2, r3
    77ee:	1e51      	subs	r1, r2, #1
    77f0:	418a      	sbcs	r2, r1
    77f2:	b2d1      	uxtb	r1, r2
    77f4:	2200      	movs	r2, #0
    77f6:	1949      	adds	r1, r1, r5
    77f8:	42a9      	cmp	r1, r5
    77fa:	4180      	sbcs	r0, r0
    77fc:	1c0d      	adds	r5, r1, #0
    77fe:	19d2      	adds	r2, r2, r7
    7800:	4240      	negs	r0, r0
    7802:	1817      	adds	r7, r2, r0
    7804:	023b      	lsls	r3, r7, #8
    7806:	d546      	bpl.n	7896 <__aeabi_dsub+0x282>
    7808:	4b5d      	ldr	r3, [pc, #372]	; (7980 <__aeabi_dsub+0x36c>)
    780a:	3401      	adds	r4, #1
    780c:	429c      	cmp	r4, r3
    780e:	d100      	bne.n	7812 <__aeabi_dsub+0x1fe>
    7810:	e169      	b.n	7ae6 <__aeabi_dsub+0x4d2>
    7812:	2001      	movs	r0, #1
    7814:	4a5b      	ldr	r2, [pc, #364]	; (7984 <__aeabi_dsub+0x370>)
    7816:	086b      	lsrs	r3, r5, #1
    7818:	403a      	ands	r2, r7
    781a:	4028      	ands	r0, r5
    781c:	4318      	orrs	r0, r3
    781e:	07d5      	lsls	r5, r2, #31
    7820:	4305      	orrs	r5, r0
    7822:	0857      	lsrs	r7, r2, #1
    7824:	e728      	b.n	7678 <__aeabi_dsub+0x64>
    7826:	1c13      	adds	r3, r2, #0
    7828:	9901      	ldr	r1, [sp, #4]
    782a:	430b      	orrs	r3, r1
    782c:	d100      	bne.n	7830 <__aeabi_dsub+0x21c>
    782e:	e711      	b.n	7654 <__aeabi_dsub+0x40>
    7830:	464b      	mov	r3, r9
    7832:	e713      	b.n	765c <__aeabi_dsub+0x48>
    7834:	1c2b      	adds	r3, r5, #0
    7836:	4313      	orrs	r3, r2
    7838:	d051      	beq.n	78de <__aeabi_dsub+0x2ca>
    783a:	2380      	movs	r3, #128	; 0x80
    783c:	031b      	lsls	r3, r3, #12
    783e:	431a      	orrs	r2, r3
    7840:	0312      	lsls	r2, r2, #12
    7842:	0b12      	lsrs	r2, r2, #12
    7844:	e73e      	b.n	76c4 <__aeabi_dsub+0xb0>
    7846:	3e01      	subs	r6, #1
    7848:	2e00      	cmp	r6, #0
    784a:	d000      	beq.n	784e <__aeabi_dsub+0x23a>
    784c:	e080      	b.n	7950 <__aeabi_dsub+0x33c>
    784e:	1a69      	subs	r1, r5, r1
    7850:	428d      	cmp	r5, r1
    7852:	419b      	sbcs	r3, r3
    7854:	1aba      	subs	r2, r7, r2
    7856:	425b      	negs	r3, r3
    7858:	1ad7      	subs	r7, r2, r3
    785a:	1c0d      	adds	r5, r1, #0
    785c:	e76f      	b.n	773e <__aeabi_dsub+0x12a>
    785e:	1c10      	adds	r0, r2, #0
    7860:	9b01      	ldr	r3, [sp, #4]
    7862:	4318      	orrs	r0, r3
    7864:	d100      	bne.n	7868 <__aeabi_dsub+0x254>
    7866:	e707      	b.n	7678 <__aeabi_dsub+0x64>
    7868:	2301      	movs	r3, #1
    786a:	425b      	negs	r3, r3
    786c:	469c      	mov	ip, r3
    786e:	44e2      	add	sl, ip
    7870:	4653      	mov	r3, sl
    7872:	2b00      	cmp	r3, #0
    7874:	d000      	beq.n	7878 <__aeabi_dsub+0x264>
    7876:	e102      	b.n	7a7e <__aeabi_dsub+0x46a>
    7878:	9b01      	ldr	r3, [sp, #4]
    787a:	19d2      	adds	r2, r2, r7
    787c:	1959      	adds	r1, r3, r5
    787e:	42a9      	cmp	r1, r5
    7880:	419b      	sbcs	r3, r3
    7882:	425b      	negs	r3, r3
    7884:	18d7      	adds	r7, r2, r3
    7886:	1c0d      	adds	r5, r1, #0
    7888:	e7bc      	b.n	7804 <__aeabi_dsub+0x1f0>
    788a:	4663      	mov	r3, ip
    788c:	4303      	orrs	r3, r0
    788e:	d100      	bne.n	7892 <__aeabi_dsub+0x27e>
    7890:	e128      	b.n	7ae4 <__aeabi_dsub+0x4d0>
    7892:	1c07      	adds	r7, r0, #0
    7894:	4665      	mov	r5, ip
    7896:	076b      	lsls	r3, r5, #29
    7898:	d000      	beq.n	789c <__aeabi_dsub+0x288>
    789a:	e6f0      	b.n	767e <__aeabi_dsub+0x6a>
    789c:	2601      	movs	r6, #1
    789e:	4643      	mov	r3, r8
    78a0:	401e      	ands	r6, r3
    78a2:	e784      	b.n	77ae <__aeabi_dsub+0x19a>
    78a4:	2e00      	cmp	r6, #0
    78a6:	d000      	beq.n	78aa <__aeabi_dsub+0x296>
    78a8:	e081      	b.n	79ae <__aeabi_dsub+0x39a>
    78aa:	1c60      	adds	r0, r4, #1
    78ac:	0540      	lsls	r0, r0, #21
    78ae:	0d40      	lsrs	r0, r0, #21
    78b0:	2801      	cmp	r0, #1
    78b2:	dc00      	bgt.n	78b6 <__aeabi_dsub+0x2a2>
    78b4:	e107      	b.n	7ac6 <__aeabi_dsub+0x4b2>
    78b6:	9901      	ldr	r1, [sp, #4]
    78b8:	1a68      	subs	r0, r5, r1
    78ba:	4684      	mov	ip, r0
    78bc:	4565      	cmp	r5, ip
    78be:	41b6      	sbcs	r6, r6
    78c0:	1ab8      	subs	r0, r7, r2
    78c2:	4276      	negs	r6, r6
    78c4:	1b86      	subs	r6, r0, r6
    78c6:	0230      	lsls	r0, r6, #8
    78c8:	d400      	bmi.n	78cc <__aeabi_dsub+0x2b8>
    78ca:	e0a1      	b.n	7a10 <__aeabi_dsub+0x3fc>
    78cc:	468c      	mov	ip, r1
    78ce:	1b4d      	subs	r5, r1, r5
    78d0:	45ac      	cmp	ip, r5
    78d2:	4189      	sbcs	r1, r1
    78d4:	1bd2      	subs	r2, r2, r7
    78d6:	4249      	negs	r1, r1
    78d8:	1a56      	subs	r6, r2, r1
    78da:	4698      	mov	r8, r3
    78dc:	e734      	b.n	7748 <__aeabi_dsub+0x134>
    78de:	2200      	movs	r2, #0
    78e0:	2500      	movs	r5, #0
    78e2:	e6ef      	b.n	76c4 <__aeabi_dsub+0xb0>
    78e4:	1c28      	adds	r0, r5, #0
    78e6:	f000 fb43 	bl	7f70 <__clzsi2>
    78ea:	3020      	adds	r0, #32
    78ec:	1c03      	adds	r3, r0, #0
    78ee:	3b08      	subs	r3, #8
    78f0:	2b1f      	cmp	r3, #31
    78f2:	dc00      	bgt.n	78f6 <__aeabi_dsub+0x2e2>
    78f4:	e733      	b.n	775e <__aeabi_dsub+0x14a>
    78f6:	1c02      	adds	r2, r0, #0
    78f8:	3a28      	subs	r2, #40	; 0x28
    78fa:	4095      	lsls	r5, r2
    78fc:	1c2a      	adds	r2, r5, #0
    78fe:	2500      	movs	r5, #0
    7900:	429c      	cmp	r4, r3
    7902:	dc00      	bgt.n	7906 <__aeabi_dsub+0x2f2>
    7904:	e736      	b.n	7774 <__aeabi_dsub+0x160>
    7906:	4f1f      	ldr	r7, [pc, #124]	; (7984 <__aeabi_dsub+0x370>)
    7908:	1ae4      	subs	r4, r4, r3
    790a:	4017      	ands	r7, r2
    790c:	e6b4      	b.n	7678 <__aeabi_dsub+0x64>
    790e:	9b01      	ldr	r3, [sp, #4]
    7910:	431a      	orrs	r2, r3
    7912:	1e51      	subs	r1, r2, #1
    7914:	418a      	sbcs	r2, r1
    7916:	b2d3      	uxtb	r3, r2
    7918:	2200      	movs	r2, #0
    791a:	e709      	b.n	7730 <__aeabi_dsub+0x11c>
    791c:	2b00      	cmp	r3, #0
    791e:	d000      	beq.n	7922 <__aeabi_dsub+0x30e>
    7920:	e101      	b.n	7b26 <__aeabi_dsub+0x512>
    7922:	1c60      	adds	r0, r4, #1
    7924:	0543      	lsls	r3, r0, #21
    7926:	0d5b      	lsrs	r3, r3, #21
    7928:	2b01      	cmp	r3, #1
    792a:	dc00      	bgt.n	792e <__aeabi_dsub+0x31a>
    792c:	e0b0      	b.n	7a90 <__aeabi_dsub+0x47c>
    792e:	4b14      	ldr	r3, [pc, #80]	; (7980 <__aeabi_dsub+0x36c>)
    7930:	4298      	cmp	r0, r3
    7932:	d100      	bne.n	7936 <__aeabi_dsub+0x322>
    7934:	e11e      	b.n	7b74 <__aeabi_dsub+0x560>
    7936:	9b01      	ldr	r3, [sp, #4]
    7938:	19d2      	adds	r2, r2, r7
    793a:	1959      	adds	r1, r3, r5
    793c:	42a9      	cmp	r1, r5
    793e:	419b      	sbcs	r3, r3
    7940:	425b      	negs	r3, r3
    7942:	18d2      	adds	r2, r2, r3
    7944:	0849      	lsrs	r1, r1, #1
    7946:	07d5      	lsls	r5, r2, #31
    7948:	430d      	orrs	r5, r1
    794a:	0857      	lsrs	r7, r2, #1
    794c:	1c04      	adds	r4, r0, #0
    794e:	e693      	b.n	7678 <__aeabi_dsub+0x64>
    7950:	4b0b      	ldr	r3, [pc, #44]	; (7980 <__aeabi_dsub+0x36c>)
    7952:	429c      	cmp	r4, r3
    7954:	d000      	beq.n	7958 <__aeabi_dsub+0x344>
    7956:	e6d3      	b.n	7700 <__aeabi_dsub+0xec>
    7958:	e68e      	b.n	7678 <__aeabi_dsub+0x64>
    795a:	1c21      	adds	r1, r4, #0
    795c:	1c13      	adds	r3, r2, #0
    795e:	391f      	subs	r1, #31
    7960:	40cb      	lsrs	r3, r1
    7962:	1c19      	adds	r1, r3, #0
    7964:	2f20      	cmp	r7, #32
    7966:	d100      	bne.n	796a <__aeabi_dsub+0x356>
    7968:	e08e      	b.n	7a88 <__aeabi_dsub+0x474>
    796a:	233f      	movs	r3, #63	; 0x3f
    796c:	1b1c      	subs	r4, r3, r4
    796e:	40a2      	lsls	r2, r4
    7970:	4315      	orrs	r5, r2
    7972:	1e6a      	subs	r2, r5, #1
    7974:	4195      	sbcs	r5, r2
    7976:	2700      	movs	r7, #0
    7978:	430d      	orrs	r5, r1
    797a:	2400      	movs	r4, #0
    797c:	e78b      	b.n	7896 <__aeabi_dsub+0x282>
    797e:	46c0      	nop			; (mov r8, r8)
    7980:	000007ff 	.word	0x000007ff
    7984:	ff7fffff 	.word	0xff7fffff
    7988:	800fffff 	.word	0x800fffff
    798c:	1c33      	adds	r3, r6, #0
    798e:	1c10      	adds	r0, r2, #0
    7990:	3b20      	subs	r3, #32
    7992:	40d8      	lsrs	r0, r3
    7994:	2e20      	cmp	r6, #32
    7996:	d079      	beq.n	7a8c <__aeabi_dsub+0x478>
    7998:	2340      	movs	r3, #64	; 0x40
    799a:	1b9b      	subs	r3, r3, r6
    799c:	409a      	lsls	r2, r3
    799e:	1c13      	adds	r3, r2, #0
    79a0:	9a01      	ldr	r2, [sp, #4]
    79a2:	4313      	orrs	r3, r2
    79a4:	1e59      	subs	r1, r3, #1
    79a6:	418b      	sbcs	r3, r1
    79a8:	2200      	movs	r2, #0
    79aa:	4303      	orrs	r3, r0
    79ac:	e6c0      	b.n	7730 <__aeabi_dsub+0x11c>
    79ae:	2c00      	cmp	r4, #0
    79b0:	d053      	beq.n	7a5a <__aeabi_dsub+0x446>
    79b2:	4cc7      	ldr	r4, [pc, #796]	; (7cd0 <__aeabi_dsub+0x6bc>)
    79b4:	42a0      	cmp	r0, r4
    79b6:	d100      	bne.n	79ba <__aeabi_dsub+0x3a6>
    79b8:	e0b0      	b.n	7b1c <__aeabi_dsub+0x508>
    79ba:	2480      	movs	r4, #128	; 0x80
    79bc:	4271      	negs	r1, r6
    79be:	4689      	mov	r9, r1
    79c0:	0424      	lsls	r4, r4, #16
    79c2:	4327      	orrs	r7, r4
    79c4:	4649      	mov	r1, r9
    79c6:	2938      	cmp	r1, #56	; 0x38
    79c8:	dd00      	ble.n	79cc <__aeabi_dsub+0x3b8>
    79ca:	e0cd      	b.n	7b68 <__aeabi_dsub+0x554>
    79cc:	291f      	cmp	r1, #31
    79ce:	dd00      	ble.n	79d2 <__aeabi_dsub+0x3be>
    79d0:	e159      	b.n	7c86 <__aeabi_dsub+0x672>
    79d2:	2420      	movs	r4, #32
    79d4:	1c3e      	adds	r6, r7, #0
    79d6:	1a61      	subs	r1, r4, r1
    79d8:	408e      	lsls	r6, r1
    79da:	468a      	mov	sl, r1
    79dc:	46b0      	mov	r8, r6
    79de:	4649      	mov	r1, r9
    79e0:	1c2e      	adds	r6, r5, #0
    79e2:	40ce      	lsrs	r6, r1
    79e4:	4651      	mov	r1, sl
    79e6:	46b4      	mov	ip, r6
    79e8:	408d      	lsls	r5, r1
    79ea:	4664      	mov	r4, ip
    79ec:	4646      	mov	r6, r8
    79ee:	4649      	mov	r1, r9
    79f0:	4326      	orrs	r6, r4
    79f2:	1e6c      	subs	r4, r5, #1
    79f4:	41a5      	sbcs	r5, r4
    79f6:	40cf      	lsrs	r7, r1
    79f8:	4335      	orrs	r5, r6
    79fa:	9901      	ldr	r1, [sp, #4]
    79fc:	1bd7      	subs	r7, r2, r7
    79fe:	468c      	mov	ip, r1
    7a00:	1b4d      	subs	r5, r1, r5
    7a02:	45ac      	cmp	ip, r5
    7a04:	4192      	sbcs	r2, r2
    7a06:	4252      	negs	r2, r2
    7a08:	1abf      	subs	r7, r7, r2
    7a0a:	1c04      	adds	r4, r0, #0
    7a0c:	4698      	mov	r8, r3
    7a0e:	e696      	b.n	773e <__aeabi_dsub+0x12a>
    7a10:	4663      	mov	r3, ip
    7a12:	4665      	mov	r5, ip
    7a14:	4333      	orrs	r3, r6
    7a16:	d000      	beq.n	7a1a <__aeabi_dsub+0x406>
    7a18:	e696      	b.n	7748 <__aeabi_dsub+0x134>
    7a1a:	2600      	movs	r6, #0
    7a1c:	2700      	movs	r7, #0
    7a1e:	2400      	movs	r4, #0
    7a20:	2500      	movs	r5, #0
    7a22:	e6c4      	b.n	77ae <__aeabi_dsub+0x19a>
    7a24:	2b1f      	cmp	r3, #31
    7a26:	dc61      	bgt.n	7aec <__aeabi_dsub+0x4d8>
    7a28:	2020      	movs	r0, #32
    7a2a:	1ac3      	subs	r3, r0, r3
    7a2c:	469b      	mov	fp, r3
    7a2e:	1c13      	adds	r3, r2, #0
    7a30:	4659      	mov	r1, fp
    7a32:	408b      	lsls	r3, r1
    7a34:	4651      	mov	r1, sl
    7a36:	4699      	mov	r9, r3
    7a38:	9b01      	ldr	r3, [sp, #4]
    7a3a:	40cb      	lsrs	r3, r1
    7a3c:	469c      	mov	ip, r3
    7a3e:	464b      	mov	r3, r9
    7a40:	4660      	mov	r0, ip
    7a42:	4303      	orrs	r3, r0
    7a44:	469c      	mov	ip, r3
    7a46:	465b      	mov	r3, fp
    7a48:	9901      	ldr	r1, [sp, #4]
    7a4a:	4099      	lsls	r1, r3
    7a4c:	4663      	mov	r3, ip
    7a4e:	1e48      	subs	r0, r1, #1
    7a50:	4181      	sbcs	r1, r0
    7a52:	4319      	orrs	r1, r3
    7a54:	4653      	mov	r3, sl
    7a56:	40da      	lsrs	r2, r3
    7a58:	e6cd      	b.n	77f6 <__aeabi_dsub+0x1e2>
    7a5a:	1c3c      	adds	r4, r7, #0
    7a5c:	432c      	orrs	r4, r5
    7a5e:	d05d      	beq.n	7b1c <__aeabi_dsub+0x508>
    7a60:	43f1      	mvns	r1, r6
    7a62:	4689      	mov	r9, r1
    7a64:	2900      	cmp	r1, #0
    7a66:	d155      	bne.n	7b14 <__aeabi_dsub+0x500>
    7a68:	9901      	ldr	r1, [sp, #4]
    7a6a:	1bd2      	subs	r2, r2, r7
    7a6c:	468c      	mov	ip, r1
    7a6e:	1b4d      	subs	r5, r1, r5
    7a70:	45ac      	cmp	ip, r5
    7a72:	4189      	sbcs	r1, r1
    7a74:	4249      	negs	r1, r1
    7a76:	1a57      	subs	r7, r2, r1
    7a78:	1c04      	adds	r4, r0, #0
    7a7a:	4698      	mov	r8, r3
    7a7c:	e65f      	b.n	773e <__aeabi_dsub+0x12a>
    7a7e:	4894      	ldr	r0, [pc, #592]	; (7cd0 <__aeabi_dsub+0x6bc>)
    7a80:	4284      	cmp	r4, r0
    7a82:	d000      	beq.n	7a86 <__aeabi_dsub+0x472>
    7a84:	e6ad      	b.n	77e2 <__aeabi_dsub+0x1ce>
    7a86:	e5f7      	b.n	7678 <__aeabi_dsub+0x64>
    7a88:	2200      	movs	r2, #0
    7a8a:	e771      	b.n	7970 <__aeabi_dsub+0x35c>
    7a8c:	2300      	movs	r3, #0
    7a8e:	e787      	b.n	79a0 <__aeabi_dsub+0x38c>
    7a90:	1c3b      	adds	r3, r7, #0
    7a92:	432b      	orrs	r3, r5
    7a94:	2c00      	cmp	r4, #0
    7a96:	d000      	beq.n	7a9a <__aeabi_dsub+0x486>
    7a98:	e0da      	b.n	7c50 <__aeabi_dsub+0x63c>
    7a9a:	2b00      	cmp	r3, #0
    7a9c:	d100      	bne.n	7aa0 <__aeabi_dsub+0x48c>
    7a9e:	e113      	b.n	7cc8 <__aeabi_dsub+0x6b4>
    7aa0:	1c13      	adds	r3, r2, #0
    7aa2:	9901      	ldr	r1, [sp, #4]
    7aa4:	430b      	orrs	r3, r1
    7aa6:	d100      	bne.n	7aaa <__aeabi_dsub+0x496>
    7aa8:	e5e6      	b.n	7678 <__aeabi_dsub+0x64>
    7aaa:	1949      	adds	r1, r1, r5
    7aac:	42a9      	cmp	r1, r5
    7aae:	419b      	sbcs	r3, r3
    7ab0:	19d2      	adds	r2, r2, r7
    7ab2:	425b      	negs	r3, r3
    7ab4:	18d7      	adds	r7, r2, r3
    7ab6:	023b      	lsls	r3, r7, #8
    7ab8:	d400      	bmi.n	7abc <__aeabi_dsub+0x4a8>
    7aba:	e121      	b.n	7d00 <__aeabi_dsub+0x6ec>
    7abc:	4b85      	ldr	r3, [pc, #532]	; (7cd4 <__aeabi_dsub+0x6c0>)
    7abe:	1c0d      	adds	r5, r1, #0
    7ac0:	401f      	ands	r7, r3
    7ac2:	1c04      	adds	r4, r0, #0
    7ac4:	e5d8      	b.n	7678 <__aeabi_dsub+0x64>
    7ac6:	1c38      	adds	r0, r7, #0
    7ac8:	4328      	orrs	r0, r5
    7aca:	2c00      	cmp	r4, #0
    7acc:	d140      	bne.n	7b50 <__aeabi_dsub+0x53c>
    7ace:	2800      	cmp	r0, #0
    7ad0:	d000      	beq.n	7ad4 <__aeabi_dsub+0x4c0>
    7ad2:	e083      	b.n	7bdc <__aeabi_dsub+0x5c8>
    7ad4:	1c10      	adds	r0, r2, #0
    7ad6:	9901      	ldr	r1, [sp, #4]
    7ad8:	4308      	orrs	r0, r1
    7ada:	d003      	beq.n	7ae4 <__aeabi_dsub+0x4d0>
    7adc:	1c17      	adds	r7, r2, #0
    7ade:	1c0d      	adds	r5, r1, #0
    7ae0:	4698      	mov	r8, r3
    7ae2:	e5c9      	b.n	7678 <__aeabi_dsub+0x64>
    7ae4:	2600      	movs	r6, #0
    7ae6:	2700      	movs	r7, #0
    7ae8:	2500      	movs	r5, #0
    7aea:	e660      	b.n	77ae <__aeabi_dsub+0x19a>
    7aec:	4650      	mov	r0, sl
    7aee:	1c13      	adds	r3, r2, #0
    7af0:	3820      	subs	r0, #32
    7af2:	40c3      	lsrs	r3, r0
    7af4:	1c18      	adds	r0, r3, #0
    7af6:	4653      	mov	r3, sl
    7af8:	2b20      	cmp	r3, #32
    7afa:	d100      	bne.n	7afe <__aeabi_dsub+0x4ea>
    7afc:	e0c1      	b.n	7c82 <__aeabi_dsub+0x66e>
    7afe:	2340      	movs	r3, #64	; 0x40
    7b00:	4651      	mov	r1, sl
    7b02:	1a5b      	subs	r3, r3, r1
    7b04:	409a      	lsls	r2, r3
    7b06:	9901      	ldr	r1, [sp, #4]
    7b08:	4311      	orrs	r1, r2
    7b0a:	1e4a      	subs	r2, r1, #1
    7b0c:	4191      	sbcs	r1, r2
    7b0e:	2200      	movs	r2, #0
    7b10:	4301      	orrs	r1, r0
    7b12:	e670      	b.n	77f6 <__aeabi_dsub+0x1e2>
    7b14:	4c6e      	ldr	r4, [pc, #440]	; (7cd0 <__aeabi_dsub+0x6bc>)
    7b16:	42a0      	cmp	r0, r4
    7b18:	d000      	beq.n	7b1c <__aeabi_dsub+0x508>
    7b1a:	e753      	b.n	79c4 <__aeabi_dsub+0x3b0>
    7b1c:	1c17      	adds	r7, r2, #0
    7b1e:	9d01      	ldr	r5, [sp, #4]
    7b20:	1c04      	adds	r4, r0, #0
    7b22:	4698      	mov	r8, r3
    7b24:	e5a8      	b.n	7678 <__aeabi_dsub+0x64>
    7b26:	2c00      	cmp	r4, #0
    7b28:	d128      	bne.n	7b7c <__aeabi_dsub+0x568>
    7b2a:	1c3c      	adds	r4, r7, #0
    7b2c:	432c      	orrs	r4, r5
    7b2e:	d100      	bne.n	7b32 <__aeabi_dsub+0x51e>
    7b30:	e08a      	b.n	7c48 <__aeabi_dsub+0x634>
    7b32:	43db      	mvns	r3, r3
    7b34:	469a      	mov	sl, r3
    7b36:	2b00      	cmp	r3, #0
    7b38:	d000      	beq.n	7b3c <__aeabi_dsub+0x528>
    7b3a:	e082      	b.n	7c42 <__aeabi_dsub+0x62e>
    7b3c:	9b01      	ldr	r3, [sp, #4]
    7b3e:	19d2      	adds	r2, r2, r7
    7b40:	469c      	mov	ip, r3
    7b42:	4465      	add	r5, ip
    7b44:	429d      	cmp	r5, r3
    7b46:	4189      	sbcs	r1, r1
    7b48:	4249      	negs	r1, r1
    7b4a:	1857      	adds	r7, r2, r1
    7b4c:	1c04      	adds	r4, r0, #0
    7b4e:	e659      	b.n	7804 <__aeabi_dsub+0x1f0>
    7b50:	2800      	cmp	r0, #0
    7b52:	d15b      	bne.n	7c0c <__aeabi_dsub+0x5f8>
    7b54:	1c10      	adds	r0, r2, #0
    7b56:	9901      	ldr	r1, [sp, #4]
    7b58:	4308      	orrs	r0, r1
    7b5a:	d100      	bne.n	7b5e <__aeabi_dsub+0x54a>
    7b5c:	e0a4      	b.n	7ca8 <__aeabi_dsub+0x694>
    7b5e:	1c17      	adds	r7, r2, #0
    7b60:	1c0d      	adds	r5, r1, #0
    7b62:	4698      	mov	r8, r3
    7b64:	4c5a      	ldr	r4, [pc, #360]	; (7cd0 <__aeabi_dsub+0x6bc>)
    7b66:	e587      	b.n	7678 <__aeabi_dsub+0x64>
    7b68:	433d      	orrs	r5, r7
    7b6a:	1e6f      	subs	r7, r5, #1
    7b6c:	41bd      	sbcs	r5, r7
    7b6e:	2700      	movs	r7, #0
    7b70:	b2ed      	uxtb	r5, r5
    7b72:	e742      	b.n	79fa <__aeabi_dsub+0x3e6>
    7b74:	1c04      	adds	r4, r0, #0
    7b76:	2700      	movs	r7, #0
    7b78:	2500      	movs	r5, #0
    7b7a:	e618      	b.n	77ae <__aeabi_dsub+0x19a>
    7b7c:	4c54      	ldr	r4, [pc, #336]	; (7cd0 <__aeabi_dsub+0x6bc>)
    7b7e:	42a0      	cmp	r0, r4
    7b80:	d062      	beq.n	7c48 <__aeabi_dsub+0x634>
    7b82:	4653      	mov	r3, sl
    7b84:	2480      	movs	r4, #128	; 0x80
    7b86:	425b      	negs	r3, r3
    7b88:	469a      	mov	sl, r3
    7b8a:	0424      	lsls	r4, r4, #16
    7b8c:	4327      	orrs	r7, r4
    7b8e:	4653      	mov	r3, sl
    7b90:	2b38      	cmp	r3, #56	; 0x38
    7b92:	dd00      	ble.n	7b96 <__aeabi_dsub+0x582>
    7b94:	e08e      	b.n	7cb4 <__aeabi_dsub+0x6a0>
    7b96:	2b1f      	cmp	r3, #31
    7b98:	dd00      	ble.n	7b9c <__aeabi_dsub+0x588>
    7b9a:	e09d      	b.n	7cd8 <__aeabi_dsub+0x6c4>
    7b9c:	2420      	movs	r4, #32
    7b9e:	1ae3      	subs	r3, r4, r3
    7ba0:	469b      	mov	fp, r3
    7ba2:	1c3b      	adds	r3, r7, #0
    7ba4:	4659      	mov	r1, fp
    7ba6:	408b      	lsls	r3, r1
    7ba8:	4651      	mov	r1, sl
    7baa:	4699      	mov	r9, r3
    7bac:	1c2b      	adds	r3, r5, #0
    7bae:	40cb      	lsrs	r3, r1
    7bb0:	469c      	mov	ip, r3
    7bb2:	464b      	mov	r3, r9
    7bb4:	4664      	mov	r4, ip
    7bb6:	4323      	orrs	r3, r4
    7bb8:	469c      	mov	ip, r3
    7bba:	465b      	mov	r3, fp
    7bbc:	409d      	lsls	r5, r3
    7bbe:	4663      	mov	r3, ip
    7bc0:	1e6c      	subs	r4, r5, #1
    7bc2:	41a5      	sbcs	r5, r4
    7bc4:	40cf      	lsrs	r7, r1
    7bc6:	431d      	orrs	r5, r3
    7bc8:	9b01      	ldr	r3, [sp, #4]
    7bca:	18bf      	adds	r7, r7, r2
    7bcc:	469c      	mov	ip, r3
    7bce:	4465      	add	r5, ip
    7bd0:	429d      	cmp	r5, r3
    7bd2:	4192      	sbcs	r2, r2
    7bd4:	4252      	negs	r2, r2
    7bd6:	18bf      	adds	r7, r7, r2
    7bd8:	1c04      	adds	r4, r0, #0
    7bda:	e613      	b.n	7804 <__aeabi_dsub+0x1f0>
    7bdc:	1c10      	adds	r0, r2, #0
    7bde:	9901      	ldr	r1, [sp, #4]
    7be0:	4308      	orrs	r0, r1
    7be2:	d100      	bne.n	7be6 <__aeabi_dsub+0x5d2>
    7be4:	e548      	b.n	7678 <__aeabi_dsub+0x64>
    7be6:	1a68      	subs	r0, r5, r1
    7be8:	4684      	mov	ip, r0
    7bea:	4285      	cmp	r5, r0
    7bec:	4180      	sbcs	r0, r0
    7bee:	1abe      	subs	r6, r7, r2
    7bf0:	4240      	negs	r0, r0
    7bf2:	1a30      	subs	r0, r6, r0
    7bf4:	0206      	lsls	r6, r0, #8
    7bf6:	d400      	bmi.n	7bfa <__aeabi_dsub+0x5e6>
    7bf8:	e647      	b.n	788a <__aeabi_dsub+0x276>
    7bfa:	468c      	mov	ip, r1
    7bfc:	1b4d      	subs	r5, r1, r5
    7bfe:	45ac      	cmp	ip, r5
    7c00:	4189      	sbcs	r1, r1
    7c02:	1bd2      	subs	r2, r2, r7
    7c04:	4249      	negs	r1, r1
    7c06:	1a57      	subs	r7, r2, r1
    7c08:	4698      	mov	r8, r3
    7c0a:	e535      	b.n	7678 <__aeabi_dsub+0x64>
    7c0c:	1c10      	adds	r0, r2, #0
    7c0e:	9901      	ldr	r1, [sp, #4]
    7c10:	4308      	orrs	r0, r1
    7c12:	d034      	beq.n	7c7e <__aeabi_dsub+0x66a>
    7c14:	2480      	movs	r4, #128	; 0x80
    7c16:	0778      	lsls	r0, r7, #29
    7c18:	08ed      	lsrs	r5, r5, #3
    7c1a:	08ff      	lsrs	r7, r7, #3
    7c1c:	0324      	lsls	r4, r4, #12
    7c1e:	4328      	orrs	r0, r5
    7c20:	4227      	tst	r7, r4
    7c22:	d008      	beq.n	7c36 <__aeabi_dsub+0x622>
    7c24:	08d6      	lsrs	r6, r2, #3
    7c26:	4226      	tst	r6, r4
    7c28:	d105      	bne.n	7c36 <__aeabi_dsub+0x622>
    7c2a:	08c9      	lsrs	r1, r1, #3
    7c2c:	0752      	lsls	r2, r2, #29
    7c2e:	430a      	orrs	r2, r1
    7c30:	1c10      	adds	r0, r2, #0
    7c32:	1c37      	adds	r7, r6, #0
    7c34:	4698      	mov	r8, r3
    7c36:	00ff      	lsls	r7, r7, #3
    7c38:	0f42      	lsrs	r2, r0, #29
    7c3a:	4317      	orrs	r7, r2
    7c3c:	00c5      	lsls	r5, r0, #3
    7c3e:	4c24      	ldr	r4, [pc, #144]	; (7cd0 <__aeabi_dsub+0x6bc>)
    7c40:	e51a      	b.n	7678 <__aeabi_dsub+0x64>
    7c42:	4c23      	ldr	r4, [pc, #140]	; (7cd0 <__aeabi_dsub+0x6bc>)
    7c44:	42a0      	cmp	r0, r4
    7c46:	d1a2      	bne.n	7b8e <__aeabi_dsub+0x57a>
    7c48:	1c17      	adds	r7, r2, #0
    7c4a:	9d01      	ldr	r5, [sp, #4]
    7c4c:	1c04      	adds	r4, r0, #0
    7c4e:	e513      	b.n	7678 <__aeabi_dsub+0x64>
    7c50:	2b00      	cmp	r3, #0
    7c52:	d035      	beq.n	7cc0 <__aeabi_dsub+0x6ac>
    7c54:	1c13      	adds	r3, r2, #0
    7c56:	9901      	ldr	r1, [sp, #4]
    7c58:	430b      	orrs	r3, r1
    7c5a:	d010      	beq.n	7c7e <__aeabi_dsub+0x66a>
    7c5c:	2480      	movs	r4, #128	; 0x80
    7c5e:	0778      	lsls	r0, r7, #29
    7c60:	08ed      	lsrs	r5, r5, #3
    7c62:	08ff      	lsrs	r7, r7, #3
    7c64:	0324      	lsls	r4, r4, #12
    7c66:	4328      	orrs	r0, r5
    7c68:	4227      	tst	r7, r4
    7c6a:	d0e4      	beq.n	7c36 <__aeabi_dsub+0x622>
    7c6c:	08d3      	lsrs	r3, r2, #3
    7c6e:	4223      	tst	r3, r4
    7c70:	d1e1      	bne.n	7c36 <__aeabi_dsub+0x622>
    7c72:	08c9      	lsrs	r1, r1, #3
    7c74:	0752      	lsls	r2, r2, #29
    7c76:	430a      	orrs	r2, r1
    7c78:	1c10      	adds	r0, r2, #0
    7c7a:	1c1f      	adds	r7, r3, #0
    7c7c:	e7db      	b.n	7c36 <__aeabi_dsub+0x622>
    7c7e:	4c14      	ldr	r4, [pc, #80]	; (7cd0 <__aeabi_dsub+0x6bc>)
    7c80:	e4fa      	b.n	7678 <__aeabi_dsub+0x64>
    7c82:	2200      	movs	r2, #0
    7c84:	e73f      	b.n	7b06 <__aeabi_dsub+0x4f2>
    7c86:	464c      	mov	r4, r9
    7c88:	1c3e      	adds	r6, r7, #0
    7c8a:	3c20      	subs	r4, #32
    7c8c:	40e6      	lsrs	r6, r4
    7c8e:	4649      	mov	r1, r9
    7c90:	1c34      	adds	r4, r6, #0
    7c92:	2920      	cmp	r1, #32
    7c94:	d032      	beq.n	7cfc <__aeabi_dsub+0x6e8>
    7c96:	2640      	movs	r6, #64	; 0x40
    7c98:	1a76      	subs	r6, r6, r1
    7c9a:	40b7      	lsls	r7, r6
    7c9c:	433d      	orrs	r5, r7
    7c9e:	1e6f      	subs	r7, r5, #1
    7ca0:	41bd      	sbcs	r5, r7
    7ca2:	2700      	movs	r7, #0
    7ca4:	4325      	orrs	r5, r4
    7ca6:	e6a8      	b.n	79fa <__aeabi_dsub+0x3e6>
    7ca8:	2780      	movs	r7, #128	; 0x80
    7caa:	2600      	movs	r6, #0
    7cac:	03ff      	lsls	r7, r7, #15
    7cae:	4c08      	ldr	r4, [pc, #32]	; (7cd0 <__aeabi_dsub+0x6bc>)
    7cb0:	2500      	movs	r5, #0
    7cb2:	e57c      	b.n	77ae <__aeabi_dsub+0x19a>
    7cb4:	433d      	orrs	r5, r7
    7cb6:	1e6f      	subs	r7, r5, #1
    7cb8:	41bd      	sbcs	r5, r7
    7cba:	2700      	movs	r7, #0
    7cbc:	b2ed      	uxtb	r5, r5
    7cbe:	e783      	b.n	7bc8 <__aeabi_dsub+0x5b4>
    7cc0:	1c17      	adds	r7, r2, #0
    7cc2:	9d01      	ldr	r5, [sp, #4]
    7cc4:	4c02      	ldr	r4, [pc, #8]	; (7cd0 <__aeabi_dsub+0x6bc>)
    7cc6:	e4d7      	b.n	7678 <__aeabi_dsub+0x64>
    7cc8:	1c17      	adds	r7, r2, #0
    7cca:	9d01      	ldr	r5, [sp, #4]
    7ccc:	e4d4      	b.n	7678 <__aeabi_dsub+0x64>
    7cce:	46c0      	nop			; (mov r8, r8)
    7cd0:	000007ff 	.word	0x000007ff
    7cd4:	ff7fffff 	.word	0xff7fffff
    7cd8:	4654      	mov	r4, sl
    7cda:	1c3b      	adds	r3, r7, #0
    7cdc:	3c20      	subs	r4, #32
    7cde:	40e3      	lsrs	r3, r4
    7ce0:	1c1c      	adds	r4, r3, #0
    7ce2:	4653      	mov	r3, sl
    7ce4:	2b20      	cmp	r3, #32
    7ce6:	d00d      	beq.n	7d04 <__aeabi_dsub+0x6f0>
    7ce8:	2340      	movs	r3, #64	; 0x40
    7cea:	4651      	mov	r1, sl
    7cec:	1a5b      	subs	r3, r3, r1
    7cee:	409f      	lsls	r7, r3
    7cf0:	433d      	orrs	r5, r7
    7cf2:	1e6f      	subs	r7, r5, #1
    7cf4:	41bd      	sbcs	r5, r7
    7cf6:	2700      	movs	r7, #0
    7cf8:	4325      	orrs	r5, r4
    7cfa:	e765      	b.n	7bc8 <__aeabi_dsub+0x5b4>
    7cfc:	2700      	movs	r7, #0
    7cfe:	e7cd      	b.n	7c9c <__aeabi_dsub+0x688>
    7d00:	1c0d      	adds	r5, r1, #0
    7d02:	e5c8      	b.n	7896 <__aeabi_dsub+0x282>
    7d04:	2700      	movs	r7, #0
    7d06:	e7f3      	b.n	7cf0 <__aeabi_dsub+0x6dc>

00007d08 <__aeabi_d2iz>:
    7d08:	030b      	lsls	r3, r1, #12
    7d0a:	b530      	push	{r4, r5, lr}
    7d0c:	4c13      	ldr	r4, [pc, #76]	; (7d5c <__aeabi_d2iz+0x54>)
    7d0e:	0b1a      	lsrs	r2, r3, #12
    7d10:	004b      	lsls	r3, r1, #1
    7d12:	1c05      	adds	r5, r0, #0
    7d14:	0d5b      	lsrs	r3, r3, #21
    7d16:	0fc9      	lsrs	r1, r1, #31
    7d18:	2000      	movs	r0, #0
    7d1a:	42a3      	cmp	r3, r4
    7d1c:	dd10      	ble.n	7d40 <__aeabi_d2iz+0x38>
    7d1e:	4810      	ldr	r0, [pc, #64]	; (7d60 <__aeabi_d2iz+0x58>)
    7d20:	4283      	cmp	r3, r0
    7d22:	dc0e      	bgt.n	7d42 <__aeabi_d2iz+0x3a>
    7d24:	2080      	movs	r0, #128	; 0x80
    7d26:	4c0f      	ldr	r4, [pc, #60]	; (7d64 <__aeabi_d2iz+0x5c>)
    7d28:	0340      	lsls	r0, r0, #13
    7d2a:	4302      	orrs	r2, r0
    7d2c:	1ae4      	subs	r4, r4, r3
    7d2e:	2c1f      	cmp	r4, #31
    7d30:	dd0a      	ble.n	7d48 <__aeabi_d2iz+0x40>
    7d32:	480d      	ldr	r0, [pc, #52]	; (7d68 <__aeabi_d2iz+0x60>)
    7d34:	1ac3      	subs	r3, r0, r3
    7d36:	40da      	lsrs	r2, r3
    7d38:	1c13      	adds	r3, r2, #0
    7d3a:	4248      	negs	r0, r1
    7d3c:	4043      	eors	r3, r0
    7d3e:	1858      	adds	r0, r3, r1
    7d40:	bd30      	pop	{r4, r5, pc}
    7d42:	4b0a      	ldr	r3, [pc, #40]	; (7d6c <__aeabi_d2iz+0x64>)
    7d44:	18c8      	adds	r0, r1, r3
    7d46:	e7fb      	b.n	7d40 <__aeabi_d2iz+0x38>
    7d48:	1c28      	adds	r0, r5, #0
    7d4a:	40e0      	lsrs	r0, r4
    7d4c:	4c08      	ldr	r4, [pc, #32]	; (7d70 <__aeabi_d2iz+0x68>)
    7d4e:	46a4      	mov	ip, r4
    7d50:	4463      	add	r3, ip
    7d52:	409a      	lsls	r2, r3
    7d54:	1c13      	adds	r3, r2, #0
    7d56:	4303      	orrs	r3, r0
    7d58:	e7ef      	b.n	7d3a <__aeabi_d2iz+0x32>
    7d5a:	46c0      	nop			; (mov r8, r8)
    7d5c:	000003fe 	.word	0x000003fe
    7d60:	0000041d 	.word	0x0000041d
    7d64:	00000433 	.word	0x00000433
    7d68:	00000413 	.word	0x00000413
    7d6c:	7fffffff 	.word	0x7fffffff
    7d70:	fffffbed 	.word	0xfffffbed

00007d74 <__aeabi_i2d>:
    7d74:	b538      	push	{r3, r4, r5, lr}
    7d76:	1e04      	subs	r4, r0, #0
    7d78:	d016      	beq.n	7da8 <__aeabi_i2d+0x34>
    7d7a:	0fc5      	lsrs	r5, r0, #31
    7d7c:	d000      	beq.n	7d80 <__aeabi_i2d+0xc>
    7d7e:	4244      	negs	r4, r0
    7d80:	1c20      	adds	r0, r4, #0
    7d82:	f000 f8f5 	bl	7f70 <__clzsi2>
    7d86:	4b17      	ldr	r3, [pc, #92]	; (7de4 <__aeabi_i2d+0x70>)
    7d88:	1a1b      	subs	r3, r3, r0
    7d8a:	280a      	cmp	r0, #10
    7d8c:	dc21      	bgt.n	7dd2 <__aeabi_i2d+0x5e>
    7d8e:	1c02      	adds	r2, r0, #0
    7d90:	1c21      	adds	r1, r4, #0
    7d92:	3215      	adds	r2, #21
    7d94:	4091      	lsls	r1, r2
    7d96:	1c0a      	adds	r2, r1, #0
    7d98:	210b      	movs	r1, #11
    7d9a:	1a08      	subs	r0, r1, r0
    7d9c:	40c4      	lsrs	r4, r0
    7d9e:	055b      	lsls	r3, r3, #21
    7da0:	0324      	lsls	r4, r4, #12
    7da2:	0b24      	lsrs	r4, r4, #12
    7da4:	0d5b      	lsrs	r3, r3, #21
    7da6:	e003      	b.n	7db0 <__aeabi_i2d+0x3c>
    7da8:	2500      	movs	r5, #0
    7daa:	2300      	movs	r3, #0
    7dac:	2400      	movs	r4, #0
    7dae:	2200      	movs	r2, #0
    7db0:	2100      	movs	r1, #0
    7db2:	1c10      	adds	r0, r2, #0
    7db4:	0324      	lsls	r4, r4, #12
    7db6:	0d0a      	lsrs	r2, r1, #20
    7db8:	0512      	lsls	r2, r2, #20
    7dba:	0b24      	lsrs	r4, r4, #12
    7dbc:	4314      	orrs	r4, r2
    7dbe:	4a0a      	ldr	r2, [pc, #40]	; (7de8 <__aeabi_i2d+0x74>)
    7dc0:	051b      	lsls	r3, r3, #20
    7dc2:	4014      	ands	r4, r2
    7dc4:	431c      	orrs	r4, r3
    7dc6:	0064      	lsls	r4, r4, #1
    7dc8:	07ed      	lsls	r5, r5, #31
    7dca:	0864      	lsrs	r4, r4, #1
    7dcc:	432c      	orrs	r4, r5
    7dce:	1c21      	adds	r1, r4, #0
    7dd0:	bd38      	pop	{r3, r4, r5, pc}
    7dd2:	380b      	subs	r0, #11
    7dd4:	4084      	lsls	r4, r0
    7dd6:	055b      	lsls	r3, r3, #21
    7dd8:	0324      	lsls	r4, r4, #12
    7dda:	0b24      	lsrs	r4, r4, #12
    7ddc:	0d5b      	lsrs	r3, r3, #21
    7dde:	2200      	movs	r2, #0
    7de0:	e7e6      	b.n	7db0 <__aeabi_i2d+0x3c>
    7de2:	46c0      	nop			; (mov r8, r8)
    7de4:	0000041e 	.word	0x0000041e
    7de8:	800fffff 	.word	0x800fffff

00007dec <__aeabi_ui2d>:
    7dec:	b510      	push	{r4, lr}
    7dee:	1e04      	subs	r4, r0, #0
    7df0:	d010      	beq.n	7e14 <__aeabi_ui2d+0x28>
    7df2:	f000 f8bd 	bl	7f70 <__clzsi2>
    7df6:	4a14      	ldr	r2, [pc, #80]	; (7e48 <__aeabi_ui2d+0x5c>)
    7df8:	1a12      	subs	r2, r2, r0
    7dfa:	280a      	cmp	r0, #10
    7dfc:	dc1a      	bgt.n	7e34 <__aeabi_ui2d+0x48>
    7dfe:	230b      	movs	r3, #11
    7e00:	1c21      	adds	r1, r4, #0
    7e02:	1a1b      	subs	r3, r3, r0
    7e04:	40d9      	lsrs	r1, r3
    7e06:	3015      	adds	r0, #21
    7e08:	030b      	lsls	r3, r1, #12
    7e0a:	0552      	lsls	r2, r2, #21
    7e0c:	4084      	lsls	r4, r0
    7e0e:	0b1b      	lsrs	r3, r3, #12
    7e10:	0d52      	lsrs	r2, r2, #21
    7e12:	e001      	b.n	7e18 <__aeabi_ui2d+0x2c>
    7e14:	2200      	movs	r2, #0
    7e16:	2300      	movs	r3, #0
    7e18:	2100      	movs	r1, #0
    7e1a:	031b      	lsls	r3, r3, #12
    7e1c:	1c20      	adds	r0, r4, #0
    7e1e:	0b1c      	lsrs	r4, r3, #12
    7e20:	0d0b      	lsrs	r3, r1, #20
    7e22:	051b      	lsls	r3, r3, #20
    7e24:	4323      	orrs	r3, r4
    7e26:	4c09      	ldr	r4, [pc, #36]	; (7e4c <__aeabi_ui2d+0x60>)
    7e28:	0512      	lsls	r2, r2, #20
    7e2a:	4023      	ands	r3, r4
    7e2c:	4313      	orrs	r3, r2
    7e2e:	005b      	lsls	r3, r3, #1
    7e30:	0859      	lsrs	r1, r3, #1
    7e32:	bd10      	pop	{r4, pc}
    7e34:	1c03      	adds	r3, r0, #0
    7e36:	3b0b      	subs	r3, #11
    7e38:	409c      	lsls	r4, r3
    7e3a:	0552      	lsls	r2, r2, #21
    7e3c:	0323      	lsls	r3, r4, #12
    7e3e:	0b1b      	lsrs	r3, r3, #12
    7e40:	0d52      	lsrs	r2, r2, #21
    7e42:	2400      	movs	r4, #0
    7e44:	e7e8      	b.n	7e18 <__aeabi_ui2d+0x2c>
    7e46:	46c0      	nop			; (mov r8, r8)
    7e48:	0000041e 	.word	0x0000041e
    7e4c:	800fffff 	.word	0x800fffff

00007e50 <__aeabi_d2f>:
    7e50:	b570      	push	{r4, r5, r6, lr}
    7e52:	030b      	lsls	r3, r1, #12
    7e54:	004d      	lsls	r5, r1, #1
    7e56:	0f44      	lsrs	r4, r0, #29
    7e58:	0d6d      	lsrs	r5, r5, #21
    7e5a:	0a5b      	lsrs	r3, r3, #9
    7e5c:	4323      	orrs	r3, r4
    7e5e:	1c6c      	adds	r4, r5, #1
    7e60:	0564      	lsls	r4, r4, #21
    7e62:	0fc9      	lsrs	r1, r1, #31
    7e64:	00c2      	lsls	r2, r0, #3
    7e66:	0d64      	lsrs	r4, r4, #21
    7e68:	2c01      	cmp	r4, #1
    7e6a:	dd2a      	ble.n	7ec2 <__aeabi_d2f+0x72>
    7e6c:	4c3b      	ldr	r4, [pc, #236]	; (7f5c <__aeabi_d2f+0x10c>)
    7e6e:	192c      	adds	r4, r5, r4
    7e70:	2cfe      	cmp	r4, #254	; 0xfe
    7e72:	dc1a      	bgt.n	7eaa <__aeabi_d2f+0x5a>
    7e74:	2c00      	cmp	r4, #0
    7e76:	dd35      	ble.n	7ee4 <__aeabi_d2f+0x94>
    7e78:	0180      	lsls	r0, r0, #6
    7e7a:	1e45      	subs	r5, r0, #1
    7e7c:	41a8      	sbcs	r0, r5
    7e7e:	00db      	lsls	r3, r3, #3
    7e80:	4303      	orrs	r3, r0
    7e82:	0f52      	lsrs	r2, r2, #29
    7e84:	4313      	orrs	r3, r2
    7e86:	075a      	lsls	r2, r3, #29
    7e88:	d004      	beq.n	7e94 <__aeabi_d2f+0x44>
    7e8a:	220f      	movs	r2, #15
    7e8c:	401a      	ands	r2, r3
    7e8e:	2a04      	cmp	r2, #4
    7e90:	d000      	beq.n	7e94 <__aeabi_d2f+0x44>
    7e92:	3304      	adds	r3, #4
    7e94:	2280      	movs	r2, #128	; 0x80
    7e96:	04d2      	lsls	r2, r2, #19
    7e98:	401a      	ands	r2, r3
    7e9a:	d027      	beq.n	7eec <__aeabi_d2f+0x9c>
    7e9c:	3401      	adds	r4, #1
    7e9e:	2cff      	cmp	r4, #255	; 0xff
    7ea0:	d003      	beq.n	7eaa <__aeabi_d2f+0x5a>
    7ea2:	019b      	lsls	r3, r3, #6
    7ea4:	0a5b      	lsrs	r3, r3, #9
    7ea6:	b2e4      	uxtb	r4, r4
    7ea8:	e001      	b.n	7eae <__aeabi_d2f+0x5e>
    7eaa:	24ff      	movs	r4, #255	; 0xff
    7eac:	2300      	movs	r3, #0
    7eae:	025b      	lsls	r3, r3, #9
    7eb0:	05e4      	lsls	r4, r4, #23
    7eb2:	0a5b      	lsrs	r3, r3, #9
    7eb4:	4323      	orrs	r3, r4
    7eb6:	005b      	lsls	r3, r3, #1
    7eb8:	07c9      	lsls	r1, r1, #31
    7eba:	085b      	lsrs	r3, r3, #1
    7ebc:	430b      	orrs	r3, r1
    7ebe:	1c18      	adds	r0, r3, #0
    7ec0:	bd70      	pop	{r4, r5, r6, pc}
    7ec2:	2d00      	cmp	r5, #0
    7ec4:	d106      	bne.n	7ed4 <__aeabi_d2f+0x84>
    7ec6:	4313      	orrs	r3, r2
    7ec8:	d10e      	bne.n	7ee8 <__aeabi_d2f+0x98>
    7eca:	2400      	movs	r4, #0
    7ecc:	025b      	lsls	r3, r3, #9
    7ece:	0a5b      	lsrs	r3, r3, #9
    7ed0:	b2e4      	uxtb	r4, r4
    7ed2:	e7ec      	b.n	7eae <__aeabi_d2f+0x5e>
    7ed4:	431a      	orrs	r2, r3
    7ed6:	d0e8      	beq.n	7eaa <__aeabi_d2f+0x5a>
    7ed8:	2080      	movs	r0, #128	; 0x80
    7eda:	00db      	lsls	r3, r3, #3
    7edc:	0480      	lsls	r0, r0, #18
    7ede:	4303      	orrs	r3, r0
    7ee0:	24ff      	movs	r4, #255	; 0xff
    7ee2:	e7d0      	b.n	7e86 <__aeabi_d2f+0x36>
    7ee4:	3417      	adds	r4, #23
    7ee6:	da0c      	bge.n	7f02 <__aeabi_d2f+0xb2>
    7ee8:	2305      	movs	r3, #5
    7eea:	2400      	movs	r4, #0
    7eec:	08db      	lsrs	r3, r3, #3
    7eee:	2cff      	cmp	r4, #255	; 0xff
    7ef0:	d1ec      	bne.n	7ecc <__aeabi_d2f+0x7c>
    7ef2:	2b00      	cmp	r3, #0
    7ef4:	d02d      	beq.n	7f52 <__aeabi_d2f+0x102>
    7ef6:	2280      	movs	r2, #128	; 0x80
    7ef8:	03d2      	lsls	r2, r2, #15
    7efa:	4313      	orrs	r3, r2
    7efc:	025b      	lsls	r3, r3, #9
    7efe:	0a5b      	lsrs	r3, r3, #9
    7f00:	e7d5      	b.n	7eae <__aeabi_d2f+0x5e>
    7f02:	2480      	movs	r4, #128	; 0x80
    7f04:	4816      	ldr	r0, [pc, #88]	; (7f60 <__aeabi_d2f+0x110>)
    7f06:	0424      	lsls	r4, r4, #16
    7f08:	4323      	orrs	r3, r4
    7f0a:	1b40      	subs	r0, r0, r5
    7f0c:	281f      	cmp	r0, #31
    7f0e:	dc0d      	bgt.n	7f2c <__aeabi_d2f+0xdc>
    7f10:	4c14      	ldr	r4, [pc, #80]	; (7f64 <__aeabi_d2f+0x114>)
    7f12:	46a4      	mov	ip, r4
    7f14:	4465      	add	r5, ip
    7f16:	40ab      	lsls	r3, r5
    7f18:	1c1c      	adds	r4, r3, #0
    7f1a:	1c13      	adds	r3, r2, #0
    7f1c:	40ab      	lsls	r3, r5
    7f1e:	1e5d      	subs	r5, r3, #1
    7f20:	41ab      	sbcs	r3, r5
    7f22:	40c2      	lsrs	r2, r0
    7f24:	4323      	orrs	r3, r4
    7f26:	4313      	orrs	r3, r2
    7f28:	2400      	movs	r4, #0
    7f2a:	e7ac      	b.n	7e86 <__aeabi_d2f+0x36>
    7f2c:	1c1e      	adds	r6, r3, #0
    7f2e:	4c0e      	ldr	r4, [pc, #56]	; (7f68 <__aeabi_d2f+0x118>)
    7f30:	1b64      	subs	r4, r4, r5
    7f32:	40e6      	lsrs	r6, r4
    7f34:	1c34      	adds	r4, r6, #0
    7f36:	2820      	cmp	r0, #32
    7f38:	d00d      	beq.n	7f56 <__aeabi_d2f+0x106>
    7f3a:	480c      	ldr	r0, [pc, #48]	; (7f6c <__aeabi_d2f+0x11c>)
    7f3c:	4684      	mov	ip, r0
    7f3e:	4465      	add	r5, ip
    7f40:	40ab      	lsls	r3, r5
    7f42:	1c1d      	adds	r5, r3, #0
    7f44:	432a      	orrs	r2, r5
    7f46:	1e53      	subs	r3, r2, #1
    7f48:	419a      	sbcs	r2, r3
    7f4a:	1c13      	adds	r3, r2, #0
    7f4c:	4323      	orrs	r3, r4
    7f4e:	2400      	movs	r4, #0
    7f50:	e799      	b.n	7e86 <__aeabi_d2f+0x36>
    7f52:	2300      	movs	r3, #0
    7f54:	e7ab      	b.n	7eae <__aeabi_d2f+0x5e>
    7f56:	2500      	movs	r5, #0
    7f58:	e7f4      	b.n	7f44 <__aeabi_d2f+0xf4>
    7f5a:	46c0      	nop			; (mov r8, r8)
    7f5c:	fffffc80 	.word	0xfffffc80
    7f60:	0000039e 	.word	0x0000039e
    7f64:	fffffc82 	.word	0xfffffc82
    7f68:	0000037e 	.word	0x0000037e
    7f6c:	fffffca2 	.word	0xfffffca2

00007f70 <__clzsi2>:
    7f70:	211c      	movs	r1, #28
    7f72:	2301      	movs	r3, #1
    7f74:	041b      	lsls	r3, r3, #16
    7f76:	4298      	cmp	r0, r3
    7f78:	d301      	bcc.n	7f7e <__clzsi2+0xe>
    7f7a:	0c00      	lsrs	r0, r0, #16
    7f7c:	3910      	subs	r1, #16
    7f7e:	0a1b      	lsrs	r3, r3, #8
    7f80:	4298      	cmp	r0, r3
    7f82:	d301      	bcc.n	7f88 <__clzsi2+0x18>
    7f84:	0a00      	lsrs	r0, r0, #8
    7f86:	3908      	subs	r1, #8
    7f88:	091b      	lsrs	r3, r3, #4
    7f8a:	4298      	cmp	r0, r3
    7f8c:	d301      	bcc.n	7f92 <__clzsi2+0x22>
    7f8e:	0900      	lsrs	r0, r0, #4
    7f90:	3904      	subs	r1, #4
    7f92:	a202      	add	r2, pc, #8	; (adr r2, 7f9c <__clzsi2+0x2c>)
    7f94:	5c10      	ldrb	r0, [r2, r0]
    7f96:	1840      	adds	r0, r0, r1
    7f98:	4770      	bx	lr
    7f9a:	46c0      	nop			; (mov r8, r8)
    7f9c:	02020304 	.word	0x02020304
    7fa0:	01010101 	.word	0x01010101
	...

00007fac <__cxa_atexit>:
    7fac:	4b05      	ldr	r3, [pc, #20]	; (7fc4 <__cxa_atexit+0x18>)
    7fae:	b510      	push	{r4, lr}
    7fb0:	1c04      	adds	r4, r0, #0
    7fb2:	1e18      	subs	r0, r3, #0
    7fb4:	d005      	beq.n	7fc2 <__cxa_atexit+0x16>
    7fb6:	1c13      	adds	r3, r2, #0
    7fb8:	2002      	movs	r0, #2
    7fba:	1c0a      	adds	r2, r1, #0
    7fbc:	1c21      	adds	r1, r4, #0
    7fbe:	e000      	b.n	7fc2 <__cxa_atexit+0x16>
    7fc0:	bf00      	nop
    7fc2:	bd10      	pop	{r4, pc}
    7fc4:	00000000 	.word	0x00000000

00007fc8 <__errno>:
    7fc8:	4b01      	ldr	r3, [pc, #4]	; (7fd0 <__errno+0x8>)
    7fca:	6818      	ldr	r0, [r3, #0]
    7fcc:	4770      	bx	lr
    7fce:	46c0      	nop			; (mov r8, r8)
    7fd0:	20000134 	.word	0x20000134

00007fd4 <exit>:
    7fd4:	4b08      	ldr	r3, [pc, #32]	; (7ff8 <exit+0x24>)
    7fd6:	b510      	push	{r4, lr}
    7fd8:	1c04      	adds	r4, r0, #0
    7fda:	2b00      	cmp	r3, #0
    7fdc:	d002      	beq.n	7fe4 <exit+0x10>
    7fde:	2100      	movs	r1, #0
    7fe0:	e000      	b.n	7fe4 <exit+0x10>
    7fe2:	bf00      	nop
    7fe4:	4b05      	ldr	r3, [pc, #20]	; (7ffc <exit+0x28>)
    7fe6:	6818      	ldr	r0, [r3, #0]
    7fe8:	6a83      	ldr	r3, [r0, #40]	; 0x28
    7fea:	2b00      	cmp	r3, #0
    7fec:	d000      	beq.n	7ff0 <exit+0x1c>
    7fee:	4798      	blx	r3
    7ff0:	1c20      	adds	r0, r4, #0
    7ff2:	f7fb fbc7 	bl	3784 <_exit>
    7ff6:	46c0      	nop			; (mov r8, r8)
    7ff8:	00000000 	.word	0x00000000
    7ffc:	0000e384 	.word	0x0000e384

00008000 <_fclose_r>:
    8000:	b570      	push	{r4, r5, r6, lr}
    8002:	1c05      	adds	r5, r0, #0
    8004:	1e0c      	subs	r4, r1, #0
    8006:	d101      	bne.n	800c <_fclose_r+0xc>
    8008:	2000      	movs	r0, #0
    800a:	e049      	b.n	80a0 <_fclose_r+0xa0>
    800c:	2800      	cmp	r0, #0
    800e:	d004      	beq.n	801a <_fclose_r+0x1a>
    8010:	6983      	ldr	r3, [r0, #24]
    8012:	2b00      	cmp	r3, #0
    8014:	d101      	bne.n	801a <_fclose_r+0x1a>
    8016:	f000 f961 	bl	82dc <__sinit>
    801a:	4b22      	ldr	r3, [pc, #136]	; (80a4 <_fclose_r+0xa4>)
    801c:	429c      	cmp	r4, r3
    801e:	d101      	bne.n	8024 <_fclose_r+0x24>
    8020:	686c      	ldr	r4, [r5, #4]
    8022:	e008      	b.n	8036 <_fclose_r+0x36>
    8024:	4b20      	ldr	r3, [pc, #128]	; (80a8 <_fclose_r+0xa8>)
    8026:	429c      	cmp	r4, r3
    8028:	d101      	bne.n	802e <_fclose_r+0x2e>
    802a:	68ac      	ldr	r4, [r5, #8]
    802c:	e003      	b.n	8036 <_fclose_r+0x36>
    802e:	4b1f      	ldr	r3, [pc, #124]	; (80ac <_fclose_r+0xac>)
    8030:	429c      	cmp	r4, r3
    8032:	d100      	bne.n	8036 <_fclose_r+0x36>
    8034:	68ec      	ldr	r4, [r5, #12]
    8036:	220c      	movs	r2, #12
    8038:	5ea3      	ldrsh	r3, [r4, r2]
    803a:	2b00      	cmp	r3, #0
    803c:	d0e4      	beq.n	8008 <_fclose_r+0x8>
    803e:	1c28      	adds	r0, r5, #0
    8040:	1c21      	adds	r1, r4, #0
    8042:	f000 f83f 	bl	80c4 <__sflush_r>
    8046:	6b23      	ldr	r3, [r4, #48]	; 0x30
    8048:	1c06      	adds	r6, r0, #0
    804a:	2b00      	cmp	r3, #0
    804c:	d006      	beq.n	805c <_fclose_r+0x5c>
    804e:	1c28      	adds	r0, r5, #0
    8050:	6a21      	ldr	r1, [r4, #32]
    8052:	4798      	blx	r3
    8054:	2800      	cmp	r0, #0
    8056:	da01      	bge.n	805c <_fclose_r+0x5c>
    8058:	2601      	movs	r6, #1
    805a:	4276      	negs	r6, r6
    805c:	89a3      	ldrh	r3, [r4, #12]
    805e:	061b      	lsls	r3, r3, #24
    8060:	d503      	bpl.n	806a <_fclose_r+0x6a>
    8062:	1c28      	adds	r0, r5, #0
    8064:	6921      	ldr	r1, [r4, #16]
    8066:	f000 fb61 	bl	872c <_free_r>
    806a:	6b61      	ldr	r1, [r4, #52]	; 0x34
    806c:	2900      	cmp	r1, #0
    806e:	d008      	beq.n	8082 <_fclose_r+0x82>
    8070:	1c23      	adds	r3, r4, #0
    8072:	3344      	adds	r3, #68	; 0x44
    8074:	4299      	cmp	r1, r3
    8076:	d002      	beq.n	807e <_fclose_r+0x7e>
    8078:	1c28      	adds	r0, r5, #0
    807a:	f000 fb57 	bl	872c <_free_r>
    807e:	2300      	movs	r3, #0
    8080:	6363      	str	r3, [r4, #52]	; 0x34
    8082:	6ca1      	ldr	r1, [r4, #72]	; 0x48
    8084:	2900      	cmp	r1, #0
    8086:	d004      	beq.n	8092 <_fclose_r+0x92>
    8088:	1c28      	adds	r0, r5, #0
    808a:	f000 fb4f 	bl	872c <_free_r>
    808e:	2300      	movs	r3, #0
    8090:	64a3      	str	r3, [r4, #72]	; 0x48
    8092:	f000 f993 	bl	83bc <__sfp_lock_acquire>
    8096:	2300      	movs	r3, #0
    8098:	81a3      	strh	r3, [r4, #12]
    809a:	f000 f990 	bl	83be <__sfp_lock_release>
    809e:	1c30      	adds	r0, r6, #0
    80a0:	bd70      	pop	{r4, r5, r6, pc}
    80a2:	46c0      	nop			; (mov r8, r8)
    80a4:	0000e320 	.word	0x0000e320
    80a8:	0000e340 	.word	0x0000e340
    80ac:	0000e360 	.word	0x0000e360

000080b0 <fclose>:
    80b0:	b508      	push	{r3, lr}
    80b2:	4b03      	ldr	r3, [pc, #12]	; (80c0 <fclose+0x10>)
    80b4:	1c01      	adds	r1, r0, #0
    80b6:	6818      	ldr	r0, [r3, #0]
    80b8:	f7ff ffa2 	bl	8000 <_fclose_r>
    80bc:	bd08      	pop	{r3, pc}
    80be:	46c0      	nop			; (mov r8, r8)
    80c0:	20000134 	.word	0x20000134

000080c4 <__sflush_r>:
    80c4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    80c6:	898a      	ldrh	r2, [r1, #12]
    80c8:	1c05      	adds	r5, r0, #0
    80ca:	1c0c      	adds	r4, r1, #0
    80cc:	0713      	lsls	r3, r2, #28
    80ce:	d45e      	bmi.n	818e <__sflush_r+0xca>
    80d0:	684b      	ldr	r3, [r1, #4]
    80d2:	2b00      	cmp	r3, #0
    80d4:	dc02      	bgt.n	80dc <__sflush_r+0x18>
    80d6:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    80d8:	2b00      	cmp	r3, #0
    80da:	dd1a      	ble.n	8112 <__sflush_r+0x4e>
    80dc:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    80de:	2f00      	cmp	r7, #0
    80e0:	d017      	beq.n	8112 <__sflush_r+0x4e>
    80e2:	2300      	movs	r3, #0
    80e4:	682e      	ldr	r6, [r5, #0]
    80e6:	602b      	str	r3, [r5, #0]
    80e8:	2380      	movs	r3, #128	; 0x80
    80ea:	015b      	lsls	r3, r3, #5
    80ec:	401a      	ands	r2, r3
    80ee:	d001      	beq.n	80f4 <__sflush_r+0x30>
    80f0:	6d62      	ldr	r2, [r4, #84]	; 0x54
    80f2:	e015      	b.n	8120 <__sflush_r+0x5c>
    80f4:	1c28      	adds	r0, r5, #0
    80f6:	6a21      	ldr	r1, [r4, #32]
    80f8:	2301      	movs	r3, #1
    80fa:	47b8      	blx	r7
    80fc:	1c02      	adds	r2, r0, #0
    80fe:	1c43      	adds	r3, r0, #1
    8100:	d10e      	bne.n	8120 <__sflush_r+0x5c>
    8102:	682b      	ldr	r3, [r5, #0]
    8104:	2b00      	cmp	r3, #0
    8106:	d00b      	beq.n	8120 <__sflush_r+0x5c>
    8108:	2b1d      	cmp	r3, #29
    810a:	d001      	beq.n	8110 <__sflush_r+0x4c>
    810c:	2b16      	cmp	r3, #22
    810e:	d102      	bne.n	8116 <__sflush_r+0x52>
    8110:	602e      	str	r6, [r5, #0]
    8112:	2000      	movs	r0, #0
    8114:	e05e      	b.n	81d4 <__sflush_r+0x110>
    8116:	2140      	movs	r1, #64	; 0x40
    8118:	89a3      	ldrh	r3, [r4, #12]
    811a:	430b      	orrs	r3, r1
    811c:	81a3      	strh	r3, [r4, #12]
    811e:	e059      	b.n	81d4 <__sflush_r+0x110>
    8120:	89a3      	ldrh	r3, [r4, #12]
    8122:	075b      	lsls	r3, r3, #29
    8124:	d506      	bpl.n	8134 <__sflush_r+0x70>
    8126:	6863      	ldr	r3, [r4, #4]
    8128:	1ad2      	subs	r2, r2, r3
    812a:	6b63      	ldr	r3, [r4, #52]	; 0x34
    812c:	2b00      	cmp	r3, #0
    812e:	d001      	beq.n	8134 <__sflush_r+0x70>
    8130:	6c23      	ldr	r3, [r4, #64]	; 0x40
    8132:	1ad2      	subs	r2, r2, r3
    8134:	2300      	movs	r3, #0
    8136:	1c28      	adds	r0, r5, #0
    8138:	6a21      	ldr	r1, [r4, #32]
    813a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
    813c:	47b8      	blx	r7
    813e:	89a3      	ldrh	r3, [r4, #12]
    8140:	1c42      	adds	r2, r0, #1
    8142:	d106      	bne.n	8152 <__sflush_r+0x8e>
    8144:	682a      	ldr	r2, [r5, #0]
    8146:	2a00      	cmp	r2, #0
    8148:	d003      	beq.n	8152 <__sflush_r+0x8e>
    814a:	2a1d      	cmp	r2, #29
    814c:	d001      	beq.n	8152 <__sflush_r+0x8e>
    814e:	2a16      	cmp	r2, #22
    8150:	d119      	bne.n	8186 <__sflush_r+0xc2>
    8152:	2200      	movs	r2, #0
    8154:	6062      	str	r2, [r4, #4]
    8156:	6922      	ldr	r2, [r4, #16]
    8158:	6022      	str	r2, [r4, #0]
    815a:	04db      	lsls	r3, r3, #19
    815c:	d505      	bpl.n	816a <__sflush_r+0xa6>
    815e:	1c43      	adds	r3, r0, #1
    8160:	d102      	bne.n	8168 <__sflush_r+0xa4>
    8162:	682b      	ldr	r3, [r5, #0]
    8164:	2b00      	cmp	r3, #0
    8166:	d100      	bne.n	816a <__sflush_r+0xa6>
    8168:	6560      	str	r0, [r4, #84]	; 0x54
    816a:	6b61      	ldr	r1, [r4, #52]	; 0x34
    816c:	602e      	str	r6, [r5, #0]
    816e:	2900      	cmp	r1, #0
    8170:	d0cf      	beq.n	8112 <__sflush_r+0x4e>
    8172:	1c23      	adds	r3, r4, #0
    8174:	3344      	adds	r3, #68	; 0x44
    8176:	4299      	cmp	r1, r3
    8178:	d002      	beq.n	8180 <__sflush_r+0xbc>
    817a:	1c28      	adds	r0, r5, #0
    817c:	f000 fad6 	bl	872c <_free_r>
    8180:	2000      	movs	r0, #0
    8182:	6360      	str	r0, [r4, #52]	; 0x34
    8184:	e026      	b.n	81d4 <__sflush_r+0x110>
    8186:	2240      	movs	r2, #64	; 0x40
    8188:	4313      	orrs	r3, r2
    818a:	81a3      	strh	r3, [r4, #12]
    818c:	e022      	b.n	81d4 <__sflush_r+0x110>
    818e:	690f      	ldr	r7, [r1, #16]
    8190:	2f00      	cmp	r7, #0
    8192:	d0be      	beq.n	8112 <__sflush_r+0x4e>
    8194:	680b      	ldr	r3, [r1, #0]
    8196:	600f      	str	r7, [r1, #0]
    8198:	1bdb      	subs	r3, r3, r7
    819a:	9301      	str	r3, [sp, #4]
    819c:	2300      	movs	r3, #0
    819e:	0792      	lsls	r2, r2, #30
    81a0:	d100      	bne.n	81a4 <__sflush_r+0xe0>
    81a2:	694b      	ldr	r3, [r1, #20]
    81a4:	60a3      	str	r3, [r4, #8]
    81a6:	9b01      	ldr	r3, [sp, #4]
    81a8:	2b00      	cmp	r3, #0
    81aa:	ddb2      	ble.n	8112 <__sflush_r+0x4e>
    81ac:	1c28      	adds	r0, r5, #0
    81ae:	6a21      	ldr	r1, [r4, #32]
    81b0:	1c3a      	adds	r2, r7, #0
    81b2:	9b01      	ldr	r3, [sp, #4]
    81b4:	6aa6      	ldr	r6, [r4, #40]	; 0x28
    81b6:	47b0      	blx	r6
    81b8:	2800      	cmp	r0, #0
    81ba:	dc06      	bgt.n	81ca <__sflush_r+0x106>
    81bc:	2240      	movs	r2, #64	; 0x40
    81be:	2001      	movs	r0, #1
    81c0:	89a3      	ldrh	r3, [r4, #12]
    81c2:	4240      	negs	r0, r0
    81c4:	4313      	orrs	r3, r2
    81c6:	81a3      	strh	r3, [r4, #12]
    81c8:	e004      	b.n	81d4 <__sflush_r+0x110>
    81ca:	9b01      	ldr	r3, [sp, #4]
    81cc:	183f      	adds	r7, r7, r0
    81ce:	1a1b      	subs	r3, r3, r0
    81d0:	9301      	str	r3, [sp, #4]
    81d2:	e7e8      	b.n	81a6 <__sflush_r+0xe2>
    81d4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

000081d8 <_fflush_r>:
    81d8:	b538      	push	{r3, r4, r5, lr}
    81da:	690b      	ldr	r3, [r1, #16]
    81dc:	1c05      	adds	r5, r0, #0
    81de:	1c0c      	adds	r4, r1, #0
    81e0:	2b00      	cmp	r3, #0
    81e2:	d101      	bne.n	81e8 <_fflush_r+0x10>
    81e4:	2000      	movs	r0, #0
    81e6:	e01c      	b.n	8222 <_fflush_r+0x4a>
    81e8:	2800      	cmp	r0, #0
    81ea:	d004      	beq.n	81f6 <_fflush_r+0x1e>
    81ec:	6983      	ldr	r3, [r0, #24]
    81ee:	2b00      	cmp	r3, #0
    81f0:	d101      	bne.n	81f6 <_fflush_r+0x1e>
    81f2:	f000 f873 	bl	82dc <__sinit>
    81f6:	4b0b      	ldr	r3, [pc, #44]	; (8224 <_fflush_r+0x4c>)
    81f8:	429c      	cmp	r4, r3
    81fa:	d101      	bne.n	8200 <_fflush_r+0x28>
    81fc:	686c      	ldr	r4, [r5, #4]
    81fe:	e008      	b.n	8212 <_fflush_r+0x3a>
    8200:	4b09      	ldr	r3, [pc, #36]	; (8228 <_fflush_r+0x50>)
    8202:	429c      	cmp	r4, r3
    8204:	d101      	bne.n	820a <_fflush_r+0x32>
    8206:	68ac      	ldr	r4, [r5, #8]
    8208:	e003      	b.n	8212 <_fflush_r+0x3a>
    820a:	4b08      	ldr	r3, [pc, #32]	; (822c <_fflush_r+0x54>)
    820c:	429c      	cmp	r4, r3
    820e:	d100      	bne.n	8212 <_fflush_r+0x3a>
    8210:	68ec      	ldr	r4, [r5, #12]
    8212:	220c      	movs	r2, #12
    8214:	5ea3      	ldrsh	r3, [r4, r2]
    8216:	2b00      	cmp	r3, #0
    8218:	d0e4      	beq.n	81e4 <_fflush_r+0xc>
    821a:	1c28      	adds	r0, r5, #0
    821c:	1c21      	adds	r1, r4, #0
    821e:	f7ff ff51 	bl	80c4 <__sflush_r>
    8222:	bd38      	pop	{r3, r4, r5, pc}
    8224:	0000e320 	.word	0x0000e320
    8228:	0000e340 	.word	0x0000e340
    822c:	0000e360 	.word	0x0000e360

00008230 <fflush>:
    8230:	b508      	push	{r3, lr}
    8232:	1e01      	subs	r1, r0, #0
    8234:	d105      	bne.n	8242 <fflush+0x12>
    8236:	4b05      	ldr	r3, [pc, #20]	; (824c <fflush+0x1c>)
    8238:	4905      	ldr	r1, [pc, #20]	; (8250 <fflush+0x20>)
    823a:	6818      	ldr	r0, [r3, #0]
    823c:	f000 f9a6 	bl	858c <_fwalk_reent>
    8240:	e003      	b.n	824a <fflush+0x1a>
    8242:	4b04      	ldr	r3, [pc, #16]	; (8254 <fflush+0x24>)
    8244:	6818      	ldr	r0, [r3, #0]
    8246:	f7ff ffc7 	bl	81d8 <_fflush_r>
    824a:	bd08      	pop	{r3, pc}
    824c:	0000e384 	.word	0x0000e384
    8250:	000081d9 	.word	0x000081d9
    8254:	20000134 	.word	0x20000134

00008258 <_cleanup_r>:
    8258:	b508      	push	{r3, lr}
    825a:	4902      	ldr	r1, [pc, #8]	; (8264 <_cleanup_r+0xc>)
    825c:	f000 f996 	bl	858c <_fwalk_reent>
    8260:	bd08      	pop	{r3, pc}
    8262:	46c0      	nop			; (mov r8, r8)
    8264:	000081d9 	.word	0x000081d9

00008268 <std.isra.0>:
    8268:	2300      	movs	r3, #0
    826a:	b510      	push	{r4, lr}
    826c:	1c04      	adds	r4, r0, #0
    826e:	6003      	str	r3, [r0, #0]
    8270:	6043      	str	r3, [r0, #4]
    8272:	6083      	str	r3, [r0, #8]
    8274:	8181      	strh	r1, [r0, #12]
    8276:	6643      	str	r3, [r0, #100]	; 0x64
    8278:	81c2      	strh	r2, [r0, #14]
    827a:	6103      	str	r3, [r0, #16]
    827c:	6143      	str	r3, [r0, #20]
    827e:	6183      	str	r3, [r0, #24]
    8280:	1c19      	adds	r1, r3, #0
    8282:	2208      	movs	r2, #8
    8284:	305c      	adds	r0, #92	; 0x5c
    8286:	f000 fa49 	bl	871c <memset>
    828a:	4b05      	ldr	r3, [pc, #20]	; (82a0 <std.isra.0+0x38>)
    828c:	6224      	str	r4, [r4, #32]
    828e:	6263      	str	r3, [r4, #36]	; 0x24
    8290:	4b04      	ldr	r3, [pc, #16]	; (82a4 <std.isra.0+0x3c>)
    8292:	62a3      	str	r3, [r4, #40]	; 0x28
    8294:	4b04      	ldr	r3, [pc, #16]	; (82a8 <std.isra.0+0x40>)
    8296:	62e3      	str	r3, [r4, #44]	; 0x2c
    8298:	4b04      	ldr	r3, [pc, #16]	; (82ac <std.isra.0+0x44>)
    829a:	6323      	str	r3, [r4, #48]	; 0x30
    829c:	bd10      	pop	{r4, pc}
    829e:	46c0      	nop			; (mov r8, r8)
    82a0:	00009dc1 	.word	0x00009dc1
    82a4:	00009ded 	.word	0x00009ded
    82a8:	00009e25 	.word	0x00009e25
    82ac:	00009e51 	.word	0x00009e51

000082b0 <__sfmoreglue>:
    82b0:	b570      	push	{r4, r5, r6, lr}
    82b2:	2568      	movs	r5, #104	; 0x68
    82b4:	1e4b      	subs	r3, r1, #1
    82b6:	435d      	muls	r5, r3
    82b8:	1c0e      	adds	r6, r1, #0
    82ba:	1c29      	adds	r1, r5, #0
    82bc:	3174      	adds	r1, #116	; 0x74
    82be:	f000 fa7b 	bl	87b8 <_malloc_r>
    82c2:	1e04      	subs	r4, r0, #0
    82c4:	d008      	beq.n	82d8 <__sfmoreglue+0x28>
    82c6:	2100      	movs	r1, #0
    82c8:	1c2a      	adds	r2, r5, #0
    82ca:	6001      	str	r1, [r0, #0]
    82cc:	6046      	str	r6, [r0, #4]
    82ce:	300c      	adds	r0, #12
    82d0:	60a0      	str	r0, [r4, #8]
    82d2:	3268      	adds	r2, #104	; 0x68
    82d4:	f000 fa22 	bl	871c <memset>
    82d8:	1c20      	adds	r0, r4, #0
    82da:	bd70      	pop	{r4, r5, r6, pc}

000082dc <__sinit>:
    82dc:	6983      	ldr	r3, [r0, #24]
    82de:	b513      	push	{r0, r1, r4, lr}
    82e0:	2b00      	cmp	r3, #0
    82e2:	d128      	bne.n	8336 <__sinit+0x5a>
    82e4:	6483      	str	r3, [r0, #72]	; 0x48
    82e6:	64c3      	str	r3, [r0, #76]	; 0x4c
    82e8:	6503      	str	r3, [r0, #80]	; 0x50
    82ea:	4b13      	ldr	r3, [pc, #76]	; (8338 <__sinit+0x5c>)
    82ec:	4a13      	ldr	r2, [pc, #76]	; (833c <__sinit+0x60>)
    82ee:	681b      	ldr	r3, [r3, #0]
    82f0:	6282      	str	r2, [r0, #40]	; 0x28
    82f2:	9301      	str	r3, [sp, #4]
    82f4:	4298      	cmp	r0, r3
    82f6:	d101      	bne.n	82fc <__sinit+0x20>
    82f8:	2301      	movs	r3, #1
    82fa:	6183      	str	r3, [r0, #24]
    82fc:	1c04      	adds	r4, r0, #0
    82fe:	f000 f81f 	bl	8340 <__sfp>
    8302:	6060      	str	r0, [r4, #4]
    8304:	1c20      	adds	r0, r4, #0
    8306:	f000 f81b 	bl	8340 <__sfp>
    830a:	60a0      	str	r0, [r4, #8]
    830c:	1c20      	adds	r0, r4, #0
    830e:	f000 f817 	bl	8340 <__sfp>
    8312:	2104      	movs	r1, #4
    8314:	60e0      	str	r0, [r4, #12]
    8316:	2200      	movs	r2, #0
    8318:	6860      	ldr	r0, [r4, #4]
    831a:	f7ff ffa5 	bl	8268 <std.isra.0>
    831e:	68a0      	ldr	r0, [r4, #8]
    8320:	2109      	movs	r1, #9
    8322:	2201      	movs	r2, #1
    8324:	f7ff ffa0 	bl	8268 <std.isra.0>
    8328:	68e0      	ldr	r0, [r4, #12]
    832a:	2112      	movs	r1, #18
    832c:	2202      	movs	r2, #2
    832e:	f7ff ff9b 	bl	8268 <std.isra.0>
    8332:	2301      	movs	r3, #1
    8334:	61a3      	str	r3, [r4, #24]
    8336:	bd13      	pop	{r0, r1, r4, pc}
    8338:	0000e384 	.word	0x0000e384
    833c:	00008259 	.word	0x00008259

00008340 <__sfp>:
    8340:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8342:	4b1d      	ldr	r3, [pc, #116]	; (83b8 <__sfp+0x78>)
    8344:	1c06      	adds	r6, r0, #0
    8346:	681d      	ldr	r5, [r3, #0]
    8348:	69ab      	ldr	r3, [r5, #24]
    834a:	2b00      	cmp	r3, #0
    834c:	d102      	bne.n	8354 <__sfp+0x14>
    834e:	1c28      	adds	r0, r5, #0
    8350:	f7ff ffc4 	bl	82dc <__sinit>
    8354:	3548      	adds	r5, #72	; 0x48
    8356:	68ac      	ldr	r4, [r5, #8]
    8358:	686b      	ldr	r3, [r5, #4]
    835a:	3b01      	subs	r3, #1
    835c:	d405      	bmi.n	836a <__sfp+0x2a>
    835e:	220c      	movs	r2, #12
    8360:	5ea7      	ldrsh	r7, [r4, r2]
    8362:	2f00      	cmp	r7, #0
    8364:	d010      	beq.n	8388 <__sfp+0x48>
    8366:	3468      	adds	r4, #104	; 0x68
    8368:	e7f7      	b.n	835a <__sfp+0x1a>
    836a:	682b      	ldr	r3, [r5, #0]
    836c:	2b00      	cmp	r3, #0
    836e:	d106      	bne.n	837e <__sfp+0x3e>
    8370:	1c30      	adds	r0, r6, #0
    8372:	2104      	movs	r1, #4
    8374:	f7ff ff9c 	bl	82b0 <__sfmoreglue>
    8378:	6028      	str	r0, [r5, #0]
    837a:	2800      	cmp	r0, #0
    837c:	d001      	beq.n	8382 <__sfp+0x42>
    837e:	682d      	ldr	r5, [r5, #0]
    8380:	e7e9      	b.n	8356 <__sfp+0x16>
    8382:	230c      	movs	r3, #12
    8384:	6033      	str	r3, [r6, #0]
    8386:	e016      	b.n	83b6 <__sfp+0x76>
    8388:	2301      	movs	r3, #1
    838a:	1c20      	adds	r0, r4, #0
    838c:	425b      	negs	r3, r3
    838e:	81e3      	strh	r3, [r4, #14]
    8390:	3302      	adds	r3, #2
    8392:	81a3      	strh	r3, [r4, #12]
    8394:	6667      	str	r7, [r4, #100]	; 0x64
    8396:	6027      	str	r7, [r4, #0]
    8398:	60a7      	str	r7, [r4, #8]
    839a:	6067      	str	r7, [r4, #4]
    839c:	6127      	str	r7, [r4, #16]
    839e:	6167      	str	r7, [r4, #20]
    83a0:	61a7      	str	r7, [r4, #24]
    83a2:	305c      	adds	r0, #92	; 0x5c
    83a4:	1c39      	adds	r1, r7, #0
    83a6:	2208      	movs	r2, #8
    83a8:	f000 f9b8 	bl	871c <memset>
    83ac:	1c20      	adds	r0, r4, #0
    83ae:	6367      	str	r7, [r4, #52]	; 0x34
    83b0:	63a7      	str	r7, [r4, #56]	; 0x38
    83b2:	64a7      	str	r7, [r4, #72]	; 0x48
    83b4:	64e7      	str	r7, [r4, #76]	; 0x4c
    83b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    83b8:	0000e384 	.word	0x0000e384

000083bc <__sfp_lock_acquire>:
    83bc:	4770      	bx	lr

000083be <__sfp_lock_release>:
    83be:	4770      	bx	lr

000083c0 <_fopen_r>:
    83c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    83c2:	1c0f      	adds	r7, r1, #0
    83c4:	1c11      	adds	r1, r2, #0
    83c6:	aa01      	add	r2, sp, #4
    83c8:	1c05      	adds	r5, r0, #0
    83ca:	f003 fc8f 	bl	bcec <__sflags>
    83ce:	1e06      	subs	r6, r0, #0
    83d0:	d101      	bne.n	83d6 <_fopen_r+0x16>
    83d2:	2400      	movs	r4, #0
    83d4:	e027      	b.n	8426 <_fopen_r+0x66>
    83d6:	1c28      	adds	r0, r5, #0
    83d8:	f7ff ffb2 	bl	8340 <__sfp>
    83dc:	1e04      	subs	r4, r0, #0
    83de:	d0f8      	beq.n	83d2 <_fopen_r+0x12>
    83e0:	23db      	movs	r3, #219	; 0xdb
    83e2:	1c28      	adds	r0, r5, #0
    83e4:	1c39      	adds	r1, r7, #0
    83e6:	9a01      	ldr	r2, [sp, #4]
    83e8:	005b      	lsls	r3, r3, #1
    83ea:	f001 fb1f 	bl	9a2c <_open_r>
    83ee:	2800      	cmp	r0, #0
    83f0:	da06      	bge.n	8400 <_fopen_r+0x40>
    83f2:	2500      	movs	r5, #0
    83f4:	f7ff ffe2 	bl	83bc <__sfp_lock_acquire>
    83f8:	81a5      	strh	r5, [r4, #12]
    83fa:	f7ff ffe0 	bl	83be <__sfp_lock_release>
    83fe:	e7e8      	b.n	83d2 <_fopen_r+0x12>
    8400:	4b0a      	ldr	r3, [pc, #40]	; (842c <_fopen_r+0x6c>)
    8402:	81e0      	strh	r0, [r4, #14]
    8404:	6263      	str	r3, [r4, #36]	; 0x24
    8406:	4b0a      	ldr	r3, [pc, #40]	; (8430 <_fopen_r+0x70>)
    8408:	81a6      	strh	r6, [r4, #12]
    840a:	62a3      	str	r3, [r4, #40]	; 0x28
    840c:	4b09      	ldr	r3, [pc, #36]	; (8434 <_fopen_r+0x74>)
    840e:	6224      	str	r4, [r4, #32]
    8410:	62e3      	str	r3, [r4, #44]	; 0x2c
    8412:	4b09      	ldr	r3, [pc, #36]	; (8438 <_fopen_r+0x78>)
    8414:	6323      	str	r3, [r4, #48]	; 0x30
    8416:	05f3      	lsls	r3, r6, #23
    8418:	d505      	bpl.n	8426 <_fopen_r+0x66>
    841a:	1c28      	adds	r0, r5, #0
    841c:	1c21      	adds	r1, r4, #0
    841e:	2200      	movs	r2, #0
    8420:	2302      	movs	r3, #2
    8422:	f000 f817 	bl	8454 <_fseek_r>
    8426:	1c20      	adds	r0, r4, #0
    8428:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    842a:	46c0      	nop			; (mov r8, r8)
    842c:	00009dc1 	.word	0x00009dc1
    8430:	00009ded 	.word	0x00009ded
    8434:	00009e25 	.word	0x00009e25
    8438:	00009e51 	.word	0x00009e51

0000843c <fopen>:
    843c:	b508      	push	{r3, lr}
    843e:	1c03      	adds	r3, r0, #0
    8440:	1c0a      	adds	r2, r1, #0
    8442:	4903      	ldr	r1, [pc, #12]	; (8450 <fopen+0x14>)
    8444:	6808      	ldr	r0, [r1, #0]
    8446:	1c19      	adds	r1, r3, #0
    8448:	f7ff ffba 	bl	83c0 <_fopen_r>
    844c:	bd08      	pop	{r3, pc}
    844e:	46c0      	nop			; (mov r8, r8)
    8450:	20000134 	.word	0x20000134

00008454 <_fseek_r>:
    8454:	b508      	push	{r3, lr}
    8456:	f000 f801 	bl	845c <_fseeko_r>
    845a:	bd08      	pop	{r3, pc}

0000845c <_fseeko_r>:
    845c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    845e:	1c05      	adds	r5, r0, #0
    8460:	1c0c      	adds	r4, r1, #0
    8462:	9201      	str	r2, [sp, #4]
    8464:	1c1e      	adds	r6, r3, #0
    8466:	2800      	cmp	r0, #0
    8468:	d004      	beq.n	8474 <_fseeko_r+0x18>
    846a:	6983      	ldr	r3, [r0, #24]
    846c:	2b00      	cmp	r3, #0
    846e:	d101      	bne.n	8474 <_fseeko_r+0x18>
    8470:	f7ff ff34 	bl	82dc <__sinit>
    8474:	4b41      	ldr	r3, [pc, #260]	; (857c <_fseeko_r+0x120>)
    8476:	429c      	cmp	r4, r3
    8478:	d101      	bne.n	847e <_fseeko_r+0x22>
    847a:	686c      	ldr	r4, [r5, #4]
    847c:	e008      	b.n	8490 <_fseeko_r+0x34>
    847e:	4b40      	ldr	r3, [pc, #256]	; (8580 <_fseeko_r+0x124>)
    8480:	429c      	cmp	r4, r3
    8482:	d101      	bne.n	8488 <_fseeko_r+0x2c>
    8484:	68ac      	ldr	r4, [r5, #8]
    8486:	e003      	b.n	8490 <_fseeko_r+0x34>
    8488:	4b3e      	ldr	r3, [pc, #248]	; (8584 <_fseeko_r+0x128>)
    848a:	429c      	cmp	r4, r3
    848c:	d100      	bne.n	8490 <_fseeko_r+0x34>
    848e:	68ec      	ldr	r4, [r5, #12]
    8490:	2284      	movs	r2, #132	; 0x84
    8492:	89a3      	ldrh	r3, [r4, #12]
    8494:	0052      	lsls	r2, r2, #1
    8496:	4013      	ands	r3, r2
    8498:	4293      	cmp	r3, r2
    849a:	d103      	bne.n	84a4 <_fseeko_r+0x48>
    849c:	1c28      	adds	r0, r5, #0
    849e:	1c21      	adds	r1, r4, #0
    84a0:	f7ff fe9a 	bl	81d8 <_fflush_r>
    84a4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    84a6:	9300      	str	r3, [sp, #0]
    84a8:	2b00      	cmp	r3, #0
    84aa:	d101      	bne.n	84b0 <_fseeko_r+0x54>
    84ac:	331d      	adds	r3, #29
    84ae:	e031      	b.n	8514 <_fseeko_r+0xb8>
    84b0:	2e01      	cmp	r6, #1
    84b2:	d005      	beq.n	84c0 <_fseeko_r+0x64>
    84b4:	2e02      	cmp	r6, #2
    84b6:	d031      	beq.n	851c <_fseeko_r+0xc0>
    84b8:	2316      	movs	r3, #22
    84ba:	2e00      	cmp	r6, #0
    84bc:	d12a      	bne.n	8514 <_fseeko_r+0xb8>
    84be:	e02d      	b.n	851c <_fseeko_r+0xc0>
    84c0:	1c28      	adds	r0, r5, #0
    84c2:	1c21      	adds	r1, r4, #0
    84c4:	f7ff fe88 	bl	81d8 <_fflush_r>
    84c8:	2380      	movs	r3, #128	; 0x80
    84ca:	89a2      	ldrh	r2, [r4, #12]
    84cc:	015b      	lsls	r3, r3, #5
    84ce:	401a      	ands	r2, r3
    84d0:	d001      	beq.n	84d6 <_fseeko_r+0x7a>
    84d2:	6d60      	ldr	r0, [r4, #84]	; 0x54
    84d4:	e006      	b.n	84e4 <_fseeko_r+0x88>
    84d6:	1c33      	adds	r3, r6, #0
    84d8:	1c28      	adds	r0, r5, #0
    84da:	6a21      	ldr	r1, [r4, #32]
    84dc:	9e00      	ldr	r6, [sp, #0]
    84de:	47b0      	blx	r6
    84e0:	1c43      	adds	r3, r0, #1
    84e2:	d018      	beq.n	8516 <_fseeko_r+0xba>
    84e4:	89a3      	ldrh	r3, [r4, #12]
    84e6:	075a      	lsls	r2, r3, #29
    84e8:	d507      	bpl.n	84fa <_fseeko_r+0x9e>
    84ea:	6863      	ldr	r3, [r4, #4]
    84ec:	1ac0      	subs	r0, r0, r3
    84ee:	6b63      	ldr	r3, [r4, #52]	; 0x34
    84f0:	2b00      	cmp	r3, #0
    84f2:	d00a      	beq.n	850a <_fseeko_r+0xae>
    84f4:	6c23      	ldr	r3, [r4, #64]	; 0x40
    84f6:	1ac0      	subs	r0, r0, r3
    84f8:	e007      	b.n	850a <_fseeko_r+0xae>
    84fa:	071b      	lsls	r3, r3, #28
    84fc:	d505      	bpl.n	850a <_fseeko_r+0xae>
    84fe:	6823      	ldr	r3, [r4, #0]
    8500:	2b00      	cmp	r3, #0
    8502:	d002      	beq.n	850a <_fseeko_r+0xae>
    8504:	6922      	ldr	r2, [r4, #16]
    8506:	1a9b      	subs	r3, r3, r2
    8508:	18c0      	adds	r0, r0, r3
    850a:	9b01      	ldr	r3, [sp, #4]
    850c:	2600      	movs	r6, #0
    850e:	181b      	adds	r3, r3, r0
    8510:	9301      	str	r3, [sp, #4]
    8512:	e003      	b.n	851c <_fseeko_r+0xc0>
    8514:	602b      	str	r3, [r5, #0]
    8516:	2701      	movs	r7, #1
    8518:	427f      	negs	r7, r7
    851a:	e02d      	b.n	8578 <_fseeko_r+0x11c>
    851c:	6923      	ldr	r3, [r4, #16]
    851e:	2b00      	cmp	r3, #0
    8520:	d103      	bne.n	852a <_fseeko_r+0xce>
    8522:	1c28      	adds	r0, r5, #0
    8524:	1c21      	adds	r1, r4, #0
    8526:	f000 f879 	bl	861c <__smakebuf_r>
    852a:	1c28      	adds	r0, r5, #0
    852c:	1c21      	adds	r1, r4, #0
    852e:	f7ff fe53 	bl	81d8 <_fflush_r>
    8532:	1e07      	subs	r7, r0, #0
    8534:	d1ef      	bne.n	8516 <_fseeko_r+0xba>
    8536:	1c33      	adds	r3, r6, #0
    8538:	1c28      	adds	r0, r5, #0
    853a:	6a21      	ldr	r1, [r4, #32]
    853c:	9a01      	ldr	r2, [sp, #4]
    853e:	9e00      	ldr	r6, [sp, #0]
    8540:	47b0      	blx	r6
    8542:	1c43      	adds	r3, r0, #1
    8544:	d0e7      	beq.n	8516 <_fseeko_r+0xba>
    8546:	6b61      	ldr	r1, [r4, #52]	; 0x34
    8548:	2900      	cmp	r1, #0
    854a:	d008      	beq.n	855e <_fseeko_r+0x102>
    854c:	1c23      	adds	r3, r4, #0
    854e:	3344      	adds	r3, #68	; 0x44
    8550:	4299      	cmp	r1, r3
    8552:	d002      	beq.n	855a <_fseeko_r+0xfe>
    8554:	1c28      	adds	r0, r5, #0
    8556:	f000 f8e9 	bl	872c <_free_r>
    855a:	2300      	movs	r3, #0
    855c:	6363      	str	r3, [r4, #52]	; 0x34
    855e:	2100      	movs	r1, #0
    8560:	1c20      	adds	r0, r4, #0
    8562:	6923      	ldr	r3, [r4, #16]
    8564:	89a2      	ldrh	r2, [r4, #12]
    8566:	6023      	str	r3, [r4, #0]
    8568:	4b07      	ldr	r3, [pc, #28]	; (8588 <_fseeko_r+0x12c>)
    856a:	6061      	str	r1, [r4, #4]
    856c:	4013      	ands	r3, r2
    856e:	81a3      	strh	r3, [r4, #12]
    8570:	305c      	adds	r0, #92	; 0x5c
    8572:	2208      	movs	r2, #8
    8574:	f000 f8d2 	bl	871c <memset>
    8578:	1c38      	adds	r0, r7, #0
    857a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    857c:	0000e320 	.word	0x0000e320
    8580:	0000e340 	.word	0x0000e340
    8584:	0000e360 	.word	0x0000e360
    8588:	fffff7df 	.word	0xfffff7df

0000858c <_fwalk_reent>:
    858c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    858e:	1c04      	adds	r4, r0, #0
    8590:	1c07      	adds	r7, r0, #0
    8592:	2600      	movs	r6, #0
    8594:	9101      	str	r1, [sp, #4]
    8596:	3448      	adds	r4, #72	; 0x48
    8598:	2c00      	cmp	r4, #0
    859a:	d016      	beq.n	85ca <_fwalk_reent+0x3e>
    859c:	6863      	ldr	r3, [r4, #4]
    859e:	68a5      	ldr	r5, [r4, #8]
    85a0:	9300      	str	r3, [sp, #0]
    85a2:	9b00      	ldr	r3, [sp, #0]
    85a4:	3b01      	subs	r3, #1
    85a6:	9300      	str	r3, [sp, #0]
    85a8:	d40d      	bmi.n	85c6 <_fwalk_reent+0x3a>
    85aa:	89ab      	ldrh	r3, [r5, #12]
    85ac:	2b01      	cmp	r3, #1
    85ae:	d908      	bls.n	85c2 <_fwalk_reent+0x36>
    85b0:	220e      	movs	r2, #14
    85b2:	5eab      	ldrsh	r3, [r5, r2]
    85b4:	3301      	adds	r3, #1
    85b6:	d004      	beq.n	85c2 <_fwalk_reent+0x36>
    85b8:	1c38      	adds	r0, r7, #0
    85ba:	1c29      	adds	r1, r5, #0
    85bc:	9b01      	ldr	r3, [sp, #4]
    85be:	4798      	blx	r3
    85c0:	4306      	orrs	r6, r0
    85c2:	3568      	adds	r5, #104	; 0x68
    85c4:	e7ed      	b.n	85a2 <_fwalk_reent+0x16>
    85c6:	6824      	ldr	r4, [r4, #0]
    85c8:	e7e6      	b.n	8598 <_fwalk_reent+0xc>
    85ca:	1c30      	adds	r0, r6, #0
    85cc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

000085d0 <__libc_init_array>:
    85d0:	4b0e      	ldr	r3, [pc, #56]	; (860c <__libc_init_array+0x3c>)
    85d2:	b570      	push	{r4, r5, r6, lr}
    85d4:	2500      	movs	r5, #0
    85d6:	1c1e      	adds	r6, r3, #0
    85d8:	4c0d      	ldr	r4, [pc, #52]	; (8610 <__libc_init_array+0x40>)
    85da:	1ae4      	subs	r4, r4, r3
    85dc:	10a4      	asrs	r4, r4, #2
    85de:	42a5      	cmp	r5, r4
    85e0:	d004      	beq.n	85ec <__libc_init_array+0x1c>
    85e2:	00ab      	lsls	r3, r5, #2
    85e4:	58f3      	ldr	r3, [r6, r3]
    85e6:	4798      	blx	r3
    85e8:	3501      	adds	r5, #1
    85ea:	e7f8      	b.n	85de <__libc_init_array+0xe>
    85ec:	f006 f83a 	bl	e664 <_init>
    85f0:	4b08      	ldr	r3, [pc, #32]	; (8614 <__libc_init_array+0x44>)
    85f2:	2500      	movs	r5, #0
    85f4:	1c1e      	adds	r6, r3, #0
    85f6:	4c08      	ldr	r4, [pc, #32]	; (8618 <__libc_init_array+0x48>)
    85f8:	1ae4      	subs	r4, r4, r3
    85fa:	10a4      	asrs	r4, r4, #2
    85fc:	42a5      	cmp	r5, r4
    85fe:	d004      	beq.n	860a <__libc_init_array+0x3a>
    8600:	00ab      	lsls	r3, r5, #2
    8602:	58f3      	ldr	r3, [r6, r3]
    8604:	4798      	blx	r3
    8606:	3501      	adds	r5, #1
    8608:	e7f8      	b.n	85fc <__libc_init_array+0x2c>
    860a:	bd70      	pop	{r4, r5, r6, pc}
    860c:	0000e670 	.word	0x0000e670
    8610:	0000e670 	.word	0x0000e670
    8614:	0000e670 	.word	0x0000e670
    8618:	0000e680 	.word	0x0000e680

0000861c <__smakebuf_r>:
    861c:	b5f0      	push	{r4, r5, r6, r7, lr}
    861e:	898b      	ldrh	r3, [r1, #12]
    8620:	b091      	sub	sp, #68	; 0x44
    8622:	079b      	lsls	r3, r3, #30
    8624:	d506      	bpl.n	8634 <__smakebuf_r+0x18>
    8626:	1c0b      	adds	r3, r1, #0
    8628:	3347      	adds	r3, #71	; 0x47
    862a:	600b      	str	r3, [r1, #0]
    862c:	610b      	str	r3, [r1, #16]
    862e:	2301      	movs	r3, #1
    8630:	614b      	str	r3, [r1, #20]
    8632:	e045      	b.n	86c0 <__smakebuf_r+0xa4>
    8634:	1c0c      	adds	r4, r1, #0
    8636:	230e      	movs	r3, #14
    8638:	5ec9      	ldrsh	r1, [r1, r3]
    863a:	1c06      	adds	r6, r0, #0
    863c:	2900      	cmp	r1, #0
    863e:	da04      	bge.n	864a <__smakebuf_r+0x2e>
    8640:	2380      	movs	r3, #128	; 0x80
    8642:	89a5      	ldrh	r5, [r4, #12]
    8644:	401d      	ands	r5, r3
    8646:	d110      	bne.n	866a <__smakebuf_r+0x4e>
    8648:	e00c      	b.n	8664 <__smakebuf_r+0x48>
    864a:	aa01      	add	r2, sp, #4
    864c:	f003 fb86 	bl	bd5c <_fstat_r>
    8650:	2800      	cmp	r0, #0
    8652:	dbf5      	blt.n	8640 <__smakebuf_r+0x24>
    8654:	23f0      	movs	r3, #240	; 0xf0
    8656:	9d02      	ldr	r5, [sp, #8]
    8658:	021b      	lsls	r3, r3, #8
    865a:	401d      	ands	r5, r3
    865c:	4b19      	ldr	r3, [pc, #100]	; (86c4 <__smakebuf_r+0xa8>)
    865e:	18ed      	adds	r5, r5, r3
    8660:	426b      	negs	r3, r5
    8662:	415d      	adcs	r5, r3
    8664:	2780      	movs	r7, #128	; 0x80
    8666:	00ff      	lsls	r7, r7, #3
    8668:	e001      	b.n	866e <__smakebuf_r+0x52>
    866a:	2500      	movs	r5, #0
    866c:	2740      	movs	r7, #64	; 0x40
    866e:	1c30      	adds	r0, r6, #0
    8670:	1c39      	adds	r1, r7, #0
    8672:	f000 f8a1 	bl	87b8 <_malloc_r>
    8676:	2800      	cmp	r0, #0
    8678:	d10c      	bne.n	8694 <__smakebuf_r+0x78>
    867a:	89a3      	ldrh	r3, [r4, #12]
    867c:	059a      	lsls	r2, r3, #22
    867e:	d41f      	bmi.n	86c0 <__smakebuf_r+0xa4>
    8680:	2202      	movs	r2, #2
    8682:	4313      	orrs	r3, r2
    8684:	81a3      	strh	r3, [r4, #12]
    8686:	1c23      	adds	r3, r4, #0
    8688:	3347      	adds	r3, #71	; 0x47
    868a:	6023      	str	r3, [r4, #0]
    868c:	6123      	str	r3, [r4, #16]
    868e:	2301      	movs	r3, #1
    8690:	6163      	str	r3, [r4, #20]
    8692:	e015      	b.n	86c0 <__smakebuf_r+0xa4>
    8694:	2280      	movs	r2, #128	; 0x80
    8696:	4b0c      	ldr	r3, [pc, #48]	; (86c8 <__smakebuf_r+0xac>)
    8698:	62b3      	str	r3, [r6, #40]	; 0x28
    869a:	89a3      	ldrh	r3, [r4, #12]
    869c:	6020      	str	r0, [r4, #0]
    869e:	4313      	orrs	r3, r2
    86a0:	81a3      	strh	r3, [r4, #12]
    86a2:	6120      	str	r0, [r4, #16]
    86a4:	6167      	str	r7, [r4, #20]
    86a6:	2d00      	cmp	r5, #0
    86a8:	d00a      	beq.n	86c0 <__smakebuf_r+0xa4>
    86aa:	230e      	movs	r3, #14
    86ac:	5ee1      	ldrsh	r1, [r4, r3]
    86ae:	1c30      	adds	r0, r6, #0
    86b0:	f003 fe7e 	bl	c3b0 <_isatty_r>
    86b4:	2800      	cmp	r0, #0
    86b6:	d003      	beq.n	86c0 <__smakebuf_r+0xa4>
    86b8:	2201      	movs	r2, #1
    86ba:	89a3      	ldrh	r3, [r4, #12]
    86bc:	4313      	orrs	r3, r2
    86be:	81a3      	strh	r3, [r4, #12]
    86c0:	b011      	add	sp, #68	; 0x44
    86c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    86c4:	ffffe000 	.word	0xffffe000
    86c8:	00008259 	.word	0x00008259

000086cc <malloc>:
    86cc:	b508      	push	{r3, lr}
    86ce:	4b03      	ldr	r3, [pc, #12]	; (86dc <malloc+0x10>)
    86d0:	1c01      	adds	r1, r0, #0
    86d2:	6818      	ldr	r0, [r3, #0]
    86d4:	f000 f870 	bl	87b8 <_malloc_r>
    86d8:	bd08      	pop	{r3, pc}
    86da:	46c0      	nop			; (mov r8, r8)
    86dc:	20000134 	.word	0x20000134

000086e0 <free>:
    86e0:	b508      	push	{r3, lr}
    86e2:	4b03      	ldr	r3, [pc, #12]	; (86f0 <free+0x10>)
    86e4:	1c01      	adds	r1, r0, #0
    86e6:	6818      	ldr	r0, [r3, #0]
    86e8:	f000 f820 	bl	872c <_free_r>
    86ec:	bd08      	pop	{r3, pc}
    86ee:	46c0      	nop			; (mov r8, r8)
    86f0:	20000134 	.word	0x20000134

000086f4 <memchr>:
    86f4:	b2c9      	uxtb	r1, r1
    86f6:	1882      	adds	r2, r0, r2
    86f8:	4290      	cmp	r0, r2
    86fa:	d004      	beq.n	8706 <memchr+0x12>
    86fc:	7803      	ldrb	r3, [r0, #0]
    86fe:	428b      	cmp	r3, r1
    8700:	d002      	beq.n	8708 <memchr+0x14>
    8702:	3001      	adds	r0, #1
    8704:	e7f8      	b.n	86f8 <memchr+0x4>
    8706:	2000      	movs	r0, #0
    8708:	4770      	bx	lr

0000870a <memcpy>:
    870a:	2300      	movs	r3, #0
    870c:	b510      	push	{r4, lr}
    870e:	4293      	cmp	r3, r2
    8710:	d003      	beq.n	871a <memcpy+0x10>
    8712:	5ccc      	ldrb	r4, [r1, r3]
    8714:	54c4      	strb	r4, [r0, r3]
    8716:	3301      	adds	r3, #1
    8718:	e7f9      	b.n	870e <memcpy+0x4>
    871a:	bd10      	pop	{r4, pc}

0000871c <memset>:
    871c:	1c03      	adds	r3, r0, #0
    871e:	1882      	adds	r2, r0, r2
    8720:	4293      	cmp	r3, r2
    8722:	d002      	beq.n	872a <memset+0xe>
    8724:	7019      	strb	r1, [r3, #0]
    8726:	3301      	adds	r3, #1
    8728:	e7fa      	b.n	8720 <memset+0x4>
    872a:	4770      	bx	lr

0000872c <_free_r>:
    872c:	b530      	push	{r4, r5, lr}
    872e:	2900      	cmp	r1, #0
    8730:	d03e      	beq.n	87b0 <_free_r+0x84>
    8732:	3904      	subs	r1, #4
    8734:	680b      	ldr	r3, [r1, #0]
    8736:	2b00      	cmp	r3, #0
    8738:	da00      	bge.n	873c <_free_r+0x10>
    873a:	18c9      	adds	r1, r1, r3
    873c:	4a1d      	ldr	r2, [pc, #116]	; (87b4 <_free_r+0x88>)
    873e:	6813      	ldr	r3, [r2, #0]
    8740:	1c14      	adds	r4, r2, #0
    8742:	2b00      	cmp	r3, #0
    8744:	d102      	bne.n	874c <_free_r+0x20>
    8746:	604b      	str	r3, [r1, #4]
    8748:	6011      	str	r1, [r2, #0]
    874a:	e031      	b.n	87b0 <_free_r+0x84>
    874c:	4299      	cmp	r1, r3
    874e:	d20d      	bcs.n	876c <_free_r+0x40>
    8750:	6808      	ldr	r0, [r1, #0]
    8752:	180a      	adds	r2, r1, r0
    8754:	429a      	cmp	r2, r3
    8756:	d103      	bne.n	8760 <_free_r+0x34>
    8758:	6813      	ldr	r3, [r2, #0]
    875a:	18c3      	adds	r3, r0, r3
    875c:	600b      	str	r3, [r1, #0]
    875e:	6853      	ldr	r3, [r2, #4]
    8760:	604b      	str	r3, [r1, #4]
    8762:	6021      	str	r1, [r4, #0]
    8764:	e024      	b.n	87b0 <_free_r+0x84>
    8766:	428a      	cmp	r2, r1
    8768:	d803      	bhi.n	8772 <_free_r+0x46>
    876a:	1c13      	adds	r3, r2, #0
    876c:	685a      	ldr	r2, [r3, #4]
    876e:	2a00      	cmp	r2, #0
    8770:	d1f9      	bne.n	8766 <_free_r+0x3a>
    8772:	681d      	ldr	r5, [r3, #0]
    8774:	195c      	adds	r4, r3, r5
    8776:	428c      	cmp	r4, r1
    8778:	d10b      	bne.n	8792 <_free_r+0x66>
    877a:	6809      	ldr	r1, [r1, #0]
    877c:	1869      	adds	r1, r5, r1
    877e:	1858      	adds	r0, r3, r1
    8780:	6019      	str	r1, [r3, #0]
    8782:	4290      	cmp	r0, r2
    8784:	d114      	bne.n	87b0 <_free_r+0x84>
    8786:	6810      	ldr	r0, [r2, #0]
    8788:	6852      	ldr	r2, [r2, #4]
    878a:	1809      	adds	r1, r1, r0
    878c:	6019      	str	r1, [r3, #0]
    878e:	605a      	str	r2, [r3, #4]
    8790:	e00e      	b.n	87b0 <_free_r+0x84>
    8792:	428c      	cmp	r4, r1
    8794:	d902      	bls.n	879c <_free_r+0x70>
    8796:	230c      	movs	r3, #12
    8798:	6003      	str	r3, [r0, #0]
    879a:	e009      	b.n	87b0 <_free_r+0x84>
    879c:	6808      	ldr	r0, [r1, #0]
    879e:	180c      	adds	r4, r1, r0
    87a0:	4294      	cmp	r4, r2
    87a2:	d103      	bne.n	87ac <_free_r+0x80>
    87a4:	6814      	ldr	r4, [r2, #0]
    87a6:	6852      	ldr	r2, [r2, #4]
    87a8:	1900      	adds	r0, r0, r4
    87aa:	6008      	str	r0, [r1, #0]
    87ac:	604a      	str	r2, [r1, #4]
    87ae:	6059      	str	r1, [r3, #4]
    87b0:	bd30      	pop	{r4, r5, pc}
    87b2:	46c0      	nop			; (mov r8, r8)
    87b4:	2000456c 	.word	0x2000456c

000087b8 <_malloc_r>:
    87b8:	2303      	movs	r3, #3
    87ba:	b570      	push	{r4, r5, r6, lr}
    87bc:	1ccc      	adds	r4, r1, #3
    87be:	439c      	bics	r4, r3
    87c0:	3408      	adds	r4, #8
    87c2:	1c05      	adds	r5, r0, #0
    87c4:	2c0c      	cmp	r4, #12
    87c6:	d201      	bcs.n	87cc <_malloc_r+0x14>
    87c8:	240c      	movs	r4, #12
    87ca:	e005      	b.n	87d8 <_malloc_r+0x20>
    87cc:	2c00      	cmp	r4, #0
    87ce:	da03      	bge.n	87d8 <_malloc_r+0x20>
    87d0:	230c      	movs	r3, #12
    87d2:	2000      	movs	r0, #0
    87d4:	602b      	str	r3, [r5, #0]
    87d6:	e042      	b.n	885e <_malloc_r+0xa6>
    87d8:	428c      	cmp	r4, r1
    87da:	d3f9      	bcc.n	87d0 <_malloc_r+0x18>
    87dc:	4a20      	ldr	r2, [pc, #128]	; (8860 <_malloc_r+0xa8>)
    87de:	6813      	ldr	r3, [r2, #0]
    87e0:	1c10      	adds	r0, r2, #0
    87e2:	1c19      	adds	r1, r3, #0
    87e4:	2900      	cmp	r1, #0
    87e6:	d013      	beq.n	8810 <_malloc_r+0x58>
    87e8:	680a      	ldr	r2, [r1, #0]
    87ea:	1b12      	subs	r2, r2, r4
    87ec:	d40d      	bmi.n	880a <_malloc_r+0x52>
    87ee:	2a0b      	cmp	r2, #11
    87f0:	d902      	bls.n	87f8 <_malloc_r+0x40>
    87f2:	600a      	str	r2, [r1, #0]
    87f4:	188b      	adds	r3, r1, r2
    87f6:	e01f      	b.n	8838 <_malloc_r+0x80>
    87f8:	428b      	cmp	r3, r1
    87fa:	d102      	bne.n	8802 <_malloc_r+0x4a>
    87fc:	685a      	ldr	r2, [r3, #4]
    87fe:	6002      	str	r2, [r0, #0]
    8800:	e01b      	b.n	883a <_malloc_r+0x82>
    8802:	684a      	ldr	r2, [r1, #4]
    8804:	605a      	str	r2, [r3, #4]
    8806:	1c0b      	adds	r3, r1, #0
    8808:	e017      	b.n	883a <_malloc_r+0x82>
    880a:	1c0b      	adds	r3, r1, #0
    880c:	6849      	ldr	r1, [r1, #4]
    880e:	e7e9      	b.n	87e4 <_malloc_r+0x2c>
    8810:	4e14      	ldr	r6, [pc, #80]	; (8864 <_malloc_r+0xac>)
    8812:	6833      	ldr	r3, [r6, #0]
    8814:	2b00      	cmp	r3, #0
    8816:	d103      	bne.n	8820 <_malloc_r+0x68>
    8818:	1c28      	adds	r0, r5, #0
    881a:	f001 f9af 	bl	9b7c <_sbrk_r>
    881e:	6030      	str	r0, [r6, #0]
    8820:	1c28      	adds	r0, r5, #0
    8822:	1c21      	adds	r1, r4, #0
    8824:	f001 f9aa 	bl	9b7c <_sbrk_r>
    8828:	1c03      	adds	r3, r0, #0
    882a:	1c42      	adds	r2, r0, #1
    882c:	d0d0      	beq.n	87d0 <_malloc_r+0x18>
    882e:	2203      	movs	r2, #3
    8830:	1cc6      	adds	r6, r0, #3
    8832:	4396      	bics	r6, r2
    8834:	4286      	cmp	r6, r0
    8836:	d10a      	bne.n	884e <_malloc_r+0x96>
    8838:	601c      	str	r4, [r3, #0]
    883a:	1c18      	adds	r0, r3, #0
    883c:	2107      	movs	r1, #7
    883e:	300b      	adds	r0, #11
    8840:	1d1a      	adds	r2, r3, #4
    8842:	4388      	bics	r0, r1
    8844:	1a82      	subs	r2, r0, r2
    8846:	d00a      	beq.n	885e <_malloc_r+0xa6>
    8848:	4251      	negs	r1, r2
    884a:	5099      	str	r1, [r3, r2]
    884c:	e007      	b.n	885e <_malloc_r+0xa6>
    884e:	1a31      	subs	r1, r6, r0
    8850:	1c28      	adds	r0, r5, #0
    8852:	f001 f993 	bl	9b7c <_sbrk_r>
    8856:	1c43      	adds	r3, r0, #1
    8858:	d0ba      	beq.n	87d0 <_malloc_r+0x18>
    885a:	1c33      	adds	r3, r6, #0
    885c:	e7ec      	b.n	8838 <_malloc_r+0x80>
    885e:	bd70      	pop	{r4, r5, r6, pc}
    8860:	2000456c 	.word	0x2000456c
    8864:	20004568 	.word	0x20004568

00008868 <__sfputc_r>:
    8868:	6893      	ldr	r3, [r2, #8]
    886a:	b510      	push	{r4, lr}
    886c:	3b01      	subs	r3, #1
    886e:	6093      	str	r3, [r2, #8]
    8870:	2b00      	cmp	r3, #0
    8872:	da05      	bge.n	8880 <__sfputc_r+0x18>
    8874:	6994      	ldr	r4, [r2, #24]
    8876:	42a3      	cmp	r3, r4
    8878:	db08      	blt.n	888c <__sfputc_r+0x24>
    887a:	b2cb      	uxtb	r3, r1
    887c:	2b0a      	cmp	r3, #10
    887e:	d005      	beq.n	888c <__sfputc_r+0x24>
    8880:	6813      	ldr	r3, [r2, #0]
    8882:	1c58      	adds	r0, r3, #1
    8884:	6010      	str	r0, [r2, #0]
    8886:	7019      	strb	r1, [r3, #0]
    8888:	b2c8      	uxtb	r0, r1
    888a:	e001      	b.n	8890 <__sfputc_r+0x28>
    888c:	f002 fab4 	bl	adf8 <__swbuf_r>
    8890:	bd10      	pop	{r4, pc}

00008892 <__sfputs_r>:
    8892:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    8894:	1c06      	adds	r6, r0, #0
    8896:	1c0f      	adds	r7, r1, #0
    8898:	1c14      	adds	r4, r2, #0
    889a:	18d5      	adds	r5, r2, r3
    889c:	42ac      	cmp	r4, r5
    889e:	d008      	beq.n	88b2 <__sfputs_r+0x20>
    88a0:	7821      	ldrb	r1, [r4, #0]
    88a2:	1c30      	adds	r0, r6, #0
    88a4:	1c3a      	adds	r2, r7, #0
    88a6:	f7ff ffdf 	bl	8868 <__sfputc_r>
    88aa:	3401      	adds	r4, #1
    88ac:	1c43      	adds	r3, r0, #1
    88ae:	d1f5      	bne.n	889c <__sfputs_r+0xa>
    88b0:	e000      	b.n	88b4 <__sfputs_r+0x22>
    88b2:	2000      	movs	r0, #0
    88b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

000088b8 <_vfiprintf_r>:
    88b8:	b5f0      	push	{r4, r5, r6, r7, lr}
    88ba:	b09f      	sub	sp, #124	; 0x7c
    88bc:	1c06      	adds	r6, r0, #0
    88be:	1c0f      	adds	r7, r1, #0
    88c0:	9202      	str	r2, [sp, #8]
    88c2:	9305      	str	r3, [sp, #20]
    88c4:	2800      	cmp	r0, #0
    88c6:	d004      	beq.n	88d2 <_vfiprintf_r+0x1a>
    88c8:	6983      	ldr	r3, [r0, #24]
    88ca:	2b00      	cmp	r3, #0
    88cc:	d101      	bne.n	88d2 <_vfiprintf_r+0x1a>
    88ce:	f7ff fd05 	bl	82dc <__sinit>
    88d2:	4b79      	ldr	r3, [pc, #484]	; (8ab8 <_vfiprintf_r+0x200>)
    88d4:	429f      	cmp	r7, r3
    88d6:	d101      	bne.n	88dc <_vfiprintf_r+0x24>
    88d8:	6877      	ldr	r7, [r6, #4]
    88da:	e008      	b.n	88ee <_vfiprintf_r+0x36>
    88dc:	4b77      	ldr	r3, [pc, #476]	; (8abc <_vfiprintf_r+0x204>)
    88de:	429f      	cmp	r7, r3
    88e0:	d101      	bne.n	88e6 <_vfiprintf_r+0x2e>
    88e2:	68b7      	ldr	r7, [r6, #8]
    88e4:	e003      	b.n	88ee <_vfiprintf_r+0x36>
    88e6:	4b76      	ldr	r3, [pc, #472]	; (8ac0 <_vfiprintf_r+0x208>)
    88e8:	429f      	cmp	r7, r3
    88ea:	d100      	bne.n	88ee <_vfiprintf_r+0x36>
    88ec:	68f7      	ldr	r7, [r6, #12]
    88ee:	89bb      	ldrh	r3, [r7, #12]
    88f0:	071b      	lsls	r3, r3, #28
    88f2:	d50a      	bpl.n	890a <_vfiprintf_r+0x52>
    88f4:	693b      	ldr	r3, [r7, #16]
    88f6:	2b00      	cmp	r3, #0
    88f8:	d007      	beq.n	890a <_vfiprintf_r+0x52>
    88fa:	2300      	movs	r3, #0
    88fc:	ad06      	add	r5, sp, #24
    88fe:	616b      	str	r3, [r5, #20]
    8900:	3320      	adds	r3, #32
    8902:	766b      	strb	r3, [r5, #25]
    8904:	3310      	adds	r3, #16
    8906:	76ab      	strb	r3, [r5, #26]
    8908:	e03d      	b.n	8986 <_vfiprintf_r+0xce>
    890a:	1c30      	adds	r0, r6, #0
    890c:	1c39      	adds	r1, r7, #0
    890e:	f002 fadf 	bl	aed0 <__swsetup_r>
    8912:	2800      	cmp	r0, #0
    8914:	d0f1      	beq.n	88fa <_vfiprintf_r+0x42>
    8916:	2001      	movs	r0, #1
    8918:	4240      	negs	r0, r0
    891a:	e0ca      	b.n	8ab2 <_vfiprintf_r+0x1fa>
    891c:	9a05      	ldr	r2, [sp, #20]
    891e:	1d11      	adds	r1, r2, #4
    8920:	6812      	ldr	r2, [r2, #0]
    8922:	9105      	str	r1, [sp, #20]
    8924:	2a00      	cmp	r2, #0
    8926:	db7e      	blt.n	8a26 <_vfiprintf_r+0x16e>
    8928:	9209      	str	r2, [sp, #36]	; 0x24
    892a:	3401      	adds	r4, #1
    892c:	7823      	ldrb	r3, [r4, #0]
    892e:	2b2e      	cmp	r3, #46	; 0x2e
    8930:	d100      	bne.n	8934 <_vfiprintf_r+0x7c>
    8932:	e089      	b.n	8a48 <_vfiprintf_r+0x190>
    8934:	7821      	ldrb	r1, [r4, #0]
    8936:	4863      	ldr	r0, [pc, #396]	; (8ac4 <_vfiprintf_r+0x20c>)
    8938:	2203      	movs	r2, #3
    893a:	f7ff fedb 	bl	86f4 <memchr>
    893e:	2800      	cmp	r0, #0
    8940:	d008      	beq.n	8954 <_vfiprintf_r+0x9c>
    8942:	4b60      	ldr	r3, [pc, #384]	; (8ac4 <_vfiprintf_r+0x20c>)
    8944:	3401      	adds	r4, #1
    8946:	1ac0      	subs	r0, r0, r3
    8948:	2340      	movs	r3, #64	; 0x40
    894a:	4083      	lsls	r3, r0
    894c:	1c18      	adds	r0, r3, #0
    894e:	682b      	ldr	r3, [r5, #0]
    8950:	4318      	orrs	r0, r3
    8952:	6028      	str	r0, [r5, #0]
    8954:	7821      	ldrb	r1, [r4, #0]
    8956:	1c63      	adds	r3, r4, #1
    8958:	485b      	ldr	r0, [pc, #364]	; (8ac8 <_vfiprintf_r+0x210>)
    895a:	2206      	movs	r2, #6
    895c:	9302      	str	r3, [sp, #8]
    895e:	7629      	strb	r1, [r5, #24]
    8960:	f7ff fec8 	bl	86f4 <memchr>
    8964:	2800      	cmp	r0, #0
    8966:	d100      	bne.n	896a <_vfiprintf_r+0xb2>
    8968:	e091      	b.n	8a8e <_vfiprintf_r+0x1d6>
    896a:	4b58      	ldr	r3, [pc, #352]	; (8acc <_vfiprintf_r+0x214>)
    896c:	2b00      	cmp	r3, #0
    896e:	d000      	beq.n	8972 <_vfiprintf_r+0xba>
    8970:	e084      	b.n	8a7c <_vfiprintf_r+0x1c4>
    8972:	2207      	movs	r2, #7
    8974:	9b05      	ldr	r3, [sp, #20]
    8976:	3307      	adds	r3, #7
    8978:	4393      	bics	r3, r2
    897a:	3308      	adds	r3, #8
    897c:	9305      	str	r3, [sp, #20]
    897e:	696b      	ldr	r3, [r5, #20]
    8980:	9a03      	ldr	r2, [sp, #12]
    8982:	189b      	adds	r3, r3, r2
    8984:	616b      	str	r3, [r5, #20]
    8986:	9c02      	ldr	r4, [sp, #8]
    8988:	7823      	ldrb	r3, [r4, #0]
    898a:	2b00      	cmp	r3, #0
    898c:	d104      	bne.n	8998 <_vfiprintf_r+0xe0>
    898e:	9b02      	ldr	r3, [sp, #8]
    8990:	1ae3      	subs	r3, r4, r3
    8992:	9304      	str	r3, [sp, #16]
    8994:	d011      	beq.n	89ba <_vfiprintf_r+0x102>
    8996:	e003      	b.n	89a0 <_vfiprintf_r+0xe8>
    8998:	2b25      	cmp	r3, #37	; 0x25
    899a:	d0f8      	beq.n	898e <_vfiprintf_r+0xd6>
    899c:	3401      	adds	r4, #1
    899e:	e7f3      	b.n	8988 <_vfiprintf_r+0xd0>
    89a0:	9b04      	ldr	r3, [sp, #16]
    89a2:	1c30      	adds	r0, r6, #0
    89a4:	1c39      	adds	r1, r7, #0
    89a6:	9a02      	ldr	r2, [sp, #8]
    89a8:	f7ff ff73 	bl	8892 <__sfputs_r>
    89ac:	1c43      	adds	r3, r0, #1
    89ae:	d07b      	beq.n	8aa8 <_vfiprintf_r+0x1f0>
    89b0:	696a      	ldr	r2, [r5, #20]
    89b2:	9b04      	ldr	r3, [sp, #16]
    89b4:	4694      	mov	ip, r2
    89b6:	4463      	add	r3, ip
    89b8:	616b      	str	r3, [r5, #20]
    89ba:	7823      	ldrb	r3, [r4, #0]
    89bc:	2b00      	cmp	r3, #0
    89be:	d073      	beq.n	8aa8 <_vfiprintf_r+0x1f0>
    89c0:	2201      	movs	r2, #1
    89c2:	2300      	movs	r3, #0
    89c4:	4252      	negs	r2, r2
    89c6:	606a      	str	r2, [r5, #4]
    89c8:	a902      	add	r1, sp, #8
    89ca:	3254      	adds	r2, #84	; 0x54
    89cc:	1852      	adds	r2, r2, r1
    89ce:	3401      	adds	r4, #1
    89d0:	602b      	str	r3, [r5, #0]
    89d2:	60eb      	str	r3, [r5, #12]
    89d4:	60ab      	str	r3, [r5, #8]
    89d6:	7013      	strb	r3, [r2, #0]
    89d8:	65ab      	str	r3, [r5, #88]	; 0x58
    89da:	7821      	ldrb	r1, [r4, #0]
    89dc:	483c      	ldr	r0, [pc, #240]	; (8ad0 <_vfiprintf_r+0x218>)
    89de:	2205      	movs	r2, #5
    89e0:	f7ff fe88 	bl	86f4 <memchr>
    89e4:	2800      	cmp	r0, #0
    89e6:	d009      	beq.n	89fc <_vfiprintf_r+0x144>
    89e8:	4b39      	ldr	r3, [pc, #228]	; (8ad0 <_vfiprintf_r+0x218>)
    89ea:	3401      	adds	r4, #1
    89ec:	1ac0      	subs	r0, r0, r3
    89ee:	2301      	movs	r3, #1
    89f0:	4083      	lsls	r3, r0
    89f2:	1c18      	adds	r0, r3, #0
    89f4:	682b      	ldr	r3, [r5, #0]
    89f6:	4318      	orrs	r0, r3
    89f8:	6028      	str	r0, [r5, #0]
    89fa:	e7ee      	b.n	89da <_vfiprintf_r+0x122>
    89fc:	682b      	ldr	r3, [r5, #0]
    89fe:	06da      	lsls	r2, r3, #27
    8a00:	d504      	bpl.n	8a0c <_vfiprintf_r+0x154>
    8a02:	2253      	movs	r2, #83	; 0x53
    8a04:	2120      	movs	r1, #32
    8a06:	a802      	add	r0, sp, #8
    8a08:	1812      	adds	r2, r2, r0
    8a0a:	7011      	strb	r1, [r2, #0]
    8a0c:	071a      	lsls	r2, r3, #28
    8a0e:	d504      	bpl.n	8a1a <_vfiprintf_r+0x162>
    8a10:	2253      	movs	r2, #83	; 0x53
    8a12:	212b      	movs	r1, #43	; 0x2b
    8a14:	a802      	add	r0, sp, #8
    8a16:	1812      	adds	r2, r2, r0
    8a18:	7011      	strb	r1, [r2, #0]
    8a1a:	7822      	ldrb	r2, [r4, #0]
    8a1c:	2a2a      	cmp	r2, #42	; 0x2a
    8a1e:	d100      	bne.n	8a22 <_vfiprintf_r+0x16a>
    8a20:	e77c      	b.n	891c <_vfiprintf_r+0x64>
    8a22:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8a24:	e005      	b.n	8a32 <_vfiprintf_r+0x17a>
    8a26:	4252      	negs	r2, r2
    8a28:	60ea      	str	r2, [r5, #12]
    8a2a:	2202      	movs	r2, #2
    8a2c:	4313      	orrs	r3, r2
    8a2e:	602b      	str	r3, [r5, #0]
    8a30:	e77b      	b.n	892a <_vfiprintf_r+0x72>
    8a32:	7822      	ldrb	r2, [r4, #0]
    8a34:	3a30      	subs	r2, #48	; 0x30
    8a36:	2a09      	cmp	r2, #9
    8a38:	d804      	bhi.n	8a44 <_vfiprintf_r+0x18c>
    8a3a:	210a      	movs	r1, #10
    8a3c:	434b      	muls	r3, r1
    8a3e:	3401      	adds	r4, #1
    8a40:	189b      	adds	r3, r3, r2
    8a42:	e7f6      	b.n	8a32 <_vfiprintf_r+0x17a>
    8a44:	9309      	str	r3, [sp, #36]	; 0x24
    8a46:	e771      	b.n	892c <_vfiprintf_r+0x74>
    8a48:	7863      	ldrb	r3, [r4, #1]
    8a4a:	2b2a      	cmp	r3, #42	; 0x2a
    8a4c:	d109      	bne.n	8a62 <_vfiprintf_r+0x1aa>
    8a4e:	9b05      	ldr	r3, [sp, #20]
    8a50:	3402      	adds	r4, #2
    8a52:	1d1a      	adds	r2, r3, #4
    8a54:	681b      	ldr	r3, [r3, #0]
    8a56:	9205      	str	r2, [sp, #20]
    8a58:	2b00      	cmp	r3, #0
    8a5a:	da0d      	bge.n	8a78 <_vfiprintf_r+0x1c0>
    8a5c:	2301      	movs	r3, #1
    8a5e:	425b      	negs	r3, r3
    8a60:	e00a      	b.n	8a78 <_vfiprintf_r+0x1c0>
    8a62:	2300      	movs	r3, #0
    8a64:	3401      	adds	r4, #1
    8a66:	7822      	ldrb	r2, [r4, #0]
    8a68:	3a30      	subs	r2, #48	; 0x30
    8a6a:	2a09      	cmp	r2, #9
    8a6c:	d804      	bhi.n	8a78 <_vfiprintf_r+0x1c0>
    8a6e:	210a      	movs	r1, #10
    8a70:	434b      	muls	r3, r1
    8a72:	3401      	adds	r4, #1
    8a74:	189b      	adds	r3, r3, r2
    8a76:	e7f6      	b.n	8a66 <_vfiprintf_r+0x1ae>
    8a78:	9307      	str	r3, [sp, #28]
    8a7a:	e75b      	b.n	8934 <_vfiprintf_r+0x7c>
    8a7c:	ab05      	add	r3, sp, #20
    8a7e:	9300      	str	r3, [sp, #0]
    8a80:	1c30      	adds	r0, r6, #0
    8a82:	1c29      	adds	r1, r5, #0
    8a84:	1c3a      	adds	r2, r7, #0
    8a86:	4b13      	ldr	r3, [pc, #76]	; (8ad4 <_vfiprintf_r+0x21c>)
    8a88:	f000 f8ca 	bl	8c20 <_printf_float>
    8a8c:	e007      	b.n	8a9e <_vfiprintf_r+0x1e6>
    8a8e:	ab05      	add	r3, sp, #20
    8a90:	9300      	str	r3, [sp, #0]
    8a92:	1c30      	adds	r0, r6, #0
    8a94:	1c29      	adds	r1, r5, #0
    8a96:	1c3a      	adds	r2, r7, #0
    8a98:	4b0e      	ldr	r3, [pc, #56]	; (8ad4 <_vfiprintf_r+0x21c>)
    8a9a:	f000 fb6d 	bl	9178 <_printf_i>
    8a9e:	9003      	str	r0, [sp, #12]
    8aa0:	9b03      	ldr	r3, [sp, #12]
    8aa2:	3301      	adds	r3, #1
    8aa4:	d000      	beq.n	8aa8 <_vfiprintf_r+0x1f0>
    8aa6:	e76a      	b.n	897e <_vfiprintf_r+0xc6>
    8aa8:	89bb      	ldrh	r3, [r7, #12]
    8aaa:	065b      	lsls	r3, r3, #25
    8aac:	d500      	bpl.n	8ab0 <_vfiprintf_r+0x1f8>
    8aae:	e732      	b.n	8916 <_vfiprintf_r+0x5e>
    8ab0:	980b      	ldr	r0, [sp, #44]	; 0x2c
    8ab2:	b01f      	add	sp, #124	; 0x7c
    8ab4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    8ab6:	46c0      	nop			; (mov r8, r8)
    8ab8:	0000e320 	.word	0x0000e320
    8abc:	0000e340 	.word	0x0000e340
    8ac0:	0000e360 	.word	0x0000e360
    8ac4:	0000e38e 	.word	0x0000e38e
    8ac8:	0000e392 	.word	0x0000e392
    8acc:	00008c21 	.word	0x00008c21
    8ad0:	0000e388 	.word	0x0000e388
    8ad4:	00008893 	.word	0x00008893

00008ad8 <vfiprintf>:
    8ad8:	b538      	push	{r3, r4, r5, lr}
    8ada:	1c05      	adds	r5, r0, #0
    8adc:	1c0c      	adds	r4, r1, #0
    8ade:	1c13      	adds	r3, r2, #0
    8ae0:	4a03      	ldr	r2, [pc, #12]	; (8af0 <vfiprintf+0x18>)
    8ae2:	1c29      	adds	r1, r5, #0
    8ae4:	6810      	ldr	r0, [r2, #0]
    8ae6:	1c22      	adds	r2, r4, #0
    8ae8:	f7ff fee6 	bl	88b8 <_vfiprintf_r>
    8aec:	bd38      	pop	{r3, r4, r5, pc}
    8aee:	46c0      	nop			; (mov r8, r8)
    8af0:	20000134 	.word	0x20000134

00008af4 <__cvt>:
    8af4:	b5f0      	push	{r4, r5, r6, r7, lr}
    8af6:	b08b      	sub	sp, #44	; 0x2c
    8af8:	1c14      	adds	r4, r2, #0
    8afa:	1e1d      	subs	r5, r3, #0
    8afc:	9912      	ldr	r1, [sp, #72]	; 0x48
    8afe:	da06      	bge.n	8b0e <__cvt+0x1a>
    8b00:	2480      	movs	r4, #128	; 0x80
    8b02:	0624      	lsls	r4, r4, #24
    8b04:	192b      	adds	r3, r5, r4
    8b06:	1c1d      	adds	r5, r3, #0
    8b08:	1c14      	adds	r4, r2, #0
    8b0a:	232d      	movs	r3, #45	; 0x2d
    8b0c:	e000      	b.n	8b10 <__cvt+0x1c>
    8b0e:	2300      	movs	r3, #0
    8b10:	700b      	strb	r3, [r1, #0]
    8b12:	2320      	movs	r3, #32
    8b14:	9e14      	ldr	r6, [sp, #80]	; 0x50
    8b16:	2203      	movs	r2, #3
    8b18:	439e      	bics	r6, r3
    8b1a:	2e46      	cmp	r6, #70	; 0x46
    8b1c:	d007      	beq.n	8b2e <__cvt+0x3a>
    8b1e:	1c33      	adds	r3, r6, #0
    8b20:	3b45      	subs	r3, #69	; 0x45
    8b22:	4259      	negs	r1, r3
    8b24:	414b      	adcs	r3, r1
    8b26:	9910      	ldr	r1, [sp, #64]	; 0x40
    8b28:	3a01      	subs	r2, #1
    8b2a:	18cb      	adds	r3, r1, r3
    8b2c:	9310      	str	r3, [sp, #64]	; 0x40
    8b2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
    8b30:	9200      	str	r2, [sp, #0]
    8b32:	9301      	str	r3, [sp, #4]
    8b34:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    8b36:	1c22      	adds	r2, r4, #0
    8b38:	9302      	str	r3, [sp, #8]
    8b3a:	ab08      	add	r3, sp, #32
    8b3c:	9303      	str	r3, [sp, #12]
    8b3e:	ab09      	add	r3, sp, #36	; 0x24
    8b40:	9304      	str	r3, [sp, #16]
    8b42:	1c2b      	adds	r3, r5, #0
    8b44:	f002 fad2 	bl	b0ec <_dtoa_r>
    8b48:	1c07      	adds	r7, r0, #0
    8b4a:	2e47      	cmp	r6, #71	; 0x47
    8b4c:	d102      	bne.n	8b54 <__cvt+0x60>
    8b4e:	9b11      	ldr	r3, [sp, #68]	; 0x44
    8b50:	07db      	lsls	r3, r3, #31
    8b52:	d52c      	bpl.n	8bae <__cvt+0xba>
    8b54:	9b10      	ldr	r3, [sp, #64]	; 0x40
    8b56:	18fb      	adds	r3, r7, r3
    8b58:	9307      	str	r3, [sp, #28]
    8b5a:	2e46      	cmp	r6, #70	; 0x46
    8b5c:	d114      	bne.n	8b88 <__cvt+0x94>
    8b5e:	783b      	ldrb	r3, [r7, #0]
    8b60:	2b30      	cmp	r3, #48	; 0x30
    8b62:	d10c      	bne.n	8b7e <__cvt+0x8a>
    8b64:	1c20      	adds	r0, r4, #0
    8b66:	1c29      	adds	r1, r5, #0
    8b68:	2200      	movs	r2, #0
    8b6a:	2300      	movs	r3, #0
    8b6c:	f7fd fadc 	bl	6128 <__aeabi_dcmpeq>
    8b70:	2800      	cmp	r0, #0
    8b72:	d104      	bne.n	8b7e <__cvt+0x8a>
    8b74:	2301      	movs	r3, #1
    8b76:	9a10      	ldr	r2, [sp, #64]	; 0x40
    8b78:	1a9b      	subs	r3, r3, r2
    8b7a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    8b7c:	6013      	str	r3, [r2, #0]
    8b7e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    8b80:	9a07      	ldr	r2, [sp, #28]
    8b82:	681b      	ldr	r3, [r3, #0]
    8b84:	18d3      	adds	r3, r2, r3
    8b86:	9307      	str	r3, [sp, #28]
    8b88:	1c20      	adds	r0, r4, #0
    8b8a:	1c29      	adds	r1, r5, #0
    8b8c:	2200      	movs	r2, #0
    8b8e:	2300      	movs	r3, #0
    8b90:	f7fd faca 	bl	6128 <__aeabi_dcmpeq>
    8b94:	2800      	cmp	r0, #0
    8b96:	d001      	beq.n	8b9c <__cvt+0xa8>
    8b98:	9b07      	ldr	r3, [sp, #28]
    8b9a:	9309      	str	r3, [sp, #36]	; 0x24
    8b9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8b9e:	9a07      	ldr	r2, [sp, #28]
    8ba0:	4293      	cmp	r3, r2
    8ba2:	d204      	bcs.n	8bae <__cvt+0xba>
    8ba4:	1c5a      	adds	r2, r3, #1
    8ba6:	9209      	str	r2, [sp, #36]	; 0x24
    8ba8:	2230      	movs	r2, #48	; 0x30
    8baa:	701a      	strb	r2, [r3, #0]
    8bac:	e7f6      	b.n	8b9c <__cvt+0xa8>
    8bae:	1c38      	adds	r0, r7, #0
    8bb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8bb2:	9a15      	ldr	r2, [sp, #84]	; 0x54
    8bb4:	1bdb      	subs	r3, r3, r7
    8bb6:	6013      	str	r3, [r2, #0]
    8bb8:	b00b      	add	sp, #44	; 0x2c
    8bba:	bdf0      	pop	{r4, r5, r6, r7, pc}

00008bbc <__exponent>:
    8bbc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    8bbe:	232b      	movs	r3, #43	; 0x2b
    8bc0:	1c07      	adds	r7, r0, #0
    8bc2:	1c0c      	adds	r4, r1, #0
    8bc4:	7002      	strb	r2, [r0, #0]
    8bc6:	1c86      	adds	r6, r0, #2
    8bc8:	2900      	cmp	r1, #0
    8bca:	da01      	bge.n	8bd0 <__exponent+0x14>
    8bcc:	232d      	movs	r3, #45	; 0x2d
    8bce:	424c      	negs	r4, r1
    8bd0:	707b      	strb	r3, [r7, #1]
    8bd2:	2c09      	cmp	r4, #9
    8bd4:	dd1c      	ble.n	8c10 <__exponent+0x54>
    8bd6:	466b      	mov	r3, sp
    8bd8:	1ddd      	adds	r5, r3, #7
    8bda:	1c20      	adds	r0, r4, #0
    8bdc:	210a      	movs	r1, #10
    8bde:	f7fd fa87 	bl	60f0 <__aeabi_idivmod>
    8be2:	3d01      	subs	r5, #1
    8be4:	3130      	adds	r1, #48	; 0x30
    8be6:	7029      	strb	r1, [r5, #0]
    8be8:	1c20      	adds	r0, r4, #0
    8bea:	210a      	movs	r1, #10
    8bec:	f7fd f99a 	bl	5f24 <__aeabi_idiv>
    8bf0:	1e04      	subs	r4, r0, #0
    8bf2:	2c09      	cmp	r4, #9
    8bf4:	dcf1      	bgt.n	8bda <__exponent+0x1e>
    8bf6:	3d01      	subs	r5, #1
    8bf8:	3430      	adds	r4, #48	; 0x30
    8bfa:	702c      	strb	r4, [r5, #0]
    8bfc:	466b      	mov	r3, sp
    8bfe:	3307      	adds	r3, #7
    8c00:	1c30      	adds	r0, r6, #0
    8c02:	42ab      	cmp	r3, r5
    8c04:	d909      	bls.n	8c1a <__exponent+0x5e>
    8c06:	782b      	ldrb	r3, [r5, #0]
    8c08:	3501      	adds	r5, #1
    8c0a:	7033      	strb	r3, [r6, #0]
    8c0c:	3601      	adds	r6, #1
    8c0e:	e7f5      	b.n	8bfc <__exponent+0x40>
    8c10:	2330      	movs	r3, #48	; 0x30
    8c12:	18e4      	adds	r4, r4, r3
    8c14:	7033      	strb	r3, [r6, #0]
    8c16:	1cb0      	adds	r0, r6, #2
    8c18:	7074      	strb	r4, [r6, #1]
    8c1a:	1bc0      	subs	r0, r0, r7
    8c1c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

00008c20 <_printf_float>:
    8c20:	b5f0      	push	{r4, r5, r6, r7, lr}
    8c22:	b093      	sub	sp, #76	; 0x4c
    8c24:	1c0c      	adds	r4, r1, #0
    8c26:	9208      	str	r2, [sp, #32]
    8c28:	9309      	str	r3, [sp, #36]	; 0x24
    8c2a:	9e18      	ldr	r6, [sp, #96]	; 0x60
    8c2c:	1c05      	adds	r5, r0, #0
    8c2e:	f003 fbd1 	bl	c3d4 <_localeconv_r>
    8c32:	6803      	ldr	r3, [r0, #0]
    8c34:	1c18      	adds	r0, r3, #0
    8c36:	930b      	str	r3, [sp, #44]	; 0x2c
    8c38:	f001 f91a 	bl	9e70 <strlen>
    8c3c:	2300      	movs	r3, #0
    8c3e:	6821      	ldr	r1, [r4, #0]
    8c40:	9310      	str	r3, [sp, #64]	; 0x40
    8c42:	900c      	str	r0, [sp, #48]	; 0x30
    8c44:	7e27      	ldrb	r7, [r4, #24]
    8c46:	6833      	ldr	r3, [r6, #0]
    8c48:	2207      	movs	r2, #7
    8c4a:	05c9      	lsls	r1, r1, #23
    8c4c:	d501      	bpl.n	8c52 <_printf_float+0x32>
    8c4e:	189b      	adds	r3, r3, r2
    8c50:	e000      	b.n	8c54 <_printf_float+0x34>
    8c52:	3307      	adds	r3, #7
    8c54:	4393      	bics	r3, r2
    8c56:	1c1a      	adds	r2, r3, #0
    8c58:	3208      	adds	r2, #8
    8c5a:	6032      	str	r2, [r6, #0]
    8c5c:	681a      	ldr	r2, [r3, #0]
    8c5e:	685b      	ldr	r3, [r3, #4]
    8c60:	64a2      	str	r2, [r4, #72]	; 0x48
    8c62:	64e3      	str	r3, [r4, #76]	; 0x4c
    8c64:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    8c66:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    8c68:	f000 ff60 	bl	9b2c <__fpclassifyd>
    8c6c:	2801      	cmp	r0, #1
    8c6e:	d118      	bne.n	8ca2 <_printf_float+0x82>
    8c70:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    8c72:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    8c74:	2200      	movs	r2, #0
    8c76:	2300      	movs	r3, #0
    8c78:	f7fd fa5c 	bl	6134 <__aeabi_dcmplt>
    8c7c:	2800      	cmp	r0, #0
    8c7e:	d003      	beq.n	8c88 <_printf_float+0x68>
    8c80:	1c23      	adds	r3, r4, #0
    8c82:	222d      	movs	r2, #45	; 0x2d
    8c84:	3343      	adds	r3, #67	; 0x43
    8c86:	701a      	strb	r2, [r3, #0]
    8c88:	4bb6      	ldr	r3, [pc, #728]	; (8f64 <_printf_float+0x344>)
    8c8a:	930a      	str	r3, [sp, #40]	; 0x28
    8c8c:	2f47      	cmp	r7, #71	; 0x47
    8c8e:	d901      	bls.n	8c94 <_printf_float+0x74>
    8c90:	4bb5      	ldr	r3, [pc, #724]	; (8f68 <_printf_float+0x348>)
    8c92:	930a      	str	r3, [sp, #40]	; 0x28
    8c94:	2303      	movs	r3, #3
    8c96:	6822      	ldr	r2, [r4, #0]
    8c98:	6123      	str	r3, [r4, #16]
    8c9a:	3301      	adds	r3, #1
    8c9c:	439a      	bics	r2, r3
    8c9e:	6022      	str	r2, [r4, #0]
    8ca0:	e012      	b.n	8cc8 <_printf_float+0xa8>
    8ca2:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    8ca4:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    8ca6:	f000 ff41 	bl	9b2c <__fpclassifyd>
    8caa:	6826      	ldr	r6, [r4, #0]
    8cac:	2800      	cmp	r0, #0
    8cae:	d10d      	bne.n	8ccc <_printf_float+0xac>
    8cb0:	4bae      	ldr	r3, [pc, #696]	; (8f6c <_printf_float+0x34c>)
    8cb2:	930a      	str	r3, [sp, #40]	; 0x28
    8cb4:	2f47      	cmp	r7, #71	; 0x47
    8cb6:	d901      	bls.n	8cbc <_printf_float+0x9c>
    8cb8:	4bad      	ldr	r3, [pc, #692]	; (8f70 <_printf_float+0x350>)
    8cba:	930a      	str	r3, [sp, #40]	; 0x28
    8cbc:	2303      	movs	r3, #3
    8cbe:	1c31      	adds	r1, r6, #0
    8cc0:	6123      	str	r3, [r4, #16]
    8cc2:	3301      	adds	r3, #1
    8cc4:	4399      	bics	r1, r3
    8cc6:	6021      	str	r1, [r4, #0]
    8cc8:	2600      	movs	r6, #0
    8cca:	e080      	b.n	8dce <_printf_float+0x1ae>
    8ccc:	2180      	movs	r1, #128	; 0x80
    8cce:	6860      	ldr	r0, [r4, #4]
    8cd0:	00c9      	lsls	r1, r1, #3
    8cd2:	1c43      	adds	r3, r0, #1
    8cd4:	d101      	bne.n	8cda <_printf_float+0xba>
    8cd6:	2306      	movs	r3, #6
    8cd8:	e009      	b.n	8cee <_printf_float+0xce>
    8cda:	6ca2      	ldr	r2, [r4, #72]	; 0x48
    8cdc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
    8cde:	2f67      	cmp	r7, #103	; 0x67
    8ce0:	d001      	beq.n	8ce6 <_printf_float+0xc6>
    8ce2:	2f47      	cmp	r7, #71	; 0x47
    8ce4:	d104      	bne.n	8cf0 <_printf_float+0xd0>
    8ce6:	2800      	cmp	r0, #0
    8ce8:	d000      	beq.n	8cec <_printf_float+0xcc>
    8cea:	e1c0      	b.n	906e <_printf_float+0x44e>
    8cec:	2301      	movs	r3, #1
    8cee:	6063      	str	r3, [r4, #4]
    8cf0:	6863      	ldr	r3, [r4, #4]
    8cf2:	4331      	orrs	r1, r6
    8cf4:	9300      	str	r3, [sp, #0]
    8cf6:	2323      	movs	r3, #35	; 0x23
    8cf8:	6021      	str	r1, [r4, #0]
    8cfa:	9101      	str	r1, [sp, #4]
    8cfc:	2100      	movs	r1, #0
    8cfe:	aa06      	add	r2, sp, #24
    8d00:	189b      	adds	r3, r3, r2
    8d02:	9302      	str	r3, [sp, #8]
    8d04:	ab0f      	add	r3, sp, #60	; 0x3c
    8d06:	9303      	str	r3, [sp, #12]
    8d08:	ab10      	add	r3, sp, #64	; 0x40
    8d0a:	9305      	str	r3, [sp, #20]
    8d0c:	9704      	str	r7, [sp, #16]
    8d0e:	6ca2      	ldr	r2, [r4, #72]	; 0x48
    8d10:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
    8d12:	9106      	str	r1, [sp, #24]
    8d14:	1c28      	adds	r0, r5, #0
    8d16:	f7ff feed 	bl	8af4 <__cvt>
    8d1a:	2320      	movs	r3, #32
    8d1c:	1c3a      	adds	r2, r7, #0
    8d1e:	900a      	str	r0, [sp, #40]	; 0x28
    8d20:	439a      	bics	r2, r3
    8d22:	2a47      	cmp	r2, #71	; 0x47
    8d24:	d107      	bne.n	8d36 <_printf_float+0x116>
    8d26:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    8d28:	1cda      	adds	r2, r3, #3
    8d2a:	db02      	blt.n	8d32 <_printf_float+0x112>
    8d2c:	6862      	ldr	r2, [r4, #4]
    8d2e:	4293      	cmp	r3, r2
    8d30:	dd2d      	ble.n	8d8e <_printf_float+0x16e>
    8d32:	3f02      	subs	r7, #2
    8d34:	b2ff      	uxtb	r7, r7
    8d36:	990f      	ldr	r1, [sp, #60]	; 0x3c
    8d38:	2f65      	cmp	r7, #101	; 0x65
    8d3a:	d812      	bhi.n	8d62 <_printf_float+0x142>
    8d3c:	1c20      	adds	r0, r4, #0
    8d3e:	3901      	subs	r1, #1
    8d40:	1c3a      	adds	r2, r7, #0
    8d42:	3050      	adds	r0, #80	; 0x50
    8d44:	910f      	str	r1, [sp, #60]	; 0x3c
    8d46:	f7ff ff39 	bl	8bbc <__exponent>
    8d4a:	9a10      	ldr	r2, [sp, #64]	; 0x40
    8d4c:	1c06      	adds	r6, r0, #0
    8d4e:	1883      	adds	r3, r0, r2
    8d50:	6123      	str	r3, [r4, #16]
    8d52:	2a01      	cmp	r2, #1
    8d54:	dc02      	bgt.n	8d5c <_printf_float+0x13c>
    8d56:	6822      	ldr	r2, [r4, #0]
    8d58:	07d2      	lsls	r2, r2, #31
    8d5a:	d52e      	bpl.n	8dba <_printf_float+0x19a>
    8d5c:	3301      	adds	r3, #1
    8d5e:	6123      	str	r3, [r4, #16]
    8d60:	e02b      	b.n	8dba <_printf_float+0x19a>
    8d62:	2f66      	cmp	r7, #102	; 0x66
    8d64:	d114      	bne.n	8d90 <_printf_float+0x170>
    8d66:	6863      	ldr	r3, [r4, #4]
    8d68:	2900      	cmp	r1, #0
    8d6a:	dd08      	ble.n	8d7e <_printf_float+0x15e>
    8d6c:	6121      	str	r1, [r4, #16]
    8d6e:	2b00      	cmp	r3, #0
    8d70:	d102      	bne.n	8d78 <_printf_float+0x158>
    8d72:	6822      	ldr	r2, [r4, #0]
    8d74:	07d2      	lsls	r2, r2, #31
    8d76:	d51d      	bpl.n	8db4 <_printf_float+0x194>
    8d78:	3301      	adds	r3, #1
    8d7a:	18cb      	adds	r3, r1, r3
    8d7c:	e011      	b.n	8da2 <_printf_float+0x182>
    8d7e:	2b00      	cmp	r3, #0
    8d80:	d103      	bne.n	8d8a <_printf_float+0x16a>
    8d82:	2201      	movs	r2, #1
    8d84:	6821      	ldr	r1, [r4, #0]
    8d86:	4211      	tst	r1, r2
    8d88:	d013      	beq.n	8db2 <_printf_float+0x192>
    8d8a:	1c9a      	adds	r2, r3, #2
    8d8c:	e011      	b.n	8db2 <_printf_float+0x192>
    8d8e:	2767      	movs	r7, #103	; 0x67
    8d90:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    8d92:	9810      	ldr	r0, [sp, #64]	; 0x40
    8d94:	4283      	cmp	r3, r0
    8d96:	db06      	blt.n	8da6 <_printf_float+0x186>
    8d98:	6822      	ldr	r2, [r4, #0]
    8d9a:	6123      	str	r3, [r4, #16]
    8d9c:	07d2      	lsls	r2, r2, #31
    8d9e:	d509      	bpl.n	8db4 <_printf_float+0x194>
    8da0:	3301      	adds	r3, #1
    8da2:	6123      	str	r3, [r4, #16]
    8da4:	e006      	b.n	8db4 <_printf_float+0x194>
    8da6:	2201      	movs	r2, #1
    8da8:	2b00      	cmp	r3, #0
    8daa:	dc01      	bgt.n	8db0 <_printf_float+0x190>
    8dac:	2102      	movs	r1, #2
    8dae:	1aca      	subs	r2, r1, r3
    8db0:	1882      	adds	r2, r0, r2
    8db2:	6122      	str	r2, [r4, #16]
    8db4:	2600      	movs	r6, #0
    8db6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    8db8:	65a3      	str	r3, [r4, #88]	; 0x58
    8dba:	2323      	movs	r3, #35	; 0x23
    8dbc:	aa06      	add	r2, sp, #24
    8dbe:	189b      	adds	r3, r3, r2
    8dc0:	781b      	ldrb	r3, [r3, #0]
    8dc2:	2b00      	cmp	r3, #0
    8dc4:	d003      	beq.n	8dce <_printf_float+0x1ae>
    8dc6:	1c23      	adds	r3, r4, #0
    8dc8:	222d      	movs	r2, #45	; 0x2d
    8dca:	3343      	adds	r3, #67	; 0x43
    8dcc:	701a      	strb	r2, [r3, #0]
    8dce:	9b09      	ldr	r3, [sp, #36]	; 0x24
    8dd0:	1c28      	adds	r0, r5, #0
    8dd2:	9300      	str	r3, [sp, #0]
    8dd4:	1c21      	adds	r1, r4, #0
    8dd6:	9b08      	ldr	r3, [sp, #32]
    8dd8:	aa11      	add	r2, sp, #68	; 0x44
    8dda:	f000 f95f 	bl	909c <_printf_common>
    8dde:	1c43      	adds	r3, r0, #1
    8de0:	d102      	bne.n	8de8 <_printf_float+0x1c8>
    8de2:	2001      	movs	r0, #1
    8de4:	4240      	negs	r0, r0
    8de6:	e156      	b.n	9096 <_printf_float+0x476>
    8de8:	6822      	ldr	r2, [r4, #0]
    8dea:	0553      	lsls	r3, r2, #21
    8dec:	d404      	bmi.n	8df8 <_printf_float+0x1d8>
    8dee:	1c28      	adds	r0, r5, #0
    8df0:	9908      	ldr	r1, [sp, #32]
    8df2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8df4:	6923      	ldr	r3, [r4, #16]
    8df6:	e116      	b.n	9026 <_printf_float+0x406>
    8df8:	2f65      	cmp	r7, #101	; 0x65
    8dfa:	d800      	bhi.n	8dfe <_printf_float+0x1de>
    8dfc:	e0d4      	b.n	8fa8 <_printf_float+0x388>
    8dfe:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    8e00:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    8e02:	2200      	movs	r2, #0
    8e04:	2300      	movs	r3, #0
    8e06:	f7fd f98f 	bl	6128 <__aeabi_dcmpeq>
    8e0a:	2800      	cmp	r0, #0
    8e0c:	d02b      	beq.n	8e66 <_printf_float+0x246>
    8e0e:	2301      	movs	r3, #1
    8e10:	1c28      	adds	r0, r5, #0
    8e12:	9908      	ldr	r1, [sp, #32]
    8e14:	4a57      	ldr	r2, [pc, #348]	; (8f74 <_printf_float+0x354>)
    8e16:	9e09      	ldr	r6, [sp, #36]	; 0x24
    8e18:	47b0      	blx	r6
    8e1a:	1c43      	adds	r3, r0, #1
    8e1c:	d0e1      	beq.n	8de2 <_printf_float+0x1c2>
    8e1e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    8e20:	9a10      	ldr	r2, [sp, #64]	; 0x40
    8e22:	4293      	cmp	r3, r2
    8e24:	db07      	blt.n	8e36 <_printf_float+0x216>
    8e26:	6823      	ldr	r3, [r4, #0]
    8e28:	07db      	lsls	r3, r3, #31
    8e2a:	d404      	bmi.n	8e36 <_printf_float+0x216>
    8e2c:	6823      	ldr	r3, [r4, #0]
    8e2e:	079b      	lsls	r3, r3, #30
    8e30:	d500      	bpl.n	8e34 <_printf_float+0x214>
    8e32:	e11a      	b.n	906a <_printf_float+0x44a>
    8e34:	e113      	b.n	905e <_printf_float+0x43e>
    8e36:	9e09      	ldr	r6, [sp, #36]	; 0x24
    8e38:	1c28      	adds	r0, r5, #0
    8e3a:	9908      	ldr	r1, [sp, #32]
    8e3c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    8e3e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8e40:	47b0      	blx	r6
    8e42:	2600      	movs	r6, #0
    8e44:	1c43      	adds	r3, r0, #1
    8e46:	d0cc      	beq.n	8de2 <_printf_float+0x1c2>
    8e48:	9b10      	ldr	r3, [sp, #64]	; 0x40
    8e4a:	3b01      	subs	r3, #1
    8e4c:	429e      	cmp	r6, r3
    8e4e:	daed      	bge.n	8e2c <_printf_float+0x20c>
    8e50:	1c22      	adds	r2, r4, #0
    8e52:	2301      	movs	r3, #1
    8e54:	1c28      	adds	r0, r5, #0
    8e56:	9908      	ldr	r1, [sp, #32]
    8e58:	321a      	adds	r2, #26
    8e5a:	9f09      	ldr	r7, [sp, #36]	; 0x24
    8e5c:	47b8      	blx	r7
    8e5e:	1c43      	adds	r3, r0, #1
    8e60:	d0bf      	beq.n	8de2 <_printf_float+0x1c2>
    8e62:	3601      	adds	r6, #1
    8e64:	e7f0      	b.n	8e48 <_printf_float+0x228>
    8e66:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    8e68:	2b00      	cmp	r3, #0
    8e6a:	dc2b      	bgt.n	8ec4 <_printf_float+0x2a4>
    8e6c:	2301      	movs	r3, #1
    8e6e:	1c28      	adds	r0, r5, #0
    8e70:	9908      	ldr	r1, [sp, #32]
    8e72:	4a40      	ldr	r2, [pc, #256]	; (8f74 <_printf_float+0x354>)
    8e74:	9e09      	ldr	r6, [sp, #36]	; 0x24
    8e76:	47b0      	blx	r6
    8e78:	1c43      	adds	r3, r0, #1
    8e7a:	d0b2      	beq.n	8de2 <_printf_float+0x1c2>
    8e7c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    8e7e:	2b00      	cmp	r3, #0
    8e80:	d105      	bne.n	8e8e <_printf_float+0x26e>
    8e82:	9b10      	ldr	r3, [sp, #64]	; 0x40
    8e84:	2b00      	cmp	r3, #0
    8e86:	d102      	bne.n	8e8e <_printf_float+0x26e>
    8e88:	6823      	ldr	r3, [r4, #0]
    8e8a:	07db      	lsls	r3, r3, #31
    8e8c:	d5ce      	bpl.n	8e2c <_printf_float+0x20c>
    8e8e:	9e09      	ldr	r6, [sp, #36]	; 0x24
    8e90:	1c28      	adds	r0, r5, #0
    8e92:	9908      	ldr	r1, [sp, #32]
    8e94:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    8e96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8e98:	47b0      	blx	r6
    8e9a:	2600      	movs	r6, #0
    8e9c:	1c43      	adds	r3, r0, #1
    8e9e:	d0a0      	beq.n	8de2 <_printf_float+0x1c2>
    8ea0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    8ea2:	1c28      	adds	r0, r5, #0
    8ea4:	425b      	negs	r3, r3
    8ea6:	9908      	ldr	r1, [sp, #32]
    8ea8:	429e      	cmp	r6, r3
    8eaa:	da08      	bge.n	8ebe <_printf_float+0x29e>
    8eac:	1c22      	adds	r2, r4, #0
    8eae:	2301      	movs	r3, #1
    8eb0:	321a      	adds	r2, #26
    8eb2:	9f09      	ldr	r7, [sp, #36]	; 0x24
    8eb4:	47b8      	blx	r7
    8eb6:	1c43      	adds	r3, r0, #1
    8eb8:	d093      	beq.n	8de2 <_printf_float+0x1c2>
    8eba:	3601      	adds	r6, #1
    8ebc:	e7f0      	b.n	8ea0 <_printf_float+0x280>
    8ebe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8ec0:	9b10      	ldr	r3, [sp, #64]	; 0x40
    8ec2:	e0b0      	b.n	9026 <_printf_float+0x406>
    8ec4:	9b10      	ldr	r3, [sp, #64]	; 0x40
    8ec6:	6da6      	ldr	r6, [r4, #88]	; 0x58
    8ec8:	429e      	cmp	r6, r3
    8eca:	dd00      	ble.n	8ece <_printf_float+0x2ae>
    8ecc:	1c1e      	adds	r6, r3, #0
    8ece:	2e00      	cmp	r6, #0
    8ed0:	dc01      	bgt.n	8ed6 <_printf_float+0x2b6>
    8ed2:	2300      	movs	r3, #0
    8ed4:	e014      	b.n	8f00 <_printf_float+0x2e0>
    8ed6:	1c33      	adds	r3, r6, #0
    8ed8:	1c28      	adds	r0, r5, #0
    8eda:	9908      	ldr	r1, [sp, #32]
    8edc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8ede:	9f09      	ldr	r7, [sp, #36]	; 0x24
    8ee0:	47b8      	blx	r7
    8ee2:	1c43      	adds	r3, r0, #1
    8ee4:	d1f5      	bne.n	8ed2 <_printf_float+0x2b2>
    8ee6:	e77c      	b.n	8de2 <_printf_float+0x1c2>
    8ee8:	1c22      	adds	r2, r4, #0
    8eea:	2301      	movs	r3, #1
    8eec:	1c28      	adds	r0, r5, #0
    8eee:	9908      	ldr	r1, [sp, #32]
    8ef0:	321a      	adds	r2, #26
    8ef2:	9f09      	ldr	r7, [sp, #36]	; 0x24
    8ef4:	47b8      	blx	r7
    8ef6:	1c43      	adds	r3, r0, #1
    8ef8:	d100      	bne.n	8efc <_printf_float+0x2dc>
    8efa:	e772      	b.n	8de2 <_printf_float+0x1c2>
    8efc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    8efe:	3301      	adds	r3, #1
    8f00:	930d      	str	r3, [sp, #52]	; 0x34
    8f02:	43f3      	mvns	r3, r6
    8f04:	6da2      	ldr	r2, [r4, #88]	; 0x58
    8f06:	17db      	asrs	r3, r3, #31
    8f08:	990d      	ldr	r1, [sp, #52]	; 0x34
    8f0a:	4033      	ands	r3, r6
    8f0c:	1ad3      	subs	r3, r2, r3
    8f0e:	4299      	cmp	r1, r3
    8f10:	dbea      	blt.n	8ee8 <_printf_float+0x2c8>
    8f12:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8f14:	189e      	adds	r6, r3, r2
    8f16:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    8f18:	9a10      	ldr	r2, [sp, #64]	; 0x40
    8f1a:	4293      	cmp	r3, r2
    8f1c:	db0e      	blt.n	8f3c <_printf_float+0x31c>
    8f1e:	6823      	ldr	r3, [r4, #0]
    8f20:	07db      	lsls	r3, r3, #31
    8f22:	d40b      	bmi.n	8f3c <_printf_float+0x31c>
    8f24:	9b10      	ldr	r3, [sp, #64]	; 0x40
    8f26:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8f28:	18d7      	adds	r7, r2, r3
    8f2a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    8f2c:	1bbf      	subs	r7, r7, r6
    8f2e:	1a9b      	subs	r3, r3, r2
    8f30:	429f      	cmp	r7, r3
    8f32:	dd00      	ble.n	8f36 <_printf_float+0x316>
    8f34:	1c1f      	adds	r7, r3, #0
    8f36:	2f00      	cmp	r7, #0
    8f38:	dc09      	bgt.n	8f4e <_printf_float+0x32e>
    8f3a:	e011      	b.n	8f60 <_printf_float+0x340>
    8f3c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8f3e:	1c28      	adds	r0, r5, #0
    8f40:	9908      	ldr	r1, [sp, #32]
    8f42:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    8f44:	9f09      	ldr	r7, [sp, #36]	; 0x24
    8f46:	47b8      	blx	r7
    8f48:	1c43      	adds	r3, r0, #1
    8f4a:	d1eb      	bne.n	8f24 <_printf_float+0x304>
    8f4c:	e749      	b.n	8de2 <_printf_float+0x1c2>
    8f4e:	1c32      	adds	r2, r6, #0
    8f50:	1c3b      	adds	r3, r7, #0
    8f52:	1c28      	adds	r0, r5, #0
    8f54:	9908      	ldr	r1, [sp, #32]
    8f56:	9e09      	ldr	r6, [sp, #36]	; 0x24
    8f58:	47b0      	blx	r6
    8f5a:	1c43      	adds	r3, r0, #1
    8f5c:	d100      	bne.n	8f60 <_printf_float+0x340>
    8f5e:	e740      	b.n	8de2 <_printf_float+0x1c2>
    8f60:	2300      	movs	r3, #0
    8f62:	e015      	b.n	8f90 <_printf_float+0x370>
    8f64:	0000e399 	.word	0x0000e399
    8f68:	0000e39d 	.word	0x0000e39d
    8f6c:	0000e3a1 	.word	0x0000e3a1
    8f70:	0000e3a5 	.word	0x0000e3a5
    8f74:	0000e3f2 	.word	0x0000e3f2
    8f78:	1c22      	adds	r2, r4, #0
    8f7a:	2301      	movs	r3, #1
    8f7c:	1c28      	adds	r0, r5, #0
    8f7e:	9908      	ldr	r1, [sp, #32]
    8f80:	321a      	adds	r2, #26
    8f82:	9e09      	ldr	r6, [sp, #36]	; 0x24
    8f84:	47b0      	blx	r6
    8f86:	1c43      	adds	r3, r0, #1
    8f88:	d100      	bne.n	8f8c <_printf_float+0x36c>
    8f8a:	e72a      	b.n	8de2 <_printf_float+0x1c2>
    8f8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    8f8e:	3301      	adds	r3, #1
    8f90:	930a      	str	r3, [sp, #40]	; 0x28
    8f92:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    8f94:	9b10      	ldr	r3, [sp, #64]	; 0x40
    8f96:	1a9a      	subs	r2, r3, r2
    8f98:	43fb      	mvns	r3, r7
    8f9a:	17db      	asrs	r3, r3, #31
    8f9c:	403b      	ands	r3, r7
    8f9e:	1ad3      	subs	r3, r2, r3
    8fa0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8fa2:	429a      	cmp	r2, r3
    8fa4:	dbe8      	blt.n	8f78 <_printf_float+0x358>
    8fa6:	e741      	b.n	8e2c <_printf_float+0x20c>
    8fa8:	9b10      	ldr	r3, [sp, #64]	; 0x40
    8faa:	1c28      	adds	r0, r5, #0
    8fac:	9908      	ldr	r1, [sp, #32]
    8fae:	2b01      	cmp	r3, #1
    8fb0:	dc02      	bgt.n	8fb8 <_printf_float+0x398>
    8fb2:	2301      	movs	r3, #1
    8fb4:	421a      	tst	r2, r3
    8fb6:	d03c      	beq.n	9032 <_printf_float+0x412>
    8fb8:	2301      	movs	r3, #1
    8fba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8fbc:	9f09      	ldr	r7, [sp, #36]	; 0x24
    8fbe:	47b8      	blx	r7
    8fc0:	1c43      	adds	r3, r0, #1
    8fc2:	d100      	bne.n	8fc6 <_printf_float+0x3a6>
    8fc4:	e70d      	b.n	8de2 <_printf_float+0x1c2>
    8fc6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    8fc8:	1c28      	adds	r0, r5, #0
    8fca:	9908      	ldr	r1, [sp, #32]
    8fcc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    8fce:	9f09      	ldr	r7, [sp, #36]	; 0x24
    8fd0:	47b8      	blx	r7
    8fd2:	1c43      	adds	r3, r0, #1
    8fd4:	d100      	bne.n	8fd8 <_printf_float+0x3b8>
    8fd6:	e704      	b.n	8de2 <_printf_float+0x1c2>
    8fd8:	6ca0      	ldr	r0, [r4, #72]	; 0x48
    8fda:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
    8fdc:	2300      	movs	r3, #0
    8fde:	2200      	movs	r2, #0
    8fe0:	f7fd f8a2 	bl	6128 <__aeabi_dcmpeq>
    8fe4:	2300      	movs	r3, #0
    8fe6:	2800      	cmp	r0, #0
    8fe8:	d112      	bne.n	9010 <_printf_float+0x3f0>
    8fea:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    8fec:	9b10      	ldr	r3, [sp, #64]	; 0x40
    8fee:	3201      	adds	r2, #1
    8ff0:	3b01      	subs	r3, #1
    8ff2:	1c28      	adds	r0, r5, #0
    8ff4:	9908      	ldr	r1, [sp, #32]
    8ff6:	e01d      	b.n	9034 <_printf_float+0x414>
    8ff8:	1c22      	adds	r2, r4, #0
    8ffa:	2301      	movs	r3, #1
    8ffc:	1c28      	adds	r0, r5, #0
    8ffe:	9908      	ldr	r1, [sp, #32]
    9000:	321a      	adds	r2, #26
    9002:	9f09      	ldr	r7, [sp, #36]	; 0x24
    9004:	47b8      	blx	r7
    9006:	1c43      	adds	r3, r0, #1
    9008:	d100      	bne.n	900c <_printf_float+0x3ec>
    900a:	e6ea      	b.n	8de2 <_printf_float+0x1c2>
    900c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    900e:	3301      	adds	r3, #1
    9010:	930a      	str	r3, [sp, #40]	; 0x28
    9012:	9b10      	ldr	r3, [sp, #64]	; 0x40
    9014:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    9016:	3b01      	subs	r3, #1
    9018:	429a      	cmp	r2, r3
    901a:	dbed      	blt.n	8ff8 <_printf_float+0x3d8>
    901c:	1c22      	adds	r2, r4, #0
    901e:	1c28      	adds	r0, r5, #0
    9020:	1c33      	adds	r3, r6, #0
    9022:	9908      	ldr	r1, [sp, #32]
    9024:	3250      	adds	r2, #80	; 0x50
    9026:	9e09      	ldr	r6, [sp, #36]	; 0x24
    9028:	47b0      	blx	r6
    902a:	1c43      	adds	r3, r0, #1
    902c:	d000      	beq.n	9030 <_printf_float+0x410>
    902e:	e6fd      	b.n	8e2c <_printf_float+0x20c>
    9030:	e6d7      	b.n	8de2 <_printf_float+0x1c2>
    9032:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    9034:	9f09      	ldr	r7, [sp, #36]	; 0x24
    9036:	47b8      	blx	r7
    9038:	1c43      	adds	r3, r0, #1
    903a:	d1ef      	bne.n	901c <_printf_float+0x3fc>
    903c:	e6d1      	b.n	8de2 <_printf_float+0x1c2>
    903e:	1c22      	adds	r2, r4, #0
    9040:	2301      	movs	r3, #1
    9042:	1c28      	adds	r0, r5, #0
    9044:	9908      	ldr	r1, [sp, #32]
    9046:	3219      	adds	r2, #25
    9048:	9f09      	ldr	r7, [sp, #36]	; 0x24
    904a:	47b8      	blx	r7
    904c:	1c43      	adds	r3, r0, #1
    904e:	d100      	bne.n	9052 <_printf_float+0x432>
    9050:	e6c7      	b.n	8de2 <_printf_float+0x1c2>
    9052:	3601      	adds	r6, #1
    9054:	68e3      	ldr	r3, [r4, #12]
    9056:	9a11      	ldr	r2, [sp, #68]	; 0x44
    9058:	1a9b      	subs	r3, r3, r2
    905a:	429e      	cmp	r6, r3
    905c:	dbef      	blt.n	903e <_printf_float+0x41e>
    905e:	9b11      	ldr	r3, [sp, #68]	; 0x44
    9060:	68e0      	ldr	r0, [r4, #12]
    9062:	4298      	cmp	r0, r3
    9064:	da17      	bge.n	9096 <_printf_float+0x476>
    9066:	1c18      	adds	r0, r3, #0
    9068:	e015      	b.n	9096 <_printf_float+0x476>
    906a:	2600      	movs	r6, #0
    906c:	e7f2      	b.n	9054 <_printf_float+0x434>
    906e:	4331      	orrs	r1, r6
    9070:	6021      	str	r1, [r4, #0]
    9072:	9101      	str	r1, [sp, #4]
    9074:	2123      	movs	r1, #35	; 0x23
    9076:	9000      	str	r0, [sp, #0]
    9078:	a806      	add	r0, sp, #24
    907a:	1809      	adds	r1, r1, r0
    907c:	9102      	str	r1, [sp, #8]
    907e:	a90f      	add	r1, sp, #60	; 0x3c
    9080:	9103      	str	r1, [sp, #12]
    9082:	a910      	add	r1, sp, #64	; 0x40
    9084:	9105      	str	r1, [sp, #20]
    9086:	2100      	movs	r1, #0
    9088:	9704      	str	r7, [sp, #16]
    908a:	9106      	str	r1, [sp, #24]
    908c:	1c28      	adds	r0, r5, #0
    908e:	f7ff fd31 	bl	8af4 <__cvt>
    9092:	900a      	str	r0, [sp, #40]	; 0x28
    9094:	e647      	b.n	8d26 <_printf_float+0x106>
    9096:	b013      	add	sp, #76	; 0x4c
    9098:	bdf0      	pop	{r4, r5, r6, r7, pc}
    909a:	46c0      	nop			; (mov r8, r8)

0000909c <_printf_common>:
    909c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    909e:	1c17      	adds	r7, r2, #0
    90a0:	9301      	str	r3, [sp, #4]
    90a2:	690a      	ldr	r2, [r1, #16]
    90a4:	688b      	ldr	r3, [r1, #8]
    90a6:	9000      	str	r0, [sp, #0]
    90a8:	1c0c      	adds	r4, r1, #0
    90aa:	4293      	cmp	r3, r2
    90ac:	da00      	bge.n	90b0 <_printf_common+0x14>
    90ae:	1c13      	adds	r3, r2, #0
    90b0:	1c22      	adds	r2, r4, #0
    90b2:	603b      	str	r3, [r7, #0]
    90b4:	3243      	adds	r2, #67	; 0x43
    90b6:	7812      	ldrb	r2, [r2, #0]
    90b8:	2a00      	cmp	r2, #0
    90ba:	d001      	beq.n	90c0 <_printf_common+0x24>
    90bc:	3301      	adds	r3, #1
    90be:	603b      	str	r3, [r7, #0]
    90c0:	6823      	ldr	r3, [r4, #0]
    90c2:	069b      	lsls	r3, r3, #26
    90c4:	d502      	bpl.n	90cc <_printf_common+0x30>
    90c6:	683b      	ldr	r3, [r7, #0]
    90c8:	3302      	adds	r3, #2
    90ca:	603b      	str	r3, [r7, #0]
    90cc:	2506      	movs	r5, #6
    90ce:	6823      	ldr	r3, [r4, #0]
    90d0:	401d      	ands	r5, r3
    90d2:	d01e      	beq.n	9112 <_printf_common+0x76>
    90d4:	1c23      	adds	r3, r4, #0
    90d6:	3343      	adds	r3, #67	; 0x43
    90d8:	781b      	ldrb	r3, [r3, #0]
    90da:	1e5a      	subs	r2, r3, #1
    90dc:	4193      	sbcs	r3, r2
    90de:	6822      	ldr	r2, [r4, #0]
    90e0:	0692      	lsls	r2, r2, #26
    90e2:	d51c      	bpl.n	911e <_printf_common+0x82>
    90e4:	2030      	movs	r0, #48	; 0x30
    90e6:	18e1      	adds	r1, r4, r3
    90e8:	3140      	adds	r1, #64	; 0x40
    90ea:	70c8      	strb	r0, [r1, #3]
    90ec:	1c21      	adds	r1, r4, #0
    90ee:	1c5a      	adds	r2, r3, #1
    90f0:	3145      	adds	r1, #69	; 0x45
    90f2:	7809      	ldrb	r1, [r1, #0]
    90f4:	18a2      	adds	r2, r4, r2
    90f6:	3240      	adds	r2, #64	; 0x40
    90f8:	3302      	adds	r3, #2
    90fa:	70d1      	strb	r1, [r2, #3]
    90fc:	e00f      	b.n	911e <_printf_common+0x82>
    90fe:	1c22      	adds	r2, r4, #0
    9100:	2301      	movs	r3, #1
    9102:	9800      	ldr	r0, [sp, #0]
    9104:	9901      	ldr	r1, [sp, #4]
    9106:	3219      	adds	r2, #25
    9108:	9e08      	ldr	r6, [sp, #32]
    910a:	47b0      	blx	r6
    910c:	1c43      	adds	r3, r0, #1
    910e:	d00e      	beq.n	912e <_printf_common+0x92>
    9110:	3501      	adds	r5, #1
    9112:	68e3      	ldr	r3, [r4, #12]
    9114:	683a      	ldr	r2, [r7, #0]
    9116:	1a9b      	subs	r3, r3, r2
    9118:	429d      	cmp	r5, r3
    911a:	dbf0      	blt.n	90fe <_printf_common+0x62>
    911c:	e7da      	b.n	90d4 <_printf_common+0x38>
    911e:	1c22      	adds	r2, r4, #0
    9120:	9800      	ldr	r0, [sp, #0]
    9122:	9901      	ldr	r1, [sp, #4]
    9124:	3243      	adds	r2, #67	; 0x43
    9126:	9d08      	ldr	r5, [sp, #32]
    9128:	47a8      	blx	r5
    912a:	1c43      	adds	r3, r0, #1
    912c:	d102      	bne.n	9134 <_printf_common+0x98>
    912e:	2001      	movs	r0, #1
    9130:	4240      	negs	r0, r0
    9132:	e020      	b.n	9176 <_printf_common+0xda>
    9134:	2306      	movs	r3, #6
    9136:	6820      	ldr	r0, [r4, #0]
    9138:	68e1      	ldr	r1, [r4, #12]
    913a:	683a      	ldr	r2, [r7, #0]
    913c:	4003      	ands	r3, r0
    913e:	2500      	movs	r5, #0
    9140:	2b04      	cmp	r3, #4
    9142:	d103      	bne.n	914c <_printf_common+0xb0>
    9144:	1a8d      	subs	r5, r1, r2
    9146:	43eb      	mvns	r3, r5
    9148:	17db      	asrs	r3, r3, #31
    914a:	401d      	ands	r5, r3
    914c:	68a3      	ldr	r3, [r4, #8]
    914e:	6922      	ldr	r2, [r4, #16]
    9150:	4293      	cmp	r3, r2
    9152:	dd01      	ble.n	9158 <_printf_common+0xbc>
    9154:	1a9b      	subs	r3, r3, r2
    9156:	18ed      	adds	r5, r5, r3
    9158:	2700      	movs	r7, #0
    915a:	42af      	cmp	r7, r5
    915c:	da0a      	bge.n	9174 <_printf_common+0xd8>
    915e:	1c22      	adds	r2, r4, #0
    9160:	2301      	movs	r3, #1
    9162:	9800      	ldr	r0, [sp, #0]
    9164:	9901      	ldr	r1, [sp, #4]
    9166:	321a      	adds	r2, #26
    9168:	9e08      	ldr	r6, [sp, #32]
    916a:	47b0      	blx	r6
    916c:	1c43      	adds	r3, r0, #1
    916e:	d0de      	beq.n	912e <_printf_common+0x92>
    9170:	3701      	adds	r7, #1
    9172:	e7f2      	b.n	915a <_printf_common+0xbe>
    9174:	2000      	movs	r0, #0
    9176:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

00009178 <_printf_i>:
    9178:	b5f0      	push	{r4, r5, r6, r7, lr}
    917a:	b08b      	sub	sp, #44	; 0x2c
    917c:	9206      	str	r2, [sp, #24]
    917e:	1c0a      	adds	r2, r1, #0
    9180:	3243      	adds	r2, #67	; 0x43
    9182:	9307      	str	r3, [sp, #28]
    9184:	9005      	str	r0, [sp, #20]
    9186:	9204      	str	r2, [sp, #16]
    9188:	7e0a      	ldrb	r2, [r1, #24]
    918a:	1c0c      	adds	r4, r1, #0
    918c:	9b10      	ldr	r3, [sp, #64]	; 0x40
    918e:	2a6e      	cmp	r2, #110	; 0x6e
    9190:	d100      	bne.n	9194 <_printf_i+0x1c>
    9192:	e0a8      	b.n	92e6 <_printf_i+0x16e>
    9194:	d811      	bhi.n	91ba <_printf_i+0x42>
    9196:	2a63      	cmp	r2, #99	; 0x63
    9198:	d022      	beq.n	91e0 <_printf_i+0x68>
    919a:	d809      	bhi.n	91b0 <_printf_i+0x38>
    919c:	2a00      	cmp	r2, #0
    919e:	d100      	bne.n	91a2 <_printf_i+0x2a>
    91a0:	e0b2      	b.n	9308 <_printf_i+0x190>
    91a2:	2a58      	cmp	r2, #88	; 0x58
    91a4:	d000      	beq.n	91a8 <_printf_i+0x30>
    91a6:	e0c2      	b.n	932e <_printf_i+0x1b6>
    91a8:	3145      	adds	r1, #69	; 0x45
    91aa:	700a      	strb	r2, [r1, #0]
    91ac:	4a7c      	ldr	r2, [pc, #496]	; (93a0 <_printf_i+0x228>)
    91ae:	e04f      	b.n	9250 <_printf_i+0xd8>
    91b0:	2a64      	cmp	r2, #100	; 0x64
    91b2:	d01d      	beq.n	91f0 <_printf_i+0x78>
    91b4:	2a69      	cmp	r2, #105	; 0x69
    91b6:	d01b      	beq.n	91f0 <_printf_i+0x78>
    91b8:	e0b9      	b.n	932e <_printf_i+0x1b6>
    91ba:	2a73      	cmp	r2, #115	; 0x73
    91bc:	d100      	bne.n	91c0 <_printf_i+0x48>
    91be:	e0a7      	b.n	9310 <_printf_i+0x198>
    91c0:	d809      	bhi.n	91d6 <_printf_i+0x5e>
    91c2:	2a6f      	cmp	r2, #111	; 0x6f
    91c4:	d029      	beq.n	921a <_printf_i+0xa2>
    91c6:	2a70      	cmp	r2, #112	; 0x70
    91c8:	d000      	beq.n	91cc <_printf_i+0x54>
    91ca:	e0b0      	b.n	932e <_printf_i+0x1b6>
    91cc:	2220      	movs	r2, #32
    91ce:	6809      	ldr	r1, [r1, #0]
    91d0:	430a      	orrs	r2, r1
    91d2:	6022      	str	r2, [r4, #0]
    91d4:	e037      	b.n	9246 <_printf_i+0xce>
    91d6:	2a75      	cmp	r2, #117	; 0x75
    91d8:	d01f      	beq.n	921a <_printf_i+0xa2>
    91da:	2a78      	cmp	r2, #120	; 0x78
    91dc:	d033      	beq.n	9246 <_printf_i+0xce>
    91de:	e0a6      	b.n	932e <_printf_i+0x1b6>
    91e0:	1c0e      	adds	r6, r1, #0
    91e2:	681a      	ldr	r2, [r3, #0]
    91e4:	3642      	adds	r6, #66	; 0x42
    91e6:	1d11      	adds	r1, r2, #4
    91e8:	6019      	str	r1, [r3, #0]
    91ea:	6813      	ldr	r3, [r2, #0]
    91ec:	7033      	strb	r3, [r6, #0]
    91ee:	e0a1      	b.n	9334 <_printf_i+0x1bc>
    91f0:	6821      	ldr	r1, [r4, #0]
    91f2:	681a      	ldr	r2, [r3, #0]
    91f4:	0608      	lsls	r0, r1, #24
    91f6:	d406      	bmi.n	9206 <_printf_i+0x8e>
    91f8:	0649      	lsls	r1, r1, #25
    91fa:	d504      	bpl.n	9206 <_printf_i+0x8e>
    91fc:	1d11      	adds	r1, r2, #4
    91fe:	6019      	str	r1, [r3, #0]
    9200:	2300      	movs	r3, #0
    9202:	5ed5      	ldrsh	r5, [r2, r3]
    9204:	e002      	b.n	920c <_printf_i+0x94>
    9206:	1d11      	adds	r1, r2, #4
    9208:	6019      	str	r1, [r3, #0]
    920a:	6815      	ldr	r5, [r2, #0]
    920c:	2d00      	cmp	r5, #0
    920e:	da3b      	bge.n	9288 <_printf_i+0x110>
    9210:	232d      	movs	r3, #45	; 0x2d
    9212:	9a04      	ldr	r2, [sp, #16]
    9214:	426d      	negs	r5, r5
    9216:	7013      	strb	r3, [r2, #0]
    9218:	e036      	b.n	9288 <_printf_i+0x110>
    921a:	6821      	ldr	r1, [r4, #0]
    921c:	681a      	ldr	r2, [r3, #0]
    921e:	0608      	lsls	r0, r1, #24
    9220:	d406      	bmi.n	9230 <_printf_i+0xb8>
    9222:	0649      	lsls	r1, r1, #25
    9224:	d504      	bpl.n	9230 <_printf_i+0xb8>
    9226:	6815      	ldr	r5, [r2, #0]
    9228:	1d11      	adds	r1, r2, #4
    922a:	6019      	str	r1, [r3, #0]
    922c:	b2ad      	uxth	r5, r5
    922e:	e002      	b.n	9236 <_printf_i+0xbe>
    9230:	1d11      	adds	r1, r2, #4
    9232:	6019      	str	r1, [r3, #0]
    9234:	6815      	ldr	r5, [r2, #0]
    9236:	4b5a      	ldr	r3, [pc, #360]	; (93a0 <_printf_i+0x228>)
    9238:	7e22      	ldrb	r2, [r4, #24]
    923a:	9303      	str	r3, [sp, #12]
    923c:	270a      	movs	r7, #10
    923e:	2a6f      	cmp	r2, #111	; 0x6f
    9240:	d11d      	bne.n	927e <_printf_i+0x106>
    9242:	2708      	movs	r7, #8
    9244:	e01b      	b.n	927e <_printf_i+0x106>
    9246:	1c22      	adds	r2, r4, #0
    9248:	2178      	movs	r1, #120	; 0x78
    924a:	3245      	adds	r2, #69	; 0x45
    924c:	7011      	strb	r1, [r2, #0]
    924e:	4a55      	ldr	r2, [pc, #340]	; (93a4 <_printf_i+0x22c>)
    9250:	6819      	ldr	r1, [r3, #0]
    9252:	9203      	str	r2, [sp, #12]
    9254:	1d08      	adds	r0, r1, #4
    9256:	6822      	ldr	r2, [r4, #0]
    9258:	6018      	str	r0, [r3, #0]
    925a:	680d      	ldr	r5, [r1, #0]
    925c:	0610      	lsls	r0, r2, #24
    925e:	d402      	bmi.n	9266 <_printf_i+0xee>
    9260:	0650      	lsls	r0, r2, #25
    9262:	d500      	bpl.n	9266 <_printf_i+0xee>
    9264:	b2ad      	uxth	r5, r5
    9266:	07d3      	lsls	r3, r2, #31
    9268:	d502      	bpl.n	9270 <_printf_i+0xf8>
    926a:	2320      	movs	r3, #32
    926c:	431a      	orrs	r2, r3
    926e:	6022      	str	r2, [r4, #0]
    9270:	2710      	movs	r7, #16
    9272:	2d00      	cmp	r5, #0
    9274:	d103      	bne.n	927e <_printf_i+0x106>
    9276:	2320      	movs	r3, #32
    9278:	6822      	ldr	r2, [r4, #0]
    927a:	439a      	bics	r2, r3
    927c:	6022      	str	r2, [r4, #0]
    927e:	1c23      	adds	r3, r4, #0
    9280:	2200      	movs	r2, #0
    9282:	3343      	adds	r3, #67	; 0x43
    9284:	701a      	strb	r2, [r3, #0]
    9286:	e002      	b.n	928e <_printf_i+0x116>
    9288:	270a      	movs	r7, #10
    928a:	4b45      	ldr	r3, [pc, #276]	; (93a0 <_printf_i+0x228>)
    928c:	9303      	str	r3, [sp, #12]
    928e:	6863      	ldr	r3, [r4, #4]
    9290:	60a3      	str	r3, [r4, #8]
    9292:	2b00      	cmp	r3, #0
    9294:	db03      	blt.n	929e <_printf_i+0x126>
    9296:	2204      	movs	r2, #4
    9298:	6821      	ldr	r1, [r4, #0]
    929a:	4391      	bics	r1, r2
    929c:	6021      	str	r1, [r4, #0]
    929e:	2d00      	cmp	r5, #0
    92a0:	d102      	bne.n	92a8 <_printf_i+0x130>
    92a2:	9e04      	ldr	r6, [sp, #16]
    92a4:	2b00      	cmp	r3, #0
    92a6:	d00e      	beq.n	92c6 <_printf_i+0x14e>
    92a8:	9e04      	ldr	r6, [sp, #16]
    92aa:	1c28      	adds	r0, r5, #0
    92ac:	1c39      	adds	r1, r7, #0
    92ae:	f7fc fe2f 	bl	5f10 <__aeabi_uidivmod>
    92b2:	9b03      	ldr	r3, [sp, #12]
    92b4:	3e01      	subs	r6, #1
    92b6:	5c5b      	ldrb	r3, [r3, r1]
    92b8:	1c28      	adds	r0, r5, #0
    92ba:	7033      	strb	r3, [r6, #0]
    92bc:	1c39      	adds	r1, r7, #0
    92be:	f7fc fda1 	bl	5e04 <__aeabi_uidiv>
    92c2:	1e05      	subs	r5, r0, #0
    92c4:	d1f1      	bne.n	92aa <_printf_i+0x132>
    92c6:	2f08      	cmp	r7, #8
    92c8:	d109      	bne.n	92de <_printf_i+0x166>
    92ca:	6823      	ldr	r3, [r4, #0]
    92cc:	07db      	lsls	r3, r3, #31
    92ce:	d506      	bpl.n	92de <_printf_i+0x166>
    92d0:	6863      	ldr	r3, [r4, #4]
    92d2:	6922      	ldr	r2, [r4, #16]
    92d4:	4293      	cmp	r3, r2
    92d6:	dc02      	bgt.n	92de <_printf_i+0x166>
    92d8:	2330      	movs	r3, #48	; 0x30
    92da:	3e01      	subs	r6, #1
    92dc:	7033      	strb	r3, [r6, #0]
    92de:	9b04      	ldr	r3, [sp, #16]
    92e0:	1b9b      	subs	r3, r3, r6
    92e2:	6123      	str	r3, [r4, #16]
    92e4:	e02b      	b.n	933e <_printf_i+0x1c6>
    92e6:	6809      	ldr	r1, [r1, #0]
    92e8:	681a      	ldr	r2, [r3, #0]
    92ea:	0608      	lsls	r0, r1, #24
    92ec:	d407      	bmi.n	92fe <_printf_i+0x186>
    92ee:	0649      	lsls	r1, r1, #25
    92f0:	d505      	bpl.n	92fe <_printf_i+0x186>
    92f2:	1d11      	adds	r1, r2, #4
    92f4:	6019      	str	r1, [r3, #0]
    92f6:	6813      	ldr	r3, [r2, #0]
    92f8:	8aa2      	ldrh	r2, [r4, #20]
    92fa:	801a      	strh	r2, [r3, #0]
    92fc:	e004      	b.n	9308 <_printf_i+0x190>
    92fe:	1d11      	adds	r1, r2, #4
    9300:	6019      	str	r1, [r3, #0]
    9302:	6813      	ldr	r3, [r2, #0]
    9304:	6962      	ldr	r2, [r4, #20]
    9306:	601a      	str	r2, [r3, #0]
    9308:	2300      	movs	r3, #0
    930a:	9e04      	ldr	r6, [sp, #16]
    930c:	6123      	str	r3, [r4, #16]
    930e:	e016      	b.n	933e <_printf_i+0x1c6>
    9310:	681a      	ldr	r2, [r3, #0]
    9312:	1d11      	adds	r1, r2, #4
    9314:	6019      	str	r1, [r3, #0]
    9316:	6816      	ldr	r6, [r2, #0]
    9318:	2100      	movs	r1, #0
    931a:	1c30      	adds	r0, r6, #0
    931c:	6862      	ldr	r2, [r4, #4]
    931e:	f7ff f9e9 	bl	86f4 <memchr>
    9322:	2800      	cmp	r0, #0
    9324:	d001      	beq.n	932a <_printf_i+0x1b2>
    9326:	1b80      	subs	r0, r0, r6
    9328:	6060      	str	r0, [r4, #4]
    932a:	6863      	ldr	r3, [r4, #4]
    932c:	e003      	b.n	9336 <_printf_i+0x1be>
    932e:	1c26      	adds	r6, r4, #0
    9330:	3642      	adds	r6, #66	; 0x42
    9332:	7032      	strb	r2, [r6, #0]
    9334:	2301      	movs	r3, #1
    9336:	6123      	str	r3, [r4, #16]
    9338:	2300      	movs	r3, #0
    933a:	9a04      	ldr	r2, [sp, #16]
    933c:	7013      	strb	r3, [r2, #0]
    933e:	9b07      	ldr	r3, [sp, #28]
    9340:	9805      	ldr	r0, [sp, #20]
    9342:	9300      	str	r3, [sp, #0]
    9344:	1c21      	adds	r1, r4, #0
    9346:	9b06      	ldr	r3, [sp, #24]
    9348:	aa09      	add	r2, sp, #36	; 0x24
    934a:	f7ff fea7 	bl	909c <_printf_common>
    934e:	1c43      	adds	r3, r0, #1
    9350:	d102      	bne.n	9358 <_printf_i+0x1e0>
    9352:	2001      	movs	r0, #1
    9354:	4240      	negs	r0, r0
    9356:	e021      	b.n	939c <_printf_i+0x224>
    9358:	6923      	ldr	r3, [r4, #16]
    935a:	9805      	ldr	r0, [sp, #20]
    935c:	9906      	ldr	r1, [sp, #24]
    935e:	1c32      	adds	r2, r6, #0
    9360:	9d07      	ldr	r5, [sp, #28]
    9362:	47a8      	blx	r5
    9364:	1c43      	adds	r3, r0, #1
    9366:	d0f4      	beq.n	9352 <_printf_i+0x1da>
    9368:	6823      	ldr	r3, [r4, #0]
    936a:	079b      	lsls	r3, r3, #30
    936c:	d405      	bmi.n	937a <_printf_i+0x202>
    936e:	9b09      	ldr	r3, [sp, #36]	; 0x24
    9370:	68e0      	ldr	r0, [r4, #12]
    9372:	4298      	cmp	r0, r3
    9374:	da12      	bge.n	939c <_printf_i+0x224>
    9376:	1c18      	adds	r0, r3, #0
    9378:	e010      	b.n	939c <_printf_i+0x224>
    937a:	2500      	movs	r5, #0
    937c:	68e3      	ldr	r3, [r4, #12]
    937e:	9a09      	ldr	r2, [sp, #36]	; 0x24
    9380:	1a9b      	subs	r3, r3, r2
    9382:	429d      	cmp	r5, r3
    9384:	daf3      	bge.n	936e <_printf_i+0x1f6>
    9386:	1c22      	adds	r2, r4, #0
    9388:	2301      	movs	r3, #1
    938a:	9805      	ldr	r0, [sp, #20]
    938c:	9906      	ldr	r1, [sp, #24]
    938e:	3219      	adds	r2, #25
    9390:	9e07      	ldr	r6, [sp, #28]
    9392:	47b0      	blx	r6
    9394:	1c43      	adds	r3, r0, #1
    9396:	d0dc      	beq.n	9352 <_printf_i+0x1da>
    9398:	3501      	adds	r5, #1
    939a:	e7ef      	b.n	937c <_printf_i+0x204>
    939c:	b00b      	add	sp, #44	; 0x2c
    939e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    93a0:	0000e3a9 	.word	0x0000e3a9
    93a4:	0000e3ba 	.word	0x0000e3ba

000093a8 <_scanf_float>:
    93a8:	b5f0      	push	{r4, r5, r6, r7, lr}
    93aa:	1c15      	adds	r5, r2, #0
    93ac:	2200      	movs	r2, #0
    93ae:	b08b      	sub	sp, #44	; 0x2c
    93b0:	9306      	str	r3, [sp, #24]
    93b2:	688b      	ldr	r3, [r1, #8]
    93b4:	9205      	str	r2, [sp, #20]
    93b6:	325d      	adds	r2, #93	; 0x5d
    93b8:	1c0e      	adds	r6, r1, #0
    93ba:	32ff      	adds	r2, #255	; 0xff
    93bc:	1e59      	subs	r1, r3, #1
    93be:	9002      	str	r0, [sp, #8]
    93c0:	4291      	cmp	r1, r2
    93c2:	d905      	bls.n	93d0 <_scanf_float+0x28>
    93c4:	3b5e      	subs	r3, #94	; 0x5e
    93c6:	3bff      	subs	r3, #255	; 0xff
    93c8:	9305      	str	r3, [sp, #20]
    93ca:	235e      	movs	r3, #94	; 0x5e
    93cc:	33ff      	adds	r3, #255	; 0xff
    93ce:	60b3      	str	r3, [r6, #8]
    93d0:	23f0      	movs	r3, #240	; 0xf0
    93d2:	6832      	ldr	r2, [r6, #0]
    93d4:	00db      	lsls	r3, r3, #3
    93d6:	4313      	orrs	r3, r2
    93d8:	6033      	str	r3, [r6, #0]
    93da:	1c33      	adds	r3, r6, #0
    93dc:	2400      	movs	r4, #0
    93de:	331c      	adds	r3, #28
    93e0:	1c1f      	adds	r7, r3, #0
    93e2:	9304      	str	r3, [sp, #16]
    93e4:	9403      	str	r4, [sp, #12]
    93e6:	9409      	str	r4, [sp, #36]	; 0x24
    93e8:	9408      	str	r4, [sp, #32]
    93ea:	9400      	str	r4, [sp, #0]
    93ec:	9407      	str	r4, [sp, #28]
    93ee:	68b2      	ldr	r2, [r6, #8]
    93f0:	2a00      	cmp	r2, #0
    93f2:	d100      	bne.n	93f6 <_scanf_float+0x4e>
    93f4:	e0e1      	b.n	95ba <_scanf_float+0x212>
    93f6:	682b      	ldr	r3, [r5, #0]
    93f8:	781b      	ldrb	r3, [r3, #0]
    93fa:	2b49      	cmp	r3, #73	; 0x49
    93fc:	d077      	beq.n	94ee <_scanf_float+0x146>
    93fe:	d818      	bhi.n	9432 <_scanf_float+0x8a>
    9400:	2b39      	cmp	r3, #57	; 0x39
    9402:	d80d      	bhi.n	9420 <_scanf_float+0x78>
    9404:	2b31      	cmp	r3, #49	; 0x31
    9406:	d242      	bcs.n	948e <_scanf_float+0xe6>
    9408:	2b2d      	cmp	r3, #45	; 0x2d
    940a:	d049      	beq.n	94a0 <_scanf_float+0xf8>
    940c:	d802      	bhi.n	9414 <_scanf_float+0x6c>
    940e:	2b2b      	cmp	r3, #43	; 0x2b
    9410:	d046      	beq.n	94a0 <_scanf_float+0xf8>
    9412:	e0d2      	b.n	95ba <_scanf_float+0x212>
    9414:	2b2e      	cmp	r3, #46	; 0x2e
    9416:	d100      	bne.n	941a <_scanf_float+0x72>
    9418:	e08d      	b.n	9536 <_scanf_float+0x18e>
    941a:	2b30      	cmp	r3, #48	; 0x30
    941c:	d025      	beq.n	946a <_scanf_float+0xc2>
    941e:	e0cc      	b.n	95ba <_scanf_float+0x212>
    9420:	2b45      	cmp	r3, #69	; 0x45
    9422:	d100      	bne.n	9426 <_scanf_float+0x7e>
    9424:	e090      	b.n	9548 <_scanf_float+0x1a0>
    9426:	2b46      	cmp	r3, #70	; 0x46
    9428:	d079      	beq.n	951e <_scanf_float+0x176>
    942a:	2b41      	cmp	r3, #65	; 0x41
    942c:	d000      	beq.n	9430 <_scanf_float+0x88>
    942e:	e0c4      	b.n	95ba <_scanf_float+0x212>
    9430:	e058      	b.n	94e4 <_scanf_float+0x13c>
    9432:	2b65      	cmp	r3, #101	; 0x65
    9434:	d100      	bne.n	9438 <_scanf_float+0x90>
    9436:	e087      	b.n	9548 <_scanf_float+0x1a0>
    9438:	d80a      	bhi.n	9450 <_scanf_float+0xa8>
    943a:	2b54      	cmp	r3, #84	; 0x54
    943c:	d073      	beq.n	9526 <_scanf_float+0x17e>
    943e:	d802      	bhi.n	9446 <_scanf_float+0x9e>
    9440:	2b4e      	cmp	r3, #78	; 0x4e
    9442:	d035      	beq.n	94b0 <_scanf_float+0x108>
    9444:	e0b9      	b.n	95ba <_scanf_float+0x212>
    9446:	2b59      	cmp	r3, #89	; 0x59
    9448:	d071      	beq.n	952e <_scanf_float+0x186>
    944a:	2b61      	cmp	r3, #97	; 0x61
    944c:	d04a      	beq.n	94e4 <_scanf_float+0x13c>
    944e:	e0b4      	b.n	95ba <_scanf_float+0x212>
    9450:	2b6e      	cmp	r3, #110	; 0x6e
    9452:	d02d      	beq.n	94b0 <_scanf_float+0x108>
    9454:	d804      	bhi.n	9460 <_scanf_float+0xb8>
    9456:	2b66      	cmp	r3, #102	; 0x66
    9458:	d061      	beq.n	951e <_scanf_float+0x176>
    945a:	2b69      	cmp	r3, #105	; 0x69
    945c:	d047      	beq.n	94ee <_scanf_float+0x146>
    945e:	e0ac      	b.n	95ba <_scanf_float+0x212>
    9460:	2b74      	cmp	r3, #116	; 0x74
    9462:	d060      	beq.n	9526 <_scanf_float+0x17e>
    9464:	2b79      	cmp	r3, #121	; 0x79
    9466:	d062      	beq.n	952e <_scanf_float+0x186>
    9468:	e0a7      	b.n	95ba <_scanf_float+0x212>
    946a:	6831      	ldr	r1, [r6, #0]
    946c:	05c8      	lsls	r0, r1, #23
    946e:	d50e      	bpl.n	948e <_scanf_float+0xe6>
    9470:	2380      	movs	r3, #128	; 0x80
    9472:	4399      	bics	r1, r3
    9474:	9b00      	ldr	r3, [sp, #0]
    9476:	6031      	str	r1, [r6, #0]
    9478:	3301      	adds	r3, #1
    947a:	9300      	str	r3, [sp, #0]
    947c:	9b05      	ldr	r3, [sp, #20]
    947e:	2b00      	cmp	r3, #0
    9480:	d100      	bne.n	9484 <_scanf_float+0xdc>
    9482:	e082      	b.n	958a <_scanf_float+0x1e2>
    9484:	3b01      	subs	r3, #1
    9486:	3201      	adds	r2, #1
    9488:	9305      	str	r3, [sp, #20]
    948a:	60b2      	str	r2, [r6, #8]
    948c:	e07d      	b.n	958a <_scanf_float+0x1e2>
    948e:	9a03      	ldr	r2, [sp, #12]
    9490:	1912      	adds	r2, r2, r4
    9492:	2a00      	cmp	r2, #0
    9494:	d000      	beq.n	9498 <_scanf_float+0xf0>
    9496:	e090      	b.n	95ba <_scanf_float+0x212>
    9498:	4ab3      	ldr	r2, [pc, #716]	; (9768 <_scanf_float+0x3c0>)
    949a:	6831      	ldr	r1, [r6, #0]
    949c:	400a      	ands	r2, r1
    949e:	e005      	b.n	94ac <_scanf_float+0x104>
    94a0:	2180      	movs	r1, #128	; 0x80
    94a2:	6832      	ldr	r2, [r6, #0]
    94a4:	420a      	tst	r2, r1
    94a6:	d100      	bne.n	94aa <_scanf_float+0x102>
    94a8:	e087      	b.n	95ba <_scanf_float+0x212>
    94aa:	438a      	bics	r2, r1
    94ac:	6032      	str	r2, [r6, #0]
    94ae:	e06a      	b.n	9586 <_scanf_float+0x1de>
    94b0:	9a03      	ldr	r2, [sp, #12]
    94b2:	2a00      	cmp	r2, #0
    94b4:	d10e      	bne.n	94d4 <_scanf_float+0x12c>
    94b6:	9a00      	ldr	r2, [sp, #0]
    94b8:	2a00      	cmp	r2, #0
    94ba:	d10e      	bne.n	94da <_scanf_float+0x132>
    94bc:	6831      	ldr	r1, [r6, #0]
    94be:	22e0      	movs	r2, #224	; 0xe0
    94c0:	1c08      	adds	r0, r1, #0
    94c2:	00d2      	lsls	r2, r2, #3
    94c4:	4010      	ands	r0, r2
    94c6:	4290      	cmp	r0, r2
    94c8:	d107      	bne.n	94da <_scanf_float+0x132>
    94ca:	4aa8      	ldr	r2, [pc, #672]	; (976c <_scanf_float+0x3c4>)
    94cc:	400a      	ands	r2, r1
    94ce:	6032      	str	r2, [r6, #0]
    94d0:	2201      	movs	r2, #1
    94d2:	e057      	b.n	9584 <_scanf_float+0x1dc>
    94d4:	9a03      	ldr	r2, [sp, #12]
    94d6:	2a02      	cmp	r2, #2
    94d8:	d053      	beq.n	9582 <_scanf_float+0x1da>
    94da:	2c01      	cmp	r4, #1
    94dc:	d01c      	beq.n	9518 <_scanf_float+0x170>
    94de:	2c04      	cmp	r4, #4
    94e0:	d01a      	beq.n	9518 <_scanf_float+0x170>
    94e2:	e06a      	b.n	95ba <_scanf_float+0x212>
    94e4:	9a03      	ldr	r2, [sp, #12]
    94e6:	2a01      	cmp	r2, #1
    94e8:	d167      	bne.n	95ba <_scanf_float+0x212>
    94ea:	2202      	movs	r2, #2
    94ec:	e04a      	b.n	9584 <_scanf_float+0x1dc>
    94ee:	2c00      	cmp	r4, #0
    94f0:	d10e      	bne.n	9510 <_scanf_float+0x168>
    94f2:	9a00      	ldr	r2, [sp, #0]
    94f4:	2a00      	cmp	r2, #0
    94f6:	d163      	bne.n	95c0 <_scanf_float+0x218>
    94f8:	6831      	ldr	r1, [r6, #0]
    94fa:	22e0      	movs	r2, #224	; 0xe0
    94fc:	1c08      	adds	r0, r1, #0
    94fe:	00d2      	lsls	r2, r2, #3
    9500:	4010      	ands	r0, r2
    9502:	4290      	cmp	r0, r2
    9504:	d160      	bne.n	95c8 <_scanf_float+0x220>
    9506:	4a99      	ldr	r2, [pc, #612]	; (976c <_scanf_float+0x3c4>)
    9508:	3401      	adds	r4, #1
    950a:	400a      	ands	r2, r1
    950c:	6032      	str	r2, [r6, #0]
    950e:	e03a      	b.n	9586 <_scanf_float+0x1de>
    9510:	21fd      	movs	r1, #253	; 0xfd
    9512:	1ee2      	subs	r2, r4, #3
    9514:	420a      	tst	r2, r1
    9516:	d150      	bne.n	95ba <_scanf_float+0x212>
    9518:	3401      	adds	r4, #1
    951a:	b2e4      	uxtb	r4, r4
    951c:	e033      	b.n	9586 <_scanf_float+0x1de>
    951e:	2c02      	cmp	r4, #2
    9520:	d14b      	bne.n	95ba <_scanf_float+0x212>
    9522:	2403      	movs	r4, #3
    9524:	e02f      	b.n	9586 <_scanf_float+0x1de>
    9526:	2c06      	cmp	r4, #6
    9528:	d147      	bne.n	95ba <_scanf_float+0x212>
    952a:	2407      	movs	r4, #7
    952c:	e02b      	b.n	9586 <_scanf_float+0x1de>
    952e:	2c07      	cmp	r4, #7
    9530:	d143      	bne.n	95ba <_scanf_float+0x212>
    9532:	2408      	movs	r4, #8
    9534:	e027      	b.n	9586 <_scanf_float+0x1de>
    9536:	6831      	ldr	r1, [r6, #0]
    9538:	058a      	lsls	r2, r1, #22
    953a:	d53e      	bpl.n	95ba <_scanf_float+0x212>
    953c:	4a8c      	ldr	r2, [pc, #560]	; (9770 <_scanf_float+0x3c8>)
    953e:	400a      	ands	r2, r1
    9540:	6032      	str	r2, [r6, #0]
    9542:	9a00      	ldr	r2, [sp, #0]
    9544:	9207      	str	r2, [sp, #28]
    9546:	e01e      	b.n	9586 <_scanf_float+0x1de>
    9548:	22a0      	movs	r2, #160	; 0xa0
    954a:	2080      	movs	r0, #128	; 0x80
    954c:	6831      	ldr	r1, [r6, #0]
    954e:	00d2      	lsls	r2, r2, #3
    9550:	400a      	ands	r2, r1
    9552:	00c0      	lsls	r0, r0, #3
    9554:	4282      	cmp	r2, r0
    9556:	d004      	beq.n	9562 <_scanf_float+0x1ba>
    9558:	4201      	tst	r1, r0
    955a:	d02e      	beq.n	95ba <_scanf_float+0x212>
    955c:	9a00      	ldr	r2, [sp, #0]
    955e:	2a00      	cmp	r2, #0
    9560:	d032      	beq.n	95c8 <_scanf_float+0x220>
    9562:	058a      	lsls	r2, r1, #22
    9564:	d404      	bmi.n	9570 <_scanf_float+0x1c8>
    9566:	9a00      	ldr	r2, [sp, #0]
    9568:	9807      	ldr	r0, [sp, #28]
    956a:	9709      	str	r7, [sp, #36]	; 0x24
    956c:	1a12      	subs	r2, r2, r0
    956e:	9208      	str	r2, [sp, #32]
    9570:	4a7e      	ldr	r2, [pc, #504]	; (976c <_scanf_float+0x3c4>)
    9572:	400a      	ands	r2, r1
    9574:	21c0      	movs	r1, #192	; 0xc0
    9576:	0049      	lsls	r1, r1, #1
    9578:	430a      	orrs	r2, r1
    957a:	6032      	str	r2, [r6, #0]
    957c:	2200      	movs	r2, #0
    957e:	9200      	str	r2, [sp, #0]
    9580:	e001      	b.n	9586 <_scanf_float+0x1de>
    9582:	2203      	movs	r2, #3
    9584:	9203      	str	r2, [sp, #12]
    9586:	703b      	strb	r3, [r7, #0]
    9588:	3701      	adds	r7, #1
    958a:	68b3      	ldr	r3, [r6, #8]
    958c:	3b01      	subs	r3, #1
    958e:	60b3      	str	r3, [r6, #8]
    9590:	6933      	ldr	r3, [r6, #16]
    9592:	3301      	adds	r3, #1
    9594:	6133      	str	r3, [r6, #16]
    9596:	686b      	ldr	r3, [r5, #4]
    9598:	3b01      	subs	r3, #1
    959a:	606b      	str	r3, [r5, #4]
    959c:	2b00      	cmp	r3, #0
    959e:	dd03      	ble.n	95a8 <_scanf_float+0x200>
    95a0:	682b      	ldr	r3, [r5, #0]
    95a2:	3301      	adds	r3, #1
    95a4:	602b      	str	r3, [r5, #0]
    95a6:	e722      	b.n	93ee <_scanf_float+0x46>
    95a8:	23c0      	movs	r3, #192	; 0xc0
    95aa:	005b      	lsls	r3, r3, #1
    95ac:	58f3      	ldr	r3, [r6, r3]
    95ae:	9802      	ldr	r0, [sp, #8]
    95b0:	1c29      	adds	r1, r5, #0
    95b2:	4798      	blx	r3
    95b4:	2800      	cmp	r0, #0
    95b6:	d100      	bne.n	95ba <_scanf_float+0x212>
    95b8:	e719      	b.n	93ee <_scanf_float+0x46>
    95ba:	9b00      	ldr	r3, [sp, #0]
    95bc:	2b00      	cmp	r3, #0
    95be:	d003      	beq.n	95c8 <_scanf_float+0x220>
    95c0:	6832      	ldr	r2, [r6, #0]
    95c2:	4b6c      	ldr	r3, [pc, #432]	; (9774 <_scanf_float+0x3cc>)
    95c4:	4013      	ands	r3, r2
    95c6:	6033      	str	r3, [r6, #0]
    95c8:	9b03      	ldr	r3, [sp, #12]
    95ca:	3b01      	subs	r3, #1
    95cc:	2b01      	cmp	r3, #1
    95ce:	d810      	bhi.n	95f2 <_scanf_float+0x24a>
    95d0:	9b04      	ldr	r3, [sp, #16]
    95d2:	429f      	cmp	r7, r3
    95d4:	d90b      	bls.n	95ee <_scanf_float+0x246>
    95d6:	23be      	movs	r3, #190	; 0xbe
    95d8:	3f01      	subs	r7, #1
    95da:	005b      	lsls	r3, r3, #1
    95dc:	58f3      	ldr	r3, [r6, r3]
    95de:	7839      	ldrb	r1, [r7, #0]
    95e0:	9802      	ldr	r0, [sp, #8]
    95e2:	1c2a      	adds	r2, r5, #0
    95e4:	4798      	blx	r3
    95e6:	6933      	ldr	r3, [r6, #16]
    95e8:	3b01      	subs	r3, #1
    95ea:	6133      	str	r3, [r6, #16]
    95ec:	e7f0      	b.n	95d0 <_scanf_float+0x228>
    95ee:	2401      	movs	r4, #1
    95f0:	e0b7      	b.n	9762 <_scanf_float+0x3ba>
    95f2:	1e63      	subs	r3, r4, #1
    95f4:	2b06      	cmp	r3, #6
    95f6:	d82a      	bhi.n	964e <_scanf_float+0x2a6>
    95f8:	2c02      	cmp	r4, #2
    95fa:	d919      	bls.n	9630 <_scanf_float+0x288>
    95fc:	9405      	str	r4, [sp, #20]
    95fe:	9703      	str	r7, [sp, #12]
    9600:	9b05      	ldr	r3, [sp, #20]
    9602:	3b01      	subs	r3, #1
    9604:	b2db      	uxtb	r3, r3
    9606:	9305      	str	r3, [sp, #20]
    9608:	2b02      	cmp	r3, #2
    960a:	d00d      	beq.n	9628 <_scanf_float+0x280>
    960c:	9b03      	ldr	r3, [sp, #12]
    960e:	9802      	ldr	r0, [sp, #8]
    9610:	3b01      	subs	r3, #1
    9612:	9303      	str	r3, [sp, #12]
    9614:	7819      	ldrb	r1, [r3, #0]
    9616:	23be      	movs	r3, #190	; 0xbe
    9618:	005b      	lsls	r3, r3, #1
    961a:	58f3      	ldr	r3, [r6, r3]
    961c:	1c2a      	adds	r2, r5, #0
    961e:	4798      	blx	r3
    9620:	6933      	ldr	r3, [r6, #16]
    9622:	3b01      	subs	r3, #1
    9624:	6133      	str	r3, [r6, #16]
    9626:	e7eb      	b.n	9600 <_scanf_float+0x258>
    9628:	3c03      	subs	r4, #3
    962a:	b2e4      	uxtb	r4, r4
    962c:	1b3f      	subs	r7, r7, r4
    962e:	e00e      	b.n	964e <_scanf_float+0x2a6>
    9630:	9b04      	ldr	r3, [sp, #16]
    9632:	429f      	cmp	r7, r3
    9634:	d9db      	bls.n	95ee <_scanf_float+0x246>
    9636:	23be      	movs	r3, #190	; 0xbe
    9638:	3f01      	subs	r7, #1
    963a:	005b      	lsls	r3, r3, #1
    963c:	58f3      	ldr	r3, [r6, r3]
    963e:	7839      	ldrb	r1, [r7, #0]
    9640:	9802      	ldr	r0, [sp, #8]
    9642:	1c2a      	adds	r2, r5, #0
    9644:	4798      	blx	r3
    9646:	6933      	ldr	r3, [r6, #16]
    9648:	3b01      	subs	r3, #1
    964a:	6133      	str	r3, [r6, #16]
    964c:	e7f0      	b.n	9630 <_scanf_float+0x288>
    964e:	6833      	ldr	r3, [r6, #0]
    9650:	05da      	lsls	r2, r3, #23
    9652:	d52b      	bpl.n	96ac <_scanf_float+0x304>
    9654:	055b      	lsls	r3, r3, #21
    9656:	d50e      	bpl.n	9676 <_scanf_float+0x2ce>
    9658:	9b04      	ldr	r3, [sp, #16]
    965a:	429f      	cmp	r7, r3
    965c:	d9c7      	bls.n	95ee <_scanf_float+0x246>
    965e:	23be      	movs	r3, #190	; 0xbe
    9660:	3f01      	subs	r7, #1
    9662:	005b      	lsls	r3, r3, #1
    9664:	58f3      	ldr	r3, [r6, r3]
    9666:	7839      	ldrb	r1, [r7, #0]
    9668:	9802      	ldr	r0, [sp, #8]
    966a:	1c2a      	adds	r2, r5, #0
    966c:	4798      	blx	r3
    966e:	6933      	ldr	r3, [r6, #16]
    9670:	3b01      	subs	r3, #1
    9672:	6133      	str	r3, [r6, #16]
    9674:	e7f0      	b.n	9658 <_scanf_float+0x2b0>
    9676:	6933      	ldr	r3, [r6, #16]
    9678:	1e7c      	subs	r4, r7, #1
    967a:	7821      	ldrb	r1, [r4, #0]
    967c:	3b01      	subs	r3, #1
    967e:	6133      	str	r3, [r6, #16]
    9680:	2965      	cmp	r1, #101	; 0x65
    9682:	d00c      	beq.n	969e <_scanf_float+0x2f6>
    9684:	2945      	cmp	r1, #69	; 0x45
    9686:	d00a      	beq.n	969e <_scanf_float+0x2f6>
    9688:	23be      	movs	r3, #190	; 0xbe
    968a:	005b      	lsls	r3, r3, #1
    968c:	58f3      	ldr	r3, [r6, r3]
    968e:	9802      	ldr	r0, [sp, #8]
    9690:	1c2a      	adds	r2, r5, #0
    9692:	4798      	blx	r3
    9694:	6933      	ldr	r3, [r6, #16]
    9696:	1ebc      	subs	r4, r7, #2
    9698:	3b01      	subs	r3, #1
    969a:	7821      	ldrb	r1, [r4, #0]
    969c:	6133      	str	r3, [r6, #16]
    969e:	23be      	movs	r3, #190	; 0xbe
    96a0:	005b      	lsls	r3, r3, #1
    96a2:	58f3      	ldr	r3, [r6, r3]
    96a4:	9802      	ldr	r0, [sp, #8]
    96a6:	1c2a      	adds	r2, r5, #0
    96a8:	4798      	blx	r3
    96aa:	1c27      	adds	r7, r4, #0
    96ac:	2410      	movs	r4, #16
    96ae:	6833      	ldr	r3, [r6, #0]
    96b0:	401c      	ands	r4, r3
    96b2:	d155      	bne.n	9760 <_scanf_float+0x3b8>
    96b4:	23c0      	movs	r3, #192	; 0xc0
    96b6:	703c      	strb	r4, [r7, #0]
    96b8:	6832      	ldr	r2, [r6, #0]
    96ba:	00db      	lsls	r3, r3, #3
    96bc:	4013      	ands	r3, r2
    96be:	2280      	movs	r2, #128	; 0x80
    96c0:	00d2      	lsls	r2, r2, #3
    96c2:	4293      	cmp	r3, r2
    96c4:	d106      	bne.n	96d4 <_scanf_float+0x32c>
    96c6:	9a07      	ldr	r2, [sp, #28]
    96c8:	9b00      	ldr	r3, [sp, #0]
    96ca:	1a9b      	subs	r3, r3, r2
    96cc:	425a      	negs	r2, r3
    96ce:	2b00      	cmp	r3, #0
    96d0:	d10d      	bne.n	96ee <_scanf_float+0x346>
    96d2:	e018      	b.n	9706 <_scanf_float+0x35e>
    96d4:	9b08      	ldr	r3, [sp, #32]
    96d6:	2b00      	cmp	r3, #0
    96d8:	d015      	beq.n	9706 <_scanf_float+0x35e>
    96da:	9b09      	ldr	r3, [sp, #36]	; 0x24
    96dc:	1c22      	adds	r2, r4, #0
    96de:	1c59      	adds	r1, r3, #1
    96e0:	9802      	ldr	r0, [sp, #8]
    96e2:	230a      	movs	r3, #10
    96e4:	f001 fa38 	bl	ab58 <_strtol_r>
    96e8:	9b08      	ldr	r3, [sp, #32]
    96ea:	9f09      	ldr	r7, [sp, #36]	; 0x24
    96ec:	1ac2      	subs	r2, r0, r3
    96ee:	1c33      	adds	r3, r6, #0
    96f0:	3370      	adds	r3, #112	; 0x70
    96f2:	33ff      	adds	r3, #255	; 0xff
    96f4:	429f      	cmp	r7, r3
    96f6:	d302      	bcc.n	96fe <_scanf_float+0x356>
    96f8:	1c37      	adds	r7, r6, #0
    96fa:	376f      	adds	r7, #111	; 0x6f
    96fc:	37ff      	adds	r7, #255	; 0xff
    96fe:	1c38      	adds	r0, r7, #0
    9700:	491d      	ldr	r1, [pc, #116]	; (9778 <_scanf_float+0x3d0>)
    9702:	f000 fb13 	bl	9d2c <siprintf>
    9706:	2200      	movs	r2, #0
    9708:	9802      	ldr	r0, [sp, #8]
    970a:	9904      	ldr	r1, [sp, #16]
    970c:	f000 fc0a 	bl	9f24 <_strtod_r>
    9710:	9b06      	ldr	r3, [sp, #24]
    9712:	6832      	ldr	r2, [r6, #0]
    9714:	9000      	str	r0, [sp, #0]
    9716:	9101      	str	r1, [sp, #4]
    9718:	681b      	ldr	r3, [r3, #0]
    971a:	0791      	lsls	r1, r2, #30
    971c:	d401      	bmi.n	9722 <_scanf_float+0x37a>
    971e:	0752      	lsls	r2, r2, #29
    9720:	d508      	bpl.n	9734 <_scanf_float+0x38c>
    9722:	9906      	ldr	r1, [sp, #24]
    9724:	1d1a      	adds	r2, r3, #4
    9726:	600a      	str	r2, [r1, #0]
    9728:	681b      	ldr	r3, [r3, #0]
    972a:	9900      	ldr	r1, [sp, #0]
    972c:	9a01      	ldr	r2, [sp, #4]
    972e:	6019      	str	r1, [r3, #0]
    9730:	605a      	str	r2, [r3, #4]
    9732:	e011      	b.n	9758 <_scanf_float+0x3b0>
    9734:	9906      	ldr	r1, [sp, #24]
    9736:	1d1a      	adds	r2, r3, #4
    9738:	600a      	str	r2, [r1, #0]
    973a:	9800      	ldr	r0, [sp, #0]
    973c:	9901      	ldr	r1, [sp, #4]
    973e:	681d      	ldr	r5, [r3, #0]
    9740:	f000 f9f4 	bl	9b2c <__fpclassifyd>
    9744:	2800      	cmp	r0, #0
    9746:	d102      	bne.n	974e <_scanf_float+0x3a6>
    9748:	f000 faec 	bl	9d24 <nanf>
    974c:	e003      	b.n	9756 <_scanf_float+0x3ae>
    974e:	9800      	ldr	r0, [sp, #0]
    9750:	9901      	ldr	r1, [sp, #4]
    9752:	f7fe fb7d 	bl	7e50 <__aeabi_d2f>
    9756:	6028      	str	r0, [r5, #0]
    9758:	68f3      	ldr	r3, [r6, #12]
    975a:	3301      	adds	r3, #1
    975c:	60f3      	str	r3, [r6, #12]
    975e:	e000      	b.n	9762 <_scanf_float+0x3ba>
    9760:	2400      	movs	r4, #0
    9762:	1c20      	adds	r0, r4, #0
    9764:	b00b      	add	sp, #44	; 0x2c
    9766:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9768:	fffffe7f 	.word	0xfffffe7f
    976c:	fffff87f 	.word	0xfffff87f
    9770:	fffffd7f 	.word	0xfffffd7f
    9774:	fffffeff 	.word	0xfffffeff
    9778:	0000e3cb 	.word	0x0000e3cb

0000977c <_scanf_chars>:
    977c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    977e:	1c15      	adds	r5, r2, #0
    9780:	688a      	ldr	r2, [r1, #8]
    9782:	9001      	str	r0, [sp, #4]
    9784:	1c0c      	adds	r4, r1, #0
    9786:	2a00      	cmp	r2, #0
    9788:	d106      	bne.n	9798 <_scanf_chars+0x1c>
    978a:	698a      	ldr	r2, [r1, #24]
    978c:	1e51      	subs	r1, r2, #1
    978e:	418a      	sbcs	r2, r1
    9790:	2101      	movs	r1, #1
    9792:	4252      	negs	r2, r2
    9794:	430a      	orrs	r2, r1
    9796:	60a2      	str	r2, [r4, #8]
    9798:	6822      	ldr	r2, [r4, #0]
    979a:	06d2      	lsls	r2, r2, #27
    979c:	d403      	bmi.n	97a6 <_scanf_chars+0x2a>
    979e:	681a      	ldr	r2, [r3, #0]
    97a0:	1d11      	adds	r1, r2, #4
    97a2:	6019      	str	r1, [r3, #0]
    97a4:	6817      	ldr	r7, [r2, #0]
    97a6:	2600      	movs	r6, #0
    97a8:	69a0      	ldr	r0, [r4, #24]
    97aa:	2800      	cmp	r0, #0
    97ac:	d11d      	bne.n	97ea <_scanf_chars+0x6e>
    97ae:	6823      	ldr	r3, [r4, #0]
    97b0:	3601      	adds	r6, #1
    97b2:	06db      	lsls	r3, r3, #27
    97b4:	d403      	bmi.n	97be <_scanf_chars+0x42>
    97b6:	682b      	ldr	r3, [r5, #0]
    97b8:	781b      	ldrb	r3, [r3, #0]
    97ba:	703b      	strb	r3, [r7, #0]
    97bc:	3701      	adds	r7, #1
    97be:	682a      	ldr	r2, [r5, #0]
    97c0:	686b      	ldr	r3, [r5, #4]
    97c2:	3201      	adds	r2, #1
    97c4:	602a      	str	r2, [r5, #0]
    97c6:	68a2      	ldr	r2, [r4, #8]
    97c8:	3b01      	subs	r3, #1
    97ca:	3a01      	subs	r2, #1
    97cc:	606b      	str	r3, [r5, #4]
    97ce:	60a2      	str	r2, [r4, #8]
    97d0:	2a00      	cmp	r2, #0
    97d2:	d01f      	beq.n	9814 <_scanf_chars+0x98>
    97d4:	2b00      	cmp	r3, #0
    97d6:	dce7      	bgt.n	97a8 <_scanf_chars+0x2c>
    97d8:	23c0      	movs	r3, #192	; 0xc0
    97da:	005b      	lsls	r3, r3, #1
    97dc:	58e3      	ldr	r3, [r4, r3]
    97de:	9801      	ldr	r0, [sp, #4]
    97e0:	1c29      	adds	r1, r5, #0
    97e2:	4798      	blx	r3
    97e4:	2800      	cmp	r0, #0
    97e6:	d0df      	beq.n	97a8 <_scanf_chars+0x2c>
    97e8:	e014      	b.n	9814 <_scanf_chars+0x98>
    97ea:	2801      	cmp	r0, #1
    97ec:	d108      	bne.n	9800 <_scanf_chars+0x84>
    97ee:	682b      	ldr	r3, [r5, #0]
    97f0:	6962      	ldr	r2, [r4, #20]
    97f2:	781b      	ldrb	r3, [r3, #0]
    97f4:	5cd3      	ldrb	r3, [r2, r3]
    97f6:	2b00      	cmp	r3, #0
    97f8:	d1d9      	bne.n	97ae <_scanf_chars+0x32>
    97fa:	2e00      	cmp	r6, #0
    97fc:	d019      	beq.n	9832 <_scanf_chars+0xb6>
    97fe:	e009      	b.n	9814 <_scanf_chars+0x98>
    9800:	2802      	cmp	r0, #2
    9802:	d107      	bne.n	9814 <_scanf_chars+0x98>
    9804:	682b      	ldr	r3, [r5, #0]
    9806:	4a0b      	ldr	r2, [pc, #44]	; (9834 <_scanf_chars+0xb8>)
    9808:	781b      	ldrb	r3, [r3, #0]
    980a:	6812      	ldr	r2, [r2, #0]
    980c:	18d3      	adds	r3, r2, r3
    980e:	785b      	ldrb	r3, [r3, #1]
    9810:	071b      	lsls	r3, r3, #28
    9812:	d5cc      	bpl.n	97ae <_scanf_chars+0x32>
    9814:	2310      	movs	r3, #16
    9816:	6822      	ldr	r2, [r4, #0]
    9818:	4013      	ands	r3, r2
    981a:	d106      	bne.n	982a <_scanf_chars+0xae>
    981c:	68e2      	ldr	r2, [r4, #12]
    981e:	3201      	adds	r2, #1
    9820:	60e2      	str	r2, [r4, #12]
    9822:	69a2      	ldr	r2, [r4, #24]
    9824:	2a00      	cmp	r2, #0
    9826:	d000      	beq.n	982a <_scanf_chars+0xae>
    9828:	703b      	strb	r3, [r7, #0]
    982a:	2000      	movs	r0, #0
    982c:	6923      	ldr	r3, [r4, #16]
    982e:	199e      	adds	r6, r3, r6
    9830:	6126      	str	r6, [r4, #16]
    9832:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    9834:	20000138 	.word	0x20000138

00009838 <_scanf_i>:
    9838:	b5f0      	push	{r4, r5, r6, r7, lr}
    983a:	1c0c      	adds	r4, r1, #0
    983c:	b08b      	sub	sp, #44	; 0x2c
    983e:	9301      	str	r3, [sp, #4]
    9840:	4b74      	ldr	r3, [pc, #464]	; (9a14 <_scanf_i+0x1dc>)
    9842:	9004      	str	r0, [sp, #16]
    9844:	1c16      	adds	r6, r2, #0
    9846:	aa07      	add	r2, sp, #28
    9848:	cb23      	ldmia	r3!, {r0, r1, r5}
    984a:	c223      	stmia	r2!, {r0, r1, r5}
    984c:	4b72      	ldr	r3, [pc, #456]	; (9a18 <_scanf_i+0x1e0>)
    984e:	9305      	str	r3, [sp, #20]
    9850:	69a3      	ldr	r3, [r4, #24]
    9852:	2b03      	cmp	r3, #3
    9854:	d001      	beq.n	985a <_scanf_i+0x22>
    9856:	4b71      	ldr	r3, [pc, #452]	; (9a1c <_scanf_i+0x1e4>)
    9858:	9305      	str	r3, [sp, #20]
    985a:	2200      	movs	r2, #0
    985c:	68a3      	ldr	r3, [r4, #8]
    985e:	9203      	str	r2, [sp, #12]
    9860:	325d      	adds	r2, #93	; 0x5d
    9862:	1e59      	subs	r1, r3, #1
    9864:	32ff      	adds	r2, #255	; 0xff
    9866:	4291      	cmp	r1, r2
    9868:	d905      	bls.n	9876 <_scanf_i+0x3e>
    986a:	3b5e      	subs	r3, #94	; 0x5e
    986c:	3bff      	subs	r3, #255	; 0xff
    986e:	9303      	str	r3, [sp, #12]
    9870:	235e      	movs	r3, #94	; 0x5e
    9872:	33ff      	adds	r3, #255	; 0xff
    9874:	60a3      	str	r3, [r4, #8]
    9876:	1c23      	adds	r3, r4, #0
    9878:	331c      	adds	r3, #28
    987a:	9300      	str	r3, [sp, #0]
    987c:	23d0      	movs	r3, #208	; 0xd0
    987e:	2700      	movs	r7, #0
    9880:	6822      	ldr	r2, [r4, #0]
    9882:	011b      	lsls	r3, r3, #4
    9884:	4313      	orrs	r3, r2
    9886:	6023      	str	r3, [r4, #0]
    9888:	9b00      	ldr	r3, [sp, #0]
    988a:	9302      	str	r3, [sp, #8]
    988c:	6832      	ldr	r2, [r6, #0]
    988e:	00bb      	lsls	r3, r7, #2
    9890:	7811      	ldrb	r1, [r2, #0]
    9892:	aa07      	add	r2, sp, #28
    9894:	5898      	ldr	r0, [r3, r2]
    9896:	2202      	movs	r2, #2
    9898:	f7fe ff2c 	bl	86f4 <memchr>
    989c:	2800      	cmp	r0, #0
    989e:	d039      	beq.n	9914 <_scanf_i+0xdc>
    98a0:	2f01      	cmp	r7, #1
    98a2:	d10d      	bne.n	98c0 <_scanf_i+0x88>
    98a4:	6863      	ldr	r3, [r4, #4]
    98a6:	2b00      	cmp	r3, #0
    98a8:	d106      	bne.n	98b8 <_scanf_i+0x80>
    98aa:	3308      	adds	r3, #8
    98ac:	6822      	ldr	r2, [r4, #0]
    98ae:	6063      	str	r3, [r4, #4]
    98b0:	33f9      	adds	r3, #249	; 0xf9
    98b2:	33ff      	adds	r3, #255	; 0xff
    98b4:	4313      	orrs	r3, r2
    98b6:	6023      	str	r3, [r4, #0]
    98b8:	4b59      	ldr	r3, [pc, #356]	; (9a20 <_scanf_i+0x1e8>)
    98ba:	6822      	ldr	r2, [r4, #0]
    98bc:	4013      	ands	r3, r2
    98be:	e00d      	b.n	98dc <_scanf_i+0xa4>
    98c0:	2f02      	cmp	r7, #2
    98c2:	d10c      	bne.n	98de <_scanf_i+0xa6>
    98c4:	22c0      	movs	r2, #192	; 0xc0
    98c6:	2180      	movs	r1, #128	; 0x80
    98c8:	6823      	ldr	r3, [r4, #0]
    98ca:	00d2      	lsls	r2, r2, #3
    98cc:	401a      	ands	r2, r3
    98ce:	0089      	lsls	r1, r1, #2
    98d0:	428a      	cmp	r2, r1
    98d2:	d122      	bne.n	991a <_scanf_i+0xe2>
    98d4:	2210      	movs	r2, #16
    98d6:	6062      	str	r2, [r4, #4]
    98d8:	32f0      	adds	r2, #240	; 0xf0
    98da:	4313      	orrs	r3, r2
    98dc:	6023      	str	r3, [r4, #0]
    98de:	68a3      	ldr	r3, [r4, #8]
    98e0:	1e5a      	subs	r2, r3, #1
    98e2:	60a2      	str	r2, [r4, #8]
    98e4:	2b00      	cmp	r3, #0
    98e6:	d015      	beq.n	9914 <_scanf_i+0xdc>
    98e8:	9b02      	ldr	r3, [sp, #8]
    98ea:	1c5d      	adds	r5, r3, #1
    98ec:	6833      	ldr	r3, [r6, #0]
    98ee:	1c5a      	adds	r2, r3, #1
    98f0:	6032      	str	r2, [r6, #0]
    98f2:	781b      	ldrb	r3, [r3, #0]
    98f4:	9a02      	ldr	r2, [sp, #8]
    98f6:	9502      	str	r5, [sp, #8]
    98f8:	7013      	strb	r3, [r2, #0]
    98fa:	6873      	ldr	r3, [r6, #4]
    98fc:	3b01      	subs	r3, #1
    98fe:	6073      	str	r3, [r6, #4]
    9900:	2b00      	cmp	r3, #0
    9902:	dc07      	bgt.n	9914 <_scanf_i+0xdc>
    9904:	23c0      	movs	r3, #192	; 0xc0
    9906:	005b      	lsls	r3, r3, #1
    9908:	58e3      	ldr	r3, [r4, r3]
    990a:	9804      	ldr	r0, [sp, #16]
    990c:	1c31      	adds	r1, r6, #0
    990e:	4798      	blx	r3
    9910:	2800      	cmp	r0, #0
    9912:	d144      	bne.n	999e <_scanf_i+0x166>
    9914:	3701      	adds	r7, #1
    9916:	2f03      	cmp	r7, #3
    9918:	d1b8      	bne.n	988c <_scanf_i+0x54>
    991a:	6863      	ldr	r3, [r4, #4]
    991c:	2b00      	cmp	r3, #0
    991e:	d101      	bne.n	9924 <_scanf_i+0xec>
    9920:	330a      	adds	r3, #10
    9922:	6063      	str	r3, [r4, #4]
    9924:	2110      	movs	r1, #16
    9926:	2700      	movs	r7, #0
    9928:	6863      	ldr	r3, [r4, #4]
    992a:	6960      	ldr	r0, [r4, #20]
    992c:	1ac9      	subs	r1, r1, r3
    992e:	4b3d      	ldr	r3, [pc, #244]	; (9a24 <_scanf_i+0x1ec>)
    9930:	18c9      	adds	r1, r1, r3
    9932:	f000 f935 	bl	9ba0 <__sccl>
    9936:	9d02      	ldr	r5, [sp, #8]
    9938:	68a3      	ldr	r3, [r4, #8]
    993a:	2b00      	cmp	r3, #0
    993c:	d030      	beq.n	99a0 <_scanf_i+0x168>
    993e:	6832      	ldr	r2, [r6, #0]
    9940:	6960      	ldr	r0, [r4, #20]
    9942:	7811      	ldrb	r1, [r2, #0]
    9944:	5c40      	ldrb	r0, [r0, r1]
    9946:	2800      	cmp	r0, #0
    9948:	d02a      	beq.n	99a0 <_scanf_i+0x168>
    994a:	2930      	cmp	r1, #48	; 0x30
    994c:	d10b      	bne.n	9966 <_scanf_i+0x12e>
    994e:	6821      	ldr	r1, [r4, #0]
    9950:	0509      	lsls	r1, r1, #20
    9952:	d508      	bpl.n	9966 <_scanf_i+0x12e>
    9954:	9a03      	ldr	r2, [sp, #12]
    9956:	3701      	adds	r7, #1
    9958:	2a00      	cmp	r2, #0
    995a:	d00b      	beq.n	9974 <_scanf_i+0x13c>
    995c:	3a01      	subs	r2, #1
    995e:	3301      	adds	r3, #1
    9960:	9203      	str	r2, [sp, #12]
    9962:	60a3      	str	r3, [r4, #8]
    9964:	e006      	b.n	9974 <_scanf_i+0x13c>
    9966:	6821      	ldr	r1, [r4, #0]
    9968:	4b2f      	ldr	r3, [pc, #188]	; (9a28 <_scanf_i+0x1f0>)
    996a:	400b      	ands	r3, r1
    996c:	6023      	str	r3, [r4, #0]
    996e:	7813      	ldrb	r3, [r2, #0]
    9970:	702b      	strb	r3, [r5, #0]
    9972:	3501      	adds	r5, #1
    9974:	6873      	ldr	r3, [r6, #4]
    9976:	3b01      	subs	r3, #1
    9978:	6073      	str	r3, [r6, #4]
    997a:	2b00      	cmp	r3, #0
    997c:	dd03      	ble.n	9986 <_scanf_i+0x14e>
    997e:	6833      	ldr	r3, [r6, #0]
    9980:	3301      	adds	r3, #1
    9982:	6033      	str	r3, [r6, #0]
    9984:	e007      	b.n	9996 <_scanf_i+0x15e>
    9986:	23c0      	movs	r3, #192	; 0xc0
    9988:	005b      	lsls	r3, r3, #1
    998a:	58e3      	ldr	r3, [r4, r3]
    998c:	9804      	ldr	r0, [sp, #16]
    998e:	1c31      	adds	r1, r6, #0
    9990:	4798      	blx	r3
    9992:	2800      	cmp	r0, #0
    9994:	d104      	bne.n	99a0 <_scanf_i+0x168>
    9996:	68a3      	ldr	r3, [r4, #8]
    9998:	3b01      	subs	r3, #1
    999a:	60a3      	str	r3, [r4, #8]
    999c:	e7cc      	b.n	9938 <_scanf_i+0x100>
    999e:	2700      	movs	r7, #0
    99a0:	6823      	ldr	r3, [r4, #0]
    99a2:	05db      	lsls	r3, r3, #23
    99a4:	d50e      	bpl.n	99c4 <_scanf_i+0x18c>
    99a6:	9b00      	ldr	r3, [sp, #0]
    99a8:	429d      	cmp	r5, r3
    99aa:	d907      	bls.n	99bc <_scanf_i+0x184>
    99ac:	23be      	movs	r3, #190	; 0xbe
    99ae:	3d01      	subs	r5, #1
    99b0:	005b      	lsls	r3, r3, #1
    99b2:	7829      	ldrb	r1, [r5, #0]
    99b4:	58e3      	ldr	r3, [r4, r3]
    99b6:	9804      	ldr	r0, [sp, #16]
    99b8:	1c32      	adds	r2, r6, #0
    99ba:	4798      	blx	r3
    99bc:	9b00      	ldr	r3, [sp, #0]
    99be:	2001      	movs	r0, #1
    99c0:	429d      	cmp	r5, r3
    99c2:	d025      	beq.n	9a10 <_scanf_i+0x1d8>
    99c4:	2210      	movs	r2, #16
    99c6:	6823      	ldr	r3, [r4, #0]
    99c8:	401a      	ands	r2, r3
    99ca:	d11a      	bne.n	9a02 <_scanf_i+0x1ca>
    99cc:	702a      	strb	r2, [r5, #0]
    99ce:	6863      	ldr	r3, [r4, #4]
    99d0:	9804      	ldr	r0, [sp, #16]
    99d2:	9900      	ldr	r1, [sp, #0]
    99d4:	9e05      	ldr	r6, [sp, #20]
    99d6:	47b0      	blx	r6
    99d8:	9b01      	ldr	r3, [sp, #4]
    99da:	6822      	ldr	r2, [r4, #0]
    99dc:	681b      	ldr	r3, [r3, #0]
    99de:	0691      	lsls	r1, r2, #26
    99e0:	d407      	bmi.n	99f2 <_scanf_i+0x1ba>
    99e2:	07d1      	lsls	r1, r2, #31
    99e4:	d505      	bpl.n	99f2 <_scanf_i+0x1ba>
    99e6:	9901      	ldr	r1, [sp, #4]
    99e8:	1d1a      	adds	r2, r3, #4
    99ea:	600a      	str	r2, [r1, #0]
    99ec:	681b      	ldr	r3, [r3, #0]
    99ee:	8018      	strh	r0, [r3, #0]
    99f0:	e004      	b.n	99fc <_scanf_i+0x1c4>
    99f2:	9901      	ldr	r1, [sp, #4]
    99f4:	1d1a      	adds	r2, r3, #4
    99f6:	600a      	str	r2, [r1, #0]
    99f8:	681b      	ldr	r3, [r3, #0]
    99fa:	6018      	str	r0, [r3, #0]
    99fc:	68e3      	ldr	r3, [r4, #12]
    99fe:	3301      	adds	r3, #1
    9a00:	60e3      	str	r3, [r4, #12]
    9a02:	2000      	movs	r0, #0
    9a04:	9b00      	ldr	r3, [sp, #0]
    9a06:	1aed      	subs	r5, r5, r3
    9a08:	6923      	ldr	r3, [r4, #16]
    9a0a:	19ed      	adds	r5, r5, r7
    9a0c:	195d      	adds	r5, r3, r5
    9a0e:	6125      	str	r5, [r4, #16]
    9a10:	b00b      	add	sp, #44	; 0x2c
    9a12:	bdf0      	pop	{r4, r5, r6, r7, pc}
    9a14:	0000e3d0 	.word	0x0000e3d0
    9a18:	0000ab59 	.word	0x0000ab59
    9a1c:	0000ac79 	.word	0x0000ac79
    9a20:	fffffaff 	.word	0xfffffaff
    9a24:	0000e3dc 	.word	0x0000e3dc
    9a28:	fffff6ff 	.word	0xfffff6ff

00009a2c <_open_r>:
    9a2c:	b538      	push	{r3, r4, r5, lr}
    9a2e:	1c05      	adds	r5, r0, #0
    9a30:	2000      	movs	r0, #0
    9a32:	4c07      	ldr	r4, [pc, #28]	; (9a50 <_open_r+0x24>)
    9a34:	6020      	str	r0, [r4, #0]
    9a36:	1c08      	adds	r0, r1, #0
    9a38:	1c11      	adds	r1, r2, #0
    9a3a:	1c1a      	adds	r2, r3, #0
    9a3c:	f7f9 fd66 	bl	350c <_open>
    9a40:	1c43      	adds	r3, r0, #1
    9a42:	d103      	bne.n	9a4c <_open_r+0x20>
    9a44:	6823      	ldr	r3, [r4, #0]
    9a46:	2b00      	cmp	r3, #0
    9a48:	d000      	beq.n	9a4c <_open_r+0x20>
    9a4a:	602b      	str	r3, [r5, #0]
    9a4c:	bd38      	pop	{r3, r4, r5, pc}
    9a4e:	46c0      	nop			; (mov r8, r8)
    9a50:	20004624 	.word	0x20004624

00009a54 <_puts_r>:
    9a54:	b570      	push	{r4, r5, r6, lr}
    9a56:	1c05      	adds	r5, r0, #0
    9a58:	1c0e      	adds	r6, r1, #0
    9a5a:	2800      	cmp	r0, #0
    9a5c:	d004      	beq.n	9a68 <_puts_r+0x14>
    9a5e:	6983      	ldr	r3, [r0, #24]
    9a60:	2b00      	cmp	r3, #0
    9a62:	d101      	bne.n	9a68 <_puts_r+0x14>
    9a64:	f7fe fc3a 	bl	82dc <__sinit>
    9a68:	68ac      	ldr	r4, [r5, #8]
    9a6a:	89a3      	ldrh	r3, [r4, #12]
    9a6c:	071b      	lsls	r3, r3, #28
    9a6e:	d502      	bpl.n	9a76 <_puts_r+0x22>
    9a70:	6923      	ldr	r3, [r4, #16]
    9a72:	2b00      	cmp	r3, #0
    9a74:	d119      	bne.n	9aaa <_puts_r+0x56>
    9a76:	1c28      	adds	r0, r5, #0
    9a78:	1c21      	adds	r1, r4, #0
    9a7a:	f001 fa29 	bl	aed0 <__swsetup_r>
    9a7e:	2800      	cmp	r0, #0
    9a80:	d013      	beq.n	9aaa <_puts_r+0x56>
    9a82:	2001      	movs	r0, #1
    9a84:	4240      	negs	r0, r0
    9a86:	e045      	b.n	9b14 <_puts_r+0xc0>
    9a88:	7831      	ldrb	r1, [r6, #0]
    9a8a:	2b00      	cmp	r3, #0
    9a8c:	da1b      	bge.n	9ac6 <_puts_r+0x72>
    9a8e:	69a2      	ldr	r2, [r4, #24]
    9a90:	4293      	cmp	r3, r2
    9a92:	da11      	bge.n	9ab8 <_puts_r+0x64>
    9a94:	1c22      	adds	r2, r4, #0
    9a96:	1c28      	adds	r0, r5, #0
    9a98:	f001 f9ae 	bl	adf8 <__swbuf_r>
    9a9c:	3001      	adds	r0, #1
    9a9e:	4242      	negs	r2, r0
    9aa0:	4142      	adcs	r2, r0
    9aa2:	b2d0      	uxtb	r0, r2
    9aa4:	2800      	cmp	r0, #0
    9aa6:	d1ec      	bne.n	9a82 <_puts_r+0x2e>
    9aa8:	3601      	adds	r6, #1
    9aaa:	68a3      	ldr	r3, [r4, #8]
    9aac:	7832      	ldrb	r2, [r6, #0]
    9aae:	3b01      	subs	r3, #1
    9ab0:	60a3      	str	r3, [r4, #8]
    9ab2:	2a00      	cmp	r2, #0
    9ab4:	d1e8      	bne.n	9a88 <_puts_r+0x34>
    9ab6:	e00c      	b.n	9ad2 <_puts_r+0x7e>
    9ab8:	6823      	ldr	r3, [r4, #0]
    9aba:	7019      	strb	r1, [r3, #0]
    9abc:	6823      	ldr	r3, [r4, #0]
    9abe:	7819      	ldrb	r1, [r3, #0]
    9ac0:	290a      	cmp	r1, #10
    9ac2:	d103      	bne.n	9acc <_puts_r+0x78>
    9ac4:	e7e6      	b.n	9a94 <_puts_r+0x40>
    9ac6:	6823      	ldr	r3, [r4, #0]
    9ac8:	7019      	strb	r1, [r3, #0]
    9aca:	6823      	ldr	r3, [r4, #0]
    9acc:	3301      	adds	r3, #1
    9ace:	6023      	str	r3, [r4, #0]
    9ad0:	e7ea      	b.n	9aa8 <_puts_r+0x54>
    9ad2:	2b00      	cmp	r3, #0
    9ad4:	da17      	bge.n	9b06 <_puts_r+0xb2>
    9ad6:	69a2      	ldr	r2, [r4, #24]
    9ad8:	4293      	cmp	r3, r2
    9ada:	db08      	blt.n	9aee <_puts_r+0x9a>
    9adc:	230a      	movs	r3, #10
    9ade:	6822      	ldr	r2, [r4, #0]
    9ae0:	7013      	strb	r3, [r2, #0]
    9ae2:	6823      	ldr	r3, [r4, #0]
    9ae4:	7819      	ldrb	r1, [r3, #0]
    9ae6:	290a      	cmp	r1, #10
    9ae8:	d111      	bne.n	9b0e <_puts_r+0xba>
    9aea:	1c28      	adds	r0, r5, #0
    9aec:	e001      	b.n	9af2 <_puts_r+0x9e>
    9aee:	1c28      	adds	r0, r5, #0
    9af0:	210a      	movs	r1, #10
    9af2:	1c22      	adds	r2, r4, #0
    9af4:	f001 f980 	bl	adf8 <__swbuf_r>
    9af8:	3001      	adds	r0, #1
    9afa:	4242      	negs	r2, r0
    9afc:	4142      	adcs	r2, r0
    9afe:	b2d0      	uxtb	r0, r2
    9b00:	2800      	cmp	r0, #0
    9b02:	d006      	beq.n	9b12 <_puts_r+0xbe>
    9b04:	e7bd      	b.n	9a82 <_puts_r+0x2e>
    9b06:	230a      	movs	r3, #10
    9b08:	6822      	ldr	r2, [r4, #0]
    9b0a:	7013      	strb	r3, [r2, #0]
    9b0c:	6823      	ldr	r3, [r4, #0]
    9b0e:	3301      	adds	r3, #1
    9b10:	6023      	str	r3, [r4, #0]
    9b12:	200a      	movs	r0, #10
    9b14:	bd70      	pop	{r4, r5, r6, pc}
	...

00009b18 <puts>:
    9b18:	b508      	push	{r3, lr}
    9b1a:	4b03      	ldr	r3, [pc, #12]	; (9b28 <puts+0x10>)
    9b1c:	1c01      	adds	r1, r0, #0
    9b1e:	6818      	ldr	r0, [r3, #0]
    9b20:	f7ff ff98 	bl	9a54 <_puts_r>
    9b24:	bd08      	pop	{r3, pc}
    9b26:	46c0      	nop			; (mov r8, r8)
    9b28:	20000134 	.word	0x20000134

00009b2c <__fpclassifyd>:
    9b2c:	b530      	push	{r4, r5, lr}
    9b2e:	1c0c      	adds	r4, r1, #0
    9b30:	2302      	movs	r3, #2
    9b32:	4304      	orrs	r4, r0
    9b34:	d017      	beq.n	9b66 <__fpclassifyd+0x3a>
    9b36:	2480      	movs	r4, #128	; 0x80
    9b38:	0624      	lsls	r4, r4, #24
    9b3a:	42a1      	cmp	r1, r4
    9b3c:	d101      	bne.n	9b42 <__fpclassifyd+0x16>
    9b3e:	2800      	cmp	r0, #0
    9b40:	d011      	beq.n	9b66 <__fpclassifyd+0x3a>
    9b42:	4b0a      	ldr	r3, [pc, #40]	; (9b6c <__fpclassifyd+0x40>)
    9b44:	0049      	lsls	r1, r1, #1
    9b46:	0849      	lsrs	r1, r1, #1
    9b48:	4a09      	ldr	r2, [pc, #36]	; (9b70 <__fpclassifyd+0x44>)
    9b4a:	18cc      	adds	r4, r1, r3
    9b4c:	2304      	movs	r3, #4
    9b4e:	4294      	cmp	r4, r2
    9b50:	d909      	bls.n	9b66 <__fpclassifyd+0x3a>
    9b52:	4a08      	ldr	r2, [pc, #32]	; (9b74 <__fpclassifyd+0x48>)
    9b54:	3b01      	subs	r3, #1
    9b56:	4291      	cmp	r1, r2
    9b58:	d905      	bls.n	9b66 <__fpclassifyd+0x3a>
    9b5a:	4a07      	ldr	r2, [pc, #28]	; (9b78 <__fpclassifyd+0x4c>)
    9b5c:	2300      	movs	r3, #0
    9b5e:	4291      	cmp	r1, r2
    9b60:	d101      	bne.n	9b66 <__fpclassifyd+0x3a>
    9b62:	4243      	negs	r3, r0
    9b64:	4143      	adcs	r3, r0
    9b66:	1c18      	adds	r0, r3, #0
    9b68:	bd30      	pop	{r4, r5, pc}
    9b6a:	46c0      	nop			; (mov r8, r8)
    9b6c:	fff00000 	.word	0xfff00000
    9b70:	7fdfffff 	.word	0x7fdfffff
    9b74:	000fffff 	.word	0x000fffff
    9b78:	7ff00000 	.word	0x7ff00000

00009b7c <_sbrk_r>:
    9b7c:	b538      	push	{r3, r4, r5, lr}
    9b7e:	2300      	movs	r3, #0
    9b80:	4c06      	ldr	r4, [pc, #24]	; (9b9c <_sbrk_r+0x20>)
    9b82:	1c05      	adds	r5, r0, #0
    9b84:	1c08      	adds	r0, r1, #0
    9b86:	6023      	str	r3, [r4, #0]
    9b88:	f7f9 fde8 	bl	375c <_sbrk>
    9b8c:	1c43      	adds	r3, r0, #1
    9b8e:	d103      	bne.n	9b98 <_sbrk_r+0x1c>
    9b90:	6823      	ldr	r3, [r4, #0]
    9b92:	2b00      	cmp	r3, #0
    9b94:	d000      	beq.n	9b98 <_sbrk_r+0x1c>
    9b96:	602b      	str	r3, [r5, #0]
    9b98:	bd38      	pop	{r3, r4, r5, pc}
    9b9a:	46c0      	nop			; (mov r8, r8)
    9b9c:	20004624 	.word	0x20004624

00009ba0 <__sccl>:
    9ba0:	b5f0      	push	{r4, r5, r6, r7, lr}
    9ba2:	780a      	ldrb	r2, [r1, #0]
    9ba4:	2a5e      	cmp	r2, #94	; 0x5e
    9ba6:	d002      	beq.n	9bae <__sccl+0xe>
    9ba8:	1c4b      	adds	r3, r1, #1
    9baa:	2400      	movs	r4, #0
    9bac:	e002      	b.n	9bb4 <__sccl+0x14>
    9bae:	2401      	movs	r4, #1
    9bb0:	784a      	ldrb	r2, [r1, #1]
    9bb2:	1c8b      	adds	r3, r1, #2
    9bb4:	1c01      	adds	r1, r0, #0
    9bb6:	1c45      	adds	r5, r0, #1
    9bb8:	35ff      	adds	r5, #255	; 0xff
    9bba:	700c      	strb	r4, [r1, #0]
    9bbc:	3101      	adds	r1, #1
    9bbe:	42a9      	cmp	r1, r5
    9bc0:	d1fb      	bne.n	9bba <__sccl+0x1a>
    9bc2:	2a00      	cmp	r2, #0
    9bc4:	d101      	bne.n	9bca <__sccl+0x2a>
    9bc6:	1e58      	subs	r0, r3, #1
    9bc8:	e01c      	b.n	9c04 <__sccl+0x64>
    9bca:	2101      	movs	r1, #1
    9bcc:	1b0c      	subs	r4, r1, r4
    9bce:	b2e7      	uxtb	r7, r4
    9bd0:	5487      	strb	r7, [r0, r2]
    9bd2:	7819      	ldrb	r1, [r3, #0]
    9bd4:	1c5e      	adds	r6, r3, #1
    9bd6:	292d      	cmp	r1, #45	; 0x2d
    9bd8:	d006      	beq.n	9be8 <__sccl+0x48>
    9bda:	295d      	cmp	r1, #93	; 0x5d
    9bdc:	d00f      	beq.n	9bfe <__sccl+0x5e>
    9bde:	2900      	cmp	r1, #0
    9be0:	d00f      	beq.n	9c02 <__sccl+0x62>
    9be2:	1c0a      	adds	r2, r1, #0
    9be4:	1c33      	adds	r3, r6, #0
    9be6:	e7f2      	b.n	9bce <__sccl+0x2e>
    9be8:	785d      	ldrb	r5, [r3, #1]
    9bea:	2d5d      	cmp	r5, #93	; 0x5d
    9bec:	d0f9      	beq.n	9be2 <__sccl+0x42>
    9bee:	4295      	cmp	r5, r2
    9bf0:	dbf7      	blt.n	9be2 <__sccl+0x42>
    9bf2:	3302      	adds	r3, #2
    9bf4:	3201      	adds	r2, #1
    9bf6:	5487      	strb	r7, [r0, r2]
    9bf8:	42aa      	cmp	r2, r5
    9bfa:	dbfb      	blt.n	9bf4 <__sccl+0x54>
    9bfc:	e7e9      	b.n	9bd2 <__sccl+0x32>
    9bfe:	1c30      	adds	r0, r6, #0
    9c00:	e000      	b.n	9c04 <__sccl+0x64>
    9c02:	1c18      	adds	r0, r3, #0
    9c04:	bdf0      	pop	{r4, r5, r6, r7, pc}

00009c06 <setbuf>:
    9c06:	b508      	push	{r3, lr}
    9c08:	424a      	negs	r2, r1
    9c0a:	414a      	adcs	r2, r1
    9c0c:	2380      	movs	r3, #128	; 0x80
    9c0e:	0052      	lsls	r2, r2, #1
    9c10:	00db      	lsls	r3, r3, #3
    9c12:	f000 f801 	bl	9c18 <setvbuf>
    9c16:	bd08      	pop	{r3, pc}

00009c18 <setvbuf>:
    9c18:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    9c1a:	1c1e      	adds	r6, r3, #0
    9c1c:	4b3c      	ldr	r3, [pc, #240]	; (9d10 <setvbuf+0xf8>)
    9c1e:	1c04      	adds	r4, r0, #0
    9c20:	681d      	ldr	r5, [r3, #0]
    9c22:	1c0f      	adds	r7, r1, #0
    9c24:	9201      	str	r2, [sp, #4]
    9c26:	2d00      	cmp	r5, #0
    9c28:	d005      	beq.n	9c36 <setvbuf+0x1e>
    9c2a:	69ab      	ldr	r3, [r5, #24]
    9c2c:	2b00      	cmp	r3, #0
    9c2e:	d102      	bne.n	9c36 <setvbuf+0x1e>
    9c30:	1c28      	adds	r0, r5, #0
    9c32:	f7fe fb53 	bl	82dc <__sinit>
    9c36:	4b37      	ldr	r3, [pc, #220]	; (9d14 <setvbuf+0xfc>)
    9c38:	429c      	cmp	r4, r3
    9c3a:	d101      	bne.n	9c40 <setvbuf+0x28>
    9c3c:	686c      	ldr	r4, [r5, #4]
    9c3e:	e008      	b.n	9c52 <setvbuf+0x3a>
    9c40:	4b35      	ldr	r3, [pc, #212]	; (9d18 <setvbuf+0x100>)
    9c42:	429c      	cmp	r4, r3
    9c44:	d101      	bne.n	9c4a <setvbuf+0x32>
    9c46:	68ac      	ldr	r4, [r5, #8]
    9c48:	e003      	b.n	9c52 <setvbuf+0x3a>
    9c4a:	4b34      	ldr	r3, [pc, #208]	; (9d1c <setvbuf+0x104>)
    9c4c:	429c      	cmp	r4, r3
    9c4e:	d100      	bne.n	9c52 <setvbuf+0x3a>
    9c50:	68ec      	ldr	r4, [r5, #12]
    9c52:	9b01      	ldr	r3, [sp, #4]
    9c54:	2b02      	cmp	r3, #2
    9c56:	d858      	bhi.n	9d0a <setvbuf+0xf2>
    9c58:	2e00      	cmp	r6, #0
    9c5a:	db56      	blt.n	9d0a <setvbuf+0xf2>
    9c5c:	1c28      	adds	r0, r5, #0
    9c5e:	1c21      	adds	r1, r4, #0
    9c60:	f7fe faba 	bl	81d8 <_fflush_r>
    9c64:	2300      	movs	r3, #0
    9c66:	6063      	str	r3, [r4, #4]
    9c68:	61a3      	str	r3, [r4, #24]
    9c6a:	89a3      	ldrh	r3, [r4, #12]
    9c6c:	061b      	lsls	r3, r3, #24
    9c6e:	d503      	bpl.n	9c78 <setvbuf+0x60>
    9c70:	1c28      	adds	r0, r5, #0
    9c72:	6921      	ldr	r1, [r4, #16]
    9c74:	f7fe fd5a 	bl	872c <_free_r>
    9c78:	2283      	movs	r2, #131	; 0x83
    9c7a:	89a3      	ldrh	r3, [r4, #12]
    9c7c:	4393      	bics	r3, r2
    9c7e:	81a3      	strh	r3, [r4, #12]
    9c80:	9b01      	ldr	r3, [sp, #4]
    9c82:	2b02      	cmp	r3, #2
    9c84:	d013      	beq.n	9cae <setvbuf+0x96>
    9c86:	2f00      	cmp	r7, #0
    9c88:	d125      	bne.n	9cd6 <setvbuf+0xbe>
    9c8a:	2e00      	cmp	r6, #0
    9c8c:	d101      	bne.n	9c92 <setvbuf+0x7a>
    9c8e:	2680      	movs	r6, #128	; 0x80
    9c90:	00f6      	lsls	r6, r6, #3
    9c92:	1c30      	adds	r0, r6, #0
    9c94:	f7fe fd1a 	bl	86cc <malloc>
    9c98:	1e07      	subs	r7, r0, #0
    9c9a:	d118      	bne.n	9cce <setvbuf+0xb6>
    9c9c:	2080      	movs	r0, #128	; 0x80
    9c9e:	00c0      	lsls	r0, r0, #3
    9ca0:	f7fe fd14 	bl	86cc <malloc>
    9ca4:	1e07      	subs	r7, r0, #0
    9ca6:	d110      	bne.n	9cca <setvbuf+0xb2>
    9ca8:	2001      	movs	r0, #1
    9caa:	4240      	negs	r0, r0
    9cac:	e000      	b.n	9cb0 <setvbuf+0x98>
    9cae:	2000      	movs	r0, #0
    9cb0:	2202      	movs	r2, #2
    9cb2:	89a3      	ldrh	r3, [r4, #12]
    9cb4:	4313      	orrs	r3, r2
    9cb6:	81a3      	strh	r3, [r4, #12]
    9cb8:	2300      	movs	r3, #0
    9cba:	60a3      	str	r3, [r4, #8]
    9cbc:	1c23      	adds	r3, r4, #0
    9cbe:	3347      	adds	r3, #71	; 0x47
    9cc0:	6023      	str	r3, [r4, #0]
    9cc2:	6123      	str	r3, [r4, #16]
    9cc4:	2301      	movs	r3, #1
    9cc6:	6163      	str	r3, [r4, #20]
    9cc8:	e021      	b.n	9d0e <setvbuf+0xf6>
    9cca:	2680      	movs	r6, #128	; 0x80
    9ccc:	00f6      	lsls	r6, r6, #3
    9cce:	2280      	movs	r2, #128	; 0x80
    9cd0:	89a3      	ldrh	r3, [r4, #12]
    9cd2:	4313      	orrs	r3, r2
    9cd4:	81a3      	strh	r3, [r4, #12]
    9cd6:	9b01      	ldr	r3, [sp, #4]
    9cd8:	2b01      	cmp	r3, #1
    9cda:	d105      	bne.n	9ce8 <setvbuf+0xd0>
    9cdc:	89a3      	ldrh	r3, [r4, #12]
    9cde:	9a01      	ldr	r2, [sp, #4]
    9ce0:	431a      	orrs	r2, r3
    9ce2:	4273      	negs	r3, r6
    9ce4:	81a2      	strh	r2, [r4, #12]
    9ce6:	61a3      	str	r3, [r4, #24]
    9ce8:	4b0d      	ldr	r3, [pc, #52]	; (9d20 <setvbuf+0x108>)
    9cea:	2000      	movs	r0, #0
    9cec:	62ab      	str	r3, [r5, #40]	; 0x28
    9cee:	89a2      	ldrh	r2, [r4, #12]
    9cf0:	6027      	str	r7, [r4, #0]
    9cf2:	6127      	str	r7, [r4, #16]
    9cf4:	6166      	str	r6, [r4, #20]
    9cf6:	0713      	lsls	r3, r2, #28
    9cf8:	d509      	bpl.n	9d0e <setvbuf+0xf6>
    9cfa:	2303      	movs	r3, #3
    9cfc:	401a      	ands	r2, r3
    9cfe:	4253      	negs	r3, r2
    9d00:	4153      	adcs	r3, r2
    9d02:	425b      	negs	r3, r3
    9d04:	401e      	ands	r6, r3
    9d06:	60a6      	str	r6, [r4, #8]
    9d08:	e001      	b.n	9d0e <setvbuf+0xf6>
    9d0a:	2001      	movs	r0, #1
    9d0c:	4240      	negs	r0, r0
    9d0e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    9d10:	20000134 	.word	0x20000134
    9d14:	0000e320 	.word	0x0000e320
    9d18:	0000e340 	.word	0x0000e340
    9d1c:	0000e360 	.word	0x0000e360
    9d20:	00008259 	.word	0x00008259

00009d24 <nanf>:
    9d24:	4800      	ldr	r0, [pc, #0]	; (9d28 <nanf+0x4>)
    9d26:	4770      	bx	lr
    9d28:	7fc00000 	.word	0x7fc00000

00009d2c <siprintf>:
    9d2c:	b40e      	push	{r1, r2, r3}
    9d2e:	b510      	push	{r4, lr}
    9d30:	b09d      	sub	sp, #116	; 0x74
    9d32:	a902      	add	r1, sp, #8
    9d34:	9002      	str	r0, [sp, #8]
    9d36:	6108      	str	r0, [r1, #16]
    9d38:	480b      	ldr	r0, [pc, #44]	; (9d68 <siprintf+0x3c>)
    9d3a:	2482      	movs	r4, #130	; 0x82
    9d3c:	6088      	str	r0, [r1, #8]
    9d3e:	6148      	str	r0, [r1, #20]
    9d40:	2001      	movs	r0, #1
    9d42:	4240      	negs	r0, r0
    9d44:	ab1f      	add	r3, sp, #124	; 0x7c
    9d46:	81c8      	strh	r0, [r1, #14]
    9d48:	4808      	ldr	r0, [pc, #32]	; (9d6c <siprintf+0x40>)
    9d4a:	cb04      	ldmia	r3!, {r2}
    9d4c:	00a4      	lsls	r4, r4, #2
    9d4e:	6800      	ldr	r0, [r0, #0]
    9d50:	9301      	str	r3, [sp, #4]
    9d52:	818c      	strh	r4, [r1, #12]
    9d54:	f003 f802 	bl	cd5c <_svfiprintf_r>
    9d58:	2300      	movs	r3, #0
    9d5a:	9a02      	ldr	r2, [sp, #8]
    9d5c:	7013      	strb	r3, [r2, #0]
    9d5e:	b01d      	add	sp, #116	; 0x74
    9d60:	bc10      	pop	{r4}
    9d62:	bc08      	pop	{r3}
    9d64:	b003      	add	sp, #12
    9d66:	4718      	bx	r3
    9d68:	7fffffff 	.word	0x7fffffff
    9d6c:	20000134 	.word	0x20000134

00009d70 <siscanf>:
    9d70:	b40e      	push	{r1, r2, r3}
    9d72:	2381      	movs	r3, #129	; 0x81
    9d74:	b570      	push	{r4, r5, r6, lr}
    9d76:	b09d      	sub	sp, #116	; 0x74
    9d78:	ac02      	add	r4, sp, #8
    9d7a:	ad21      	add	r5, sp, #132	; 0x84
    9d7c:	009b      	lsls	r3, r3, #2
    9d7e:	cd40      	ldmia	r5!, {r6}
    9d80:	81a3      	strh	r3, [r4, #12]
    9d82:	9002      	str	r0, [sp, #8]
    9d84:	9006      	str	r0, [sp, #24]
    9d86:	f000 f873 	bl	9e70 <strlen>
    9d8a:	4b0b      	ldr	r3, [pc, #44]	; (9db8 <siscanf+0x48>)
    9d8c:	6060      	str	r0, [r4, #4]
    9d8e:	6263      	str	r3, [r4, #36]	; 0x24
    9d90:	2300      	movs	r3, #0
    9d92:	6363      	str	r3, [r4, #52]	; 0x34
    9d94:	64a3      	str	r3, [r4, #72]	; 0x48
    9d96:	3b01      	subs	r3, #1
    9d98:	81e3      	strh	r3, [r4, #14]
    9d9a:	4b08      	ldr	r3, [pc, #32]	; (9dbc <siscanf+0x4c>)
    9d9c:	6160      	str	r0, [r4, #20]
    9d9e:	1c21      	adds	r1, r4, #0
    9da0:	6818      	ldr	r0, [r3, #0]
    9da2:	1c32      	adds	r2, r6, #0
    9da4:	1c2b      	adds	r3, r5, #0
    9da6:	9501      	str	r5, [sp, #4]
    9da8:	f003 f92a 	bl	d000 <__ssvfiscanf_r>
    9dac:	b01d      	add	sp, #116	; 0x74
    9dae:	bc70      	pop	{r4, r5, r6}
    9db0:	bc08      	pop	{r3}
    9db2:	b003      	add	sp, #12
    9db4:	4718      	bx	r3
    9db6:	46c0      	nop			; (mov r8, r8)
    9db8:	00009de9 	.word	0x00009de9
    9dbc:	20000134 	.word	0x20000134

00009dc0 <__sread>:
    9dc0:	b538      	push	{r3, r4, r5, lr}
    9dc2:	1c0c      	adds	r4, r1, #0
    9dc4:	250e      	movs	r5, #14
    9dc6:	5f49      	ldrsh	r1, [r1, r5]
    9dc8:	f003 fa92 	bl	d2f0 <_read_r>
    9dcc:	2800      	cmp	r0, #0
    9dce:	db03      	blt.n	9dd8 <__sread+0x18>
    9dd0:	6d63      	ldr	r3, [r4, #84]	; 0x54
    9dd2:	181b      	adds	r3, r3, r0
    9dd4:	6563      	str	r3, [r4, #84]	; 0x54
    9dd6:	e003      	b.n	9de0 <__sread+0x20>
    9dd8:	89a2      	ldrh	r2, [r4, #12]
    9dda:	4b02      	ldr	r3, [pc, #8]	; (9de4 <__sread+0x24>)
    9ddc:	4013      	ands	r3, r2
    9dde:	81a3      	strh	r3, [r4, #12]
    9de0:	bd38      	pop	{r3, r4, r5, pc}
    9de2:	46c0      	nop			; (mov r8, r8)
    9de4:	ffffefff 	.word	0xffffefff

00009de8 <__seofread>:
    9de8:	2000      	movs	r0, #0
    9dea:	4770      	bx	lr

00009dec <__swrite>:
    9dec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    9dee:	1c1e      	adds	r6, r3, #0
    9df0:	898b      	ldrh	r3, [r1, #12]
    9df2:	1c05      	adds	r5, r0, #0
    9df4:	1c0c      	adds	r4, r1, #0
    9df6:	1c17      	adds	r7, r2, #0
    9df8:	05db      	lsls	r3, r3, #23
    9dfa:	d505      	bpl.n	9e08 <__swrite+0x1c>
    9dfc:	230e      	movs	r3, #14
    9dfe:	5ec9      	ldrsh	r1, [r1, r3]
    9e00:	2200      	movs	r2, #0
    9e02:	2302      	movs	r3, #2
    9e04:	f002 faea 	bl	c3dc <_lseek_r>
    9e08:	89a2      	ldrh	r2, [r4, #12]
    9e0a:	4b05      	ldr	r3, [pc, #20]	; (9e20 <__swrite+0x34>)
    9e0c:	1c28      	adds	r0, r5, #0
    9e0e:	4013      	ands	r3, r2
    9e10:	81a3      	strh	r3, [r4, #12]
    9e12:	1c3a      	adds	r2, r7, #0
    9e14:	230e      	movs	r3, #14
    9e16:	5ee1      	ldrsh	r1, [r4, r3]
    9e18:	1c33      	adds	r3, r6, #0
    9e1a:	f001 f845 	bl	aea8 <_write_r>
    9e1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    9e20:	ffffefff 	.word	0xffffefff

00009e24 <__sseek>:
    9e24:	b538      	push	{r3, r4, r5, lr}
    9e26:	1c0c      	adds	r4, r1, #0
    9e28:	250e      	movs	r5, #14
    9e2a:	5f49      	ldrsh	r1, [r1, r5]
    9e2c:	f002 fad6 	bl	c3dc <_lseek_r>
    9e30:	89a3      	ldrh	r3, [r4, #12]
    9e32:	1c42      	adds	r2, r0, #1
    9e34:	d103      	bne.n	9e3e <__sseek+0x1a>
    9e36:	4a05      	ldr	r2, [pc, #20]	; (9e4c <__sseek+0x28>)
    9e38:	4013      	ands	r3, r2
    9e3a:	81a3      	strh	r3, [r4, #12]
    9e3c:	e004      	b.n	9e48 <__sseek+0x24>
    9e3e:	2280      	movs	r2, #128	; 0x80
    9e40:	0152      	lsls	r2, r2, #5
    9e42:	4313      	orrs	r3, r2
    9e44:	81a3      	strh	r3, [r4, #12]
    9e46:	6560      	str	r0, [r4, #84]	; 0x54
    9e48:	bd38      	pop	{r3, r4, r5, pc}
    9e4a:	46c0      	nop			; (mov r8, r8)
    9e4c:	ffffefff 	.word	0xffffefff

00009e50 <__sclose>:
    9e50:	b508      	push	{r3, lr}
    9e52:	230e      	movs	r3, #14
    9e54:	5ec9      	ldrsh	r1, [r1, r3]
    9e56:	f001 f8af 	bl	afb8 <_close_r>
    9e5a:	bd08      	pop	{r3, pc}

00009e5c <strcmp>:
    9e5c:	7802      	ldrb	r2, [r0, #0]
    9e5e:	780b      	ldrb	r3, [r1, #0]
    9e60:	2a00      	cmp	r2, #0
    9e62:	d003      	beq.n	9e6c <strcmp+0x10>
    9e64:	3001      	adds	r0, #1
    9e66:	3101      	adds	r1, #1
    9e68:	429a      	cmp	r2, r3
    9e6a:	d0f7      	beq.n	9e5c <strcmp>
    9e6c:	1ad0      	subs	r0, r2, r3
    9e6e:	4770      	bx	lr

00009e70 <strlen>:
    9e70:	2300      	movs	r3, #0
    9e72:	5cc2      	ldrb	r2, [r0, r3]
    9e74:	3301      	adds	r3, #1
    9e76:	2a00      	cmp	r2, #0
    9e78:	d1fb      	bne.n	9e72 <strlen+0x2>
    9e7a:	1e58      	subs	r0, r3, #1
    9e7c:	4770      	bx	lr

00009e7e <strncmp>:
    9e7e:	2300      	movs	r3, #0
    9e80:	b530      	push	{r4, r5, lr}
    9e82:	429a      	cmp	r2, r3
    9e84:	d00d      	beq.n	9ea2 <strncmp+0x24>
    9e86:	3a01      	subs	r2, #1
    9e88:	5cc4      	ldrb	r4, [r0, r3]
    9e8a:	5ccd      	ldrb	r5, [r1, r3]
    9e8c:	42ac      	cmp	r4, r5
    9e8e:	d102      	bne.n	9e96 <strncmp+0x18>
    9e90:	4293      	cmp	r3, r2
    9e92:	d102      	bne.n	9e9a <strncmp+0x1c>
    9e94:	1c25      	adds	r5, r4, #0
    9e96:	1b63      	subs	r3, r4, r5
    9e98:	e003      	b.n	9ea2 <strncmp+0x24>
    9e9a:	3301      	adds	r3, #1
    9e9c:	2c00      	cmp	r4, #0
    9e9e:	d1f3      	bne.n	9e88 <strncmp+0xa>
    9ea0:	e7f8      	b.n	9e94 <strncmp+0x16>
    9ea2:	1c18      	adds	r0, r3, #0
    9ea4:	bd30      	pop	{r4, r5, pc}

00009ea6 <strncpy>:
    9ea6:	1c03      	adds	r3, r0, #0
    9ea8:	b530      	push	{r4, r5, lr}
    9eaa:	2a00      	cmp	r2, #0
    9eac:	d007      	beq.n	9ebe <strncpy+0x18>
    9eae:	780c      	ldrb	r4, [r1, #0]
    9eb0:	3301      	adds	r3, #1
    9eb2:	1e5d      	subs	r5, r3, #1
    9eb4:	3a01      	subs	r2, #1
    9eb6:	702c      	strb	r4, [r5, #0]
    9eb8:	3101      	adds	r1, #1
    9eba:	2c00      	cmp	r4, #0
    9ebc:	d1f5      	bne.n	9eaa <strncpy+0x4>
    9ebe:	189a      	adds	r2, r3, r2
    9ec0:	4293      	cmp	r3, r2
    9ec2:	d003      	beq.n	9ecc <strncpy+0x26>
    9ec4:	2100      	movs	r1, #0
    9ec6:	7019      	strb	r1, [r3, #0]
    9ec8:	3301      	adds	r3, #1
    9eca:	e7f9      	b.n	9ec0 <strncpy+0x1a>
    9ecc:	bd30      	pop	{r4, r5, pc}

00009ece <match>:
    9ece:	b530      	push	{r4, r5, lr}
    9ed0:	6803      	ldr	r3, [r0, #0]
    9ed2:	780c      	ldrb	r4, [r1, #0]
    9ed4:	3301      	adds	r3, #1
    9ed6:	2c00      	cmp	r4, #0
    9ed8:	d00a      	beq.n	9ef0 <match+0x22>
    9eda:	781a      	ldrb	r2, [r3, #0]
    9edc:	1c15      	adds	r5, r2, #0
    9ede:	3d41      	subs	r5, #65	; 0x41
    9ee0:	2d19      	cmp	r5, #25
    9ee2:	d800      	bhi.n	9ee6 <match+0x18>
    9ee4:	3220      	adds	r2, #32
    9ee6:	3101      	adds	r1, #1
    9ee8:	42a2      	cmp	r2, r4
    9eea:	d0f2      	beq.n	9ed2 <match+0x4>
    9eec:	2000      	movs	r0, #0
    9eee:	e001      	b.n	9ef4 <match+0x26>
    9ef0:	6003      	str	r3, [r0, #0]
    9ef2:	2001      	movs	r0, #1
    9ef4:	bd30      	pop	{r4, r5, pc}
	...

00009ef8 <sulp>:
    9ef8:	b570      	push	{r4, r5, r6, lr}
    9efa:	1c16      	adds	r6, r2, #0
    9efc:	1c0d      	adds	r5, r1, #0
    9efe:	f002 fd6d 	bl	c9dc <__ulp>
    9f02:	2e00      	cmp	r6, #0
    9f04:	d00b      	beq.n	9f1e <sulp+0x26>
    9f06:	226b      	movs	r2, #107	; 0x6b
    9f08:	006b      	lsls	r3, r5, #1
    9f0a:	0d5b      	lsrs	r3, r3, #21
    9f0c:	1ad3      	subs	r3, r2, r3
    9f0e:	2b00      	cmp	r3, #0
    9f10:	dd05      	ble.n	9f1e <sulp+0x26>
    9f12:	4d03      	ldr	r5, [pc, #12]	; (9f20 <sulp+0x28>)
    9f14:	051c      	lsls	r4, r3, #20
    9f16:	2200      	movs	r2, #0
    9f18:	1963      	adds	r3, r4, r5
    9f1a:	f7fd f8e1 	bl	70e0 <__aeabi_dmul>
    9f1e:	bd70      	pop	{r4, r5, r6, pc}
    9f20:	3ff00000 	.word	0x3ff00000

00009f24 <_strtod_r>:
    9f24:	2300      	movs	r3, #0
    9f26:	b5f0      	push	{r4, r5, r6, r7, lr}
    9f28:	b0a3      	sub	sp, #140	; 0x8c
    9f2a:	931e      	str	r3, [sp, #120]	; 0x78
    9f2c:	2600      	movs	r6, #0
    9f2e:	2700      	movs	r7, #0
    9f30:	1c0b      	adds	r3, r1, #0
    9f32:	9003      	str	r0, [sp, #12]
    9f34:	9106      	str	r1, [sp, #24]
    9f36:	9219      	str	r2, [sp, #100]	; 0x64
    9f38:	931d      	str	r3, [sp, #116]	; 0x74
    9f3a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    9f3c:	781a      	ldrb	r2, [r3, #0]
    9f3e:	2a0d      	cmp	r2, #13
    9f40:	d805      	bhi.n	9f4e <_strtod_r+0x2a>
    9f42:	2a09      	cmp	r2, #9
    9f44:	d214      	bcs.n	9f70 <_strtod_r+0x4c>
    9f46:	2a00      	cmp	r2, #0
    9f48:	d100      	bne.n	9f4c <_strtod_r+0x28>
    9f4a:	e1c3      	b.n	a2d4 <_strtod_r+0x3b0>
    9f4c:	e012      	b.n	9f74 <_strtod_r+0x50>
    9f4e:	2a2b      	cmp	r2, #43	; 0x2b
    9f50:	d006      	beq.n	9f60 <_strtod_r+0x3c>
    9f52:	2a2d      	cmp	r2, #45	; 0x2d
    9f54:	d002      	beq.n	9f5c <_strtod_r+0x38>
    9f56:	2a20      	cmp	r2, #32
    9f58:	d10c      	bne.n	9f74 <_strtod_r+0x50>
    9f5a:	e009      	b.n	9f70 <_strtod_r+0x4c>
    9f5c:	2201      	movs	r2, #1
    9f5e:	e000      	b.n	9f62 <_strtod_r+0x3e>
    9f60:	2200      	movs	r2, #0
    9f62:	920d      	str	r2, [sp, #52]	; 0x34
    9f64:	1c5a      	adds	r2, r3, #1
    9f66:	921d      	str	r2, [sp, #116]	; 0x74
    9f68:	785b      	ldrb	r3, [r3, #1]
    9f6a:	2b00      	cmp	r3, #0
    9f6c:	d104      	bne.n	9f78 <_strtod_r+0x54>
    9f6e:	e1b1      	b.n	a2d4 <_strtod_r+0x3b0>
    9f70:	3301      	adds	r3, #1
    9f72:	e7e1      	b.n	9f38 <_strtod_r+0x14>
    9f74:	2300      	movs	r3, #0
    9f76:	930d      	str	r3, [sp, #52]	; 0x34
    9f78:	2200      	movs	r2, #0
    9f7a:	9d1d      	ldr	r5, [sp, #116]	; 0x74
    9f7c:	920a      	str	r2, [sp, #40]	; 0x28
    9f7e:	782b      	ldrb	r3, [r5, #0]
    9f80:	2b30      	cmp	r3, #48	; 0x30
    9f82:	d15d      	bne.n	a040 <_strtod_r+0x11c>
    9f84:	786b      	ldrb	r3, [r5, #1]
    9f86:	2b58      	cmp	r3, #88	; 0x58
    9f88:	d001      	beq.n	9f8e <_strtod_r+0x6a>
    9f8a:	2b78      	cmp	r3, #120	; 0x78
    9f8c:	d14c      	bne.n	a028 <_strtod_r+0x104>
    9f8e:	ab1e      	add	r3, sp, #120	; 0x78
    9f90:	9300      	str	r3, [sp, #0]
    9f92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    9f94:	9803      	ldr	r0, [sp, #12]
    9f96:	9301      	str	r3, [sp, #4]
    9f98:	a91d      	add	r1, sp, #116	; 0x74
    9f9a:	4ac2      	ldr	r2, [pc, #776]	; (a2a4 <_strtod_r+0x380>)
    9f9c:	ab1f      	add	r3, sp, #124	; 0x7c
    9f9e:	f001 ff38 	bl	be12 <__gethex>
    9fa2:	2407      	movs	r4, #7
    9fa4:	9004      	str	r0, [sp, #16]
    9fa6:	4004      	ands	r4, r0
    9fa8:	d101      	bne.n	9fae <_strtod_r+0x8a>
    9faa:	f000 fda7 	bl	aafc <_strtod_r+0xbd8>
    9fae:	2c06      	cmp	r4, #6
    9fb0:	d105      	bne.n	9fbe <_strtod_r+0x9a>
    9fb2:	2300      	movs	r3, #0
    9fb4:	3501      	adds	r5, #1
    9fb6:	951d      	str	r5, [sp, #116]	; 0x74
    9fb8:	930d      	str	r3, [sp, #52]	; 0x34
    9fba:	f000 fd9f 	bl	aafc <_strtod_r+0xbd8>
    9fbe:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    9fc0:	2a00      	cmp	r2, #0
    9fc2:	d007      	beq.n	9fd4 <_strtod_r+0xb0>
    9fc4:	a820      	add	r0, sp, #128	; 0x80
    9fc6:	2135      	movs	r1, #53	; 0x35
    9fc8:	f002 fdfc 	bl	cbc4 <__copybits>
    9fcc:	9803      	ldr	r0, [sp, #12]
    9fce:	991e      	ldr	r1, [sp, #120]	; 0x78
    9fd0:	f002 fa64 	bl	c49c <_Bfree>
    9fd4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    9fd6:	2c06      	cmp	r4, #6
    9fd8:	d81c      	bhi.n	a014 <_strtod_r+0xf0>
    9fda:	1c20      	adds	r0, r4, #0
    9fdc:	f003 f9a8 	bl	d330 <__gnu_thumb1_case_uqi>
    9fe0:	14070a04 	.word	0x14070a04
    9fe4:	0a17      	.short	0x0a17
    9fe6:	04          	.byte	0x04
    9fe7:	00          	.byte	0x00
    9fe8:	2700      	movs	r7, #0
    9fea:	1c3e      	adds	r6, r7, #0
    9fec:	e012      	b.n	a014 <_strtod_r+0xf0>
    9fee:	9e20      	ldr	r6, [sp, #128]	; 0x80
    9ff0:	9f21      	ldr	r7, [sp, #132]	; 0x84
    9ff2:	e00f      	b.n	a014 <_strtod_r+0xf0>
    9ff4:	4aac      	ldr	r2, [pc, #688]	; (a2a8 <_strtod_r+0x384>)
    9ff6:	9921      	ldr	r1, [sp, #132]	; 0x84
    9ff8:	189b      	adds	r3, r3, r2
    9ffa:	4aac      	ldr	r2, [pc, #688]	; (a2ac <_strtod_r+0x388>)
    9ffc:	051b      	lsls	r3, r3, #20
    9ffe:	400a      	ands	r2, r1
    a000:	4313      	orrs	r3, r2
    a002:	9e20      	ldr	r6, [sp, #128]	; 0x80
    a004:	1c1f      	adds	r7, r3, #0
    a006:	e005      	b.n	a014 <_strtod_r+0xf0>
    a008:	4fa9      	ldr	r7, [pc, #676]	; (a2b0 <_strtod_r+0x38c>)
    a00a:	2600      	movs	r6, #0
    a00c:	e002      	b.n	a014 <_strtod_r+0xf0>
    a00e:	2601      	movs	r6, #1
    a010:	4fa8      	ldr	r7, [pc, #672]	; (a2b4 <_strtod_r+0x390>)
    a012:	4276      	negs	r6, r6
    a014:	9b04      	ldr	r3, [sp, #16]
    a016:	071b      	lsls	r3, r3, #28
    a018:	d401      	bmi.n	a01e <_strtod_r+0xfa>
    a01a:	f000 fd6f 	bl	aafc <_strtod_r+0xbd8>
    a01e:	2380      	movs	r3, #128	; 0x80
    a020:	061b      	lsls	r3, r3, #24
    a022:	431f      	orrs	r7, r3
    a024:	f000 fd6a 	bl	aafc <_strtod_r+0xbd8>
    a028:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a02a:	1c5a      	adds	r2, r3, #1
    a02c:	921d      	str	r2, [sp, #116]	; 0x74
    a02e:	785b      	ldrb	r3, [r3, #1]
    a030:	2b30      	cmp	r3, #48	; 0x30
    a032:	d0f9      	beq.n	a028 <_strtod_r+0x104>
    a034:	2b00      	cmp	r3, #0
    a036:	d101      	bne.n	a03c <_strtod_r+0x118>
    a038:	f000 fd60 	bl	aafc <_strtod_r+0xbd8>
    a03c:	2301      	movs	r3, #1
    a03e:	930a      	str	r3, [sp, #40]	; 0x28
    a040:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a042:	930c      	str	r3, [sp, #48]	; 0x30
    a044:	2300      	movs	r3, #0
    a046:	9305      	str	r3, [sp, #20]
    a048:	9307      	str	r3, [sp, #28]
    a04a:	9304      	str	r3, [sp, #16]
    a04c:	9c1d      	ldr	r4, [sp, #116]	; 0x74
    a04e:	7823      	ldrb	r3, [r4, #0]
    a050:	1c1a      	adds	r2, r3, #0
    a052:	3a30      	subs	r2, #48	; 0x30
    a054:	9308      	str	r3, [sp, #32]
    a056:	b2d3      	uxtb	r3, r2
    a058:	2b09      	cmp	r3, #9
    a05a:	d812      	bhi.n	a082 <_strtod_r+0x15e>
    a05c:	9904      	ldr	r1, [sp, #16]
    a05e:	230a      	movs	r3, #10
    a060:	2908      	cmp	r1, #8
    a062:	dc04      	bgt.n	a06e <_strtod_r+0x14a>
    a064:	9907      	ldr	r1, [sp, #28]
    a066:	434b      	muls	r3, r1
    a068:	18d3      	adds	r3, r2, r3
    a06a:	9307      	str	r3, [sp, #28]
    a06c:	e003      	b.n	a076 <_strtod_r+0x152>
    a06e:	9905      	ldr	r1, [sp, #20]
    a070:	434b      	muls	r3, r1
    a072:	18d3      	adds	r3, r2, r3
    a074:	9305      	str	r3, [sp, #20]
    a076:	9b04      	ldr	r3, [sp, #16]
    a078:	3401      	adds	r4, #1
    a07a:	3301      	adds	r3, #1
    a07c:	9304      	str	r3, [sp, #16]
    a07e:	941d      	str	r4, [sp, #116]	; 0x74
    a080:	e7e4      	b.n	a04c <_strtod_r+0x128>
    a082:	9803      	ldr	r0, [sp, #12]
    a084:	f002 f9a6 	bl	c3d4 <_localeconv_r>
    a088:	6805      	ldr	r5, [r0, #0]
    a08a:	9803      	ldr	r0, [sp, #12]
    a08c:	f002 f9a2 	bl	c3d4 <_localeconv_r>
    a090:	6800      	ldr	r0, [r0, #0]
    a092:	f7ff feed 	bl	9e70 <strlen>
    a096:	1c29      	adds	r1, r5, #0
    a098:	1c02      	adds	r2, r0, #0
    a09a:	1c20      	adds	r0, r4, #0
    a09c:	f7ff feef 	bl	9e7e <strncmp>
    a0a0:	1e05      	subs	r5, r0, #0
    a0a2:	d005      	beq.n	a0b0 <_strtod_r+0x18c>
    a0a4:	2000      	movs	r0, #0
    a0a6:	9b08      	ldr	r3, [sp, #32]
    a0a8:	9c04      	ldr	r4, [sp, #16]
    a0aa:	1c01      	adds	r1, r0, #0
    a0ac:	9008      	str	r0, [sp, #32]
    a0ae:	e05a      	b.n	a166 <_strtod_r+0x242>
    a0b0:	9803      	ldr	r0, [sp, #12]
    a0b2:	f002 f98f 	bl	c3d4 <_localeconv_r>
    a0b6:	6800      	ldr	r0, [r0, #0]
    a0b8:	f7ff feda 	bl	9e70 <strlen>
    a0bc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a0be:	9a04      	ldr	r2, [sp, #16]
    a0c0:	1818      	adds	r0, r3, r0
    a0c2:	901d      	str	r0, [sp, #116]	; 0x74
    a0c4:	7803      	ldrb	r3, [r0, #0]
    a0c6:	1e10      	subs	r0, r2, #0
    a0c8:	d141      	bne.n	a14e <_strtod_r+0x22a>
    a0ca:	2b30      	cmp	r3, #48	; 0x30
    a0cc:	d105      	bne.n	a0da <_strtod_r+0x1b6>
    a0ce:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a0d0:	3001      	adds	r0, #1
    a0d2:	1c5a      	adds	r2, r3, #1
    a0d4:	921d      	str	r2, [sp, #116]	; 0x74
    a0d6:	785b      	ldrb	r3, [r3, #1]
    a0d8:	e7f7      	b.n	a0ca <_strtod_r+0x1a6>
    a0da:	1c1a      	adds	r2, r3, #0
    a0dc:	3a31      	subs	r2, #49	; 0x31
    a0de:	2a08      	cmp	r2, #8
    a0e0:	d83d      	bhi.n	a15e <_strtod_r+0x23a>
    a0e2:	1c01      	adds	r1, r0, #0
    a0e4:	2000      	movs	r0, #0
    a0e6:	1c04      	adds	r4, r0, #0
    a0e8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    a0ea:	920c      	str	r2, [sp, #48]	; 0x30
    a0ec:	3b30      	subs	r3, #48	; 0x30
    a0ee:	1c42      	adds	r2, r0, #1
    a0f0:	2b00      	cmp	r3, #0
    a0f2:	d026      	beq.n	a142 <_strtod_r+0x21e>
    a0f4:	1889      	adds	r1, r1, r2
    a0f6:	1c22      	adds	r2, r4, #0
    a0f8:	1900      	adds	r0, r0, r4
    a0fa:	4282      	cmp	r2, r0
    a0fc:	d00f      	beq.n	a11e <_strtod_r+0x1fa>
    a0fe:	3201      	adds	r2, #1
    a100:	1e54      	subs	r4, r2, #1
    a102:	2c08      	cmp	r4, #8
    a104:	dc04      	bgt.n	a110 <_strtod_r+0x1ec>
    a106:	240a      	movs	r4, #10
    a108:	9d07      	ldr	r5, [sp, #28]
    a10a:	4365      	muls	r5, r4
    a10c:	9507      	str	r5, [sp, #28]
    a10e:	e7f4      	b.n	a0fa <_strtod_r+0x1d6>
    a110:	2a10      	cmp	r2, #16
    a112:	dcf2      	bgt.n	a0fa <_strtod_r+0x1d6>
    a114:	240a      	movs	r4, #10
    a116:	9d05      	ldr	r5, [sp, #20]
    a118:	4365      	muls	r5, r4
    a11a:	9505      	str	r5, [sp, #20]
    a11c:	e7ed      	b.n	a0fa <_strtod_r+0x1d6>
    a11e:	1c54      	adds	r4, r2, #1
    a120:	2a08      	cmp	r2, #8
    a122:	dc06      	bgt.n	a132 <_strtod_r+0x20e>
    a124:	220a      	movs	r2, #10
    a126:	9807      	ldr	r0, [sp, #28]
    a128:	4342      	muls	r2, r0
    a12a:	18d3      	adds	r3, r2, r3
    a12c:	9307      	str	r3, [sp, #28]
    a12e:	2200      	movs	r2, #0
    a130:	e007      	b.n	a142 <_strtod_r+0x21e>
    a132:	2200      	movs	r2, #0
    a134:	2c10      	cmp	r4, #16
    a136:	dc04      	bgt.n	a142 <_strtod_r+0x21e>
    a138:	200a      	movs	r0, #10
    a13a:	9d05      	ldr	r5, [sp, #20]
    a13c:	4368      	muls	r0, r5
    a13e:	18c3      	adds	r3, r0, r3
    a140:	9305      	str	r3, [sp, #20]
    a142:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a144:	1c58      	adds	r0, r3, #1
    a146:	901d      	str	r0, [sp, #116]	; 0x74
    a148:	785b      	ldrb	r3, [r3, #1]
    a14a:	1c10      	adds	r0, r2, #0
    a14c:	e002      	b.n	a154 <_strtod_r+0x230>
    a14e:	1c28      	adds	r0, r5, #0
    a150:	1c29      	adds	r1, r5, #0
    a152:	9c04      	ldr	r4, [sp, #16]
    a154:	1c1a      	adds	r2, r3, #0
    a156:	3a30      	subs	r2, #48	; 0x30
    a158:	2a09      	cmp	r2, #9
    a15a:	d9c7      	bls.n	a0ec <_strtod_r+0x1c8>
    a15c:	e001      	b.n	a162 <_strtod_r+0x23e>
    a15e:	2400      	movs	r4, #0
    a160:	1c21      	adds	r1, r4, #0
    a162:	2201      	movs	r2, #1
    a164:	9208      	str	r2, [sp, #32]
    a166:	2220      	movs	r2, #32
    a168:	1c1d      	adds	r5, r3, #0
    a16a:	4395      	bics	r5, r2
    a16c:	2200      	movs	r2, #0
    a16e:	2d45      	cmp	r5, #69	; 0x45
    a170:	d157      	bne.n	a222 <_strtod_r+0x2fe>
    a172:	1c23      	adds	r3, r4, #0
    a174:	9d0a      	ldr	r5, [sp, #40]	; 0x28
    a176:	4303      	orrs	r3, r0
    a178:	432b      	orrs	r3, r5
    a17a:	4293      	cmp	r3, r2
    a17c:	d100      	bne.n	a180 <_strtod_r+0x25c>
    a17e:	e0a9      	b.n	a2d4 <_strtod_r+0x3b0>
    a180:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a182:	9306      	str	r3, [sp, #24]
    a184:	3301      	adds	r3, #1
    a186:	931d      	str	r3, [sp, #116]	; 0x74
    a188:	9b06      	ldr	r3, [sp, #24]
    a18a:	785b      	ldrb	r3, [r3, #1]
    a18c:	2b2b      	cmp	r3, #43	; 0x2b
    a18e:	d006      	beq.n	a19e <_strtod_r+0x27a>
    a190:	2b2d      	cmp	r3, #45	; 0x2d
    a192:	d001      	beq.n	a198 <_strtod_r+0x274>
    a194:	9209      	str	r2, [sp, #36]	; 0x24
    a196:	e008      	b.n	a1aa <_strtod_r+0x286>
    a198:	2301      	movs	r3, #1
    a19a:	9309      	str	r3, [sp, #36]	; 0x24
    a19c:	e000      	b.n	a1a0 <_strtod_r+0x27c>
    a19e:	9209      	str	r2, [sp, #36]	; 0x24
    a1a0:	9b06      	ldr	r3, [sp, #24]
    a1a2:	3302      	adds	r3, #2
    a1a4:	931d      	str	r3, [sp, #116]	; 0x74
    a1a6:	9b06      	ldr	r3, [sp, #24]
    a1a8:	789b      	ldrb	r3, [r3, #2]
    a1aa:	1c1a      	adds	r2, r3, #0
    a1ac:	3a30      	subs	r2, #48	; 0x30
    a1ae:	2a09      	cmp	r2, #9
    a1b0:	d834      	bhi.n	a21c <_strtod_r+0x2f8>
    a1b2:	2b30      	cmp	r3, #48	; 0x30
    a1b4:	d104      	bne.n	a1c0 <_strtod_r+0x29c>
    a1b6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a1b8:	1c5a      	adds	r2, r3, #1
    a1ba:	921d      	str	r2, [sp, #116]	; 0x74
    a1bc:	785b      	ldrb	r3, [r3, #1]
    a1be:	e7f8      	b.n	a1b2 <_strtod_r+0x28e>
    a1c0:	2531      	movs	r5, #49	; 0x31
    a1c2:	426d      	negs	r5, r5
    a1c4:	46ac      	mov	ip, r5
    a1c6:	449c      	add	ip, r3
    a1c8:	4665      	mov	r5, ip
    a1ca:	2200      	movs	r2, #0
    a1cc:	2d08      	cmp	r5, #8
    a1ce:	d828      	bhi.n	a222 <_strtod_r+0x2fe>
    a1d0:	3b30      	subs	r3, #48	; 0x30
    a1d2:	930b      	str	r3, [sp, #44]	; 0x2c
    a1d4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a1d6:	930e      	str	r3, [sp, #56]	; 0x38
    a1d8:	2530      	movs	r5, #48	; 0x30
    a1da:	426d      	negs	r5, r5
    a1dc:	46ac      	mov	ip, r5
    a1de:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a1e0:	1c5a      	adds	r2, r3, #1
    a1e2:	921d      	str	r2, [sp, #116]	; 0x74
    a1e4:	785b      	ldrb	r3, [r3, #1]
    a1e6:	449c      	add	ip, r3
    a1e8:	4665      	mov	r5, ip
    a1ea:	2d09      	cmp	r5, #9
    a1ec:	d806      	bhi.n	a1fc <_strtod_r+0x2d8>
    a1ee:	220a      	movs	r2, #10
    a1f0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    a1f2:	436a      	muls	r2, r5
    a1f4:	18d3      	adds	r3, r2, r3
    a1f6:	3b30      	subs	r3, #48	; 0x30
    a1f8:	930b      	str	r3, [sp, #44]	; 0x2c
    a1fa:	e7ed      	b.n	a1d8 <_strtod_r+0x2b4>
    a1fc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
    a1fe:	1b52      	subs	r2, r2, r5
    a200:	1e15      	subs	r5, r2, #0
    a202:	4a2d      	ldr	r2, [pc, #180]	; (a2b8 <_strtod_r+0x394>)
    a204:	4694      	mov	ip, r2
    a206:	2d08      	cmp	r5, #8
    a208:	dc03      	bgt.n	a212 <_strtod_r+0x2ee>
    a20a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    a20c:	4562      	cmp	r2, ip
    a20e:	dd00      	ble.n	a212 <_strtod_r+0x2ee>
    a210:	4662      	mov	r2, ip
    a212:	9d09      	ldr	r5, [sp, #36]	; 0x24
    a214:	2d00      	cmp	r5, #0
    a216:	d004      	beq.n	a222 <_strtod_r+0x2fe>
    a218:	4252      	negs	r2, r2
    a21a:	e002      	b.n	a222 <_strtod_r+0x2fe>
    a21c:	9a06      	ldr	r2, [sp, #24]
    a21e:	921d      	str	r2, [sp, #116]	; 0x74
    a220:	2200      	movs	r2, #0
    a222:	2c00      	cmp	r4, #0
    a224:	d161      	bne.n	a2ea <_strtod_r+0x3c6>
    a226:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a228:	4310      	orrs	r0, r2
    a22a:	d001      	beq.n	a230 <_strtod_r+0x30c>
    a22c:	f000 fc66 	bl	aafc <_strtod_r+0xbd8>
    a230:	9a08      	ldr	r2, [sp, #32]
    a232:	2a00      	cmp	r2, #0
    a234:	d14e      	bne.n	a2d4 <_strtod_r+0x3b0>
    a236:	2b4e      	cmp	r3, #78	; 0x4e
    a238:	d01c      	beq.n	a274 <_strtod_r+0x350>
    a23a:	dc02      	bgt.n	a242 <_strtod_r+0x31e>
    a23c:	2b49      	cmp	r3, #73	; 0x49
    a23e:	d005      	beq.n	a24c <_strtod_r+0x328>
    a240:	e048      	b.n	a2d4 <_strtod_r+0x3b0>
    a242:	2b69      	cmp	r3, #105	; 0x69
    a244:	d002      	beq.n	a24c <_strtod_r+0x328>
    a246:	2b6e      	cmp	r3, #110	; 0x6e
    a248:	d014      	beq.n	a274 <_strtod_r+0x350>
    a24a:	e043      	b.n	a2d4 <_strtod_r+0x3b0>
    a24c:	a81d      	add	r0, sp, #116	; 0x74
    a24e:	491b      	ldr	r1, [pc, #108]	; (a2bc <_strtod_r+0x398>)
    a250:	f7ff fe3d 	bl	9ece <match>
    a254:	2800      	cmp	r0, #0
    a256:	d03d      	beq.n	a2d4 <_strtod_r+0x3b0>
    a258:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a25a:	a81d      	add	r0, sp, #116	; 0x74
    a25c:	3b01      	subs	r3, #1
    a25e:	4918      	ldr	r1, [pc, #96]	; (a2c0 <_strtod_r+0x39c>)
    a260:	931d      	str	r3, [sp, #116]	; 0x74
    a262:	f7ff fe34 	bl	9ece <match>
    a266:	2800      	cmp	r0, #0
    a268:	d102      	bne.n	a270 <_strtod_r+0x34c>
    a26a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a26c:	3301      	adds	r3, #1
    a26e:	931d      	str	r3, [sp, #116]	; 0x74
    a270:	4f0f      	ldr	r7, [pc, #60]	; (a2b0 <_strtod_r+0x38c>)
    a272:	e02c      	b.n	a2ce <_strtod_r+0x3aa>
    a274:	a81d      	add	r0, sp, #116	; 0x74
    a276:	4913      	ldr	r1, [pc, #76]	; (a2c4 <_strtod_r+0x3a0>)
    a278:	f7ff fe29 	bl	9ece <match>
    a27c:	2800      	cmp	r0, #0
    a27e:	d029      	beq.n	a2d4 <_strtod_r+0x3b0>
    a280:	9b1d      	ldr	r3, [sp, #116]	; 0x74
    a282:	781b      	ldrb	r3, [r3, #0]
    a284:	2b28      	cmp	r3, #40	; 0x28
    a286:	d121      	bne.n	a2cc <_strtod_r+0x3a8>
    a288:	a81d      	add	r0, sp, #116	; 0x74
    a28a:	490f      	ldr	r1, [pc, #60]	; (a2c8 <_strtod_r+0x3a4>)
    a28c:	aa20      	add	r2, sp, #128	; 0x80
    a28e:	f001 fff6 	bl	c27e <__hexnan>
    a292:	2805      	cmp	r0, #5
    a294:	d11a      	bne.n	a2cc <_strtod_r+0x3a8>
    a296:	9b21      	ldr	r3, [sp, #132]	; 0x84
    a298:	4a05      	ldr	r2, [pc, #20]	; (a2b0 <_strtod_r+0x38c>)
    a29a:	9e20      	ldr	r6, [sp, #128]	; 0x80
    a29c:	431a      	orrs	r2, r3
    a29e:	1c17      	adds	r7, r2, #0
    a2a0:	f000 fc2c 	bl	aafc <_strtod_r+0xbd8>
    a2a4:	0000e438 	.word	0x0000e438
    a2a8:	00000433 	.word	0x00000433
    a2ac:	ffefffff 	.word	0xffefffff
    a2b0:	7ff00000 	.word	0x7ff00000
    a2b4:	7fffffff 	.word	0x7fffffff
    a2b8:	00004e1f 	.word	0x00004e1f
    a2bc:	0000e39e 	.word	0x0000e39e
    a2c0:	0000e550 	.word	0x0000e550
    a2c4:	0000e3a6 	.word	0x0000e3a6
    a2c8:	0000e3f8 	.word	0x0000e3f8
    a2cc:	4f92      	ldr	r7, [pc, #584]	; (a518 <_strtod_r+0x5f4>)
    a2ce:	2600      	movs	r6, #0
    a2d0:	f000 fc14 	bl	aafc <_strtod_r+0xbd8>
    a2d4:	9b06      	ldr	r3, [sp, #24]
    a2d6:	931d      	str	r3, [sp, #116]	; 0x74
    a2d8:	2300      	movs	r3, #0
    a2da:	930d      	str	r3, [sp, #52]	; 0x34
    a2dc:	9b19      	ldr	r3, [sp, #100]	; 0x64
    a2de:	2b00      	cmp	r3, #0
    a2e0:	d001      	beq.n	a2e6 <_strtod_r+0x3c2>
    a2e2:	f000 fc0e 	bl	ab02 <_strtod_r+0xbde>
    a2e6:	f000 fc17 	bl	ab18 <_strtod_r+0xbf4>
    a2ea:	1a53      	subs	r3, r2, r1
    a2ec:	9309      	str	r3, [sp, #36]	; 0x24
    a2ee:	9b04      	ldr	r3, [sp, #16]
    a2f0:	2b00      	cmp	r3, #0
    a2f2:	d100      	bne.n	a2f6 <_strtod_r+0x3d2>
    a2f4:	9404      	str	r4, [sp, #16]
    a2f6:	1e25      	subs	r5, r4, #0
    a2f8:	2d10      	cmp	r5, #16
    a2fa:	dd00      	ble.n	a2fe <_strtod_r+0x3da>
    a2fc:	2510      	movs	r5, #16
    a2fe:	9807      	ldr	r0, [sp, #28]
    a300:	f7fd fd74 	bl	7dec <__aeabi_ui2d>
    a304:	1c06      	adds	r6, r0, #0
    a306:	1c0f      	adds	r7, r1, #0
    a308:	2d09      	cmp	r5, #9
    a30a:	dd15      	ble.n	a338 <_strtod_r+0x414>
    a30c:	1c2b      	adds	r3, r5, #0
    a30e:	4a83      	ldr	r2, [pc, #524]	; (a51c <_strtod_r+0x5f8>)
    a310:	3b09      	subs	r3, #9
    a312:	00db      	lsls	r3, r3, #3
    a314:	18d3      	adds	r3, r2, r3
    a316:	681a      	ldr	r2, [r3, #0]
    a318:	685b      	ldr	r3, [r3, #4]
    a31a:	f7fc fee1 	bl	70e0 <__aeabi_dmul>
    a31e:	1c06      	adds	r6, r0, #0
    a320:	9805      	ldr	r0, [sp, #20]
    a322:	1c0f      	adds	r7, r1, #0
    a324:	f7fd fd62 	bl	7dec <__aeabi_ui2d>
    a328:	1c02      	adds	r2, r0, #0
    a32a:	1c0b      	adds	r3, r1, #0
    a32c:	1c30      	adds	r0, r6, #0
    a32e:	1c39      	adds	r1, r7, #0
    a330:	f7fb ff70 	bl	6214 <__aeabi_dadd>
    a334:	1c06      	adds	r6, r0, #0
    a336:	1c0f      	adds	r7, r1, #0
    a338:	2c0f      	cmp	r4, #15
    a33a:	dc37      	bgt.n	a3ac <_strtod_r+0x488>
    a33c:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a33e:	2b00      	cmp	r3, #0
    a340:	d100      	bne.n	a344 <_strtod_r+0x420>
    a342:	e3db      	b.n	aafc <_strtod_r+0xbd8>
    a344:	dd24      	ble.n	a390 <_strtod_r+0x46c>
    a346:	2b16      	cmp	r3, #22
    a348:	dc07      	bgt.n	a35a <_strtod_r+0x436>
    a34a:	4974      	ldr	r1, [pc, #464]	; (a51c <_strtod_r+0x5f8>)
    a34c:	00da      	lsls	r2, r3, #3
    a34e:	188a      	adds	r2, r1, r2
    a350:	6810      	ldr	r0, [r2, #0]
    a352:	6851      	ldr	r1, [r2, #4]
    a354:	1c3b      	adds	r3, r7, #0
    a356:	1c32      	adds	r2, r6, #0
    a358:	e015      	b.n	a386 <_strtod_r+0x462>
    a35a:	2325      	movs	r3, #37	; 0x25
    a35c:	9a09      	ldr	r2, [sp, #36]	; 0x24
    a35e:	1b1b      	subs	r3, r3, r4
    a360:	429a      	cmp	r2, r3
    a362:	dc23      	bgt.n	a3ac <_strtod_r+0x488>
    a364:	220f      	movs	r2, #15
    a366:	4d6d      	ldr	r5, [pc, #436]	; (a51c <_strtod_r+0x5f8>)
    a368:	1b14      	subs	r4, r2, r4
    a36a:	00e3      	lsls	r3, r4, #3
    a36c:	18eb      	adds	r3, r5, r3
    a36e:	6818      	ldr	r0, [r3, #0]
    a370:	6859      	ldr	r1, [r3, #4]
    a372:	1c32      	adds	r2, r6, #0
    a374:	1c3b      	adds	r3, r7, #0
    a376:	f7fc feb3 	bl	70e0 <__aeabi_dmul>
    a37a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a37c:	1b1c      	subs	r4, r3, r4
    a37e:	00e4      	lsls	r4, r4, #3
    a380:	192d      	adds	r5, r5, r4
    a382:	682a      	ldr	r2, [r5, #0]
    a384:	686b      	ldr	r3, [r5, #4]
    a386:	f7fc feab 	bl	70e0 <__aeabi_dmul>
    a38a:	1c06      	adds	r6, r0, #0
    a38c:	1c0f      	adds	r7, r1, #0
    a38e:	e3b5      	b.n	aafc <_strtod_r+0xbd8>
    a390:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a392:	3316      	adds	r3, #22
    a394:	db0a      	blt.n	a3ac <_strtod_r+0x488>
    a396:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a398:	1c30      	adds	r0, r6, #0
    a39a:	00da      	lsls	r2, r3, #3
    a39c:	4b5f      	ldr	r3, [pc, #380]	; (a51c <_strtod_r+0x5f8>)
    a39e:	1c39      	adds	r1, r7, #0
    a3a0:	1a9a      	subs	r2, r3, r2
    a3a2:	6853      	ldr	r3, [r2, #4]
    a3a4:	6812      	ldr	r2, [r2, #0]
    a3a6:	f7fc fa5d 	bl	6864 <__aeabi_ddiv>
    a3aa:	e7ee      	b.n	a38a <_strtod_r+0x466>
    a3ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a3ae:	1b65      	subs	r5, r4, r5
    a3b0:	195d      	adds	r5, r3, r5
    a3b2:	2d00      	cmp	r5, #0
    a3b4:	dd59      	ble.n	a46a <_strtod_r+0x546>
    a3b6:	230f      	movs	r3, #15
    a3b8:	402b      	ands	r3, r5
    a3ba:	d00a      	beq.n	a3d2 <_strtod_r+0x4ae>
    a3bc:	4a57      	ldr	r2, [pc, #348]	; (a51c <_strtod_r+0x5f8>)
    a3be:	00db      	lsls	r3, r3, #3
    a3c0:	18d3      	adds	r3, r2, r3
    a3c2:	6818      	ldr	r0, [r3, #0]
    a3c4:	6859      	ldr	r1, [r3, #4]
    a3c6:	1c32      	adds	r2, r6, #0
    a3c8:	1c3b      	adds	r3, r7, #0
    a3ca:	f7fc fe89 	bl	70e0 <__aeabi_dmul>
    a3ce:	1c06      	adds	r6, r0, #0
    a3d0:	1c0f      	adds	r7, r1, #0
    a3d2:	230f      	movs	r3, #15
    a3d4:	439d      	bics	r5, r3
    a3d6:	d100      	bne.n	a3da <_strtod_r+0x4b6>
    a3d8:	e0b0      	b.n	a53c <_strtod_r+0x618>
    a3da:	3326      	adds	r3, #38	; 0x26
    a3dc:	33ff      	adds	r3, #255	; 0xff
    a3de:	429d      	cmp	r5, r3
    a3e0:	dd0e      	ble.n	a400 <_strtod_r+0x4dc>
    a3e2:	2300      	movs	r3, #0
    a3e4:	9304      	str	r3, [sp, #16]
    a3e6:	9305      	str	r3, [sp, #20]
    a3e8:	930b      	str	r3, [sp, #44]	; 0x2c
    a3ea:	9308      	str	r3, [sp, #32]
    a3ec:	2322      	movs	r3, #34	; 0x22
    a3ee:	2600      	movs	r6, #0
    a3f0:	9a03      	ldr	r2, [sp, #12]
    a3f2:	4f4b      	ldr	r7, [pc, #300]	; (a520 <_strtod_r+0x5fc>)
    a3f4:	6013      	str	r3, [r2, #0]
    a3f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a3f8:	42b3      	cmp	r3, r6
    a3fa:	d000      	beq.n	a3fe <_strtod_r+0x4da>
    a3fc:	e36a      	b.n	aad4 <_strtod_r+0xbb0>
    a3fe:	e37d      	b.n	aafc <_strtod_r+0xbd8>
    a400:	2300      	movs	r3, #0
    a402:	1c30      	adds	r0, r6, #0
    a404:	1c39      	adds	r1, r7, #0
    a406:	112d      	asrs	r5, r5, #4
    a408:	9305      	str	r3, [sp, #20]
    a40a:	2d01      	cmp	r5, #1
    a40c:	dd0e      	ble.n	a42c <_strtod_r+0x508>
    a40e:	07eb      	lsls	r3, r5, #31
    a410:	d507      	bpl.n	a422 <_strtod_r+0x4fe>
    a412:	9b05      	ldr	r3, [sp, #20]
    a414:	00da      	lsls	r2, r3, #3
    a416:	4b43      	ldr	r3, [pc, #268]	; (a524 <_strtod_r+0x600>)
    a418:	18d3      	adds	r3, r2, r3
    a41a:	681a      	ldr	r2, [r3, #0]
    a41c:	685b      	ldr	r3, [r3, #4]
    a41e:	f7fc fe5f 	bl	70e0 <__aeabi_dmul>
    a422:	9b05      	ldr	r3, [sp, #20]
    a424:	106d      	asrs	r5, r5, #1
    a426:	3301      	adds	r3, #1
    a428:	9305      	str	r3, [sp, #20]
    a42a:	e7ee      	b.n	a40a <_strtod_r+0x4e6>
    a42c:	1c06      	adds	r6, r0, #0
    a42e:	4b3e      	ldr	r3, [pc, #248]	; (a528 <_strtod_r+0x604>)
    a430:	18cf      	adds	r7, r1, r3
    a432:	9b05      	ldr	r3, [sp, #20]
    a434:	00da      	lsls	r2, r3, #3
    a436:	4b3b      	ldr	r3, [pc, #236]	; (a524 <_strtod_r+0x600>)
    a438:	189b      	adds	r3, r3, r2
    a43a:	6818      	ldr	r0, [r3, #0]
    a43c:	6859      	ldr	r1, [r3, #4]
    a43e:	1c32      	adds	r2, r6, #0
    a440:	1c3b      	adds	r3, r7, #0
    a442:	f7fc fe4d 	bl	70e0 <__aeabi_dmul>
    a446:	4b36      	ldr	r3, [pc, #216]	; (a520 <_strtod_r+0x5fc>)
    a448:	1c0f      	adds	r7, r1, #0
    a44a:	400b      	ands	r3, r1
    a44c:	4937      	ldr	r1, [pc, #220]	; (a52c <_strtod_r+0x608>)
    a44e:	1c06      	adds	r6, r0, #0
    a450:	428b      	cmp	r3, r1
    a452:	d8c6      	bhi.n	a3e2 <_strtod_r+0x4be>
    a454:	4936      	ldr	r1, [pc, #216]	; (a530 <_strtod_r+0x60c>)
    a456:	428b      	cmp	r3, r1
    a458:	d903      	bls.n	a462 <_strtod_r+0x53e>
    a45a:	2601      	movs	r6, #1
    a45c:	4f35      	ldr	r7, [pc, #212]	; (a534 <_strtod_r+0x610>)
    a45e:	4276      	negs	r6, r6
    a460:	e06c      	b.n	a53c <_strtod_r+0x618>
    a462:	23d4      	movs	r3, #212	; 0xd4
    a464:	049b      	lsls	r3, r3, #18
    a466:	18ff      	adds	r7, r7, r3
    a468:	e068      	b.n	a53c <_strtod_r+0x618>
    a46a:	2d00      	cmp	r5, #0
    a46c:	d066      	beq.n	a53c <_strtod_r+0x618>
    a46e:	230f      	movs	r3, #15
    a470:	426d      	negs	r5, r5
    a472:	402b      	ands	r3, r5
    a474:	d00a      	beq.n	a48c <_strtod_r+0x568>
    a476:	4a29      	ldr	r2, [pc, #164]	; (a51c <_strtod_r+0x5f8>)
    a478:	00db      	lsls	r3, r3, #3
    a47a:	18d3      	adds	r3, r2, r3
    a47c:	1c30      	adds	r0, r6, #0
    a47e:	681a      	ldr	r2, [r3, #0]
    a480:	685b      	ldr	r3, [r3, #4]
    a482:	1c39      	adds	r1, r7, #0
    a484:	f7fc f9ee 	bl	6864 <__aeabi_ddiv>
    a488:	1c06      	adds	r6, r0, #0
    a48a:	1c0f      	adds	r7, r1, #0
    a48c:	112d      	asrs	r5, r5, #4
    a48e:	d055      	beq.n	a53c <_strtod_r+0x618>
    a490:	2d1f      	cmp	r5, #31
    a492:	dd05      	ble.n	a4a0 <_strtod_r+0x57c>
    a494:	2300      	movs	r3, #0
    a496:	9304      	str	r3, [sp, #16]
    a498:	9305      	str	r3, [sp, #20]
    a49a:	930b      	str	r3, [sp, #44]	; 0x2c
    a49c:	9308      	str	r3, [sp, #32]
    a49e:	e118      	b.n	a6d2 <_strtod_r+0x7ae>
    a4a0:	2300      	movs	r3, #0
    a4a2:	9306      	str	r3, [sp, #24]
    a4a4:	06eb      	lsls	r3, r5, #27
    a4a6:	d501      	bpl.n	a4ac <_strtod_r+0x588>
    a4a8:	236a      	movs	r3, #106	; 0x6a
    a4aa:	9306      	str	r3, [sp, #24]
    a4ac:	1c39      	adds	r1, r7, #0
    a4ae:	1c30      	adds	r0, r6, #0
    a4b0:	4e21      	ldr	r6, [pc, #132]	; (a538 <_strtod_r+0x614>)
    a4b2:	2d00      	cmp	r5, #0
    a4b4:	dd08      	ble.n	a4c8 <_strtod_r+0x5a4>
    a4b6:	07eb      	lsls	r3, r5, #31
    a4b8:	d503      	bpl.n	a4c2 <_strtod_r+0x59e>
    a4ba:	6832      	ldr	r2, [r6, #0]
    a4bc:	6873      	ldr	r3, [r6, #4]
    a4be:	f7fc fe0f 	bl	70e0 <__aeabi_dmul>
    a4c2:	106d      	asrs	r5, r5, #1
    a4c4:	3608      	adds	r6, #8
    a4c6:	e7f4      	b.n	a4b2 <_strtod_r+0x58e>
    a4c8:	9b06      	ldr	r3, [sp, #24]
    a4ca:	1c06      	adds	r6, r0, #0
    a4cc:	1c0f      	adds	r7, r1, #0
    a4ce:	2b00      	cmp	r3, #0
    a4d0:	d019      	beq.n	a506 <_strtod_r+0x5e2>
    a4d2:	226b      	movs	r2, #107	; 0x6b
    a4d4:	004b      	lsls	r3, r1, #1
    a4d6:	0d5b      	lsrs	r3, r3, #21
    a4d8:	1c08      	adds	r0, r1, #0
    a4da:	1ad3      	subs	r3, r2, r3
    a4dc:	2b00      	cmp	r3, #0
    a4de:	dd12      	ble.n	a506 <_strtod_r+0x5e2>
    a4e0:	2b1f      	cmp	r3, #31
    a4e2:	dd0c      	ble.n	a4fe <_strtod_r+0x5da>
    a4e4:	2600      	movs	r6, #0
    a4e6:	2b34      	cmp	r3, #52	; 0x34
    a4e8:	dd02      	ble.n	a4f0 <_strtod_r+0x5cc>
    a4ea:	27dc      	movs	r7, #220	; 0xdc
    a4ec:	04bf      	lsls	r7, r7, #18
    a4ee:	e00a      	b.n	a506 <_strtod_r+0x5e2>
    a4f0:	2201      	movs	r2, #1
    a4f2:	3b20      	subs	r3, #32
    a4f4:	4252      	negs	r2, r2
    a4f6:	409a      	lsls	r2, r3
    a4f8:	4010      	ands	r0, r2
    a4fa:	1c07      	adds	r7, r0, #0
    a4fc:	e003      	b.n	a506 <_strtod_r+0x5e2>
    a4fe:	2201      	movs	r2, #1
    a500:	4252      	negs	r2, r2
    a502:	409a      	lsls	r2, r3
    a504:	4016      	ands	r6, r2
    a506:	1c30      	adds	r0, r6, #0
    a508:	1c39      	adds	r1, r7, #0
    a50a:	2200      	movs	r2, #0
    a50c:	2300      	movs	r3, #0
    a50e:	f7fb fe0b 	bl	6128 <__aeabi_dcmpeq>
    a512:	2800      	cmp	r0, #0
    a514:	d1be      	bne.n	a494 <_strtod_r+0x570>
    a516:	e013      	b.n	a540 <_strtod_r+0x61c>
    a518:	fff80000 	.word	0xfff80000
    a51c:	0000e568 	.word	0x0000e568
    a520:	7ff00000 	.word	0x7ff00000
    a524:	0000e630 	.word	0x0000e630
    a528:	fcb00000 	.word	0xfcb00000
    a52c:	7ca00000 	.word	0x7ca00000
    a530:	7c900000 	.word	0x7c900000
    a534:	7fefffff 	.word	0x7fefffff
    a538:	0000e410 	.word	0x0000e410
    a53c:	2300      	movs	r3, #0
    a53e:	9306      	str	r3, [sp, #24]
    a540:	9b07      	ldr	r3, [sp, #28]
    a542:	9803      	ldr	r0, [sp, #12]
    a544:	9300      	str	r3, [sp, #0]
    a546:	990c      	ldr	r1, [sp, #48]	; 0x30
    a548:	9a04      	ldr	r2, [sp, #16]
    a54a:	1c23      	adds	r3, r4, #0
    a54c:	f001 fffb 	bl	c546 <__s2b>
    a550:	900b      	str	r0, [sp, #44]	; 0x2c
    a552:	2800      	cmp	r0, #0
    a554:	d100      	bne.n	a558 <_strtod_r+0x634>
    a556:	e744      	b.n	a3e2 <_strtod_r+0x4be>
    a558:	9b09      	ldr	r3, [sp, #36]	; 0x24
    a55a:	9a09      	ldr	r2, [sp, #36]	; 0x24
    a55c:	425b      	negs	r3, r3
    a55e:	17d2      	asrs	r2, r2, #31
    a560:	4013      	ands	r3, r2
    a562:	9313      	str	r3, [sp, #76]	; 0x4c
    a564:	2300      	movs	r3, #0
    a566:	9304      	str	r3, [sp, #16]
    a568:	9305      	str	r3, [sp, #20]
    a56a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a56c:	9803      	ldr	r0, [sp, #12]
    a56e:	6859      	ldr	r1, [r3, #4]
    a570:	f001 ff5c 	bl	c42c <_Balloc>
    a574:	9008      	str	r0, [sp, #32]
    a576:	2800      	cmp	r0, #0
    a578:	d100      	bne.n	a57c <_strtod_r+0x658>
    a57a:	e737      	b.n	a3ec <_strtod_r+0x4c8>
    a57c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a57e:	990b      	ldr	r1, [sp, #44]	; 0x2c
    a580:	691b      	ldr	r3, [r3, #16]
    a582:	310c      	adds	r1, #12
    a584:	1c9a      	adds	r2, r3, #2
    a586:	0092      	lsls	r2, r2, #2
    a588:	300c      	adds	r0, #12
    a58a:	9307      	str	r3, [sp, #28]
    a58c:	f7fe f8bd 	bl	870a <memcpy>
    a590:	ab1f      	add	r3, sp, #124	; 0x7c
    a592:	9300      	str	r3, [sp, #0]
    a594:	ab20      	add	r3, sp, #128	; 0x80
    a596:	9301      	str	r3, [sp, #4]
    a598:	9803      	ldr	r0, [sp, #12]
    a59a:	1c32      	adds	r2, r6, #0
    a59c:	1c3b      	adds	r3, r7, #0
    a59e:	960e      	str	r6, [sp, #56]	; 0x38
    a5a0:	970f      	str	r7, [sp, #60]	; 0x3c
    a5a2:	f002 fa91 	bl	cac8 <__d2b>
    a5a6:	901e      	str	r0, [sp, #120]	; 0x78
    a5a8:	2800      	cmp	r0, #0
    a5aa:	d100      	bne.n	a5ae <_strtod_r+0x68a>
    a5ac:	e71e      	b.n	a3ec <_strtod_r+0x4c8>
    a5ae:	9803      	ldr	r0, [sp, #12]
    a5b0:	2101      	movs	r1, #1
    a5b2:	f002 f852 	bl	c65a <__i2b>
    a5b6:	9005      	str	r0, [sp, #20]
    a5b8:	2800      	cmp	r0, #0
    a5ba:	d100      	bne.n	a5be <_strtod_r+0x69a>
    a5bc:	e716      	b.n	a3ec <_strtod_r+0x4c8>
    a5be:	2300      	movs	r3, #0
    a5c0:	9a09      	ldr	r2, [sp, #36]	; 0x24
    a5c2:	930a      	str	r3, [sp, #40]	; 0x28
    a5c4:	4293      	cmp	r3, r2
    a5c6:	da00      	bge.n	a5ca <_strtod_r+0x6a6>
    a5c8:	920a      	str	r2, [sp, #40]	; 0x28
    a5ca:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
    a5cc:	2b00      	cmp	r3, #0
    a5ce:	da00      	bge.n	a5d2 <_strtod_r+0x6ae>
    a5d0:	e089      	b.n	a6e6 <_strtod_r+0x7c2>
    a5d2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    a5d4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    a5d6:	18d5      	adds	r5, r2, r3
    a5d8:	9a06      	ldr	r2, [sp, #24]
    a5da:	9920      	ldr	r1, [sp, #128]	; 0x80
    a5dc:	1a9b      	subs	r3, r3, r2
    a5de:	2236      	movs	r2, #54	; 0x36
    a5e0:	185b      	adds	r3, r3, r1
    a5e2:	1a52      	subs	r2, r2, r1
    a5e4:	49c8      	ldr	r1, [pc, #800]	; (a908 <_strtod_r+0x9e4>)
    a5e6:	2001      	movs	r0, #1
    a5e8:	428b      	cmp	r3, r1
    a5ea:	db00      	blt.n	a5ee <_strtod_r+0x6ca>
    a5ec:	e085      	b.n	a6fa <_strtod_r+0x7d6>
    a5ee:	1ac9      	subs	r1, r1, r3
    a5f0:	1a52      	subs	r2, r2, r1
    a5f2:	291f      	cmp	r1, #31
    a5f4:	dc7b      	bgt.n	a6ee <_strtod_r+0x7ca>
    a5f6:	4088      	lsls	r0, r1
    a5f8:	2300      	movs	r3, #0
    a5fa:	9018      	str	r0, [sp, #96]	; 0x60
    a5fc:	9312      	str	r3, [sp, #72]	; 0x48
    a5fe:	18ab      	adds	r3, r5, r2
    a600:	9307      	str	r3, [sp, #28]
    a602:	9b06      	ldr	r3, [sp, #24]
    a604:	18a4      	adds	r4, r4, r2
    a606:	18e4      	adds	r4, r4, r3
    a608:	9b07      	ldr	r3, [sp, #28]
    a60a:	42ab      	cmp	r3, r5
    a60c:	dd00      	ble.n	a610 <_strtod_r+0x6ec>
    a60e:	1c2b      	adds	r3, r5, #0
    a610:	42a3      	cmp	r3, r4
    a612:	dd00      	ble.n	a616 <_strtod_r+0x6f2>
    a614:	1c23      	adds	r3, r4, #0
    a616:	2b00      	cmp	r3, #0
    a618:	dd04      	ble.n	a624 <_strtod_r+0x700>
    a61a:	9a07      	ldr	r2, [sp, #28]
    a61c:	1ae4      	subs	r4, r4, r3
    a61e:	1ad2      	subs	r2, r2, r3
    a620:	9207      	str	r2, [sp, #28]
    a622:	1aed      	subs	r5, r5, r3
    a624:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    a626:	2b00      	cmp	r3, #0
    a628:	d16b      	bne.n	a702 <_strtod_r+0x7de>
    a62a:	9b07      	ldr	r3, [sp, #28]
    a62c:	2b00      	cmp	r3, #0
    a62e:	dd00      	ble.n	a632 <_strtod_r+0x70e>
    a630:	e080      	b.n	a734 <_strtod_r+0x810>
    a632:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a634:	2b00      	cmp	r3, #0
    a636:	d000      	beq.n	a63a <_strtod_r+0x716>
    a638:	e086      	b.n	a748 <_strtod_r+0x824>
    a63a:	2c00      	cmp	r4, #0
    a63c:	dd00      	ble.n	a640 <_strtod_r+0x71c>
    a63e:	e08d      	b.n	a75c <_strtod_r+0x838>
    a640:	2d00      	cmp	r5, #0
    a642:	dd00      	ble.n	a646 <_strtod_r+0x722>
    a644:	e094      	b.n	a770 <_strtod_r+0x84c>
    a646:	9803      	ldr	r0, [sp, #12]
    a648:	991e      	ldr	r1, [sp, #120]	; 0x78
    a64a:	9a08      	ldr	r2, [sp, #32]
    a64c:	f002 f95b 	bl	c906 <__mdiff>
    a650:	9004      	str	r0, [sp, #16]
    a652:	2800      	cmp	r0, #0
    a654:	d100      	bne.n	a658 <_strtod_r+0x734>
    a656:	e6c9      	b.n	a3ec <_strtod_r+0x4c8>
    a658:	2200      	movs	r2, #0
    a65a:	68c3      	ldr	r3, [r0, #12]
    a65c:	9905      	ldr	r1, [sp, #20]
    a65e:	60c2      	str	r2, [r0, #12]
    a660:	930c      	str	r3, [sp, #48]	; 0x30
    a662:	f002 f935 	bl	c8d0 <__mcmp>
    a666:	2800      	cmp	r0, #0
    a668:	db00      	blt.n	a66c <_strtod_r+0x748>
    a66a:	e091      	b.n	a790 <_strtod_r+0x86c>
    a66c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a66e:	2b00      	cmp	r3, #0
    a670:	d000      	beq.n	a674 <_strtod_r+0x750>
    a672:	e21a      	b.n	aaaa <_strtod_r+0xb86>
    a674:	2e00      	cmp	r6, #0
    a676:	d000      	beq.n	a67a <_strtod_r+0x756>
    a678:	e217      	b.n	aaaa <_strtod_r+0xb86>
    a67a:	033b      	lsls	r3, r7, #12
    a67c:	d000      	beq.n	a680 <_strtod_r+0x75c>
    a67e:	e214      	b.n	aaaa <_strtod_r+0xb86>
    a680:	22d6      	movs	r2, #214	; 0xd6
    a682:	4ba2      	ldr	r3, [pc, #648]	; (a90c <_strtod_r+0x9e8>)
    a684:	04d2      	lsls	r2, r2, #19
    a686:	403b      	ands	r3, r7
    a688:	4293      	cmp	r3, r2
    a68a:	d800      	bhi.n	a68e <_strtod_r+0x76a>
    a68c:	e20d      	b.n	aaaa <_strtod_r+0xb86>
    a68e:	9b04      	ldr	r3, [sp, #16]
    a690:	695b      	ldr	r3, [r3, #20]
    a692:	9307      	str	r3, [sp, #28]
    a694:	2b00      	cmp	r3, #0
    a696:	d075      	beq.n	a784 <_strtod_r+0x860>
    a698:	9904      	ldr	r1, [sp, #16]
    a69a:	9803      	ldr	r0, [sp, #12]
    a69c:	2201      	movs	r2, #1
    a69e:	f002 f8c5 	bl	c82c <__lshift>
    a6a2:	9905      	ldr	r1, [sp, #20]
    a6a4:	9004      	str	r0, [sp, #16]
    a6a6:	f002 f913 	bl	c8d0 <__mcmp>
    a6aa:	2800      	cmp	r0, #0
    a6ac:	dc00      	bgt.n	a6b0 <_strtod_r+0x78c>
    a6ae:	e1fc      	b.n	aaaa <_strtod_r+0xb86>
    a6b0:	9a06      	ldr	r2, [sp, #24]
    a6b2:	4b96      	ldr	r3, [pc, #600]	; (a90c <_strtod_r+0x9e8>)
    a6b4:	2a00      	cmp	r2, #0
    a6b6:	d100      	bne.n	a6ba <_strtod_r+0x796>
    a6b8:	e09a      	b.n	a7f0 <_strtod_r+0x8cc>
    a6ba:	1c1a      	adds	r2, r3, #0
    a6bc:	21d6      	movs	r1, #214	; 0xd6
    a6be:	403a      	ands	r2, r7
    a6c0:	04c9      	lsls	r1, r1, #19
    a6c2:	428a      	cmp	r2, r1
    a6c4:	dd00      	ble.n	a6c8 <_strtod_r+0x7a4>
    a6c6:	e093      	b.n	a7f0 <_strtod_r+0x8cc>
    a6c8:	23dc      	movs	r3, #220	; 0xdc
    a6ca:	049b      	lsls	r3, r3, #18
    a6cc:	429a      	cmp	r2, r3
    a6ce:	dd00      	ble.n	a6d2 <_strtod_r+0x7ae>
    a6d0:	e1ee      	b.n	aab0 <_strtod_r+0xb8c>
    a6d2:	2322      	movs	r3, #34	; 0x22
    a6d4:	9a03      	ldr	r2, [sp, #12]
    a6d6:	2600      	movs	r6, #0
    a6d8:	6013      	str	r3, [r2, #0]
    a6da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    a6dc:	2700      	movs	r7, #0
    a6de:	2b00      	cmp	r3, #0
    a6e0:	d000      	beq.n	a6e4 <_strtod_r+0x7c0>
    a6e2:	e1f7      	b.n	aad4 <_strtod_r+0xbb0>
    a6e4:	e20a      	b.n	aafc <_strtod_r+0xbd8>
    a6e6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a6e8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
    a6ea:	1ad4      	subs	r4, r2, r3
    a6ec:	e774      	b.n	a5d8 <_strtod_r+0x6b4>
    a6ee:	4988      	ldr	r1, [pc, #544]	; (a910 <_strtod_r+0x9ec>)
    a6f0:	1acb      	subs	r3, r1, r3
    a6f2:	1c01      	adds	r1, r0, #0
    a6f4:	4099      	lsls	r1, r3
    a6f6:	9112      	str	r1, [sp, #72]	; 0x48
    a6f8:	e001      	b.n	a6fe <_strtod_r+0x7da>
    a6fa:	2300      	movs	r3, #0
    a6fc:	9312      	str	r3, [sp, #72]	; 0x48
    a6fe:	9018      	str	r0, [sp, #96]	; 0x60
    a700:	e77d      	b.n	a5fe <_strtod_r+0x6da>
    a702:	1c1a      	adds	r2, r3, #0
    a704:	9803      	ldr	r0, [sp, #12]
    a706:	9905      	ldr	r1, [sp, #20]
    a708:	f002 f83e 	bl	c788 <__pow5mult>
    a70c:	9005      	str	r0, [sp, #20]
    a70e:	1e03      	subs	r3, r0, #0
    a710:	d100      	bne.n	a714 <_strtod_r+0x7f0>
    a712:	e66b      	b.n	a3ec <_strtod_r+0x4c8>
    a714:	9803      	ldr	r0, [sp, #12]
    a716:	1c19      	adds	r1, r3, #0
    a718:	9a1e      	ldr	r2, [sp, #120]	; 0x78
    a71a:	f001 ffa7 	bl	c66c <__multiply>
    a71e:	900c      	str	r0, [sp, #48]	; 0x30
    a720:	2800      	cmp	r0, #0
    a722:	d100      	bne.n	a726 <_strtod_r+0x802>
    a724:	e662      	b.n	a3ec <_strtod_r+0x4c8>
    a726:	9803      	ldr	r0, [sp, #12]
    a728:	991e      	ldr	r1, [sp, #120]	; 0x78
    a72a:	f001 feb7 	bl	c49c <_Bfree>
    a72e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a730:	931e      	str	r3, [sp, #120]	; 0x78
    a732:	e77a      	b.n	a62a <_strtod_r+0x706>
    a734:	9803      	ldr	r0, [sp, #12]
    a736:	991e      	ldr	r1, [sp, #120]	; 0x78
    a738:	9a07      	ldr	r2, [sp, #28]
    a73a:	f002 f877 	bl	c82c <__lshift>
    a73e:	901e      	str	r0, [sp, #120]	; 0x78
    a740:	2800      	cmp	r0, #0
    a742:	d000      	beq.n	a746 <_strtod_r+0x822>
    a744:	e775      	b.n	a632 <_strtod_r+0x70e>
    a746:	e651      	b.n	a3ec <_strtod_r+0x4c8>
    a748:	9803      	ldr	r0, [sp, #12]
    a74a:	9908      	ldr	r1, [sp, #32]
    a74c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    a74e:	f002 f81b 	bl	c788 <__pow5mult>
    a752:	9008      	str	r0, [sp, #32]
    a754:	2800      	cmp	r0, #0
    a756:	d000      	beq.n	a75a <_strtod_r+0x836>
    a758:	e76f      	b.n	a63a <_strtod_r+0x716>
    a75a:	e647      	b.n	a3ec <_strtod_r+0x4c8>
    a75c:	9803      	ldr	r0, [sp, #12]
    a75e:	9908      	ldr	r1, [sp, #32]
    a760:	1c22      	adds	r2, r4, #0
    a762:	f002 f863 	bl	c82c <__lshift>
    a766:	9008      	str	r0, [sp, #32]
    a768:	2800      	cmp	r0, #0
    a76a:	d000      	beq.n	a76e <_strtod_r+0x84a>
    a76c:	e768      	b.n	a640 <_strtod_r+0x71c>
    a76e:	e63d      	b.n	a3ec <_strtod_r+0x4c8>
    a770:	9803      	ldr	r0, [sp, #12]
    a772:	9905      	ldr	r1, [sp, #20]
    a774:	1c2a      	adds	r2, r5, #0
    a776:	f002 f859 	bl	c82c <__lshift>
    a77a:	9005      	str	r0, [sp, #20]
    a77c:	2800      	cmp	r0, #0
    a77e:	d000      	beq.n	a782 <_strtod_r+0x85e>
    a780:	e761      	b.n	a646 <_strtod_r+0x722>
    a782:	e633      	b.n	a3ec <_strtod_r+0x4c8>
    a784:	9b04      	ldr	r3, [sp, #16]
    a786:	691b      	ldr	r3, [r3, #16]
    a788:	9307      	str	r3, [sp, #28]
    a78a:	2b01      	cmp	r3, #1
    a78c:	dc84      	bgt.n	a698 <_strtod_r+0x774>
    a78e:	e18c      	b.n	aaaa <_strtod_r+0xb86>
    a790:	2800      	cmp	r0, #0
    a792:	d164      	bne.n	a85e <_strtod_r+0x93a>
    a794:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    a796:	033b      	lsls	r3, r7, #12
    a798:	2a00      	cmp	r2, #0
    a79a:	d024      	beq.n	a7e6 <_strtod_r+0x8c2>
    a79c:	4a5d      	ldr	r2, [pc, #372]	; (a914 <_strtod_r+0x9f0>)
    a79e:	1c39      	adds	r1, r7, #0
    a7a0:	0b1b      	lsrs	r3, r3, #12
    a7a2:	4293      	cmp	r3, r2
    a7a4:	d12d      	bne.n	a802 <_strtod_r+0x8de>
    a7a6:	9a06      	ldr	r2, [sp, #24]
    a7a8:	3801      	subs	r0, #1
    a7aa:	1c34      	adds	r4, r6, #0
    a7ac:	1c03      	adds	r3, r0, #0
    a7ae:	2a00      	cmp	r2, #0
    a7b0:	d00a      	beq.n	a7c8 <_strtod_r+0x8a4>
    a7b2:	25d4      	movs	r5, #212	; 0xd4
    a7b4:	4a55      	ldr	r2, [pc, #340]	; (a90c <_strtod_r+0x9e8>)
    a7b6:	04ed      	lsls	r5, r5, #19
    a7b8:	403a      	ands	r2, r7
    a7ba:	42aa      	cmp	r2, r5
    a7bc:	d804      	bhi.n	a7c8 <_strtod_r+0x8a4>
    a7be:	336c      	adds	r3, #108	; 0x6c
    a7c0:	0d12      	lsrs	r2, r2, #20
    a7c2:	1a9a      	subs	r2, r3, r2
    a7c4:	1c03      	adds	r3, r0, #0
    a7c6:	4093      	lsls	r3, r2
    a7c8:	429c      	cmp	r4, r3
    a7ca:	d11a      	bne.n	a802 <_strtod_r+0x8de>
    a7cc:	4b52      	ldr	r3, [pc, #328]	; (a918 <_strtod_r+0x9f4>)
    a7ce:	4299      	cmp	r1, r3
    a7d0:	d102      	bne.n	a7d8 <_strtod_r+0x8b4>
    a7d2:	1c63      	adds	r3, r4, #1
    a7d4:	d100      	bne.n	a7d8 <_strtod_r+0x8b4>
    a7d6:	e609      	b.n	a3ec <_strtod_r+0x4c8>
    a7d8:	4b4c      	ldr	r3, [pc, #304]	; (a90c <_strtod_r+0x9e8>)
    a7da:	2600      	movs	r6, #0
    a7dc:	4019      	ands	r1, r3
    a7de:	2380      	movs	r3, #128	; 0x80
    a7e0:	035b      	lsls	r3, r3, #13
    a7e2:	18cf      	adds	r7, r1, r3
    a7e4:	e161      	b.n	aaaa <_strtod_r+0xb86>
    a7e6:	2b00      	cmp	r3, #0
    a7e8:	d10b      	bne.n	a802 <_strtod_r+0x8de>
    a7ea:	2e00      	cmp	r6, #0
    a7ec:	d109      	bne.n	a802 <_strtod_r+0x8de>
    a7ee:	e75f      	b.n	a6b0 <_strtod_r+0x78c>
    a7f0:	2601      	movs	r6, #1
    a7f2:	4a4a      	ldr	r2, [pc, #296]	; (a91c <_strtod_r+0x9f8>)
    a7f4:	403b      	ands	r3, r7
    a7f6:	189b      	adds	r3, r3, r2
    a7f8:	4a46      	ldr	r2, [pc, #280]	; (a914 <_strtod_r+0x9f0>)
    a7fa:	4276      	negs	r6, r6
    a7fc:	431a      	orrs	r2, r3
    a7fe:	1c17      	adds	r7, r2, #0
    a800:	e153      	b.n	aaaa <_strtod_r+0xb86>
    a802:	9b12      	ldr	r3, [sp, #72]	; 0x48
    a804:	2b00      	cmp	r3, #0
    a806:	d003      	beq.n	a810 <_strtod_r+0x8ec>
    a808:	423b      	tst	r3, r7
    a80a:	d100      	bne.n	a80e <_strtod_r+0x8ea>
    a80c:	e14d      	b.n	aaaa <_strtod_r+0xb86>
    a80e:	e003      	b.n	a818 <_strtod_r+0x8f4>
    a810:	9b18      	ldr	r3, [sp, #96]	; 0x60
    a812:	4233      	tst	r3, r6
    a814:	d100      	bne.n	a818 <_strtod_r+0x8f4>
    a816:	e148      	b.n	aaaa <_strtod_r+0xb86>
    a818:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a81a:	1c30      	adds	r0, r6, #0
    a81c:	1c39      	adds	r1, r7, #0
    a81e:	9a06      	ldr	r2, [sp, #24]
    a820:	2b00      	cmp	r3, #0
    a822:	d00a      	beq.n	a83a <_strtod_r+0x916>
    a824:	f7ff fb68 	bl	9ef8 <sulp>
    a828:	1c02      	adds	r2, r0, #0
    a82a:	1c0b      	adds	r3, r1, #0
    a82c:	980e      	ldr	r0, [sp, #56]	; 0x38
    a82e:	990f      	ldr	r1, [sp, #60]	; 0x3c
    a830:	f7fb fcf0 	bl	6214 <__aeabi_dadd>
    a834:	1c06      	adds	r6, r0, #0
    a836:	1c0f      	adds	r7, r1, #0
    a838:	e137      	b.n	aaaa <_strtod_r+0xb86>
    a83a:	f7ff fb5d 	bl	9ef8 <sulp>
    a83e:	1c02      	adds	r2, r0, #0
    a840:	1c0b      	adds	r3, r1, #0
    a842:	980e      	ldr	r0, [sp, #56]	; 0x38
    a844:	990f      	ldr	r1, [sp, #60]	; 0x3c
    a846:	f7fc fee5 	bl	7614 <__aeabi_dsub>
    a84a:	2200      	movs	r2, #0
    a84c:	2300      	movs	r3, #0
    a84e:	1c06      	adds	r6, r0, #0
    a850:	1c0f      	adds	r7, r1, #0
    a852:	f7fb fc69 	bl	6128 <__aeabi_dcmpeq>
    a856:	2800      	cmp	r0, #0
    a858:	d000      	beq.n	a85c <_strtod_r+0x938>
    a85a:	e73a      	b.n	a6d2 <_strtod_r+0x7ae>
    a85c:	e125      	b.n	aaaa <_strtod_r+0xb86>
    a85e:	9804      	ldr	r0, [sp, #16]
    a860:	9905      	ldr	r1, [sp, #20]
    a862:	f002 f985 	bl	cb70 <__ratio>
    a866:	2380      	movs	r3, #128	; 0x80
    a868:	2200      	movs	r2, #0
    a86a:	05db      	lsls	r3, r3, #23
    a86c:	1c04      	adds	r4, r0, #0
    a86e:	1c0d      	adds	r5, r1, #0
    a870:	f7fb fc6a 	bl	6148 <__aeabi_dcmple>
    a874:	2800      	cmp	r0, #0
    a876:	d036      	beq.n	a8e6 <_strtod_r+0x9c2>
    a878:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a87a:	2b00      	cmp	r3, #0
    a87c:	d002      	beq.n	a884 <_strtod_r+0x960>
    a87e:	2400      	movs	r4, #0
    a880:	4d27      	ldr	r5, [pc, #156]	; (a920 <_strtod_r+0x9fc>)
    a882:	e00b      	b.n	a89c <_strtod_r+0x978>
    a884:	2e00      	cmp	r6, #0
    a886:	d102      	bne.n	a88e <_strtod_r+0x96a>
    a888:	033b      	lsls	r3, r7, #12
    a88a:	d105      	bne.n	a898 <_strtod_r+0x974>
    a88c:	e00b      	b.n	a8a6 <_strtod_r+0x982>
    a88e:	2e01      	cmp	r6, #1
    a890:	d102      	bne.n	a898 <_strtod_r+0x974>
    a892:	2f00      	cmp	r7, #0
    a894:	d100      	bne.n	a898 <_strtod_r+0x974>
    a896:	e71c      	b.n	a6d2 <_strtod_r+0x7ae>
    a898:	2400      	movs	r4, #0
    a89a:	4d22      	ldr	r5, [pc, #136]	; (a924 <_strtod_r+0xa00>)
    a89c:	2300      	movs	r3, #0
    a89e:	9307      	str	r3, [sp, #28]
    a8a0:	4b1f      	ldr	r3, [pc, #124]	; (a920 <_strtod_r+0x9fc>)
    a8a2:	930a      	str	r3, [sp, #40]	; 0x28
    a8a4:	e048      	b.n	a938 <_strtod_r+0xa14>
    a8a6:	1c20      	adds	r0, r4, #0
    a8a8:	1c29      	adds	r1, r5, #0
    a8aa:	2200      	movs	r2, #0
    a8ac:	4b1c      	ldr	r3, [pc, #112]	; (a920 <_strtod_r+0x9fc>)
    a8ae:	f7fb fc41 	bl	6134 <__aeabi_dcmplt>
    a8b2:	2800      	cmp	r0, #0
    a8b4:	d108      	bne.n	a8c8 <_strtod_r+0x9a4>
    a8b6:	1c20      	adds	r0, r4, #0
    a8b8:	1c29      	adds	r1, r5, #0
    a8ba:	2200      	movs	r2, #0
    a8bc:	4b1a      	ldr	r3, [pc, #104]	; (a928 <_strtod_r+0xa04>)
    a8be:	f7fc fc0f 	bl	70e0 <__aeabi_dmul>
    a8c2:	9007      	str	r0, [sp, #28]
    a8c4:	910a      	str	r1, [sp, #40]	; 0x28
    a8c6:	e003      	b.n	a8d0 <_strtod_r+0x9ac>
    a8c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a8ca:	9307      	str	r3, [sp, #28]
    a8cc:	4b16      	ldr	r3, [pc, #88]	; (a928 <_strtod_r+0xa04>)
    a8ce:	930a      	str	r3, [sp, #40]	; 0x28
    a8d0:	2280      	movs	r2, #128	; 0x80
    a8d2:	0612      	lsls	r2, r2, #24
    a8d4:	4694      	mov	ip, r2
    a8d6:	9b07      	ldr	r3, [sp, #28]
    a8d8:	931a      	str	r3, [sp, #104]	; 0x68
    a8da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a8dc:	4463      	add	r3, ip
    a8de:	931b      	str	r3, [sp, #108]	; 0x6c
    a8e0:	9c1a      	ldr	r4, [sp, #104]	; 0x68
    a8e2:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
    a8e4:	e028      	b.n	a938 <_strtod_r+0xa14>
    a8e6:	4b10      	ldr	r3, [pc, #64]	; (a928 <_strtod_r+0xa04>)
    a8e8:	1c20      	adds	r0, r4, #0
    a8ea:	1c29      	adds	r1, r5, #0
    a8ec:	2200      	movs	r2, #0
    a8ee:	f7fc fbf7 	bl	70e0 <__aeabi_dmul>
    a8f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a8f4:	9007      	str	r0, [sp, #28]
    a8f6:	910a      	str	r1, [sp, #40]	; 0x28
    a8f8:	2b00      	cmp	r3, #0
    a8fa:	d117      	bne.n	a92c <_strtod_r+0xa08>
    a8fc:	2380      	movs	r3, #128	; 0x80
    a8fe:	061b      	lsls	r3, r3, #24
    a900:	18cb      	adds	r3, r1, r3
    a902:	9014      	str	r0, [sp, #80]	; 0x50
    a904:	9315      	str	r3, [sp, #84]	; 0x54
    a906:	e015      	b.n	a934 <_strtod_r+0xa10>
    a908:	fffffc03 	.word	0xfffffc03
    a90c:	7ff00000 	.word	0x7ff00000
    a910:	fffffbe3 	.word	0xfffffbe3
    a914:	000fffff 	.word	0x000fffff
    a918:	7fefffff 	.word	0x7fefffff
    a91c:	fff00000 	.word	0xfff00000
    a920:	3ff00000 	.word	0x3ff00000
    a924:	bff00000 	.word	0xbff00000
    a928:	3fe00000 	.word	0x3fe00000
    a92c:	9a07      	ldr	r2, [sp, #28]
    a92e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a930:	9214      	str	r2, [sp, #80]	; 0x50
    a932:	9315      	str	r3, [sp, #84]	; 0x54
    a934:	9c14      	ldr	r4, [sp, #80]	; 0x50
    a936:	9d15      	ldr	r5, [sp, #84]	; 0x54
    a938:	4b7a      	ldr	r3, [pc, #488]	; (ab24 <_strtod_r+0xc00>)
    a93a:	403b      	ands	r3, r7
    a93c:	9312      	str	r3, [sp, #72]	; 0x48
    a93e:	9a12      	ldr	r2, [sp, #72]	; 0x48
    a940:	4b79      	ldr	r3, [pc, #484]	; (ab28 <_strtod_r+0xc04>)
    a942:	429a      	cmp	r2, r3
    a944:	d12b      	bne.n	a99e <_strtod_r+0xa7a>
    a946:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    a948:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    a94a:	9210      	str	r2, [sp, #64]	; 0x40
    a94c:	9311      	str	r3, [sp, #68]	; 0x44
    a94e:	4b77      	ldr	r3, [pc, #476]	; (ab2c <_strtod_r+0xc08>)
    a950:	1c30      	adds	r0, r6, #0
    a952:	18ff      	adds	r7, r7, r3
    a954:	1c39      	adds	r1, r7, #0
    a956:	f002 f841 	bl	c9dc <__ulp>
    a95a:	1c02      	adds	r2, r0, #0
    a95c:	1c0b      	adds	r3, r1, #0
    a95e:	1c20      	adds	r0, r4, #0
    a960:	1c29      	adds	r1, r5, #0
    a962:	f7fc fbbd 	bl	70e0 <__aeabi_dmul>
    a966:	1c02      	adds	r2, r0, #0
    a968:	1c0b      	adds	r3, r1, #0
    a96a:	1c30      	adds	r0, r6, #0
    a96c:	1c39      	adds	r1, r7, #0
    a96e:	f7fb fc51 	bl	6214 <__aeabi_dadd>
    a972:	4b6c      	ldr	r3, [pc, #432]	; (ab24 <_strtod_r+0xc00>)
    a974:	4a6e      	ldr	r2, [pc, #440]	; (ab30 <_strtod_r+0xc0c>)
    a976:	1c06      	adds	r6, r0, #0
    a978:	400b      	ands	r3, r1
    a97a:	4293      	cmp	r3, r2
    a97c:	d90b      	bls.n	a996 <_strtod_r+0xa72>
    a97e:	4b6d      	ldr	r3, [pc, #436]	; (ab34 <_strtod_r+0xc10>)
    a980:	9a11      	ldr	r2, [sp, #68]	; 0x44
    a982:	429a      	cmp	r2, r3
    a984:	d103      	bne.n	a98e <_strtod_r+0xa6a>
    a986:	9b10      	ldr	r3, [sp, #64]	; 0x40
    a988:	3301      	adds	r3, #1
    a98a:	d100      	bne.n	a98e <_strtod_r+0xa6a>
    a98c:	e52e      	b.n	a3ec <_strtod_r+0x4c8>
    a98e:	2601      	movs	r6, #1
    a990:	4f68      	ldr	r7, [pc, #416]	; (ab34 <_strtod_r+0xc10>)
    a992:	4276      	negs	r6, r6
    a994:	e078      	b.n	aa88 <_strtod_r+0xb64>
    a996:	23d4      	movs	r3, #212	; 0xd4
    a998:	049b      	lsls	r3, r3, #18
    a99a:	18cf      	adds	r7, r1, r3
    a99c:	e040      	b.n	aa20 <_strtod_r+0xafc>
    a99e:	9b06      	ldr	r3, [sp, #24]
    a9a0:	2b00      	cmp	r3, #0
    a9a2:	d02b      	beq.n	a9fc <_strtod_r+0xad8>
    a9a4:	23d4      	movs	r3, #212	; 0xd4
    a9a6:	9a12      	ldr	r2, [sp, #72]	; 0x48
    a9a8:	04db      	lsls	r3, r3, #19
    a9aa:	429a      	cmp	r2, r3
    a9ac:	d826      	bhi.n	a9fc <_strtod_r+0xad8>
    a9ae:	9807      	ldr	r0, [sp, #28]
    a9b0:	990a      	ldr	r1, [sp, #40]	; 0x28
    a9b2:	4a61      	ldr	r2, [pc, #388]	; (ab38 <_strtod_r+0xc14>)
    a9b4:	4b61      	ldr	r3, [pc, #388]	; (ab3c <_strtod_r+0xc18>)
    a9b6:	f7fb fbc7 	bl	6148 <__aeabi_dcmple>
    a9ba:	2800      	cmp	r0, #0
    a9bc:	d019      	beq.n	a9f2 <_strtod_r+0xace>
    a9be:	9807      	ldr	r0, [sp, #28]
    a9c0:	990a      	ldr	r1, [sp, #40]	; 0x28
    a9c2:	f7fb fc09 	bl	61d8 <__aeabi_d2uiz>
    a9c6:	2800      	cmp	r0, #0
    a9c8:	d100      	bne.n	a9cc <_strtod_r+0xaa8>
    a9ca:	3001      	adds	r0, #1
    a9cc:	f7fd fa0e 	bl	7dec <__aeabi_ui2d>
    a9d0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    a9d2:	9007      	str	r0, [sp, #28]
    a9d4:	910a      	str	r1, [sp, #40]	; 0x28
    a9d6:	2b00      	cmp	r3, #0
    a9d8:	d105      	bne.n	a9e6 <_strtod_r+0xac2>
    a9da:	2380      	movs	r3, #128	; 0x80
    a9dc:	061b      	lsls	r3, r3, #24
    a9de:	18cb      	adds	r3, r1, r3
    a9e0:	9016      	str	r0, [sp, #88]	; 0x58
    a9e2:	9317      	str	r3, [sp, #92]	; 0x5c
    a9e4:	e003      	b.n	a9ee <_strtod_r+0xaca>
    a9e6:	9a07      	ldr	r2, [sp, #28]
    a9e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    a9ea:	9216      	str	r2, [sp, #88]	; 0x58
    a9ec:	9317      	str	r3, [sp, #92]	; 0x5c
    a9ee:	9c16      	ldr	r4, [sp, #88]	; 0x58
    a9f0:	9d17      	ldr	r5, [sp, #92]	; 0x5c
    a9f2:	23d6      	movs	r3, #214	; 0xd6
    a9f4:	9a12      	ldr	r2, [sp, #72]	; 0x48
    a9f6:	04db      	lsls	r3, r3, #19
    a9f8:	18eb      	adds	r3, r5, r3
    a9fa:	1a9d      	subs	r5, r3, r2
    a9fc:	980e      	ldr	r0, [sp, #56]	; 0x38
    a9fe:	990f      	ldr	r1, [sp, #60]	; 0x3c
    aa00:	f001 ffec 	bl	c9dc <__ulp>
    aa04:	1c02      	adds	r2, r0, #0
    aa06:	1c0b      	adds	r3, r1, #0
    aa08:	1c20      	adds	r0, r4, #0
    aa0a:	1c29      	adds	r1, r5, #0
    aa0c:	f7fc fb68 	bl	70e0 <__aeabi_dmul>
    aa10:	1c02      	adds	r2, r0, #0
    aa12:	1c0b      	adds	r3, r1, #0
    aa14:	980e      	ldr	r0, [sp, #56]	; 0x38
    aa16:	990f      	ldr	r1, [sp, #60]	; 0x3c
    aa18:	f7fb fbfc 	bl	6214 <__aeabi_dadd>
    aa1c:	1c06      	adds	r6, r0, #0
    aa1e:	1c0f      	adds	r7, r1, #0
    aa20:	9b06      	ldr	r3, [sp, #24]
    aa22:	970e      	str	r7, [sp, #56]	; 0x38
    aa24:	2b00      	cmp	r3, #0
    aa26:	d12f      	bne.n	aa88 <_strtod_r+0xb64>
    aa28:	4b3e      	ldr	r3, [pc, #248]	; (ab24 <_strtod_r+0xc00>)
    aa2a:	9a12      	ldr	r2, [sp, #72]	; 0x48
    aa2c:	403b      	ands	r3, r7
    aa2e:	429a      	cmp	r2, r3
    aa30:	d12a      	bne.n	aa88 <_strtod_r+0xb64>
    aa32:	990a      	ldr	r1, [sp, #40]	; 0x28
    aa34:	9807      	ldr	r0, [sp, #28]
    aa36:	f7fd f967 	bl	7d08 <__aeabi_d2iz>
    aa3a:	f7fd f99b 	bl	7d74 <__aeabi_i2d>
    aa3e:	1c0b      	adds	r3, r1, #0
    aa40:	1c02      	adds	r2, r0, #0
    aa42:	990a      	ldr	r1, [sp, #40]	; 0x28
    aa44:	9807      	ldr	r0, [sp, #28]
    aa46:	f7fc fde5 	bl	7614 <__aeabi_dsub>
    aa4a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    aa4c:	1c04      	adds	r4, r0, #0
    aa4e:	1c0d      	adds	r5, r1, #0
    aa50:	2b00      	cmp	r3, #0
    aa52:	d104      	bne.n	aa5e <_strtod_r+0xb3a>
    aa54:	2e00      	cmp	r6, #0
    aa56:	d102      	bne.n	aa5e <_strtod_r+0xb3a>
    aa58:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    aa5a:	031b      	lsls	r3, r3, #12
    aa5c:	d00e      	beq.n	aa7c <_strtod_r+0xb58>
    aa5e:	1c20      	adds	r0, r4, #0
    aa60:	1c29      	adds	r1, r5, #0
    aa62:	4a37      	ldr	r2, [pc, #220]	; (ab40 <_strtod_r+0xc1c>)
    aa64:	4b37      	ldr	r3, [pc, #220]	; (ab44 <_strtod_r+0xc20>)
    aa66:	f7fb fb65 	bl	6134 <__aeabi_dcmplt>
    aa6a:	2800      	cmp	r0, #0
    aa6c:	d132      	bne.n	aad4 <_strtod_r+0xbb0>
    aa6e:	1c20      	adds	r0, r4, #0
    aa70:	1c29      	adds	r1, r5, #0
    aa72:	4a35      	ldr	r2, [pc, #212]	; (ab48 <_strtod_r+0xc24>)
    aa74:	4b35      	ldr	r3, [pc, #212]	; (ab4c <_strtod_r+0xc28>)
    aa76:	f7fb fb71 	bl	615c <__aeabi_dcmpgt>
    aa7a:	e003      	b.n	aa84 <_strtod_r+0xb60>
    aa7c:	4a30      	ldr	r2, [pc, #192]	; (ab40 <_strtod_r+0xc1c>)
    aa7e:	4b34      	ldr	r3, [pc, #208]	; (ab50 <_strtod_r+0xc2c>)
    aa80:	f7fb fb58 	bl	6134 <__aeabi_dcmplt>
    aa84:	2800      	cmp	r0, #0
    aa86:	d125      	bne.n	aad4 <_strtod_r+0xbb0>
    aa88:	9803      	ldr	r0, [sp, #12]
    aa8a:	991e      	ldr	r1, [sp, #120]	; 0x78
    aa8c:	f001 fd06 	bl	c49c <_Bfree>
    aa90:	9803      	ldr	r0, [sp, #12]
    aa92:	9908      	ldr	r1, [sp, #32]
    aa94:	f001 fd02 	bl	c49c <_Bfree>
    aa98:	9803      	ldr	r0, [sp, #12]
    aa9a:	9905      	ldr	r1, [sp, #20]
    aa9c:	f001 fcfe 	bl	c49c <_Bfree>
    aaa0:	9803      	ldr	r0, [sp, #12]
    aaa2:	9904      	ldr	r1, [sp, #16]
    aaa4:	f001 fcfa 	bl	c49c <_Bfree>
    aaa8:	e55f      	b.n	a56a <_strtod_r+0x646>
    aaaa:	9b06      	ldr	r3, [sp, #24]
    aaac:	2b00      	cmp	r3, #0
    aaae:	d011      	beq.n	aad4 <_strtod_r+0xbb0>
    aab0:	4b28      	ldr	r3, [pc, #160]	; (ab54 <_strtod_r+0xc30>)
    aab2:	1c30      	adds	r0, r6, #0
    aab4:	9311      	str	r3, [sp, #68]	; 0x44
    aab6:	2300      	movs	r3, #0
    aab8:	9310      	str	r3, [sp, #64]	; 0x40
    aaba:	1c39      	adds	r1, r7, #0
    aabc:	9a10      	ldr	r2, [sp, #64]	; 0x40
    aabe:	9b11      	ldr	r3, [sp, #68]	; 0x44
    aac0:	f7fc fb0e 	bl	70e0 <__aeabi_dmul>
    aac4:	1c06      	adds	r6, r0, #0
    aac6:	1e0f      	subs	r7, r1, #0
    aac8:	d104      	bne.n	aad4 <_strtod_r+0xbb0>
    aaca:	2800      	cmp	r0, #0
    aacc:	d102      	bne.n	aad4 <_strtod_r+0xbb0>
    aace:	2322      	movs	r3, #34	; 0x22
    aad0:	9a03      	ldr	r2, [sp, #12]
    aad2:	6013      	str	r3, [r2, #0]
    aad4:	9803      	ldr	r0, [sp, #12]
    aad6:	991e      	ldr	r1, [sp, #120]	; 0x78
    aad8:	f001 fce0 	bl	c49c <_Bfree>
    aadc:	9803      	ldr	r0, [sp, #12]
    aade:	9908      	ldr	r1, [sp, #32]
    aae0:	f001 fcdc 	bl	c49c <_Bfree>
    aae4:	9803      	ldr	r0, [sp, #12]
    aae6:	9905      	ldr	r1, [sp, #20]
    aae8:	f001 fcd8 	bl	c49c <_Bfree>
    aaec:	9803      	ldr	r0, [sp, #12]
    aaee:	990b      	ldr	r1, [sp, #44]	; 0x2c
    aaf0:	f001 fcd4 	bl	c49c <_Bfree>
    aaf4:	9803      	ldr	r0, [sp, #12]
    aaf6:	9904      	ldr	r1, [sp, #16]
    aaf8:	f001 fcd0 	bl	c49c <_Bfree>
    aafc:	9b19      	ldr	r3, [sp, #100]	; 0x64
    aafe:	2b00      	cmp	r3, #0
    ab00:	d002      	beq.n	ab08 <_strtod_r+0xbe4>
    ab02:	9b19      	ldr	r3, [sp, #100]	; 0x64
    ab04:	9a1d      	ldr	r2, [sp, #116]	; 0x74
    ab06:	601a      	str	r2, [r3, #0]
    ab08:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    ab0a:	2b00      	cmp	r3, #0
    ab0c:	d004      	beq.n	ab18 <_strtod_r+0xbf4>
    ab0e:	2380      	movs	r3, #128	; 0x80
    ab10:	061b      	lsls	r3, r3, #24
    ab12:	1c32      	adds	r2, r6, #0
    ab14:	18fb      	adds	r3, r7, r3
    ab16:	e001      	b.n	ab1c <_strtod_r+0xbf8>
    ab18:	1c32      	adds	r2, r6, #0
    ab1a:	1c3b      	adds	r3, r7, #0
    ab1c:	1c10      	adds	r0, r2, #0
    ab1e:	1c19      	adds	r1, r3, #0
    ab20:	b023      	add	sp, #140	; 0x8c
    ab22:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ab24:	7ff00000 	.word	0x7ff00000
    ab28:	7fe00000 	.word	0x7fe00000
    ab2c:	fcb00000 	.word	0xfcb00000
    ab30:	7c9fffff 	.word	0x7c9fffff
    ab34:	7fefffff 	.word	0x7fefffff
    ab38:	ffc00000 	.word	0xffc00000
    ab3c:	41dfffff 	.word	0x41dfffff
    ab40:	94a03595 	.word	0x94a03595
    ab44:	3fdfffff 	.word	0x3fdfffff
    ab48:	35afe535 	.word	0x35afe535
    ab4c:	3fe00000 	.word	0x3fe00000
    ab50:	3fcfffff 	.word	0x3fcfffff
    ab54:	39500000 	.word	0x39500000

0000ab58 <_strtol_r>:
    ab58:	b5f0      	push	{r4, r5, r6, r7, lr}
    ab5a:	1c1e      	adds	r6, r3, #0
    ab5c:	4b44      	ldr	r3, [pc, #272]	; (ac70 <_strtol_r+0x118>)
    ab5e:	b087      	sub	sp, #28
    ab60:	681b      	ldr	r3, [r3, #0]
    ab62:	9005      	str	r0, [sp, #20]
    ab64:	9302      	str	r3, [sp, #8]
    ab66:	1c0b      	adds	r3, r1, #0
    ab68:	9103      	str	r1, [sp, #12]
    ab6a:	9201      	str	r2, [sp, #4]
    ab6c:	781c      	ldrb	r4, [r3, #0]
    ab6e:	9a02      	ldr	r2, [sp, #8]
    ab70:	1c5d      	adds	r5, r3, #1
    ab72:	1912      	adds	r2, r2, r4
    ab74:	7850      	ldrb	r0, [r2, #1]
    ab76:	2208      	movs	r2, #8
    ab78:	4010      	ands	r0, r2
    ab7a:	d001      	beq.n	ab80 <_strtol_r+0x28>
    ab7c:	1c2b      	adds	r3, r5, #0
    ab7e:	e7f5      	b.n	ab6c <_strtol_r+0x14>
    ab80:	2c2d      	cmp	r4, #45	; 0x2d
    ab82:	d104      	bne.n	ab8e <_strtol_r+0x36>
    ab84:	1c9d      	adds	r5, r3, #2
    ab86:	785c      	ldrb	r4, [r3, #1]
    ab88:	2301      	movs	r3, #1
    ab8a:	9300      	str	r3, [sp, #0]
    ab8c:	e004      	b.n	ab98 <_strtol_r+0x40>
    ab8e:	9000      	str	r0, [sp, #0]
    ab90:	2c2b      	cmp	r4, #43	; 0x2b
    ab92:	d101      	bne.n	ab98 <_strtol_r+0x40>
    ab94:	785c      	ldrb	r4, [r3, #1]
    ab96:	1c9d      	adds	r5, r3, #2
    ab98:	2e00      	cmp	r6, #0
    ab9a:	d002      	beq.n	aba2 <_strtol_r+0x4a>
    ab9c:	2e10      	cmp	r6, #16
    ab9e:	d10a      	bne.n	abb6 <_strtol_r+0x5e>
    aba0:	e060      	b.n	ac64 <_strtol_r+0x10c>
    aba2:	2c30      	cmp	r4, #48	; 0x30
    aba4:	d15c      	bne.n	ac60 <_strtol_r+0x108>
    aba6:	2220      	movs	r2, #32
    aba8:	782b      	ldrb	r3, [r5, #0]
    abaa:	4393      	bics	r3, r2
    abac:	2b58      	cmp	r3, #88	; 0x58
    abae:	d152      	bne.n	ac56 <_strtol_r+0xfe>
    abb0:	2610      	movs	r6, #16
    abb2:	786c      	ldrb	r4, [r5, #1]
    abb4:	3502      	adds	r5, #2
    abb6:	9f00      	ldr	r7, [sp, #0]
    abb8:	1c31      	adds	r1, r6, #0
    abba:	1e7b      	subs	r3, r7, #1
    abbc:	419f      	sbcs	r7, r3
    abbe:	4b2d      	ldr	r3, [pc, #180]	; (ac74 <_strtol_r+0x11c>)
    abc0:	18ff      	adds	r7, r7, r3
    abc2:	1c38      	adds	r0, r7, #0
    abc4:	f7fb f9a4 	bl	5f10 <__aeabi_uidivmod>
    abc8:	1c38      	adds	r0, r7, #0
    abca:	9104      	str	r1, [sp, #16]
    abcc:	1c31      	adds	r1, r6, #0
    abce:	f7fb f919 	bl	5e04 <__aeabi_uidiv>
    abd2:	2200      	movs	r2, #0
    abd4:	1c07      	adds	r7, r0, #0
    abd6:	1c13      	adds	r3, r2, #0
    abd8:	9902      	ldr	r1, [sp, #8]
    abda:	1909      	adds	r1, r1, r4
    abdc:	7849      	ldrb	r1, [r1, #1]
    abde:	0748      	lsls	r0, r1, #29
    abe0:	d501      	bpl.n	abe6 <_strtol_r+0x8e>
    abe2:	3c30      	subs	r4, #48	; 0x30
    abe4:	e007      	b.n	abf6 <_strtol_r+0x9e>
    abe6:	2003      	movs	r0, #3
    abe8:	4008      	ands	r0, r1
    abea:	d017      	beq.n	ac1c <_strtol_r+0xc4>
    abec:	2137      	movs	r1, #55	; 0x37
    abee:	2801      	cmp	r0, #1
    abf0:	d000      	beq.n	abf4 <_strtol_r+0x9c>
    abf2:	3120      	adds	r1, #32
    abf4:	1a64      	subs	r4, r4, r1
    abf6:	42b4      	cmp	r4, r6
    abf8:	da10      	bge.n	ac1c <_strtol_r+0xc4>
    abfa:	1c51      	adds	r1, r2, #1
    abfc:	d00b      	beq.n	ac16 <_strtol_r+0xbe>
    abfe:	42bb      	cmp	r3, r7
    ac00:	d807      	bhi.n	ac12 <_strtol_r+0xba>
    ac02:	d102      	bne.n	ac0a <_strtol_r+0xb2>
    ac04:	9a04      	ldr	r2, [sp, #16]
    ac06:	4294      	cmp	r4, r2
    ac08:	dc03      	bgt.n	ac12 <_strtol_r+0xba>
    ac0a:	4373      	muls	r3, r6
    ac0c:	2201      	movs	r2, #1
    ac0e:	18e3      	adds	r3, r4, r3
    ac10:	e001      	b.n	ac16 <_strtol_r+0xbe>
    ac12:	2201      	movs	r2, #1
    ac14:	4252      	negs	r2, r2
    ac16:	782c      	ldrb	r4, [r5, #0]
    ac18:	3501      	adds	r5, #1
    ac1a:	e7dd      	b.n	abd8 <_strtol_r+0x80>
    ac1c:	1c18      	adds	r0, r3, #0
    ac1e:	1c51      	adds	r1, r2, #1
    ac20:	d10b      	bne.n	ac3a <_strtol_r+0xe2>
    ac22:	9800      	ldr	r0, [sp, #0]
    ac24:	9a05      	ldr	r2, [sp, #20]
    ac26:	1e43      	subs	r3, r0, #1
    ac28:	4198      	sbcs	r0, r3
    ac2a:	4b12      	ldr	r3, [pc, #72]	; (ac74 <_strtol_r+0x11c>)
    ac2c:	18c0      	adds	r0, r0, r3
    ac2e:	2322      	movs	r3, #34	; 0x22
    ac30:	6013      	str	r3, [r2, #0]
    ac32:	9b01      	ldr	r3, [sp, #4]
    ac34:	2b00      	cmp	r3, #0
    ac36:	d10a      	bne.n	ac4e <_strtol_r+0xf6>
    ac38:	e017      	b.n	ac6a <_strtol_r+0x112>
    ac3a:	9900      	ldr	r1, [sp, #0]
    ac3c:	2900      	cmp	r1, #0
    ac3e:	d000      	beq.n	ac42 <_strtol_r+0xea>
    ac40:	4258      	negs	r0, r3
    ac42:	9b01      	ldr	r3, [sp, #4]
    ac44:	2b00      	cmp	r3, #0
    ac46:	d010      	beq.n	ac6a <_strtol_r+0x112>
    ac48:	9b03      	ldr	r3, [sp, #12]
    ac4a:	2a00      	cmp	r2, #0
    ac4c:	d000      	beq.n	ac50 <_strtol_r+0xf8>
    ac4e:	1e6b      	subs	r3, r5, #1
    ac50:	9a01      	ldr	r2, [sp, #4]
    ac52:	6013      	str	r3, [r2, #0]
    ac54:	e009      	b.n	ac6a <_strtol_r+0x112>
    ac56:	2430      	movs	r4, #48	; 0x30
    ac58:	2e00      	cmp	r6, #0
    ac5a:	d1ac      	bne.n	abb6 <_strtol_r+0x5e>
    ac5c:	2608      	movs	r6, #8
    ac5e:	e7aa      	b.n	abb6 <_strtol_r+0x5e>
    ac60:	260a      	movs	r6, #10
    ac62:	e7a8      	b.n	abb6 <_strtol_r+0x5e>
    ac64:	2c30      	cmp	r4, #48	; 0x30
    ac66:	d1a6      	bne.n	abb6 <_strtol_r+0x5e>
    ac68:	e79d      	b.n	aba6 <_strtol_r+0x4e>
    ac6a:	b007      	add	sp, #28
    ac6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ac6e:	46c0      	nop			; (mov r8, r8)
    ac70:	20000138 	.word	0x20000138
    ac74:	7fffffff 	.word	0x7fffffff

0000ac78 <_strtoul_r>:
    ac78:	b5f0      	push	{r4, r5, r6, r7, lr}
    ac7a:	1c1e      	adds	r6, r3, #0
    ac7c:	4b3e      	ldr	r3, [pc, #248]	; (ad78 <_strtoul_r+0x100>)
    ac7e:	b087      	sub	sp, #28
    ac80:	681b      	ldr	r3, [r3, #0]
    ac82:	1c17      	adds	r7, r2, #0
    ac84:	9302      	str	r3, [sp, #8]
    ac86:	1c0b      	adds	r3, r1, #0
    ac88:	9005      	str	r0, [sp, #20]
    ac8a:	9104      	str	r1, [sp, #16]
    ac8c:	781c      	ldrb	r4, [r3, #0]
    ac8e:	9a02      	ldr	r2, [sp, #8]
    ac90:	1c5d      	adds	r5, r3, #1
    ac92:	1912      	adds	r2, r2, r4
    ac94:	7851      	ldrb	r1, [r2, #1]
    ac96:	2208      	movs	r2, #8
    ac98:	400a      	ands	r2, r1
    ac9a:	d001      	beq.n	aca0 <_strtoul_r+0x28>
    ac9c:	1c2b      	adds	r3, r5, #0
    ac9e:	e7f5      	b.n	ac8c <_strtoul_r+0x14>
    aca0:	2c2d      	cmp	r4, #45	; 0x2d
    aca2:	d104      	bne.n	acae <_strtoul_r+0x36>
    aca4:	1c9d      	adds	r5, r3, #2
    aca6:	785c      	ldrb	r4, [r3, #1]
    aca8:	2301      	movs	r3, #1
    acaa:	9301      	str	r3, [sp, #4]
    acac:	e004      	b.n	acb8 <_strtoul_r+0x40>
    acae:	9201      	str	r2, [sp, #4]
    acb0:	2c2b      	cmp	r4, #43	; 0x2b
    acb2:	d101      	bne.n	acb8 <_strtoul_r+0x40>
    acb4:	785c      	ldrb	r4, [r3, #1]
    acb6:	1c9d      	adds	r5, r3, #2
    acb8:	2e00      	cmp	r6, #0
    acba:	d002      	beq.n	acc2 <_strtoul_r+0x4a>
    acbc:	2e10      	cmp	r6, #16
    acbe:	d10a      	bne.n	acd6 <_strtoul_r+0x5e>
    acc0:	e054      	b.n	ad6c <_strtoul_r+0xf4>
    acc2:	2c30      	cmp	r4, #48	; 0x30
    acc4:	d150      	bne.n	ad68 <_strtoul_r+0xf0>
    acc6:	2220      	movs	r2, #32
    acc8:	782b      	ldrb	r3, [r5, #0]
    acca:	4393      	bics	r3, r2
    accc:	2b58      	cmp	r3, #88	; 0x58
    acce:	d146      	bne.n	ad5e <_strtoul_r+0xe6>
    acd0:	2610      	movs	r6, #16
    acd2:	786c      	ldrb	r4, [r5, #1]
    acd4:	3502      	adds	r5, #2
    acd6:	2001      	movs	r0, #1
    acd8:	1c31      	adds	r1, r6, #0
    acda:	4240      	negs	r0, r0
    acdc:	f7fb f892 	bl	5e04 <__aeabi_uidiv>
    ace0:	9003      	str	r0, [sp, #12]
    ace2:	2001      	movs	r0, #1
    ace4:	1c31      	adds	r1, r6, #0
    ace6:	4240      	negs	r0, r0
    ace8:	f7fb f912 	bl	5f10 <__aeabi_uidivmod>
    acec:	2200      	movs	r2, #0
    acee:	468c      	mov	ip, r1
    acf0:	1c13      	adds	r3, r2, #0
    acf2:	9902      	ldr	r1, [sp, #8]
    acf4:	1909      	adds	r1, r1, r4
    acf6:	7849      	ldrb	r1, [r1, #1]
    acf8:	0748      	lsls	r0, r1, #29
    acfa:	d501      	bpl.n	ad00 <_strtoul_r+0x88>
    acfc:	3c30      	subs	r4, #48	; 0x30
    acfe:	e007      	b.n	ad10 <_strtoul_r+0x98>
    ad00:	2003      	movs	r0, #3
    ad02:	4008      	ands	r0, r1
    ad04:	d017      	beq.n	ad36 <_strtoul_r+0xbe>
    ad06:	2137      	movs	r1, #55	; 0x37
    ad08:	2801      	cmp	r0, #1
    ad0a:	d000      	beq.n	ad0e <_strtoul_r+0x96>
    ad0c:	3120      	adds	r1, #32
    ad0e:	1a64      	subs	r4, r4, r1
    ad10:	42b4      	cmp	r4, r6
    ad12:	da10      	bge.n	ad36 <_strtoul_r+0xbe>
    ad14:	1c51      	adds	r1, r2, #1
    ad16:	d00b      	beq.n	ad30 <_strtoul_r+0xb8>
    ad18:	9a03      	ldr	r2, [sp, #12]
    ad1a:	4293      	cmp	r3, r2
    ad1c:	d806      	bhi.n	ad2c <_strtoul_r+0xb4>
    ad1e:	d101      	bne.n	ad24 <_strtoul_r+0xac>
    ad20:	4564      	cmp	r4, ip
    ad22:	dc03      	bgt.n	ad2c <_strtoul_r+0xb4>
    ad24:	4373      	muls	r3, r6
    ad26:	2201      	movs	r2, #1
    ad28:	18e3      	adds	r3, r4, r3
    ad2a:	e001      	b.n	ad30 <_strtoul_r+0xb8>
    ad2c:	2201      	movs	r2, #1
    ad2e:	4252      	negs	r2, r2
    ad30:	782c      	ldrb	r4, [r5, #0]
    ad32:	3501      	adds	r5, #1
    ad34:	e7dd      	b.n	acf2 <_strtoul_r+0x7a>
    ad36:	1c18      	adds	r0, r3, #0
    ad38:	1c51      	adds	r1, r2, #1
    ad3a:	d104      	bne.n	ad46 <_strtoul_r+0xce>
    ad3c:	2322      	movs	r3, #34	; 0x22
    ad3e:	9905      	ldr	r1, [sp, #20]
    ad40:	1c10      	adds	r0, r2, #0
    ad42:	600b      	str	r3, [r1, #0]
    ad44:	e003      	b.n	ad4e <_strtoul_r+0xd6>
    ad46:	9901      	ldr	r1, [sp, #4]
    ad48:	2900      	cmp	r1, #0
    ad4a:	d000      	beq.n	ad4e <_strtoul_r+0xd6>
    ad4c:	4258      	negs	r0, r3
    ad4e:	2f00      	cmp	r7, #0
    ad50:	d00f      	beq.n	ad72 <_strtoul_r+0xfa>
    ad52:	9b04      	ldr	r3, [sp, #16]
    ad54:	2a00      	cmp	r2, #0
    ad56:	d000      	beq.n	ad5a <_strtoul_r+0xe2>
    ad58:	1e6b      	subs	r3, r5, #1
    ad5a:	603b      	str	r3, [r7, #0]
    ad5c:	e009      	b.n	ad72 <_strtoul_r+0xfa>
    ad5e:	2430      	movs	r4, #48	; 0x30
    ad60:	2e00      	cmp	r6, #0
    ad62:	d1b8      	bne.n	acd6 <_strtoul_r+0x5e>
    ad64:	2608      	movs	r6, #8
    ad66:	e7b6      	b.n	acd6 <_strtoul_r+0x5e>
    ad68:	260a      	movs	r6, #10
    ad6a:	e7b4      	b.n	acd6 <_strtoul_r+0x5e>
    ad6c:	2c30      	cmp	r4, #48	; 0x30
    ad6e:	d1b2      	bne.n	acd6 <_strtoul_r+0x5e>
    ad70:	e7a9      	b.n	acc6 <_strtoul_r+0x4e>
    ad72:	b007      	add	sp, #28
    ad74:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ad76:	46c0      	nop			; (mov r8, r8)
    ad78:	20000138 	.word	0x20000138

0000ad7c <__submore>:
    ad7c:	1c0b      	adds	r3, r1, #0
    ad7e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    ad80:	6b4d      	ldr	r5, [r1, #52]	; 0x34
    ad82:	3344      	adds	r3, #68	; 0x44
    ad84:	1c0c      	adds	r4, r1, #0
    ad86:	429d      	cmp	r5, r3
    ad88:	d11b      	bne.n	adc2 <__submore+0x46>
    ad8a:	2680      	movs	r6, #128	; 0x80
    ad8c:	00f6      	lsls	r6, r6, #3
    ad8e:	1c31      	adds	r1, r6, #0
    ad90:	f7fd fd12 	bl	87b8 <_malloc_r>
    ad94:	2800      	cmp	r0, #0
    ad96:	d102      	bne.n	ad9e <__submore+0x22>
    ad98:	2001      	movs	r0, #1
    ad9a:	4240      	negs	r0, r0
    ad9c:	e025      	b.n	adea <__submore+0x6e>
    ad9e:	1c23      	adds	r3, r4, #0
    ada0:	6360      	str	r0, [r4, #52]	; 0x34
    ada2:	63a6      	str	r6, [r4, #56]	; 0x38
    ada4:	3346      	adds	r3, #70	; 0x46
    ada6:	781a      	ldrb	r2, [r3, #0]
    ada8:	4b10      	ldr	r3, [pc, #64]	; (adec <__submore+0x70>)
    adaa:	54c2      	strb	r2, [r0, r3]
    adac:	1c23      	adds	r3, r4, #0
    adae:	3345      	adds	r3, #69	; 0x45
    adb0:	781a      	ldrb	r2, [r3, #0]
    adb2:	4b0f      	ldr	r3, [pc, #60]	; (adf0 <__submore+0x74>)
    adb4:	54c2      	strb	r2, [r0, r3]
    adb6:	782a      	ldrb	r2, [r5, #0]
    adb8:	4b0e      	ldr	r3, [pc, #56]	; (adf4 <__submore+0x78>)
    adba:	54c2      	strb	r2, [r0, r3]
    adbc:	18c0      	adds	r0, r0, r3
    adbe:	6020      	str	r0, [r4, #0]
    adc0:	e012      	b.n	ade8 <__submore+0x6c>
    adc2:	6b8e      	ldr	r6, [r1, #56]	; 0x38
    adc4:	1c29      	adds	r1, r5, #0
    adc6:	0073      	lsls	r3, r6, #1
    adc8:	1c1a      	adds	r2, r3, #0
    adca:	9301      	str	r3, [sp, #4]
    adcc:	f001 ff3f 	bl	cc4e <_realloc_r>
    add0:	1e05      	subs	r5, r0, #0
    add2:	d0e1      	beq.n	ad98 <__submore+0x1c>
    add4:	1987      	adds	r7, r0, r6
    add6:	1c38      	adds	r0, r7, #0
    add8:	1c29      	adds	r1, r5, #0
    adda:	1c32      	adds	r2, r6, #0
    addc:	f7fd fc95 	bl	870a <memcpy>
    ade0:	9b01      	ldr	r3, [sp, #4]
    ade2:	6027      	str	r7, [r4, #0]
    ade4:	6365      	str	r5, [r4, #52]	; 0x34
    ade6:	63a3      	str	r3, [r4, #56]	; 0x38
    ade8:	2000      	movs	r0, #0
    adea:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    adec:	000003ff 	.word	0x000003ff
    adf0:	000003fe 	.word	0x000003fe
    adf4:	000003fd 	.word	0x000003fd

0000adf8 <__swbuf_r>:
    adf8:	b570      	push	{r4, r5, r6, lr}
    adfa:	1c05      	adds	r5, r0, #0
    adfc:	1c0e      	adds	r6, r1, #0
    adfe:	1c14      	adds	r4, r2, #0
    ae00:	2800      	cmp	r0, #0
    ae02:	d004      	beq.n	ae0e <__swbuf_r+0x16>
    ae04:	6983      	ldr	r3, [r0, #24]
    ae06:	2b00      	cmp	r3, #0
    ae08:	d101      	bne.n	ae0e <__swbuf_r+0x16>
    ae0a:	f7fd fa67 	bl	82dc <__sinit>
    ae0e:	4b23      	ldr	r3, [pc, #140]	; (ae9c <__swbuf_r+0xa4>)
    ae10:	429c      	cmp	r4, r3
    ae12:	d101      	bne.n	ae18 <__swbuf_r+0x20>
    ae14:	686c      	ldr	r4, [r5, #4]
    ae16:	e008      	b.n	ae2a <__swbuf_r+0x32>
    ae18:	4b21      	ldr	r3, [pc, #132]	; (aea0 <__swbuf_r+0xa8>)
    ae1a:	429c      	cmp	r4, r3
    ae1c:	d101      	bne.n	ae22 <__swbuf_r+0x2a>
    ae1e:	68ac      	ldr	r4, [r5, #8]
    ae20:	e003      	b.n	ae2a <__swbuf_r+0x32>
    ae22:	4b20      	ldr	r3, [pc, #128]	; (aea4 <__swbuf_r+0xac>)
    ae24:	429c      	cmp	r4, r3
    ae26:	d100      	bne.n	ae2a <__swbuf_r+0x32>
    ae28:	68ec      	ldr	r4, [r5, #12]
    ae2a:	69a3      	ldr	r3, [r4, #24]
    ae2c:	60a3      	str	r3, [r4, #8]
    ae2e:	89a3      	ldrh	r3, [r4, #12]
    ae30:	071b      	lsls	r3, r3, #28
    ae32:	d50a      	bpl.n	ae4a <__swbuf_r+0x52>
    ae34:	6923      	ldr	r3, [r4, #16]
    ae36:	2b00      	cmp	r3, #0
    ae38:	d007      	beq.n	ae4a <__swbuf_r+0x52>
    ae3a:	6823      	ldr	r3, [r4, #0]
    ae3c:	6922      	ldr	r2, [r4, #16]
    ae3e:	b2f6      	uxtb	r6, r6
    ae40:	1a98      	subs	r0, r3, r2
    ae42:	6963      	ldr	r3, [r4, #20]
    ae44:	4298      	cmp	r0, r3
    ae46:	db0f      	blt.n	ae68 <__swbuf_r+0x70>
    ae48:	e008      	b.n	ae5c <__swbuf_r+0x64>
    ae4a:	1c28      	adds	r0, r5, #0
    ae4c:	1c21      	adds	r1, r4, #0
    ae4e:	f000 f83f 	bl	aed0 <__swsetup_r>
    ae52:	2800      	cmp	r0, #0
    ae54:	d0f1      	beq.n	ae3a <__swbuf_r+0x42>
    ae56:	2001      	movs	r0, #1
    ae58:	4240      	negs	r0, r0
    ae5a:	e01d      	b.n	ae98 <__swbuf_r+0xa0>
    ae5c:	1c28      	adds	r0, r5, #0
    ae5e:	1c21      	adds	r1, r4, #0
    ae60:	f7fd f9ba 	bl	81d8 <_fflush_r>
    ae64:	2800      	cmp	r0, #0
    ae66:	d1f6      	bne.n	ae56 <__swbuf_r+0x5e>
    ae68:	68a3      	ldr	r3, [r4, #8]
    ae6a:	3001      	adds	r0, #1
    ae6c:	3b01      	subs	r3, #1
    ae6e:	60a3      	str	r3, [r4, #8]
    ae70:	6823      	ldr	r3, [r4, #0]
    ae72:	1c5a      	adds	r2, r3, #1
    ae74:	6022      	str	r2, [r4, #0]
    ae76:	701e      	strb	r6, [r3, #0]
    ae78:	6963      	ldr	r3, [r4, #20]
    ae7a:	4298      	cmp	r0, r3
    ae7c:	d005      	beq.n	ae8a <__swbuf_r+0x92>
    ae7e:	89a3      	ldrh	r3, [r4, #12]
    ae80:	1c30      	adds	r0, r6, #0
    ae82:	07db      	lsls	r3, r3, #31
    ae84:	d508      	bpl.n	ae98 <__swbuf_r+0xa0>
    ae86:	2e0a      	cmp	r6, #10
    ae88:	d106      	bne.n	ae98 <__swbuf_r+0xa0>
    ae8a:	1c28      	adds	r0, r5, #0
    ae8c:	1c21      	adds	r1, r4, #0
    ae8e:	f7fd f9a3 	bl	81d8 <_fflush_r>
    ae92:	2800      	cmp	r0, #0
    ae94:	d1df      	bne.n	ae56 <__swbuf_r+0x5e>
    ae96:	1c30      	adds	r0, r6, #0
    ae98:	bd70      	pop	{r4, r5, r6, pc}
    ae9a:	46c0      	nop			; (mov r8, r8)
    ae9c:	0000e320 	.word	0x0000e320
    aea0:	0000e340 	.word	0x0000e340
    aea4:	0000e360 	.word	0x0000e360

0000aea8 <_write_r>:
    aea8:	b538      	push	{r3, r4, r5, lr}
    aeaa:	1c05      	adds	r5, r0, #0
    aeac:	2000      	movs	r0, #0
    aeae:	4c07      	ldr	r4, [pc, #28]	; (aecc <_write_r+0x24>)
    aeb0:	6020      	str	r0, [r4, #0]
    aeb2:	1c08      	adds	r0, r1, #0
    aeb4:	1c11      	adds	r1, r2, #0
    aeb6:	1c1a      	adds	r2, r3, #0
    aeb8:	f7f8 fbba 	bl	3630 <_write>
    aebc:	1c43      	adds	r3, r0, #1
    aebe:	d103      	bne.n	aec8 <_write_r+0x20>
    aec0:	6823      	ldr	r3, [r4, #0]
    aec2:	2b00      	cmp	r3, #0
    aec4:	d000      	beq.n	aec8 <_write_r+0x20>
    aec6:	602b      	str	r3, [r5, #0]
    aec8:	bd38      	pop	{r3, r4, r5, pc}
    aeca:	46c0      	nop			; (mov r8, r8)
    aecc:	20004624 	.word	0x20004624

0000aed0 <__swsetup_r>:
    aed0:	4b35      	ldr	r3, [pc, #212]	; (afa8 <__swsetup_r+0xd8>)
    aed2:	b570      	push	{r4, r5, r6, lr}
    aed4:	681d      	ldr	r5, [r3, #0]
    aed6:	1c06      	adds	r6, r0, #0
    aed8:	1c0c      	adds	r4, r1, #0
    aeda:	2d00      	cmp	r5, #0
    aedc:	d005      	beq.n	aeea <__swsetup_r+0x1a>
    aede:	69ab      	ldr	r3, [r5, #24]
    aee0:	2b00      	cmp	r3, #0
    aee2:	d102      	bne.n	aeea <__swsetup_r+0x1a>
    aee4:	1c28      	adds	r0, r5, #0
    aee6:	f7fd f9f9 	bl	82dc <__sinit>
    aeea:	4b30      	ldr	r3, [pc, #192]	; (afac <__swsetup_r+0xdc>)
    aeec:	429c      	cmp	r4, r3
    aeee:	d101      	bne.n	aef4 <__swsetup_r+0x24>
    aef0:	686c      	ldr	r4, [r5, #4]
    aef2:	e008      	b.n	af06 <__swsetup_r+0x36>
    aef4:	4b2e      	ldr	r3, [pc, #184]	; (afb0 <__swsetup_r+0xe0>)
    aef6:	429c      	cmp	r4, r3
    aef8:	d101      	bne.n	aefe <__swsetup_r+0x2e>
    aefa:	68ac      	ldr	r4, [r5, #8]
    aefc:	e003      	b.n	af06 <__swsetup_r+0x36>
    aefe:	4b2d      	ldr	r3, [pc, #180]	; (afb4 <__swsetup_r+0xe4>)
    af00:	429c      	cmp	r4, r3
    af02:	d100      	bne.n	af06 <__swsetup_r+0x36>
    af04:	68ec      	ldr	r4, [r5, #12]
    af06:	89a3      	ldrh	r3, [r4, #12]
    af08:	b29a      	uxth	r2, r3
    af0a:	0711      	lsls	r1, r2, #28
    af0c:	d423      	bmi.n	af56 <__swsetup_r+0x86>
    af0e:	06d1      	lsls	r1, r2, #27
    af10:	d407      	bmi.n	af22 <__swsetup_r+0x52>
    af12:	2209      	movs	r2, #9
    af14:	2001      	movs	r0, #1
    af16:	6032      	str	r2, [r6, #0]
    af18:	3237      	adds	r2, #55	; 0x37
    af1a:	4313      	orrs	r3, r2
    af1c:	81a3      	strh	r3, [r4, #12]
    af1e:	4240      	negs	r0, r0
    af20:	e040      	b.n	afa4 <__swsetup_r+0xd4>
    af22:	0753      	lsls	r3, r2, #29
    af24:	d513      	bpl.n	af4e <__swsetup_r+0x7e>
    af26:	6b61      	ldr	r1, [r4, #52]	; 0x34
    af28:	2900      	cmp	r1, #0
    af2a:	d008      	beq.n	af3e <__swsetup_r+0x6e>
    af2c:	1c23      	adds	r3, r4, #0
    af2e:	3344      	adds	r3, #68	; 0x44
    af30:	4299      	cmp	r1, r3
    af32:	d002      	beq.n	af3a <__swsetup_r+0x6a>
    af34:	1c30      	adds	r0, r6, #0
    af36:	f7fd fbf9 	bl	872c <_free_r>
    af3a:	2300      	movs	r3, #0
    af3c:	6363      	str	r3, [r4, #52]	; 0x34
    af3e:	2224      	movs	r2, #36	; 0x24
    af40:	89a3      	ldrh	r3, [r4, #12]
    af42:	4393      	bics	r3, r2
    af44:	81a3      	strh	r3, [r4, #12]
    af46:	2300      	movs	r3, #0
    af48:	6063      	str	r3, [r4, #4]
    af4a:	6923      	ldr	r3, [r4, #16]
    af4c:	6023      	str	r3, [r4, #0]
    af4e:	2208      	movs	r2, #8
    af50:	89a3      	ldrh	r3, [r4, #12]
    af52:	4313      	orrs	r3, r2
    af54:	81a3      	strh	r3, [r4, #12]
    af56:	6923      	ldr	r3, [r4, #16]
    af58:	2b00      	cmp	r3, #0
    af5a:	d10b      	bne.n	af74 <__swsetup_r+0xa4>
    af5c:	23a0      	movs	r3, #160	; 0xa0
    af5e:	89a2      	ldrh	r2, [r4, #12]
    af60:	009b      	lsls	r3, r3, #2
    af62:	4013      	ands	r3, r2
    af64:	2280      	movs	r2, #128	; 0x80
    af66:	0092      	lsls	r2, r2, #2
    af68:	4293      	cmp	r3, r2
    af6a:	d003      	beq.n	af74 <__swsetup_r+0xa4>
    af6c:	1c30      	adds	r0, r6, #0
    af6e:	1c21      	adds	r1, r4, #0
    af70:	f7fd fb54 	bl	861c <__smakebuf_r>
    af74:	2301      	movs	r3, #1
    af76:	89a2      	ldrh	r2, [r4, #12]
    af78:	4013      	ands	r3, r2
    af7a:	d005      	beq.n	af88 <__swsetup_r+0xb8>
    af7c:	2300      	movs	r3, #0
    af7e:	60a3      	str	r3, [r4, #8]
    af80:	6963      	ldr	r3, [r4, #20]
    af82:	425b      	negs	r3, r3
    af84:	61a3      	str	r3, [r4, #24]
    af86:	e003      	b.n	af90 <__swsetup_r+0xc0>
    af88:	0791      	lsls	r1, r2, #30
    af8a:	d400      	bmi.n	af8e <__swsetup_r+0xbe>
    af8c:	6963      	ldr	r3, [r4, #20]
    af8e:	60a3      	str	r3, [r4, #8]
    af90:	2000      	movs	r0, #0
    af92:	6923      	ldr	r3, [r4, #16]
    af94:	4283      	cmp	r3, r0
    af96:	d105      	bne.n	afa4 <__swsetup_r+0xd4>
    af98:	0613      	lsls	r3, r2, #24
    af9a:	d503      	bpl.n	afa4 <__swsetup_r+0xd4>
    af9c:	2340      	movs	r3, #64	; 0x40
    af9e:	431a      	orrs	r2, r3
    afa0:	81a2      	strh	r2, [r4, #12]
    afa2:	3801      	subs	r0, #1
    afa4:	bd70      	pop	{r4, r5, r6, pc}
    afa6:	46c0      	nop			; (mov r8, r8)
    afa8:	20000134 	.word	0x20000134
    afac:	0000e320 	.word	0x0000e320
    afb0:	0000e340 	.word	0x0000e340
    afb4:	0000e360 	.word	0x0000e360

0000afb8 <_close_r>:
    afb8:	b538      	push	{r3, r4, r5, lr}
    afba:	2300      	movs	r3, #0
    afbc:	4c06      	ldr	r4, [pc, #24]	; (afd8 <_close_r+0x20>)
    afbe:	1c05      	adds	r5, r0, #0
    afc0:	1c08      	adds	r0, r1, #0
    afc2:	6023      	str	r3, [r4, #0]
    afc4:	f7f8 fb1e 	bl	3604 <_close>
    afc8:	1c43      	adds	r3, r0, #1
    afca:	d103      	bne.n	afd4 <_close_r+0x1c>
    afcc:	6823      	ldr	r3, [r4, #0]
    afce:	2b00      	cmp	r3, #0
    afd0:	d000      	beq.n	afd4 <_close_r+0x1c>
    afd2:	602b      	str	r3, [r5, #0]
    afd4:	bd38      	pop	{r3, r4, r5, pc}
    afd6:	46c0      	nop			; (mov r8, r8)
    afd8:	20004624 	.word	0x20004624

0000afdc <quorem>:
    afdc:	b5f0      	push	{r4, r5, r6, r7, lr}
    afde:	6903      	ldr	r3, [r0, #16]
    afe0:	690c      	ldr	r4, [r1, #16]
    afe2:	b089      	sub	sp, #36	; 0x24
    afe4:	2600      	movs	r6, #0
    afe6:	42a3      	cmp	r3, r4
    afe8:	db7c      	blt.n	b0e4 <quorem+0x108>
    afea:	1c0b      	adds	r3, r1, #0
    afec:	3c01      	subs	r4, #1
    afee:	3314      	adds	r3, #20
    aff0:	00a5      	lsls	r5, r4, #2
    aff2:	9303      	str	r3, [sp, #12]
    aff4:	195b      	adds	r3, r3, r5
    aff6:	9304      	str	r3, [sp, #16]
    aff8:	1c03      	adds	r3, r0, #0
    affa:	3314      	adds	r3, #20
    affc:	9301      	str	r3, [sp, #4]
    affe:	195d      	adds	r5, r3, r5
    b000:	9b04      	ldr	r3, [sp, #16]
    b002:	9107      	str	r1, [sp, #28]
    b004:	681b      	ldr	r3, [r3, #0]
    b006:	9002      	str	r0, [sp, #8]
    b008:	1c59      	adds	r1, r3, #1
    b00a:	6828      	ldr	r0, [r5, #0]
    b00c:	9305      	str	r3, [sp, #20]
    b00e:	f7fa fef9 	bl	5e04 <__aeabi_uidiv>
    b012:	1e07      	subs	r7, r0, #0
    b014:	42b7      	cmp	r7, r6
    b016:	d035      	beq.n	b084 <quorem+0xa8>
    b018:	9b03      	ldr	r3, [sp, #12]
    b01a:	9801      	ldr	r0, [sp, #4]
    b01c:	469c      	mov	ip, r3
    b01e:	9605      	str	r6, [sp, #20]
    b020:	4663      	mov	r3, ip
    b022:	cb04      	ldmia	r3!, {r2}
    b024:	b291      	uxth	r1, r2
    b026:	4379      	muls	r1, r7
    b028:	0c12      	lsrs	r2, r2, #16
    b02a:	437a      	muls	r2, r7
    b02c:	1871      	adds	r1, r6, r1
    b02e:	0c0e      	lsrs	r6, r1, #16
    b030:	469c      	mov	ip, r3
    b032:	18b3      	adds	r3, r6, r2
    b034:	9306      	str	r3, [sp, #24]
    b036:	8802      	ldrh	r2, [r0, #0]
    b038:	0c1e      	lsrs	r6, r3, #16
    b03a:	9b05      	ldr	r3, [sp, #20]
    b03c:	b289      	uxth	r1, r1
    b03e:	18d2      	adds	r2, r2, r3
    b040:	6803      	ldr	r3, [r0, #0]
    b042:	1a52      	subs	r2, r2, r1
    b044:	0c19      	lsrs	r1, r3, #16
    b046:	466b      	mov	r3, sp
    b048:	8b1b      	ldrh	r3, [r3, #24]
    b04a:	1acb      	subs	r3, r1, r3
    b04c:	1411      	asrs	r1, r2, #16
    b04e:	185b      	adds	r3, r3, r1
    b050:	1419      	asrs	r1, r3, #16
    b052:	b292      	uxth	r2, r2
    b054:	041b      	lsls	r3, r3, #16
    b056:	431a      	orrs	r2, r3
    b058:	9b04      	ldr	r3, [sp, #16]
    b05a:	9105      	str	r1, [sp, #20]
    b05c:	c004      	stmia	r0!, {r2}
    b05e:	4563      	cmp	r3, ip
    b060:	d2de      	bcs.n	b020 <quorem+0x44>
    b062:	682b      	ldr	r3, [r5, #0]
    b064:	2b00      	cmp	r3, #0
    b066:	d10d      	bne.n	b084 <quorem+0xa8>
    b068:	1c23      	adds	r3, r4, #0
    b06a:	9a01      	ldr	r2, [sp, #4]
    b06c:	3d04      	subs	r5, #4
    b06e:	4295      	cmp	r5, r2
    b070:	d803      	bhi.n	b07a <quorem+0x9e>
    b072:	9a02      	ldr	r2, [sp, #8]
    b074:	1c1c      	adds	r4, r3, #0
    b076:	6113      	str	r3, [r2, #16]
    b078:	e004      	b.n	b084 <quorem+0xa8>
    b07a:	682a      	ldr	r2, [r5, #0]
    b07c:	2a00      	cmp	r2, #0
    b07e:	d1f8      	bne.n	b072 <quorem+0x96>
    b080:	3b01      	subs	r3, #1
    b082:	e7f2      	b.n	b06a <quorem+0x8e>
    b084:	9802      	ldr	r0, [sp, #8]
    b086:	9907      	ldr	r1, [sp, #28]
    b088:	f001 fc22 	bl	c8d0 <__mcmp>
    b08c:	2800      	cmp	r0, #0
    b08e:	db28      	blt.n	b0e2 <quorem+0x106>
    b090:	2000      	movs	r0, #0
    b092:	9901      	ldr	r1, [sp, #4]
    b094:	9a03      	ldr	r2, [sp, #12]
    b096:	3701      	adds	r7, #1
    b098:	ca20      	ldmia	r2!, {r5}
    b09a:	880b      	ldrh	r3, [r1, #0]
    b09c:	1818      	adds	r0, r3, r0
    b09e:	b2ab      	uxth	r3, r5
    b0a0:	1ac3      	subs	r3, r0, r3
    b0a2:	6808      	ldr	r0, [r1, #0]
    b0a4:	0c2d      	lsrs	r5, r5, #16
    b0a6:	0c00      	lsrs	r0, r0, #16
    b0a8:	1b45      	subs	r5, r0, r5
    b0aa:	141e      	asrs	r6, r3, #16
    b0ac:	19ad      	adds	r5, r5, r6
    b0ae:	1428      	asrs	r0, r5, #16
    b0b0:	b29b      	uxth	r3, r3
    b0b2:	042d      	lsls	r5, r5, #16
    b0b4:	432b      	orrs	r3, r5
    b0b6:	c108      	stmia	r1!, {r3}
    b0b8:	9b04      	ldr	r3, [sp, #16]
    b0ba:	4293      	cmp	r3, r2
    b0bc:	d2ec      	bcs.n	b098 <quorem+0xbc>
    b0be:	9a01      	ldr	r2, [sp, #4]
    b0c0:	00a3      	lsls	r3, r4, #2
    b0c2:	18d3      	adds	r3, r2, r3
    b0c4:	681a      	ldr	r2, [r3, #0]
    b0c6:	2a00      	cmp	r2, #0
    b0c8:	d10b      	bne.n	b0e2 <quorem+0x106>
    b0ca:	9a01      	ldr	r2, [sp, #4]
    b0cc:	3b04      	subs	r3, #4
    b0ce:	4293      	cmp	r3, r2
    b0d0:	d802      	bhi.n	b0d8 <quorem+0xfc>
    b0d2:	9b02      	ldr	r3, [sp, #8]
    b0d4:	611c      	str	r4, [r3, #16]
    b0d6:	e004      	b.n	b0e2 <quorem+0x106>
    b0d8:	681a      	ldr	r2, [r3, #0]
    b0da:	2a00      	cmp	r2, #0
    b0dc:	d1f9      	bne.n	b0d2 <quorem+0xf6>
    b0de:	3c01      	subs	r4, #1
    b0e0:	e7f3      	b.n	b0ca <quorem+0xee>
    b0e2:	1c3e      	adds	r6, r7, #0
    b0e4:	1c30      	adds	r0, r6, #0
    b0e6:	b009      	add	sp, #36	; 0x24
    b0e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0000b0ec <_dtoa_r>:
    b0ec:	b5f0      	push	{r4, r5, r6, r7, lr}
    b0ee:	1c16      	adds	r6, r2, #0
    b0f0:	1c1f      	adds	r7, r3, #0
    b0f2:	6a44      	ldr	r4, [r0, #36]	; 0x24
    b0f4:	b09b      	sub	sp, #108	; 0x6c
    b0f6:	9008      	str	r0, [sp, #32]
    b0f8:	9d23      	ldr	r5, [sp, #140]	; 0x8c
    b0fa:	9606      	str	r6, [sp, #24]
    b0fc:	9707      	str	r7, [sp, #28]
    b0fe:	2c00      	cmp	r4, #0
    b100:	d108      	bne.n	b114 <_dtoa_r+0x28>
    b102:	2010      	movs	r0, #16
    b104:	f7fd fae2 	bl	86cc <malloc>
    b108:	9b08      	ldr	r3, [sp, #32]
    b10a:	6258      	str	r0, [r3, #36]	; 0x24
    b10c:	6044      	str	r4, [r0, #4]
    b10e:	6084      	str	r4, [r0, #8]
    b110:	6004      	str	r4, [r0, #0]
    b112:	60c4      	str	r4, [r0, #12]
    b114:	9b08      	ldr	r3, [sp, #32]
    b116:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    b118:	6819      	ldr	r1, [r3, #0]
    b11a:	2900      	cmp	r1, #0
    b11c:	d00b      	beq.n	b136 <_dtoa_r+0x4a>
    b11e:	685a      	ldr	r2, [r3, #4]
    b120:	2301      	movs	r3, #1
    b122:	4093      	lsls	r3, r2
    b124:	604a      	str	r2, [r1, #4]
    b126:	608b      	str	r3, [r1, #8]
    b128:	9808      	ldr	r0, [sp, #32]
    b12a:	f001 f9b7 	bl	c49c <_Bfree>
    b12e:	2200      	movs	r2, #0
    b130:	9b08      	ldr	r3, [sp, #32]
    b132:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    b134:	601a      	str	r2, [r3, #0]
    b136:	9b07      	ldr	r3, [sp, #28]
    b138:	2b00      	cmp	r3, #0
    b13a:	da05      	bge.n	b148 <_dtoa_r+0x5c>
    b13c:	2301      	movs	r3, #1
    b13e:	602b      	str	r3, [r5, #0]
    b140:	007b      	lsls	r3, r7, #1
    b142:	085b      	lsrs	r3, r3, #1
    b144:	9307      	str	r3, [sp, #28]
    b146:	e001      	b.n	b14c <_dtoa_r+0x60>
    b148:	2300      	movs	r3, #0
    b14a:	602b      	str	r3, [r5, #0]
    b14c:	9c07      	ldr	r4, [sp, #28]
    b14e:	4bc6      	ldr	r3, [pc, #792]	; (b468 <_dtoa_r+0x37c>)
    b150:	1c22      	adds	r2, r4, #0
    b152:	9317      	str	r3, [sp, #92]	; 0x5c
    b154:	401a      	ands	r2, r3
    b156:	429a      	cmp	r2, r3
    b158:	d119      	bne.n	b18e <_dtoa_r+0xa2>
    b15a:	4bc4      	ldr	r3, [pc, #784]	; (b46c <_dtoa_r+0x380>)
    b15c:	9a22      	ldr	r2, [sp, #136]	; 0x88
    b15e:	6013      	str	r3, [r2, #0]
    b160:	9a06      	ldr	r2, [sp, #24]
    b162:	4bc3      	ldr	r3, [pc, #780]	; (b470 <_dtoa_r+0x384>)
    b164:	2a00      	cmp	r2, #0
    b166:	d102      	bne.n	b16e <_dtoa_r+0x82>
    b168:	0324      	lsls	r4, r4, #12
    b16a:	d100      	bne.n	b16e <_dtoa_r+0x82>
    b16c:	4bc1      	ldr	r3, [pc, #772]	; (b474 <_dtoa_r+0x388>)
    b16e:	9a24      	ldr	r2, [sp, #144]	; 0x90
    b170:	1c18      	adds	r0, r3, #0
    b172:	2a00      	cmp	r2, #0
    b174:	d101      	bne.n	b17a <_dtoa_r+0x8e>
    b176:	f000 fdb6 	bl	bce6 <_dtoa_r+0xbfa>
    b17a:	78d9      	ldrb	r1, [r3, #3]
    b17c:	1cda      	adds	r2, r3, #3
    b17e:	2900      	cmp	r1, #0
    b180:	d000      	beq.n	b184 <_dtoa_r+0x98>
    b182:	3205      	adds	r2, #5
    b184:	9924      	ldr	r1, [sp, #144]	; 0x90
    b186:	1c18      	adds	r0, r3, #0
    b188:	600a      	str	r2, [r1, #0]
    b18a:	f000 fdac 	bl	bce6 <_dtoa_r+0xbfa>
    b18e:	9e06      	ldr	r6, [sp, #24]
    b190:	9f07      	ldr	r7, [sp, #28]
    b192:	2200      	movs	r2, #0
    b194:	1c30      	adds	r0, r6, #0
    b196:	1c39      	adds	r1, r7, #0
    b198:	2300      	movs	r3, #0
    b19a:	f7fa ffc5 	bl	6128 <__aeabi_dcmpeq>
    b19e:	1e05      	subs	r5, r0, #0
    b1a0:	d00e      	beq.n	b1c0 <_dtoa_r+0xd4>
    b1a2:	2301      	movs	r3, #1
    b1a4:	9a22      	ldr	r2, [sp, #136]	; 0x88
    b1a6:	6013      	str	r3, [r2, #0]
    b1a8:	4bb3      	ldr	r3, [pc, #716]	; (b478 <_dtoa_r+0x38c>)
    b1aa:	9a24      	ldr	r2, [sp, #144]	; 0x90
    b1ac:	1c18      	adds	r0, r3, #0
    b1ae:	2a00      	cmp	r2, #0
    b1b0:	d101      	bne.n	b1b6 <_dtoa_r+0xca>
    b1b2:	f000 fd98 	bl	bce6 <_dtoa_r+0xbfa>
    b1b6:	4ab1      	ldr	r2, [pc, #708]	; (b47c <_dtoa_r+0x390>)
    b1b8:	9924      	ldr	r1, [sp, #144]	; 0x90
    b1ba:	600a      	str	r2, [r1, #0]
    b1bc:	f000 fd93 	bl	bce6 <_dtoa_r+0xbfa>
    b1c0:	ab19      	add	r3, sp, #100	; 0x64
    b1c2:	9300      	str	r3, [sp, #0]
    b1c4:	ab18      	add	r3, sp, #96	; 0x60
    b1c6:	9301      	str	r3, [sp, #4]
    b1c8:	9808      	ldr	r0, [sp, #32]
    b1ca:	1c32      	adds	r2, r6, #0
    b1cc:	1c3b      	adds	r3, r7, #0
    b1ce:	f001 fc7b 	bl	cac8 <__d2b>
    b1d2:	0061      	lsls	r1, r4, #1
    b1d4:	900a      	str	r0, [sp, #40]	; 0x28
    b1d6:	0d49      	lsrs	r1, r1, #21
    b1d8:	d009      	beq.n	b1ee <_dtoa_r+0x102>
    b1da:	0338      	lsls	r0, r7, #12
    b1dc:	4ca8      	ldr	r4, [pc, #672]	; (b480 <_dtoa_r+0x394>)
    b1de:	0b00      	lsrs	r0, r0, #12
    b1e0:	4304      	orrs	r4, r0
    b1e2:	48a8      	ldr	r0, [pc, #672]	; (b484 <_dtoa_r+0x398>)
    b1e4:	1c32      	adds	r2, r6, #0
    b1e6:	1c23      	adds	r3, r4, #0
    b1e8:	180e      	adds	r6, r1, r0
    b1ea:	9516      	str	r5, [sp, #88]	; 0x58
    b1ec:	e01c      	b.n	b228 <_dtoa_r+0x13c>
    b1ee:	9b18      	ldr	r3, [sp, #96]	; 0x60
    b1f0:	9a19      	ldr	r2, [sp, #100]	; 0x64
    b1f2:	189e      	adds	r6, r3, r2
    b1f4:	4ba4      	ldr	r3, [pc, #656]	; (b488 <_dtoa_r+0x39c>)
    b1f6:	429e      	cmp	r6, r3
    b1f8:	db09      	blt.n	b20e <_dtoa_r+0x122>
    b1fa:	4ba4      	ldr	r3, [pc, #656]	; (b48c <_dtoa_r+0x3a0>)
    b1fc:	18f0      	adds	r0, r6, r3
    b1fe:	9b06      	ldr	r3, [sp, #24]
    b200:	40c3      	lsrs	r3, r0
    b202:	1c18      	adds	r0, r3, #0
    b204:	4ba2      	ldr	r3, [pc, #648]	; (b490 <_dtoa_r+0x3a4>)
    b206:	1b9b      	subs	r3, r3, r6
    b208:	409c      	lsls	r4, r3
    b20a:	4320      	orrs	r0, r4
    b20c:	e004      	b.n	b218 <_dtoa_r+0x12c>
    b20e:	48a1      	ldr	r0, [pc, #644]	; (b494 <_dtoa_r+0x3a8>)
    b210:	9b06      	ldr	r3, [sp, #24]
    b212:	1b80      	subs	r0, r0, r6
    b214:	4083      	lsls	r3, r0
    b216:	1c18      	adds	r0, r3, #0
    b218:	f7fc fde8 	bl	7dec <__aeabi_ui2d>
    b21c:	4c9e      	ldr	r4, [pc, #632]	; (b498 <_dtoa_r+0x3ac>)
    b21e:	1c02      	adds	r2, r0, #0
    b220:	190b      	adds	r3, r1, r4
    b222:	2101      	movs	r1, #1
    b224:	3e01      	subs	r6, #1
    b226:	9116      	str	r1, [sp, #88]	; 0x58
    b228:	1c10      	adds	r0, r2, #0
    b22a:	1c19      	adds	r1, r3, #0
    b22c:	2200      	movs	r2, #0
    b22e:	4b9b      	ldr	r3, [pc, #620]	; (b49c <_dtoa_r+0x3b0>)
    b230:	f7fc f9f0 	bl	7614 <__aeabi_dsub>
    b234:	4a9a      	ldr	r2, [pc, #616]	; (b4a0 <_dtoa_r+0x3b4>)
    b236:	4b9b      	ldr	r3, [pc, #620]	; (b4a4 <_dtoa_r+0x3b8>)
    b238:	f7fb ff52 	bl	70e0 <__aeabi_dmul>
    b23c:	4a9a      	ldr	r2, [pc, #616]	; (b4a8 <_dtoa_r+0x3bc>)
    b23e:	4b9b      	ldr	r3, [pc, #620]	; (b4ac <_dtoa_r+0x3c0>)
    b240:	f7fa ffe8 	bl	6214 <__aeabi_dadd>
    b244:	1c04      	adds	r4, r0, #0
    b246:	1c30      	adds	r0, r6, #0
    b248:	1c0d      	adds	r5, r1, #0
    b24a:	f7fc fd93 	bl	7d74 <__aeabi_i2d>
    b24e:	4a98      	ldr	r2, [pc, #608]	; (b4b0 <_dtoa_r+0x3c4>)
    b250:	4b98      	ldr	r3, [pc, #608]	; (b4b4 <_dtoa_r+0x3c8>)
    b252:	f7fb ff45 	bl	70e0 <__aeabi_dmul>
    b256:	1c02      	adds	r2, r0, #0
    b258:	1c0b      	adds	r3, r1, #0
    b25a:	1c20      	adds	r0, r4, #0
    b25c:	1c29      	adds	r1, r5, #0
    b25e:	f7fa ffd9 	bl	6214 <__aeabi_dadd>
    b262:	1c04      	adds	r4, r0, #0
    b264:	1c0d      	adds	r5, r1, #0
    b266:	f7fc fd4f 	bl	7d08 <__aeabi_d2iz>
    b26a:	1c29      	adds	r1, r5, #0
    b26c:	9003      	str	r0, [sp, #12]
    b26e:	2200      	movs	r2, #0
    b270:	1c20      	adds	r0, r4, #0
    b272:	2300      	movs	r3, #0
    b274:	f7fa ff5e 	bl	6134 <__aeabi_dcmplt>
    b278:	2800      	cmp	r0, #0
    b27a:	d00d      	beq.n	b298 <_dtoa_r+0x1ac>
    b27c:	9803      	ldr	r0, [sp, #12]
    b27e:	f7fc fd79 	bl	7d74 <__aeabi_i2d>
    b282:	1c02      	adds	r2, r0, #0
    b284:	1c0b      	adds	r3, r1, #0
    b286:	1c20      	adds	r0, r4, #0
    b288:	1c29      	adds	r1, r5, #0
    b28a:	f7fa ff4d 	bl	6128 <__aeabi_dcmpeq>
    b28e:	4243      	negs	r3, r0
    b290:	4143      	adcs	r3, r0
    b292:	9a03      	ldr	r2, [sp, #12]
    b294:	1ad3      	subs	r3, r2, r3
    b296:	9303      	str	r3, [sp, #12]
    b298:	2301      	movs	r3, #1
    b29a:	9313      	str	r3, [sp, #76]	; 0x4c
    b29c:	9b03      	ldr	r3, [sp, #12]
    b29e:	2b16      	cmp	r3, #22
    b2a0:	d811      	bhi.n	b2c6 <_dtoa_r+0x1da>
    b2a2:	4a85      	ldr	r2, [pc, #532]	; (b4b8 <_dtoa_r+0x3cc>)
    b2a4:	00db      	lsls	r3, r3, #3
    b2a6:	18d3      	adds	r3, r2, r3
    b2a8:	6818      	ldr	r0, [r3, #0]
    b2aa:	6859      	ldr	r1, [r3, #4]
    b2ac:	9a06      	ldr	r2, [sp, #24]
    b2ae:	9b07      	ldr	r3, [sp, #28]
    b2b0:	f7fa ff54 	bl	615c <__aeabi_dcmpgt>
    b2b4:	2800      	cmp	r0, #0
    b2b6:	d005      	beq.n	b2c4 <_dtoa_r+0x1d8>
    b2b8:	9b03      	ldr	r3, [sp, #12]
    b2ba:	3b01      	subs	r3, #1
    b2bc:	9303      	str	r3, [sp, #12]
    b2be:	2300      	movs	r3, #0
    b2c0:	9313      	str	r3, [sp, #76]	; 0x4c
    b2c2:	e000      	b.n	b2c6 <_dtoa_r+0x1da>
    b2c4:	9013      	str	r0, [sp, #76]	; 0x4c
    b2c6:	9b18      	ldr	r3, [sp, #96]	; 0x60
    b2c8:	1b9e      	subs	r6, r3, r6
    b2ca:	2300      	movs	r3, #0
    b2cc:	930d      	str	r3, [sp, #52]	; 0x34
    b2ce:	3e01      	subs	r6, #1
    b2d0:	960e      	str	r6, [sp, #56]	; 0x38
    b2d2:	d504      	bpl.n	b2de <_dtoa_r+0x1f2>
    b2d4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b2d6:	425b      	negs	r3, r3
    b2d8:	930d      	str	r3, [sp, #52]	; 0x34
    b2da:	2300      	movs	r3, #0
    b2dc:	930e      	str	r3, [sp, #56]	; 0x38
    b2de:	9b03      	ldr	r3, [sp, #12]
    b2e0:	2b00      	cmp	r3, #0
    b2e2:	db08      	blt.n	b2f6 <_dtoa_r+0x20a>
    b2e4:	9a03      	ldr	r2, [sp, #12]
    b2e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b2e8:	4694      	mov	ip, r2
    b2ea:	4463      	add	r3, ip
    b2ec:	930e      	str	r3, [sp, #56]	; 0x38
    b2ee:	2300      	movs	r3, #0
    b2f0:	9212      	str	r2, [sp, #72]	; 0x48
    b2f2:	930f      	str	r3, [sp, #60]	; 0x3c
    b2f4:	e007      	b.n	b306 <_dtoa_r+0x21a>
    b2f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    b2f8:	9a03      	ldr	r2, [sp, #12]
    b2fa:	1a9b      	subs	r3, r3, r2
    b2fc:	930d      	str	r3, [sp, #52]	; 0x34
    b2fe:	4253      	negs	r3, r2
    b300:	930f      	str	r3, [sp, #60]	; 0x3c
    b302:	2300      	movs	r3, #0
    b304:	9312      	str	r3, [sp, #72]	; 0x48
    b306:	9b20      	ldr	r3, [sp, #128]	; 0x80
    b308:	2501      	movs	r5, #1
    b30a:	2b09      	cmp	r3, #9
    b30c:	d827      	bhi.n	b35e <_dtoa_r+0x272>
    b30e:	2b05      	cmp	r3, #5
    b310:	dd02      	ble.n	b318 <_dtoa_r+0x22c>
    b312:	2500      	movs	r5, #0
    b314:	3b04      	subs	r3, #4
    b316:	9320      	str	r3, [sp, #128]	; 0x80
    b318:	9b20      	ldr	r3, [sp, #128]	; 0x80
    b31a:	1e98      	subs	r0, r3, #2
    b31c:	2803      	cmp	r0, #3
    b31e:	d823      	bhi.n	b368 <_dtoa_r+0x27c>
    b320:	f002 f806 	bl	d330 <__gnu_thumb1_case_uqi>
    b324:	10040e02 	.word	0x10040e02
    b328:	2300      	movs	r3, #0
    b32a:	e000      	b.n	b32e <_dtoa_r+0x242>
    b32c:	2301      	movs	r3, #1
    b32e:	9310      	str	r3, [sp, #64]	; 0x40
    b330:	9b21      	ldr	r3, [sp, #132]	; 0x84
    b332:	2b00      	cmp	r3, #0
    b334:	dc21      	bgt.n	b37a <_dtoa_r+0x28e>
    b336:	2301      	movs	r3, #1
    b338:	930b      	str	r3, [sp, #44]	; 0x2c
    b33a:	9309      	str	r3, [sp, #36]	; 0x24
    b33c:	1c1a      	adds	r2, r3, #0
    b33e:	e01a      	b.n	b376 <_dtoa_r+0x28a>
    b340:	2300      	movs	r3, #0
    b342:	e000      	b.n	b346 <_dtoa_r+0x25a>
    b344:	2301      	movs	r3, #1
    b346:	9a03      	ldr	r2, [sp, #12]
    b348:	9310      	str	r3, [sp, #64]	; 0x40
    b34a:	4694      	mov	ip, r2
    b34c:	9b21      	ldr	r3, [sp, #132]	; 0x84
    b34e:	4463      	add	r3, ip
    b350:	930b      	str	r3, [sp, #44]	; 0x2c
    b352:	3301      	adds	r3, #1
    b354:	9309      	str	r3, [sp, #36]	; 0x24
    b356:	2b00      	cmp	r3, #0
    b358:	dc12      	bgt.n	b380 <_dtoa_r+0x294>
    b35a:	2301      	movs	r3, #1
    b35c:	e010      	b.n	b380 <_dtoa_r+0x294>
    b35e:	2300      	movs	r3, #0
    b360:	9510      	str	r5, [sp, #64]	; 0x40
    b362:	9320      	str	r3, [sp, #128]	; 0x80
    b364:	3b01      	subs	r3, #1
    b366:	e002      	b.n	b36e <_dtoa_r+0x282>
    b368:	2301      	movs	r3, #1
    b36a:	9310      	str	r3, [sp, #64]	; 0x40
    b36c:	3b02      	subs	r3, #2
    b36e:	2200      	movs	r2, #0
    b370:	930b      	str	r3, [sp, #44]	; 0x2c
    b372:	9309      	str	r3, [sp, #36]	; 0x24
    b374:	3313      	adds	r3, #19
    b376:	9221      	str	r2, [sp, #132]	; 0x84
    b378:	e002      	b.n	b380 <_dtoa_r+0x294>
    b37a:	9b21      	ldr	r3, [sp, #132]	; 0x84
    b37c:	930b      	str	r3, [sp, #44]	; 0x2c
    b37e:	9309      	str	r3, [sp, #36]	; 0x24
    b380:	9a08      	ldr	r2, [sp, #32]
    b382:	6a54      	ldr	r4, [r2, #36]	; 0x24
    b384:	2200      	movs	r2, #0
    b386:	6062      	str	r2, [r4, #4]
    b388:	3204      	adds	r2, #4
    b38a:	1c11      	adds	r1, r2, #0
    b38c:	3114      	adds	r1, #20
    b38e:	4299      	cmp	r1, r3
    b390:	d804      	bhi.n	b39c <_dtoa_r+0x2b0>
    b392:	6861      	ldr	r1, [r4, #4]
    b394:	0052      	lsls	r2, r2, #1
    b396:	3101      	adds	r1, #1
    b398:	6061      	str	r1, [r4, #4]
    b39a:	e7f6      	b.n	b38a <_dtoa_r+0x29e>
    b39c:	9808      	ldr	r0, [sp, #32]
    b39e:	6861      	ldr	r1, [r4, #4]
    b3a0:	f001 f844 	bl	c42c <_Balloc>
    b3a4:	9b08      	ldr	r3, [sp, #32]
    b3a6:	6020      	str	r0, [r4, #0]
    b3a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    b3aa:	681b      	ldr	r3, [r3, #0]
    b3ac:	930c      	str	r3, [sp, #48]	; 0x30
    b3ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b3b0:	2b0e      	cmp	r3, #14
    b3b2:	d900      	bls.n	b3b6 <_dtoa_r+0x2ca>
    b3b4:	e188      	b.n	b6c8 <_dtoa_r+0x5dc>
    b3b6:	2d00      	cmp	r5, #0
    b3b8:	d100      	bne.n	b3bc <_dtoa_r+0x2d0>
    b3ba:	e185      	b.n	b6c8 <_dtoa_r+0x5dc>
    b3bc:	9b06      	ldr	r3, [sp, #24]
    b3be:	9c07      	ldr	r4, [sp, #28]
    b3c0:	9314      	str	r3, [sp, #80]	; 0x50
    b3c2:	9415      	str	r4, [sp, #84]	; 0x54
    b3c4:	9b03      	ldr	r3, [sp, #12]
    b3c6:	2b00      	cmp	r3, #0
    b3c8:	dd30      	ble.n	b42c <_dtoa_r+0x340>
    b3ca:	220f      	movs	r2, #15
    b3cc:	493a      	ldr	r1, [pc, #232]	; (b4b8 <_dtoa_r+0x3cc>)
    b3ce:	4013      	ands	r3, r2
    b3d0:	00db      	lsls	r3, r3, #3
    b3d2:	18cb      	adds	r3, r1, r3
    b3d4:	685c      	ldr	r4, [r3, #4]
    b3d6:	681b      	ldr	r3, [r3, #0]
    b3d8:	9304      	str	r3, [sp, #16]
    b3da:	9405      	str	r4, [sp, #20]
    b3dc:	9b03      	ldr	r3, [sp, #12]
    b3de:	2702      	movs	r7, #2
    b3e0:	111d      	asrs	r5, r3, #4
    b3e2:	06eb      	lsls	r3, r5, #27
    b3e4:	d50a      	bpl.n	b3fc <_dtoa_r+0x310>
    b3e6:	9814      	ldr	r0, [sp, #80]	; 0x50
    b3e8:	9915      	ldr	r1, [sp, #84]	; 0x54
    b3ea:	4b34      	ldr	r3, [pc, #208]	; (b4bc <_dtoa_r+0x3d0>)
    b3ec:	4015      	ands	r5, r2
    b3ee:	6a1a      	ldr	r2, [r3, #32]
    b3f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    b3f2:	f7fb fa37 	bl	6864 <__aeabi_ddiv>
    b3f6:	9006      	str	r0, [sp, #24]
    b3f8:	9107      	str	r1, [sp, #28]
    b3fa:	3701      	adds	r7, #1
    b3fc:	4c2f      	ldr	r4, [pc, #188]	; (b4bc <_dtoa_r+0x3d0>)
    b3fe:	2d00      	cmp	r5, #0
    b400:	d00d      	beq.n	b41e <_dtoa_r+0x332>
    b402:	07eb      	lsls	r3, r5, #31
    b404:	d508      	bpl.n	b418 <_dtoa_r+0x32c>
    b406:	9804      	ldr	r0, [sp, #16]
    b408:	9905      	ldr	r1, [sp, #20]
    b40a:	6822      	ldr	r2, [r4, #0]
    b40c:	6863      	ldr	r3, [r4, #4]
    b40e:	f7fb fe67 	bl	70e0 <__aeabi_dmul>
    b412:	9004      	str	r0, [sp, #16]
    b414:	9105      	str	r1, [sp, #20]
    b416:	3701      	adds	r7, #1
    b418:	106d      	asrs	r5, r5, #1
    b41a:	3408      	adds	r4, #8
    b41c:	e7ef      	b.n	b3fe <_dtoa_r+0x312>
    b41e:	9806      	ldr	r0, [sp, #24]
    b420:	9907      	ldr	r1, [sp, #28]
    b422:	9a04      	ldr	r2, [sp, #16]
    b424:	9b05      	ldr	r3, [sp, #20]
    b426:	f7fb fa1d 	bl	6864 <__aeabi_ddiv>
    b42a:	e049      	b.n	b4c0 <_dtoa_r+0x3d4>
    b42c:	9b03      	ldr	r3, [sp, #12]
    b42e:	2702      	movs	r7, #2
    b430:	425d      	negs	r5, r3
    b432:	2d00      	cmp	r5, #0
    b434:	d046      	beq.n	b4c4 <_dtoa_r+0x3d8>
    b436:	9814      	ldr	r0, [sp, #80]	; 0x50
    b438:	9915      	ldr	r1, [sp, #84]	; 0x54
    b43a:	230f      	movs	r3, #15
    b43c:	4a1e      	ldr	r2, [pc, #120]	; (b4b8 <_dtoa_r+0x3cc>)
    b43e:	402b      	ands	r3, r5
    b440:	00db      	lsls	r3, r3, #3
    b442:	18d3      	adds	r3, r2, r3
    b444:	681a      	ldr	r2, [r3, #0]
    b446:	685b      	ldr	r3, [r3, #4]
    b448:	f7fb fe4a 	bl	70e0 <__aeabi_dmul>
    b44c:	4c1b      	ldr	r4, [pc, #108]	; (b4bc <_dtoa_r+0x3d0>)
    b44e:	112d      	asrs	r5, r5, #4
    b450:	2d00      	cmp	r5, #0
    b452:	d035      	beq.n	b4c0 <_dtoa_r+0x3d4>
    b454:	07eb      	lsls	r3, r5, #31
    b456:	d504      	bpl.n	b462 <_dtoa_r+0x376>
    b458:	6822      	ldr	r2, [r4, #0]
    b45a:	6863      	ldr	r3, [r4, #4]
    b45c:	3701      	adds	r7, #1
    b45e:	f7fb fe3f 	bl	70e0 <__aeabi_dmul>
    b462:	106d      	asrs	r5, r5, #1
    b464:	3408      	adds	r4, #8
    b466:	e7f3      	b.n	b450 <_dtoa_r+0x364>
    b468:	7ff00000 	.word	0x7ff00000
    b46c:	0000270f 	.word	0x0000270f
    b470:	0000e556 	.word	0x0000e556
    b474:	0000e54d 	.word	0x0000e54d
    b478:	0000e3f2 	.word	0x0000e3f2
    b47c:	0000e3f3 	.word	0x0000e3f3
    b480:	3ff00000 	.word	0x3ff00000
    b484:	fffffc01 	.word	0xfffffc01
    b488:	fffffbef 	.word	0xfffffbef
    b48c:	00000412 	.word	0x00000412
    b490:	fffffc0e 	.word	0xfffffc0e
    b494:	fffffbee 	.word	0xfffffbee
    b498:	fe100000 	.word	0xfe100000
    b49c:	3ff80000 	.word	0x3ff80000
    b4a0:	636f4361 	.word	0x636f4361
    b4a4:	3fd287a7 	.word	0x3fd287a7
    b4a8:	8b60c8b3 	.word	0x8b60c8b3
    b4ac:	3fc68a28 	.word	0x3fc68a28
    b4b0:	509f79fb 	.word	0x509f79fb
    b4b4:	3fd34413 	.word	0x3fd34413
    b4b8:	0000e568 	.word	0x0000e568
    b4bc:	0000e630 	.word	0x0000e630
    b4c0:	9006      	str	r0, [sp, #24]
    b4c2:	9107      	str	r1, [sp, #28]
    b4c4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    b4c6:	2b00      	cmp	r3, #0
    b4c8:	d01e      	beq.n	b508 <_dtoa_r+0x41c>
    b4ca:	9c06      	ldr	r4, [sp, #24]
    b4cc:	9d07      	ldr	r5, [sp, #28]
    b4ce:	2200      	movs	r2, #0
    b4d0:	1c20      	adds	r0, r4, #0
    b4d2:	1c29      	adds	r1, r5, #0
    b4d4:	4bce      	ldr	r3, [pc, #824]	; (b810 <_dtoa_r+0x724>)
    b4d6:	f7fa fe2d 	bl	6134 <__aeabi_dcmplt>
    b4da:	2800      	cmp	r0, #0
    b4dc:	d014      	beq.n	b508 <_dtoa_r+0x41c>
    b4de:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b4e0:	2b00      	cmp	r3, #0
    b4e2:	d011      	beq.n	b508 <_dtoa_r+0x41c>
    b4e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b4e6:	2b00      	cmp	r3, #0
    b4e8:	dc00      	bgt.n	b4ec <_dtoa_r+0x400>
    b4ea:	e0e9      	b.n	b6c0 <_dtoa_r+0x5d4>
    b4ec:	9b03      	ldr	r3, [sp, #12]
    b4ee:	1c29      	adds	r1, r5, #0
    b4f0:	3b01      	subs	r3, #1
    b4f2:	9311      	str	r3, [sp, #68]	; 0x44
    b4f4:	1c20      	adds	r0, r4, #0
    b4f6:	2200      	movs	r2, #0
    b4f8:	4bc6      	ldr	r3, [pc, #792]	; (b814 <_dtoa_r+0x728>)
    b4fa:	f7fb fdf1 	bl	70e0 <__aeabi_dmul>
    b4fe:	3701      	adds	r7, #1
    b500:	9006      	str	r0, [sp, #24]
    b502:	9107      	str	r1, [sp, #28]
    b504:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    b506:	e002      	b.n	b50e <_dtoa_r+0x422>
    b508:	9b03      	ldr	r3, [sp, #12]
    b50a:	9d09      	ldr	r5, [sp, #36]	; 0x24
    b50c:	9311      	str	r3, [sp, #68]	; 0x44
    b50e:	1c38      	adds	r0, r7, #0
    b510:	9b06      	ldr	r3, [sp, #24]
    b512:	9c07      	ldr	r4, [sp, #28]
    b514:	9304      	str	r3, [sp, #16]
    b516:	9405      	str	r4, [sp, #20]
    b518:	f7fc fc2c 	bl	7d74 <__aeabi_i2d>
    b51c:	9a04      	ldr	r2, [sp, #16]
    b51e:	9b05      	ldr	r3, [sp, #20]
    b520:	f7fb fdde 	bl	70e0 <__aeabi_dmul>
    b524:	2200      	movs	r2, #0
    b526:	4bbc      	ldr	r3, [pc, #752]	; (b818 <_dtoa_r+0x72c>)
    b528:	f7fa fe74 	bl	6214 <__aeabi_dadd>
    b52c:	9006      	str	r0, [sp, #24]
    b52e:	9107      	str	r1, [sp, #28]
    b530:	9e06      	ldr	r6, [sp, #24]
    b532:	9f07      	ldr	r7, [sp, #28]
    b534:	9b07      	ldr	r3, [sp, #28]
    b536:	4ab9      	ldr	r2, [pc, #740]	; (b81c <_dtoa_r+0x730>)
    b538:	189c      	adds	r4, r3, r2
    b53a:	2d00      	cmp	r5, #0
    b53c:	d11c      	bne.n	b578 <_dtoa_r+0x48c>
    b53e:	9804      	ldr	r0, [sp, #16]
    b540:	9905      	ldr	r1, [sp, #20]
    b542:	2200      	movs	r2, #0
    b544:	4bb6      	ldr	r3, [pc, #728]	; (b820 <_dtoa_r+0x734>)
    b546:	f7fc f865 	bl	7614 <__aeabi_dsub>
    b54a:	1c32      	adds	r2, r6, #0
    b54c:	1c23      	adds	r3, r4, #0
    b54e:	9004      	str	r0, [sp, #16]
    b550:	9105      	str	r1, [sp, #20]
    b552:	f7fa fe03 	bl	615c <__aeabi_dcmpgt>
    b556:	2800      	cmp	r0, #0
    b558:	d000      	beq.n	b55c <_dtoa_r+0x470>
    b55a:	e263      	b.n	ba24 <_dtoa_r+0x938>
    b55c:	9804      	ldr	r0, [sp, #16]
    b55e:	9905      	ldr	r1, [sp, #20]
    b560:	1c32      	adds	r2, r6, #0
    b562:	4eb0      	ldr	r6, [pc, #704]	; (b824 <_dtoa_r+0x738>)
    b564:	9c07      	ldr	r4, [sp, #28]
    b566:	46b4      	mov	ip, r6
    b568:	4464      	add	r4, ip
    b56a:	1c23      	adds	r3, r4, #0
    b56c:	f7fa fde2 	bl	6134 <__aeabi_dcmplt>
    b570:	2800      	cmp	r0, #0
    b572:	d000      	beq.n	b576 <_dtoa_r+0x48a>
    b574:	e24c      	b.n	ba10 <_dtoa_r+0x924>
    b576:	e0a3      	b.n	b6c0 <_dtoa_r+0x5d4>
    b578:	4aab      	ldr	r2, [pc, #684]	; (b828 <_dtoa_r+0x73c>)
    b57a:	1e6b      	subs	r3, r5, #1
    b57c:	9910      	ldr	r1, [sp, #64]	; 0x40
    b57e:	00db      	lsls	r3, r3, #3
    b580:	18d3      	adds	r3, r2, r3
    b582:	2900      	cmp	r1, #0
    b584:	d04e      	beq.n	b624 <_dtoa_r+0x538>
    b586:	681a      	ldr	r2, [r3, #0]
    b588:	685b      	ldr	r3, [r3, #4]
    b58a:	2000      	movs	r0, #0
    b58c:	49a7      	ldr	r1, [pc, #668]	; (b82c <_dtoa_r+0x740>)
    b58e:	f7fb f969 	bl	6864 <__aeabi_ddiv>
    b592:	1c32      	adds	r2, r6, #0
    b594:	1c23      	adds	r3, r4, #0
    b596:	f7fc f83d 	bl	7614 <__aeabi_dsub>
    b59a:	9e04      	ldr	r6, [sp, #16]
    b59c:	9f05      	ldr	r7, [sp, #20]
    b59e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b5a0:	9006      	str	r0, [sp, #24]
    b5a2:	9107      	str	r1, [sp, #28]
    b5a4:	9304      	str	r3, [sp, #16]
    b5a6:	1c39      	adds	r1, r7, #0
    b5a8:	1c30      	adds	r0, r6, #0
    b5aa:	f7fc fbad 	bl	7d08 <__aeabi_d2iz>
    b5ae:	1c04      	adds	r4, r0, #0
    b5b0:	f7fc fbe0 	bl	7d74 <__aeabi_i2d>
    b5b4:	1c02      	adds	r2, r0, #0
    b5b6:	1c0b      	adds	r3, r1, #0
    b5b8:	1c30      	adds	r0, r6, #0
    b5ba:	1c39      	adds	r1, r7, #0
    b5bc:	f7fc f82a 	bl	7614 <__aeabi_dsub>
    b5c0:	9b04      	ldr	r3, [sp, #16]
    b5c2:	3430      	adds	r4, #48	; 0x30
    b5c4:	3301      	adds	r3, #1
    b5c6:	9304      	str	r3, [sp, #16]
    b5c8:	3b01      	subs	r3, #1
    b5ca:	701c      	strb	r4, [r3, #0]
    b5cc:	9a06      	ldr	r2, [sp, #24]
    b5ce:	9b07      	ldr	r3, [sp, #28]
    b5d0:	1c06      	adds	r6, r0, #0
    b5d2:	1c0f      	adds	r7, r1, #0
    b5d4:	f7fa fdae 	bl	6134 <__aeabi_dcmplt>
    b5d8:	2800      	cmp	r0, #0
    b5da:	d000      	beq.n	b5de <_dtoa_r+0x4f2>
    b5dc:	e361      	b.n	bca2 <_dtoa_r+0xbb6>
    b5de:	1c32      	adds	r2, r6, #0
    b5e0:	1c3b      	adds	r3, r7, #0
    b5e2:	2000      	movs	r0, #0
    b5e4:	498a      	ldr	r1, [pc, #552]	; (b810 <_dtoa_r+0x724>)
    b5e6:	f7fc f815 	bl	7614 <__aeabi_dsub>
    b5ea:	9a06      	ldr	r2, [sp, #24]
    b5ec:	9b07      	ldr	r3, [sp, #28]
    b5ee:	f7fa fda1 	bl	6134 <__aeabi_dcmplt>
    b5f2:	2800      	cmp	r0, #0
    b5f4:	d000      	beq.n	b5f8 <_dtoa_r+0x50c>
    b5f6:	e0cd      	b.n	b794 <_dtoa_r+0x6a8>
    b5f8:	9b04      	ldr	r3, [sp, #16]
    b5fa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    b5fc:	1a9b      	subs	r3, r3, r2
    b5fe:	42ab      	cmp	r3, r5
    b600:	da5e      	bge.n	b6c0 <_dtoa_r+0x5d4>
    b602:	9806      	ldr	r0, [sp, #24]
    b604:	9907      	ldr	r1, [sp, #28]
    b606:	2200      	movs	r2, #0
    b608:	4b82      	ldr	r3, [pc, #520]	; (b814 <_dtoa_r+0x728>)
    b60a:	f7fb fd69 	bl	70e0 <__aeabi_dmul>
    b60e:	2200      	movs	r2, #0
    b610:	9006      	str	r0, [sp, #24]
    b612:	9107      	str	r1, [sp, #28]
    b614:	4b7f      	ldr	r3, [pc, #508]	; (b814 <_dtoa_r+0x728>)
    b616:	1c30      	adds	r0, r6, #0
    b618:	1c39      	adds	r1, r7, #0
    b61a:	f7fb fd61 	bl	70e0 <__aeabi_dmul>
    b61e:	1c06      	adds	r6, r0, #0
    b620:	1c0f      	adds	r7, r1, #0
    b622:	e7c0      	b.n	b5a6 <_dtoa_r+0x4ba>
    b624:	6818      	ldr	r0, [r3, #0]
    b626:	6859      	ldr	r1, [r3, #4]
    b628:	1c32      	adds	r2, r6, #0
    b62a:	1c23      	adds	r3, r4, #0
    b62c:	f7fb fd58 	bl	70e0 <__aeabi_dmul>
    b630:	9e04      	ldr	r6, [sp, #16]
    b632:	9f05      	ldr	r7, [sp, #20]
    b634:	9c0c      	ldr	r4, [sp, #48]	; 0x30
    b636:	9006      	str	r0, [sp, #24]
    b638:	9107      	str	r1, [sp, #28]
    b63a:	1963      	adds	r3, r4, r5
    b63c:	9304      	str	r3, [sp, #16]
    b63e:	1c39      	adds	r1, r7, #0
    b640:	1c30      	adds	r0, r6, #0
    b642:	f7fc fb61 	bl	7d08 <__aeabi_d2iz>
    b646:	1c05      	adds	r5, r0, #0
    b648:	f7fc fb94 	bl	7d74 <__aeabi_i2d>
    b64c:	1c0b      	adds	r3, r1, #0
    b64e:	1c02      	adds	r2, r0, #0
    b650:	1c39      	adds	r1, r7, #0
    b652:	1c30      	adds	r0, r6, #0
    b654:	f7fb ffde 	bl	7614 <__aeabi_dsub>
    b658:	3530      	adds	r5, #48	; 0x30
    b65a:	9b04      	ldr	r3, [sp, #16]
    b65c:	7025      	strb	r5, [r4, #0]
    b65e:	3401      	adds	r4, #1
    b660:	1c06      	adds	r6, r0, #0
    b662:	1c0f      	adds	r7, r1, #0
    b664:	42a3      	cmp	r3, r4
    b666:	d124      	bne.n	b6b2 <_dtoa_r+0x5c6>
    b668:	2200      	movs	r2, #0
    b66a:	9806      	ldr	r0, [sp, #24]
    b66c:	9907      	ldr	r1, [sp, #28]
    b66e:	4b6f      	ldr	r3, [pc, #444]	; (b82c <_dtoa_r+0x740>)
    b670:	f7fa fdd0 	bl	6214 <__aeabi_dadd>
    b674:	1c02      	adds	r2, r0, #0
    b676:	1c0b      	adds	r3, r1, #0
    b678:	1c30      	adds	r0, r6, #0
    b67a:	1c39      	adds	r1, r7, #0
    b67c:	f7fa fd6e 	bl	615c <__aeabi_dcmpgt>
    b680:	2800      	cmp	r0, #0
    b682:	d000      	beq.n	b686 <_dtoa_r+0x59a>
    b684:	e086      	b.n	b794 <_dtoa_r+0x6a8>
    b686:	9a06      	ldr	r2, [sp, #24]
    b688:	9b07      	ldr	r3, [sp, #28]
    b68a:	2000      	movs	r0, #0
    b68c:	4967      	ldr	r1, [pc, #412]	; (b82c <_dtoa_r+0x740>)
    b68e:	f7fb ffc1 	bl	7614 <__aeabi_dsub>
    b692:	1c02      	adds	r2, r0, #0
    b694:	1c0b      	adds	r3, r1, #0
    b696:	1c30      	adds	r0, r6, #0
    b698:	1c39      	adds	r1, r7, #0
    b69a:	f7fa fd4b 	bl	6134 <__aeabi_dcmplt>
    b69e:	2800      	cmp	r0, #0
    b6a0:	d00e      	beq.n	b6c0 <_dtoa_r+0x5d4>
    b6a2:	9b04      	ldr	r3, [sp, #16]
    b6a4:	3b01      	subs	r3, #1
    b6a6:	781a      	ldrb	r2, [r3, #0]
    b6a8:	2a30      	cmp	r2, #48	; 0x30
    b6aa:	d000      	beq.n	b6ae <_dtoa_r+0x5c2>
    b6ac:	e2f9      	b.n	bca2 <_dtoa_r+0xbb6>
    b6ae:	9304      	str	r3, [sp, #16]
    b6b0:	e7f7      	b.n	b6a2 <_dtoa_r+0x5b6>
    b6b2:	2200      	movs	r2, #0
    b6b4:	4b57      	ldr	r3, [pc, #348]	; (b814 <_dtoa_r+0x728>)
    b6b6:	f7fb fd13 	bl	70e0 <__aeabi_dmul>
    b6ba:	1c06      	adds	r6, r0, #0
    b6bc:	1c0f      	adds	r7, r1, #0
    b6be:	e7be      	b.n	b63e <_dtoa_r+0x552>
    b6c0:	9b14      	ldr	r3, [sp, #80]	; 0x50
    b6c2:	9c15      	ldr	r4, [sp, #84]	; 0x54
    b6c4:	9306      	str	r3, [sp, #24]
    b6c6:	9407      	str	r4, [sp, #28]
    b6c8:	9b19      	ldr	r3, [sp, #100]	; 0x64
    b6ca:	2b00      	cmp	r3, #0
    b6cc:	da00      	bge.n	b6d0 <_dtoa_r+0x5e4>
    b6ce:	e086      	b.n	b7de <_dtoa_r+0x6f2>
    b6d0:	9a03      	ldr	r2, [sp, #12]
    b6d2:	2a0e      	cmp	r2, #14
    b6d4:	dd00      	ble.n	b6d8 <_dtoa_r+0x5ec>
    b6d6:	e082      	b.n	b7de <_dtoa_r+0x6f2>
    b6d8:	00d3      	lsls	r3, r2, #3
    b6da:	4a53      	ldr	r2, [pc, #332]	; (b828 <_dtoa_r+0x73c>)
    b6dc:	18d3      	adds	r3, r2, r3
    b6de:	681e      	ldr	r6, [r3, #0]
    b6e0:	685f      	ldr	r7, [r3, #4]
    b6e2:	9b21      	ldr	r3, [sp, #132]	; 0x84
    b6e4:	2b00      	cmp	r3, #0
    b6e6:	da14      	bge.n	b712 <_dtoa_r+0x626>
    b6e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b6ea:	2b00      	cmp	r3, #0
    b6ec:	dc11      	bgt.n	b712 <_dtoa_r+0x626>
    b6ee:	d000      	beq.n	b6f2 <_dtoa_r+0x606>
    b6f0:	e190      	b.n	ba14 <_dtoa_r+0x928>
    b6f2:	1c30      	adds	r0, r6, #0
    b6f4:	1c39      	adds	r1, r7, #0
    b6f6:	2200      	movs	r2, #0
    b6f8:	4b49      	ldr	r3, [pc, #292]	; (b820 <_dtoa_r+0x734>)
    b6fa:	f7fb fcf1 	bl	70e0 <__aeabi_dmul>
    b6fe:	9a06      	ldr	r2, [sp, #24]
    b700:	9b07      	ldr	r3, [sp, #28]
    b702:	f7fa fd35 	bl	6170 <__aeabi_dcmpge>
    b706:	9f09      	ldr	r7, [sp, #36]	; 0x24
    b708:	1c3e      	adds	r6, r7, #0
    b70a:	2800      	cmp	r0, #0
    b70c:	d000      	beq.n	b710 <_dtoa_r+0x624>
    b70e:	e183      	b.n	ba18 <_dtoa_r+0x92c>
    b710:	e18c      	b.n	ba2c <_dtoa_r+0x940>
    b712:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    b714:	9c06      	ldr	r4, [sp, #24]
    b716:	9d07      	ldr	r5, [sp, #28]
    b718:	9304      	str	r3, [sp, #16]
    b71a:	1c32      	adds	r2, r6, #0
    b71c:	1c3b      	adds	r3, r7, #0
    b71e:	1c20      	adds	r0, r4, #0
    b720:	1c29      	adds	r1, r5, #0
    b722:	f7fb f89f 	bl	6864 <__aeabi_ddiv>
    b726:	f7fc faef 	bl	7d08 <__aeabi_d2iz>
    b72a:	9006      	str	r0, [sp, #24]
    b72c:	f7fc fb22 	bl	7d74 <__aeabi_i2d>
    b730:	1c32      	adds	r2, r6, #0
    b732:	1c3b      	adds	r3, r7, #0
    b734:	f7fb fcd4 	bl	70e0 <__aeabi_dmul>
    b738:	1c02      	adds	r2, r0, #0
    b73a:	1c0b      	adds	r3, r1, #0
    b73c:	1c20      	adds	r0, r4, #0
    b73e:	1c29      	adds	r1, r5, #0
    b740:	f7fb ff68 	bl	7614 <__aeabi_dsub>
    b744:	1c0b      	adds	r3, r1, #0
    b746:	9904      	ldr	r1, [sp, #16]
    b748:	1c02      	adds	r2, r0, #0
    b74a:	9806      	ldr	r0, [sp, #24]
    b74c:	3101      	adds	r1, #1
    b74e:	9104      	str	r1, [sp, #16]
    b750:	3030      	adds	r0, #48	; 0x30
    b752:	3901      	subs	r1, #1
    b754:	7008      	strb	r0, [r1, #0]
    b756:	980c      	ldr	r0, [sp, #48]	; 0x30
    b758:	9904      	ldr	r1, [sp, #16]
    b75a:	1a09      	subs	r1, r1, r0
    b75c:	9809      	ldr	r0, [sp, #36]	; 0x24
    b75e:	4281      	cmp	r1, r0
    b760:	d12e      	bne.n	b7c0 <_dtoa_r+0x6d4>
    b762:	1c10      	adds	r0, r2, #0
    b764:	1c19      	adds	r1, r3, #0
    b766:	f7fa fd55 	bl	6214 <__aeabi_dadd>
    b76a:	1c32      	adds	r2, r6, #0
    b76c:	1c3b      	adds	r3, r7, #0
    b76e:	1c04      	adds	r4, r0, #0
    b770:	1c0d      	adds	r5, r1, #0
    b772:	f7fa fcf3 	bl	615c <__aeabi_dcmpgt>
    b776:	2800      	cmp	r0, #0
    b778:	d110      	bne.n	b79c <_dtoa_r+0x6b0>
    b77a:	1c20      	adds	r0, r4, #0
    b77c:	1c29      	adds	r1, r5, #0
    b77e:	1c32      	adds	r2, r6, #0
    b780:	1c3b      	adds	r3, r7, #0
    b782:	f7fa fcd1 	bl	6128 <__aeabi_dcmpeq>
    b786:	2800      	cmp	r0, #0
    b788:	d100      	bne.n	b78c <_dtoa_r+0x6a0>
    b78a:	e28c      	b.n	bca6 <_dtoa_r+0xbba>
    b78c:	9b06      	ldr	r3, [sp, #24]
    b78e:	07db      	lsls	r3, r3, #31
    b790:	d404      	bmi.n	b79c <_dtoa_r+0x6b0>
    b792:	e288      	b.n	bca6 <_dtoa_r+0xbba>
    b794:	9b11      	ldr	r3, [sp, #68]	; 0x44
    b796:	9303      	str	r3, [sp, #12]
    b798:	e000      	b.n	b79c <_dtoa_r+0x6b0>
    b79a:	9304      	str	r3, [sp, #16]
    b79c:	9b04      	ldr	r3, [sp, #16]
    b79e:	3b01      	subs	r3, #1
    b7a0:	781a      	ldrb	r2, [r3, #0]
    b7a2:	2a39      	cmp	r2, #57	; 0x39
    b7a4:	d108      	bne.n	b7b8 <_dtoa_r+0x6cc>
    b7a6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    b7a8:	4293      	cmp	r3, r2
    b7aa:	d1f6      	bne.n	b79a <_dtoa_r+0x6ae>
    b7ac:	9b03      	ldr	r3, [sp, #12]
    b7ae:	3301      	adds	r3, #1
    b7b0:	9303      	str	r3, [sp, #12]
    b7b2:	2330      	movs	r3, #48	; 0x30
    b7b4:	7013      	strb	r3, [r2, #0]
    b7b6:	1c13      	adds	r3, r2, #0
    b7b8:	781a      	ldrb	r2, [r3, #0]
    b7ba:	3201      	adds	r2, #1
    b7bc:	701a      	strb	r2, [r3, #0]
    b7be:	e272      	b.n	bca6 <_dtoa_r+0xbba>
    b7c0:	1c10      	adds	r0, r2, #0
    b7c2:	1c19      	adds	r1, r3, #0
    b7c4:	2200      	movs	r2, #0
    b7c6:	4b13      	ldr	r3, [pc, #76]	; (b814 <_dtoa_r+0x728>)
    b7c8:	f7fb fc8a 	bl	70e0 <__aeabi_dmul>
    b7cc:	2200      	movs	r2, #0
    b7ce:	2300      	movs	r3, #0
    b7d0:	1c04      	adds	r4, r0, #0
    b7d2:	1c0d      	adds	r5, r1, #0
    b7d4:	f7fa fca8 	bl	6128 <__aeabi_dcmpeq>
    b7d8:	2800      	cmp	r0, #0
    b7da:	d09e      	beq.n	b71a <_dtoa_r+0x62e>
    b7dc:	e263      	b.n	bca6 <_dtoa_r+0xbba>
    b7de:	9a10      	ldr	r2, [sp, #64]	; 0x40
    b7e0:	2a00      	cmp	r2, #0
    b7e2:	d044      	beq.n	b86e <_dtoa_r+0x782>
    b7e4:	9a20      	ldr	r2, [sp, #128]	; 0x80
    b7e6:	2a01      	cmp	r2, #1
    b7e8:	dc0b      	bgt.n	b802 <_dtoa_r+0x716>
    b7ea:	9a16      	ldr	r2, [sp, #88]	; 0x58
    b7ec:	2a00      	cmp	r2, #0
    b7ee:	d002      	beq.n	b7f6 <_dtoa_r+0x70a>
    b7f0:	4a0f      	ldr	r2, [pc, #60]	; (b830 <_dtoa_r+0x744>)
    b7f2:	189b      	adds	r3, r3, r2
    b7f4:	e002      	b.n	b7fc <_dtoa_r+0x710>
    b7f6:	2336      	movs	r3, #54	; 0x36
    b7f8:	9a18      	ldr	r2, [sp, #96]	; 0x60
    b7fa:	1a9b      	subs	r3, r3, r2
    b7fc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
    b7fe:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    b800:	e029      	b.n	b856 <_dtoa_r+0x76a>
    b802:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b804:	1e5d      	subs	r5, r3, #1
    b806:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    b808:	42ab      	cmp	r3, r5
    b80a:	db13      	blt.n	b834 <_dtoa_r+0x748>
    b80c:	1b5d      	subs	r5, r3, r5
    b80e:	e018      	b.n	b842 <_dtoa_r+0x756>
    b810:	3ff00000 	.word	0x3ff00000
    b814:	40240000 	.word	0x40240000
    b818:	401c0000 	.word	0x401c0000
    b81c:	fcc00000 	.word	0xfcc00000
    b820:	40140000 	.word	0x40140000
    b824:	7cc00000 	.word	0x7cc00000
    b828:	0000e568 	.word	0x0000e568
    b82c:	3fe00000 	.word	0x3fe00000
    b830:	00000433 	.word	0x00000433
    b834:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    b836:	950f      	str	r5, [sp, #60]	; 0x3c
    b838:	1aea      	subs	r2, r5, r3
    b83a:	2500      	movs	r5, #0
    b83c:	9b12      	ldr	r3, [sp, #72]	; 0x48
    b83e:	189b      	adds	r3, r3, r2
    b840:	9312      	str	r3, [sp, #72]	; 0x48
    b842:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b844:	2b00      	cmp	r3, #0
    b846:	da04      	bge.n	b852 <_dtoa_r+0x766>
    b848:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    b84a:	9a09      	ldr	r2, [sp, #36]	; 0x24
    b84c:	1a9c      	subs	r4, r3, r2
    b84e:	2300      	movs	r3, #0
    b850:	e001      	b.n	b856 <_dtoa_r+0x76a>
    b852:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    b854:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b856:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    b858:	9808      	ldr	r0, [sp, #32]
    b85a:	18d2      	adds	r2, r2, r3
    b85c:	920d      	str	r2, [sp, #52]	; 0x34
    b85e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    b860:	2101      	movs	r1, #1
    b862:	18d3      	adds	r3, r2, r3
    b864:	930e      	str	r3, [sp, #56]	; 0x38
    b866:	f000 fef8 	bl	c65a <__i2b>
    b86a:	1c06      	adds	r6, r0, #0
    b86c:	e002      	b.n	b874 <_dtoa_r+0x788>
    b86e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
    b870:	9c0d      	ldr	r4, [sp, #52]	; 0x34
    b872:	9e10      	ldr	r6, [sp, #64]	; 0x40
    b874:	2c00      	cmp	r4, #0
    b876:	d00c      	beq.n	b892 <_dtoa_r+0x7a6>
    b878:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b87a:	2b00      	cmp	r3, #0
    b87c:	dd09      	ble.n	b892 <_dtoa_r+0x7a6>
    b87e:	42a3      	cmp	r3, r4
    b880:	dd00      	ble.n	b884 <_dtoa_r+0x798>
    b882:	1c23      	adds	r3, r4, #0
    b884:	9a0d      	ldr	r2, [sp, #52]	; 0x34
    b886:	1ae4      	subs	r4, r4, r3
    b888:	1ad2      	subs	r2, r2, r3
    b88a:	920d      	str	r2, [sp, #52]	; 0x34
    b88c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    b88e:	1ad3      	subs	r3, r2, r3
    b890:	930e      	str	r3, [sp, #56]	; 0x38
    b892:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    b894:	2b00      	cmp	r3, #0
    b896:	dd21      	ble.n	b8dc <_dtoa_r+0x7f0>
    b898:	9b10      	ldr	r3, [sp, #64]	; 0x40
    b89a:	2b00      	cmp	r3, #0
    b89c:	d018      	beq.n	b8d0 <_dtoa_r+0x7e4>
    b89e:	2d00      	cmp	r5, #0
    b8a0:	dd10      	ble.n	b8c4 <_dtoa_r+0x7d8>
    b8a2:	1c31      	adds	r1, r6, #0
    b8a4:	1c2a      	adds	r2, r5, #0
    b8a6:	9808      	ldr	r0, [sp, #32]
    b8a8:	f000 ff6e 	bl	c788 <__pow5mult>
    b8ac:	1c06      	adds	r6, r0, #0
    b8ae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    b8b0:	1c31      	adds	r1, r6, #0
    b8b2:	9808      	ldr	r0, [sp, #32]
    b8b4:	f000 feda 	bl	c66c <__multiply>
    b8b8:	1c07      	adds	r7, r0, #0
    b8ba:	990a      	ldr	r1, [sp, #40]	; 0x28
    b8bc:	9808      	ldr	r0, [sp, #32]
    b8be:	f000 fded 	bl	c49c <_Bfree>
    b8c2:	970a      	str	r7, [sp, #40]	; 0x28
    b8c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    b8c6:	1b5a      	subs	r2, r3, r5
    b8c8:	d008      	beq.n	b8dc <_dtoa_r+0x7f0>
    b8ca:	9808      	ldr	r0, [sp, #32]
    b8cc:	990a      	ldr	r1, [sp, #40]	; 0x28
    b8ce:	e002      	b.n	b8d6 <_dtoa_r+0x7ea>
    b8d0:	9808      	ldr	r0, [sp, #32]
    b8d2:	990a      	ldr	r1, [sp, #40]	; 0x28
    b8d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
    b8d6:	f000 ff57 	bl	c788 <__pow5mult>
    b8da:	900a      	str	r0, [sp, #40]	; 0x28
    b8dc:	9808      	ldr	r0, [sp, #32]
    b8de:	2101      	movs	r1, #1
    b8e0:	f000 febb 	bl	c65a <__i2b>
    b8e4:	9b12      	ldr	r3, [sp, #72]	; 0x48
    b8e6:	1c07      	adds	r7, r0, #0
    b8e8:	2b00      	cmp	r3, #0
    b8ea:	dd0a      	ble.n	b902 <_dtoa_r+0x816>
    b8ec:	1c39      	adds	r1, r7, #0
    b8ee:	1c1a      	adds	r2, r3, #0
    b8f0:	9808      	ldr	r0, [sp, #32]
    b8f2:	f000 ff49 	bl	c788 <__pow5mult>
    b8f6:	9b20      	ldr	r3, [sp, #128]	; 0x80
    b8f8:	1c07      	adds	r7, r0, #0
    b8fa:	2500      	movs	r5, #0
    b8fc:	2b01      	cmp	r3, #1
    b8fe:	dc1b      	bgt.n	b938 <_dtoa_r+0x84c>
    b900:	e003      	b.n	b90a <_dtoa_r+0x81e>
    b902:	9b20      	ldr	r3, [sp, #128]	; 0x80
    b904:	2500      	movs	r5, #0
    b906:	2b01      	cmp	r3, #1
    b908:	dc12      	bgt.n	b930 <_dtoa_r+0x844>
    b90a:	2500      	movs	r5, #0
    b90c:	9b06      	ldr	r3, [sp, #24]
    b90e:	42ab      	cmp	r3, r5
    b910:	d10e      	bne.n	b930 <_dtoa_r+0x844>
    b912:	9b07      	ldr	r3, [sp, #28]
    b914:	031b      	lsls	r3, r3, #12
    b916:	42ab      	cmp	r3, r5
    b918:	d10a      	bne.n	b930 <_dtoa_r+0x844>
    b91a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
    b91c:	9a07      	ldr	r2, [sp, #28]
    b91e:	4213      	tst	r3, r2
    b920:	d006      	beq.n	b930 <_dtoa_r+0x844>
    b922:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    b924:	3501      	adds	r5, #1
    b926:	3301      	adds	r3, #1
    b928:	930d      	str	r3, [sp, #52]	; 0x34
    b92a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b92c:	3301      	adds	r3, #1
    b92e:	930e      	str	r3, [sp, #56]	; 0x38
    b930:	9b12      	ldr	r3, [sp, #72]	; 0x48
    b932:	2001      	movs	r0, #1
    b934:	2b00      	cmp	r3, #0
    b936:	d008      	beq.n	b94a <_dtoa_r+0x85e>
    b938:	693b      	ldr	r3, [r7, #16]
    b93a:	3303      	adds	r3, #3
    b93c:	009b      	lsls	r3, r3, #2
    b93e:	18fb      	adds	r3, r7, r3
    b940:	6858      	ldr	r0, [r3, #4]
    b942:	f000 fe40 	bl	c5c6 <__hi0bits>
    b946:	2320      	movs	r3, #32
    b948:	1a18      	subs	r0, r3, r0
    b94a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b94c:	18c0      	adds	r0, r0, r3
    b94e:	231f      	movs	r3, #31
    b950:	4018      	ands	r0, r3
    b952:	d009      	beq.n	b968 <_dtoa_r+0x87c>
    b954:	3301      	adds	r3, #1
    b956:	1a1b      	subs	r3, r3, r0
    b958:	2b04      	cmp	r3, #4
    b95a:	dd02      	ble.n	b962 <_dtoa_r+0x876>
    b95c:	231c      	movs	r3, #28
    b95e:	1a18      	subs	r0, r3, r0
    b960:	e003      	b.n	b96a <_dtoa_r+0x87e>
    b962:	2b04      	cmp	r3, #4
    b964:	d008      	beq.n	b978 <_dtoa_r+0x88c>
    b966:	1c18      	adds	r0, r3, #0
    b968:	301c      	adds	r0, #28
    b96a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    b96c:	1824      	adds	r4, r4, r0
    b96e:	181b      	adds	r3, r3, r0
    b970:	930d      	str	r3, [sp, #52]	; 0x34
    b972:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b974:	181b      	adds	r3, r3, r0
    b976:	930e      	str	r3, [sp, #56]	; 0x38
    b978:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    b97a:	2b00      	cmp	r3, #0
    b97c:	dd05      	ble.n	b98a <_dtoa_r+0x89e>
    b97e:	9808      	ldr	r0, [sp, #32]
    b980:	990a      	ldr	r1, [sp, #40]	; 0x28
    b982:	1c1a      	adds	r2, r3, #0
    b984:	f000 ff52 	bl	c82c <__lshift>
    b988:	900a      	str	r0, [sp, #40]	; 0x28
    b98a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    b98c:	2b00      	cmp	r3, #0
    b98e:	dd05      	ble.n	b99c <_dtoa_r+0x8b0>
    b990:	1c39      	adds	r1, r7, #0
    b992:	9808      	ldr	r0, [sp, #32]
    b994:	1c1a      	adds	r2, r3, #0
    b996:	f000 ff49 	bl	c82c <__lshift>
    b99a:	1c07      	adds	r7, r0, #0
    b99c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    b99e:	2b00      	cmp	r3, #0
    b9a0:	d01e      	beq.n	b9e0 <_dtoa_r+0x8f4>
    b9a2:	980a      	ldr	r0, [sp, #40]	; 0x28
    b9a4:	1c39      	adds	r1, r7, #0
    b9a6:	f000 ff93 	bl	c8d0 <__mcmp>
    b9aa:	2800      	cmp	r0, #0
    b9ac:	da18      	bge.n	b9e0 <_dtoa_r+0x8f4>
    b9ae:	9b03      	ldr	r3, [sp, #12]
    b9b0:	9808      	ldr	r0, [sp, #32]
    b9b2:	3b01      	subs	r3, #1
    b9b4:	9303      	str	r3, [sp, #12]
    b9b6:	990a      	ldr	r1, [sp, #40]	; 0x28
    b9b8:	2300      	movs	r3, #0
    b9ba:	220a      	movs	r2, #10
    b9bc:	f000 fd87 	bl	c4ce <__multadd>
    b9c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
    b9c2:	900a      	str	r0, [sp, #40]	; 0x28
    b9c4:	2b00      	cmp	r3, #0
    b9c6:	d100      	bne.n	b9ca <_dtoa_r+0x8de>
    b9c8:	e17f      	b.n	bcca <_dtoa_r+0xbde>
    b9ca:	1c31      	adds	r1, r6, #0
    b9cc:	2300      	movs	r3, #0
    b9ce:	9808      	ldr	r0, [sp, #32]
    b9d0:	220a      	movs	r2, #10
    b9d2:	f000 fd7c 	bl	c4ce <__multadd>
    b9d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b9d8:	1c06      	adds	r6, r0, #0
    b9da:	2b00      	cmp	r3, #0
    b9dc:	dc3c      	bgt.n	ba58 <_dtoa_r+0x96c>
    b9de:	e17d      	b.n	bcdc <_dtoa_r+0xbf0>
    b9e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b9e2:	2b00      	cmp	r3, #0
    b9e4:	dc2e      	bgt.n	ba44 <_dtoa_r+0x958>
    b9e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
    b9e8:	2b02      	cmp	r3, #2
    b9ea:	dd2b      	ble.n	ba44 <_dtoa_r+0x958>
    b9ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
    b9ee:	930b      	str	r3, [sp, #44]	; 0x2c
    b9f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    b9f2:	2b00      	cmp	r3, #0
    b9f4:	d110      	bne.n	ba18 <_dtoa_r+0x92c>
    b9f6:	1c39      	adds	r1, r7, #0
    b9f8:	9808      	ldr	r0, [sp, #32]
    b9fa:	2205      	movs	r2, #5
    b9fc:	f000 fd67 	bl	c4ce <__multadd>
    ba00:	1c07      	adds	r7, r0, #0
    ba02:	980a      	ldr	r0, [sp, #40]	; 0x28
    ba04:	1c39      	adds	r1, r7, #0
    ba06:	f000 ff63 	bl	c8d0 <__mcmp>
    ba0a:	2800      	cmp	r0, #0
    ba0c:	dc0e      	bgt.n	ba2c <_dtoa_r+0x940>
    ba0e:	e003      	b.n	ba18 <_dtoa_r+0x92c>
    ba10:	1c2f      	adds	r7, r5, #0
    ba12:	e000      	b.n	ba16 <_dtoa_r+0x92a>
    ba14:	2700      	movs	r7, #0
    ba16:	1c3e      	adds	r6, r7, #0
    ba18:	9b21      	ldr	r3, [sp, #132]	; 0x84
    ba1a:	43db      	mvns	r3, r3
    ba1c:	9303      	str	r3, [sp, #12]
    ba1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    ba20:	9304      	str	r3, [sp, #16]
    ba22:	e00c      	b.n	ba3e <_dtoa_r+0x952>
    ba24:	1c2f      	adds	r7, r5, #0
    ba26:	1c2e      	adds	r6, r5, #0
    ba28:	9b11      	ldr	r3, [sp, #68]	; 0x44
    ba2a:	9303      	str	r3, [sp, #12]
    ba2c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    ba2e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    ba30:	3301      	adds	r3, #1
    ba32:	9304      	str	r3, [sp, #16]
    ba34:	2331      	movs	r3, #49	; 0x31
    ba36:	7013      	strb	r3, [r2, #0]
    ba38:	9b03      	ldr	r3, [sp, #12]
    ba3a:	3301      	adds	r3, #1
    ba3c:	9303      	str	r3, [sp, #12]
    ba3e:	9609      	str	r6, [sp, #36]	; 0x24
    ba40:	2600      	movs	r6, #0
    ba42:	e11a      	b.n	bc7a <_dtoa_r+0xb8e>
    ba44:	9b10      	ldr	r3, [sp, #64]	; 0x40
    ba46:	2b00      	cmp	r3, #0
    ba48:	d104      	bne.n	ba54 <_dtoa_r+0x968>
    ba4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    ba4c:	930b      	str	r3, [sp, #44]	; 0x2c
    ba4e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
    ba50:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    ba52:	e0d0      	b.n	bbf6 <_dtoa_r+0xb0a>
    ba54:	9b09      	ldr	r3, [sp, #36]	; 0x24
    ba56:	930b      	str	r3, [sp, #44]	; 0x2c
    ba58:	2c00      	cmp	r4, #0
    ba5a:	dd05      	ble.n	ba68 <_dtoa_r+0x97c>
    ba5c:	1c31      	adds	r1, r6, #0
    ba5e:	9808      	ldr	r0, [sp, #32]
    ba60:	1c22      	adds	r2, r4, #0
    ba62:	f000 fee3 	bl	c82c <__lshift>
    ba66:	1c06      	adds	r6, r0, #0
    ba68:	9609      	str	r6, [sp, #36]	; 0x24
    ba6a:	2d00      	cmp	r5, #0
    ba6c:	d012      	beq.n	ba94 <_dtoa_r+0x9a8>
    ba6e:	6871      	ldr	r1, [r6, #4]
    ba70:	9808      	ldr	r0, [sp, #32]
    ba72:	f000 fcdb 	bl	c42c <_Balloc>
    ba76:	1c31      	adds	r1, r6, #0
    ba78:	1c04      	adds	r4, r0, #0
    ba7a:	6933      	ldr	r3, [r6, #16]
    ba7c:	310c      	adds	r1, #12
    ba7e:	1c9a      	adds	r2, r3, #2
    ba80:	0092      	lsls	r2, r2, #2
    ba82:	300c      	adds	r0, #12
    ba84:	f7fc fe41 	bl	870a <memcpy>
    ba88:	9808      	ldr	r0, [sp, #32]
    ba8a:	1c21      	adds	r1, r4, #0
    ba8c:	2201      	movs	r2, #1
    ba8e:	f000 fecd 	bl	c82c <__lshift>
    ba92:	9009      	str	r0, [sp, #36]	; 0x24
    ba94:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    ba96:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    ba98:	930e      	str	r3, [sp, #56]	; 0x38
    ba9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    ba9c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
    ba9e:	3b01      	subs	r3, #1
    baa0:	18d3      	adds	r3, r2, r3
    baa2:	9310      	str	r3, [sp, #64]	; 0x40
    baa4:	1c39      	adds	r1, r7, #0
    baa6:	1c20      	adds	r0, r4, #0
    baa8:	f7ff fa98 	bl	afdc <quorem>
    baac:	1c03      	adds	r3, r0, #0
    baae:	900f      	str	r0, [sp, #60]	; 0x3c
    bab0:	3330      	adds	r3, #48	; 0x30
    bab2:	1c31      	adds	r1, r6, #0
    bab4:	1c20      	adds	r0, r4, #0
    bab6:	930d      	str	r3, [sp, #52]	; 0x34
    bab8:	f000 ff0a 	bl	c8d0 <__mcmp>
    babc:	1c39      	adds	r1, r7, #0
    babe:	900b      	str	r0, [sp, #44]	; 0x2c
    bac0:	9a09      	ldr	r2, [sp, #36]	; 0x24
    bac2:	9808      	ldr	r0, [sp, #32]
    bac4:	f000 ff1f 	bl	c906 <__mdiff>
    bac8:	2301      	movs	r3, #1
    baca:	9304      	str	r3, [sp, #16]
    bacc:	68c3      	ldr	r3, [r0, #12]
    bace:	1c05      	adds	r5, r0, #0
    bad0:	2b00      	cmp	r3, #0
    bad2:	d104      	bne.n	bade <_dtoa_r+0x9f2>
    bad4:	1c20      	adds	r0, r4, #0
    bad6:	1c29      	adds	r1, r5, #0
    bad8:	f000 fefa 	bl	c8d0 <__mcmp>
    badc:	9004      	str	r0, [sp, #16]
    bade:	9808      	ldr	r0, [sp, #32]
    bae0:	1c29      	adds	r1, r5, #0
    bae2:	f000 fcdb 	bl	c49c <_Bfree>
    bae6:	9b04      	ldr	r3, [sp, #16]
    bae8:	9a20      	ldr	r2, [sp, #128]	; 0x80
    baea:	4313      	orrs	r3, r2
    baec:	d110      	bne.n	bb10 <_dtoa_r+0xa24>
    baee:	9a06      	ldr	r2, [sp, #24]
    baf0:	3301      	adds	r3, #1
    baf2:	4213      	tst	r3, r2
    baf4:	d10c      	bne.n	bb10 <_dtoa_r+0xa24>
    baf6:	980d      	ldr	r0, [sp, #52]	; 0x34
    baf8:	940a      	str	r4, [sp, #40]	; 0x28
    bafa:	2839      	cmp	r0, #57	; 0x39
    bafc:	d03d      	beq.n	bb7a <_dtoa_r+0xa8e>
    bafe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    bb00:	2b00      	cmp	r3, #0
    bb02:	dd01      	ble.n	bb08 <_dtoa_r+0xa1c>
    bb04:	980f      	ldr	r0, [sp, #60]	; 0x3c
    bb06:	3031      	adds	r0, #49	; 0x31
    bb08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    bb0a:	3301      	adds	r3, #1
    bb0c:	9304      	str	r3, [sp, #16]
    bb0e:	e03e      	b.n	bb8e <_dtoa_r+0xaa2>
    bb10:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    bb12:	2b00      	cmp	r3, #0
    bb14:	da05      	bge.n	bb22 <_dtoa_r+0xa36>
    bb16:	9b04      	ldr	r3, [sp, #16]
    bb18:	9d0d      	ldr	r5, [sp, #52]	; 0x34
    bb1a:	940a      	str	r4, [sp, #40]	; 0x28
    bb1c:	2b00      	cmp	r3, #0
    bb1e:	dc09      	bgt.n	bb34 <_dtoa_r+0xa48>
    bb20:	e01c      	b.n	bb5c <_dtoa_r+0xa70>
    bb22:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
    bb24:	9b20      	ldr	r3, [sp, #128]	; 0x80
    bb26:	431d      	orrs	r5, r3
    bb28:	d11e      	bne.n	bb68 <_dtoa_r+0xa7c>
    bb2a:	2301      	movs	r3, #1
    bb2c:	9a06      	ldr	r2, [sp, #24]
    bb2e:	4213      	tst	r3, r2
    bb30:	d11a      	bne.n	bb68 <_dtoa_r+0xa7c>
    bb32:	e7f0      	b.n	bb16 <_dtoa_r+0xa2a>
    bb34:	1c21      	adds	r1, r4, #0
    bb36:	9808      	ldr	r0, [sp, #32]
    bb38:	2201      	movs	r2, #1
    bb3a:	f000 fe77 	bl	c82c <__lshift>
    bb3e:	1c39      	adds	r1, r7, #0
    bb40:	900a      	str	r0, [sp, #40]	; 0x28
    bb42:	f000 fec5 	bl	c8d0 <__mcmp>
    bb46:	2800      	cmp	r0, #0
    bb48:	dc03      	bgt.n	bb52 <_dtoa_r+0xa66>
    bb4a:	d107      	bne.n	bb5c <_dtoa_r+0xa70>
    bb4c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    bb4e:	07db      	lsls	r3, r3, #31
    bb50:	d504      	bpl.n	bb5c <_dtoa_r+0xa70>
    bb52:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    bb54:	2b39      	cmp	r3, #57	; 0x39
    bb56:	d010      	beq.n	bb7a <_dtoa_r+0xa8e>
    bb58:	1c1d      	adds	r5, r3, #0
    bb5a:	3501      	adds	r5, #1
    bb5c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    bb5e:	3301      	adds	r3, #1
    bb60:	9304      	str	r3, [sp, #16]
    bb62:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    bb64:	701d      	strb	r5, [r3, #0]
    bb66:	e088      	b.n	bc7a <_dtoa_r+0xb8e>
    bb68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    bb6a:	1c5d      	adds	r5, r3, #1
    bb6c:	9b04      	ldr	r3, [sp, #16]
    bb6e:	2b00      	cmp	r3, #0
    bb70:	dd10      	ble.n	bb94 <_dtoa_r+0xaa8>
    bb72:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    bb74:	940a      	str	r4, [sp, #40]	; 0x28
    bb76:	2b39      	cmp	r3, #57	; 0x39
    bb78:	d106      	bne.n	bb88 <_dtoa_r+0xa9c>
    bb7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    bb7c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
    bb7e:	3301      	adds	r3, #1
    bb80:	9304      	str	r3, [sp, #16]
    bb82:	2339      	movs	r3, #57	; 0x39
    bb84:	7013      	strb	r3, [r2, #0]
    bb86:	e060      	b.n	bc4a <_dtoa_r+0xb5e>
    bb88:	980d      	ldr	r0, [sp, #52]	; 0x34
    bb8a:	9504      	str	r5, [sp, #16]
    bb8c:	3001      	adds	r0, #1
    bb8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    bb90:	7018      	strb	r0, [r3, #0]
    bb92:	e072      	b.n	bc7a <_dtoa_r+0xb8e>
    bb94:	466a      	mov	r2, sp
    bb96:	2134      	movs	r1, #52	; 0x34
    bb98:	1852      	adds	r2, r2, r1
    bb9a:	7812      	ldrb	r2, [r2, #0]
    bb9c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    bb9e:	9504      	str	r5, [sp, #16]
    bba0:	701a      	strb	r2, [r3, #0]
    bba2:	9a10      	ldr	r2, [sp, #64]	; 0x40
    bba4:	4293      	cmp	r3, r2
    bba6:	d03f      	beq.n	bc28 <_dtoa_r+0xb3c>
    bba8:	1c21      	adds	r1, r4, #0
    bbaa:	220a      	movs	r2, #10
    bbac:	2300      	movs	r3, #0
    bbae:	9808      	ldr	r0, [sp, #32]
    bbb0:	f000 fc8d 	bl	c4ce <__multadd>
    bbb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    bbb6:	1c04      	adds	r4, r0, #0
    bbb8:	1c31      	adds	r1, r6, #0
    bbba:	9808      	ldr	r0, [sp, #32]
    bbbc:	220a      	movs	r2, #10
    bbbe:	429e      	cmp	r6, r3
    bbc0:	d105      	bne.n	bbce <_dtoa_r+0xae2>
    bbc2:	2300      	movs	r3, #0
    bbc4:	f000 fc83 	bl	c4ce <__multadd>
    bbc8:	1c06      	adds	r6, r0, #0
    bbca:	9009      	str	r0, [sp, #36]	; 0x24
    bbcc:	e00a      	b.n	bbe4 <_dtoa_r+0xaf8>
    bbce:	2300      	movs	r3, #0
    bbd0:	f000 fc7d 	bl	c4ce <__multadd>
    bbd4:	9909      	ldr	r1, [sp, #36]	; 0x24
    bbd6:	1c06      	adds	r6, r0, #0
    bbd8:	220a      	movs	r2, #10
    bbda:	9808      	ldr	r0, [sp, #32]
    bbdc:	2300      	movs	r3, #0
    bbde:	f000 fc76 	bl	c4ce <__multadd>
    bbe2:	9009      	str	r0, [sp, #36]	; 0x24
    bbe4:	950e      	str	r5, [sp, #56]	; 0x38
    bbe6:	e75d      	b.n	baa4 <_dtoa_r+0x9b8>
    bbe8:	1c21      	adds	r1, r4, #0
    bbea:	9808      	ldr	r0, [sp, #32]
    bbec:	220a      	movs	r2, #10
    bbee:	2300      	movs	r3, #0
    bbf0:	f000 fc6d 	bl	c4ce <__multadd>
    bbf4:	1c04      	adds	r4, r0, #0
    bbf6:	1c20      	adds	r0, r4, #0
    bbf8:	1c39      	adds	r1, r7, #0
    bbfa:	f7ff f9ef 	bl	afdc <quorem>
    bbfe:	2234      	movs	r2, #52	; 0x34
    bc00:	466b      	mov	r3, sp
    bc02:	3030      	adds	r0, #48	; 0x30
    bc04:	189b      	adds	r3, r3, r2
    bc06:	900d      	str	r0, [sp, #52]	; 0x34
    bc08:	781b      	ldrb	r3, [r3, #0]
    bc0a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    bc0c:	702b      	strb	r3, [r5, #0]
    bc0e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    bc10:	3501      	adds	r5, #1
    bc12:	1aeb      	subs	r3, r5, r3
    bc14:	4293      	cmp	r3, r2
    bc16:	dbe7      	blt.n	bbe8 <_dtoa_r+0xafc>
    bc18:	1e13      	subs	r3, r2, #0
    bc1a:	dc00      	bgt.n	bc1e <_dtoa_r+0xb32>
    bc1c:	2301      	movs	r3, #1
    bc1e:	9609      	str	r6, [sp, #36]	; 0x24
    bc20:	2600      	movs	r6, #0
    bc22:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    bc24:	18d3      	adds	r3, r2, r3
    bc26:	9304      	str	r3, [sp, #16]
    bc28:	1c21      	adds	r1, r4, #0
    bc2a:	9808      	ldr	r0, [sp, #32]
    bc2c:	2201      	movs	r2, #1
    bc2e:	f000 fdfd 	bl	c82c <__lshift>
    bc32:	1c39      	adds	r1, r7, #0
    bc34:	900a      	str	r0, [sp, #40]	; 0x28
    bc36:	f000 fe4b 	bl	c8d0 <__mcmp>
    bc3a:	2800      	cmp	r0, #0
    bc3c:	dc05      	bgt.n	bc4a <_dtoa_r+0xb5e>
    bc3e:	d115      	bne.n	bc6c <_dtoa_r+0xb80>
    bc40:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    bc42:	07db      	lsls	r3, r3, #31
    bc44:	d401      	bmi.n	bc4a <_dtoa_r+0xb5e>
    bc46:	e011      	b.n	bc6c <_dtoa_r+0xb80>
    bc48:	9304      	str	r3, [sp, #16]
    bc4a:	9b04      	ldr	r3, [sp, #16]
    bc4c:	3b01      	subs	r3, #1
    bc4e:	781a      	ldrb	r2, [r3, #0]
    bc50:	2a39      	cmp	r2, #57	; 0x39
    bc52:	d108      	bne.n	bc66 <_dtoa_r+0xb7a>
    bc54:	9a0c      	ldr	r2, [sp, #48]	; 0x30
    bc56:	4293      	cmp	r3, r2
    bc58:	d1f6      	bne.n	bc48 <_dtoa_r+0xb5c>
    bc5a:	9b03      	ldr	r3, [sp, #12]
    bc5c:	3301      	adds	r3, #1
    bc5e:	9303      	str	r3, [sp, #12]
    bc60:	2331      	movs	r3, #49	; 0x31
    bc62:	7013      	strb	r3, [r2, #0]
    bc64:	e009      	b.n	bc7a <_dtoa_r+0xb8e>
    bc66:	3201      	adds	r2, #1
    bc68:	701a      	strb	r2, [r3, #0]
    bc6a:	e006      	b.n	bc7a <_dtoa_r+0xb8e>
    bc6c:	9b04      	ldr	r3, [sp, #16]
    bc6e:	3b01      	subs	r3, #1
    bc70:	781a      	ldrb	r2, [r3, #0]
    bc72:	2a30      	cmp	r2, #48	; 0x30
    bc74:	d101      	bne.n	bc7a <_dtoa_r+0xb8e>
    bc76:	9304      	str	r3, [sp, #16]
    bc78:	e7f8      	b.n	bc6c <_dtoa_r+0xb80>
    bc7a:	9808      	ldr	r0, [sp, #32]
    bc7c:	1c39      	adds	r1, r7, #0
    bc7e:	f000 fc0d 	bl	c49c <_Bfree>
    bc82:	9b09      	ldr	r3, [sp, #36]	; 0x24
    bc84:	2b00      	cmp	r3, #0
    bc86:	d00e      	beq.n	bca6 <_dtoa_r+0xbba>
    bc88:	2e00      	cmp	r6, #0
    bc8a:	d005      	beq.n	bc98 <_dtoa_r+0xbac>
    bc8c:	429e      	cmp	r6, r3
    bc8e:	d003      	beq.n	bc98 <_dtoa_r+0xbac>
    bc90:	9808      	ldr	r0, [sp, #32]
    bc92:	1c31      	adds	r1, r6, #0
    bc94:	f000 fc02 	bl	c49c <_Bfree>
    bc98:	9808      	ldr	r0, [sp, #32]
    bc9a:	9909      	ldr	r1, [sp, #36]	; 0x24
    bc9c:	f000 fbfe 	bl	c49c <_Bfree>
    bca0:	e001      	b.n	bca6 <_dtoa_r+0xbba>
    bca2:	9b11      	ldr	r3, [sp, #68]	; 0x44
    bca4:	9303      	str	r3, [sp, #12]
    bca6:	9808      	ldr	r0, [sp, #32]
    bca8:	990a      	ldr	r1, [sp, #40]	; 0x28
    bcaa:	f000 fbf7 	bl	c49c <_Bfree>
    bcae:	2300      	movs	r3, #0
    bcb0:	9a04      	ldr	r2, [sp, #16]
    bcb2:	980c      	ldr	r0, [sp, #48]	; 0x30
    bcb4:	7013      	strb	r3, [r2, #0]
    bcb6:	9b03      	ldr	r3, [sp, #12]
    bcb8:	9a22      	ldr	r2, [sp, #136]	; 0x88
    bcba:	3301      	adds	r3, #1
    bcbc:	6013      	str	r3, [r2, #0]
    bcbe:	9b24      	ldr	r3, [sp, #144]	; 0x90
    bcc0:	2b00      	cmp	r3, #0
    bcc2:	d010      	beq.n	bce6 <_dtoa_r+0xbfa>
    bcc4:	9a04      	ldr	r2, [sp, #16]
    bcc6:	601a      	str	r2, [r3, #0]
    bcc8:	e00d      	b.n	bce6 <_dtoa_r+0xbfa>
    bcca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    bccc:	2b00      	cmp	r3, #0
    bcce:	dd00      	ble.n	bcd2 <_dtoa_r+0xbe6>
    bcd0:	e6bd      	b.n	ba4e <_dtoa_r+0x962>
    bcd2:	9b20      	ldr	r3, [sp, #128]	; 0x80
    bcd4:	2b02      	cmp	r3, #2
    bcd6:	dd00      	ble.n	bcda <_dtoa_r+0xbee>
    bcd8:	e68a      	b.n	b9f0 <_dtoa_r+0x904>
    bcda:	e6b8      	b.n	ba4e <_dtoa_r+0x962>
    bcdc:	9b20      	ldr	r3, [sp, #128]	; 0x80
    bcde:	2b02      	cmp	r3, #2
    bce0:	dd00      	ble.n	bce4 <_dtoa_r+0xbf8>
    bce2:	e685      	b.n	b9f0 <_dtoa_r+0x904>
    bce4:	e6b8      	b.n	ba58 <_dtoa_r+0x96c>
    bce6:	b01b      	add	sp, #108	; 0x6c
    bce8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    bcea:	46c0      	nop			; (mov r8, r8)

0000bcec <__sflags>:
    bcec:	780b      	ldrb	r3, [r1, #0]
    bcee:	b530      	push	{r4, r5, lr}
    bcf0:	2b72      	cmp	r3, #114	; 0x72
    bcf2:	d00e      	beq.n	bd12 <__sflags+0x26>
    bcf4:	2b77      	cmp	r3, #119	; 0x77
    bcf6:	d007      	beq.n	bd08 <__sflags+0x1c>
    bcf8:	2b61      	cmp	r3, #97	; 0x61
    bcfa:	d10e      	bne.n	bd1a <__sflags+0x2e>
    bcfc:	2582      	movs	r5, #130	; 0x82
    bcfe:	2084      	movs	r0, #132	; 0x84
    bd00:	00ad      	lsls	r5, r5, #2
    bd02:	2301      	movs	r3, #1
    bd04:	0040      	lsls	r0, r0, #1
    bd06:	e01b      	b.n	bd40 <__sflags+0x54>
    bd08:	25c0      	movs	r5, #192	; 0xc0
    bd0a:	2301      	movs	r3, #1
    bd0c:	00ed      	lsls	r5, r5, #3
    bd0e:	2008      	movs	r0, #8
    bd10:	e016      	b.n	bd40 <__sflags+0x54>
    bd12:	2500      	movs	r5, #0
    bd14:	2004      	movs	r0, #4
    bd16:	1c2b      	adds	r3, r5, #0
    bd18:	e012      	b.n	bd40 <__sflags+0x54>
    bd1a:	2316      	movs	r3, #22
    bd1c:	6003      	str	r3, [r0, #0]
    bd1e:	2000      	movs	r0, #0
    bd20:	e01b      	b.n	bd5a <__sflags+0x6e>
    bd22:	2c62      	cmp	r4, #98	; 0x62
    bd24:	d011      	beq.n	bd4a <__sflags+0x5e>
    bd26:	2c78      	cmp	r4, #120	; 0x78
    bd28:	d012      	beq.n	bd50 <__sflags+0x64>
    bd2a:	2c2b      	cmp	r4, #43	; 0x2b
    bd2c:	d108      	bne.n	bd40 <__sflags+0x54>
    bd2e:	3c0f      	subs	r4, #15
    bd30:	43a0      	bics	r0, r4
    bd32:	3c0c      	subs	r4, #12
    bd34:	4320      	orrs	r0, r4
    bd36:	3c0d      	subs	r4, #13
    bd38:	43a3      	bics	r3, r4
    bd3a:	1c1c      	adds	r4, r3, #0
    bd3c:	2302      	movs	r3, #2
    bd3e:	4323      	orrs	r3, r4
    bd40:	3101      	adds	r1, #1
    bd42:	780c      	ldrb	r4, [r1, #0]
    bd44:	2c00      	cmp	r4, #0
    bd46:	d1ec      	bne.n	bd22 <__sflags+0x36>
    bd48:	e005      	b.n	bd56 <__sflags+0x6a>
    bd4a:	2480      	movs	r4, #128	; 0x80
    bd4c:	0264      	lsls	r4, r4, #9
    bd4e:	e7f6      	b.n	bd3e <__sflags+0x52>
    bd50:	2480      	movs	r4, #128	; 0x80
    bd52:	0124      	lsls	r4, r4, #4
    bd54:	e7f3      	b.n	bd3e <__sflags+0x52>
    bd56:	432b      	orrs	r3, r5
    bd58:	6013      	str	r3, [r2, #0]
    bd5a:	bd30      	pop	{r4, r5, pc}

0000bd5c <_fstat_r>:
    bd5c:	b538      	push	{r3, r4, r5, lr}
    bd5e:	2300      	movs	r3, #0
    bd60:	4c06      	ldr	r4, [pc, #24]	; (bd7c <_fstat_r+0x20>)
    bd62:	1c05      	adds	r5, r0, #0
    bd64:	1c08      	adds	r0, r1, #0
    bd66:	1c11      	adds	r1, r2, #0
    bd68:	6023      	str	r3, [r4, #0]
    bd6a:	f7f7 fcd9 	bl	3720 <_fstat>
    bd6e:	1c43      	adds	r3, r0, #1
    bd70:	d103      	bne.n	bd7a <_fstat_r+0x1e>
    bd72:	6823      	ldr	r3, [r4, #0]
    bd74:	2b00      	cmp	r3, #0
    bd76:	d000      	beq.n	bd7a <_fstat_r+0x1e>
    bd78:	602b      	str	r3, [r5, #0]
    bd7a:	bd38      	pop	{r3, r4, r5, pc}
    bd7c:	20004624 	.word	0x20004624

0000bd80 <rshift>:
    bd80:	b5f0      	push	{r4, r5, r6, r7, lr}
    bd82:	1c06      	adds	r6, r0, #0
    bd84:	6905      	ldr	r5, [r0, #16]
    bd86:	3614      	adds	r6, #20
    bd88:	114a      	asrs	r2, r1, #5
    bd8a:	1c34      	adds	r4, r6, #0
    bd8c:	42aa      	cmp	r2, r5
    bd8e:	da25      	bge.n	bddc <rshift+0x5c>
    bd90:	231f      	movs	r3, #31
    bd92:	00ad      	lsls	r5, r5, #2
    bd94:	0092      	lsls	r2, r2, #2
    bd96:	4019      	ands	r1, r3
    bd98:	1975      	adds	r5, r6, r5
    bd9a:	18b2      	adds	r2, r6, r2
    bd9c:	1c33      	adds	r3, r6, #0
    bd9e:	2900      	cmp	r1, #0
    bda0:	d016      	beq.n	bdd0 <rshift+0x50>
    bda2:	1c13      	adds	r3, r2, #0
    bda4:	cb04      	ldmia	r3!, {r2}
    bda6:	2720      	movs	r7, #32
    bda8:	40ca      	lsrs	r2, r1
    bdaa:	46b4      	mov	ip, r6
    bdac:	1a7f      	subs	r7, r7, r1
    bdae:	4664      	mov	r4, ip
    bdb0:	42ab      	cmp	r3, r5
    bdb2:	d208      	bcs.n	bdc6 <rshift+0x46>
    bdb4:	681c      	ldr	r4, [r3, #0]
    bdb6:	40bc      	lsls	r4, r7
    bdb8:	4322      	orrs	r2, r4
    bdba:	4664      	mov	r4, ip
    bdbc:	c404      	stmia	r4!, {r2}
    bdbe:	cb04      	ldmia	r3!, {r2}
    bdc0:	46a4      	mov	ip, r4
    bdc2:	40ca      	lsrs	r2, r1
    bdc4:	e7f3      	b.n	bdae <rshift+0x2e>
    bdc6:	6022      	str	r2, [r4, #0]
    bdc8:	2a00      	cmp	r2, #0
    bdca:	d007      	beq.n	bddc <rshift+0x5c>
    bdcc:	3404      	adds	r4, #4
    bdce:	e005      	b.n	bddc <rshift+0x5c>
    bdd0:	1c1c      	adds	r4, r3, #0
    bdd2:	42aa      	cmp	r2, r5
    bdd4:	d202      	bcs.n	bddc <rshift+0x5c>
    bdd6:	ca02      	ldmia	r2!, {r1}
    bdd8:	c302      	stmia	r3!, {r1}
    bdda:	e7f9      	b.n	bdd0 <rshift+0x50>
    bddc:	1ba3      	subs	r3, r4, r6
    bdde:	109b      	asrs	r3, r3, #2
    bde0:	6103      	str	r3, [r0, #16]
    bde2:	d100      	bne.n	bde6 <rshift+0x66>
    bde4:	6143      	str	r3, [r0, #20]
    bde6:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000bde8 <__hexdig_fun>:
    bde8:	1c03      	adds	r3, r0, #0
    bdea:	3b30      	subs	r3, #48	; 0x30
    bdec:	2b09      	cmp	r3, #9
    bdee:	d801      	bhi.n	bdf4 <__hexdig_fun+0xc>
    bdf0:	3820      	subs	r0, #32
    bdf2:	e00b      	b.n	be0c <__hexdig_fun+0x24>
    bdf4:	1c03      	adds	r3, r0, #0
    bdf6:	3b61      	subs	r3, #97	; 0x61
    bdf8:	2b05      	cmp	r3, #5
    bdfa:	d801      	bhi.n	be00 <__hexdig_fun+0x18>
    bdfc:	3847      	subs	r0, #71	; 0x47
    bdfe:	e005      	b.n	be0c <__hexdig_fun+0x24>
    be00:	1c02      	adds	r2, r0, #0
    be02:	3a41      	subs	r2, #65	; 0x41
    be04:	2300      	movs	r3, #0
    be06:	2a05      	cmp	r2, #5
    be08:	d801      	bhi.n	be0e <__hexdig_fun+0x26>
    be0a:	3827      	subs	r0, #39	; 0x27
    be0c:	b2c3      	uxtb	r3, r0
    be0e:	1c18      	adds	r0, r3, #0
    be10:	4770      	bx	lr

0000be12 <__gethex>:
    be12:	b5f0      	push	{r4, r5, r6, r7, lr}
    be14:	b08d      	sub	sp, #52	; 0x34
    be16:	9109      	str	r1, [sp, #36]	; 0x24
    be18:	9202      	str	r2, [sp, #8]
    be1a:	930a      	str	r3, [sp, #40]	; 0x28
    be1c:	9005      	str	r0, [sp, #20]
    be1e:	f000 fad9 	bl	c3d4 <_localeconv_r>
    be22:	6803      	ldr	r3, [r0, #0]
    be24:	1c18      	adds	r0, r3, #0
    be26:	9307      	str	r3, [sp, #28]
    be28:	f7fe f822 	bl	9e70 <strlen>
    be2c:	9b07      	ldr	r3, [sp, #28]
    be2e:	9004      	str	r0, [sp, #16]
    be30:	181b      	adds	r3, r3, r0
    be32:	3b01      	subs	r3, #1
    be34:	781b      	ldrb	r3, [r3, #0]
    be36:	930b      	str	r3, [sp, #44]	; 0x2c
    be38:	9b09      	ldr	r3, [sp, #36]	; 0x24
    be3a:	6819      	ldr	r1, [r3, #0]
    be3c:	1c8a      	adds	r2, r1, #2
    be3e:	9201      	str	r2, [sp, #4]
    be40:	9801      	ldr	r0, [sp, #4]
    be42:	1a53      	subs	r3, r2, r1
    be44:	7800      	ldrb	r0, [r0, #0]
    be46:	3b02      	subs	r3, #2
    be48:	3201      	adds	r2, #1
    be4a:	2830      	cmp	r0, #48	; 0x30
    be4c:	d0f7      	beq.n	be3e <__gethex+0x2c>
    be4e:	9308      	str	r3, [sp, #32]
    be50:	f7ff ffca 	bl	bde8 <__hexdig_fun>
    be54:	1e06      	subs	r6, r0, #0
    be56:	d120      	bne.n	be9a <__gethex+0x88>
    be58:	9801      	ldr	r0, [sp, #4]
    be5a:	9907      	ldr	r1, [sp, #28]
    be5c:	9a04      	ldr	r2, [sp, #16]
    be5e:	f7fe f80e 	bl	9e7e <strncmp>
    be62:	2800      	cmp	r0, #0
    be64:	d13c      	bne.n	bee0 <__gethex+0xce>
    be66:	9b01      	ldr	r3, [sp, #4]
    be68:	9a04      	ldr	r2, [sp, #16]
    be6a:	189c      	adds	r4, r3, r2
    be6c:	7820      	ldrb	r0, [r4, #0]
    be6e:	f7ff ffbb 	bl	bde8 <__hexdig_fun>
    be72:	2800      	cmp	r0, #0
    be74:	d037      	beq.n	bee6 <__gethex+0xd4>
    be76:	9401      	str	r4, [sp, #4]
    be78:	9b01      	ldr	r3, [sp, #4]
    be7a:	7818      	ldrb	r0, [r3, #0]
    be7c:	2830      	cmp	r0, #48	; 0x30
    be7e:	d103      	bne.n	be88 <__gethex+0x76>
    be80:	9b01      	ldr	r3, [sp, #4]
    be82:	3301      	adds	r3, #1
    be84:	9301      	str	r3, [sp, #4]
    be86:	e7f7      	b.n	be78 <__gethex+0x66>
    be88:	f7ff ffae 	bl	bde8 <__hexdig_fun>
    be8c:	4243      	negs	r3, r0
    be8e:	4143      	adcs	r3, r0
    be90:	9303      	str	r3, [sp, #12]
    be92:	2301      	movs	r3, #1
    be94:	1c26      	adds	r6, r4, #0
    be96:	9308      	str	r3, [sp, #32]
    be98:	e002      	b.n	bea0 <__gethex+0x8e>
    be9a:	2300      	movs	r3, #0
    be9c:	1c1e      	adds	r6, r3, #0
    be9e:	9303      	str	r3, [sp, #12]
    bea0:	9c01      	ldr	r4, [sp, #4]
    bea2:	7820      	ldrb	r0, [r4, #0]
    bea4:	f7ff ffa0 	bl	bde8 <__hexdig_fun>
    bea8:	2800      	cmp	r0, #0
    beaa:	d001      	beq.n	beb0 <__gethex+0x9e>
    beac:	3401      	adds	r4, #1
    beae:	e7f8      	b.n	bea2 <__gethex+0x90>
    beb0:	1c20      	adds	r0, r4, #0
    beb2:	9907      	ldr	r1, [sp, #28]
    beb4:	9a04      	ldr	r2, [sp, #16]
    beb6:	f7fd ffe2 	bl	9e7e <strncmp>
    beba:	2800      	cmp	r0, #0
    bebc:	d10b      	bne.n	bed6 <__gethex+0xc4>
    bebe:	2e00      	cmp	r6, #0
    bec0:	d10b      	bne.n	beda <__gethex+0xc8>
    bec2:	9b04      	ldr	r3, [sp, #16]
    bec4:	18e6      	adds	r6, r4, r3
    bec6:	1c34      	adds	r4, r6, #0
    bec8:	7820      	ldrb	r0, [r4, #0]
    beca:	f7ff ff8d 	bl	bde8 <__hexdig_fun>
    bece:	2800      	cmp	r0, #0
    bed0:	d001      	beq.n	bed6 <__gethex+0xc4>
    bed2:	3401      	adds	r4, #1
    bed4:	e7f8      	b.n	bec8 <__gethex+0xb6>
    bed6:	1e37      	subs	r7, r6, #0
    bed8:	d008      	beq.n	beec <__gethex+0xda>
    beda:	1b36      	subs	r6, r6, r4
    bedc:	00b7      	lsls	r7, r6, #2
    bede:	e005      	b.n	beec <__gethex+0xda>
    bee0:	9c01      	ldr	r4, [sp, #4]
    bee2:	1c37      	adds	r7, r6, #0
    bee4:	e000      	b.n	bee8 <__gethex+0xd6>
    bee6:	1c07      	adds	r7, r0, #0
    bee8:	2301      	movs	r3, #1
    beea:	9303      	str	r3, [sp, #12]
    beec:	7823      	ldrb	r3, [r4, #0]
    beee:	2b50      	cmp	r3, #80	; 0x50
    bef0:	d001      	beq.n	bef6 <__gethex+0xe4>
    bef2:	2b70      	cmp	r3, #112	; 0x70
    bef4:	d128      	bne.n	bf48 <__gethex+0x136>
    bef6:	7863      	ldrb	r3, [r4, #1]
    bef8:	2b2b      	cmp	r3, #43	; 0x2b
    befa:	d007      	beq.n	bf0c <__gethex+0xfa>
    befc:	2b2d      	cmp	r3, #45	; 0x2d
    befe:	d003      	beq.n	bf08 <__gethex+0xf6>
    bf00:	2300      	movs	r3, #0
    bf02:	1c65      	adds	r5, r4, #1
    bf04:	9306      	str	r3, [sp, #24]
    bf06:	e004      	b.n	bf12 <__gethex+0x100>
    bf08:	2301      	movs	r3, #1
    bf0a:	e000      	b.n	bf0e <__gethex+0xfc>
    bf0c:	2300      	movs	r3, #0
    bf0e:	9306      	str	r3, [sp, #24]
    bf10:	1ca5      	adds	r5, r4, #2
    bf12:	7828      	ldrb	r0, [r5, #0]
    bf14:	f7ff ff68 	bl	bde8 <__hexdig_fun>
    bf18:	1e43      	subs	r3, r0, #1
    bf1a:	b2db      	uxtb	r3, r3
    bf1c:	2b18      	cmp	r3, #24
    bf1e:	d813      	bhi.n	bf48 <__gethex+0x136>
    bf20:	3810      	subs	r0, #16
    bf22:	3501      	adds	r5, #1
    bf24:	1c06      	adds	r6, r0, #0
    bf26:	7828      	ldrb	r0, [r5, #0]
    bf28:	f7ff ff5e 	bl	bde8 <__hexdig_fun>
    bf2c:	1e43      	subs	r3, r0, #1
    bf2e:	b2db      	uxtb	r3, r3
    bf30:	2b18      	cmp	r3, #24
    bf32:	d803      	bhi.n	bf3c <__gethex+0x12a>
    bf34:	230a      	movs	r3, #10
    bf36:	435e      	muls	r6, r3
    bf38:	1830      	adds	r0, r6, r0
    bf3a:	e7f1      	b.n	bf20 <__gethex+0x10e>
    bf3c:	9b06      	ldr	r3, [sp, #24]
    bf3e:	2b00      	cmp	r3, #0
    bf40:	d000      	beq.n	bf44 <__gethex+0x132>
    bf42:	4276      	negs	r6, r6
    bf44:	19bf      	adds	r7, r7, r6
    bf46:	e000      	b.n	bf4a <__gethex+0x138>
    bf48:	1c25      	adds	r5, r4, #0
    bf4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    bf4c:	601d      	str	r5, [r3, #0]
    bf4e:	9b03      	ldr	r3, [sp, #12]
    bf50:	2b00      	cmp	r3, #0
    bf52:	d006      	beq.n	bf62 <__gethex+0x150>
    bf54:	2000      	movs	r0, #0
    bf56:	9b08      	ldr	r3, [sp, #32]
    bf58:	4283      	cmp	r3, r0
    bf5a:	d000      	beq.n	bf5e <__gethex+0x14c>
    bf5c:	e17b      	b.n	c256 <__gethex+0x444>
    bf5e:	3006      	adds	r0, #6
    bf60:	e179      	b.n	c256 <__gethex+0x444>
    bf62:	9b01      	ldr	r3, [sp, #4]
    bf64:	9903      	ldr	r1, [sp, #12]
    bf66:	1ae3      	subs	r3, r4, r3
    bf68:	3b01      	subs	r3, #1
    bf6a:	2b07      	cmp	r3, #7
    bf6c:	dd02      	ble.n	bf74 <__gethex+0x162>
    bf6e:	3101      	adds	r1, #1
    bf70:	105b      	asrs	r3, r3, #1
    bf72:	e7fa      	b.n	bf6a <__gethex+0x158>
    bf74:	9805      	ldr	r0, [sp, #20]
    bf76:	f000 fa59 	bl	c42c <_Balloc>
    bf7a:	1c03      	adds	r3, r0, #0
    bf7c:	2600      	movs	r6, #0
    bf7e:	1c05      	adds	r5, r0, #0
    bf80:	3314      	adds	r3, #20
    bf82:	9303      	str	r3, [sp, #12]
    bf84:	9308      	str	r3, [sp, #32]
    bf86:	9606      	str	r6, [sp, #24]
    bf88:	9b01      	ldr	r3, [sp, #4]
    bf8a:	429c      	cmp	r4, r3
    bf8c:	d92a      	bls.n	bfe4 <__gethex+0x1d2>
    bf8e:	1e63      	subs	r3, r4, #1
    bf90:	9309      	str	r3, [sp, #36]	; 0x24
    bf92:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
    bf94:	781b      	ldrb	r3, [r3, #0]
    bf96:	4293      	cmp	r3, r2
    bf98:	d009      	beq.n	bfae <__gethex+0x19c>
    bf9a:	9b06      	ldr	r3, [sp, #24]
    bf9c:	2b20      	cmp	r3, #32
    bf9e:	d114      	bne.n	bfca <__gethex+0x1b8>
    bfa0:	9b08      	ldr	r3, [sp, #32]
    bfa2:	601e      	str	r6, [r3, #0]
    bfa4:	2600      	movs	r6, #0
    bfa6:	3304      	adds	r3, #4
    bfa8:	9308      	str	r3, [sp, #32]
    bfaa:	9606      	str	r6, [sp, #24]
    bfac:	e00d      	b.n	bfca <__gethex+0x1b8>
    bfae:	9b09      	ldr	r3, [sp, #36]	; 0x24
    bfb0:	9a04      	ldr	r2, [sp, #16]
    bfb2:	1a9c      	subs	r4, r3, r2
    bfb4:	9b01      	ldr	r3, [sp, #4]
    bfb6:	3401      	adds	r4, #1
    bfb8:	429c      	cmp	r4, r3
    bfba:	d3ee      	bcc.n	bf9a <__gethex+0x188>
    bfbc:	1c20      	adds	r0, r4, #0
    bfbe:	9907      	ldr	r1, [sp, #28]
    bfc0:	f7fd ff5d 	bl	9e7e <strncmp>
    bfc4:	2800      	cmp	r0, #0
    bfc6:	d0df      	beq.n	bf88 <__gethex+0x176>
    bfc8:	e7e7      	b.n	bf9a <__gethex+0x188>
    bfca:	9b09      	ldr	r3, [sp, #36]	; 0x24
    bfcc:	7818      	ldrb	r0, [r3, #0]
    bfce:	f7ff ff0b 	bl	bde8 <__hexdig_fun>
    bfd2:	230f      	movs	r3, #15
    bfd4:	4018      	ands	r0, r3
    bfd6:	9b06      	ldr	r3, [sp, #24]
    bfd8:	9c09      	ldr	r4, [sp, #36]	; 0x24
    bfda:	4098      	lsls	r0, r3
    bfdc:	3304      	adds	r3, #4
    bfde:	4306      	orrs	r6, r0
    bfe0:	9306      	str	r3, [sp, #24]
    bfe2:	e7d1      	b.n	bf88 <__gethex+0x176>
    bfe4:	9c08      	ldr	r4, [sp, #32]
    bfe6:	9b03      	ldr	r3, [sp, #12]
    bfe8:	c440      	stmia	r4!, {r6}
    bfea:	1ae4      	subs	r4, r4, r3
    bfec:	10a4      	asrs	r4, r4, #2
    bfee:	612c      	str	r4, [r5, #16]
    bff0:	1c30      	adds	r0, r6, #0
    bff2:	f000 fae8 	bl	c5c6 <__hi0bits>
    bff6:	9b02      	ldr	r3, [sp, #8]
    bff8:	0164      	lsls	r4, r4, #5
    bffa:	681b      	ldr	r3, [r3, #0]
    bffc:	1a26      	subs	r6, r4, r0
    bffe:	9301      	str	r3, [sp, #4]
    c000:	429e      	cmp	r6, r3
    c002:	dd25      	ble.n	c050 <__gethex+0x23e>
    c004:	1af6      	subs	r6, r6, r3
    c006:	1c28      	adds	r0, r5, #0
    c008:	1c31      	adds	r1, r6, #0
    c00a:	f000 fdf1 	bl	cbf0 <__any_on>
    c00e:	2400      	movs	r4, #0
    c010:	42a0      	cmp	r0, r4
    c012:	d017      	beq.n	c044 <__gethex+0x232>
    c014:	231f      	movs	r3, #31
    c016:	3401      	adds	r4, #1
    c018:	1c20      	adds	r0, r4, #0
    c01a:	1e72      	subs	r2, r6, #1
    c01c:	4013      	ands	r3, r2
    c01e:	4098      	lsls	r0, r3
    c020:	1c03      	adds	r3, r0, #0
    c022:	1151      	asrs	r1, r2, #5
    c024:	9803      	ldr	r0, [sp, #12]
    c026:	0089      	lsls	r1, r1, #2
    c028:	5809      	ldr	r1, [r1, r0]
    c02a:	4219      	tst	r1, r3
    c02c:	d00a      	beq.n	c044 <__gethex+0x232>
    c02e:	42a2      	cmp	r2, r4
    c030:	dc01      	bgt.n	c036 <__gethex+0x224>
    c032:	2402      	movs	r4, #2
    c034:	e006      	b.n	c044 <__gethex+0x232>
    c036:	1eb1      	subs	r1, r6, #2
    c038:	1c28      	adds	r0, r5, #0
    c03a:	f000 fdd9 	bl	cbf0 <__any_on>
    c03e:	2800      	cmp	r0, #0
    c040:	d0f7      	beq.n	c032 <__gethex+0x220>
    c042:	2403      	movs	r4, #3
    c044:	1c28      	adds	r0, r5, #0
    c046:	1c31      	adds	r1, r6, #0
    c048:	f7ff fe9a 	bl	bd80 <rshift>
    c04c:	19bf      	adds	r7, r7, r6
    c04e:	e00e      	b.n	c06e <__gethex+0x25c>
    c050:	9b01      	ldr	r3, [sp, #4]
    c052:	2400      	movs	r4, #0
    c054:	429e      	cmp	r6, r3
    c056:	da0a      	bge.n	c06e <__gethex+0x25c>
    c058:	1b9e      	subs	r6, r3, r6
    c05a:	1c29      	adds	r1, r5, #0
    c05c:	9805      	ldr	r0, [sp, #20]
    c05e:	1c32      	adds	r2, r6, #0
    c060:	f000 fbe4 	bl	c82c <__lshift>
    c064:	1c03      	adds	r3, r0, #0
    c066:	1c05      	adds	r5, r0, #0
    c068:	3314      	adds	r3, #20
    c06a:	1bbf      	subs	r7, r7, r6
    c06c:	9303      	str	r3, [sp, #12]
    c06e:	9b02      	ldr	r3, [sp, #8]
    c070:	689b      	ldr	r3, [r3, #8]
    c072:	9304      	str	r3, [sp, #16]
    c074:	429f      	cmp	r7, r3
    c076:	dd08      	ble.n	c08a <__gethex+0x278>
    c078:	9805      	ldr	r0, [sp, #20]
    c07a:	1c29      	adds	r1, r5, #0
    c07c:	f000 fa0e 	bl	c49c <_Bfree>
    c080:	2300      	movs	r3, #0
    c082:	9a12      	ldr	r2, [sp, #72]	; 0x48
    c084:	20a3      	movs	r0, #163	; 0xa3
    c086:	6013      	str	r3, [r2, #0]
    c088:	e0e5      	b.n	c256 <__gethex+0x444>
    c08a:	9b02      	ldr	r3, [sp, #8]
    c08c:	685e      	ldr	r6, [r3, #4]
    c08e:	42b7      	cmp	r7, r6
    c090:	da5a      	bge.n	c148 <__gethex+0x336>
    c092:	9b01      	ldr	r3, [sp, #4]
    c094:	1bf6      	subs	r6, r6, r7
    c096:	429e      	cmp	r6, r3
    c098:	db32      	blt.n	c100 <__gethex+0x2ee>
    c09a:	9b02      	ldr	r3, [sp, #8]
    c09c:	68db      	ldr	r3, [r3, #12]
    c09e:	2b02      	cmp	r3, #2
    c0a0:	d01e      	beq.n	c0e0 <__gethex+0x2ce>
    c0a2:	2b03      	cmp	r3, #3
    c0a4:	d020      	beq.n	c0e8 <__gethex+0x2d6>
    c0a6:	2b01      	cmp	r3, #1
    c0a8:	d121      	bne.n	c0ee <__gethex+0x2dc>
    c0aa:	9b01      	ldr	r3, [sp, #4]
    c0ac:	429e      	cmp	r6, r3
    c0ae:	d11e      	bne.n	c0ee <__gethex+0x2dc>
    c0b0:	2b01      	cmp	r3, #1
    c0b2:	dc0d      	bgt.n	c0d0 <__gethex+0x2be>
    c0b4:	9b02      	ldr	r3, [sp, #8]
    c0b6:	2062      	movs	r0, #98	; 0x62
    c0b8:	685b      	ldr	r3, [r3, #4]
    c0ba:	9301      	str	r3, [sp, #4]
    c0bc:	9a01      	ldr	r2, [sp, #4]
    c0be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    c0c0:	601a      	str	r2, [r3, #0]
    c0c2:	2301      	movs	r3, #1
    c0c4:	9a03      	ldr	r2, [sp, #12]
    c0c6:	612b      	str	r3, [r5, #16]
    c0c8:	6013      	str	r3, [r2, #0]
    c0ca:	9b12      	ldr	r3, [sp, #72]	; 0x48
    c0cc:	601d      	str	r5, [r3, #0]
    c0ce:	e0c2      	b.n	c256 <__gethex+0x444>
    c0d0:	9901      	ldr	r1, [sp, #4]
    c0d2:	1c28      	adds	r0, r5, #0
    c0d4:	3901      	subs	r1, #1
    c0d6:	f000 fd8b 	bl	cbf0 <__any_on>
    c0da:	2800      	cmp	r0, #0
    c0dc:	d1ea      	bne.n	c0b4 <__gethex+0x2a2>
    c0de:	e006      	b.n	c0ee <__gethex+0x2dc>
    c0e0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    c0e2:	2b00      	cmp	r3, #0
    c0e4:	d0e6      	beq.n	c0b4 <__gethex+0x2a2>
    c0e6:	e002      	b.n	c0ee <__gethex+0x2dc>
    c0e8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    c0ea:	2b00      	cmp	r3, #0
    c0ec:	d1e2      	bne.n	c0b4 <__gethex+0x2a2>
    c0ee:	9805      	ldr	r0, [sp, #20]
    c0f0:	1c29      	adds	r1, r5, #0
    c0f2:	f000 f9d3 	bl	c49c <_Bfree>
    c0f6:	2300      	movs	r3, #0
    c0f8:	9a12      	ldr	r2, [sp, #72]	; 0x48
    c0fa:	2050      	movs	r0, #80	; 0x50
    c0fc:	6013      	str	r3, [r2, #0]
    c0fe:	e0aa      	b.n	c256 <__gethex+0x444>
    c100:	1e77      	subs	r7, r6, #1
    c102:	2c00      	cmp	r4, #0
    c104:	d107      	bne.n	c116 <__gethex+0x304>
    c106:	2f00      	cmp	r7, #0
    c108:	dd06      	ble.n	c118 <__gethex+0x306>
    c10a:	1c28      	adds	r0, r5, #0
    c10c:	1c39      	adds	r1, r7, #0
    c10e:	f000 fd6f 	bl	cbf0 <__any_on>
    c112:	1c04      	adds	r4, r0, #0
    c114:	e000      	b.n	c118 <__gethex+0x306>
    c116:	2401      	movs	r4, #1
    c118:	231f      	movs	r3, #31
    c11a:	117a      	asrs	r2, r7, #5
    c11c:	401f      	ands	r7, r3
    c11e:	3b1e      	subs	r3, #30
    c120:	40bb      	lsls	r3, r7
    c122:	1c1f      	adds	r7, r3, #0
    c124:	9b03      	ldr	r3, [sp, #12]
    c126:	0092      	lsls	r2, r2, #2
    c128:	58d3      	ldr	r3, [r2, r3]
    c12a:	423b      	tst	r3, r7
    c12c:	d001      	beq.n	c132 <__gethex+0x320>
    c12e:	2302      	movs	r3, #2
    c130:	431c      	orrs	r4, r3
    c132:	9b01      	ldr	r3, [sp, #4]
    c134:	1c31      	adds	r1, r6, #0
    c136:	1b9b      	subs	r3, r3, r6
    c138:	1c28      	adds	r0, r5, #0
    c13a:	9301      	str	r3, [sp, #4]
    c13c:	f7ff fe20 	bl	bd80 <rshift>
    c140:	9b02      	ldr	r3, [sp, #8]
    c142:	2602      	movs	r6, #2
    c144:	685f      	ldr	r7, [r3, #4]
    c146:	e000      	b.n	c14a <__gethex+0x338>
    c148:	2601      	movs	r6, #1
    c14a:	2c00      	cmp	r4, #0
    c14c:	d07e      	beq.n	c24c <__gethex+0x43a>
    c14e:	9b02      	ldr	r3, [sp, #8]
    c150:	68db      	ldr	r3, [r3, #12]
    c152:	2b02      	cmp	r3, #2
    c154:	d00b      	beq.n	c16e <__gethex+0x35c>
    c156:	2b03      	cmp	r3, #3
    c158:	d00d      	beq.n	c176 <__gethex+0x364>
    c15a:	2b01      	cmp	r3, #1
    c15c:	d174      	bne.n	c248 <__gethex+0x436>
    c15e:	07a2      	lsls	r2, r4, #30
    c160:	d572      	bpl.n	c248 <__gethex+0x436>
    c162:	9a03      	ldr	r2, [sp, #12]
    c164:	6812      	ldr	r2, [r2, #0]
    c166:	4314      	orrs	r4, r2
    c168:	421c      	tst	r4, r3
    c16a:	d107      	bne.n	c17c <__gethex+0x36a>
    c16c:	e06c      	b.n	c248 <__gethex+0x436>
    c16e:	2301      	movs	r3, #1
    c170:	9a13      	ldr	r2, [sp, #76]	; 0x4c
    c172:	1a9b      	subs	r3, r3, r2
    c174:	9313      	str	r3, [sp, #76]	; 0x4c
    c176:	9b13      	ldr	r3, [sp, #76]	; 0x4c
    c178:	2b00      	cmp	r3, #0
    c17a:	d065      	beq.n	c248 <__gethex+0x436>
    c17c:	692c      	ldr	r4, [r5, #16]
    c17e:	00a3      	lsls	r3, r4, #2
    c180:	9303      	str	r3, [sp, #12]
    c182:	1c2b      	adds	r3, r5, #0
    c184:	9a03      	ldr	r2, [sp, #12]
    c186:	3314      	adds	r3, #20
    c188:	1899      	adds	r1, r3, r2
    c18a:	681a      	ldr	r2, [r3, #0]
    c18c:	1c50      	adds	r0, r2, #1
    c18e:	d002      	beq.n	c196 <__gethex+0x384>
    c190:	3201      	adds	r2, #1
    c192:	601a      	str	r2, [r3, #0]
    c194:	e021      	b.n	c1da <__gethex+0x3c8>
    c196:	2200      	movs	r2, #0
    c198:	c304      	stmia	r3!, {r2}
    c19a:	4299      	cmp	r1, r3
    c19c:	d8f5      	bhi.n	c18a <__gethex+0x378>
    c19e:	68ab      	ldr	r3, [r5, #8]
    c1a0:	429c      	cmp	r4, r3
    c1a2:	db12      	blt.n	c1ca <__gethex+0x3b8>
    c1a4:	686b      	ldr	r3, [r5, #4]
    c1a6:	9805      	ldr	r0, [sp, #20]
    c1a8:	1c59      	adds	r1, r3, #1
    c1aa:	f000 f93f 	bl	c42c <_Balloc>
    c1ae:	1c29      	adds	r1, r5, #0
    c1b0:	692b      	ldr	r3, [r5, #16]
    c1b2:	9004      	str	r0, [sp, #16]
    c1b4:	1c9a      	adds	r2, r3, #2
    c1b6:	310c      	adds	r1, #12
    c1b8:	0092      	lsls	r2, r2, #2
    c1ba:	300c      	adds	r0, #12
    c1bc:	f7fc faa5 	bl	870a <memcpy>
    c1c0:	1c29      	adds	r1, r5, #0
    c1c2:	9805      	ldr	r0, [sp, #20]
    c1c4:	f000 f96a 	bl	c49c <_Bfree>
    c1c8:	9d04      	ldr	r5, [sp, #16]
    c1ca:	692b      	ldr	r3, [r5, #16]
    c1cc:	1c5a      	adds	r2, r3, #1
    c1ce:	612a      	str	r2, [r5, #16]
    c1d0:	2201      	movs	r2, #1
    c1d2:	3304      	adds	r3, #4
    c1d4:	009b      	lsls	r3, r3, #2
    c1d6:	18eb      	adds	r3, r5, r3
    c1d8:	605a      	str	r2, [r3, #4]
    c1da:	1c2b      	adds	r3, r5, #0
    c1dc:	3314      	adds	r3, #20
    c1de:	2e02      	cmp	r6, #2
    c1e0:	d111      	bne.n	c206 <__gethex+0x3f4>
    c1e2:	9a02      	ldr	r2, [sp, #8]
    c1e4:	9901      	ldr	r1, [sp, #4]
    c1e6:	6812      	ldr	r2, [r2, #0]
    c1e8:	3a01      	subs	r2, #1
    c1ea:	4291      	cmp	r1, r2
    c1ec:	d12a      	bne.n	c244 <__gethex+0x432>
    c1ee:	114a      	asrs	r2, r1, #5
    c1f0:	211f      	movs	r1, #31
    c1f2:	9801      	ldr	r0, [sp, #4]
    c1f4:	0092      	lsls	r2, r2, #2
    c1f6:	4001      	ands	r1, r0
    c1f8:	2001      	movs	r0, #1
    c1fa:	1c04      	adds	r4, r0, #0
    c1fc:	408c      	lsls	r4, r1
    c1fe:	58d3      	ldr	r3, [r2, r3]
    c200:	4223      	tst	r3, r4
    c202:	d01f      	beq.n	c244 <__gethex+0x432>
    c204:	e00c      	b.n	c220 <__gethex+0x40e>
    c206:	692a      	ldr	r2, [r5, #16]
    c208:	42a2      	cmp	r2, r4
    c20a:	dd0b      	ble.n	c224 <__gethex+0x412>
    c20c:	1c28      	adds	r0, r5, #0
    c20e:	2101      	movs	r1, #1
    c210:	f7ff fdb6 	bl	bd80 <rshift>
    c214:	9b02      	ldr	r3, [sp, #8]
    c216:	3701      	adds	r7, #1
    c218:	689b      	ldr	r3, [r3, #8]
    c21a:	429f      	cmp	r7, r3
    c21c:	dd00      	ble.n	c220 <__gethex+0x40e>
    c21e:	e72b      	b.n	c078 <__gethex+0x266>
    c220:	2601      	movs	r6, #1
    c222:	e00f      	b.n	c244 <__gethex+0x432>
    c224:	241f      	movs	r4, #31
    c226:	9a01      	ldr	r2, [sp, #4]
    c228:	2601      	movs	r6, #1
    c22a:	4022      	ands	r2, r4
    c22c:	1e14      	subs	r4, r2, #0
    c22e:	d009      	beq.n	c244 <__gethex+0x432>
    c230:	9a03      	ldr	r2, [sp, #12]
    c232:	189b      	adds	r3, r3, r2
    c234:	3b04      	subs	r3, #4
    c236:	6818      	ldr	r0, [r3, #0]
    c238:	f000 f9c5 	bl	c5c6 <__hi0bits>
    c23c:	2120      	movs	r1, #32
    c23e:	1b0c      	subs	r4, r1, r4
    c240:	42a0      	cmp	r0, r4
    c242:	dbe3      	blt.n	c20c <__gethex+0x3fa>
    c244:	2320      	movs	r3, #32
    c246:	e000      	b.n	c24a <__gethex+0x438>
    c248:	2310      	movs	r3, #16
    c24a:	431e      	orrs	r6, r3
    c24c:	1c30      	adds	r0, r6, #0
    c24e:	9b12      	ldr	r3, [sp, #72]	; 0x48
    c250:	601d      	str	r5, [r3, #0]
    c252:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    c254:	601f      	str	r7, [r3, #0]
    c256:	b00d      	add	sp, #52	; 0x34
    c258:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000c25a <L_shift>:
    c25a:	2308      	movs	r3, #8
    c25c:	b570      	push	{r4, r5, r6, lr}
    c25e:	2520      	movs	r5, #32
    c260:	1a9a      	subs	r2, r3, r2
    c262:	0092      	lsls	r2, r2, #2
    c264:	1aad      	subs	r5, r5, r2
    c266:	6843      	ldr	r3, [r0, #4]
    c268:	6806      	ldr	r6, [r0, #0]
    c26a:	1c1c      	adds	r4, r3, #0
    c26c:	40ac      	lsls	r4, r5
    c26e:	40d3      	lsrs	r3, r2
    c270:	4334      	orrs	r4, r6
    c272:	6004      	str	r4, [r0, #0]
    c274:	6043      	str	r3, [r0, #4]
    c276:	3004      	adds	r0, #4
    c278:	4288      	cmp	r0, r1
    c27a:	d3f4      	bcc.n	c266 <L_shift+0xc>
    c27c:	bd70      	pop	{r4, r5, r6, pc}

0000c27e <__hexnan>:
    c27e:	b5f0      	push	{r4, r5, r6, r7, lr}
    c280:	b089      	sub	sp, #36	; 0x24
    c282:	9200      	str	r2, [sp, #0]
    c284:	680a      	ldr	r2, [r1, #0]
    c286:	9900      	ldr	r1, [sp, #0]
    c288:	1153      	asrs	r3, r2, #5
    c28a:	009b      	lsls	r3, r3, #2
    c28c:	18cb      	adds	r3, r1, r3
    c28e:	9302      	str	r3, [sp, #8]
    c290:	231f      	movs	r3, #31
    c292:	401a      	ands	r2, r3
    c294:	9007      	str	r0, [sp, #28]
    c296:	9205      	str	r2, [sp, #20]
    c298:	d002      	beq.n	c2a0 <__hexnan+0x22>
    c29a:	9b02      	ldr	r3, [sp, #8]
    c29c:	3304      	adds	r3, #4
    c29e:	9302      	str	r3, [sp, #8]
    c2a0:	9b02      	ldr	r3, [sp, #8]
    c2a2:	2500      	movs	r5, #0
    c2a4:	1f1e      	subs	r6, r3, #4
    c2a6:	1c37      	adds	r7, r6, #0
    c2a8:	1c34      	adds	r4, r6, #0
    c2aa:	9b07      	ldr	r3, [sp, #28]
    c2ac:	6035      	str	r5, [r6, #0]
    c2ae:	681b      	ldr	r3, [r3, #0]
    c2b0:	9506      	str	r5, [sp, #24]
    c2b2:	9303      	str	r3, [sp, #12]
    c2b4:	9501      	str	r5, [sp, #4]
    c2b6:	9b03      	ldr	r3, [sp, #12]
    c2b8:	3301      	adds	r3, #1
    c2ba:	9303      	str	r3, [sp, #12]
    c2bc:	781b      	ldrb	r3, [r3, #0]
    c2be:	9304      	str	r3, [sp, #16]
    c2c0:	2b00      	cmp	r3, #0
    c2c2:	d03b      	beq.n	c33c <__hexnan+0xbe>
    c2c4:	9804      	ldr	r0, [sp, #16]
    c2c6:	f7ff fd8f 	bl	bde8 <__hexdig_fun>
    c2ca:	2800      	cmp	r0, #0
    c2cc:	d122      	bne.n	c314 <__hexnan+0x96>
    c2ce:	9b04      	ldr	r3, [sp, #16]
    c2d0:	2b20      	cmp	r3, #32
    c2d2:	d817      	bhi.n	c304 <__hexnan+0x86>
    c2d4:	9b06      	ldr	r3, [sp, #24]
    c2d6:	9a01      	ldr	r2, [sp, #4]
    c2d8:	4293      	cmp	r3, r2
    c2da:	daec      	bge.n	c2b6 <__hexnan+0x38>
    c2dc:	42bc      	cmp	r4, r7
    c2de:	d206      	bcs.n	c2ee <__hexnan+0x70>
    c2e0:	2d07      	cmp	r5, #7
    c2e2:	dc04      	bgt.n	c2ee <__hexnan+0x70>
    c2e4:	1c20      	adds	r0, r4, #0
    c2e6:	1c39      	adds	r1, r7, #0
    c2e8:	1c2a      	adds	r2, r5, #0
    c2ea:	f7ff ffb6 	bl	c25a <L_shift>
    c2ee:	9b00      	ldr	r3, [sp, #0]
    c2f0:	2508      	movs	r5, #8
    c2f2:	429c      	cmp	r4, r3
    c2f4:	d9df      	bls.n	c2b6 <__hexnan+0x38>
    c2f6:	2500      	movs	r5, #0
    c2f8:	9b01      	ldr	r3, [sp, #4]
    c2fa:	1f27      	subs	r7, r4, #4
    c2fc:	603d      	str	r5, [r7, #0]
    c2fe:	9306      	str	r3, [sp, #24]
    c300:	1c3c      	adds	r4, r7, #0
    c302:	e7d8      	b.n	c2b6 <__hexnan+0x38>
    c304:	9b04      	ldr	r3, [sp, #16]
    c306:	2b29      	cmp	r3, #41	; 0x29
    c308:	d14c      	bne.n	c3a4 <__hexnan+0x126>
    c30a:	9b03      	ldr	r3, [sp, #12]
    c30c:	9a07      	ldr	r2, [sp, #28]
    c30e:	3301      	adds	r3, #1
    c310:	6013      	str	r3, [r2, #0]
    c312:	e013      	b.n	c33c <__hexnan+0xbe>
    c314:	9b01      	ldr	r3, [sp, #4]
    c316:	3501      	adds	r5, #1
    c318:	3301      	adds	r3, #1
    c31a:	9301      	str	r3, [sp, #4]
    c31c:	2d08      	cmp	r5, #8
    c31e:	dd06      	ble.n	c32e <__hexnan+0xb0>
    c320:	9b00      	ldr	r3, [sp, #0]
    c322:	429c      	cmp	r4, r3
    c324:	d9c7      	bls.n	c2b6 <__hexnan+0x38>
    c326:	2300      	movs	r3, #0
    c328:	2501      	movs	r5, #1
    c32a:	3c04      	subs	r4, #4
    c32c:	6023      	str	r3, [r4, #0]
    c32e:	6823      	ldr	r3, [r4, #0]
    c330:	011a      	lsls	r2, r3, #4
    c332:	230f      	movs	r3, #15
    c334:	4018      	ands	r0, r3
    c336:	4310      	orrs	r0, r2
    c338:	6020      	str	r0, [r4, #0]
    c33a:	e7bc      	b.n	c2b6 <__hexnan+0x38>
    c33c:	9b01      	ldr	r3, [sp, #4]
    c33e:	2b00      	cmp	r3, #0
    c340:	d030      	beq.n	c3a4 <__hexnan+0x126>
    c342:	42bc      	cmp	r4, r7
    c344:	d206      	bcs.n	c354 <__hexnan+0xd6>
    c346:	2d07      	cmp	r5, #7
    c348:	dc04      	bgt.n	c354 <__hexnan+0xd6>
    c34a:	1c20      	adds	r0, r4, #0
    c34c:	1c39      	adds	r1, r7, #0
    c34e:	1c2a      	adds	r2, r5, #0
    c350:	f7ff ff83 	bl	c25a <L_shift>
    c354:	9b00      	ldr	r3, [sp, #0]
    c356:	429c      	cmp	r4, r3
    c358:	d90a      	bls.n	c370 <__hexnan+0xf2>
    c35a:	3304      	adds	r3, #4
    c35c:	cc02      	ldmia	r4!, {r1}
    c35e:	1f1a      	subs	r2, r3, #4
    c360:	6011      	str	r1, [r2, #0]
    c362:	42a6      	cmp	r6, r4
    c364:	d2f9      	bcs.n	c35a <__hexnan+0xdc>
    c366:	2200      	movs	r2, #0
    c368:	c304      	stmia	r3!, {r2}
    c36a:	429e      	cmp	r6, r3
    c36c:	d2fb      	bcs.n	c366 <__hexnan+0xe8>
    c36e:	e00e      	b.n	c38e <__hexnan+0x110>
    c370:	9b05      	ldr	r3, [sp, #20]
    c372:	2b00      	cmp	r3, #0
    c374:	d00b      	beq.n	c38e <__hexnan+0x110>
    c376:	2220      	movs	r2, #32
    c378:	9905      	ldr	r1, [sp, #20]
    c37a:	9b02      	ldr	r3, [sp, #8]
    c37c:	1a52      	subs	r2, r2, r1
    c37e:	2101      	movs	r1, #1
    c380:	4249      	negs	r1, r1
    c382:	40d1      	lsrs	r1, r2
    c384:	1c0a      	adds	r2, r1, #0
    c386:	3b04      	subs	r3, #4
    c388:	6819      	ldr	r1, [r3, #0]
    c38a:	400a      	ands	r2, r1
    c38c:	601a      	str	r2, [r3, #0]
    c38e:	6833      	ldr	r3, [r6, #0]
    c390:	2b00      	cmp	r3, #0
    c392:	d109      	bne.n	c3a8 <__hexnan+0x12a>
    c394:	9b00      	ldr	r3, [sp, #0]
    c396:	429e      	cmp	r6, r3
    c398:	d102      	bne.n	c3a0 <__hexnan+0x122>
    c39a:	2301      	movs	r3, #1
    c39c:	6033      	str	r3, [r6, #0]
    c39e:	e003      	b.n	c3a8 <__hexnan+0x12a>
    c3a0:	3e04      	subs	r6, #4
    c3a2:	e7f4      	b.n	c38e <__hexnan+0x110>
    c3a4:	2004      	movs	r0, #4
    c3a6:	e000      	b.n	c3aa <__hexnan+0x12c>
    c3a8:	2005      	movs	r0, #5
    c3aa:	b009      	add	sp, #36	; 0x24
    c3ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0000c3b0 <_isatty_r>:
    c3b0:	b538      	push	{r3, r4, r5, lr}
    c3b2:	2300      	movs	r3, #0
    c3b4:	4c06      	ldr	r4, [pc, #24]	; (c3d0 <_isatty_r+0x20>)
    c3b6:	1c05      	adds	r5, r0, #0
    c3b8:	1c08      	adds	r0, r1, #0
    c3ba:	6023      	str	r3, [r4, #0]
    c3bc:	f7f7 f988 	bl	36d0 <_isatty>
    c3c0:	1c43      	adds	r3, r0, #1
    c3c2:	d103      	bne.n	c3cc <_isatty_r+0x1c>
    c3c4:	6823      	ldr	r3, [r4, #0]
    c3c6:	2b00      	cmp	r3, #0
    c3c8:	d000      	beq.n	c3cc <_isatty_r+0x1c>
    c3ca:	602b      	str	r3, [r5, #0]
    c3cc:	bd38      	pop	{r3, r4, r5, pc}
    c3ce:	46c0      	nop			; (mov r8, r8)
    c3d0:	20004624 	.word	0x20004624

0000c3d4 <_localeconv_r>:
    c3d4:	4800      	ldr	r0, [pc, #0]	; (c3d8 <_localeconv_r+0x4>)
    c3d6:	4770      	bx	lr
    c3d8:	2000013c 	.word	0x2000013c

0000c3dc <_lseek_r>:
    c3dc:	b538      	push	{r3, r4, r5, lr}
    c3de:	1c05      	adds	r5, r0, #0
    c3e0:	2000      	movs	r0, #0
    c3e2:	4c07      	ldr	r4, [pc, #28]	; (c400 <_lseek_r+0x24>)
    c3e4:	6020      	str	r0, [r4, #0]
    c3e6:	1c08      	adds	r0, r1, #0
    c3e8:	1c11      	adds	r1, r2, #0
    c3ea:	1c1a      	adds	r2, r3, #0
    c3ec:	f7f7 f984 	bl	36f8 <_lseek>
    c3f0:	1c43      	adds	r3, r0, #1
    c3f2:	d103      	bne.n	c3fc <_lseek_r+0x20>
    c3f4:	6823      	ldr	r3, [r4, #0]
    c3f6:	2b00      	cmp	r3, #0
    c3f8:	d000      	beq.n	c3fc <_lseek_r+0x20>
    c3fa:	602b      	str	r3, [r5, #0]
    c3fc:	bd38      	pop	{r3, r4, r5, pc}
    c3fe:	46c0      	nop			; (mov r8, r8)
    c400:	20004624 	.word	0x20004624

0000c404 <memmove>:
    c404:	b510      	push	{r4, lr}
    c406:	4281      	cmp	r1, r0
    c408:	d208      	bcs.n	c41c <memmove+0x18>
    c40a:	188b      	adds	r3, r1, r2
    c40c:	4298      	cmp	r0, r3
    c40e:	d205      	bcs.n	c41c <memmove+0x18>
    c410:	1a9b      	subs	r3, r3, r2
    c412:	3a01      	subs	r2, #1
    c414:	d309      	bcc.n	c42a <memmove+0x26>
    c416:	5c99      	ldrb	r1, [r3, r2]
    c418:	5481      	strb	r1, [r0, r2]
    c41a:	e7fa      	b.n	c412 <memmove+0xe>
    c41c:	2300      	movs	r3, #0
    c41e:	4293      	cmp	r3, r2
    c420:	d003      	beq.n	c42a <memmove+0x26>
    c422:	5ccc      	ldrb	r4, [r1, r3]
    c424:	54c4      	strb	r4, [r0, r3]
    c426:	3301      	adds	r3, #1
    c428:	e7f9      	b.n	c41e <memmove+0x1a>
    c42a:	bd10      	pop	{r4, pc}

0000c42c <_Balloc>:
    c42c:	b570      	push	{r4, r5, r6, lr}
    c42e:	6a46      	ldr	r6, [r0, #36]	; 0x24
    c430:	1c04      	adds	r4, r0, #0
    c432:	1c0d      	adds	r5, r1, #0
    c434:	2e00      	cmp	r6, #0
    c436:	d107      	bne.n	c448 <_Balloc+0x1c>
    c438:	2010      	movs	r0, #16
    c43a:	f7fc f947 	bl	86cc <malloc>
    c43e:	6260      	str	r0, [r4, #36]	; 0x24
    c440:	6046      	str	r6, [r0, #4]
    c442:	6086      	str	r6, [r0, #8]
    c444:	6006      	str	r6, [r0, #0]
    c446:	60c6      	str	r6, [r0, #12]
    c448:	6a66      	ldr	r6, [r4, #36]	; 0x24
    c44a:	68f3      	ldr	r3, [r6, #12]
    c44c:	2b00      	cmp	r3, #0
    c44e:	d009      	beq.n	c464 <_Balloc+0x38>
    c450:	6a62      	ldr	r2, [r4, #36]	; 0x24
    c452:	00ab      	lsls	r3, r5, #2
    c454:	68d2      	ldr	r2, [r2, #12]
    c456:	18d3      	adds	r3, r2, r3
    c458:	6818      	ldr	r0, [r3, #0]
    c45a:	2800      	cmp	r0, #0
    c45c:	d00e      	beq.n	c47c <_Balloc+0x50>
    c45e:	6802      	ldr	r2, [r0, #0]
    c460:	601a      	str	r2, [r3, #0]
    c462:	e017      	b.n	c494 <_Balloc+0x68>
    c464:	1c20      	adds	r0, r4, #0
    c466:	2104      	movs	r1, #4
    c468:	2221      	movs	r2, #33	; 0x21
    c46a:	f000 fbe2 	bl	cc32 <_calloc_r>
    c46e:	6a63      	ldr	r3, [r4, #36]	; 0x24
    c470:	60f0      	str	r0, [r6, #12]
    c472:	68db      	ldr	r3, [r3, #12]
    c474:	2b00      	cmp	r3, #0
    c476:	d1eb      	bne.n	c450 <_Balloc+0x24>
    c478:	2000      	movs	r0, #0
    c47a:	e00e      	b.n	c49a <_Balloc+0x6e>
    c47c:	2101      	movs	r1, #1
    c47e:	1c0e      	adds	r6, r1, #0
    c480:	40ae      	lsls	r6, r5
    c482:	1d72      	adds	r2, r6, #5
    c484:	0092      	lsls	r2, r2, #2
    c486:	1c20      	adds	r0, r4, #0
    c488:	f000 fbd3 	bl	cc32 <_calloc_r>
    c48c:	2800      	cmp	r0, #0
    c48e:	d0f3      	beq.n	c478 <_Balloc+0x4c>
    c490:	6045      	str	r5, [r0, #4]
    c492:	6086      	str	r6, [r0, #8]
    c494:	2300      	movs	r3, #0
    c496:	6103      	str	r3, [r0, #16]
    c498:	60c3      	str	r3, [r0, #12]
    c49a:	bd70      	pop	{r4, r5, r6, pc}

0000c49c <_Bfree>:
    c49c:	b570      	push	{r4, r5, r6, lr}
    c49e:	6a45      	ldr	r5, [r0, #36]	; 0x24
    c4a0:	1c06      	adds	r6, r0, #0
    c4a2:	1c0c      	adds	r4, r1, #0
    c4a4:	2d00      	cmp	r5, #0
    c4a6:	d107      	bne.n	c4b8 <_Bfree+0x1c>
    c4a8:	2010      	movs	r0, #16
    c4aa:	f7fc f90f 	bl	86cc <malloc>
    c4ae:	6270      	str	r0, [r6, #36]	; 0x24
    c4b0:	6045      	str	r5, [r0, #4]
    c4b2:	6085      	str	r5, [r0, #8]
    c4b4:	6005      	str	r5, [r0, #0]
    c4b6:	60c5      	str	r5, [r0, #12]
    c4b8:	2c00      	cmp	r4, #0
    c4ba:	d007      	beq.n	c4cc <_Bfree+0x30>
    c4bc:	6a72      	ldr	r2, [r6, #36]	; 0x24
    c4be:	6863      	ldr	r3, [r4, #4]
    c4c0:	68d2      	ldr	r2, [r2, #12]
    c4c2:	009b      	lsls	r3, r3, #2
    c4c4:	18d3      	adds	r3, r2, r3
    c4c6:	681a      	ldr	r2, [r3, #0]
    c4c8:	6022      	str	r2, [r4, #0]
    c4ca:	601c      	str	r4, [r3, #0]
    c4cc:	bd70      	pop	{r4, r5, r6, pc}

0000c4ce <__multadd>:
    c4ce:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    c4d0:	1c1e      	adds	r6, r3, #0
    c4d2:	2314      	movs	r3, #20
    c4d4:	469c      	mov	ip, r3
    c4d6:	1c07      	adds	r7, r0, #0
    c4d8:	1c0c      	adds	r4, r1, #0
    c4da:	2000      	movs	r0, #0
    c4dc:	690d      	ldr	r5, [r1, #16]
    c4de:	448c      	add	ip, r1
    c4e0:	4663      	mov	r3, ip
    c4e2:	8819      	ldrh	r1, [r3, #0]
    c4e4:	681b      	ldr	r3, [r3, #0]
    c4e6:	4351      	muls	r1, r2
    c4e8:	0c1b      	lsrs	r3, r3, #16
    c4ea:	4353      	muls	r3, r2
    c4ec:	1989      	adds	r1, r1, r6
    c4ee:	0c0e      	lsrs	r6, r1, #16
    c4f0:	18f3      	adds	r3, r6, r3
    c4f2:	b289      	uxth	r1, r1
    c4f4:	0c1e      	lsrs	r6, r3, #16
    c4f6:	041b      	lsls	r3, r3, #16
    c4f8:	185b      	adds	r3, r3, r1
    c4fa:	4661      	mov	r1, ip
    c4fc:	3001      	adds	r0, #1
    c4fe:	c108      	stmia	r1!, {r3}
    c500:	468c      	mov	ip, r1
    c502:	42a8      	cmp	r0, r5
    c504:	dbec      	blt.n	c4e0 <__multadd+0x12>
    c506:	2e00      	cmp	r6, #0
    c508:	d01b      	beq.n	c542 <__multadd+0x74>
    c50a:	68a3      	ldr	r3, [r4, #8]
    c50c:	429d      	cmp	r5, r3
    c50e:	db12      	blt.n	c536 <__multadd+0x68>
    c510:	6863      	ldr	r3, [r4, #4]
    c512:	1c38      	adds	r0, r7, #0
    c514:	1c59      	adds	r1, r3, #1
    c516:	f7ff ff89 	bl	c42c <_Balloc>
    c51a:	1c21      	adds	r1, r4, #0
    c51c:	6923      	ldr	r3, [r4, #16]
    c51e:	9001      	str	r0, [sp, #4]
    c520:	1c9a      	adds	r2, r3, #2
    c522:	310c      	adds	r1, #12
    c524:	0092      	lsls	r2, r2, #2
    c526:	300c      	adds	r0, #12
    c528:	f7fc f8ef 	bl	870a <memcpy>
    c52c:	1c21      	adds	r1, r4, #0
    c52e:	1c38      	adds	r0, r7, #0
    c530:	f7ff ffb4 	bl	c49c <_Bfree>
    c534:	9c01      	ldr	r4, [sp, #4]
    c536:	1d2b      	adds	r3, r5, #4
    c538:	009b      	lsls	r3, r3, #2
    c53a:	18e3      	adds	r3, r4, r3
    c53c:	3501      	adds	r5, #1
    c53e:	605e      	str	r6, [r3, #4]
    c540:	6125      	str	r5, [r4, #16]
    c542:	1c20      	adds	r0, r4, #0
    c544:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0000c546 <__s2b>:
    c546:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    c548:	1c06      	adds	r6, r0, #0
    c54a:	1c18      	adds	r0, r3, #0
    c54c:	1c0c      	adds	r4, r1, #0
    c54e:	3008      	adds	r0, #8
    c550:	2109      	movs	r1, #9
    c552:	9301      	str	r3, [sp, #4]
    c554:	1c15      	adds	r5, r2, #0
    c556:	f7f9 fce5 	bl	5f24 <__aeabi_idiv>
    c55a:	2301      	movs	r3, #1
    c55c:	2100      	movs	r1, #0
    c55e:	4298      	cmp	r0, r3
    c560:	dd02      	ble.n	c568 <__s2b+0x22>
    c562:	005b      	lsls	r3, r3, #1
    c564:	3101      	adds	r1, #1
    c566:	e7fa      	b.n	c55e <__s2b+0x18>
    c568:	1c30      	adds	r0, r6, #0
    c56a:	f7ff ff5f 	bl	c42c <_Balloc>
    c56e:	9b08      	ldr	r3, [sp, #32]
    c570:	1c01      	adds	r1, r0, #0
    c572:	6143      	str	r3, [r0, #20]
    c574:	2301      	movs	r3, #1
    c576:	6103      	str	r3, [r0, #16]
    c578:	2d09      	cmp	r5, #9
    c57a:	dd12      	ble.n	c5a2 <__s2b+0x5c>
    c57c:	1c23      	adds	r3, r4, #0
    c57e:	3309      	adds	r3, #9
    c580:	1c1f      	adds	r7, r3, #0
    c582:	9300      	str	r3, [sp, #0]
    c584:	1964      	adds	r4, r4, r5
    c586:	783b      	ldrb	r3, [r7, #0]
    c588:	1c30      	adds	r0, r6, #0
    c58a:	3b30      	subs	r3, #48	; 0x30
    c58c:	220a      	movs	r2, #10
    c58e:	f7ff ff9e 	bl	c4ce <__multadd>
    c592:	3701      	adds	r7, #1
    c594:	1c01      	adds	r1, r0, #0
    c596:	42a7      	cmp	r7, r4
    c598:	d1f5      	bne.n	c586 <__s2b+0x40>
    c59a:	9b00      	ldr	r3, [sp, #0]
    c59c:	195c      	adds	r4, r3, r5
    c59e:	3c08      	subs	r4, #8
    c5a0:	e001      	b.n	c5a6 <__s2b+0x60>
    c5a2:	2509      	movs	r5, #9
    c5a4:	340a      	adds	r4, #10
    c5a6:	1c2f      	adds	r7, r5, #0
    c5a8:	9b01      	ldr	r3, [sp, #4]
    c5aa:	429f      	cmp	r7, r3
    c5ac:	da09      	bge.n	c5c2 <__s2b+0x7c>
    c5ae:	1b63      	subs	r3, r4, r5
    c5b0:	5ddb      	ldrb	r3, [r3, r7]
    c5b2:	1c30      	adds	r0, r6, #0
    c5b4:	3b30      	subs	r3, #48	; 0x30
    c5b6:	220a      	movs	r2, #10
    c5b8:	f7ff ff89 	bl	c4ce <__multadd>
    c5bc:	3701      	adds	r7, #1
    c5be:	1c01      	adds	r1, r0, #0
    c5c0:	e7f2      	b.n	c5a8 <__s2b+0x62>
    c5c2:	1c08      	adds	r0, r1, #0
    c5c4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

0000c5c6 <__hi0bits>:
    c5c6:	2200      	movs	r2, #0
    c5c8:	1c03      	adds	r3, r0, #0
    c5ca:	0c01      	lsrs	r1, r0, #16
    c5cc:	4291      	cmp	r1, r2
    c5ce:	d101      	bne.n	c5d4 <__hi0bits+0xe>
    c5d0:	0403      	lsls	r3, r0, #16
    c5d2:	3210      	adds	r2, #16
    c5d4:	0e19      	lsrs	r1, r3, #24
    c5d6:	d101      	bne.n	c5dc <__hi0bits+0x16>
    c5d8:	3208      	adds	r2, #8
    c5da:	021b      	lsls	r3, r3, #8
    c5dc:	0f19      	lsrs	r1, r3, #28
    c5de:	d101      	bne.n	c5e4 <__hi0bits+0x1e>
    c5e0:	3204      	adds	r2, #4
    c5e2:	011b      	lsls	r3, r3, #4
    c5e4:	0f99      	lsrs	r1, r3, #30
    c5e6:	d101      	bne.n	c5ec <__hi0bits+0x26>
    c5e8:	3202      	adds	r2, #2
    c5ea:	009b      	lsls	r3, r3, #2
    c5ec:	1c10      	adds	r0, r2, #0
    c5ee:	2b00      	cmp	r3, #0
    c5f0:	db03      	blt.n	c5fa <__hi0bits+0x34>
    c5f2:	2020      	movs	r0, #32
    c5f4:	005b      	lsls	r3, r3, #1
    c5f6:	d500      	bpl.n	c5fa <__hi0bits+0x34>
    c5f8:	1c50      	adds	r0, r2, #1
    c5fa:	4770      	bx	lr

0000c5fc <__lo0bits>:
    c5fc:	2207      	movs	r2, #7
    c5fe:	6803      	ldr	r3, [r0, #0]
    c600:	b510      	push	{r4, lr}
    c602:	1c01      	adds	r1, r0, #0
    c604:	401a      	ands	r2, r3
    c606:	d00c      	beq.n	c622 <__lo0bits+0x26>
    c608:	2401      	movs	r4, #1
    c60a:	2000      	movs	r0, #0
    c60c:	4223      	tst	r3, r4
    c60e:	d123      	bne.n	c658 <__lo0bits+0x5c>
    c610:	2202      	movs	r2, #2
    c612:	4213      	tst	r3, r2
    c614:	d003      	beq.n	c61e <__lo0bits+0x22>
    c616:	40e3      	lsrs	r3, r4
    c618:	1c20      	adds	r0, r4, #0
    c61a:	600b      	str	r3, [r1, #0]
    c61c:	e01c      	b.n	c658 <__lo0bits+0x5c>
    c61e:	089b      	lsrs	r3, r3, #2
    c620:	e018      	b.n	c654 <__lo0bits+0x58>
    c622:	b298      	uxth	r0, r3
    c624:	2800      	cmp	r0, #0
    c626:	d101      	bne.n	c62c <__lo0bits+0x30>
    c628:	2210      	movs	r2, #16
    c62a:	0c1b      	lsrs	r3, r3, #16
    c62c:	b2d8      	uxtb	r0, r3
    c62e:	2800      	cmp	r0, #0
    c630:	d101      	bne.n	c636 <__lo0bits+0x3a>
    c632:	3208      	adds	r2, #8
    c634:	0a1b      	lsrs	r3, r3, #8
    c636:	0718      	lsls	r0, r3, #28
    c638:	d101      	bne.n	c63e <__lo0bits+0x42>
    c63a:	3204      	adds	r2, #4
    c63c:	091b      	lsrs	r3, r3, #4
    c63e:	0798      	lsls	r0, r3, #30
    c640:	d101      	bne.n	c646 <__lo0bits+0x4a>
    c642:	3202      	adds	r2, #2
    c644:	089b      	lsrs	r3, r3, #2
    c646:	07d8      	lsls	r0, r3, #31
    c648:	d404      	bmi.n	c654 <__lo0bits+0x58>
    c64a:	085b      	lsrs	r3, r3, #1
    c64c:	2020      	movs	r0, #32
    c64e:	2b00      	cmp	r3, #0
    c650:	d002      	beq.n	c658 <__lo0bits+0x5c>
    c652:	3201      	adds	r2, #1
    c654:	1c10      	adds	r0, r2, #0
    c656:	600b      	str	r3, [r1, #0]
    c658:	bd10      	pop	{r4, pc}

0000c65a <__i2b>:
    c65a:	b510      	push	{r4, lr}
    c65c:	1c0c      	adds	r4, r1, #0
    c65e:	2101      	movs	r1, #1
    c660:	f7ff fee4 	bl	c42c <_Balloc>
    c664:	2301      	movs	r3, #1
    c666:	6144      	str	r4, [r0, #20]
    c668:	6103      	str	r3, [r0, #16]
    c66a:	bd10      	pop	{r4, pc}

0000c66c <__multiply>:
    c66c:	b5f0      	push	{r4, r5, r6, r7, lr}
    c66e:	690b      	ldr	r3, [r1, #16]
    c670:	1c14      	adds	r4, r2, #0
    c672:	6912      	ldr	r2, [r2, #16]
    c674:	b089      	sub	sp, #36	; 0x24
    c676:	1c0d      	adds	r5, r1, #0
    c678:	4293      	cmp	r3, r2
    c67a:	da01      	bge.n	c680 <__multiply+0x14>
    c67c:	1c25      	adds	r5, r4, #0
    c67e:	1c0c      	adds	r4, r1, #0
    c680:	692f      	ldr	r7, [r5, #16]
    c682:	6926      	ldr	r6, [r4, #16]
    c684:	68aa      	ldr	r2, [r5, #8]
    c686:	19bb      	adds	r3, r7, r6
    c688:	6869      	ldr	r1, [r5, #4]
    c68a:	9300      	str	r3, [sp, #0]
    c68c:	4293      	cmp	r3, r2
    c68e:	dd00      	ble.n	c692 <__multiply+0x26>
    c690:	3101      	adds	r1, #1
    c692:	f7ff fecb 	bl	c42c <_Balloc>
    c696:	1c01      	adds	r1, r0, #0
    c698:	9b00      	ldr	r3, [sp, #0]
    c69a:	3114      	adds	r1, #20
    c69c:	4684      	mov	ip, r0
    c69e:	0098      	lsls	r0, r3, #2
    c6a0:	1c0b      	adds	r3, r1, #0
    c6a2:	1808      	adds	r0, r1, r0
    c6a4:	4283      	cmp	r3, r0
    c6a6:	d202      	bcs.n	c6ae <__multiply+0x42>
    c6a8:	2200      	movs	r2, #0
    c6aa:	c304      	stmia	r3!, {r2}
    c6ac:	e7fa      	b.n	c6a4 <__multiply+0x38>
    c6ae:	3514      	adds	r5, #20
    c6b0:	00bf      	lsls	r7, r7, #2
    c6b2:	19eb      	adds	r3, r5, r7
    c6b4:	3414      	adds	r4, #20
    c6b6:	00b6      	lsls	r6, r6, #2
    c6b8:	9304      	str	r3, [sp, #16]
    c6ba:	19a3      	adds	r3, r4, r6
    c6bc:	9502      	str	r5, [sp, #8]
    c6be:	9306      	str	r3, [sp, #24]
    c6c0:	9b06      	ldr	r3, [sp, #24]
    c6c2:	429c      	cmp	r4, r3
    c6c4:	d256      	bcs.n	c774 <__multiply+0x108>
    c6c6:	8823      	ldrh	r3, [r4, #0]
    c6c8:	9303      	str	r3, [sp, #12]
    c6ca:	2b00      	cmp	r3, #0
    c6cc:	d022      	beq.n	c714 <__multiply+0xa8>
    c6ce:	1c0e      	adds	r6, r1, #0
    c6d0:	2700      	movs	r7, #0
    c6d2:	9b02      	ldr	r3, [sp, #8]
    c6d4:	9301      	str	r3, [sp, #4]
    c6d6:	9b01      	ldr	r3, [sp, #4]
    c6d8:	9d03      	ldr	r5, [sp, #12]
    c6da:	cb04      	ldmia	r3!, {r2}
    c6dc:	9605      	str	r6, [sp, #20]
    c6de:	9301      	str	r3, [sp, #4]
    c6e0:	8833      	ldrh	r3, [r6, #0]
    c6e2:	9307      	str	r3, [sp, #28]
    c6e4:	b293      	uxth	r3, r2
    c6e6:	436b      	muls	r3, r5
    c6e8:	9d07      	ldr	r5, [sp, #28]
    c6ea:	0c12      	lsrs	r2, r2, #16
    c6ec:	18eb      	adds	r3, r5, r3
    c6ee:	6835      	ldr	r5, [r6, #0]
    c6f0:	19db      	adds	r3, r3, r7
    c6f2:	0c2f      	lsrs	r7, r5, #16
    c6f4:	9d03      	ldr	r5, [sp, #12]
    c6f6:	436a      	muls	r2, r5
    c6f8:	18ba      	adds	r2, r7, r2
    c6fa:	0c1f      	lsrs	r7, r3, #16
    c6fc:	19d2      	adds	r2, r2, r7
    c6fe:	0c17      	lsrs	r7, r2, #16
    c700:	b29b      	uxth	r3, r3
    c702:	0412      	lsls	r2, r2, #16
    c704:	4313      	orrs	r3, r2
    c706:	c608      	stmia	r6!, {r3}
    c708:	9a01      	ldr	r2, [sp, #4]
    c70a:	9b04      	ldr	r3, [sp, #16]
    c70c:	429a      	cmp	r2, r3
    c70e:	d3e2      	bcc.n	c6d6 <__multiply+0x6a>
    c710:	9b05      	ldr	r3, [sp, #20]
    c712:	605f      	str	r7, [r3, #4]
    c714:	6823      	ldr	r3, [r4, #0]
    c716:	0c1b      	lsrs	r3, r3, #16
    c718:	9301      	str	r3, [sp, #4]
    c71a:	d021      	beq.n	c760 <__multiply+0xf4>
    c71c:	2200      	movs	r2, #0
    c71e:	1c0d      	adds	r5, r1, #0
    c720:	680b      	ldr	r3, [r1, #0]
    c722:	9f02      	ldr	r7, [sp, #8]
    c724:	9203      	str	r2, [sp, #12]
    c726:	883e      	ldrh	r6, [r7, #0]
    c728:	9a01      	ldr	r2, [sp, #4]
    c72a:	b29b      	uxth	r3, r3
    c72c:	4356      	muls	r6, r2
    c72e:	682a      	ldr	r2, [r5, #0]
    c730:	9505      	str	r5, [sp, #20]
    c732:	0c12      	lsrs	r2, r2, #16
    c734:	18b2      	adds	r2, r6, r2
    c736:	9e03      	ldr	r6, [sp, #12]
    c738:	1992      	adds	r2, r2, r6
    c73a:	0416      	lsls	r6, r2, #16
    c73c:	4333      	orrs	r3, r6
    c73e:	602b      	str	r3, [r5, #0]
    c740:	cf08      	ldmia	r7!, {r3}
    c742:	9e01      	ldr	r6, [sp, #4]
    c744:	0c1b      	lsrs	r3, r3, #16
    c746:	4373      	muls	r3, r6
    c748:	88ae      	ldrh	r6, [r5, #4]
    c74a:	0c12      	lsrs	r2, r2, #16
    c74c:	199b      	adds	r3, r3, r6
    c74e:	189b      	adds	r3, r3, r2
    c750:	0c1a      	lsrs	r2, r3, #16
    c752:	9203      	str	r2, [sp, #12]
    c754:	9a04      	ldr	r2, [sp, #16]
    c756:	3504      	adds	r5, #4
    c758:	42ba      	cmp	r2, r7
    c75a:	d8e4      	bhi.n	c726 <__multiply+0xba>
    c75c:	9a05      	ldr	r2, [sp, #20]
    c75e:	6053      	str	r3, [r2, #4]
    c760:	3404      	adds	r4, #4
    c762:	3104      	adds	r1, #4
    c764:	e7ac      	b.n	c6c0 <__multiply+0x54>
    c766:	3804      	subs	r0, #4
    c768:	6803      	ldr	r3, [r0, #0]
    c76a:	2b00      	cmp	r3, #0
    c76c:	d105      	bne.n	c77a <__multiply+0x10e>
    c76e:	9b00      	ldr	r3, [sp, #0]
    c770:	3b01      	subs	r3, #1
    c772:	9300      	str	r3, [sp, #0]
    c774:	9b00      	ldr	r3, [sp, #0]
    c776:	2b00      	cmp	r3, #0
    c778:	dcf5      	bgt.n	c766 <__multiply+0xfa>
    c77a:	4663      	mov	r3, ip
    c77c:	4660      	mov	r0, ip
    c77e:	9a00      	ldr	r2, [sp, #0]
    c780:	611a      	str	r2, [r3, #16]
    c782:	b009      	add	sp, #36	; 0x24
    c784:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0000c788 <__pow5mult>:
    c788:	2303      	movs	r3, #3
    c78a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    c78c:	4013      	ands	r3, r2
    c78e:	1c05      	adds	r5, r0, #0
    c790:	1c0e      	adds	r6, r1, #0
    c792:	1c14      	adds	r4, r2, #0
    c794:	2b00      	cmp	r3, #0
    c796:	d007      	beq.n	c7a8 <__pow5mult+0x20>
    c798:	4a22      	ldr	r2, [pc, #136]	; (c824 <__pow5mult+0x9c>)
    c79a:	3b01      	subs	r3, #1
    c79c:	009b      	lsls	r3, r3, #2
    c79e:	589a      	ldr	r2, [r3, r2]
    c7a0:	2300      	movs	r3, #0
    c7a2:	f7ff fe94 	bl	c4ce <__multadd>
    c7a6:	1c06      	adds	r6, r0, #0
    c7a8:	10a3      	asrs	r3, r4, #2
    c7aa:	9301      	str	r3, [sp, #4]
    c7ac:	d037      	beq.n	c81e <__pow5mult+0x96>
    c7ae:	6a6c      	ldr	r4, [r5, #36]	; 0x24
    c7b0:	2c00      	cmp	r4, #0
    c7b2:	d107      	bne.n	c7c4 <__pow5mult+0x3c>
    c7b4:	2010      	movs	r0, #16
    c7b6:	f7fb ff89 	bl	86cc <malloc>
    c7ba:	6268      	str	r0, [r5, #36]	; 0x24
    c7bc:	6044      	str	r4, [r0, #4]
    c7be:	6084      	str	r4, [r0, #8]
    c7c0:	6004      	str	r4, [r0, #0]
    c7c2:	60c4      	str	r4, [r0, #12]
    c7c4:	6a6f      	ldr	r7, [r5, #36]	; 0x24
    c7c6:	68bc      	ldr	r4, [r7, #8]
    c7c8:	2c00      	cmp	r4, #0
    c7ca:	d110      	bne.n	c7ee <__pow5mult+0x66>
    c7cc:	1c28      	adds	r0, r5, #0
    c7ce:	4916      	ldr	r1, [pc, #88]	; (c828 <__pow5mult+0xa0>)
    c7d0:	f7ff ff43 	bl	c65a <__i2b>
    c7d4:	2300      	movs	r3, #0
    c7d6:	60b8      	str	r0, [r7, #8]
    c7d8:	1c04      	adds	r4, r0, #0
    c7da:	6003      	str	r3, [r0, #0]
    c7dc:	e007      	b.n	c7ee <__pow5mult+0x66>
    c7de:	9b01      	ldr	r3, [sp, #4]
    c7e0:	105b      	asrs	r3, r3, #1
    c7e2:	9301      	str	r3, [sp, #4]
    c7e4:	d01b      	beq.n	c81e <__pow5mult+0x96>
    c7e6:	6820      	ldr	r0, [r4, #0]
    c7e8:	2800      	cmp	r0, #0
    c7ea:	d00f      	beq.n	c80c <__pow5mult+0x84>
    c7ec:	1c04      	adds	r4, r0, #0
    c7ee:	9b01      	ldr	r3, [sp, #4]
    c7f0:	07db      	lsls	r3, r3, #31
    c7f2:	d5f4      	bpl.n	c7de <__pow5mult+0x56>
    c7f4:	1c31      	adds	r1, r6, #0
    c7f6:	1c22      	adds	r2, r4, #0
    c7f8:	1c28      	adds	r0, r5, #0
    c7fa:	f7ff ff37 	bl	c66c <__multiply>
    c7fe:	1c07      	adds	r7, r0, #0
    c800:	1c31      	adds	r1, r6, #0
    c802:	1c28      	adds	r0, r5, #0
    c804:	f7ff fe4a 	bl	c49c <_Bfree>
    c808:	1c3e      	adds	r6, r7, #0
    c80a:	e7e8      	b.n	c7de <__pow5mult+0x56>
    c80c:	1c28      	adds	r0, r5, #0
    c80e:	1c21      	adds	r1, r4, #0
    c810:	1c22      	adds	r2, r4, #0
    c812:	f7ff ff2b 	bl	c66c <__multiply>
    c816:	2300      	movs	r3, #0
    c818:	6020      	str	r0, [r4, #0]
    c81a:	6003      	str	r3, [r0, #0]
    c81c:	e7e6      	b.n	c7ec <__pow5mult+0x64>
    c81e:	1c30      	adds	r0, r6, #0
    c820:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    c822:	46c0      	nop			; (mov r8, r8)
    c824:	0000e658 	.word	0x0000e658
    c828:	00000271 	.word	0x00000271

0000c82c <__lshift>:
    c82c:	b5f0      	push	{r4, r5, r6, r7, lr}
    c82e:	1c0c      	adds	r4, r1, #0
    c830:	1c17      	adds	r7, r2, #0
    c832:	6923      	ldr	r3, [r4, #16]
    c834:	1155      	asrs	r5, r2, #5
    c836:	b085      	sub	sp, #20
    c838:	18eb      	adds	r3, r5, r3
    c83a:	9301      	str	r3, [sp, #4]
    c83c:	3301      	adds	r3, #1
    c83e:	9300      	str	r3, [sp, #0]
    c840:	6849      	ldr	r1, [r1, #4]
    c842:	68a3      	ldr	r3, [r4, #8]
    c844:	9002      	str	r0, [sp, #8]
    c846:	9a00      	ldr	r2, [sp, #0]
    c848:	429a      	cmp	r2, r3
    c84a:	dd02      	ble.n	c852 <__lshift+0x26>
    c84c:	3101      	adds	r1, #1
    c84e:	005b      	lsls	r3, r3, #1
    c850:	e7f9      	b.n	c846 <__lshift+0x1a>
    c852:	9802      	ldr	r0, [sp, #8]
    c854:	f7ff fdea 	bl	c42c <_Balloc>
    c858:	1c02      	adds	r2, r0, #0
    c85a:	1c06      	adds	r6, r0, #0
    c85c:	2300      	movs	r3, #0
    c85e:	3214      	adds	r2, #20
    c860:	42ab      	cmp	r3, r5
    c862:	da04      	bge.n	c86e <__lshift+0x42>
    c864:	2000      	movs	r0, #0
    c866:	0099      	lsls	r1, r3, #2
    c868:	5050      	str	r0, [r2, r1]
    c86a:	3301      	adds	r3, #1
    c86c:	e7f8      	b.n	c860 <__lshift+0x34>
    c86e:	43eb      	mvns	r3, r5
    c870:	17db      	asrs	r3, r3, #31
    c872:	401d      	ands	r5, r3
    c874:	1c23      	adds	r3, r4, #0
    c876:	00ad      	lsls	r5, r5, #2
    c878:	1955      	adds	r5, r2, r5
    c87a:	6922      	ldr	r2, [r4, #16]
    c87c:	3314      	adds	r3, #20
    c87e:	0092      	lsls	r2, r2, #2
    c880:	189a      	adds	r2, r3, r2
    c882:	4694      	mov	ip, r2
    c884:	221f      	movs	r2, #31
    c886:	4017      	ands	r7, r2
    c888:	d014      	beq.n	c8b4 <__lshift+0x88>
    c88a:	3201      	adds	r2, #1
    c88c:	1bd2      	subs	r2, r2, r7
    c88e:	9203      	str	r2, [sp, #12]
    c890:	2200      	movs	r2, #0
    c892:	6819      	ldr	r1, [r3, #0]
    c894:	1c28      	adds	r0, r5, #0
    c896:	40b9      	lsls	r1, r7
    c898:	430a      	orrs	r2, r1
    c89a:	c504      	stmia	r5!, {r2}
    c89c:	cb04      	ldmia	r3!, {r2}
    c89e:	9903      	ldr	r1, [sp, #12]
    c8a0:	40ca      	lsrs	r2, r1
    c8a2:	459c      	cmp	ip, r3
    c8a4:	d8f5      	bhi.n	c892 <__lshift+0x66>
    c8a6:	6042      	str	r2, [r0, #4]
    c8a8:	2a00      	cmp	r2, #0
    c8aa:	d007      	beq.n	c8bc <__lshift+0x90>
    c8ac:	9b01      	ldr	r3, [sp, #4]
    c8ae:	3302      	adds	r3, #2
    c8b0:	9300      	str	r3, [sp, #0]
    c8b2:	e003      	b.n	c8bc <__lshift+0x90>
    c8b4:	cb04      	ldmia	r3!, {r2}
    c8b6:	c504      	stmia	r5!, {r2}
    c8b8:	459c      	cmp	ip, r3
    c8ba:	d8fb      	bhi.n	c8b4 <__lshift+0x88>
    c8bc:	9b00      	ldr	r3, [sp, #0]
    c8be:	9802      	ldr	r0, [sp, #8]
    c8c0:	3b01      	subs	r3, #1
    c8c2:	6133      	str	r3, [r6, #16]
    c8c4:	1c21      	adds	r1, r4, #0
    c8c6:	f7ff fde9 	bl	c49c <_Bfree>
    c8ca:	1c30      	adds	r0, r6, #0
    c8cc:	b005      	add	sp, #20
    c8ce:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000c8d0 <__mcmp>:
    c8d0:	6903      	ldr	r3, [r0, #16]
    c8d2:	690a      	ldr	r2, [r1, #16]
    c8d4:	b510      	push	{r4, lr}
    c8d6:	1a9b      	subs	r3, r3, r2
    c8d8:	1c04      	adds	r4, r0, #0
    c8da:	1e18      	subs	r0, r3, #0
    c8dc:	d112      	bne.n	c904 <__mcmp+0x34>
    c8de:	0093      	lsls	r3, r2, #2
    c8e0:	3414      	adds	r4, #20
    c8e2:	3114      	adds	r1, #20
    c8e4:	18e2      	adds	r2, r4, r3
    c8e6:	18c9      	adds	r1, r1, r3
    c8e8:	3a04      	subs	r2, #4
    c8ea:	3904      	subs	r1, #4
    c8ec:	6813      	ldr	r3, [r2, #0]
    c8ee:	6808      	ldr	r0, [r1, #0]
    c8f0:	4283      	cmp	r3, r0
    c8f2:	d004      	beq.n	c8fe <__mcmp+0x2e>
    c8f4:	4283      	cmp	r3, r0
    c8f6:	419b      	sbcs	r3, r3
    c8f8:	2001      	movs	r0, #1
    c8fa:	4318      	orrs	r0, r3
    c8fc:	e002      	b.n	c904 <__mcmp+0x34>
    c8fe:	42a2      	cmp	r2, r4
    c900:	d8f2      	bhi.n	c8e8 <__mcmp+0x18>
    c902:	2000      	movs	r0, #0
    c904:	bd10      	pop	{r4, pc}

0000c906 <__mdiff>:
    c906:	b5f0      	push	{r4, r5, r6, r7, lr}
    c908:	1c07      	adds	r7, r0, #0
    c90a:	b085      	sub	sp, #20
    c90c:	1c08      	adds	r0, r1, #0
    c90e:	1c0c      	adds	r4, r1, #0
    c910:	1c11      	adds	r1, r2, #0
    c912:	1c15      	adds	r5, r2, #0
    c914:	f7ff ffdc 	bl	c8d0 <__mcmp>
    c918:	1e06      	subs	r6, r0, #0
    c91a:	d107      	bne.n	c92c <__mdiff+0x26>
    c91c:	1c38      	adds	r0, r7, #0
    c91e:	1c31      	adds	r1, r6, #0
    c920:	f7ff fd84 	bl	c42c <_Balloc>
    c924:	2301      	movs	r3, #1
    c926:	6146      	str	r6, [r0, #20]
    c928:	6103      	str	r3, [r0, #16]
    c92a:	e055      	b.n	c9d8 <__mdiff+0xd2>
    c92c:	2300      	movs	r3, #0
    c92e:	9301      	str	r3, [sp, #4]
    c930:	4298      	cmp	r0, r3
    c932:	da04      	bge.n	c93e <__mdiff+0x38>
    c934:	1c23      	adds	r3, r4, #0
    c936:	1c2c      	adds	r4, r5, #0
    c938:	1c1d      	adds	r5, r3, #0
    c93a:	2301      	movs	r3, #1
    c93c:	9301      	str	r3, [sp, #4]
    c93e:	1c38      	adds	r0, r7, #0
    c940:	6861      	ldr	r1, [r4, #4]
    c942:	f7ff fd73 	bl	c42c <_Balloc>
    c946:	9b01      	ldr	r3, [sp, #4]
    c948:	6926      	ldr	r6, [r4, #16]
    c94a:	1c2f      	adds	r7, r5, #0
    c94c:	60c3      	str	r3, [r0, #12]
    c94e:	3414      	adds	r4, #20
    c950:	00b3      	lsls	r3, r6, #2
    c952:	18e3      	adds	r3, r4, r3
    c954:	1c02      	adds	r2, r0, #0
    c956:	9302      	str	r3, [sp, #8]
    c958:	692b      	ldr	r3, [r5, #16]
    c95a:	2500      	movs	r5, #0
    c95c:	3714      	adds	r7, #20
    c95e:	009b      	lsls	r3, r3, #2
    c960:	18fb      	adds	r3, r7, r3
    c962:	9303      	str	r3, [sp, #12]
    c964:	3214      	adds	r2, #20
    c966:	cc08      	ldmia	r4!, {r3}
    c968:	4669      	mov	r1, sp
    c96a:	469c      	mov	ip, r3
    c96c:	cf08      	ldmia	r7!, {r3}
    c96e:	3204      	adds	r2, #4
    c970:	9300      	str	r3, [sp, #0]
    c972:	4663      	mov	r3, ip
    c974:	808b      	strh	r3, [r1, #4]
    c976:	888b      	ldrh	r3, [r1, #4]
    c978:	195d      	adds	r5, r3, r5
    c97a:	9b00      	ldr	r3, [sp, #0]
    c97c:	b29b      	uxth	r3, r3
    c97e:	1aeb      	subs	r3, r5, r3
    c980:	4665      	mov	r5, ip
    c982:	9301      	str	r3, [sp, #4]
    c984:	9b00      	ldr	r3, [sp, #0]
    c986:	0c2d      	lsrs	r5, r5, #16
    c988:	0c19      	lsrs	r1, r3, #16
    c98a:	9b01      	ldr	r3, [sp, #4]
    c98c:	1a69      	subs	r1, r5, r1
    c98e:	141d      	asrs	r5, r3, #16
    c990:	1f13      	subs	r3, r2, #4
    c992:	469c      	mov	ip, r3
    c994:	466b      	mov	r3, sp
    c996:	1949      	adds	r1, r1, r5
    c998:	889b      	ldrh	r3, [r3, #4]
    c99a:	140d      	asrs	r5, r1, #16
    c99c:	0409      	lsls	r1, r1, #16
    c99e:	430b      	orrs	r3, r1
    c9a0:	4661      	mov	r1, ip
    c9a2:	600b      	str	r3, [r1, #0]
    c9a4:	9b03      	ldr	r3, [sp, #12]
    c9a6:	429f      	cmp	r7, r3
    c9a8:	d3dd      	bcc.n	c966 <__mdiff+0x60>
    c9aa:	9902      	ldr	r1, [sp, #8]
    c9ac:	1c13      	adds	r3, r2, #0
    c9ae:	428c      	cmp	r4, r1
    c9b0:	d20b      	bcs.n	c9ca <__mdiff+0xc4>
    c9b2:	cc08      	ldmia	r4!, {r3}
    c9b4:	b299      	uxth	r1, r3
    c9b6:	1949      	adds	r1, r1, r5
    c9b8:	140d      	asrs	r5, r1, #16
    c9ba:	0c1b      	lsrs	r3, r3, #16
    c9bc:	18eb      	adds	r3, r5, r3
    c9be:	141d      	asrs	r5, r3, #16
    c9c0:	b289      	uxth	r1, r1
    c9c2:	041b      	lsls	r3, r3, #16
    c9c4:	430b      	orrs	r3, r1
    c9c6:	c208      	stmia	r2!, {r3}
    c9c8:	e7ef      	b.n	c9aa <__mdiff+0xa4>
    c9ca:	3b04      	subs	r3, #4
    c9cc:	681a      	ldr	r2, [r3, #0]
    c9ce:	2a00      	cmp	r2, #0
    c9d0:	d101      	bne.n	c9d6 <__mdiff+0xd0>
    c9d2:	3e01      	subs	r6, #1
    c9d4:	e7f9      	b.n	c9ca <__mdiff+0xc4>
    c9d6:	6106      	str	r6, [r0, #16]
    c9d8:	b005      	add	sp, #20
    c9da:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000c9dc <__ulp>:
    c9dc:	4b0f      	ldr	r3, [pc, #60]	; (ca1c <__ulp+0x40>)
    c9de:	b510      	push	{r4, lr}
    c9e0:	4019      	ands	r1, r3
    c9e2:	4b0f      	ldr	r3, [pc, #60]	; (ca20 <__ulp+0x44>)
    c9e4:	18c9      	adds	r1, r1, r3
    c9e6:	2900      	cmp	r1, #0
    c9e8:	dd02      	ble.n	c9f0 <__ulp+0x14>
    c9ea:	2200      	movs	r2, #0
    c9ec:	1c0b      	adds	r3, r1, #0
    c9ee:	e011      	b.n	ca14 <__ulp+0x38>
    c9f0:	4249      	negs	r1, r1
    c9f2:	1509      	asrs	r1, r1, #20
    c9f4:	2200      	movs	r2, #0
    c9f6:	2300      	movs	r3, #0
    c9f8:	2913      	cmp	r1, #19
    c9fa:	dc04      	bgt.n	ca06 <__ulp+0x2a>
    c9fc:	2080      	movs	r0, #128	; 0x80
    c9fe:	0300      	lsls	r0, r0, #12
    ca00:	4108      	asrs	r0, r1
    ca02:	1c03      	adds	r3, r0, #0
    ca04:	e006      	b.n	ca14 <__ulp+0x38>
    ca06:	2001      	movs	r0, #1
    ca08:	2932      	cmp	r1, #50	; 0x32
    ca0a:	dc02      	bgt.n	ca12 <__ulp+0x36>
    ca0c:	2433      	movs	r4, #51	; 0x33
    ca0e:	1a61      	subs	r1, r4, r1
    ca10:	4088      	lsls	r0, r1
    ca12:	1c02      	adds	r2, r0, #0
    ca14:	1c10      	adds	r0, r2, #0
    ca16:	1c19      	adds	r1, r3, #0
    ca18:	bd10      	pop	{r4, pc}
    ca1a:	46c0      	nop			; (mov r8, r8)
    ca1c:	7ff00000 	.word	0x7ff00000
    ca20:	fcc00000 	.word	0xfcc00000

0000ca24 <__b2d>:
    ca24:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    ca26:	1c06      	adds	r6, r0, #0
    ca28:	6903      	ldr	r3, [r0, #16]
    ca2a:	3614      	adds	r6, #20
    ca2c:	009b      	lsls	r3, r3, #2
    ca2e:	18f3      	adds	r3, r6, r3
    ca30:	1f1d      	subs	r5, r3, #4
    ca32:	682c      	ldr	r4, [r5, #0]
    ca34:	1c0f      	adds	r7, r1, #0
    ca36:	1c20      	adds	r0, r4, #0
    ca38:	9301      	str	r3, [sp, #4]
    ca3a:	f7ff fdc4 	bl	c5c6 <__hi0bits>
    ca3e:	2320      	movs	r3, #32
    ca40:	1a1b      	subs	r3, r3, r0
    ca42:	603b      	str	r3, [r7, #0]
    ca44:	491f      	ldr	r1, [pc, #124]	; (cac4 <__b2d+0xa0>)
    ca46:	280a      	cmp	r0, #10
    ca48:	dc13      	bgt.n	ca72 <__b2d+0x4e>
    ca4a:	230b      	movs	r3, #11
    ca4c:	1c27      	adds	r7, r4, #0
    ca4e:	1a1b      	subs	r3, r3, r0
    ca50:	40df      	lsrs	r7, r3
    ca52:	4339      	orrs	r1, r7
    ca54:	469c      	mov	ip, r3
    ca56:	1c0b      	adds	r3, r1, #0
    ca58:	2100      	movs	r1, #0
    ca5a:	42b5      	cmp	r5, r6
    ca5c:	d902      	bls.n	ca64 <__b2d+0x40>
    ca5e:	9901      	ldr	r1, [sp, #4]
    ca60:	3908      	subs	r1, #8
    ca62:	6809      	ldr	r1, [r1, #0]
    ca64:	4665      	mov	r5, ip
    ca66:	3015      	adds	r0, #21
    ca68:	40e9      	lsrs	r1, r5
    ca6a:	4084      	lsls	r4, r0
    ca6c:	4321      	orrs	r1, r4
    ca6e:	1c0a      	adds	r2, r1, #0
    ca70:	e024      	b.n	cabc <__b2d+0x98>
    ca72:	2700      	movs	r7, #0
    ca74:	42b5      	cmp	r5, r6
    ca76:	d902      	bls.n	ca7e <__b2d+0x5a>
    ca78:	9d01      	ldr	r5, [sp, #4]
    ca7a:	3d08      	subs	r5, #8
    ca7c:	682f      	ldr	r7, [r5, #0]
    ca7e:	230b      	movs	r3, #11
    ca80:	425b      	negs	r3, r3
    ca82:	469c      	mov	ip, r3
    ca84:	4484      	add	ip, r0
    ca86:	4663      	mov	r3, ip
    ca88:	2b00      	cmp	r3, #0
    ca8a:	d014      	beq.n	cab6 <__b2d+0x92>
    ca8c:	232b      	movs	r3, #43	; 0x2b
    ca8e:	1a18      	subs	r0, r3, r0
    ca90:	4663      	mov	r3, ip
    ca92:	409c      	lsls	r4, r3
    ca94:	4321      	orrs	r1, r4
    ca96:	1c3c      	adds	r4, r7, #0
    ca98:	40c4      	lsrs	r4, r0
    ca9a:	4321      	orrs	r1, r4
    ca9c:	1c0b      	adds	r3, r1, #0
    ca9e:	2400      	movs	r4, #0
    caa0:	42b5      	cmp	r5, r6
    caa2:	d901      	bls.n	caa8 <__b2d+0x84>
    caa4:	3d04      	subs	r5, #4
    caa6:	682c      	ldr	r4, [r5, #0]
    caa8:	40c4      	lsrs	r4, r0
    caaa:	4661      	mov	r1, ip
    caac:	1c20      	adds	r0, r4, #0
    caae:	408f      	lsls	r7, r1
    cab0:	4338      	orrs	r0, r7
    cab2:	1c02      	adds	r2, r0, #0
    cab4:	e002      	b.n	cabc <__b2d+0x98>
    cab6:	4321      	orrs	r1, r4
    cab8:	1c0b      	adds	r3, r1, #0
    caba:	1c3a      	adds	r2, r7, #0
    cabc:	1c10      	adds	r0, r2, #0
    cabe:	1c19      	adds	r1, r3, #0
    cac0:	b003      	add	sp, #12
    cac2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    cac4:	3ff00000 	.word	0x3ff00000

0000cac8 <__d2b>:
    cac8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    caca:	1c1d      	adds	r5, r3, #0
    cacc:	2101      	movs	r1, #1
    cace:	9f08      	ldr	r7, [sp, #32]
    cad0:	1c14      	adds	r4, r2, #0
    cad2:	f7ff fcab 	bl	c42c <_Balloc>
    cad6:	032b      	lsls	r3, r5, #12
    cad8:	006d      	lsls	r5, r5, #1
    cada:	1c06      	adds	r6, r0, #0
    cadc:	0b1b      	lsrs	r3, r3, #12
    cade:	0d6d      	lsrs	r5, r5, #21
    cae0:	d002      	beq.n	cae8 <__d2b+0x20>
    cae2:	2280      	movs	r2, #128	; 0x80
    cae4:	0352      	lsls	r2, r2, #13
    cae6:	4313      	orrs	r3, r2
    cae8:	9301      	str	r3, [sp, #4]
    caea:	2c00      	cmp	r4, #0
    caec:	d018      	beq.n	cb20 <__d2b+0x58>
    caee:	4668      	mov	r0, sp
    caf0:	9400      	str	r4, [sp, #0]
    caf2:	f7ff fd83 	bl	c5fc <__lo0bits>
    caf6:	9c00      	ldr	r4, [sp, #0]
    caf8:	2800      	cmp	r0, #0
    cafa:	d009      	beq.n	cb10 <__d2b+0x48>
    cafc:	2320      	movs	r3, #32
    cafe:	9a01      	ldr	r2, [sp, #4]
    cb00:	1a19      	subs	r1, r3, r0
    cb02:	1c13      	adds	r3, r2, #0
    cb04:	408b      	lsls	r3, r1
    cb06:	40c2      	lsrs	r2, r0
    cb08:	4323      	orrs	r3, r4
    cb0a:	6173      	str	r3, [r6, #20]
    cb0c:	9201      	str	r2, [sp, #4]
    cb0e:	e000      	b.n	cb12 <__d2b+0x4a>
    cb10:	6174      	str	r4, [r6, #20]
    cb12:	9c01      	ldr	r4, [sp, #4]
    cb14:	61b4      	str	r4, [r6, #24]
    cb16:	1e63      	subs	r3, r4, #1
    cb18:	419c      	sbcs	r4, r3
    cb1a:	3401      	adds	r4, #1
    cb1c:	6134      	str	r4, [r6, #16]
    cb1e:	e007      	b.n	cb30 <__d2b+0x68>
    cb20:	a801      	add	r0, sp, #4
    cb22:	f7ff fd6b 	bl	c5fc <__lo0bits>
    cb26:	2401      	movs	r4, #1
    cb28:	9b01      	ldr	r3, [sp, #4]
    cb2a:	6134      	str	r4, [r6, #16]
    cb2c:	6173      	str	r3, [r6, #20]
    cb2e:	3020      	adds	r0, #32
    cb30:	2d00      	cmp	r5, #0
    cb32:	d006      	beq.n	cb42 <__d2b+0x7a>
    cb34:	4b0b      	ldr	r3, [pc, #44]	; (cb64 <__d2b+0x9c>)
    cb36:	18ed      	adds	r5, r5, r3
    cb38:	2335      	movs	r3, #53	; 0x35
    cb3a:	182d      	adds	r5, r5, r0
    cb3c:	603d      	str	r5, [r7, #0]
    cb3e:	1a18      	subs	r0, r3, r0
    cb40:	e00b      	b.n	cb5a <__d2b+0x92>
    cb42:	4b09      	ldr	r3, [pc, #36]	; (cb68 <__d2b+0xa0>)
    cb44:	18c0      	adds	r0, r0, r3
    cb46:	4b09      	ldr	r3, [pc, #36]	; (cb6c <__d2b+0xa4>)
    cb48:	6038      	str	r0, [r7, #0]
    cb4a:	18e3      	adds	r3, r4, r3
    cb4c:	009b      	lsls	r3, r3, #2
    cb4e:	18f3      	adds	r3, r6, r3
    cb50:	6958      	ldr	r0, [r3, #20]
    cb52:	f7ff fd38 	bl	c5c6 <__hi0bits>
    cb56:	0164      	lsls	r4, r4, #5
    cb58:	1a20      	subs	r0, r4, r0
    cb5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    cb5c:	6018      	str	r0, [r3, #0]
    cb5e:	1c30      	adds	r0, r6, #0
    cb60:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    cb62:	46c0      	nop			; (mov r8, r8)
    cb64:	fffffbcd 	.word	0xfffffbcd
    cb68:	fffffbce 	.word	0xfffffbce
    cb6c:	3fffffff 	.word	0x3fffffff

0000cb70 <__ratio>:
    cb70:	b5f0      	push	{r4, r5, r6, r7, lr}
    cb72:	b087      	sub	sp, #28
    cb74:	1c0e      	adds	r6, r1, #0
    cb76:	a904      	add	r1, sp, #16
    cb78:	1c07      	adds	r7, r0, #0
    cb7a:	f7ff ff53 	bl	ca24 <__b2d>
    cb7e:	1c04      	adds	r4, r0, #0
    cb80:	1c0d      	adds	r5, r1, #0
    cb82:	1c30      	adds	r0, r6, #0
    cb84:	a905      	add	r1, sp, #20
    cb86:	9400      	str	r4, [sp, #0]
    cb88:	9501      	str	r5, [sp, #4]
    cb8a:	f7ff ff4b 	bl	ca24 <__b2d>
    cb8e:	9b04      	ldr	r3, [sp, #16]
    cb90:	9a05      	ldr	r2, [sp, #20]
    cb92:	693f      	ldr	r7, [r7, #16]
    cb94:	1a9a      	subs	r2, r3, r2
    cb96:	6933      	ldr	r3, [r6, #16]
    cb98:	9002      	str	r0, [sp, #8]
    cb9a:	9103      	str	r1, [sp, #12]
    cb9c:	1afb      	subs	r3, r7, r3
    cb9e:	015b      	lsls	r3, r3, #5
    cba0:	18d3      	adds	r3, r2, r3
    cba2:	2b00      	cmp	r3, #0
    cba4:	dd03      	ble.n	cbae <__ratio+0x3e>
    cba6:	051b      	lsls	r3, r3, #20
    cba8:	195b      	adds	r3, r3, r5
    cbaa:	9301      	str	r3, [sp, #4]
    cbac:	e002      	b.n	cbb4 <__ratio+0x44>
    cbae:	051b      	lsls	r3, r3, #20
    cbb0:	1acb      	subs	r3, r1, r3
    cbb2:	9303      	str	r3, [sp, #12]
    cbb4:	9800      	ldr	r0, [sp, #0]
    cbb6:	9901      	ldr	r1, [sp, #4]
    cbb8:	9a02      	ldr	r2, [sp, #8]
    cbba:	9b03      	ldr	r3, [sp, #12]
    cbbc:	f7f9 fe52 	bl	6864 <__aeabi_ddiv>
    cbc0:	b007      	add	sp, #28
    cbc2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0000cbc4 <__copybits>:
    cbc4:	1c13      	adds	r3, r2, #0
    cbc6:	3901      	subs	r1, #1
    cbc8:	b510      	push	{r4, lr}
    cbca:	1149      	asrs	r1, r1, #5
    cbcc:	6912      	ldr	r2, [r2, #16]
    cbce:	3101      	adds	r1, #1
    cbd0:	0089      	lsls	r1, r1, #2
    cbd2:	3314      	adds	r3, #20
    cbd4:	0092      	lsls	r2, r2, #2
    cbd6:	1841      	adds	r1, r0, r1
    cbd8:	189a      	adds	r2, r3, r2
    cbda:	4293      	cmp	r3, r2
    cbdc:	d202      	bcs.n	cbe4 <__copybits+0x20>
    cbde:	cb10      	ldmia	r3!, {r4}
    cbe0:	c010      	stmia	r0!, {r4}
    cbe2:	e7fa      	b.n	cbda <__copybits+0x16>
    cbe4:	4288      	cmp	r0, r1
    cbe6:	d202      	bcs.n	cbee <__copybits+0x2a>
    cbe8:	2300      	movs	r3, #0
    cbea:	c008      	stmia	r0!, {r3}
    cbec:	e7fa      	b.n	cbe4 <__copybits+0x20>
    cbee:	bd10      	pop	{r4, pc}

0000cbf0 <__any_on>:
    cbf0:	b530      	push	{r4, r5, lr}
    cbf2:	1c04      	adds	r4, r0, #0
    cbf4:	6902      	ldr	r2, [r0, #16]
    cbf6:	3414      	adds	r4, #20
    cbf8:	114b      	asrs	r3, r1, #5
    cbfa:	4293      	cmp	r3, r2
    cbfc:	dc0c      	bgt.n	cc18 <__any_on+0x28>
    cbfe:	da0c      	bge.n	cc1a <__any_on+0x2a>
    cc00:	221f      	movs	r2, #31
    cc02:	4011      	ands	r1, r2
    cc04:	d009      	beq.n	cc1a <__any_on+0x2a>
    cc06:	009a      	lsls	r2, r3, #2
    cc08:	5915      	ldr	r5, [r2, r4]
    cc0a:	2001      	movs	r0, #1
    cc0c:	1c2a      	adds	r2, r5, #0
    cc0e:	40ca      	lsrs	r2, r1
    cc10:	408a      	lsls	r2, r1
    cc12:	42aa      	cmp	r2, r5
    cc14:	d10c      	bne.n	cc30 <__any_on+0x40>
    cc16:	e000      	b.n	cc1a <__any_on+0x2a>
    cc18:	1c13      	adds	r3, r2, #0
    cc1a:	009b      	lsls	r3, r3, #2
    cc1c:	18e3      	adds	r3, r4, r3
    cc1e:	42a3      	cmp	r3, r4
    cc20:	d905      	bls.n	cc2e <__any_on+0x3e>
    cc22:	3b04      	subs	r3, #4
    cc24:	681a      	ldr	r2, [r3, #0]
    cc26:	2a00      	cmp	r2, #0
    cc28:	d0f9      	beq.n	cc1e <__any_on+0x2e>
    cc2a:	2001      	movs	r0, #1
    cc2c:	e000      	b.n	cc30 <__any_on+0x40>
    cc2e:	2000      	movs	r0, #0
    cc30:	bd30      	pop	{r4, r5, pc}

0000cc32 <_calloc_r>:
    cc32:	434a      	muls	r2, r1
    cc34:	b538      	push	{r3, r4, r5, lr}
    cc36:	1c11      	adds	r1, r2, #0
    cc38:	1c14      	adds	r4, r2, #0
    cc3a:	f7fb fdbd 	bl	87b8 <_malloc_r>
    cc3e:	1e05      	subs	r5, r0, #0
    cc40:	d003      	beq.n	cc4a <_calloc_r+0x18>
    cc42:	2100      	movs	r1, #0
    cc44:	1c22      	adds	r2, r4, #0
    cc46:	f7fb fd69 	bl	871c <memset>
    cc4a:	1c28      	adds	r0, r5, #0
    cc4c:	bd38      	pop	{r3, r4, r5, pc}

0000cc4e <_realloc_r>:
    cc4e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    cc50:	1c06      	adds	r6, r0, #0
    cc52:	1c0c      	adds	r4, r1, #0
    cc54:	1c15      	adds	r5, r2, #0
    cc56:	2900      	cmp	r1, #0
    cc58:	d104      	bne.n	cc64 <_realloc_r+0x16>
    cc5a:	1c11      	adds	r1, r2, #0
    cc5c:	f7fb fdac 	bl	87b8 <_malloc_r>
    cc60:	1c04      	adds	r4, r0, #0
    cc62:	e018      	b.n	cc96 <_realloc_r+0x48>
    cc64:	2a00      	cmp	r2, #0
    cc66:	d103      	bne.n	cc70 <_realloc_r+0x22>
    cc68:	f7fb fd60 	bl	872c <_free_r>
    cc6c:	1c2c      	adds	r4, r5, #0
    cc6e:	e012      	b.n	cc96 <_realloc_r+0x48>
    cc70:	f000 fb52 	bl	d318 <_malloc_usable_size_r>
    cc74:	42a8      	cmp	r0, r5
    cc76:	d20e      	bcs.n	cc96 <_realloc_r+0x48>
    cc78:	1c30      	adds	r0, r6, #0
    cc7a:	1c29      	adds	r1, r5, #0
    cc7c:	f7fb fd9c 	bl	87b8 <_malloc_r>
    cc80:	1e07      	subs	r7, r0, #0
    cc82:	d007      	beq.n	cc94 <_realloc_r+0x46>
    cc84:	1c21      	adds	r1, r4, #0
    cc86:	1c2a      	adds	r2, r5, #0
    cc88:	f7fb fd3f 	bl	870a <memcpy>
    cc8c:	1c30      	adds	r0, r6, #0
    cc8e:	1c21      	adds	r1, r4, #0
    cc90:	f7fb fd4c 	bl	872c <_free_r>
    cc94:	1c3c      	adds	r4, r7, #0
    cc96:	1c20      	adds	r0, r4, #0
    cc98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0000cc9c <__ssputs_r>:
    cc9c:	b5f0      	push	{r4, r5, r6, r7, lr}
    cc9e:	688e      	ldr	r6, [r1, #8]
    cca0:	b085      	sub	sp, #20
    cca2:	1c07      	adds	r7, r0, #0
    cca4:	1c0c      	adds	r4, r1, #0
    cca6:	9203      	str	r2, [sp, #12]
    cca8:	9301      	str	r3, [sp, #4]
    ccaa:	42b3      	cmp	r3, r6
    ccac:	d345      	bcc.n	cd3a <__ssputs_r+0x9e>
    ccae:	2390      	movs	r3, #144	; 0x90
    ccb0:	898a      	ldrh	r2, [r1, #12]
    ccb2:	00db      	lsls	r3, r3, #3
    ccb4:	421a      	tst	r2, r3
    ccb6:	d03d      	beq.n	cd34 <__ssputs_r+0x98>
    ccb8:	2503      	movs	r5, #3
    ccba:	6909      	ldr	r1, [r1, #16]
    ccbc:	6823      	ldr	r3, [r4, #0]
    ccbe:	9801      	ldr	r0, [sp, #4]
    ccc0:	1a5b      	subs	r3, r3, r1
    ccc2:	9302      	str	r3, [sp, #8]
    ccc4:	6963      	ldr	r3, [r4, #20]
    ccc6:	435d      	muls	r5, r3
    ccc8:	0feb      	lsrs	r3, r5, #31
    ccca:	195d      	adds	r5, r3, r5
    cccc:	9b02      	ldr	r3, [sp, #8]
    ccce:	106d      	asrs	r5, r5, #1
    ccd0:	3301      	adds	r3, #1
    ccd2:	181b      	adds	r3, r3, r0
    ccd4:	429d      	cmp	r5, r3
    ccd6:	d200      	bcs.n	ccda <__ssputs_r+0x3e>
    ccd8:	1c1d      	adds	r5, r3, #0
    ccda:	1c38      	adds	r0, r7, #0
    ccdc:	0553      	lsls	r3, r2, #21
    ccde:	d50f      	bpl.n	cd00 <__ssputs_r+0x64>
    cce0:	1c29      	adds	r1, r5, #0
    cce2:	f7fb fd69 	bl	87b8 <_malloc_r>
    cce6:	1e06      	subs	r6, r0, #0
    cce8:	d013      	beq.n	cd12 <__ssputs_r+0x76>
    ccea:	9a02      	ldr	r2, [sp, #8]
    ccec:	6921      	ldr	r1, [r4, #16]
    ccee:	f7fb fd0c 	bl	870a <memcpy>
    ccf2:	89a2      	ldrh	r2, [r4, #12]
    ccf4:	4b18      	ldr	r3, [pc, #96]	; (cd58 <__ssputs_r+0xbc>)
    ccf6:	4013      	ands	r3, r2
    ccf8:	2280      	movs	r2, #128	; 0x80
    ccfa:	4313      	orrs	r3, r2
    ccfc:	81a3      	strh	r3, [r4, #12]
    ccfe:	e011      	b.n	cd24 <__ssputs_r+0x88>
    cd00:	1c2a      	adds	r2, r5, #0
    cd02:	f7ff ffa4 	bl	cc4e <_realloc_r>
    cd06:	1e06      	subs	r6, r0, #0
    cd08:	d10c      	bne.n	cd24 <__ssputs_r+0x88>
    cd0a:	1c38      	adds	r0, r7, #0
    cd0c:	6921      	ldr	r1, [r4, #16]
    cd0e:	f7fb fd0d 	bl	872c <_free_r>
    cd12:	230c      	movs	r3, #12
    cd14:	2240      	movs	r2, #64	; 0x40
    cd16:	2001      	movs	r0, #1
    cd18:	603b      	str	r3, [r7, #0]
    cd1a:	89a3      	ldrh	r3, [r4, #12]
    cd1c:	4240      	negs	r0, r0
    cd1e:	4313      	orrs	r3, r2
    cd20:	81a3      	strh	r3, [r4, #12]
    cd22:	e017      	b.n	cd54 <__ssputs_r+0xb8>
    cd24:	9b02      	ldr	r3, [sp, #8]
    cd26:	6126      	str	r6, [r4, #16]
    cd28:	18f6      	adds	r6, r6, r3
    cd2a:	6026      	str	r6, [r4, #0]
    cd2c:	6165      	str	r5, [r4, #20]
    cd2e:	9e01      	ldr	r6, [sp, #4]
    cd30:	1aed      	subs	r5, r5, r3
    cd32:	60a5      	str	r5, [r4, #8]
    cd34:	9b01      	ldr	r3, [sp, #4]
    cd36:	42b3      	cmp	r3, r6
    cd38:	d200      	bcs.n	cd3c <__ssputs_r+0xa0>
    cd3a:	9e01      	ldr	r6, [sp, #4]
    cd3c:	1c32      	adds	r2, r6, #0
    cd3e:	6820      	ldr	r0, [r4, #0]
    cd40:	9903      	ldr	r1, [sp, #12]
    cd42:	f7ff fb5f 	bl	c404 <memmove>
    cd46:	2000      	movs	r0, #0
    cd48:	68a3      	ldr	r3, [r4, #8]
    cd4a:	1b9b      	subs	r3, r3, r6
    cd4c:	60a3      	str	r3, [r4, #8]
    cd4e:	6823      	ldr	r3, [r4, #0]
    cd50:	199e      	adds	r6, r3, r6
    cd52:	6026      	str	r6, [r4, #0]
    cd54:	b005      	add	sp, #20
    cd56:	bdf0      	pop	{r4, r5, r6, r7, pc}
    cd58:	fffffb7f 	.word	0xfffffb7f

0000cd5c <_svfiprintf_r>:
    cd5c:	b5f0      	push	{r4, r5, r6, r7, lr}
    cd5e:	b09f      	sub	sp, #124	; 0x7c
    cd60:	9002      	str	r0, [sp, #8]
    cd62:	9305      	str	r3, [sp, #20]
    cd64:	898b      	ldrh	r3, [r1, #12]
    cd66:	1c0e      	adds	r6, r1, #0
    cd68:	1c17      	adds	r7, r2, #0
    cd6a:	061b      	lsls	r3, r3, #24
    cd6c:	d510      	bpl.n	cd90 <_svfiprintf_r+0x34>
    cd6e:	690b      	ldr	r3, [r1, #16]
    cd70:	2b00      	cmp	r3, #0
    cd72:	d10d      	bne.n	cd90 <_svfiprintf_r+0x34>
    cd74:	2140      	movs	r1, #64	; 0x40
    cd76:	f7fb fd1f 	bl	87b8 <_malloc_r>
    cd7a:	6030      	str	r0, [r6, #0]
    cd7c:	6130      	str	r0, [r6, #16]
    cd7e:	2800      	cmp	r0, #0
    cd80:	d104      	bne.n	cd8c <_svfiprintf_r+0x30>
    cd82:	230c      	movs	r3, #12
    cd84:	9a02      	ldr	r2, [sp, #8]
    cd86:	3801      	subs	r0, #1
    cd88:	6013      	str	r3, [r2, #0]
    cd8a:	e0d0      	b.n	cf2e <_svfiprintf_r+0x1d2>
    cd8c:	2340      	movs	r3, #64	; 0x40
    cd8e:	6173      	str	r3, [r6, #20]
    cd90:	2300      	movs	r3, #0
    cd92:	ad06      	add	r5, sp, #24
    cd94:	616b      	str	r3, [r5, #20]
    cd96:	3320      	adds	r3, #32
    cd98:	766b      	strb	r3, [r5, #25]
    cd9a:	3310      	adds	r3, #16
    cd9c:	76ab      	strb	r3, [r5, #26]
    cd9e:	1c3c      	adds	r4, r7, #0
    cda0:	7823      	ldrb	r3, [r4, #0]
    cda2:	2b00      	cmp	r3, #0
    cda4:	d103      	bne.n	cdae <_svfiprintf_r+0x52>
    cda6:	1be3      	subs	r3, r4, r7
    cda8:	9304      	str	r3, [sp, #16]
    cdaa:	d012      	beq.n	cdd2 <_svfiprintf_r+0x76>
    cdac:	e003      	b.n	cdb6 <_svfiprintf_r+0x5a>
    cdae:	2b25      	cmp	r3, #37	; 0x25
    cdb0:	d0f9      	beq.n	cda6 <_svfiprintf_r+0x4a>
    cdb2:	3401      	adds	r4, #1
    cdb4:	e7f4      	b.n	cda0 <_svfiprintf_r+0x44>
    cdb6:	9b04      	ldr	r3, [sp, #16]
    cdb8:	9802      	ldr	r0, [sp, #8]
    cdba:	1c31      	adds	r1, r6, #0
    cdbc:	1c3a      	adds	r2, r7, #0
    cdbe:	f7ff ff6d 	bl	cc9c <__ssputs_r>
    cdc2:	1c43      	adds	r3, r0, #1
    cdc4:	d100      	bne.n	cdc8 <_svfiprintf_r+0x6c>
    cdc6:	e0ac      	b.n	cf22 <_svfiprintf_r+0x1c6>
    cdc8:	696a      	ldr	r2, [r5, #20]
    cdca:	9b04      	ldr	r3, [sp, #16]
    cdcc:	4694      	mov	ip, r2
    cdce:	4463      	add	r3, ip
    cdd0:	616b      	str	r3, [r5, #20]
    cdd2:	7823      	ldrb	r3, [r4, #0]
    cdd4:	2b00      	cmp	r3, #0
    cdd6:	d100      	bne.n	cdda <_svfiprintf_r+0x7e>
    cdd8:	e0a3      	b.n	cf22 <_svfiprintf_r+0x1c6>
    cdda:	2201      	movs	r2, #1
    cddc:	2300      	movs	r3, #0
    cdde:	4252      	negs	r2, r2
    cde0:	606a      	str	r2, [r5, #4]
    cde2:	a902      	add	r1, sp, #8
    cde4:	3254      	adds	r2, #84	; 0x54
    cde6:	1852      	adds	r2, r2, r1
    cde8:	3401      	adds	r4, #1
    cdea:	602b      	str	r3, [r5, #0]
    cdec:	60eb      	str	r3, [r5, #12]
    cdee:	60ab      	str	r3, [r5, #8]
    cdf0:	7013      	strb	r3, [r2, #0]
    cdf2:	65ab      	str	r3, [r5, #88]	; 0x58
    cdf4:	4f4f      	ldr	r7, [pc, #316]	; (cf34 <_svfiprintf_r+0x1d8>)
    cdf6:	7821      	ldrb	r1, [r4, #0]
    cdf8:	1c38      	adds	r0, r7, #0
    cdfa:	2205      	movs	r2, #5
    cdfc:	f7fb fc7a 	bl	86f4 <memchr>
    ce00:	2800      	cmp	r0, #0
    ce02:	d008      	beq.n	ce16 <_svfiprintf_r+0xba>
    ce04:	1bc0      	subs	r0, r0, r7
    ce06:	2701      	movs	r7, #1
    ce08:	4087      	lsls	r7, r0
    ce0a:	1c38      	adds	r0, r7, #0
    ce0c:	682b      	ldr	r3, [r5, #0]
    ce0e:	3401      	adds	r4, #1
    ce10:	4318      	orrs	r0, r3
    ce12:	6028      	str	r0, [r5, #0]
    ce14:	e7ee      	b.n	cdf4 <_svfiprintf_r+0x98>
    ce16:	682b      	ldr	r3, [r5, #0]
    ce18:	06da      	lsls	r2, r3, #27
    ce1a:	d504      	bpl.n	ce26 <_svfiprintf_r+0xca>
    ce1c:	2253      	movs	r2, #83	; 0x53
    ce1e:	2120      	movs	r1, #32
    ce20:	a802      	add	r0, sp, #8
    ce22:	1812      	adds	r2, r2, r0
    ce24:	7011      	strb	r1, [r2, #0]
    ce26:	071a      	lsls	r2, r3, #28
    ce28:	d504      	bpl.n	ce34 <_svfiprintf_r+0xd8>
    ce2a:	2253      	movs	r2, #83	; 0x53
    ce2c:	212b      	movs	r1, #43	; 0x2b
    ce2e:	a802      	add	r0, sp, #8
    ce30:	1812      	adds	r2, r2, r0
    ce32:	7011      	strb	r1, [r2, #0]
    ce34:	7822      	ldrb	r2, [r4, #0]
    ce36:	2a2a      	cmp	r2, #42	; 0x2a
    ce38:	d001      	beq.n	ce3e <_svfiprintf_r+0xe2>
    ce3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
    ce3c:	e00e      	b.n	ce5c <_svfiprintf_r+0x100>
    ce3e:	9a05      	ldr	r2, [sp, #20]
    ce40:	1d11      	adds	r1, r2, #4
    ce42:	6812      	ldr	r2, [r2, #0]
    ce44:	9105      	str	r1, [sp, #20]
    ce46:	2a00      	cmp	r2, #0
    ce48:	db01      	blt.n	ce4e <_svfiprintf_r+0xf2>
    ce4a:	9209      	str	r2, [sp, #36]	; 0x24
    ce4c:	e004      	b.n	ce58 <_svfiprintf_r+0xfc>
    ce4e:	4252      	negs	r2, r2
    ce50:	60ea      	str	r2, [r5, #12]
    ce52:	2202      	movs	r2, #2
    ce54:	4313      	orrs	r3, r2
    ce56:	602b      	str	r3, [r5, #0]
    ce58:	3401      	adds	r4, #1
    ce5a:	e009      	b.n	ce70 <_svfiprintf_r+0x114>
    ce5c:	7822      	ldrb	r2, [r4, #0]
    ce5e:	3a30      	subs	r2, #48	; 0x30
    ce60:	2a09      	cmp	r2, #9
    ce62:	d804      	bhi.n	ce6e <_svfiprintf_r+0x112>
    ce64:	210a      	movs	r1, #10
    ce66:	434b      	muls	r3, r1
    ce68:	3401      	adds	r4, #1
    ce6a:	189b      	adds	r3, r3, r2
    ce6c:	e7f6      	b.n	ce5c <_svfiprintf_r+0x100>
    ce6e:	9309      	str	r3, [sp, #36]	; 0x24
    ce70:	7823      	ldrb	r3, [r4, #0]
    ce72:	2b2e      	cmp	r3, #46	; 0x2e
    ce74:	d118      	bne.n	cea8 <_svfiprintf_r+0x14c>
    ce76:	7863      	ldrb	r3, [r4, #1]
    ce78:	2b2a      	cmp	r3, #42	; 0x2a
    ce7a:	d109      	bne.n	ce90 <_svfiprintf_r+0x134>
    ce7c:	9b05      	ldr	r3, [sp, #20]
    ce7e:	3402      	adds	r4, #2
    ce80:	1d1a      	adds	r2, r3, #4
    ce82:	681b      	ldr	r3, [r3, #0]
    ce84:	9205      	str	r2, [sp, #20]
    ce86:	2b00      	cmp	r3, #0
    ce88:	da0d      	bge.n	cea6 <_svfiprintf_r+0x14a>
    ce8a:	2301      	movs	r3, #1
    ce8c:	425b      	negs	r3, r3
    ce8e:	e00a      	b.n	cea6 <_svfiprintf_r+0x14a>
    ce90:	2300      	movs	r3, #0
    ce92:	3401      	adds	r4, #1
    ce94:	7822      	ldrb	r2, [r4, #0]
    ce96:	3a30      	subs	r2, #48	; 0x30
    ce98:	2a09      	cmp	r2, #9
    ce9a:	d804      	bhi.n	cea6 <_svfiprintf_r+0x14a>
    ce9c:	210a      	movs	r1, #10
    ce9e:	434b      	muls	r3, r1
    cea0:	3401      	adds	r4, #1
    cea2:	189b      	adds	r3, r3, r2
    cea4:	e7f6      	b.n	ce94 <_svfiprintf_r+0x138>
    cea6:	9307      	str	r3, [sp, #28]
    cea8:	4f23      	ldr	r7, [pc, #140]	; (cf38 <_svfiprintf_r+0x1dc>)
    ceaa:	7821      	ldrb	r1, [r4, #0]
    ceac:	1c38      	adds	r0, r7, #0
    ceae:	2203      	movs	r2, #3
    ceb0:	f7fb fc20 	bl	86f4 <memchr>
    ceb4:	2800      	cmp	r0, #0
    ceb6:	d007      	beq.n	cec8 <_svfiprintf_r+0x16c>
    ceb8:	1bc0      	subs	r0, r0, r7
    ceba:	2740      	movs	r7, #64	; 0x40
    cebc:	4087      	lsls	r7, r0
    cebe:	1c38      	adds	r0, r7, #0
    cec0:	682b      	ldr	r3, [r5, #0]
    cec2:	3401      	adds	r4, #1
    cec4:	4318      	orrs	r0, r3
    cec6:	6028      	str	r0, [r5, #0]
    cec8:	7821      	ldrb	r1, [r4, #0]
    ceca:	481c      	ldr	r0, [pc, #112]	; (cf3c <_svfiprintf_r+0x1e0>)
    cecc:	2206      	movs	r2, #6
    cece:	1c67      	adds	r7, r4, #1
    ced0:	7629      	strb	r1, [r5, #24]
    ced2:	f7fb fc0f 	bl	86f4 <memchr>
    ced6:	2800      	cmp	r0, #0
    ced8:	d012      	beq.n	cf00 <_svfiprintf_r+0x1a4>
    ceda:	4b19      	ldr	r3, [pc, #100]	; (cf40 <_svfiprintf_r+0x1e4>)
    cedc:	2b00      	cmp	r3, #0
    cede:	d106      	bne.n	ceee <_svfiprintf_r+0x192>
    cee0:	2207      	movs	r2, #7
    cee2:	9b05      	ldr	r3, [sp, #20]
    cee4:	3307      	adds	r3, #7
    cee6:	4393      	bics	r3, r2
    cee8:	3308      	adds	r3, #8
    ceea:	9305      	str	r3, [sp, #20]
    ceec:	e014      	b.n	cf18 <_svfiprintf_r+0x1bc>
    ceee:	ab05      	add	r3, sp, #20
    cef0:	9300      	str	r3, [sp, #0]
    cef2:	9802      	ldr	r0, [sp, #8]
    cef4:	1c29      	adds	r1, r5, #0
    cef6:	1c32      	adds	r2, r6, #0
    cef8:	4b12      	ldr	r3, [pc, #72]	; (cf44 <_svfiprintf_r+0x1e8>)
    cefa:	f7fb fe91 	bl	8c20 <_printf_float>
    cefe:	e007      	b.n	cf10 <_svfiprintf_r+0x1b4>
    cf00:	ab05      	add	r3, sp, #20
    cf02:	9300      	str	r3, [sp, #0]
    cf04:	9802      	ldr	r0, [sp, #8]
    cf06:	1c29      	adds	r1, r5, #0
    cf08:	1c32      	adds	r2, r6, #0
    cf0a:	4b0e      	ldr	r3, [pc, #56]	; (cf44 <_svfiprintf_r+0x1e8>)
    cf0c:	f7fc f934 	bl	9178 <_printf_i>
    cf10:	9003      	str	r0, [sp, #12]
    cf12:	9b03      	ldr	r3, [sp, #12]
    cf14:	3301      	adds	r3, #1
    cf16:	d004      	beq.n	cf22 <_svfiprintf_r+0x1c6>
    cf18:	696b      	ldr	r3, [r5, #20]
    cf1a:	9a03      	ldr	r2, [sp, #12]
    cf1c:	189b      	adds	r3, r3, r2
    cf1e:	616b      	str	r3, [r5, #20]
    cf20:	e73d      	b.n	cd9e <_svfiprintf_r+0x42>
    cf22:	89b3      	ldrh	r3, [r6, #12]
    cf24:	980b      	ldr	r0, [sp, #44]	; 0x2c
    cf26:	065b      	lsls	r3, r3, #25
    cf28:	d501      	bpl.n	cf2e <_svfiprintf_r+0x1d2>
    cf2a:	2001      	movs	r0, #1
    cf2c:	4240      	negs	r0, r0
    cf2e:	b01f      	add	sp, #124	; 0x7c
    cf30:	bdf0      	pop	{r4, r5, r6, r7, pc}
    cf32:	46c0      	nop			; (mov r8, r8)
    cf34:	0000e388 	.word	0x0000e388
    cf38:	0000e38e 	.word	0x0000e38e
    cf3c:	0000e392 	.word	0x0000e392
    cf40:	00008c21 	.word	0x00008c21
    cf44:	0000cc9d 	.word	0x0000cc9d

0000cf48 <_sungetc_r>:
    cf48:	b538      	push	{r3, r4, r5, lr}
    cf4a:	1c14      	adds	r4, r2, #0
    cf4c:	1c4b      	adds	r3, r1, #1
    cf4e:	d102      	bne.n	cf56 <_sungetc_r+0xe>
    cf50:	2001      	movs	r0, #1
    cf52:	4240      	negs	r0, r0
    cf54:	e034      	b.n	cfc0 <_sungetc_r+0x78>
    cf56:	8993      	ldrh	r3, [r2, #12]
    cf58:	2220      	movs	r2, #32
    cf5a:	4393      	bics	r3, r2
    cf5c:	6b62      	ldr	r2, [r4, #52]	; 0x34
    cf5e:	81a3      	strh	r3, [r4, #12]
    cf60:	b2cd      	uxtb	r5, r1
    cf62:	6863      	ldr	r3, [r4, #4]
    cf64:	2a00      	cmp	r2, #0
    cf66:	d00f      	beq.n	cf88 <_sungetc_r+0x40>
    cf68:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    cf6a:	4293      	cmp	r3, r2
    cf6c:	da06      	bge.n	cf7c <_sungetc_r+0x34>
    cf6e:	6823      	ldr	r3, [r4, #0]
    cf70:	3b01      	subs	r3, #1
    cf72:	6023      	str	r3, [r4, #0]
    cf74:	701d      	strb	r5, [r3, #0]
    cf76:	6863      	ldr	r3, [r4, #4]
    cf78:	3301      	adds	r3, #1
    cf7a:	e01f      	b.n	cfbc <_sungetc_r+0x74>
    cf7c:	1c21      	adds	r1, r4, #0
    cf7e:	f7fd fefd 	bl	ad7c <__submore>
    cf82:	2800      	cmp	r0, #0
    cf84:	d0f3      	beq.n	cf6e <_sungetc_r+0x26>
    cf86:	e7e3      	b.n	cf50 <_sungetc_r+0x8>
    cf88:	6921      	ldr	r1, [r4, #16]
    cf8a:	6822      	ldr	r2, [r4, #0]
    cf8c:	2900      	cmp	r1, #0
    cf8e:	d009      	beq.n	cfa4 <_sungetc_r+0x5c>
    cf90:	428a      	cmp	r2, r1
    cf92:	d907      	bls.n	cfa4 <_sungetc_r+0x5c>
    cf94:	1e51      	subs	r1, r2, #1
    cf96:	7808      	ldrb	r0, [r1, #0]
    cf98:	42a8      	cmp	r0, r5
    cf9a:	d103      	bne.n	cfa4 <_sungetc_r+0x5c>
    cf9c:	3301      	adds	r3, #1
    cf9e:	6021      	str	r1, [r4, #0]
    cfa0:	6063      	str	r3, [r4, #4]
    cfa2:	e00d      	b.n	cfc0 <_sungetc_r+0x78>
    cfa4:	6423      	str	r3, [r4, #64]	; 0x40
    cfa6:	1c23      	adds	r3, r4, #0
    cfa8:	3344      	adds	r3, #68	; 0x44
    cfaa:	6363      	str	r3, [r4, #52]	; 0x34
    cfac:	2303      	movs	r3, #3
    cfae:	63a3      	str	r3, [r4, #56]	; 0x38
    cfb0:	1c23      	adds	r3, r4, #0
    cfb2:	3346      	adds	r3, #70	; 0x46
    cfb4:	63e2      	str	r2, [r4, #60]	; 0x3c
    cfb6:	701d      	strb	r5, [r3, #0]
    cfb8:	6023      	str	r3, [r4, #0]
    cfba:	2301      	movs	r3, #1
    cfbc:	1c28      	adds	r0, r5, #0
    cfbe:	6063      	str	r3, [r4, #4]
    cfc0:	bd38      	pop	{r3, r4, r5, pc}

0000cfc2 <__ssrefill_r>:
    cfc2:	b510      	push	{r4, lr}
    cfc4:	1c0c      	adds	r4, r1, #0
    cfc6:	6b49      	ldr	r1, [r1, #52]	; 0x34
    cfc8:	2900      	cmp	r1, #0
    cfca:	d00e      	beq.n	cfea <__ssrefill_r+0x28>
    cfcc:	1c23      	adds	r3, r4, #0
    cfce:	3344      	adds	r3, #68	; 0x44
    cfd0:	4299      	cmp	r1, r3
    cfd2:	d001      	beq.n	cfd8 <__ssrefill_r+0x16>
    cfd4:	f7fb fbaa 	bl	872c <_free_r>
    cfd8:	2000      	movs	r0, #0
    cfda:	6c23      	ldr	r3, [r4, #64]	; 0x40
    cfdc:	6360      	str	r0, [r4, #52]	; 0x34
    cfde:	6063      	str	r3, [r4, #4]
    cfe0:	4283      	cmp	r3, r0
    cfe2:	d002      	beq.n	cfea <__ssrefill_r+0x28>
    cfe4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
    cfe6:	6023      	str	r3, [r4, #0]
    cfe8:	e009      	b.n	cffe <__ssrefill_r+0x3c>
    cfea:	6923      	ldr	r3, [r4, #16]
    cfec:	2220      	movs	r2, #32
    cfee:	6023      	str	r3, [r4, #0]
    cff0:	2300      	movs	r3, #0
    cff2:	2001      	movs	r0, #1
    cff4:	6063      	str	r3, [r4, #4]
    cff6:	89a3      	ldrh	r3, [r4, #12]
    cff8:	4240      	negs	r0, r0
    cffa:	4313      	orrs	r3, r2
    cffc:	81a3      	strh	r3, [r4, #12]
    cffe:	bd10      	pop	{r4, pc}

0000d000 <__ssvfiscanf_r>:
    d000:	b5f0      	push	{r4, r5, r6, r7, lr}
    d002:	4cb5      	ldr	r4, [pc, #724]	; (d2d8 <__ssvfiscanf_r+0x2d8>)
    d004:	1c07      	adds	r7, r0, #0
    d006:	44a5      	add	sp, r4
    d008:	9303      	str	r3, [sp, #12]
    d00a:	2300      	movs	r3, #0
    d00c:	2086      	movs	r0, #134	; 0x86
    d00e:	9348      	str	r3, [sp, #288]	; 0x120
    d010:	9349      	str	r3, [sp, #292]	; 0x124
    d012:	ab05      	add	r3, sp, #20
    d014:	934a      	str	r3, [sp, #296]	; 0x128
    d016:	23be      	movs	r3, #190	; 0xbe
    d018:	0040      	lsls	r0, r0, #1
    d01a:	1c0d      	adds	r5, r1, #0
    d01c:	9201      	str	r2, [sp, #4]
    d01e:	a902      	add	r1, sp, #8
    d020:	4aae      	ldr	r2, [pc, #696]	; (d2dc <__ssvfiscanf_r+0x2dc>)
    d022:	005b      	lsls	r3, r3, #1
    d024:	1809      	adds	r1, r1, r0
    d026:	50ca      	str	r2, [r1, r3]
    d028:	4aad      	ldr	r2, [pc, #692]	; (d2e0 <__ssvfiscanf_r+0x2e0>)
    d02a:	a902      	add	r1, sp, #8
    d02c:	3304      	adds	r3, #4
    d02e:	1809      	adds	r1, r1, r0
    d030:	50ca      	str	r2, [r1, r3]
    d032:	9b01      	ldr	r3, [sp, #4]
    d034:	781c      	ldrb	r4, [r3, #0]
    d036:	2c00      	cmp	r4, #0
    d038:	d100      	bne.n	d03c <__ssvfiscanf_r+0x3c>
    d03a:	e144      	b.n	d2c6 <__ssvfiscanf_r+0x2c6>
    d03c:	4ea9      	ldr	r6, [pc, #676]	; (d2e4 <__ssvfiscanf_r+0x2e4>)
    d03e:	6833      	ldr	r3, [r6, #0]
    d040:	191b      	adds	r3, r3, r4
    d042:	785a      	ldrb	r2, [r3, #1]
    d044:	2308      	movs	r3, #8
    d046:	4013      	ands	r3, r2
    d048:	d023      	beq.n	d092 <__ssvfiscanf_r+0x92>
    d04a:	686b      	ldr	r3, [r5, #4]
    d04c:	2b00      	cmp	r3, #0
    d04e:	dd10      	ble.n	d072 <__ssvfiscanf_r+0x72>
    d050:	682b      	ldr	r3, [r5, #0]
    d052:	6831      	ldr	r1, [r6, #0]
    d054:	781a      	ldrb	r2, [r3, #0]
    d056:	188a      	adds	r2, r1, r2
    d058:	7852      	ldrb	r2, [r2, #1]
    d05a:	0712      	lsls	r2, r2, #28
    d05c:	d515      	bpl.n	d08a <__ssvfiscanf_r+0x8a>
    d05e:	9a49      	ldr	r2, [sp, #292]	; 0x124
    d060:	3301      	adds	r3, #1
    d062:	9202      	str	r2, [sp, #8]
    d064:	3201      	adds	r2, #1
    d066:	9249      	str	r2, [sp, #292]	; 0x124
    d068:	686a      	ldr	r2, [r5, #4]
    d06a:	602b      	str	r3, [r5, #0]
    d06c:	3a01      	subs	r2, #1
    d06e:	606a      	str	r2, [r5, #4]
    d070:	e7eb      	b.n	d04a <__ssvfiscanf_r+0x4a>
    d072:	2186      	movs	r1, #134	; 0x86
    d074:	23c0      	movs	r3, #192	; 0xc0
    d076:	0049      	lsls	r1, r1, #1
    d078:	aa02      	add	r2, sp, #8
    d07a:	1852      	adds	r2, r2, r1
    d07c:	005b      	lsls	r3, r3, #1
    d07e:	58d3      	ldr	r3, [r2, r3]
    d080:	1c38      	adds	r0, r7, #0
    d082:	1c29      	adds	r1, r5, #0
    d084:	4798      	blx	r3
    d086:	2800      	cmp	r0, #0
    d088:	d0e2      	beq.n	d050 <__ssvfiscanf_r+0x50>
    d08a:	9e01      	ldr	r6, [sp, #4]
    d08c:	3601      	adds	r6, #1
    d08e:	9601      	str	r6, [sp, #4]
    d090:	e7cf      	b.n	d032 <__ssvfiscanf_r+0x32>
    d092:	9a01      	ldr	r2, [sp, #4]
    d094:	1c56      	adds	r6, r2, #1
    d096:	2c25      	cmp	r4, #37	; 0x25
    d098:	d14f      	bne.n	d13a <__ssvfiscanf_r+0x13a>
    d09a:	9347      	str	r3, [sp, #284]	; 0x11c
    d09c:	9345      	str	r3, [sp, #276]	; 0x114
    d09e:	7853      	ldrb	r3, [r2, #1]
    d0a0:	2b2a      	cmp	r3, #42	; 0x2a
    d0a2:	d102      	bne.n	d0aa <__ssvfiscanf_r+0xaa>
    d0a4:	3b1a      	subs	r3, #26
    d0a6:	9345      	str	r3, [sp, #276]	; 0x114
    d0a8:	3601      	adds	r6, #1
    d0aa:	1c34      	adds	r4, r6, #0
    d0ac:	7821      	ldrb	r1, [r4, #0]
    d0ae:	1c0b      	adds	r3, r1, #0
    d0b0:	3b30      	subs	r3, #48	; 0x30
    d0b2:	2b09      	cmp	r3, #9
    d0b4:	d809      	bhi.n	d0ca <__ssvfiscanf_r+0xca>
    d0b6:	9b47      	ldr	r3, [sp, #284]	; 0x11c
    d0b8:	3401      	adds	r4, #1
    d0ba:	9301      	str	r3, [sp, #4]
    d0bc:	230a      	movs	r3, #10
    d0be:	9a01      	ldr	r2, [sp, #4]
    d0c0:	4353      	muls	r3, r2
    d0c2:	3b30      	subs	r3, #48	; 0x30
    d0c4:	1859      	adds	r1, r3, r1
    d0c6:	9147      	str	r1, [sp, #284]	; 0x11c
    d0c8:	e7f0      	b.n	d0ac <__ssvfiscanf_r+0xac>
    d0ca:	4e87      	ldr	r6, [pc, #540]	; (d2e8 <__ssvfiscanf_r+0x2e8>)
    d0cc:	2203      	movs	r2, #3
    d0ce:	1c30      	adds	r0, r6, #0
    d0d0:	f7fb fb10 	bl	86f4 <memchr>
    d0d4:	2800      	cmp	r0, #0
    d0d6:	d008      	beq.n	d0ea <__ssvfiscanf_r+0xea>
    d0d8:	1b80      	subs	r0, r0, r6
    d0da:	2601      	movs	r6, #1
    d0dc:	4086      	lsls	r6, r0
    d0de:	1c30      	adds	r0, r6, #0
    d0e0:	9b45      	ldr	r3, [sp, #276]	; 0x114
    d0e2:	3401      	adds	r4, #1
    d0e4:	4318      	orrs	r0, r3
    d0e6:	9301      	str	r3, [sp, #4]
    d0e8:	9045      	str	r0, [sp, #276]	; 0x114
    d0ea:	1c66      	adds	r6, r4, #1
    d0ec:	7824      	ldrb	r4, [r4, #0]
    d0ee:	2c67      	cmp	r4, #103	; 0x67
    d0f0:	d810      	bhi.n	d114 <__ssvfiscanf_r+0x114>
    d0f2:	2c65      	cmp	r4, #101	; 0x65
    d0f4:	d300      	bcc.n	d0f8 <__ssvfiscanf_r+0xf8>
    d0f6:	e084      	b.n	d202 <__ssvfiscanf_r+0x202>
    d0f8:	2c5b      	cmp	r4, #91	; 0x5b
    d0fa:	d05a      	beq.n	d1b2 <__ssvfiscanf_r+0x1b2>
    d0fc:	d805      	bhi.n	d10a <__ssvfiscanf_r+0x10a>
    d0fe:	2c00      	cmp	r4, #0
    d100:	d100      	bne.n	d104 <__ssvfiscanf_r+0x104>
    d102:	e0e2      	b.n	d2ca <__ssvfiscanf_r+0x2ca>
    d104:	2c25      	cmp	r4, #37	; 0x25
    d106:	d018      	beq.n	d13a <__ssvfiscanf_r+0x13a>
    d108:	e07d      	b.n	d206 <__ssvfiscanf_r+0x206>
    d10a:	2c63      	cmp	r4, #99	; 0x63
    d10c:	d05f      	beq.n	d1ce <__ssvfiscanf_r+0x1ce>
    d10e:	2c64      	cmp	r4, #100	; 0x64
    d110:	d046      	beq.n	d1a0 <__ssvfiscanf_r+0x1a0>
    d112:	e078      	b.n	d206 <__ssvfiscanf_r+0x206>
    d114:	2c70      	cmp	r4, #112	; 0x70
    d116:	d034      	beq.n	d182 <__ssvfiscanf_r+0x182>
    d118:	d807      	bhi.n	d12a <__ssvfiscanf_r+0x12a>
    d11a:	2c6e      	cmp	r4, #110	; 0x6e
    d11c:	d05f      	beq.n	d1de <__ssvfiscanf_r+0x1de>
    d11e:	d841      	bhi.n	d1a4 <__ssvfiscanf_r+0x1a4>
    d120:	2c69      	cmp	r4, #105	; 0x69
    d122:	d170      	bne.n	d206 <__ssvfiscanf_r+0x206>
    d124:	2300      	movs	r3, #0
    d126:	9346      	str	r3, [sp, #280]	; 0x118
    d128:	e041      	b.n	d1ae <__ssvfiscanf_r+0x1ae>
    d12a:	2c75      	cmp	r4, #117	; 0x75
    d12c:	d038      	beq.n	d1a0 <__ssvfiscanf_r+0x1a0>
    d12e:	2c78      	cmp	r4, #120	; 0x78
    d130:	d02d      	beq.n	d18e <__ssvfiscanf_r+0x18e>
    d132:	2c73      	cmp	r4, #115	; 0x73
    d134:	d167      	bne.n	d206 <__ssvfiscanf_r+0x206>
    d136:	2302      	movs	r3, #2
    d138:	e047      	b.n	d1ca <__ssvfiscanf_r+0x1ca>
    d13a:	686b      	ldr	r3, [r5, #4]
    d13c:	2b00      	cmp	r3, #0
    d13e:	dd0e      	ble.n	d15e <__ssvfiscanf_r+0x15e>
    d140:	682b      	ldr	r3, [r5, #0]
    d142:	781a      	ldrb	r2, [r3, #0]
    d144:	42a2      	cmp	r2, r4
    d146:	d000      	beq.n	d14a <__ssvfiscanf_r+0x14a>
    d148:	e0bd      	b.n	d2c6 <__ssvfiscanf_r+0x2c6>
    d14a:	3301      	adds	r3, #1
    d14c:	686a      	ldr	r2, [r5, #4]
    d14e:	602b      	str	r3, [r5, #0]
    d150:	9b49      	ldr	r3, [sp, #292]	; 0x124
    d152:	3a01      	subs	r2, #1
    d154:	9301      	str	r3, [sp, #4]
    d156:	3301      	adds	r3, #1
    d158:	606a      	str	r2, [r5, #4]
    d15a:	9349      	str	r3, [sp, #292]	; 0x124
    d15c:	e797      	b.n	d08e <__ssvfiscanf_r+0x8e>
    d15e:	2186      	movs	r1, #134	; 0x86
    d160:	23c0      	movs	r3, #192	; 0xc0
    d162:	0049      	lsls	r1, r1, #1
    d164:	aa02      	add	r2, sp, #8
    d166:	1852      	adds	r2, r2, r1
    d168:	005b      	lsls	r3, r3, #1
    d16a:	58d3      	ldr	r3, [r2, r3]
    d16c:	1c38      	adds	r0, r7, #0
    d16e:	1c29      	adds	r1, r5, #0
    d170:	4798      	blx	r3
    d172:	2800      	cmp	r0, #0
    d174:	d0e4      	beq.n	d140 <__ssvfiscanf_r+0x140>
    d176:	9848      	ldr	r0, [sp, #288]	; 0x120
    d178:	2800      	cmp	r0, #0
    d17a:	d000      	beq.n	d17e <__ssvfiscanf_r+0x17e>
    d17c:	e09f      	b.n	d2be <__ssvfiscanf_r+0x2be>
    d17e:	3801      	subs	r0, #1
    d180:	e0a5      	b.n	d2ce <__ssvfiscanf_r+0x2ce>
    d182:	9b45      	ldr	r3, [sp, #276]	; 0x114
    d184:	9301      	str	r3, [sp, #4]
    d186:	2320      	movs	r3, #32
    d188:	9a01      	ldr	r2, [sp, #4]
    d18a:	4313      	orrs	r3, r2
    d18c:	9345      	str	r3, [sp, #276]	; 0x114
    d18e:	9b45      	ldr	r3, [sp, #276]	; 0x114
    d190:	9301      	str	r3, [sp, #4]
    d192:	2380      	movs	r3, #128	; 0x80
    d194:	9a01      	ldr	r2, [sp, #4]
    d196:	009b      	lsls	r3, r3, #2
    d198:	4313      	orrs	r3, r2
    d19a:	9345      	str	r3, [sp, #276]	; 0x114
    d19c:	2310      	movs	r3, #16
    d19e:	e002      	b.n	d1a6 <__ssvfiscanf_r+0x1a6>
    d1a0:	230a      	movs	r3, #10
    d1a2:	e000      	b.n	d1a6 <__ssvfiscanf_r+0x1a6>
    d1a4:	2308      	movs	r3, #8
    d1a6:	9346      	str	r3, [sp, #280]	; 0x118
    d1a8:	2304      	movs	r3, #4
    d1aa:	2c6e      	cmp	r4, #110	; 0x6e
    d1ac:	dc0d      	bgt.n	d1ca <__ssvfiscanf_r+0x1ca>
    d1ae:	2303      	movs	r3, #3
    d1b0:	e00b      	b.n	d1ca <__ssvfiscanf_r+0x1ca>
    d1b2:	1c31      	adds	r1, r6, #0
    d1b4:	a805      	add	r0, sp, #20
    d1b6:	f7fc fcf3 	bl	9ba0 <__sccl>
    d1ba:	9b45      	ldr	r3, [sp, #276]	; 0x114
    d1bc:	1c06      	adds	r6, r0, #0
    d1be:	9301      	str	r3, [sp, #4]
    d1c0:	2340      	movs	r3, #64	; 0x40
    d1c2:	9a01      	ldr	r2, [sp, #4]
    d1c4:	4313      	orrs	r3, r2
    d1c6:	9345      	str	r3, [sp, #276]	; 0x114
    d1c8:	2301      	movs	r3, #1
    d1ca:	934b      	str	r3, [sp, #300]	; 0x12c
    d1cc:	e01f      	b.n	d20e <__ssvfiscanf_r+0x20e>
    d1ce:	9b45      	ldr	r3, [sp, #276]	; 0x114
    d1d0:	9301      	str	r3, [sp, #4]
    d1d2:	2340      	movs	r3, #64	; 0x40
    d1d4:	9a01      	ldr	r2, [sp, #4]
    d1d6:	4313      	orrs	r3, r2
    d1d8:	9345      	str	r3, [sp, #276]	; 0x114
    d1da:	2300      	movs	r3, #0
    d1dc:	e7f5      	b.n	d1ca <__ssvfiscanf_r+0x1ca>
    d1de:	9945      	ldr	r1, [sp, #276]	; 0x114
    d1e0:	06cb      	lsls	r3, r1, #27
    d1e2:	d500      	bpl.n	d1e6 <__ssvfiscanf_r+0x1e6>
    d1e4:	e753      	b.n	d08e <__ssvfiscanf_r+0x8e>
    d1e6:	9b03      	ldr	r3, [sp, #12]
    d1e8:	9a49      	ldr	r2, [sp, #292]	; 0x124
    d1ea:	07c8      	lsls	r0, r1, #31
    d1ec:	d504      	bpl.n	d1f8 <__ssvfiscanf_r+0x1f8>
    d1ee:	1d19      	adds	r1, r3, #4
    d1f0:	9103      	str	r1, [sp, #12]
    d1f2:	681b      	ldr	r3, [r3, #0]
    d1f4:	801a      	strh	r2, [r3, #0]
    d1f6:	e74a      	b.n	d08e <__ssvfiscanf_r+0x8e>
    d1f8:	1d19      	adds	r1, r3, #4
    d1fa:	9103      	str	r1, [sp, #12]
    d1fc:	681b      	ldr	r3, [r3, #0]
    d1fe:	601a      	str	r2, [r3, #0]
    d200:	e745      	b.n	d08e <__ssvfiscanf_r+0x8e>
    d202:	2305      	movs	r3, #5
    d204:	e7e1      	b.n	d1ca <__ssvfiscanf_r+0x1ca>
    d206:	2303      	movs	r3, #3
    d208:	934b      	str	r3, [sp, #300]	; 0x12c
    d20a:	3307      	adds	r3, #7
    d20c:	9346      	str	r3, [sp, #280]	; 0x118
    d20e:	686b      	ldr	r3, [r5, #4]
    d210:	2b00      	cmp	r3, #0
    d212:	dd04      	ble.n	d21e <__ssvfiscanf_r+0x21e>
    d214:	9b45      	ldr	r3, [sp, #276]	; 0x114
    d216:	9301      	str	r3, [sp, #4]
    d218:	065b      	lsls	r3, r3, #25
    d21a:	d518      	bpl.n	d24e <__ssvfiscanf_r+0x24e>
    d21c:	e01f      	b.n	d25e <__ssvfiscanf_r+0x25e>
    d21e:	2186      	movs	r1, #134	; 0x86
    d220:	23c0      	movs	r3, #192	; 0xc0
    d222:	0049      	lsls	r1, r1, #1
    d224:	aa02      	add	r2, sp, #8
    d226:	1852      	adds	r2, r2, r1
    d228:	005b      	lsls	r3, r3, #1
    d22a:	58d3      	ldr	r3, [r2, r3]
    d22c:	1c38      	adds	r0, r7, #0
    d22e:	1c29      	adds	r1, r5, #0
    d230:	4798      	blx	r3
    d232:	2800      	cmp	r0, #0
    d234:	d0ee      	beq.n	d214 <__ssvfiscanf_r+0x214>
    d236:	e79e      	b.n	d176 <__ssvfiscanf_r+0x176>
    d238:	9a49      	ldr	r2, [sp, #292]	; 0x124
    d23a:	9201      	str	r2, [sp, #4]
    d23c:	3201      	adds	r2, #1
    d23e:	9249      	str	r2, [sp, #292]	; 0x124
    d240:	686a      	ldr	r2, [r5, #4]
    d242:	3a01      	subs	r2, #1
    d244:	606a      	str	r2, [r5, #4]
    d246:	2a00      	cmp	r2, #0
    d248:	dd13      	ble.n	d272 <__ssvfiscanf_r+0x272>
    d24a:	3301      	adds	r3, #1
    d24c:	602b      	str	r3, [r5, #0]
    d24e:	682b      	ldr	r3, [r5, #0]
    d250:	4924      	ldr	r1, [pc, #144]	; (d2e4 <__ssvfiscanf_r+0x2e4>)
    d252:	781a      	ldrb	r2, [r3, #0]
    d254:	6809      	ldr	r1, [r1, #0]
    d256:	188a      	adds	r2, r1, r2
    d258:	7852      	ldrb	r2, [r2, #1]
    d25a:	0712      	lsls	r2, r2, #28
    d25c:	d4ec      	bmi.n	d238 <__ssvfiscanf_r+0x238>
    d25e:	9b4b      	ldr	r3, [sp, #300]	; 0x12c
    d260:	2b02      	cmp	r3, #2
    d262:	dc13      	bgt.n	d28c <__ssvfiscanf_r+0x28c>
    d264:	1c38      	adds	r0, r7, #0
    d266:	a945      	add	r1, sp, #276	; 0x114
    d268:	1c2a      	adds	r2, r5, #0
    d26a:	ab03      	add	r3, sp, #12
    d26c:	f7fc fa86 	bl	977c <_scanf_chars>
    d270:	e01f      	b.n	d2b2 <__ssvfiscanf_r+0x2b2>
    d272:	2186      	movs	r1, #134	; 0x86
    d274:	23c0      	movs	r3, #192	; 0xc0
    d276:	0049      	lsls	r1, r1, #1
    d278:	aa02      	add	r2, sp, #8
    d27a:	1852      	adds	r2, r2, r1
    d27c:	005b      	lsls	r3, r3, #1
    d27e:	58d3      	ldr	r3, [r2, r3]
    d280:	1c38      	adds	r0, r7, #0
    d282:	1c29      	adds	r1, r5, #0
    d284:	4798      	blx	r3
    d286:	2800      	cmp	r0, #0
    d288:	d0e1      	beq.n	d24e <__ssvfiscanf_r+0x24e>
    d28a:	e774      	b.n	d176 <__ssvfiscanf_r+0x176>
    d28c:	2b04      	cmp	r3, #4
    d28e:	dc06      	bgt.n	d29e <__ssvfiscanf_r+0x29e>
    d290:	1c38      	adds	r0, r7, #0
    d292:	a945      	add	r1, sp, #276	; 0x114
    d294:	1c2a      	adds	r2, r5, #0
    d296:	ab03      	add	r3, sp, #12
    d298:	f7fc face 	bl	9838 <_scanf_i>
    d29c:	e009      	b.n	d2b2 <__ssvfiscanf_r+0x2b2>
    d29e:	4b13      	ldr	r3, [pc, #76]	; (d2ec <__ssvfiscanf_r+0x2ec>)
    d2a0:	2b00      	cmp	r3, #0
    d2a2:	d100      	bne.n	d2a6 <__ssvfiscanf_r+0x2a6>
    d2a4:	e6f3      	b.n	d08e <__ssvfiscanf_r+0x8e>
    d2a6:	1c38      	adds	r0, r7, #0
    d2a8:	a945      	add	r1, sp, #276	; 0x114
    d2aa:	1c2a      	adds	r2, r5, #0
    d2ac:	ab03      	add	r3, sp, #12
    d2ae:	f7fc f87b 	bl	93a8 <_scanf_float>
    d2b2:	2801      	cmp	r0, #1
    d2b4:	d007      	beq.n	d2c6 <__ssvfiscanf_r+0x2c6>
    d2b6:	2802      	cmp	r0, #2
    d2b8:	d000      	beq.n	d2bc <__ssvfiscanf_r+0x2bc>
    d2ba:	e6e8      	b.n	d08e <__ssvfiscanf_r+0x8e>
    d2bc:	e75b      	b.n	d176 <__ssvfiscanf_r+0x176>
    d2be:	89ab      	ldrh	r3, [r5, #12]
    d2c0:	065b      	lsls	r3, r3, #25
    d2c2:	d504      	bpl.n	d2ce <__ssvfiscanf_r+0x2ce>
    d2c4:	e001      	b.n	d2ca <__ssvfiscanf_r+0x2ca>
    d2c6:	9848      	ldr	r0, [sp, #288]	; 0x120
    d2c8:	e001      	b.n	d2ce <__ssvfiscanf_r+0x2ce>
    d2ca:	2001      	movs	r0, #1
    d2cc:	4240      	negs	r0, r0
    d2ce:	23a7      	movs	r3, #167	; 0xa7
    d2d0:	009b      	lsls	r3, r3, #2
    d2d2:	449d      	add	sp, r3
    d2d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    d2d6:	46c0      	nop			; (mov r8, r8)
    d2d8:	fffffd64 	.word	0xfffffd64
    d2dc:	0000cf49 	.word	0x0000cf49
    d2e0:	0000cfc3 	.word	0x0000cfc3
    d2e4:	20000138 	.word	0x20000138
    d2e8:	0000e38e 	.word	0x0000e38e
    d2ec:	000093a9 	.word	0x000093a9

0000d2f0 <_read_r>:
    d2f0:	b538      	push	{r3, r4, r5, lr}
    d2f2:	1c05      	adds	r5, r0, #0
    d2f4:	2000      	movs	r0, #0
    d2f6:	4c07      	ldr	r4, [pc, #28]	; (d314 <_read_r+0x24>)
    d2f8:	6020      	str	r0, [r4, #0]
    d2fa:	1c08      	adds	r0, r1, #0
    d2fc:	1c11      	adds	r1, r2, #0
    d2fe:	1c1a      	adds	r2, r3, #0
    d300:	f7f6 f9c2 	bl	3688 <_read>
    d304:	1c43      	adds	r3, r0, #1
    d306:	d103      	bne.n	d310 <_read_r+0x20>
    d308:	6823      	ldr	r3, [r4, #0]
    d30a:	2b00      	cmp	r3, #0
    d30c:	d000      	beq.n	d310 <_read_r+0x20>
    d30e:	602b      	str	r3, [r5, #0]
    d310:	bd38      	pop	{r3, r4, r5, pc}
    d312:	46c0      	nop			; (mov r8, r8)
    d314:	20004624 	.word	0x20004624

0000d318 <_malloc_usable_size_r>:
    d318:	1f0b      	subs	r3, r1, #4
    d31a:	681a      	ldr	r2, [r3, #0]
    d31c:	1f10      	subs	r0, r2, #4
    d31e:	2a00      	cmp	r2, #0
    d320:	da04      	bge.n	d32c <_malloc_usable_size_r+0x14>
    d322:	1889      	adds	r1, r1, r2
    d324:	3904      	subs	r1, #4
    d326:	680b      	ldr	r3, [r1, #0]
    d328:	18d0      	adds	r0, r2, r3
    d32a:	3804      	subs	r0, #4
    d32c:	4770      	bx	lr
	...

0000d330 <__gnu_thumb1_case_uqi>:
    d330:	b402      	push	{r1}
    d332:	4671      	mov	r1, lr
    d334:	0849      	lsrs	r1, r1, #1
    d336:	0049      	lsls	r1, r1, #1
    d338:	5c09      	ldrb	r1, [r1, r0]
    d33a:	0049      	lsls	r1, r1, #1
    d33c:	448e      	add	lr, r1
    d33e:	bc02      	pop	{r1}
    d340:	4770      	bx	lr
    d342:	46c0      	nop			; (mov r8, r8)
    d344:	454c4449 	.word	0x454c4449
    d348:	00000000 	.word	0x00000000
    d34c:	2d6a626f 	.word	0x2d6a626f
    d350:	6e69703e 	.word	0x6e69703e
    d354:	203d2120 	.word	0x203d2120
    d358:	6e695028 	.word	0x6e695028
    d35c:	656d614e 	.word	0x656d614e
    d360:	00434e29 	.word	0x00434e29
    d364:	2e2f2e2e 	.word	0x2e2f2e2e
    d368:	65626d2f 	.word	0x65626d2f
    d36c:	41542f64 	.word	0x41542f64
    d370:	54454752 	.word	0x54454752
    d374:	4d41535f 	.word	0x4d41535f
    d378:	47313252 	.word	0x47313252
    d37c:	2f413831 	.word	0x2f413831
    d380:	47524154 	.word	0x47524154
    d384:	415f5445 	.word	0x415f5445
    d388:	6c656d74 	.word	0x6c656d74
    d38c:	5241542f 	.word	0x5241542f
    d390:	5f544547 	.word	0x5f544547
    d394:	5f4d4153 	.word	0x5f4d4153
    d398:	74726f43 	.word	0x74726f43
    d39c:	304d7865 	.word	0x304d7865
    d3a0:	70672f50 	.word	0x70672f50
    d3a4:	6f5f6f69 	.word	0x6f5f6f69
    d3a8:	63656a62 	.word	0x63656a62
    d3ac:	00682e74 	.word	0x00682e74
    d3b0:	65746e69 	.word	0x65746e69
    d3b4:	6c616e72 	.word	0x6c616e72
    d3b8:	6f6c6320 	.word	0x6f6c6320
    d3bc:	63206b63 	.word	0x63206b63
    d3c0:	69666e6f 	.word	0x69666e6f
    d3c4:	000a0d67 	.word	0x000a0d67
    d3c8:	7774656e 	.word	0x7774656e
    d3cc:	206b726f 	.word	0x206b726f
    d3d0:	666e6f63 	.word	0x666e6f63
    d3d4:	0a0d6769 	.word	0x0a0d6769
    d3d8:	00000000 	.word	0x00000000
    d3dc:	0a0d0a0d 	.word	0x0a0d0a0d
    d3e0:	2a2a2a2a 	.word	0x2a2a2a2a
    d3e4:	2a2a2a2a 	.word	0x2a2a2a2a
    d3e8:	2a2a2a2a 	.word	0x2a2a2a2a
    d3ec:	2a2a2a2a 	.word	0x2a2a2a2a
    d3f0:	2a2a2a2a 	.word	0x2a2a2a2a
    d3f4:	2a2a2a2a 	.word	0x2a2a2a2a
    d3f8:	2a2a2a2a 	.word	0x2a2a2a2a
    d3fc:	2a2a2a2a 	.word	0x2a2a2a2a
    d400:	2a2a2a2a 	.word	0x2a2a2a2a
    d404:	2a2a2a2a 	.word	0x2a2a2a2a
    d408:	2a2a2a2a 	.word	0x2a2a2a2a
    d40c:	2a2a2a2a 	.word	0x2a2a2a2a
    d410:	2a2a2a2a 	.word	0x2a2a2a2a
    d414:	2a2a2a2a 	.word	0x2a2a2a2a
    d418:	2a2a2a2a 	.word	0x2a2a2a2a
    d41c:	2a2a2a2a 	.word	0x2a2a2a2a
    d420:	2a2a2a2a 	.word	0x2a2a2a2a
    d424:	0a0d2a2a 	.word	0x0a0d2a2a
    d428:	00000000 	.word	0x00000000
    d42c:	6b636974 	.word	0x6b636974
    d430:	6d697420 	.word	0x6d697420
    d434:	25203a65 	.word	0x25203a65
    d438:	6d20756c 	.word	0x6d20756c
    d43c:	000a0d73 	.word	0x000a0d73
    d440:	76616c53 	.word	0x76616c53
    d444:	6c432065 	.word	0x6c432065
    d448:	206b636f 	.word	0x206b636f
    d44c:	00000a0d 	.word	0x00000a0d
    d450:	20646e65 	.word	0x20646e65
    d454:	666e6f63 	.word	0x666e6f63
    d458:	61206769 	.word	0x61206769
    d45c:	696c7070 	.word	0x696c7070
    d460:	69746163 	.word	0x69746163
    d464:	62206e6f 	.word	0x62206e6f
    d468:	6e696765 	.word	0x6e696765
    d46c:	00000a0d 	.word	0x00000a0d
    d470:	2a2a0a0d 	.word	0x2a2a0a0d
    d474:	2a2a2a2a 	.word	0x2a2a2a2a
    d478:	2a2a2a2a 	.word	0x2a2a2a2a
    d47c:	2a2a2a2a 	.word	0x2a2a2a2a
    d480:	2a2a2a2a 	.word	0x2a2a2a2a
    d484:	2a2a2a2a 	.word	0x2a2a2a2a
    d488:	2a2a2a2a 	.word	0x2a2a2a2a
    d48c:	2a2a2a2a 	.word	0x2a2a2a2a
    d490:	2a2a2a2a 	.word	0x2a2a2a2a
    d494:	2a2a2a2a 	.word	0x2a2a2a2a
    d498:	2a2a2a2a 	.word	0x2a2a2a2a
    d49c:	2a2a2a2a 	.word	0x2a2a2a2a
    d4a0:	2a2a2a2a 	.word	0x2a2a2a2a
    d4a4:	2a2a2a2a 	.word	0x2a2a2a2a
    d4a8:	2a2a2a2a 	.word	0x2a2a2a2a
    d4ac:	2a2a2a2a 	.word	0x2a2a2a2a
    d4b0:	2a2a2a2a 	.word	0x2a2a2a2a
    d4b4:	2a2a2a2a 	.word	0x2a2a2a2a
    d4b8:	000d0a0d 	.word	0x000d0a0d
    d4bc:	70617274 	.word	0x70617274
    d4c0:	21212121 	.word	0x21212121
    d4c4:	21212121 	.word	0x21212121
    d4c8:	21212121 	.word	0x21212121
    d4cc:	21212121 	.word	0x21212121
    d4d0:	21212121 	.word	0x21212121
    d4d4:	21212121 	.word	0x21212121
    d4d8:	21212121 	.word	0x21212121
    d4dc:	21212121 	.word	0x21212121
    d4e0:	21212121 	.word	0x21212121
    d4e4:	21212121 	.word	0x21212121
    d4e8:	0a0d2121 	.word	0x0a0d2121
    d4ec:	00000000 	.word	0x00000000
    d4f0:	000021a8 	.word	0x000021a8
    d4f4:	000021c8 	.word	0x000021c8
    d4f8:	000021b8 	.word	0x000021b8
    d4fc:	000021e8 	.word	0x000021e8
    d500:	000021d8 	.word	0x000021d8
    d504:	000021f8 	.word	0x000021f8
    d508:	000023ee 	.word	0x000023ee
    d50c:	000024b6 	.word	0x000024b6
    d510:	00002410 	.word	0x00002410
    d514:	00002456 	.word	0x00002456
    d518:	00002438 	.word	0x00002438
    d51c:	00002460 	.word	0x00002460
    d520:	00002474 	.word	0x00002474
    d524:	00002488 	.word	0x00002488
    d528:	000024a8 	.word	0x000024a8

0000d52c <_ZZN8cMxRadio15radio_set_paramE17radio_attribute_t13radio_param_tE8pwrtable>:
    d52c:	0f0f0f0f 0e0e0e0f 0c0c0d0d 08090a0b     ................
    d53c:	02040607 00000000 6e72656b 63206c65     ........kernel c
    d54c:	69666e6f 000a0d67 00494d48 656d6974     onfig...HMI.time
    d55c:	00000000 72650909 20726f72 3a737070     ......error pps:
    d56c:	756c2520 75252073 253a7409 0073756c      %lus %u.t:%lus.
    d57c:	72650909 20726f72 3a737070 6c252d20     ..error pps: -%l
    d58c:	25207375 3a740975 73756c25 00000000     us %u.t:%lus....
    d59c:	666e6f63 70206669 0a0d7370 00000000     confif pps......
    d5ac:	0000313e 00002ee4 0000313e 00002fa2     >1......>1.../..
    d5bc:	00003148 00003148 00002ea4 666f5309     H1..H1.......Sof
    d5cc:	72617774 6f432065 63657272 6e6f6974     tware Correction
    d5dc:	00000020 70750909 65746164 6d697420      .....update tim
    d5ec:	6f632065 203a7272 25286425 73202964     e corr: %d(%d) s
    d5fc:	206e6769 6425203a 74697720 64252068     ign : %d with %d
    d60c:	6d617320 00656c70 646e6509 666f5320      sample..end Sof
    d61c:	72617774 6f632065 63657272 6e6f6974     tware correction
    d62c:	00000000 72614809 72617764 6f632065     .....Hardware co
    d63c:	63657272 6e6f6974 00000000 62460909     rrection......Fb
    d64c:	3a747365 20752520 202c7a48 65737546     est: %u Hz, Fuse
    d65c:	7525203d 207a4820 6e756f63 64253d74     = %u Hz count=%d
    d66c:	00000000 646e6509 726f6320 74636572     .....end correct
    d67c:	006e6f69 20756c25 75252c73 00000a0d     ion.%lu s,%u....
    d68c:	756c252d 252c7320 000a0d75 70750909     -%lu s,%u.....up
    d69c:	65746164 6f6c6320 6f206b63 65736666     date clock offse
    d6ac:	2b203a74 73756c25 646c252c 6c252b5b     t: +%lus,%ld[+%l
    d6bc:	252c7375 6d20756c 257e2c73 7520756c     us,%lu ms,~%lu u
    d6cc:	74095d73 6c25203a 6c252c75 00000075     s].t: %lu,%lu...
    d6dc:	70750909 65746164 6f6c6320 6f206b63     ..update clock o
    d6ec:	65736666 2d203a74 73756c25 646c252c     ffset: -%lus,%ld
    d6fc:	6c252d5b 252c7375 736d756c 6c257e2c     [-%lus,%lums,~%l
    d70c:	73752075 3a74095d 756c2520 756c252c     u us].t: %lu,%lu
    d71c:	00000000 63726309 646d6320 6e657320     .....crc cmd sen
    d72c:	00000064 6c656409 72207961 65757165     d....delay reque
    d73c:	73207473 00646e65 4e524157 20474e49     st send.WARNING 
    d74c:	454d4954 2054554f 69727261 00646576     TIMEOUT arrived.
    d75c:	4f525245 6e692052 72726f63 20746365     ERROR incorrect 
    d76c:	74617473 00000065 4f525245 52432052     state...ERROR CR
    d77c:	00000043 43524309 646d6320 63657220     C....CRC cmd rec
    d78c:	65766965 00000000 6e797309 65722063     eive.....sync re
    d79c:	76696563 00000065 65727265 63207275     ceive...erreur c
    d7ac:	00006372 4f525245 79732052 7220636e     rc..ERROR sync r
    d7bc:	69656365 62206576 69207475 6874206e     eceive but in th
    d7cc:	72772065 20676e6f 74617473 00000065     e wrong state...
    d7dc:	6c656409 72207961 6f707365 2065736e     .delay response 
    d7ec:	65636572 00657669 70750909 65746164     receive...update
    d7fc:	6c656420 203a7961 756c252b 75252c73      delay: +%lus,%u
    d80c:	2c736d20 756c257e 00737520 70750909      ms,~%lu us...up
    d81c:	65746164 6c656420 203a7961 756c252d     date delay: -%lu
    d82c:	75252c73 2c736d20 756c257e 00737520     s,%u ms,~%lu us.
    d83c:	6c656409 72207961 6f707365 2065736e     .delay response 
    d84c:	706d6f63 6574656c 00000064 6c656409     completed....del
    d85c:	72207961 6f707365 2065736e 20746f6e     ay response not 
    d86c:	20726f66 0000656d 4f525245 65642052     for me..ERROR de
    d87c:	2079616c 70736572 65736e6f 63657220     lay response rec
    d88c:	65766965 74756220 6f727720 7320676e     eive but wrong s
    d89c:	65746174 00000020 72724509 20727565     tate ....Erreur 
    d8ac:	65707974 6b6e7520 00776f6e 666e6f63     type unknow.conf
    d8bc:	48206769 0d20494d 0000000a              ig HMI .....

0000d8c8 <__stdin_name>:
    d8c8:	6474732f 00006e69                       /stdin..

0000d8d0 <__stderr_name>:
    d8d0:	6474732f 00727265                       /stderr.

0000d8d8 <__stdout_name>:
    d8d8:	6474732f 0074756f                       /stdout.

0000d8e0 <_ZTVN4mbed10FileHandleE>:
	...
    d8e8:	00003741 00003741 00003741 00003741     A7..A7..A7..A7..
    d8f8:	00003741 00003741 00003495 00000000     A7..A7...4......
    d908:	00000000 0070253a 65637845 6f697470     ....:%p.Exceptio
    d918:	0000006e                                n...

0000d91c <CSWTCH.41>:
    d91c:	00100000 00200000 00300000 006a626f     ...... ...0.obj.
    d92c:	4a5c3a43 696b6e65 775c736e 736b726f     C:\Jenkins\works
    d93c:	65636170 65626d5c 2d322d64 6c697562     pace\mbed-2-buil
    d94c:	696c2d64 72617262 61685c79 61745c6c     d-library\hal\ta
    d95c:	74656772 61685c73 41545c6c 54454752     rgets\hal\TARGET
    d96c:	6d74415f 545c6c65 45475241 41535f54     _Atmel\TARGET_SA
    d97c:	6f435f4d 78657472 5c50304d 69726573     M_CortexM0P\seri
    d98c:	615f6c61 632e6970 00000000 75616228     al_api.c....(bau
    d99c:	74617264 3d3d2065 30313120 7c7c2029     drate == 110) ||
    d9ac:	61622820 61726475 3d206574 3531203d      (baudrate == 15
    d9bc:	7c202930 6228207c 72647561 20657461     0) || (baudrate 
    d9cc:	33203d3d 20293030 28207c7c 64756162     == 300) || (baud
    d9dc:	65746172 203d3d20 30303231 7c7c2029     rate == 1200) ||
    d9ec:	61622820 61726475 3d206574 3432203d      (baudrate == 24
    d9fc:	20293030 28207c7c 64756162 65746172     00) || (baudrate
    da0c:	203d3d20 30303834 7c7c2029 61622820      == 4800) || (ba
    da1c:	61726475 3d206574 3639203d 20293030     udrate == 9600) 
    da2c:	28207c7c 64756162 65746172 203d3d20     || (baudrate == 
    da3c:	30323931 7c202930 6228207c 72647561     19200) || (baudr
    da4c:	20657461 33203d3d 30303438 7c7c2029     ate == 38400) ||
    da5c:	61622820 61726475 3d206574 3735203d      (baudrate == 57
    da6c:	29303036 207c7c20 75616228 74617264     600) || (baudrat
    da7c:	3d3d2065 35313120 29303032 207c7c20     e == 115200) || 
    da8c:	75616228 74617264 3d3d2065 30333220     (baudrate == 230
    da9c:	29303034 207c7c20 75616228 74617264     400) || (baudrat
    daac:	3d3d2065 30363420 29303038 207c7c20     e == 460800) || 
    dabc:	75616228 74617264 3d3d2065 31323920     (baudrate == 921
    dacc:	29303036 00000000 6f747328 69625f70     600)....(stop_bi
    dadc:	3d207374 2931203d 207c7c20 6f747328     ts == 1) || (sto
    daec:	69625f70 3d207374 2932203d 00000000     p_bits == 2)....
    dafc:	72617028 20797469 50203d3d 74697261     (parity == Parit
    db0c:	6e6f4e79 7c202965 7028207c 74697261     yNone) || (parit
    db1c:	3d3d2079 72615020 4f797469 20296464     y == ParityOdd) 
    db2c:	28207c7c 69726170 3d207974 6150203d     || (parity == Pa
    db3c:	79746972 6e657645 00000029 74616428     rityEven)...(dat
    db4c:	69625f61 3d207374 2935203d 207c7c20     a_bits == 5) || 
    db5c:	74616428 69625f61 3d207374 2936203d     (data_bits == 6)
    db6c:	207c7c20 74616428 69625f61 3d207374      || (data_bits =
    db7c:	2937203d 207c7c20 74616428 69625f61     = 7) || (data_bi
    db8c:	3d207374 2938203d 00000000 21207874     ts == 8)....tx !
    db9c:	7628203d 2a64696f 00003029 74646977     = (void*)0..widt
    dbac:	3d3d2068 00003820 21207872 7628203d     h == 8..rx != (v
    dbbc:	2a64696f 00003029 00000000              oid*)0......

0000dbc8 <_ZTVN4mbed3SPIE>:
	...
    dbd0:	0000446d 000042fd 0000432d 00000000     mD...B..-C......

0000dbe0 <_ZTVN4mbed6SerialE>:
	...
    dbe8:	000032a5 000033b1 00004481 00004499     .2...3...D...D..
    dbf8:	ffffff24 00000000 00004611 0000460d     $........F...F..
    dc08:	0000463d 0000466d 00004669 00004671     =F..mF..iF..qF..
    dc18:	00004675 000032cd 000033e5 000044a1     uF...2...3...D..
    dc28:	00004489 ffffff20 00000000 000032dd     .D.. ........2..
    dc38:	000033f5 00000000                       .3......

0000dc40 <_ZTVN4mbed10SerialBaseE>:
	...
    dc48:	000032a1 000032ed                       .2...2..

0000dc50 <_ZTVN4mbed6StreamE>:
	...
    dc58:	00004611 0000460d 0000463d 0000466d     .F...F..=F..mF..
    dc68:	00004669 00004671 00004675 00000000     iF..qF..uF......
    dc78:	00000000 00003741 00003741 fffffffc     ....A7..A7......
	...
    dc94:	00002b77 6465626d 73736120 61747265     w+..mbed asserta
    dca4:	6e6f6974 69616620 3a64656c 2c732520     tion failed: %s,
    dcb4:	6c696620 25203a65 6c202c73 20656e69      file: %s, line 
    dcc4:	0a206425 00000000 4a5c3a43 696b6e65     %d .....C:\Jenki
    dcd4:	775c736e 736b726f 65636170 65626d5c     ns\workspace\mbe
    dce4:	2d322d64 6c697562 696c2d64 72617262     d-2-build-librar
    dcf4:	622e5c79 646c6975 65626d5c 41545c64     y\.build\mbed\TA
    dd04:	54454752 4d41535f 47313252 5c413831     RGET_SAMR21G18A\
    dd14:	47524154 415f5445 6c656d74 5241545c     TARGET_Atmel\TAR
    dd24:	5f544547 5f4d4153 74726f43 304d7865     GET_SAM_CortexM0
    dd34:	70672f50 6f5f6f69 63656a62 00682e74     P/gpio_object.h.
    dd44:	6c756f63 6f6e2064 69702074 74756f6e     could not pinout
    dd54:	00000000 6d6e6970 6d207061 6d2d7369     ....pinmap mis-m
    dd64:	68637461 00000000 6d6e6970 6e207061     atch....pinmap n
    dd74:	6620746f 646e756f 726f6620 72657020     ot found for per
    dd84:	65687069 006c6172 6d6e6970 6e207061     ipheral.pinmap n
    dd94:	6620746f 646e756f 726f6620 6e756620     ot found for fun
    dda4:	6f697463 0000006e                       ction...

0000ddac <PinMap_SERCOM_PADEx>:
    ddac:	00000008 00000002 00000003 00000009     ................
    ddbc:	00000012 00000003 00000010 00000003     ................
    ddcc:	00000003 00000011 00000013 00000003     ................
    dddc:	00000012 00000023 00000003 00000013     ....#...........
    ddec:	00000033 00000003 00000016 00000005     3...............
    ddfc:	00000003 00000017 00000015 00000003     ................
    de0c:	00000018 00000025 00000003 00000019     ....%...........
    de1c:	00000035 00000003 000000ff ffffffff     5...............
    de2c:	ffffffff                                ....

0000de30 <PinMap_SERCOM_PAD>:
    de30:	00000000 00000001 00000003 00000001     ................
    de40:	00000011 00000003 00000004 00000000     ................
    de50:	00000003 00000005 00000010 00000003     ................
    de60:	00000006 00000020 00000003 00000007     .... ...........
    de70:	00000030 00000003 00000008 00000000     0...............
    de80:	00000002 00000009 00000010 00000002     ................
    de90:	0000000c 00000002 00000002 0000000d     ................
    dea0:	00000012 00000002 0000000e 00000022     ............"...
    deb0:	00000002 0000000f 00000032 00000002     ........2.......
    dec0:	00000010 00000001 00000002 00000011     ................
    ded0:	00000011 00000002 00000012 00000021     ............!...
    dee0:	00000002 00000013 00000031 00000002     ........1.......
    def0:	00000016 00000003 00000002 00000017     ................
    df00:	00000013 00000002 00000018 00000023     ............#...
    df10:	00000002 00000019 00000033 00000002     ........3.......
    df20:	0000001b 00000003 00000005 0000001c     ................
    df30:	00000013 00000005 0000001e 00000021     ............!...
    df40:	00000003 0000001f 00000031 00000003     ........1.......
    df50:	00000022 00000005 00000003 00000023     "...........#...
    df60:	00000015 00000003 00000036 00000025     ........6...%...
    df70:	00000003 00000037 00000035 00000003     ....7...5.......
    df80:	0000003e 00000024 00000005 0000003f     >...$.......?...
    df90:	00000014 00000005 00000052 00000034     ........R...4...
    dfa0:	00000005 00000053 00000004 00000005     ....S...........
    dfb0:	000000ff ffffffff ffffffff 42000800     ...............B
    dfc0:	42000c00 42001000 42001400 42001800     ...B...B...B...B
    dfd0:	42001c00 00004a80 00004a98 00004a98     ...B.J...J...J..
    dfe0:	00004a46 00004a46 00004a4c 00004a52     FJ..FJ..LJ..RJ..
    dff0:	00004a62 00004a86 00004b3c 00004b4a     bJ...J..<K..JK..
    e000:	00004b4a 00004ace 00004ad2 00004ae0     JK...J...J...J..
    e010:	00004aee 00004afc 00004b2c 206e6970     .J...J..,K..pin 
    e020:	28203d21 4e6e6950 29656d61 0000434e     != (PinName)NC..
    e030:	4a5c3a43 696b6e65 775c736e 736b726f     C:\Jenkins\works
    e040:	65636170 65626d5c 2d322d64 6c697562     pace\mbed-2-buil
    e050:	696c2d64 72617262 61685c79 61745c6c     d-library\hal\ta
    e060:	74656772 61685c73 41545c6c 54454752     rgets\hal\TARGET
    e070:	6d74415f 545c6c65 45475241 41535f54     _Atmel\TARGET_SA
    e080:	6f435f4d 78657472 5c50304d 6f697067     M_CortexM0P\gpio
    e090:	6970615f 0000632e 4a5c3a43 696b6e65     _api.c..C:\Jenki
    e0a0:	775c736e 736b726f 65636170 65626d5c     ns\workspace\mbe
    e0b0:	2d322d64 6c697562 696c2d64 72617262     d-2-build-librar
    e0c0:	61685c79 61745c6c 74656772 61685c73     y\hal\targets\ha
    e0d0:	41545c6c 54454752 6d74415f 545c6c65     l\TARGET_Atmel\T
    e0e0:	45475241 41535f54 6f435f4d 78657472     ARGET_SAM_Cortex
    e0f0:	5c50304d 6d6e6970 632e7061 00000000     M0P\pinmap.c....
    e100:	74726f70 00000000 42000800 42000c00     port.......B...B
    e110:	42001000 42001400 42001800 42001c00     ...B...B...B...B
    e120:	6c637963 705f7365 755f7265 203e2073     cycles_per_us > 
    e130:	00000030 4a5c3a43 696b6e65 775c736e     0...C:\Jenkins\w
    e140:	736b726f 65636170 65626d5c 2d322d64     orkspace\mbed-2-
    e150:	6c697562 696c2d64 72617262 61685c79     build-library\ha
    e160:	61745c6c 74656772 61685c73 41545c6c     l\targets\hal\TA
    e170:	54454752 6d74415f 545c6c65 45475241     RGET_Atmel\TARGE
    e180:	41535f54 6f435f4d 78657472 5c50304d     T_SAM_CortexM0P\
    e190:	745f7375 656b6369 00632e72 75646f6d     us_ticker.c.modu
    e1a0:	0000656c                                le..

0000e1a4 <tc_interrupt_vectors.12802>:
    e1a4:	00141312 4a5c3a43 696b6e65 775c736e     ....C:\Jenkins\w
    e1b4:	736b726f 65636170 65626d5c 2d322d64     orkspace\mbed-2-
    e1c4:	6c697562 696c2d64 72617262 61685c79     build-library\ha
    e1d4:	61745c6c 74656772 61685c73 41545c6c     l\targets\hal\TA
    e1e4:	54454752 6d74415f 545c6c65 45475241     RGET_Atmel\TARGE
    e1f4:	41535f54 6f435f4d 78657472 5c50304d     T_SAM_CortexM0P\
    e204:	5f697073 2e697061 00000063 6b6c6373     spi_api.c...sclk
    e214:	203d2120 0000434e 00000000               != NC......

0000e220 <_ZTVN4mbed8FileBaseE>:
	...
    e228:	00005831 00005865                       1X..eX..

0000e230 <_ZTVN4mbed8FileLikeE>:
	...
    e238:	00003741 00003741 00003741 00003741     A7..A7..A7..A7..
    e248:	00003741 00003741 00003495 00000000     A7..A7...4......
    e258:	00000000 fffffffc 00000000 00000000     ................
    e268:	00000000                                ....

0000e26c <us_interface>:
    e26c:	00005155 00005169 000051f1 00005215     UQ..iQ...Q...R..
    e27c:	00005189                                .Q..

0000e280 <us_data>:
    e280:	0000e26c 20004560 42002c00 42003000     l...`E. .,.B.0.B
    e290:	42003400 001c1c1b 10000800 00002000     .4.B......... ..
    e2a0:	00006a38 00006926 00006a0c 00006912     8j..&i...j...i..
    e2b0:	00006a0c 00006a16 00006a0c 00006912     .j...j...j...i..
    e2c0:	00006926 00006926 00006a16 00006912     &i..&i...j...i..
    e2d0:	0000691c 0000691c 0000691c 00006c7e     .i...i...i..~l..
    e2e0:	000072cc 000072aa 000072aa 0000729e     .r...r...r...r..
    e2f0:	00007192 00007192 00007292 0000729e     .q...q...r...r..
    e300:	00007192 00007292 00007192 0000729e     .q...r...q...r..
    e310:	00007196 00007196 00007196 000074ac     .q...q...q...t..

0000e320 <__sf_fake_stdin>:
	...

0000e340 <__sf_fake_stdout>:
	...

0000e360 <__sf_fake_stderr>:
	...
    e380:	00000043                                C...

0000e384 <_global_impure_ptr>:
    e384:	200000d4 2b302d23 6c680020 6665004c     ... #-0+ .hlL.ef
    e394:	47464567 464e4900 666e6900 4e414e00     gEFG.INF.inf.NAN
    e3a4:	6e616e00 32313000 36353433 41393837     .nan.0123456789A
    e3b4:	45444342 31300046 35343332 39383736     BCDEF.0123456789
    e3c4:	64636261 65006665 00646c25 0000e3ee     abcdef.e%ld.....
    e3d4:	0000e3f1 0000e3f4 61462d41 3938662d     ........A-Fa-f89
    e3e4:	33323130 37363534 2d2b005d 00303000     01234567].+-.00.
    e3f4:	00005878                                xX..

0000e3f8 <fpinan.5315>:
    e3f8:	00000034 fffffbce 000003cb 00000001     4...............
	...

0000e410 <tinytens>:
    e410:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
    e420:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
    e430:	64ac6f43 11680628                       Co.d(.h.

0000e438 <fpi.5279>:
    e438:	00000035 fffffbce 000003cb 00000001     5...............
    e448:	00000000                                ....

0000e44c <_ctype_>:
    e44c:	20202000 20202020 28282020 20282828     .         ((((( 
    e45c:	20202020 20202020 20202020 20202020                     
    e46c:	10108820 10101010 10101010 10101010      ...............
    e47c:	04040410 04040404 10040404 10101010     ................
    e48c:	41411010 41414141 01010101 01010101     ..AAAAAA........
    e49c:	01010101 01010101 01010101 10101010     ................
    e4ac:	42421010 42424242 02020202 02020202     ..BBBBBB........
    e4bc:	02020202 02020202 02020202 10101010     ................
    e4cc:	00000020 00000000 00000000 00000000      ...............
	...
    e54c:	666e4900 74696e69 614e0079 4f50004e     .Infinity.NaN.PO
    e55c:	00584953 0000002e 00000000              SIX.........

0000e568 <__mprec_tens>:
    e568:	00000000 3ff00000 00000000 40240000     .......?......$@
    e578:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
    e588:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
    e598:	00000000 412e8480 00000000 416312d0     .......A......cA
    e5a8:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
    e5b8:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
    e5c8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
    e5d8:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
    e5e8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
    e5f8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
    e608:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
    e618:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
    e628:	79d99db4 44ea7843                       ...yCx.D

0000e630 <__mprec_bigtens>:
    e630:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
    e640:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
    e650:	7f73bf3c 75154fdd                       <.s..O.u

0000e658 <p05.5314>:
    e658:	00000005 00000019 0000007d              ........}...

0000e664 <_init>:
    e664:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    e666:	46c0      	nop			; (mov r8, r8)
    e668:	bcf8      	pop	{r3, r4, r5, r6, r7}
    e66a:	bc08      	pop	{r3}
    e66c:	469e      	mov	lr, r3
    e66e:	4770      	bx	lr

0000e670 <__init_array_start>:
    e670:	000000dd 	.word	0x000000dd
    e674:	00001701 	.word	0x00001701
    e678:	000018e1 	.word	0x000018e1
    e67c:	00003405 	.word	0x00003405

0000e680 <_fini>:
    e680:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    e682:	46c0      	nop			; (mov r8, r8)
    e684:	bcf8      	pop	{r3, r4, r5, r6, r7}
    e686:	bc08      	pop	{r3}
    e688:	469e      	mov	lr, r3
    e68a:	4770      	bx	lr

0000e68c <__fini_array_start>:
    e68c:	000000b5 	.word	0x000000b5
